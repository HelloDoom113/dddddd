(function () {
  var v2 = 214;
  if (v2 === 4) {
    v2 = 136;
  }
  var v3 = 37;
  Math.floor(193[193 .ΔⵠΔΔⲆᐃⲆ]);
  Math.floor(228[228 .ΔⲆⵠΔⵠⵠⲆⲆΔ]);
  var v4 = 211;
  if (v4 > 14) {
    v4 = 250;
  }
  Math.floor(20[20 .ᐃΔᐃⲆᐃᐃⵠᐃΔ]);
  var v5 = 221;
  if (v5 == 12) {
    v5 = 158;
  }
  var v6 = 226;
  if (v6 > 12) {
    v6 = 50;
  }
  var v7 = 169;
  if (v7 == 6) {
    v7 = 89;
  }
  var v8 = 176;
  if (v8 === 0) {
    v8 = 193;
  }
  var v9 = 226;
  if (v9 > 8) {
    v9 = 152;
  }
  var v10 = 173;
  if (v10 > 8) {
    v10 = 165;
  }
  var v11 = 221;
  if (v11 == 6) {
    v11 = 112;
  }
  var v12 = 186;
  if (v12 == 12) {
    v12 = 33;
  }
  if (v3 === 10) {
    v3 = 219;
  }
  var v13 = 157;
  if (v13 === 10) {
    v13 = 90;
  }
  var v14 = 210;
  if (v14 >= 5) {
    v14 = 183;
  }
  var v15 = 201;
  if (v15 === 1) {
    v15 = 19;
  }
  var v16 = 161;
  if (v16 == 0) {
    v16 = 51;
  }
  var v17 = 235;
  if (v17 > 2) {
    v17 = 167;
  }
  Math.floor(251[251 .ⵠΔᐃⲆΔᐃⵠ]);
  const vWindow = window;
  let v18 = 154;
  const vF = function (p2) {
    let v19 = "";
    for (let v20 = 0; v20 < p2.length; v20++) {
      v19 += vWindow.String.fromCharCode(p2[v20] ^ v18++ % 255);
    }
    return v19;
  };
  var v21 = 149;
  if (v21 >= 8) {
    v21 = 67;
  }
  var v22 = 61;
  Math.floor(98[98 .ⵠⵠΔⲆⵠΔΔΔᐃ]);
  var v23 = 5;
  if (v23 >= 8) {
    v23 = 205;
  }
  if (v22 >= 5) {
    v22 = 25;
  }
  ⲆΔⲆᐃⲆᐃΔ = [[255, 223, 217, 160], [196, 173, 246, 145, 247, 206, 242, 223, 197, 224, 145, 220, 201, 153, 250, 228, 244, 248, 246, 218, 232, 235, 253, 136], [213, 218, 238, 195, 217, 252, 133, 200, 221, 141, 150, 148, 152, 155, 172, 245], [156, 128, 241, 250, 168, 172, 241, 240], [151, 252, 134, 168, 177, 225, 237, 172], [181, 229, 158, 235, 128, 138, 225, 224], [138, 237, 170, 144, 184, 180, 170, 213], [188, 213, 144, 159, 179, 134, 170, 158, 191, 184, 136, 134, 147, 180, 177, 200], [175, 197, 144, 145, 153, 144, 178, 139, 164, 71, 87, 64, 103, 69, 56, 59], [93, 58, 95, 58, 90, 62, 52, 123, 107, 87, 71, 38, 119, 85, 40, 43], [78, 42, 32, 111, 121, 113, 75, 116, 123, 103, 119, 73], [122, 115, 107, 22, 70, 112, 115, 70], [79, 30, 69, 94, 118, 2, 86, 15], [87, 108, 123, 90, 84, 83, 65, 82, 89, 81, 89, 15, 102, 23, 37, 46], [25, 12, 15, 46, 35, 120, 37, 62, 18, 27, 41, 34], [45, 98, 100, 33, 49, 102, 19, 61], [13, 0, 49, 45, 57, 111, 23, 110, 60, 23, 92, 95], [0, 86, 51, 86, 51, 63, 5, 25, 9, 43, 1, 20, 53, 39, 63, 4, 17, 25, 39, 12], [36, 47, 72, 18, 33, 78, 40, 67], [30, 215, 176, 234, 217, 182, 211, 213, 221, 223, 188, 225, 209, 212, 199, 254, 237, 253, 242, 175], [202, 166, 253, 254, 244, 243, 215, 236, 193, 219, 200, 163], [251, 146, 231, 210, 199, 227, 201, 211, 253, 223, 148, 151], [207, 235, 251, 154, 203, 245, 247, 193, 210, 227, 209, 195], [212, 240, 243, 214, 223, 209, 235, 203, 219, 133, 147, 174, 153, 169, 131, 247, 165, 128, 152, 247], [168, 254, 165, 190, 149, 190, 128, 239], [183, 185, 147, 165, 179, 143, 140, 231], [184, 148, 151, 178, 133, 141, 141, 214], [186, 138, 179, 139, 189, 133, 191, 147], [178, 222, 212, 155, 182, 194, 183, 194], [145, 198, 192, 154, 148, 150, 179, 140, 152, 155, 192, 195], [89, 51, 122, 111, 93, 93, 76, 82, 105, 94, 59, 103, 110, 62, 88, 63], [115, 34, 80, 96, 117, 66, 88, 123], [121, 81, 80, 119, 70, 122, 35, 34], [67, 19, 116, 19, 114, 98, 74, 83, 114, 126, 19, 26, 72, 108, 19, 18], [99, 93, 124, 99, 96, 82, 11, 10], [97, 97, 104, 77, 101, 90, 3, 2], [37, 0, 127, 126], [39, 118, 16, 46, 17, 17, 0, 50, 21, 21, 37, 114], [50, 99, 102, 110], [54, 18, 58, 34, 2, 15, 8, 45], [6, 26, 8, 54, 4, 54, 1, 94], [7, 34, 32, 30, 11, 91, 60, 33, 14, 3, 63, 82], [17, 54, 36, 3, 46, 71, 30, 71], [34, 33, 18, 12, 29, 37, 52, 19, 227, 246, 191, 190], [231, 182, 212, 239, 236, 206, 223, 182], [232, 190, 196, 255, 244, 214, 199, 174], [247, 242, 171, 170], [251, 244, 204, 225, 198, 197, 207, 162], [195, 230, 206, 214, 254, 210, 155, 154], [203, 154, 248, 210, 206, 159, 218, 195, 230, 246, 228, 135, 208, 244, 139, 138], [218, 254, 131, 209, 221, 143, 232, 212], [165, 149, 139, 254], [165, 146, 243, 178, 146, 145, 128, 147, 173, 154, 156, 255, 177, 144, 239, 238], [183, 146, 239, 173, 185, 129, 136, 171, 190, 239, 234, 226], [131, 166, 154, 139, 129, 180, 219, 218], [178, 132, 134, 152, 136, 170, 184, 150], [147, 156, 164, 135, 150, 198, 172, 155, 169, 203, 130, 147, 159, 206, 179, 61], [91, 111, 58, 113, 97, 78, 74, 53], [106, 56, 103, 58, 87, 95, 50, 45], [115, 85, 42, 122, 88, 66, 86, 37], [64, 77, 99, 111], [126, 115, 73, 72, 123, 106, 79, 112, 65, 97, 97, 24, 115, 123, 22, 17], [116, 67, 121, 0, 104, 99, 14, 9], [111, 91, 113, 83, 99, 107, 6, 1], [92, 83, 6, 48, 35, 37, 126, 121], [33, 49, 122, 117], [42, 36, 32, 113], [46, 35, 25, 58, 53, 19, 110, 105], [52, 100, 1, 109, 8, 104, 98, 55, 7, 15, 98, 93], [56, 80, 90, 18, 4, 84, 11, 4], [51, 50, 3, 0, 52, 94, 33, 6, 19, 37, 66, 28, 23, 27, 38, 69], [29, 61, 23, 8, 39, 43, 41, 245, 219, 195, 190, 185], [221, 183, 190, 185, 235, 228, 201, 252, 239, 233, 178, 173], [242, 218, 217, 226, 241, 209, 174, 168, 252, 194, 217, 240], [196, 198, 205, 200, 195, 200, 234, 153], [193, 225, 203, 220, 243, 251, 150, 145], [247, 233, 249, 218, 211, 128, 225, 216, 227, 224, 253, 242, 232, 136, 130, 200, 222, 249, 134, 181, 155, 149, 246, 244], [164, 145, 150, 245], [144, 248, 179, 186, 174, 252, 153, 129, 136, 138, 129, 187], [183, 228, 226, 161, 131, 141, 157, 183, 184, 134, 145, 208, 184, 186, 177, 136, 188, 212, 143, 128, 139, 135, 143, 128], [183, 169, 185, 194, 144, 165, 189, 152, 160, 177, 155, 204, 163, 173, 131, 175, 164, 166, 82, 113, 96, 116, 57, 56], [100, 53, 61, 98, 105, 102, 53, 122], [84, 72, 124, 107, 113, 84, 108, 125, 115, 70, 37, 36], [123, 76, 41, 112, 124, 104, 29, 28], [123, 77, 114, 21, 66, 96, 17, 92], [124, 124, 64, 88, 74, 107, 117, 3, 99, 107, 126, 76, 111, 111, 83, 4], [99, 9, 122, 78, 92, 126, 125, 124], [24, 4, 125, 47, 34, 16, 121, 37, 40, 37, 29, 112], [45, 125, 30, 57, 48, 20, 1, 104], [50, 101, 30, 32, 56, 60, 97, 96], [7, 109, 24, 87, 47, 25, 45, 88], [2, 85, 4, 2, 14, 44, 11, 80], [13, 2, 38, 6, 16, 52, 50, 31, 44, 38, 69, 68], [32, 28, 65, 64], [39, 18, 198, 235, 227, 177, 224, 252, 228, 180, 222, 252, 208, 206, 194, 251, 236, 200, 169, 232], [203, 253, 194, 252, 207, 250, 224, 245, 249, 236, 161, 160], [252, 173, 149, 213, 248, 251, 234, 223, 255, 240, 204, 197], [201, 153, 234, 217, 205, 232, 200, 221], [211, 129, 226, 128], [212, 133, 141, 192, 224, 227, 242, 205, 219, 210, 149, 252], [155, 241, 188, 179, 165, 245, 157, 244], [169, 249, 154, 161, 148, 142, 237, 236], [139, 225, 237, 166, 180, 228, 145, 228], [184, 233, 233, 182, 189, 178, 166, 143, 129, 208, 182, 141, 133, 137, 185, 212], [179, 217, 132, 129, 183, 221, 131, 204], [160, 157, 162, 128, 175, 196, 170, 137, 152, 201, 200, 192], [156, 87, 56, 105, 98, 83, 95, 51], [82, 59, 91, 115, 106, 91, 56, 96], [108, 34, 125, 124, 113, 115, 40, 43], [118, 64, 75, 118, 121, 68, 80, 35], [126, 119, 20, 87, 121, 124, 111, 115, 125, 112, 65, 26], [114, 116, 111, 89, 117, 103, 4, 89, 98, 6, 93, 70, 85, 127, 104, 7], [105, 81, 69, 72, 102, 24, 16, 112, 13, 1, 3, 63, 36, 37, 15, 127], [41, 27, 27, 52, 44, 98, 23, 60, 9, 5, 104, 107], [13, 53, 53, 47, 1, 29, 96, 99], [61, 39, 13, 23, 57, 50, 1, 22, 61, 32, 59, 5], [9, 43, 1, 27, 53, 37, 1, 4, 18, 35, 65, 75], [45, 22, 51, 12, 25, 41, 51, 17, 38, 216, 203, 198, 225, 182, 215, 234], [227, 229, 229, 230, 239, 251, 176, 179], [236, 162, 199, 225, 201, 195, 219, 166], [244, 170, 245, 239], [255, 219, 164, 200, 201, 229, 239, 246, 199, 236, 239, 214, 197, 197, 202, 151], [241, 251, 152, 196, 205, 130, 227, 222, 229, 226, 255, 252, 230, 138, 128, 206, 216, 251, 132, 203, 229, 151, 244, 242], [161, 246, 240, 172, 165, 250, 252, 250, 145, 148, 165, 254, 173, 135, 135, 167, 183, 133, 232, 235], [179, 159, 181, 174, 129, 139, 228, 239, 187, 161, 220, 223], [135, 163, 220, 163, 190, 176, 187, 130, 189, 186, 167, 163], [142, 167, 192, 154, 169, 198, 163, 162, 149, 175, 192, 140, 159, 187, 149, 142, 98, 108, 102, 69, 102, 104, 64, 110, 106, 78, 92, 96], [109, 74, 98, 97, 113, 80, 47, 46], [118, 82, 80, 126, 66, 78, 109, 38], [127, 47, 72, 47, 117, 76, 116, 91, 64, 114, 112, 93, 76, 108, 66, 71, 117, 122, 124, 67, 83, 86, 15, 14], [110, 91, 124, 91, 98, 97, 74, 87], [101, 80, 104, 9, 33, 22, 20, 58, 21, 118, 16, 62, 44, 36, 28, 30, 46, 58, 115, 114], [1, 9, 24, 42, 13, 13, 61, 106], [59, 52, 12, 35, 56, 10, 8, 37, 4, 36, 36, 22, 5, 50, 87, 15, 12, 46, 6, 29, 14, 6, 52, 22, 41, 38, 67, 31], [21, 34, 67, 2, 34, 33, 48, 50, 38, 42, 18, 17, 225, 201, 211, 190], [221, 235, 208, 183, 236, 206, 179, 254, 239, 250, 179, 178], [201, 198, 220, 163, 245, 194, 175, 226], [203, 206, 175, 171, 209, 231, 212, 221, 195, 207, 232, 203, 193, 244, 155, 154], [205, 253, 239, 150], [206, 234, 151, 197, 209, 198, 143, 142], [214, 226, 224, 195, 218, 138, 240, 142], [230, 229, 244, 198, 162, 242, 139, 254], [166, 146, 255, 172, 146, 152, 247, 246], [168, 149, 143, 242], [133, 148, 185, 238], [176, 130, 227, 164, 186, 235, 148, 169], [133, 239, 166, 175, 186, 182, 215, 211, 179, 164, 219, 218], [140, 219, 172, 155, 136, 172, 211, 210], [170, 195, 164, 195], [173, 173, 188, 157, 174, 190, 194, 198], [165, 207, 134, 112, 91, 85, 54, 52, 82, 87, 58, 53], [106, 103, 93, 120, 111, 61, 85, 124, 64, 32, 123, 100, 119, 81, 70, 37], [122, 40, 115, 108, 71, 112, 77, 108, 123, 122, 72, 25], [71, 113, 113, 64, 74, 25, 125, 85, 119, 120, 125, 92, 84, 122, 98, 9], [111, 113, 113, 8, 96, 107, 6, 1], [107, 105, 83, 53, 37, 6, 43, 6, 38, 40, 13, 32, 44, 27, 118, 113], [31, 35, 55, 38, 8, 10, 2, 46, 24, 61, 17, 33, 58, 55, 29, 105], [7, 108, 9, 80, 51, 53, 27, 8, 7, 49, 49, 29, 13, 47, 33, 89, 62, 57, 62, 77], [19, 65, 49, 68, 20, 33, 78, 13, 26, 13, 70, 65], [36, 41, 7, 247, 224, 197, 198, 185], [230, 180, 201, 241, 211, 221, 221, 249], [236, 217, 186, 234, 245, 213, 213, 225, 241, 209, 251, 240, 253, 221, 206, 161], [197, 175, 166, 217, 197, 234, 241, 212, 253, 148, 237, 192, 202, 152, 254, 145], [204, 249, 154, 219, 235, 234, 219, 228, 239, 209, 138, 133], [235, 239, 138, 237, 235, 248, 212, 253], [160, 240, 149, 241, 166, 142, 141, 164, 170, 249, 134, 241], [175, 253, 141, 188, 179, 181, 238, 233], [128, 228, 129, 232], [128, 232, 163, 172, 135, 137, 234, 208, 178, 165, 181, 148, 191, 212, 143, 216], [138, 216, 189, 153, 183, 175, 210, 205], [146, 159, 165, 128, 151, 197, 173, 148], [161, 203, 194, 139, 156, 169, 52, 60], [102, 75, 78, 117, 100, 86, 53, 52], [105, 102, 90, 119, 106, 72, 41, 104, 72, 66, 41, 40], [76, 122, 116, 106, 120, 93, 82, 45, 123, 72, 88, 77], [123, 123, 118, 21, 127, 112, 102, 91], [73, 25, 84, 93, 119, 29, 101, 12], [107, 1, 76, 89, 111, 111, 114, 106, 96, 108, 114, 13], [111, 82, 44, 47, 20, 20, 40, 48, 34, 3, 17, 121, 27, 19, 6, 52, 23, 23, 59, 108], [51, 11, 6, 57, 52, 6, 101, 100], [3, 105, 101, 40, 60, 50, 54, 11, 6, 34, 89, 88], [4, 10, 46, 29, 48, 58, 81, 80], [10, 39, 28, 6, 40, 34, 73, 72], [44, 32, 77, 18], [27, 44, 73, 7, 26, 56, 198, 244, 219, 177, 209, 184], [223, 208, 218, 226], [223, 195, 198, 251, 236, 216, 252, 235, 200, 194, 169, 168], [245, 208, 224, 241, 195, 169, 202, 242, 252, 173, 216, 202, 248, 251, 237, 152], [241, 226, 153, 228, 249, 227, 254, 157, 205, 233, 250, 221, 209, 235, 226, 217, 213, 132, 233, 132], [226, 138, 133, 215, 220, 141, 184, 178, 152, 148, 138, 245], [164, 245, 253, 160, 144, 156, 150, 187, 173, 162, 134, 224, 176, 190, 172, 163, 143, 128, 137, 228], [131, 131, 150, 183], [189, 178, 182, 149, 128, 208, 190, 137, 180, 191, 178, 133, 136, 133, 190, 160, 143, 183, 190, 193, 168, 164, 193, 153, 149, 144, 197, 196], [172, 201, 170, 148, 175, 88, 79, 120, 89, 83, 52, 111, 101, 64, 98, 55], [104, 97, 97, 96, 110, 88, 64, 47], [112, 39, 67, 127, 116, 43, 75, 99, 122, 75, 40, 112], [125, 103, 77, 88, 71, 101, 24, 27], [126, 69, 127, 68, 74, 123, 24, 127, 118, 104, 99, 93], [106, 6, 12, 76], [84, 85, 127, 79, 97, 123, 4, 74], [92, 115, 19, 119, 33, 3, 16, 123], [35, 0, 3, 34, 18, 126, 24, 115], [44, 99, 3, 36, 48, 21, 104, 107], [53, 15, 96, 104, 1, 10, 15, 40], [61, 13, 88, 81], [58, 51, 47, 28], [62, 63, 17, 6, 8, 2, 60, 83], [53, 29, 29, 1, 17, 50, 63, 26, 46, 75, 40, 71], [24, 79, 47, 7, 29, 178, 245, 238], [226, 211, 176, 241, 227, 208, 216, 183], [223, 226, 219, 250, 214, 253, 199, 235], [241, 195, 249, 227], [205, 170, 207, 170, 201, 203, 229, 242, 253, 247, 247, 215, 199, 236, 235, 229, 194, 254, 251, 194, 241, 156, 152, 198, 205, 231, 228, 143], [215, 243, 140, 193], [237, 214, 243, 204, 217, 237, 128, 131], [220, 136, 151, 184, 162, 133, 248, 251], [157, 165, 165, 185, 169, 141, 240, 243], [173, 189, 151, 224, 178, 131, 177, 190, 179, 159, 224, 163], [130, 177, 177, 171, 133, 161, 220, 223], [128, 215, 183, 159, 133, 218, 157, 134, 190, 223, 191, 219, 141, 183, 164, 207], [151, 163, 192, 157, 173, 175, 163, 138, 153, 145, 171, 149], [97, 86, 55, 121, 94, 93, 76, 55, 89, 100, 92, 102, 110, 62, 68, 99], [115, 35, 43, 34, 119, 120, 88, 123], [123, 43, 76, 43, 79, 74, 43, 47, 122, 121, 104, 17, 125, 114, 81, 26], [114, 68, 70, 88, 78, 107, 124, 67, 85, 121, 99, 14], [87, 7, 15, 78, 92, 120, 7, 6], [95, 83, 89, 2], [36, 6, 20, 119, 32, 0, 12, 47, 43, 123, 28, 56, 45, 26, 123, 35], [51, 98, 16, 32, 53, 13, 7, 106], [11, 12, 8, 22, 14, 12, 99, 98], [57, 83, 36, 22, 61, 87, 48, 20, 57, 62, 95, 27, 14, 58, 40, 95, 17, 38, 75, 6, 38, 27, 60, 31, 26, 46, 47, 70], [29, 79, 40, 74, 227, 246, 191, 190], [221, 226, 187, 186], [234, 222, 204, 191], [214, 191, 246, 249, 201, 252, 212, 224, 197, 167, 175, 227, 251, 222, 163, 225, 253, 197, 204, 243, 244, 146, 224, 207, 199, 200, 224, 151, 201, 254, 147, 222], [245, 159, 198, 199, 211, 218, 244, 131], [213, 242, 218, 194, 220, 248, 135, 134], [238, 250, 248, 143, 154, 144, 255, 254], [167, 247, 144, 247], [146, 251, 156, 251, 157, 160, 247, 254, 178, 188, 128, 163, 182, 184, 178, 147, 186, 158, 182, 183, 190, 179, 140, 140, 186, 182, 172, 211], [189, 214, 172, 139, 177, 177, 184, 135, 190, 186, 150, 131, 146, 166, 164, 134, 144, 180, 203, 202], [155, 202, 188, 130, 152, 188, 195, 61], [99, 85, 69, 115], [95, 71, 58, 53], [106, 103, 93, 102, 111, 60, 58, 101, 75, 69, 93, 36], [119, 81, 65, 109, 67, 41, 73, 115], [124, 70, 81, 111, 120, 119, 23, 25], [127, 20, 113, 24, 127, 109, 71, 88, 119, 127, 18, 13], [104, 0, 10, 65, 86, 4, 14, 75, 99, 107, 6, 1], [108, 83, 83, 46, 18, 21, 118, 116, 11, 44, 21, 10, 42, 36, 1, 36, 40, 31, 114, 109], [8, 96, 106, 33, 49, 30, 29, 46, 59, 27, 102, 97], [11, 9, 51, 21, 5, 38, 46, 29, 52, 62, 45, 17, 48, 50, 0, 81], [59, 92, 57, 25, 36, 64, 74, 30, 20, 68, 33, 72], [32, 34, 53, 12, 31, 25, 66, 189], [219, 239, 186, 238, 225, 222, 202, 181], [232, 221, 190, 249, 215, 214, 197, 217, 199, 215, 162, 217], [241, 206, 217, 244, 250, 241, 221, 242, 199, 201, 170, 144], [197, 229, 154, 202, 255, 148, 223, 196, 248, 152, 211, 196, 206, 157, 226, 141], [232, 227, 142, 137], [214, 241, 241, 193, 227, 237, 142, 140, 233, 211, 134, 171, 155, 147, 254, 249], [166, 129, 129, 248, 168, 139, 246, 241], [151, 163, 246, 165, 181, 147, 238, 233], [140, 142, 149, 175, 187, 146, 176, 225], [132, 169, 226, 221], [131, 165, 143, 145, 191, 179, 169, 128, 138, 171, 214, 209], [142, 131, 185, 131, 171, 165, 181, 142, 175, 167, 202, 197], [156, 190, 178, 193], [164, 169, 82, 106, 83, 49, 124, 109, 101, 52, 69, 52], [83, 92, 57, 99, 108, 72, 69, 44], [113, 32, 94, 127], [114, 80, 33, 41, 67, 76, 107, 32], [124, 45, 21, 87, 65, 100, 114, 80], [124, 127, 114, 69, 72, 69, 125, 16], [76, 104, 9, 95], [81, 0, 102, 93, 82, 127, 110, 67], [88, 124, 5, 87, 103, 103, 18, 49, 32, 113, 112, 120], [36, 116, 10, 33, 19, 121, 32, 125, 43, 30, 109, 108], [49, 20, 109, 102], [53, 16, 30, 32, 57, 105, 9, 96], [15, 7, 42, 24, 59, 59, 8, 38, 2, 48, 50, 4, 48, 51, 37, 80], [61, 56, 69, 65, 63, 39, 46, 55, 21, 25, 50, 17, 31, 42, 65, 64], [36, 39, 232, 237, 219, 244, 185, 184], [229, 180, 218, 229, 233, 202, 177, 176], [218, 216, 214, 161, 243, 210, 169, 168], [204, 165, 206, 169, 206, 204, 240, 238, 252, 216, 204, 219, 248, 244, 234, 211, 196, 202, 250, 211], [255, 238, 149, 231, 250, 195, 226, 229], [232, 226, 137, 136], [212, 240, 129, 138], [216, 252, 133, 213, 228, 248, 150, 170], [155, 148, 150, 174, 148, 159, 146, 165, 168, 165, 158, 128, 175, 151, 158, 225, 136, 132, 225, 185, 181, 176, 229, 228], [128, 182, 164, 171, 188, 236, 169, 220], [135, 178, 217, 216], [190, 214, 209, 156, 176, 179, 143, 208], [140, 168, 182, 132, 168, 192, 162, 157, 172, 197, 173, 196], [175, 150, 170, 147, 172, 88, 105, 117], [89, 92, 75, 108, 94, 80, 75, 102], [105, 75, 91, 99, 107, 81, 44, 47], [73, 67, 32, 126, 78, 117, 97, 118, 65, 93, 32, 35], [124, 77, 119, 74, 121, 101, 24, 27], [68, 26, 127, 89, 113, 123, 99, 30, 117, 103, 99, 120, 81, 89, 103, 90, 82, 121, 4, 7], [90, 123, 123, 68], [91, 7, 120, 22, 39, 12, 15, 54, 37, 37, 42, 119], [17, 11, 116, 58, 22, 7, 61, 39], [55, 28, 31, 62, 53, 54, 23, 42, 63, 27, 49, 40, 61, 7, 92, 95], [58, 9, 92, 13, 2, 57, 84, 87], [56, 59, 88, 94, 32, 53, 55, 11, 16, 25, 51, 67], [20, 21, 64, 74, 34, 36, 47, 18], [28, 179, 211, 251, 226, 211, 176, 232, 230, 223, 211, 191], [210, 219, 195, 248, 236, 231, 172, 175], [241, 211, 195, 164, 205, 207, 238, 167], [248, 241, 164, 175, 253, 205, 240, 159], [249, 150, 243, 150, 241, 239, 197, 222, 241, 244, 221, 216, 205, 221, 231, 226, 233, 217, 239, 204, 237, 224, 232, 135], [223, 251, 235, 196, 219, 129, 252, 255], [167, 140, 143, 174, 165, 166, 135, 185, 146, 148, 159, 162], [173, 135, 189, 226, 137, 140, 159, 155, 182, 143, 232, 170, 191, 157, 224, 227], [188, 211, 179, 138, 128, 138, 180, 219]];
  var v24 = 154;
  if (v24 === 1) {
    v24 = 157;
  }
  var v25 = 210;
  if (v25 > 5) {
    v25 = 91;
  }
  Math.floor(216[216 .ⲆᐃⲆᐃΔⲆⵠΔⵠ]);
  Math.floor(169[169 .ΔᐃᐃᐃⵠⲆᐃ]);
  const v26 = ["#1b170c", "110_111_110", "opacity", "object", "On-Hit Damage: 3", "#280e09", "Damage: 1", "wtb", "You are less cold, less thirsty, and less hungry", "#174a51", "mouseup", "#232828", "#4d4a2e", "#b3e0e3", "#1f5453", "audio/ambience.mp3", "000_010_000", "sap", "nickname_block", " Constraints", "aloner", "#281C08", "#614627", "iblk", "volume", "treasure_chest_4", "play", "#555555", "playing", "#bfb360", "plm", "#be8d50", "Comida: 100", "Bed", "Możesz także zdobyć minerały", "Durability: 400", "#0F464C", "010_111_000", "#123d38", "111_111_011", "#182935", "#1a4545", "nickname_input", "#86d4e0", "#4C3B19", "#7f6d52", "110_110_010", "Widget", "init", "score", "Birth: 4min", "#4eb687", "#73dde5", "110_111_000", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16", "Sushui", " : ", "000_111_110", "time", "source-over", "high_ing", "#f9efeb", "Creuse la terre, le sable et la neige", "Food: 10", "mousedown", "110_110_000", "011_011_010", "#660000", "#63c9d6", "También puedes conseguir minerales", "Animals Defense: 13", "Te calienta en invierno y fuera del agua", "#77371f", "#43aa82", "Dégâts: 2", "Daño para estructuras: 1", "killdragon_1", "application/x-www-form-urlencoded", "#187484", "event", "recipe_craft", "#35b1b5", "#665329", "Защищает от холода вне воды.", "Dig the ground to gather dirt, ice, and sand", "#816511", "#0B6A84", "#1a7961", "Easter Egg", "home_craft", "gapi", "img/avatar-player14.png", "XPayStationWidget", "010_111_010", "dont_hit_5", "claim_reward_", "#FFFFFF", "#092813", "000_110_010", "#3A2A0D", "points", "#d7990c", "round", "#ee593d", "_number", "lock_team", "#d2c77b", "Hält dich warm außerhalb von Wasser und Winter", "#89d1d4", " QUIT", "010_011_010", "#5E3C10", "#83827e", "#29aaa1", "#136167", "#000000", "#574122", "#6a7570", "pizza wa", "000_111_010", "Pomocny w niszczeniu budowli", " Collect 1 dragon heart", "111_111_110", "#07393d", "#163a3a", "#183f3f", " Collect 100 bread in deep winter", "#073030", "Damage: 24", "FB", "#564021", "Урон по строениям: 1", "#c26de0", "px Baloo Paaji", "nu", "Kill", "Grab herum um Dreck, Eis und Sand zu bekommen", "amethyst_2", "Winter", "#ac222a", "Haltbarkeit: 2000", "#9baaa3", "winter_7", "jub", "#95d5d8", "#654320", "#133a2b", "#21112D", "#0c0c0d", "azerty_ing", "gw", "#33b4e4", "Damage: 20", "starve_mapping", "forest", "#15514f", "#1a4935", "#184747", "Cava para conseguir tierra, arena y hielo", "constraintquest", "Урон: 2", "#c3be9a", "#041c21", "#b29c32", "Building Damage: 1", "#f4efc6", "They can't hit you and you can't hit them", "#a33e2b", "#3d2a6e", "#123335", "middle", "coa", "Durabilité: 1000", "#123b3f", "Chapka", "string", "#392C16", "#A89F67", "Anyone want to play?", "010_110_000", "#73583e", "#e7dc8f", "starve_quests", "Days survived", "sw", "#485e66", "#281A49", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "#46554D", "011_111_110", "000_111_111", "Crab Spear", "getAuthResponse", "Score", "#ddcf8a", "#87d2e6", "111_111_111", "Durabilité: 2000", "dano em construções: 1", "#8a938e", "upfiz", "#e45936", " Claim rewards", "rgba(255, 255, 255, 0)", "#115E60", "Damage: 2", "la", "You can not attack when you use it", "Allow you to calm crabs, and heal them", "Haltbarkeit: 1000", "#252B28", "#382e19", "#BB0000", "#347f93", "Starve.io", "jus", "010_111_111", "#634828", "#d45ce5", "#077b49", "#171a19", "000_110_110", "#939393", "auth2", "#3dc4c0", "Défense: 4, Défense contre animaux: 16", "Réchauffe en dehors de l'eau et dans l'hiver", "Используется для разрушения зданий", "Прочность: 1000", "#263947", "#e6636a", "#674C2A", "#211108", "Food: 20", "#252525", "Crab Helmet", "re", "Sandwich", "#C6AF81", "Uuunnnggg...", "shop_starterkit", "Cactus", "#1f4948", "#c1b06b", "buy_kit", "&userid=", "#58452b", "dw", "#2E85A0", "#1f343f", "#29997c", "#EFE4B4", "Jedzenie: 100", "active", "#25c5d6", "Wytrzymałość: 700", "Peut aussi récupérer des minéraux", "game_body", "#9b2b25", "Копайте землю, чтобы получить грязь, лед и песок", "010_011_000", "#3f332a", "#74ede6", "send", "#C1C0C0", "You can buy items on the shop in the next game with your points", "#030d14", "Czas życia: 8 dni", "#2b9390", "000_111_011", "quit_chronoquest", "#764eb5", "starve_safe", "#4d2d14", "#262114", "Uuunnnggg", "#e4efe8", "#e9dad9", "#3e3c25", "#b864d6", "#5E3E1A", "011_111_011", "You feel a great power emanating from this orb", "canvas", "team_box", "000_011_011", "#939995", "spectator", "Durability: 1000", "010_010_000", "#7d5234", "#0a2728", "011_111_000", "#3fc9c9", "Crab claws can also be eaten", " BACK TO THE GAME", "low_ing", "#394841", "#120202", "#1d051e", "eogito", "Damage: 3", "#57442a", "#0e3022", "#59c9c0", "#031619", "WINTER", "#9E8456", "#1f773d", "Damage: 4", "cursor", "#e0f2f6", "starve_aliasing", "input_ratio", "#a7983c", "#EBF2F0", "#b2d4d1", "#107746", "top", "</div>", "#A5A244", "#5f6061", "#afac98", "Прочность: 2000", "Damage: 14", "Oh, yeah? Is there crab in the crab sticks?", "110_111_111", "#163A3A", "011_111_010", "#8359d3", "id", "inv_shop", "none", "#214C4B", "#083b3a", "#454545", "#0d2e33", "011_111_111", "FOREST", "cs", "Так же вы можете получить ресурсы", "starve_info_box", "Useful to destroy buildings", "aqu", "Wytrzymałość: 2000", "#2b5c48", "#342C7C", "Chrono Quests", "Players Defense: 4", "#cd98e5", "#554139", "When you are flying,", "#b29e4d", "#75827D", "Nützlich um Gebäude zu zerstören", "#efd435", "#b15ecf", "#2a2938", " Open 5 treasure chests", "#B6222A", "durabilidade: 1000", "111_111_000", ".md-languages label button", "#0a2d18", "Lebenszeit: 8 Tage", "Wytrzymałość: 1000", "Haltbarkeit: 700", "serverAddressInput", "#2b280a", "#5cc5ce", "#747471", "#eda80d", "claim_rewards", "#ffffff", "você também pode pegar minerais", "qwerty_ing", "#fef4f4", "000_010_010", "GET", "#242330", "Durabilidad: 700", "#1d1d22", "gm", "Du kannst auch Mineralien bekommen", "010_110_010", "#d588f1", "#0e6553", "Crabs follow you", "011_011_011", "Survive without losing life", "#5cccc4", "010_110_110", "Requires appropriate arrows to be used", "110_111_011", "#83ddd4", "#0b2326", "#0d1b1c", " you can only hit people who are flying too", "#8255b5", "CrysTal", "#b7252c", "Durée de vie: 8 jours", "#67766F", "#A37943", "#0F3A24", "LAVA", "#596560", "You will be cured faster", "#785f4c", "pos", "Building method: Grid. Press G to change", "comida: 100", "#322413", "Lifetime: 8 days", "#D8DC74", "111_111_010", "Продолжительность: 8 дней", "mousemove", "Durabilidad: 2000", "Damage: 30", "cancel_sure_delete", "eject_member", "Crab sticks", "#1F343F", "starve_quality", "rewardquest", "#09373F", "#877d36", "Durability: 700", "010_111_110", "#042b30", "#C09D6F", "Obrażenia do budowli: 1", "#24878f", "durabilidade: 700", "000_110_000", "#072824", "#2b7c57", "This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.", "#34255d", "inline-block", "#adbcb5", "#a08f47", "account_nickname_input", "starve_cancel", "#68622D", "011_011_000", "#432516", "Totem", "#032428", "#7C5A29", "kit", "DESERT", "fod", "Utile pour détruire les bâtiments", "Players Defense: 4, Animals Defense: 16", "#032b23", "px", "2d", "Schaden an Gebäuden: 1", "#083326", "010_011_011", "#A9D6D3", "de", "#388AC7", "#0e3838", "#3da34d", "#43b5af", "rub", "Durabilidad: 1000", "#000", "#313041", "#141414", "#c7a726", "You can also gather minerals", "fo", "#86d0d1", "_trad_number", "#FFF", "#0a2f2b", "jut", "#B26F31", "#c4a23a", "#094437", "&region=", "timeremain_", " Share on Twitter", "#c27add", "Warm outside water and in winter", "#44301b", "time_finished_", "000_011_010", "Starve.io ", "Damage: 5", "#462966", "Прочность: 700", "defesa de jogadores: 4, defesa de animais: 16", "fade", " After 1 day, survive in winter", "Essen: 100", "#fff", "typequest", " Gather 1 amethyst", "Ciepło w i poza zimą", "Taco4Life", "iro", "Crab Claw", "Schaden: 2", "stop", "Time Remaining", "000_111_000", "dano: 2", "#523e26", "#EDCE4F", "#0a4049", "Communist", "_blank", "#B56D18", "Content-Type", "Daño: 2", "cop", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16", "#a9e4ed", "Bueno para destruir estructuras", "#493e26", "Buildings Damage: 1", "durabilidade: 2000", "#58645F", "You can fly with it.", "#0b3432", "#af59cd", "#c4bc51", "útil para destruir construções", "#46c2c9", "#c67933", "#092b29", "010_111_011", "click", "#200333", "Game", "Building method: Free. Press G to change", "MADBalgouthi", "#3ba578", "000_011_000", "#328587", "#082b22", "#C98435", "#c04933", "#0a0b0c", "#4c3a15", "#8c29aa", "timeremainingquest", "110_111_010", "Durability: 2000", "CLAIM REWARD!", "You are the king of crabs!", "#1678a2", "#47341d", "#dfd1cb", "#C0BF55", "010_010_010", "Relax in this confortable bed", "110_110_110", "#ff0000", "Защита от игроков: 4, Защита от животных: 16", "#bbbbbb", "#53A4D5", "#e2cf27", "#113f3c", "#e8e8e8", "bread_6", "#096d41", "#54a4ba", "#2b6664", "#7d6144", "#4c3b19", "img_", "#043c37", "#111316", "servselect", "bap", "jad", "#2A8B9B", "#EAEAEA", "#124949", " Reward", "isl", "name", "Building Damage: 4", " Share on Facebook", "Dig the ground to gather resources", "#1e2021", "Durabilité: 700", "cave o chão para pegar terra, areia e gelo", "survive20min_3", "'Baloo Paaji', sans-serif", " Be peaceful", "destination-out", "Pixelbitie"];
  const v27 = 20;
  const vUndefined = undefined;
  const v28 = 256;
  const v29 = 18;
  const v30 = true;
  const v31 = false;
  const v32 = 12;
  const v33 = 17;
  const v34 = 16;
  const v35 = 11;
  const v36 = 100;
  const v37 = 19;
  const v38 = 255;
  const v39 = 15;
  const v40 = 13;
  const v41 = 14;
  const v42 = 100;
  const v43 = 10;
  ;
  const v44 = 255;
  const v45 = 11;
  let v46;
  const vVUndefined = vUndefined;
  let v47;
  let v48;
  let vVUndefined2 = vUndefined;
  const v49 = 17;
  let vVVUndefined = vVUndefined;
  const v50 = 16;
  let v51;
  let vVVUndefined2 = vVUndefined;
  let v52;
  let v53;
  let v54;
  let vVVUndefined3 = vVUndefined;
  let vVVUndefined4 = vVUndefined;
  let v55 = [];
  let v56 = "_";
  let vVUndefined3 = vUndefined;
  const vV30 = v30;
  const v57 = String.fromCharCode;
  const vV57 = v57(101);
  const vV572 = v57(118);
  const vV573 = v57(97);
  const vV574 = v57(108);
  let v58;
  let v59;
  const v60 = 12;
  const v61 = 256;
  let v62;
  const v63 = 20;
  const v64 = 14;
  let v65;
  let vVUndefined4 = vUndefined;
  const v66 = 18;
  let v67;
  let vVUndefined5 = vUndefined;
  let vVVUndefined5 = vVUndefined;
  let vVUndefined6 = vUndefined;
  let vVVUndefined6 = vVUndefined;
  let v68;
  let vVVUndefined7 = vVUndefined;
  let v69;
  let v70;
  let v71;
  let vVVUndefined8 = vVUndefined;
  const v72 = 100;
  let v73;
  let v74;
  let v75;
  let vVVUndefined9 = vVUndefined;
  let vVVUndefined10 = vVUndefined;
  const v76 = 19;
  let vVUndefined7 = vUndefined;
  const v77 = 20;
  const v78 = 15;
  let v79;
  const vV31 = v31;
  let v80;
  const v81 = 13;
  let v82;
  let v83;
  let v84;
  const v85 = 16;
  const v86 = 255;
  const vVV30 = vV30;
  const v87 = 16;
  let vVVUndefined11 = vVUndefined;
  const v88 = 18;
  const vVUndefined8 = vUndefined;
  const v89 = 10;
  const v90 = 16;
  let v91;
  let v92;
  const v93 = 14;
  let vVUndefined9 = vUndefined;
  let vVUndefined10 = vUndefined;
  const v94 = 255;
  let v95;
  let vVUndefined11 = vUndefined;
  const v96 = 256;
  const v97 = 18;
  const v98 = 17;
  let v99;
  const v100 = 17;
  let v101;
  let vVVUndefined12 = vVUndefined;
  let v102 = 0;
  let vVUndefined12 = vUndefined;
  if (!vWindow.WebAssembly || !vWindow.WebAssembly.instantiate) {
    ⲆⲆⵠⲆΔᐃⲆⲆⵠ();
  }
  const v103 = {
    Date: Date
  };
  const v104 = 18;
  vWindow.WebAssembly.instantiate(Uint8Array.from(vWindow.atob(""), function (p3) {
    return p3.charCodeAt(0);
  }), v103).then(function (p4) {
    v46 = p4.instance;
    v47 = v46.exports;
    v48 = v47.memory;
    vVUndefined2 = v48.buffer;
    vVVUndefined = v47.__pin;
    vVVUndefined2 = v47.__unpin;
    v51 = v47.__new;
    v52 = v47.__collect;
    v56 = "_";
    for (let v105 = 0; v105 < 31; v105++) {
      v55[v105] = v47[v56 + v105];
    }
    vVVUndefined3 = v47.__rtti_base;
    vVVUndefined4 = new Float32Array(vVUndefined2);
    v53 = new Float64Array(vVUndefined2);
    vVUndefined3 = new BigUint64Array(vVUndefined2);
    v54 = new Uint32Array(vVUndefined2);
    v58 = new Uint16Array(vVUndefined2);
    v59 = new Uint8Array(vVUndefined2);
    v62 = new BigInt64Array(vVUndefined2);
    v65 = new Int32Array(vVUndefined2);
    vVUndefined4 = new Int16Array(vVUndefined2);
    vVVUndefined6 = new Int8Array(vVUndefined2);
    vVVUndefined5 = v55[30];
    v80 = v55[7];
    v99 = v55[29];
    v68 = v55[20];
    v92 = v55[0];
    v95 = v55[14];
    vVVUndefined10 = v55[19];
    vVVUndefined7 = v55[5];
    v75 = v55[22];
    v101 = v55[21];
    vVUndefined5 = v55[17];
    v91 = v55[8];
    v83 = v55[9];
    v79 = v55[15];
    vVUndefined7 = v55[1];
    vVVUndefined9 = v55[24];
    v82 = v55[28];
    v67 = v55[23];
    vVUndefined10 = v55[11];
    vVVUndefined11 = v55[26];
    v69 = v55[16];
    vVUndefined11 = v55[12];
    v84 = v55[2];
    v70 = v55[4];
    v73 = v55[6];
    vVUndefined9 = v55[10];
    vVVUndefined8 = v55[3];
    vVUndefined6 = v55[13];
    v74 = v55[25];
    v71 = v55[27];
    vVVUndefined12 = v55[18];
    v102 = 1;
    if (vVUndefined12) {
      vVUndefined12();
    }
  });
  const vF2 = function (p5) {
    return v54[(vVVUndefined3 + 4 >>> 2) + (p5 << 1)];
  };
  function f2(p6) {
    return 31 - Math.clz32(p6 >>> 6 & 31);
  }
  ;
  const v106 = 11;
  function f3(p7, p8, p9) {
    if (p9) {
      switch (p7) {
        case 2:
          return vVVUndefined4;
        case 3:
          return v53;
      }
    } else {
      switch (p7) {
        case 0:
          if (p8) {
            return vVVUndefined6;
          } else {
            return v59;
          }
        case 1:
          if (p8) {
            return vVUndefined4;
          } else {
            return v58;
          }
        case 2:
          if (p8) {
            return v65;
          } else {
            return v54;
          }
        case 3:
          if (p8) {
            return v62;
          } else {
            return vVUndefined3;
          }
      }
    }
  }
  function f4(p10) {
    const v107 = v54[p10 + -8 >>> 2];
    const vVF2 = vF2(v107);
    const vF22 = f2(vVF2);
    let v108 = vVF2 & 4 ? p10 : v54[p10 + 4 >>> 2];
    const v109 = vVF2 & 2 ? v54[p10 + 12 >>> 2] : v54[v108 + -4 >>> 2] >>> vF22;
    return f3(vF22, vVF2 & 2048, vVF2 & 4096).subarray(v108 >>>= vF22, v108 + v109);
  }
  const v110 = 16;
  var v111 = vWindow.console;
  v111.log = v111.info = v111.error = v111.warn = v111.debug = v111.ⲆⲆΔΔΔΔⲆⵠⵠ = v111.trace = v111.time = v111.timeEnd = function () {};
  const v112 = String.fromCharCode;
  const vV112 = v112(101);
  const vV1122 = v112(118);
  const vV1123 = v112(97);
  const vV1124 = v112(108);
  function f5(p11, p12, p13, p14, p15) {
    v101(v802, p11, p12, p13, p14, p15);
    const vPt = f14(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
    (function (p16, p17, p18, p19, p20) {
      vVUndefined10(v802, p16, p17, p18, p19, p20);
      const vAl = f83(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
      const vF3 = function (p21, p22, p23, p24) {
        v69(v802, p21, p22, p23, p24);
        const vCt = f13(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[0]);
        f57(vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3]);
        return ~(vCt & 6423) & (vCt | 6423);
      }(vVVVVVUndefined8232[3], vVVVVVUndefined8232[4], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]);
    })(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
    return (vPt | 50019) & ~(vPt & 50019);
  }
  function f6(p25, p26, p27, p28, p29) {
    const v113 = ((p25 + 54636) * 1664525 + 1013904223) % 4294967296;
    const v114 = (57553 + p29) % 65337;
    const vF4 = function (p30, p31, p32, p33) {
      const v115 = ~(p30 & 35821) & 35821 | ~(p30 & 35821) & p30;
      const v116 = ~(p32 & 7530) & (p32 | 7530);
      const v117 = ((p33 + 10616) * 2147483629 + 2147483587) % 2147483647;
      const vF5 = function (p34, p35) {
        const v118 = (0 << (p34 >> 8 & 255)) + (8 << (p34 >> 24 & 255)) + (16 << (p34 & 255)) + (24 << (p34 >> 16 & 255));
        const v119 = ~(p35 & 64745) & 64745 | ~(p35 & 64745) & p35;
        const vPo = f56(v118, v119, v118);
        (function (p36, p37, p38, p39) {
          const v120 = ~(p36 & 30318) & 30318 | ~(p36 & 30318) & p36;
          const v121 = (2531011 + (14785 + p37) * 214013) % 4294967296;
          const v122 = (0 << (p38 & 255)) + (24 << (p38 >> 16 & 255)) + (16 << (p38 >> 8 & 255)) + (8 << (p38 >> 24 & 255));
          const v123 = (8 << (p39 >> 16 & 255)) + (24 << (p39 & 255)) + (0 << (p39 >> 8 & 255)) + (16 << (p39 >> 24 & 255));
          const vWo = f55(v120, v121, v122, v123, v120, v121);
          const vUi = f7(v122, v123);
        })(v119, v118, v119, v118);
        return vPo ^ 45532;
      }(v115, (p31 + 34962) % 65392);
      const vPo2 = f56(v116, v117, v115);
      return ((17742 + (vF5 ^ vPo2)) * 2147483629 + 2147483587) % 2147483647;
    }(v113, (8 << (p26 >> 24 & 255)) + (24 << (p26 >> 8 & 255)) + (0 << (p26 & 255)) + (16 << (p26 >> 16 & 255)), (p27 | 55404) & ~(p27 & 55404), (12345 + (p28 + 45302) * 1103515245) % 2147483648);
    f82(v114, v113);
    return ~(vF4 & 9933) & vF4 | ~(vF4 & 9933) & 9933;
  }
  const v124 = 13;
  function f7(p40, p41) {
    const v125 = ~(p40 & 39822) & p40 | ~(p40 & 39822) & 39822;
    const v126 = p41 ^ 34389;
    const v$p = f509(v125, v126);
    f509(v125, v126);
    return ~(v$p & 45746) & (v$p | 45746);
  }
  const v127 = 0;
  function f8(p42, p43, p44, p45, p46, p47) {
    const v128 = (24 << (p42 >> 16 & 255)) + (16 << (p42 >> 24 & 255)) + (8 << (p42 & 255)) + (0 << (p42 >> 8 & 255));
    const v129 = ~(p43 & 5343) & (p43 | 5343);
    const v130 = ~(p47 & 40777) & (p47 | 40777);
    const vF6 = f6(v128, v129, (2531011 + (p44 + 21738) * 214013) % 4294967296, (24 << (p45 >> 16 & 255)) + (8 << (p45 & 255)) + (16 << (p45 >> 24 & 255)) + (0 << (p45 >> 8 & 255)), ~(p46 & 17994) & (p46 | 17994));
    const vF7 = function (p48, p49, p50) {
      const v131 = p48 ^ 9490;
      const v132 = ~(p49 & 21350) & p49 | ~(p49 & 21350) & 21350;
      const v133 = ((11716 + p50) * 1664525 + 1013904223) % 4294967296;
      const vF8 = function (p51, p52, p53) {
        const v134 = (p51 + 49119) % 65393;
        const v135 = p52 ^ 15963;
        const v136 = ((p53 + 25715) * 1103515245 + 12345) % 2147483648;
        const vWo2 = f55(v134, v135, v136, v134, v135, v136);
        f6(v134, v135, v136, v134, v135);
        return (vWo2 | 47669) & ~(vWo2 & 47669);
      }(v131, v132, v133);
      const vPo3 = f56(v131, v132, v133);
      return (8 << ((vF8 ^ vPo3) >> 16 & 255)) + (16 << ((vF8 ^ vPo3) >> 8 & 255)) + (0 << ((vF8 ^ vPo3) & 255)) + (24 << ((vF8 ^ vPo3) >> 24 & 255));
    }(v130, v128, v129);
    return (8 << ((vF6 ^ vF7) & 255)) + (0 << ((vF6 ^ vF7) >> 8 & 255)) + (16 << ((vF6 ^ vF7) >> 16 & 255)) + (24 << ((vF6 ^ vF7) >> 24 & 255));
  }
  const v137 = 12;
  function f9(p54, p55, p56, p57) {
    vVVUndefined8(v802, p54, p55, p56, p57);
    return ((239 + (f75(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]) ^ f57(vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[0]))) * 8121 + 28411) % 134456;
  }
  const v138 = 18;
  function f10(p58, p59, p60, p61, p62, p63) {
    const v139 = ((17427 + p58) * 22695477 + 1) % 4294967296;
    const v140 = (p59 | 32418) & ~(p59 & 32418);
    const v141 = ~(p60 & 53643) & 53643 | ~(p60 & 53643) & p60;
    const v142 = ~(p63 & 3854) & p63 | ~(p63 & 3854) & 3854;
    const vF9 = function (p64, p65, p66, p67, p68) {
      const v143 = ((21484 + p64) * 214013 + 2531011) % 4294967296;
      const v144 = ~(p65 & 45162) & 45162 | ~(p65 & 45162) & p65;
      const v145 = ~(p66 & 25110) & 25110 | ~(p66 & 25110) & p66;
      const v146 = (0 << (p67 >> 8 & 255)) + (24 << (p67 >> 0 & 255)) + (16 << (p67 >> 16 & 255)) + (8 << (p67 >> 24 & 255));
      const vF10 = function (p69, p70, p71, p72, p73) {
        const v147 = ~(p69 & 15734) & (p69 | 15734);
        const v148 = (p70 | 30270) & ~(p70 & 30270);
        const v149 = (p71 | 53026) & ~(p71 & 53026);
        const v150 = (1 + (p72 + 53947) * 22695477) % 4294967296;
        const v151 = (p73 + 18818) % 65428;
        const vF72 = f7(v147, v148);
        f70(v149, v150, v151, v147, v148);
        return ~(vF72 & 21563) & vF72 | ~(vF72 & 21563) & 21563;
      }(v143, v144, v145, v146, ((p68 + 41324) * 1103515245 + 12345) % 2147483648);
      const vYp = f498(v143, v144, v145, v146);
      return (8 << ((vF10 ^ vYp) >> 8 & 255)) + (24 << ((vF10 ^ vYp) >> 24 & 255)) + (0 << ((vF10 ^ vYp) >> 16 & 255)) + (16 << ((vF10 ^ vYp) & 255));
    }(v139, v140, v141, ~(p61 & 50477) & 50477 | ~(p61 & 50477) & p61, (0 << (p62 >> 16 & 255)) + (24 << (p62 & 255)) + (8 << (p62 >> 8 & 255)) + (16 << (p62 >> 24 & 255)));
    f45(v142, v139, v140, v141);
    return (vF9 | 30342) & ~(vF9 & 30342);
  }
  function f11(p74) {
    return function (p75, p76, p77, p78) {
      v82(v802, p75, p76, p77, p78);
      const vF11 = function (p79, p80, p81, p82, p83, p84) {
        v71(v802, p79, p80, p81, p82, p83, p84);
        const vF12 = function (p85, p86) {
          v67(v802, p85, p86);
          const vMo = f57(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[0]);
          const vF13 = function (p87, p88, p89, p90, p91, p92) {
            v84(v802, p87, p88, p89, p90, p91, p92);
            const vF14 = function (p93, p94, p95, p96, p97, p98) {
              vVUndefined11(v802, p93, p94, p95, p96, p97, p98);
              const vF52 = f5(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
              f13(vVVVVVUndefined8232[5], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3]);
              return (vF52 | 53897) & ~(vF52 & 53897);
            }(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4], vVVVVVUndefined8232[5]);
            f13(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
            return ~(vF14 & 2982) & 2982 | ~(vF14 & 2982) & vF14;
          }(vVVVVVUndefined8232[1], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[0]);
          return ((235 + (vMo ^ vF13)) * 48271 + 0) % 2147483647;
        }(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]);
        f14(vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4], vVVVVVUndefined8232[5], vVVVVVUndefined8232[0]);
        return (vF12 | 61318) & ~(vF12 & 61318);
      }(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]);
      f438(vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[0]);
      return ~(vF11 & 42958) & vF11 | ~(vF11 & 42958) & 42958;
    }(p74, 5230, 5444, 7252);
  }
  const v152 = 100;
  const v153 = 20;
  const v154 = "development";
  const vV302 = v30;
  const v155 = 16;
  const v156 = "production";
  function v595(p99) {
    this.ΔⲆⵠⵠⵠ = 2147483648;
    this.a = 1103515245;
    this.c = 12345;
    this.state = p99 || Math.floor(Math.random() * (this.ΔⲆⵠⵠⵠ - 1));
  }
  v595.prototype.random = function () {
    this.state = (this.a * this.state + this.c) % this.ΔⲆⵠⵠⵠ;
    return this.state / this.ΔⲆⵠⵠⵠ;
  };
  const v157 = 11;
  v595.prototype.ⲆⲆⵠⵠⲆΔⵠ = function (p100) {
    this.state = p100;
  };
  const v158 = 14;
  ΔⲆⵠⲆΔᐃΔ = 10000;
  const vVUndefined13 = vUndefined;
  ⵠΔⵠᐃᐃⲆΔ = [];
  var v159 = new v595();
  v159.ⲆⲆⵠⵠⲆΔⵠ(new Date().getTime());
  for (var v160 = 0; ΔⲆⵠⲆΔᐃΔ > v160; v160++) {
    ⵠΔⵠᐃᐃⲆΔ.push(v159.random());
  }
  const v161 = 19;
  const v162 = 17;
  function f13(p101, p102, p103, p104, p105) {
    vVUndefined9(v802, p101, p102, p103, p104, p105);
    return ((8 + (f69(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]) ^ function (p106, p107, p108, p109) {
      vVVUndefined10(v802, p106, p107, p108, p109);
      const vGp = f438(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
      f83(vVVVVVUndefined8232[3], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]);
      return ~(vGp & 26161) & vGp | ~(vGp & 26161) & 26161;
    }(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3]))) * 48271 + 0) % 2147483647;
  }
  const vV312 = v31;
  function f14(p110, p111, p112, p113, p114) {
    vVVUndefined12(v802, p110, p111, p112, p113, p114);
    const vF92 = f9(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3]);
    const vVp = f504(vVVVVVUndefined8232[4], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
    return (8 << ((vF92 ^ vVp) >> 8 & 255)) + (0 << ((vF92 ^ vVp) >> 24 & 255)) + (16 << ((vF92 ^ vVp) >> 16 & 255)) + (24 << ((vF92 ^ vVp) & 255));
  }
  function f15(p115, p116, p117, p118, p119) {
    const v163 = ~(p115 & 34574) & (p115 | 34574);
    const v164 = ((60620 + p116) * 22695477 + 1) % 4294967296;
    const v165 = (24 << (p117 >> 24 & 255)) + (0 << (p117 & 255)) + (16 << (p117 >> 16 & 255)) + (8 << (p117 >> 8 & 255));
    const v166 = (12703 + p118) % 65373;
    const v167 = ~(p119 & 15671) & p119 | ~(p119 & 15671) & 15671;
    const vRl = f84(v163, v164, v165, v166, v167);
    f84(v163, v164, v165, v166, v167);
    return (vRl | 43374) & ~(vRl & 43374);
  }
  const v168 = 15;
  const v169 = 14;
  function f16(p120, p121, p122, p123, p124, p125) {
    const v170 = ((39488 + p120) * 214013 + 2531011) % 4294967296;
    const v171 = ~(p121 & 49976) & p121 | ~(p121 & 49976) & 49976;
    const v172 = ~(p122 & 35856) & p122 | ~(p122 & 35856) & 35856;
    const v173 = p123 ^ 52219;
    const v174 = (p124 + 3575) % 65503;
    const v175 = ~(p125 & 6932) & p125 | ~(p125 & 6932) & 6932;
    const vTn = f33(v170, v171, v172, v173, v174);
    const vF15 = function (p126, p127, p128, p129, p130, p131) {
      const v176 = p126 ^ 30142;
      const v177 = (p127 + 63025) % 65493;
      const v178 = p128 ^ 30777;
      const v179 = ((45939 + p129) * 22695477 + 1) % 4294967296;
      const v180 = (8 << (p130 >> 16 & 255)) + (32 << (p130 >> 24 & 255)) + (24 << (p130 >> 32 & 255)) + (16 << (p130 >> 8 & 255));
      const v181 = (p131 | 45652) & ~(p131 & 45652);
      const vTn2 = f33(v176, v177, v178, v179, v180);
      f18(v181, v176, v177, v178, v179);
      f31(v180, v181, v176, v177, v178, v179);
      return vTn2 ^ 60048;
    }(v175, v170, v171, v172, v173, v174);
    f27(v175, v170, v171, v172, v173, v174);
    const v182 = (1013904223 + (60709 + (vTn ^ vF15)) * 1664525) % 4294967296;
    return ~(v182 & 42138) & v182 | ~(v182 & 42138) & 42138;
  }
  function f17(p132, p133, p134, p135) {
    const v183 = ~(p132 & 59259) & p132 | ~(p132 & 59259) & 59259;
    const v184 = ~(p133 & 56097) & p133 | ~(p133 & 56097) & 56097;
    const v185 = ((43315 + p134) * 1664525 + 1013904223) % 4294967296;
    const v186 = (8 << (p135 >> 24 & 255)) + (32 << (p135 >> 32 & 255)) + (24 << (p135 >> 8 & 255)) + (16 << (p135 >> 16 & 255));
    const vF16 = function (p136, p137, p138, p139, p140, p141) {
      const v187 = p136 ^ 10715;
      const v188 = (24 << (p137 >> 16 & 255)) + (16 << (p137 >> 32 & 255)) + (32 << (p137 >> 8 & 255)) + (8 << (p137 >> 24 & 255));
      const v189 = (8 << (p138 >> 16 & 255)) + (32 << (p138 >> 24 & 255)) + (16 << (p138 >> 8 & 255)) + (24 << (p138 >> 32 & 255));
      const v190 = p139 ^ 40782;
      const v191 = p140 ^ 41301;
      const v192 = ~(p141 & 12091) & (p141 | 12091);
      const vRt = f25(v187, v188, v189, v190, v191, v192);
      f25(v187, v188, v189, v190, v191, v192);
      f30(v187, v188, v189, v190, v191);
      const v193 = (vRt | 3006) & ~(vRt & 3006);
      return ~(v193 & 24460) & (v193 | 24460);
    }(v183, v184, v185, v186, v183, v184);
    const vLn = f38(v185, v186, v183, v184, v185);
    f25(v186, v183, v184, v185, v186, v183);
    const v194 = (1013904223 + (26191 + (vF16 ^ vLn)) * 1664525) % 4294967296;
    return (v194 | 38630) & ~(v194 & 38630);
  }
  const vV303 = v30;
  function f18(p142, p143, p144, p145, p146) {
    const v195 = ((p142 + 14772) * 2147483629 + 2147483587) % 2147483647;
    const v196 = p143 ^ 63080;
    const v197 = ((p144 + 60304) * 22695477 + 1) % 4294967296;
    const v198 = ~(p145 & 5467) & 5467 | ~(p145 & 5467) & p145;
    const v199 = (p146 | 40165) & ~(p146 & 40165);
    const vF17 = function (p147, p148, p149, p150) {
      const v200 = (p147 | 57611) & ~(p147 & 57611);
      const v201 = ((p148 + 56889) * 1664525 + 1013904223) % 4294967296;
      const v202 = p149 ^ 62842;
      const v203 = ~(p150 & 1179) & p150 | ~(p150 & 1179) & 1179;
      const vJt = f21(v200, v201, v202, v203);
      const vAn = f35(v200, v201, v202, v203);
      f17(v200, v201, v202, v203);
      const v204 = (24 << ((vJt ^ vAn) >> 24 & 255)) + (8 << ((vJt ^ vAn) >> 16 & 255)) + (16 << ((vJt ^ vAn) >> 32 & 255)) + (32 << ((vJt ^ vAn) >> 8 & 255));
      return ~(v204 & 63304) & (v204 | 63304);
    }(v195, v196, v197, v198);
    const vLn2 = f38(v199, v195, v196, v197, v198);
    return ((28765 + ((16 << ((vF17 ^ vLn2) >> 24 & 255)) + (8 << ((vF17 ^ vLn2) >> 16 & 255)) + (24 << ((vF17 ^ vLn2) >> 32 & 255)) + (32 << ((vF17 ^ vLn2) >> 8 & 255)) ^ f41(v199, v195, v196, v197, v198, v199))) * 1664525 + 1013904223) % 4294967296;
  }
  const v205 = 2;
  function f19(p151, p152, p153, p154, p155) {
    const v206 = (12345 + (23101 + p151) * 1103515245) % 2147483648;
    const v207 = p152 ^ 58614;
    const v208 = ((p153 + 45267) * 214013 + 2531011) % 4294967296;
    const v209 = p154 ^ 40810;
    const v210 = (24 << (p155 >> 24 & 255)) + (8 << (p155 >> 32 & 255)) + (32 << (p155 >> 8 & 255)) + (16 << (p155 >> 16 & 255));
    const vBn = f39(v206, v207);
    const vF172 = f17(v208, v209, v210, v206);
    (function (p156, p157, p158, p159) {
      const v211 = (p156 + 34282) % 65336;
      const v212 = ~(p157 & 45181) & 45181 | ~(p157 & 45181) & p157;
      const v213 = (16 << (p158 >> 8 & 255)) + (32 << (p158 >> 24 & 255)) + (8 << (p158 >> 32 & 255)) + (24 << (p158 >> 16 & 255));
      const v214 = ~(p159 & 25475) & 25475 | ~(p159 & 25475) & p159;
      const vF18 = function (p160, p161) {
        const v215 = ~(p160 & 41406) & p160 | ~(p160 & 41406) & 41406;
        const v216 = ((p161 + 17922) * 1103515245 + 12345) % 2147483648;
        const vVn = f40(v215, v216, v215);
        f26(v216, v215, v216, v215);
        return ((42346 + (vVn ^ 18573 ^ f20(v216, v215, v216, v215, v216))) * 2147483629 + 2147483587) % 2147483647;
      }(v211, v212);
      const vSn = f36(v213, v214, v211, v212, v213);
      f39(v214, v211);
      const v217 = (58498 + (vF18 ^ vSn)) % 65531;
    })(v207, v208, v209, v210);
    const v218 = (24 << ((vBn ^ vF172) >> 24 & 255)) + (32 << ((vBn ^ vF172) >> 16 & 255)) + (8 << ((vBn ^ vF172) >> 32 & 255)) + (16 << ((vBn ^ vF172) >> 8 & 255));
    return ~(v218 & 13644) & v218 | ~(v218 & 13644) & 13644;
  }
  const v219 = 255;
  function f20(p162, p163, p164, p165, p166) {
    const v220 = (32 << (p162 >> 24 & 255)) + (16 << (p162 >> 8 & 255)) + (24 << (p162 >> 16 & 255)) + (8 << (p162 >> 32 & 255));
    const v221 = (p163 + 39144) % 65406;
    const v222 = p164 ^ 34575;
    const v223 = ~(p165 & 37841) & p165 | ~(p165 & 37841) & 37841;
    const v224 = (p166 | 25975) & ~(p166 & 25975);
    const vJt2 = f21(v220, v221, v222, v223);
    f36(v224, v220, v221, v222, v223);
    f27(v224, v220, v221, v222, v223, v224);
    return (vJt2 | 19326) & ~(vJt2 & 19326) ^ 36297;
  }
  function f21(p167, p168, p169, p170) {
    const v225 = p167 ^ 11762;
    const v226 = ~(p168 & 19425) & 19425 | ~(p168 & 19425) & p168;
    return ((55182 + (((17757 + ((32 << ((v225 ^ v226) >> 32 & 255)) + (8 << ((v225 ^ v226) >> 8 & 255)) + (24 << ((v225 ^ v226) >> 24 & 255)) + (16 << ((v225 ^ v226) >> 16 & 255)) ^ (32 << (p169 >> 16 & 255)) + (8 << (p169 >> 32 & 255)) + (24 << (p169 >> 24 & 255)) + (16 << (p169 >> 8 & 255)))) * 1664525 + 1013904223) % 4294967296 ^ (~(p170 & 259) & 259 | ~(p170 & 259) & p170))) * 1664525 + 1013904223) % 4294967296;
  }
  function f22(p171, p172, p173, p174, p175) {
    const v227 = (24 << (p171 >> 24 & 255)) + (32 << (p171 >> 16 & 255)) + (16 << (p171 >> 8 & 255)) + (8 << (p171 >> 32 & 255));
    const v228 = (12345 + (p172 + 3024) * 1103515245) % 2147483648;
    const v229 = (8 << (p173 >> 8 & 255)) + (32 << (p173 >> 32 & 255)) + (24 << (p173 >> 16 & 255)) + (16 << (p173 >> 24 & 255));
    const v230 = (1 + (p174 + 41324) * 22695477) % 4294967296;
    const v231 = (p175 | 19607) & ~(p175 & 19607);
    const vXt = f29(v227, v228);
    f36(v229, v230, v231, v227, v228);
    f31(v229, v230, v231, v227, v228, v229);
    const v232 = ~(vXt & 49323) & 49323 | ~(vXt & 49323) & vXt;
    return ~(v232 & 46567) & (v232 | 46567);
  }
  const v233 = 10;
  const v234 = 14;
  const v235 = 18;
  function f23(p176, p177, p178, p179, p180, p181) {
    const v236 = (1013904223 + (p176 + 28824) * 1664525) % 4294967296;
    const v237 = (1013904223 + (13210 + p177) * 1664525) % 4294967296;
    const v238 = ~(p178 & 32165) & 32165 | ~(p178 & 32165) & p178;
    const v239 = (24 << (p179 >> 24 & 255)) + (16 << (p179 >> 8 & 255)) + (8 << (p179 >> 16 & 255)) + (32 << (p179 >> 32 & 255));
    const v240 = (1 + (39199 + p180) * 22695477) % 4294967296;
    const v241 = p181 ^ 33037;
    const vF19 = function (p182, p183, p184) {
      const v242 = (12345 + (39051 + p182) * 1103515245) % 2147483648;
      const v243 = (p183 | 44117) & ~(p183 & 44117);
      const v244 = (24 << (p184 >> 24 & 255)) + (8 << (p184 >> 16 & 255)) + (16 << (p184 >> 32 & 255)) + (32 << (p184 >> 8 & 255));
      const vVt = f28(v242, v243, v244, v242, v243);
      const vCn = f41(v244, v242, v243, v244, v242, v243);
      const vF20 = function (p185, p186) {
        const v245 = (16 << (p185 >> 8 & 255)) + (32 << (p185 >> 16 & 255)) + (8 << (p185 >> 32 & 255)) + (24 << (p185 >> 24 & 255));
        const v246 = (32 << (p186 >> 32 & 255)) + (24 << (p186 >> 24 & 255)) + (8 << (p186 >> 8 & 255)) + (16 << (p186 >> 16 & 255));
        const v$t = f31(v245, v246, v245, v246, v245, v246);
        (function (p187, p188, p189, p190, p191) {
          const v247 = p187 ^ 64570;
          const v248 = (2531011 + (p188 + 41768) * 214013) % 4294967296;
          const v249 = (1013904223 + (p189 + 43923) * 1664525) % 4294967296;
          const v250 = (16 << (p190 >> 32 & 255)) + (8 << (p190 >> 24 & 255)) + (32 << (p190 >> 16 & 255)) + (24 << (p190 >> 8 & 255));
          const v251 = (p191 | 21896) & ~(p191 & 21896);
          const vF21 = function (p192, p193) {
            const v252 = ((p192 + 49468) * 1103515245 + 12345) % 2147483648;
            const v253 = ((p193 + 30513) * 214013 + 2531011) % 4294967296;
            const vF23 = function (p194, p195, p196) {
              const v254 = ((5294 + p194) * 1664525 + 1013904223) % 4294967296;
              const v255 = (p195 | 55665) & ~(p195 & 55665);
              const v256 = (p196 + 54633) % 65404;
              const vF182 = f18(v254, v255, v256, v254, v255);
              (function (p197, p198, p199, p200, p201, p202) {
                const v257 = (2531011 + (p197 + 16955) * 214013) % 4294967296;
                const v258 = ((9436 + p198) * 1103515245 + 12345) % 2147483648;
                const v259 = (p199 | 14774) & ~(p199 & 14774);
                const v260 = (p200 | 48802) & ~(p200 & 48802);
                const v261 = ~(p201 & 24998) & (p201 | 24998);
                const v262 = (8 << (p202 >> 8 & 255)) + (16 << (p202 >> 16 & 255)) + (32 << (p202 >> 32 & 255)) + (24 << (p202 >> 24 & 255));
                const vJt3 = f24(v257, v258, v259, v260);
                const vSn2 = f36(v261, v262, v257, v258, v259);
                const vJt4 = f24(v260, v261, v262, v257);
              })(v256, v254, v255, v256, v254, v255);
              f35(v256, v254, v255, v256);
              return ~(vF182 & 43875) & (vF182 | 43875) ^ 15116;
            }(v252, v253, v252);
            f30(v253, v252, v253, v252, v253);
            f21(v252, v253, v252, v253);
            return (vF23 | 17943) & ~(vF23 & 17943) ^ 21791;
          }(v247, v248);
          f26(v249, v250, v251, v247);
          const vF222 = f22(v248, v249, v250, v251, v247);
        })(v245, v246, v245, v246, v245);
        f29(v246, v245);
        return (v$t | 58283) & ~(v$t & 58283) ^ 8337;
      }(v244, v242);
      const v263 = (16 << ((vVt ^ vCn) >> 32 & 255)) + (24 << ((vVt ^ vCn) >> 24 & 255)) + (32 << ((vVt ^ vCn) >> 8 & 255)) + (8 << ((vVt ^ vCn) >> 16 & 255));
      return (8 << ((v263 ^ vF20) >> 32 & 255)) + (16 << ((v263 ^ vF20) >> 8 & 255)) + (32 << ((v263 ^ vF20) >> 16 & 255)) + (24 << ((v263 ^ vF20) >> 24 & 255));
    }(v236, v237, v238);
    f35(v239, v240, v241, v236);
    return ((34159 + (vF19 ^ 2959 ^ f24(v237, v238, v239, v240))) * 1103515245 + 12345) % 2147483648;
  }
  const v264 = 0;
  function f24(p203, p204, p205, p206) {
    const v265 = ~(p203 & 33107) & (p203 | 33107);
    const v266 = (24 << (p204 >> 32 & 255)) + (32 << (p204 >> 8 & 255)) + (8 << (p204 >> 16 & 255)) + (16 << (p204 >> 24 & 255));
    const v267 = ~(p205 & 32053) & (p205 | 32053);
    const v268 = p206 ^ 12240;
    const vF24 = function (p207, p208, p209, p210) {
      const v269 = (32 << (p207 >> 32 & 255)) + (16 << (p207 >> 16 & 255)) + (24 << (p207 >> 24 & 255)) + (8 << (p207 >> 8 & 255));
      const v270 = (1 + (50595 + p208) * 22695477) % 4294967296;
      const v271 = ~(p209 & 40066) & p209 | ~(p209 & 40066) & 40066;
      const v272 = p210 ^ 18768;
      const vTn3 = f33(v269, v270, v271, v272, v269);
      const vF192 = f19(v270, v271, v272, v269, v270);
      const vNn = f34(v271, v272);
      return ((16767 + ((2531011 + (35287 + (vTn3 ^ vF192)) * 214013) % 4294967296 ^ vNn)) * 1664525 + 1013904223) % 4294967296;
    }(v265, v266, v267, v268);
    f35(v265, v266, v267, v268);
    return (2531011 + (44352 + ((~(vF24 & 64131) & 64131 | ~(vF24 & 64131) & vF24) ^ f33(v265, v266, v267, v268, v265))) * 214013) % 4294967296;
  }
  const v273 = 20;
  function f25(p211, p212, p213, p214, p215, p216) {
    const v274 = ~(p211 & 36133) & (p211 | 36133);
    const v275 = (p212 | 13670) & ~(p212 & 13670);
    const v276 = (p213 | 31390) & ~(p213 & 31390);
    const v277 = p214 ^ 64081;
    const v278 = p215 ^ 7550;
    const v279 = (2147483587 + (p216 + 63950) * 2147483629) % 2147483647;
    return (12345 + (36760 + (((62552 + (f37(v274, v275, v276, v277, v278) ^ f35(v279, v274, v275, v276))) * 2147483629 + 2147483587) % 2147483647 ^ f30(v277, v278, v279, v274, v275))) * 1103515245) % 2147483648;
  }
  const v280 = 13;
  const v281 = 8;
  const v282 = 100;
  function f26(p217, p218, p219, p220) {
    const v283 = (p217 | 15432) & ~(p217 & 15432);
    const v284 = p218 ^ 12315;
    const v285 = p219 ^ 38714;
    const v286 = p220 ^ 58084;
    const vF162 = f16(v283, v284, v285, v286, v283, v284);
    f35(v285, v286, v283, v284);
    return ((34681 + ((~(vF162 & 41134) & vF162 | ~(vF162 & 41134) & 41134) ^ f27(v285, v286, v283, v284, v285, v286))) * 214013 + 2531011) % 4294967296;
  }
  const v287 = 11;
  const v288 = 17;
  const v289 = 15;
  const v290 = 16;
  const v291 = 20;
  const v292 = 2;
  function f27(p221, p222, p223, p224, p225, p226) {
    const v293 = p221 ^ 23409;
    const v294 = p222 ^ 26380;
    const v295 = ((p225 + 33017) * 1103515245 + 12345) % 2147483648;
    const v296 = p226 ^ 42490;
    return ((19056 + (f21(v293, v294, p223 ^ 53590, p224 ^ 36633) ^ f21(v295, v296, v293, v294))) * 22695477 + 1) % 4294967296;
  }
  function f28(p227, p228, p229, p230, p231) {
    const v297 = ((9716 + p227) * 1664525 + 1013904223) % 4294967296;
    const v298 = ~(p228 & 7703) & p228 | ~(p228 & 7703) & 7703;
    const v299 = (p229 | 31275) & ~(p229 & 31275);
    const v300 = ~(p230 & 25693) & 25693 | ~(p230 & 25693) & p230;
    const v301 = (8 << (p231 >> 8 & 255)) + (32 << (p231 >> 24 & 255)) + (24 << (p231 >> 16 & 255)) + (16 << (p231 >> 32 & 255));
    const vF27 = f27(v297, v298, v299, v300, v301, v297);
    const vF212 = f21(v298, v299, v300, v301);
    f40(v297, v298, v299);
    return (24 << ((vF27 ^ vF212) >> 16 & 255)) + (8 << ((vF27 ^ vF212) >> 8 & 255)) + (32 << ((vF27 ^ vF212) >> 24 & 255)) + (16 << ((vF27 ^ vF212) >> 32 & 255)) ^ 31710;
  }
  function f29(p232, p233) {
    const v302 = ((p232 + 44664) * 1664525 + 1013904223) % 4294967296;
    const v303 = p233 ^ 53080;
    return (1 + (57525 + ((17769 + (f37(v302, v303, v302, v303, v302) ^ f36(v303, v302, v303, v302, v303))) % 65357 ^ f21(v302, v303, v302, v303))) * 22695477) % 4294967296;
  }
  function f30(p234, p235, p236, p237, p238) {
    const v304 = (2147483587 + (p234 + 64762) * 2147483629) % 2147483647;
    const v305 = ((18197 + p235) * 214013 + 2531011) % 4294967296;
    const v306 = (2531011 + (22845 + p236) * 214013) % 4294967296;
    const v307 = (32 << (p237 >> 16 & 255)) + (16 << (p237 >> 8 & 255)) + (8 << (p237 >> 32 & 255)) + (24 << (p237 >> 24 & 255));
    const v308 = ~(p238 & 11999) & p238 | ~(p238 & 11999) & 11999;
    const vF272 = f27(v304, v305, v306, v307, v308, v304);
    const v$t2 = f31(v305, v306, v307, v308, v304, v305);
    f21(v306, v307, v308, v304);
    return (8 << ((vF272 ^ v$t2) >> 24 & 255)) + (16 << ((vF272 ^ v$t2) >> 16 & 255)) + (24 << ((vF272 ^ v$t2) >> 8 & 255)) + (32 << ((vF272 ^ v$t2) >> 32 & 255)) ^ 35444;
  }
  function f31(p239, p240, p241, p242, p243, p244) {
    const v309 = (24 << (p239 >> 24 & 255)) + (32 << (p239 >> 16 & 255)) + (16 << (p239 >> 8 & 255)) + (8 << (p239 >> 32 & 255));
    const v310 = (p240 | 41551) & ~(p240 & 41551);
    const v311 = (24 << (p241 >> 24 & 255)) + (16 << (p241 >> 32 & 255)) + (8 << (p241 >> 16 & 255)) + (32 << (p241 >> 8 & 255));
    const v312 = ~(p242 & 32641) & (p242 | 32641);
    const v313 = ((p243 + 35582) * 214013 + 2531011) % 4294967296;
    const v314 = ~(p244 & 1090) & (p244 | 1090);
    const vCn2 = f41(v309, v310, v311, v312, v313, v314);
    f20(v309, v310, v311, v312, v313);
    f21(v314, v309, v310, v311);
    const v315 = ~(vCn2 & 8077) & 8077 | ~(vCn2 & 8077) & vCn2;
    return ~(v315 & 3708) & (v315 | 3708);
  }
  function f32(p245) {
    return f23(p245, 8260, 46947, 8004, 37330, 5330);
  }
  function f33(p246, p247, p248, p249, p250) {
    const v316 = p246 ^ 62008;
    const v317 = (24 << (p247 >> 32 & 255)) + (8 << (p247 >> 16 & 255)) + (32 << (p247 >> 8 & 255)) + (16 << (p247 >> 24 & 255));
    const v318 = ((p248 + 46531) * 22695477 + 1) % 4294967296;
    const v319 = ~(p249 & 1884) & 1884 | ~(p249 & 1884) & p249;
    const v320 = ~(p250 & 55588) & 55588 | ~(p250 & 55588) & p250;
    const vF183 = f18(v316, v317, v318, v319, v320);
    f41(v316, v317, v318, v319, v320, v316);
    return ((3037 + (vF183 ^ 57467 ^ f38(v317, v318, v319, v320, v316))) * 1664525 + 1013904223) % 4294967296;
  }
  function f34(p251, p252) {
    const v321 = (2531011 + (p251 + 62874) * 214013) % 4294967296;
    const v322 = (24 << (p252 >> 24 & 255)) + (16 << (p252 >> 32 & 255)) + (8 << (p252 >> 8 & 255)) + (32 << (p252 >> 16 & 255));
    const vF273 = f27(v321, v322, v321, v322, v321, v322);
    const vF274 = f27(v321, v322, v321, v322, v321, v322);
    f21(v321, v322, v321, v322);
    const v323 = (16 << ((vF273 ^ vF274) >> 32 & 255)) + (8 << ((vF273 ^ vF274) >> 24 & 255)) + (24 << ((vF273 ^ vF274) >> 16 & 255)) + (32 << ((vF273 ^ vF274) >> 8 & 255));
    return ~(v323 & 55949) & 55949 | ~(v323 & 55949) & v323;
  }
  function f35(p253, p254, p255, p256) {
    const v324 = (2147483587 + (37418 + p253) * 2147483629) % 2147483647;
    const v325 = p254 ^ 57623;
    const v326 = ~(p255 & 40280) & p255 | ~(p255 & 40280) & 40280;
    const v327 = ~(p256 & 24601) & p256 | ~(p256 & 24601) & 24601;
    const vF29 = f29(v324, v325);
    f29(v326, v327);
    f38(v324, v325, v326, v327, v324);
    const v328 = ~(vF29 & 43902) & 43902 | ~(vF29 & 43902) & vF29;
    return (v328 | 8862) & ~(v328 & 8862);
  }
  const v329 = 4;
  const v330 = 0;
  function f36(p257, p258, p259, p260, p261) {
    const v331 = ~(p257 & 42203) & p257 | ~(p257 & 42203) & 42203;
    const v332 = p258 ^ 50118;
    const v333 = p259 ^ 41620;
    const v334 = ((p260 + 34240) * 2147483629 + 2147483587) % 2147483647;
    const v335 = (32 << (p261 >> 16 & 255)) + (16 << (p261 >> 8 & 255)) + (8 << (p261 >> 32 & 255)) + (24 << (p261 >> 24 & 255));
    const vCn3 = f41(v331, v332, v333, v334, v335, v331);
    f41(v332, v333, v334, v335, v331, v332);
    return (2531011 + (53616 + ((vCn3 | 43477) & ~(vCn3 & 43477) ^ f21(v333, v334, v335, v331))) * 214013) % 4294967296;
  }
  function f37(p262, p263, p264, p265, p266) {
    const v336 = (16 << (p262 >> 32 & 255)) + (24 << (p262 >> 24 & 255)) + (8 << (p262 >> 8 & 255)) + (32 << (p262 >> 16 & 255));
    const v337 = p263 ^ 55978;
    const v338 = ((p264 + 2934) * 1664525 + 1013904223) % 4294967296;
    const v339 = ~(p265 & 30642) & (p265 | 30642);
    const v340 = (8 << (p266 >> 8 & 255)) + (24 << (p266 >> 32 & 255)) + (16 << (p266 >> 24 & 255)) + (32 << (p266 >> 16 & 255));
    const vF36 = f36(v336, v337, v338, v339, v340);
    const vF30 = f30(v336, v337, v338, v339, v340);
    f21(v336, v337, v338, v339);
    const v341 = (16 << ((vF36 ^ vF30) >> 32 & 255)) + (24 << ((vF36 ^ vF30) >> 8 & 255)) + (8 << ((vF36 ^ vF30) >> 24 & 255)) + (32 << ((vF36 ^ vF30) >> 16 & 255));
    return ~(v341 & 23686) & (v341 | 23686);
  }
  const v342 = 18;
  function f38(p267, p268, p269, p270, p271) {
    const v343 = ((p267 + 49173) * 1103515245 + 12345) % 2147483648;
    const v344 = (p268 + 52922) % 65337;
    const v345 = p269 ^ 25250;
    const v346 = ~(p270 & 10903) & 10903 | ~(p270 & 10903) & p270;
    const v347 = ~(p271 & 33814) & 33814 | ~(p271 & 33814) & p271;
    const vF202 = f20(v343, v344, v345, v346, v347);
    const vBn2 = f39(v343, v344);
    f20(v345, v346, v347, v343, v344);
    const v348 = (1 + (19675 + (vF202 ^ vBn2)) * 22695477) % 4294967296;
    return ~(v348 & 7922) & v348 | ~(v348 & 7922) & 7922;
  }
  const vVVUndefined13 = vVUndefined;
  const v349 = 255;
  const v350 = 3;
  function f39(p272, p273) {
    const v351 = p272 ^ 24508;
    const v352 = (16 << (p273 >> 16 & 255)) + (24 << (p273 >> 8 & 255)) + (32 << (p273 >> 32 & 255)) + (8 << (p273 >> 24 & 255));
    const vF223 = f22(v351, v352, v351, v352, v351);
    const vF37 = f37(v352, v351, v352, v351, v352);
    f28(v351, v352, v351, v352, v351);
    const v353 = ((11269 + (vF223 ^ vF37)) * 2147483629 + 2147483587) % 2147483647;
    return ~(v353 & 40927) & 40927 | ~(v353 & 40927) & v353;
  }
  const v354 = 8;
  function f40(p274, p275, p276) {
    const v355 = p274 ^ 23323;
    const v356 = (2531011 + (61713 + p275) * 214013) % 4294967296;
    const v357 = (p276 | 24198) & ~(p276 & 24198);
    const vF224 = f22(v355, v356, v357, v355, v356);
    const vF225 = f22(v357, v355, v356, v357, v355);
    f22(v356, v357, v355, v356, v357);
    return (16 << ((vF224 ^ vF225) >> 32 & 255)) + (8 << ((vF224 ^ vF225) >> 8 & 255)) + (24 << ((vF224 ^ vF225) >> 24 & 255)) + (32 << ((vF224 ^ vF225) >> 16 & 255)) ^ 31181;
  }
  const v358 = 2;
  function f41(p277, p278, p279, p280, p281, p282) {
    const v359 = p279 ^ 8102;
    const v360 = (24 << (p280 >> 16 & 255)) + (32 << (p280 >> 32 & 255)) + (8 << (p280 >> 24 & 255)) + (16 << (p280 >> 8 & 255));
    const v361 = ~(p281 & 29687) & 29687 | ~(p281 & 29687) & p281;
    const v362 = (1 + (62237 + p282) * 22695477) % 4294967296;
    const vF34 = f34((p277 + 52483) % 65496, (16 << (p278 >> 16 & 255)) + (24 << (p278 >> 8 & 255)) + (32 << (p278 >> 24 & 255)) + (8 << (p278 >> 32 & 255)));
    const vF342 = f34(v359, v360);
    f34(v361, v362);
    return (45290 + (vF34 ^ vF342)) % 65334 ^ 55575;
  }
  ⵠⲆⲆ = {
    ⵠΔΔᐃⵠΔⵠ: () => new Promise((p283, p284) => {
      vWindow.grecaptcha.ready(function () {
        vWindow.grecaptcha.execute("6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg", {
          action: "validate_recaptcha"
        }).then(function (p285) {
          p283(p285);
        }).catch(p286 => {
          if (v2315) {
            p283(0);
          } else {
            console.log(undefined);
            p284(p286);
          }
        });
      });
    }),
    ⲆⵠΔΔⵠⲆᐃΔⵠ: function (p287) {
      vWindow.open(p287, "_blank").focus();
    },
    ⲆΔⲆⵠⵠⲆΔ: function (p288) {
      vWindow.open(p288, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
    },
    ⵠᐃΔᐃⲆⵠΔ: function (p289, p290) {
      for (var v363 in p289) {
        if (p289[v363] != p290[v363]) {
          return false;
        }
      }
      return vV303;
    },
    ⲆⵠΔⵠᐃΔᐃΔΔ: function (p291, p292) {
      if (p291.length != p292.length) {
        return vV31;
      }
      for (var v364 = 0; v364 < p291.length; v364++) {
        if (typeof p291 == "object") {
          if (!this.ⵠᐃΔᐃⲆⵠΔ(p291[v364], p292[v364])) {
            return false;
          }
        } else if (p291[v364] != p292[v364]) {
          return false;
        }
      }
      return true;
    },
    ΔⲆΔⲆᐃⵠⵠ: function (p293, p294) {
      p294.x = p293.x;
      p294.y = p293.y;
    },
    ⲆⲆΔⵠΔΔⵠ: function (p295, p296) {
      return {
        x: p295.x - p296.x,
        y: p295.y - p296.y
      };
    },
    ⵠⵠⵠⲆᐃⲆᐃⲆⲆ: function (p297, p298) {
      p297.x *= p298;
      p297.y *= p298;
    },
    ⵠΔᐃⲆⲆΔⲆ: function (p299, p300) {
      return p299.x * p300.x + p299.y * p300.y;
    },
    ⲆⵠⵠΔⵠⵠⵠ: function (p301) {
      return Math.sqrt(p301.x * p301.x + p301.y * p301.y);
    },
    sign: function (p302) {
      if (p302 < 0) {
        return -1;
      } else {
        return 1;
      }
    },
    ⲆᐃΔⲆⵠᐃⲆ: function (p303, p304) {
      return p303.x * p304.y - p303.y * p304.x;
    },
    ΔᐃⵠΔᐃⵠΔ: function (p305, p306, p307, p308) {
      var v365 = p308 - p306;
      var v366 = p307 - p305;
      return Math.atan2(v365, v366);
    },
    ⲆΔΔᐃⵠⲆⲆ: function (p309, p310) {
      return Math.asin(this.ⵠΔᐃⲆⲆΔⲆ(p309, p310) / (this.ⲆⵠⵠΔⵠⵠⵠ(p309) * this.ⲆⵠⵠΔⵠⵠⵠ(p310))) * this.sign(this.ⲆᐃΔⲆⵠᐃⲆ(p309, p310));
    },
    ⵠⵠⲆΔΔᐃᐃ: function (p311) {
      ᐃⵠᐃΔΔᐃΔ = location.href;
      p311 = p311.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v367 = new RegExp("[\\?&]" + p311 + "=([^&#]*)").exec(ᐃⵠᐃΔΔᐃΔ);
      if (v367 === null) {
        return null;
      } else {
        return v367[1];
      }
    },
    Ⲇᐃᐃⵠⵠᐃᐃ: function (p312, p313) {
      var v368 = Math.PI * 2;
      p313 = (p313 % v368 + v368) % v368;
      if (Math.abs(p312 - p313) > Math.PI) {
        if (p312 > p313) {
          return p313 + v368;
        } else {
          return p313 - v368;
        }
      } else {
        return p313;
      }
    },
    ⵠⵠᐃⵠᐃⲆⲆ: function (p314, p315) {
      return this.ⲆΔΔᐃⵠⲆⲆ({
        x: 1,
        y: 0
      }, this.ⲆⲆΔⵠΔΔⵠ(p314, p315));
    },
    ᐃⵠᐃⲆ: function (p316, p317) {
      return Math.sqrt((p317.x - p316.x) * (p317.x - p316.x) + (p317.y - p316.y) * (p317.y - p316.y));
    },
    ᐃⲆⲆⲆⵠⵠⵠ: function (p318, p319) {
      return {
        x: Math.sin(p319) * p318,
        y: Math.cos(p319) * p318
      };
    },
    ⵠⵠⵠᐃⲆΔΔ: function (p320, p321) {
      p320.x += p321.x;
      p320.y += p321.y;
    },
    ᐃᐃⲆⵠΔΔⵠ: function (p322, p323) {
      p322.x -= p323.x;
      p322.y -= p323.y;
    },
    ΔⲆⵠΔⵠᐃⵠΔᐃ: function (p324, p325, p326) {
      p324.x += p325;
      p324.y += p326;
    },
    ΔΔⲆⲆⲆⵠⵠⲆⵠ: function (p327, p328, p329) {
      return {
        x: p327.x + p328,
        y: p327.y + p329
      };
    },
    ⲆⲆⲆⲆⵠ: function (p330, p331, p332) {
      p330.x += Math.sin(p332) * p331;
      p330.y += Math.cos(p332) * p331;
    },
    ᐃΔⵠⵠᐃΔΔ: function (p333, p334) {
      return Math.floor((p333 - p334) / 2);
    },
    ⵠᐃᐃⲆΔΔⲆ: function (p335, p336) {
      return {
        x: (p335.x + p336.x) / 2,
        y: (p335.y + p336.y) / 2
      };
    },
    ⵠⵠⲆⵠΔΔⵠ: function () {
      if (Math.random() > 0.5) {
        return 1;
      } else {
        return -1;
      }
    },
    ⲆᐃⲆⵠΔⲆⲆᐃⵠ: function (p337, p338, p339) {
      var v369 = this.ⵠⵠⲆⵠΔΔⵠ();
      var v370 = this.ⵠⵠⲆⵠΔΔⵠ();
      var v371 = Math.random() * Math.PI / 2;
      return {
        x: Math.floor(p337 + Math.sin(v371) * v369 * p339),
        y: Math.floor(p338 + Math.cos(v371) * v370 * p339)
      };
    },
    ΔⵠⲆᐃⲆⲆΔΔⲆ: function (p340, p341, p342, p343) {
      this.x = p340;
      this.y = p341;
      this.w = p342;
      this.ΔᐃⲆ = p343;
    },
    ΔⲆΔⲆᐃᐃΔΔⵠ: function (p344) {
      ⲆⲆᐃΔ = [];
      ⲆⲆᐃΔ.push.apply(ⲆⲆᐃΔ, p344);
      var v372 = [];
      while (ⲆⲆᐃΔ.length > 0) {
        var v373 = Math.floor(Math.random() * ⲆⲆᐃΔ.length);
        v372.push(ⲆⲆᐃΔ[v373]);
        ⲆⲆᐃΔ.splice(v373, 1);
      }
      return v372;
    },
    ΔᐃⵠᐃΔΔⵠ: function (p345) {
      if (p345 >= 20000) {
        p345 = (p345 - 20000) * 1000;
      } else if (p345 >= 10000) {
        p345 = (p345 - 10000) * 100;
      }
      return p345;
    },
    ΔⲆᐃⲆⵠⵠⲆ: function (p346) {
      if (typeof p346 != "number") {
        return "0";
      }
      if (p346 >= 10000) {
        var v374 = Math.floor(Math.log10(p346)) - 2;
        var v375 = Math.max(0, 3 - v374);
        var v376 = Math.floor(p346 / 1000).toString();
        if (v375) {
          for (var v377 = (v376 += "." + (p346 % 1000 / 1000).toString().substring(2).substring(0, v375)).length - 1, v378 = 0; v377 > 0 && v376[v377] == "0"; v377--) {
            v378++;
          }
          if ((v376 = v376.substring(0, v376.length - v378))[v376.length - 1] == ".") {
            v376 = v376.substring(0, v376.length - 1);
          }
        }
        return v376 += "k";
      }
      return p346.toString();
    },
    ⲆΔⵠⵠᐃⲆᐃ: function (p347) {
      return p347 * (2 - p347);
    },
    ΔⵠⵠⲆΔᐃᐃ: function (p348) {
      return --p348 * p348 * p348 + 1;
    },
    ⲆⲆⲆᐃⲆ: function (p349) {
      if (p349 < 0.5) {
        return p349 * 2 * p349;
      } else {
        return (4 - p349 * 2) * p349 - 1;
      }
    },
    ΔΔΔⵠⵠⵠΔ: function (p350) {
      if (p350 < 0.5) {
        return p350 * 4 * p350 * p350;
      } else {
        return (p350 - 1) * (p350 * 2 - 2) * (p350 * 2 - 2) + 1;
      }
    },
    ⵠΔΔᐃⵠⲆᐃⵠᐃ: function (p351) {
      if (p351 < 0.5) {
        return p351 * 8 * p351 * p351 * p351;
      } else {
        return 1 - --p351 * 8 * p351 * p351 * p351;
      }
    },
    ⵠⲆⵠΔᐃⲆᐃ: function (p352) {
      return 1 - --p352 * p352 * p352 * p352;
    },
    ᐃᐃᐃⲆⵠⲆᐃ: function (p353) {
      return 1 + --p353 * p353 * p353 * p353 * p353;
    },
    ᐃⵠᐃᐃ: function (p354, p355, p356, p357, p358, p359) {
      this.ⲆⲆΔ = p354;
      this.ⵠᐃᐃ = p355;
      this.max = p356;
      this.min = p357;
      this.ᐃᐃⵠⵠⵠⲆᐃ = p358;
      this.ᐃⲆᐃΔΔⲆⲆ = p359;
      this.ᐃⲆΔᐃᐃⵠⲆ = 0;
      this.ᐃⲆⲆ = function () {
        if (this.ⲆⲆΔ) {
          if ((v379 = this.ⵠᐃᐃ + v3116 * this.ᐃᐃⵠⵠⵠⲆᐃ) > this.max) {
            this.ⵠᐃᐃ = this.max;
            this.ⲆⲆΔ = false;
            return vV302;
          }
          this.ⵠᐃᐃ = v379;
        } else {
          var v379;
          if ((v379 = this.ⵠᐃᐃ - v3116 * this.ᐃⲆᐃΔΔⲆⲆ) < this.min) {
            this.ⵠᐃᐃ = this.min;
            this.ⲆⲆΔ = true;
          } else {
            this.ⵠᐃᐃ = v379;
          }
        }
      };
      return false;
    },
    ⵠᐃⵠᐃΔ: function (p360, p361, p362, p363, p364, p365) {
      this.ⲆᐃⵠᐃΔ = p360;
      this.ⵠⵠⲆⵠⵠ = p361;
      this.ΔⲆⲆᐃΔ = p362;
      this.ⵠⲆΔᐃᐃ = p363;
      this.x = p364;
      this.ⵠⵠᐃⵠᐃ = p365;
      this.ⵠᐃⲆΔⲆⲆᐃ = function () {
        this.x = this.ⵠᐃᐃΔΔΔⵠᐃΔ;
        this.ⵠⵠⲆⵠⵠ = 0;
      };
      this.ⲆΔⵠΔⵠⲆΔ = function (p366) {
        if (p366 !== this.ⵠⵠᐃⵠᐃ) {
          this.ⵠⵠᐃⵠᐃ = p366;
          this.ⵠⲆΔᐃᐃ = this.x;
          this.ⵠⵠⲆⵠⵠ = 0;
        }
        if (this.ⵠⵠᐃⵠᐃ !== this.x) {
          this.ⵠⵠⲆⵠⵠ += v3116;
          if (this.ⵠⵠⲆⵠⵠ > this.ΔⲆⲆᐃΔ) {
            this.x = this.ⵠⵠᐃⵠᐃ;
          } else {
            var v380 = this.ⲆᐃⵠᐃΔ(this.ⵠⵠⲆⵠⵠ / this.ΔⲆⲆᐃΔ);
            this.x = this.ⵠⲆΔᐃᐃ + (this.ⵠⵠᐃⵠᐃ - this.ⵠⲆΔᐃᐃ) * v380;
          }
        }
      };
    },
    ⲆⵠⲆⵠᐃΔᐃ: function (p367, p368, p369, p370, p371, p372, p373, p374, p375) {
      this.ⲆᐃⵠᐃΔ = p367;
      this.ⵠⵠⲆⵠⵠ = p368;
      this.ΔⲆⲆᐃΔ = p369;
      this.ⵠⲆΔᐃᐃ = p370;
      this.ᐃΔᐃⵠᐃ = p371;
      this.x = p372;
      this.y = p373;
      this.ⵠⵠᐃⵠᐃ = p374;
      this.ⵠΔⵠΔⵠⵠΔ = p375;
      this.ⲆΔⵠΔⵠⲆΔ = function (p376) {
        if (p376.x != this.ⵠⵠᐃⵠᐃ || p376.y != this.ⵠΔⵠΔⵠⵠΔ) {
          this.ⵠⵠᐃⵠᐃ = p376.x;
          this.ⵠΔⵠΔⵠⵠΔ = p376.y;
          this.ⵠⲆΔᐃᐃ = this.x;
          this.ᐃΔᐃⵠᐃ = this.y;
          this.ⵠⵠⲆⵠⵠ = 0;
        }
        if (this.ⵠⵠᐃⵠᐃ != this.x || this.ⵠΔⵠΔⵠⵠΔ != this.y) {
          this.ⵠⵠⲆⵠⵠ += v3116;
          if (this.ⵠⵠⲆⵠⵠ > this.ΔⲆⲆᐃΔ) {
            this.x = this.ⵠⵠᐃⵠᐃ;
            this.y = this.ⵠΔⵠΔⵠⵠΔ;
          } else {
            var v381 = this.ⲆᐃⵠᐃΔ(this.ⵠⵠⲆⵠⵠ / this.ΔⲆⲆᐃΔ);
            this.x = this.ⵠⲆΔᐃᐃ + (this.ⵠⵠᐃⵠᐃ - this.ⵠⲆΔᐃᐃ) * v381;
            this.y = this.ᐃΔᐃⵠᐃ + (this.ⵠΔⵠΔⵠⵠΔ - this.ᐃΔᐃⵠᐃ) * v381;
          }
        }
      };
    },
    ΔⵠΔΔΔᐃᐃ: function (p377) {
      var v382 = "";
      for (var v383 = 0; v383 < p377; v383++) {
        v382 += String.fromCharCode(48 + Math.floor(Math.random() * 74));
      }
      return v382;
    },
    ΔᐃⵠΔⵠⲆᐃ: function (p378, p379) {
      p379 ||= location.href;
      p378 = p378.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v384 = new RegExp("[\\?&]" + p378 + "=([^&#]*)").exec(p379);
      if (v384 == null) {
        return null;
      } else {
        return v384[1];
      }
    },
    Ⲇᐃᐃᐃ: function (p380) {
      let v385 = "";
      const v386 = p380.length;
      for (let v387 = 0; v387 < v386; v387++) {
        v385 += String.fromCharCode(p380[v387]);
      }
      return v385;
    },
    ⲆⲆⵠⲆΔΔⲆ: function (p381, p382) {
      return p381.x >= p382.x && p381.x <= p382.x + p382.w && p381.y >= p382.y && p381.y <= p382.y + p382.ΔᐃⲆ || vV31;
    },
    ⵠⲆΔΔΔᐃⵠ: function (p383, p384, p385, p386, p387, p388, p389, p390) {
      if (Math.max(p383, p387) < Math.min(p384, p388) && Math.max(p385, p389) < Math.min(p386, p390)) {
        return 1;
      } else {
        return 0;
      }
    },
    ΔⵠⵠΔᐃ: function (p391, p392, p393) {
      return (1 - p393) * p391 + p393 * p392;
    },
    ᐃΔᐃΔⵠⵠⵠ: function (p394) {
      return p394.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
    }
  };
  Math.sign = Math.sign || function (p395) {
    if (p395 === 0) {
      return 0;
    } else if (p395 > 0) {
      return 1;
    } else {
      return -1;
    }
  };
  Math.log10 = Math.log10 || function (p396) {
    return Math.log(p396) / Math.ⵠᐃⲆᐃᐃⵠΔᐃⵠ;
  };
  const v388 = 13;
  const vVV302 = vV30;
  const v389 = 10;
  const v390 = 12;
  (function (p397) {
    var v391 = false;
    if (typeof ᐃᐃᐃⵠᐃΔᐃ == "function" && ᐃᐃᐃⵠᐃΔᐃ.ᐃⲆᐃΔⵠⲆΔᐃΔ) {
      ᐃᐃᐃⵠᐃΔᐃ(p397);
      v391 = true;
    }
    if (typeof ᐃⲆᐃⵠⲆᐃᐃ === "object") {
      ΔⲆΔⲆΔⲆⵠⲆⵠ.exports = p397();
      v391 = vV302;
    }
    if (!v391) {
      var v392 = vWindow.Δⵠⵠᐃ;
      var v393 = vWindow.Δⵠⵠᐃ = p397();
      v393.ᐃⵠⵠⵠⲆⵠᐃᐃᐃ = function () {
        vWindow.Δⵠⵠᐃ = v392;
        return v393;
      };
    }
  })(function () {
    function e() {
      for (var v394 = 0, v395 = {}; v394 < arguments.length; v394++) {
        var v396 = arguments[v394];
        for (var v397 in v396) {
          v395[v397] = v396[v397];
        }
      }
      return v395;
    }
    return function f43(p398) {
      function f44(p399, p400, p401) {
        var v398;
        if (typeof document != "undefined") {
          if (arguments.length > 1) {
            if (typeof (p401 = e({
              path: "/"
            }, f44.ᐃⲆⵠⲆᐃᐃΔ, p401)).expires == "number") {
              var v399 = new Date();
              v399.setMilliseconds(v399.getMilliseconds() + p401.expires * 86400000);
              p401.expires = v399;
            }
            try {
              v398 = JSON.stringify(p400);
              if (/^[\{\[]/.test(v398)) {
                p400 = v398;
              }
            } catch (e) {}
            p400 = p398.write ? p398.write(p400, p399) : encodeURIComponent(String(p400)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
            p399 = (p399 = (p399 = encodeURIComponent(String(p399))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
            return document.cookie = [p399, "=", p400, p401.expires ? "; expires=" + p401.expires.toUTCString() : "", p401.path ? "; path=" + p401.path : "", p401.domain ? "; domain=" + p401.domain : "", p401.ⲆᐃⵠΔⲆⲆΔΔⵠ ? "; secure" : ""].join("");
          }
          if (!p399) {
            v398 = {};
          }
          for (var v400 = document.cookie ? document.cookie.split("; ") : [], v401 = /(%[0-9A-Z]{2})+/g, v402 = 0; v400.length > v402; v402++) {
            var v403 = v400[v402].split("=");
            var v404 = v403.slice(1).join("=");
            if (v404.charAt(0) === "\"") {
              v404 = v404.slice(1, -1);
            }
            try {
              var v405 = v403[0].replace(v401, decodeURIComponent);
              v404 = p398.read ? p398.read(v404, v405) : p398(v404, v405) || v404.replace(v401, decodeURIComponent);
              if (this.json) {
                try {
                  v404 = JSON.parse(v404);
                } catch (e) {}
              }
              if (p399 === v405) {
                v398 = v404;
                break;
              }
              if (!p399) {
                v398[v405] = v404;
              }
            } catch (e) {}
          }
          return v398;
        }
      }
      f44.set = f44;
      f44.get = function (p402) {
        return f44.call(f44, p402);
      };
      f44.ΔⲆⲆⵠⲆΔΔΔΔ = function () {
        return f44.apply({
          json: vV303
        }, [].slice.call(arguments));
      };
      f44.ᐃⲆⵠⲆᐃᐃΔ = {};
      f44.remove = function (p403, p404) {
        f44(p403, "", e(p404, {
          expires: -1
        }));
      };
      f44.ᐃᐃⲆⵠⲆⵠΔᐃΔ = f43;
      return f44;
    }(function () {});
  });
  const v406 = 19;
  function f45(p405, p406, p407, p408) {
    const v407 = ~(p405 & 23282) & 23282 | ~(p405 & 23282) & p405;
    const v408 = (p406 | 47479) & ~(p406 & 47479);
    const v409 = (p407 | 22826) & ~(p407 & 22826);
    const v410 = ~(p408 & 22781) & 22781 | ~(p408 & 22781) & p408;
    const vDg = f70(v407, v408, v409, v410, v407);
    f15(v408, v409, v410, v407, v408);
    return ~(vDg & 14410) & (vDg | 14410);
  }
  function f46(p409, p410) {
    const v411 = ((6098 + p409) * 22695477 + 1) % 4294967296;
    const v412 = ((p410 + 20785) * 214013 + 2531011) % 4294967296;
    return ((33318 + (function (p411, p412, p413, p414) {
      const v413 = (p411 + 29362) % 65306;
      const v414 = ((31240 + p412) * 214013 + 2531011) % 4294967296;
      const v415 = ~(p413 & 56777) & 56777 | ~(p413 & 56777) & p413;
      const v416 = ~(p414 & 19945) & 19945 | ~(p414 & 19945) & p414;
      const vF45 = f45(v413, v414, v415, v416);
      f15(v413, v414, v415, v416, v413);
      return vF45 ^ 46764;
    }(v411, v412, v411, v412) ^ f84(v411, v412, v411, v412, v411))) * 1664525 + 1013904223) % 4294967296;
  }
  var v417 = document.getElementById("game_canvas");
  const v418 = 0;
  var v419 = v417.getContext("2d");
  var v420 = v417.width;
  var v421 = v417.height;
  const v422 = 11;
  const v423 = 16;
  const vVV31 = vV31;
  var v424 = v417.width / 2;
  var v425 = v417.height / 2;
  var v426 = {
    x: v424,
    y: v425
  };
  var v427 = 1;
  var v428 = 1;
  var v429 = -1;
  const vVV303 = vV303;
  const v430 = 256;
  const v431 = 1;
  var v432 = "J" + v461;
  const v433 = 17;
  var v434 = "S" + v475;
  const v435 = 11;
  const v436 = 14;
  var vVWindow = vWindow;
  const v437 = 100;
  var v438;
  var v439;
  var v440 = (v446 = "O") + "N";
  const v441 = 18;
  var v442 = 0;
  var vVVWindow = vVWindow;
  const vV313 = v31;
  const v443 = 19;
  v434 = "N";
  var v444;
  var v445 = "J";
  var v446 = "O" + v461;
  const v447 = 15;
  const v448 = 20;
  const vVV304 = vV30;
  var v449;
  var vVVVWindow = vVVWindow;
  var vVVVVWindow = vVVVWindow;
  const v450 = 256;
  const v451 = 16;
  v440 = "N" + undefined;
  const v452 = 255;
  const vV314 = v31;
  var v453;
  var vVVVVVWindow = vVVVVWindow;
  const v454 = 12;
  const v455 = 13;
  const v456 = 2;
  ;
  const v457 = 100;
  var v458;
  var vVVVVVVWindow = vVVVVVWindow;
  const v459 = 14;
  var v460;
  const vVVUndefined82 = vVUndefined8;
  var v461;
  var vVVVVVVVWindow = vVVVVVVWindow;
  const v462 = 17;
  var v463;
  const v464 = 2;
  const v465 = 0;
  const v466 = 10;
  var vVVVVVVVVWindow = vVVVVVVVWindow;
  v445 = "O";
  const v467 = 3;
  const v468 = 11;
  const v469 = 20;
  const v470 = 16;
  var v471;
  const v472 = 17;
  var v473 = vVVVVVVVVWindow = vVVVVVVVWindow;
  var v474;
  var vV473 = v473;
  var v475 = "J" + (v471 = "S");
  function f47(p415) {
    var v476 = new Image();
    v476.src = p415.toDataURL("image/png");
    v476.width = p415.width;
    v476.height = p415.height;
    v476.ΔᐃⵠΔⲆⵠⵠ = 1;
    return v476;
  }
  v417.oncontextmenu = function () {
    return false;
  };
  v432 = "J";
  const v477 = 256;
  const v478 = 19;
  v446 = v440;
  v444 = v438 = v439 = v475 + (v445 += v432 = v434);
  const v479 = 0;
  v440 = v461;
  v461 = v475;
  v453 = v475 + v445;
  const v480 = 20;
  v461 = v475;
  function f48(p416) {
    const v481 = Math.floor;
    let v482 = 0;
    Math.floor = function (p417) {
      for (let v483 = 0; v483 < 4893; v483++) {
        v482 += v483;
      }
      return v481(p417);
    };
  }
  v446 = v475;
  v449 = v453;
  v434 = v445 + v432;
  v458 = v438;
  v446 = v475 + v445;
  const v484 = 18;
  v460 = v439;
  const v485 = 1;
  const vVVV30 = vVV30;
  v440 = v475 + v445;
  const vVVVUndefined82 = vVVUndefined82;
  v463 = v444;
  const vVV312 = vV312;
  const v486 = 13;
  const v487 = 255;
  const v488 = 15;
  v445 = v461;
  v471 = v439;
  v474 = v438;
  v432 = v446;
  var v489 = vWindow.devicePixelRatio || 1;
  var v490 = v419.ⲆⲆⵠⲆⲆⲆⵠΔᐃ || v419.ΔΔᐃⵠⲆΔⵠⵠⲆ || v419.ⵠΔⲆΔⵠⵠⵠⲆⵠ || v419.ᐃⵠⵠᐃΔⵠΔᐃΔ || v419.ᐃΔΔᐃⲆⲆⲆᐃΔ || 1;
  function f49() {
    if (v417.width != vWindow.innerWidth) {
      v417.width = vWindow.innerWidth;
      v420 = v417.width;
      v424 = v417.width / 2;
    }
    if (v417.height != vWindow.innerHeight) {
      v417.height = vWindow.innerHeight;
      v421 = v417.height;
      v425 = v417.height / 2;
    }
    v426 = {
      x: v424,
      y: v425
    };
    var v491 = v417.width;
    var v492 = v417.height;
    v428 = v429 === -1 ? v489 / v490 : v429;
    v417.width = v491 * v428;
    v417.height = v492 * v428;
    v417.style.width = v491 + "px";
    v417.style.height = v492 + "px";
    v419.scale(v428, v428);
    if (v2885) {
      v2885.ⲆΔⵠ.ⵠᐃⵠⵠⲆᐃⲆ = v491;
      v2885.ⲆΔⵠ.ⵠⲆΔⲆⵠᐃΔ = v492;
    }
    if (v3117.ⲆΔᐃⵠⵠ) {
      v3117.ᐃⲆⲆ();
    } else if (v2883.ⲆΔᐃⵠⵠ) {
      v2883.ᐃⲆⲆ();
    } else if (v3081.ⲆΔᐃⵠⵠ) {
      v3081.ᐃⲆⲆ();
    } else if (v2886.ⲆΔᐃⵠⵠ) {
      v2886.ᐃⲆⲆ();
    }
  }
  var v493 = document.getElementById("game_body");
  const v494 = 10;
  const v495 = 18;
  const v496 = 15;
  const v497 = 2;
  const v498 = 4;
  v493.ondragstart = function () {
    return false;
  };
  v493.ondrop = function () {
    return vV31;
  };
  const v499 = 2;
  const v500 = 16;
  v493.onresize = f49;
  (function () {
    var v501 = 0;
    for (var v502 = ["ms", "moz", "webkit", "o"], v503 = 0; v502.length > v503 && !vWindow.requestAnimationFrame; ++v503) {
      vWindow.requestAnimationFrame = vWindow[v502[v503] + "RequestAnimationFrame"];
      vWindow.cancelAnimationFrame = vWindow[v502[v503] + "CancelAnimationFrame"] || vWindow[v502[v503] + "CancelRequestAnimationFrame"];
    }
    if (!vWindow.requestAnimationFrame) {
      vWindow.requestAnimationFrame = function (p418, p419) {
        var v504 = new Date().getTime();
        var v505 = Math.max(0, 16 - (v504 - v501));
        var v506 = vWindow.setTimeout(function () {
          p418(v504 + v505);
        }, v505);
        v501 = v504 + v505;
        return v506;
      };
    }
    if (!vWindow.cancelAnimationFrame) {
      vWindow.cancelAnimationFrame = function (p420) {
        clearTimeout(p420);
      };
    }
  })();
  const v507 = 255;
  const vF25 = function () {
    let v508 = 0;
    let v509 = 0;
    let v510 = 0;
    const v511 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 116, 97, 99, 107]);
    const v512 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([67, 97, 110, 118, 97, 115, 82, 101, 110, 100, 101, 114, 105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 50, 68]);
    const v513 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([112, 114, 111, 116, 111, 116, 121, 112, 101]);
    const v514 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([100, 114, 97, 119, 73, 109, 97, 103, 101]);
    ⵠⲆⲆ.Ⲇᐃᐃᐃ([103, 108, 111, 98, 97, 108, 65, 108, 112, 104, 97]);
    const v515 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([117, 115, 101, 114, 115, 99, 114, 105, 112, 116]);
    const v516 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([105, 110, 100, 101, 120, 79, 102]);
    const v517 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([77, 97, 116, 104]);
    const v518 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([103, 101, 116]);
    const v519 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([79, 98, 106, 101, 99, 116]);
    const v520 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121]);
    ⵠⲆⲆ.Ⲇᐃᐃᐃ([99, 101, 105, 108]);
    const v521 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([102, 108, 111, 111, 114]);
    const v522 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([87, 101, 98, 83, 111, 99, 107, 101, 116]);
    const v523 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 110, 100]);
    const v524 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 105, 103, 110]);
    const v525 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114]);
    const v526 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([102, 105, 108, 108, 82, 101, 99, 116]);
    const v527 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([103, 117, 105, 102, 121]);
    const v528 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([101, 118, 97, 108]);
    const v529 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([111, 112, 116, 105, 111, 110, 115]);
    const v530 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 88, 114, 97, 121]);
    const v531 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([10]);
    const v532 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 67, 111, 108, 111, 114, 101, 100, 83, 112, 105, 107, 101, 115]);
    const v533 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 83, 112, 105, 107, 101]);
    const v534 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 70, 101, 101, 100]);
    const v535 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 67, 114, 97, 102, 116]);
    const v536 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 82, 101, 99, 121, 99, 108, 101]);
    const v537 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 84, 111, 116, 101, 109]);
    ⵠⲆⲆ.Ⲇᐃᐃᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 69, 120, 116, 114, 97, 99, 116, 111, 114, 73, 110, 102, 111]);
    const v538 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([83, 97, 110, 100, 115, 116, 111, 114, 109, 73, 109, 97, 103, 101]);
    const v539 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([116, 111, 83, 116, 114, 105, 110, 103]);
    const v540 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([66, 108, 105, 122, 122, 97, 114, 100, 73, 109, 97, 103, 101]);
    const v541 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([73, 68, 76, 69]);
    const v542 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([67, 66, 79]);
    const v543 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([76, 69, 69, 84, 95, 83, 67, 82, 73, 80, 84, 95, 69, 88, 84, 69, 82, 78, 65, 76]);
    const v544 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([82, 101, 105, 100, 105, 116, 101, 83, 112, 105, 107, 101, 65, 108, 108, 121]);
    const v545 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([109, 97, 115, 116, 101, 114]);
    const v546 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([100, 111, 119, 110]);
    const v547 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([109, 111, 100, 101]);
    const v548 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([119, 97, 105, 116, 105, 110, 103]);
    const v549 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([104, 101, 105, 103, 104, 116]);
    const v550 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([119, 105, 100, 116, 104]);
    const v551 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([116, 105, 109, 101, 111, 117, 116]);
    const v552 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([111, 112, 97, 99, 105, 116, 121]);
    const v553 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([91, 99, 108, 97, 115, 115, 42, 61, 34, 103, 117, 105, 102, 121, 34, 93]);
    const v554 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([100, 111, 99, 117, 109, 101, 110, 116]);
    const v555 = ⵠⲆⲆ.Ⲇᐃᐃᐃ([113, 117, 101, 114, 121, 83, 101, 108, 101, 99, 116, 111, 114, 65, 108, 108]);
    function f50(p421) {
      try {
        p421();
      } catch (e) {
        if (e[v511][v516](v515) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f51(p422, p423) {
      try {
        if (vWindow[v519][v513][v520](p422)) {
          const v556 = vWindow[v519][v525](vWindow[v519][v513], p422);
          if (v556 && v556[v518] !== vVVUndefined13) {
            if (v556[v518][v539]()[v516](p423) !== -1) {
              return 1;
            }
          }
        }
      } catch (e) {}
      return 0;
    }
    function f52(p424) {
      try {
        vWindow[v528](p424);
        return 1;
      } catch (e) {
        return 0;
      }
    }
    function f53(p425) {
      try {
        if (vWindow[v519][v513][v520](p425)) {
          return 1;
        }
      } catch (e) {}
      return 0;
    }
    function f54(p426) {
      try {
        new p426();
      } catch (e) {
        if (e[v511][v516](v515) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    return {
      ΔᐃΔⲆⵠᐃⵠ: function () {
        if (v510 > 10000) {
          f32(v510);
          f71(v510);
          f11(v510);
        }
        v508++;
        if (v508 > 1000) {
          v508 = 0;
          v509 = f50(vWindow[v512][v513][v514]) || v509;
          v509 = f50(vWindow[v512][v513][v526]) || v509;
          v509 = f50(vWindow[v522][v513][v523]) || v509;
          v509 = function (p427) {
            if (p427 && p427[v539]) {
              if (p427[v539]()[v516](v531) !== -1) {
                return 1;
              }
            }
            return 0;
          }(f54) || v509;
          v509 = f54(vWindow[v522]) || v509;
          v509 = f51(v529, v545) || v509;
          v509 = f51(v541, v545) || v509;
          v509 = f51(v546, v545) || v509;
          v509 = f51(v547, v545) || v509;
          v509 = f51(v550, v545) || v509;
          v509 = f51(v549, v545) || v509;
          v509 = f51(v551, v545) || v509;
          v509 = f51(v552, v545) || v509;
          v509 = function (p428) {
            try {
              if (vWindow[v554][v555](p428).length > 0) {
                return 1;
              } else {
                return 0;
              }
            } catch (e) {
              return 0;
            }
            return 0;
          }(v553) || v509;
          v509 = f53(v529) + f53(v541) + f53(v546) + f53(v548) + f53(v551) + f53(v552) + f53(v547) >= 3 ? 1 : v509;
          v509 = f52(v543) || v509;
          v509 = f52(v542) || v509;
          v509 = f52(v544) || v509;
          v509 = f52(v530) || v509;
          v509 = f52(v532) || v509;
          v509 = f52(v533) || v509;
          v509 = f52(v534) || v509;
          v509 = f52(v535) || v509;
          v509 = f52(v536) || v509;
          v509 = f52(v537) || v509;
          v509 = f52(v537) || v509;
          v509 = f52(v538) || v509;
          v509 = f52(v540) || v509;
          if (vWindow[v527] !== vVVUndefined82) {
            v509 = 1;
          }
        }
        if (v509 === 1) {
          v510++;
          if (v510 > 10000) {
            vWindow[v517][v521] = vWindow[v517][v524];
            if (vWindow[v517][v521](v2880) !== 1) {
              v3081.ⵠⵠⲆⲆΔⲆⵠ();
            }
          }
        }
      },
      ⵠΔⲆᐃᐃⵠⲆ: function () {
        return v509;
      }
    };
  }();
  function f55(p429, p430, p431, p432, p433, p434) {
    const v557 = (p429 | 22518) & ~(p429 & 22518);
    const v558 = ((p432 + 56799) * 214013 + 2531011) % 4294967296;
    const v559 = (0 << (p433 >> 16 & 255)) + (16 << (p433 & 255)) + (8 << (p433 >> 8 & 255)) + (24 << (p433 >> 24 & 255));
    const v560 = ((24221 + p434) * 1664525 + 1013904223) % 4294967296;
    const vPo4 = f56(v557, ((p430 + 59356) * 2147483629 + 2147483587) % 2147483647, (55578 + p431) % 65435);
    f45(v558, v559, v560, v557);
    return vPo4 ^ 17907;
  }
  const v561 = 11;
  function f56(p435, p436, p437) {
    const v562 = (49718 + p435) % 65471;
    const v563 = ~(p436 & 37017) & 37017 | ~(p436 & 37017) & p436;
    const v564 = ((29816 + p437) * 214013 + 2531011) % 4294967296;
    return (1 + (65353 + (function (p438, p439, p440) {
      const v565 = (8 << (p438 & 255)) + (24 << (p438 >> 16 & 255)) + (16 << (p438 >> 24 & 255)) + (0 << (p438 >> 8 & 255));
      const v566 = (8 << (p439 >> 8 & 255)) + (0 << (p439 >> 24 & 255)) + (16 << (p439 >> 16 & 255)) + (24 << (p439 & 255));
      const v567 = p440 ^ 37026;
      const vXp = f505(v565, v566, v567);
      (function (p441, p442, p443, p444, p445) {
        const v568 = ~(p441 & 4810) & (p441 | 4810);
        const v569 = (0 << (p442 >> 24 & 255)) + (8 << (p442 & 255)) + (24 << (p442 >> 16 & 255)) + (16 << (p442 >> 8 & 255));
        const v570 = p443 ^ 28334;
        const vF26 = function (p446, p447, p448, p449, p450) {
          const v571 = ((p446 + 59991) * 1103515245 + 12345) % 2147483648;
          const v572 = (2147483587 + (p447 + 20568) * 2147483629) % 2147483647;
          const v573 = ~(p448 & 8672) & p448 | ~(p448 & 8672) & 8672;
          const v574 = ~(p449 & 25665) & (p449 | 25665);
          const v575 = (60624 + p450) % 65299;
          const vOg = f78(v571, v572, v573, v574, v575, v571);
          const vF28 = function (p451, p452, p453, p454) {
            const v576 = ((p451 + 53470) * 1664525 + 1013904223) % 4294967296;
            const v577 = (24 << (p452 >> 16 & 255)) + (16 << (p452 & 255)) + (0 << (p452 >> 8 & 255)) + (8 << (p452 >> 24 & 255));
            const v578 = ((47704 + p453) * 22695477 + 1) % 4294967296;
            const v579 = p454 ^ 30311;
            const vOg2 = f78(v576, v577, v578, v579, v576, v577);
            const v$o = f61(v578, v579, v576);
            return (24 << ((vOg2 ^ v$o) >> 24 & 255)) + (16 << ((vOg2 ^ v$o) >> 16 & 255)) + (0 << ((vOg2 ^ v$o) >> 8 & 255)) + (8 << ((vOg2 ^ v$o) & 255));
          }(v572, v573, v574, v575);
          return (1013904223 + (30758 + (vOg ^ vF28)) * 1664525) % 4294967296;
        }(v568, v569, v570, (16 << (p444 >> 8 & 255)) + (24 << (p444 & 255)) + (0 << (p444 >> 16 & 255)) + (8 << (p444 >> 24 & 255)), ((p445 + 48249) * 1103515245 + 12345) % 2147483648);
        const v$o2 = f61(v568, v569, v570);
      })(v565, v566, v567, v565, v566);
      return ~(vXp & 38441) & 38441 | ~(vXp & 38441) & vXp;
    }(v562, v563, v564) ^ f78(v562, v563, v564, v562, v563, v564))) * 22695477) % 4294967296;
  }
  const v580 = 100;
  const vVVVUndefined822 = vVVUndefined82;
  function f57(p455, p456, p457) {
    v83(v802, p455, p456, p457);
    const vJo = f58(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    f58(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    return ~(vJo & 63080) & 63080 | ~(vJo & 63080) & vJo;
  }
  function f58(p458, p459, p460) {
    v73(v802, p458, p459, p460);
    const vGp2 = f438(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    f438(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    return ~(vGp2 & 20192) & 20192 | ~(vGp2 & 20192) & vGp2;
  }
  const v581 = 12;
  const v582 = 14;
  const v583 = 255;
  var v584 = navigator.language || navigator.userLanguage;
  var v585 = -new Date().getTimezoneOffset() / 60;
  const vVVVUndefined13 = vVVUndefined13;
  const v586 = 4;
  const vVV3022 = vV302;
  const v587 = 19;
  var v588 = "Europe";
  var v589 = "South America";
  const v590 = 8;
  var vV588 = v588;
  if (v585 >= -2 && v585 <= 2) {
    vV588 = v588;
  } else if (v585 > 2 && v585 <= 5) {
    vV588 = "Russia";
  } else if (v585 > 5 && v585 <= 9) {
    vV588 = "Asia";
  } else if (v585 > 9) {
    vV588 = "Australia";
  } else if (v585 >= -5 && v585 < -2) {
    vV588 = v584 === "pt-BR" || v584 === "pt-br" || v584 === "pt" || v584 === "pt-pt" ? v589 : "North America";
  } else if (v585 < -5) {
    vV588 = v584 === "pt-BR" || v584 === "pt-br" || v584 === "pt" || v584 === "pt-pt" ? v589 : "West America";
  }
  const v591 = String.fromCharCode;
  const vV591 = v591(101);
  const vV5912 = v591(118);
  const vV5913 = v591(97);
  const vV5914 = v591(108);
  function f59(p461, p462, p463) {
    const v592 = (2531011 + (p461 + 2238) * 214013) % 4294967296;
    const v593 = p462 ^ 18248;
    const v594 = p463 ^ 12815;
    const vYp2 = f498(v592, v593, v594, v592);
    const vVg = f80(v593, v594, v592, v593);
    return (24 << ((vYp2 ^ vVg) >> 8 & 255)) + (16 << ((vYp2 ^ vVg) >> 24 & 255)) + (0 << ((vYp2 ^ vVg) >> 16 & 255)) + (8 << ((vYp2 ^ vVg) & 255));
  }
  var v595 = {
    ᐃᐃⲆΔⲆΔΔ: function (p464) {
      var v596 = 2147483648;
      var v597 = p464 || Math.floor((v596 - 1) * Math.random());
      this.ⵠⵠᐃΔⵠ = function (p465) {
        v597 = p465 || Math.floor(Math.random() * (v596 - 1));
      };
      this.get = function () {
        return (v597 = (v597 * 1103515245 + 12345) % v596) / v596;
      };
    }
  };
  function f60(p466, p467) {
    const v598 = (2531011 + (p466 + 47489) * 214013) % 4294967296;
    const v599 = (8 << (p467 >> 16 & 255)) + (0 << (p467 >> 24 & 255)) + (16 << (p467 >> 8 & 255)) + (24 << (p467 & 255));
    const vF31 = function (p468, p469, p470) {
      const v600 = (0 << (p468 & 255)) + (16 << (p468 >> 16 & 255)) + (24 << (p468 >> 8 & 255)) + (8 << (p468 >> 24 & 255));
      const v601 = (12345 + (p469 + 10780) * 1103515245) % 2147483648;
      const v$o3 = f61(v600, v601, p470 ^ 54740);
      f46(v600, v601);
      return v$o3 ^ 47520;
    }(v598, v599, v598);
    f498(v599, v598, v599, v598);
    return ~(vF31 & 3478) & vF31 | ~(vF31 & 3478) & 3478;
  }
  var v602 = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]];
  const v603 = 8;
  function f61(p471, p472, p473) {
    const v604 = (8 << (p471 & 255)) + (16 << (p471 >> 8 & 255)) + (24 << (p471 >> 24 & 255)) + (0 << (p471 >> 16 & 255));
    const v605 = ~(p472 & 37001) & p472 | ~(p472 & 37001) & 37001;
    const v606 = ~(p473 & 16641) & (p473 | 16641);
    return ((64005 + (f45(v604, v605, v606, v604) ^ f59(v605, v606, v604))) * 1664525 + 1013904223) % 4294967296;
  }
  function f62(p474, p475, p476, p477, p478) {
    const v607 = ~(p474 & 18107) & (p474 | 18107);
    const v608 = ((13886 + p475) * 22695477 + 1) % 4294967296;
    const v609 = ~(p476 & 31447) & 31447 | ~(p476 & 31447) & p476;
    const v610 = (56539 + p477) % 65504;
    const vF32 = function (p479, p480, p481, p482, p483, p484) {
      const v611 = (16 << (p479 & 255)) + (24 << (p479 >> 16 & 255)) + (0 << (p479 >> 24 & 255)) + (8 << (p479 >> 8 & 255));
      const v612 = ~(p480 & 37480) & (p480 | 37480);
      const v613 = ~(p481 & 32906) & p481 | ~(p481 & 32906) & 32906;
      const v614 = p482 ^ 60685;
      const v615 = (24 << (p483 >> 8 & 255)) + (16 << (p483 & 255)) + (8 << (p483 >> 24 & 255)) + (0 << (p483 >> 16 & 255));
      const vF33 = function (p485, p486, p487, p488, p489, p490) {
        const v616 = p485 ^ 51098;
        const v617 = (p487 | 31206) & ~(p487 & 31206);
        const v618 = ((43166 + p488) * 214013 + 2531011) % 4294967296;
        const v619 = p489 ^ 61035;
        const v620 = ~(p490 & 60587) & (p490 | 60587);
        const vF46 = f46(v616, (16 << (p486 >> 24 & 255)) + (0 << (p486 & 255)) + (8 << (p486 >> 8 & 255)) + (24 << (p486 >> 16 & 255)));
        const vCC = f515(v617, v618, v619, v620, v616);
        return (8 << ((vF46 ^ vCC) & 255)) + (16 << ((vF46 ^ vCC) >> 8 & 255)) + (24 << ((vF46 ^ vCC) >> 24 & 255)) + (0 << ((vF46 ^ vCC) >> 16 & 255));
      }(v611, v612, v613, v614, v615, ~(p484 & 63731) & (p484 | 63731));
      f515(v611, v612, v613, v614, v615);
      return ~(vF33 & 16632) & (vF33 | 16632);
    }(v607, v608, v609, v610, ~(p478 & 63296) & (p478 | 63296), v607);
    f505(v608, v609, v610);
    return ~(vF32 & 11874) & vF32 | ~(vF32 & 11874) & 11874;
  }
  const v621 = 17;
  const vVV314 = vV314;
  const v622 = 20;
  var v623 = 0;
  let v624 = {
    ΔΔΔⲆᐃ: ["#133A2B", "#042b30"],
    ΔᐃᐃᐃⲆᐃΔⵠᐃ: ["#EBF2F0", "#136167"],
    ΔⲆⲆΔᐃⲆᐃ: ["#4EB687", "#187484"],
    ᐃⵠΔᐃⵠΔⵠ: ["#664516", "#13474C"],
    ⲆᐃᐃΔⲆᐃᐃ: ["#FCEFBB", "#0F4D48"],
    ⵠⵠⵠᐃⲆΔⲆ: ["#C1AA7E", "#0F423D"],
    ᐃᐃⵠⵠⲆⲆᐃ: ["#594837", "#163A3A"],
    ⵠⵠΔΔⲆΔΔ: ["#A5D6D6", "#539CA0"],
    ΔⲆᐃΔⵠ: ["#0B6A84", "#09373F"],
    ΔΔⵠᐃΔΔⲆ: ["#2A8B9B", "#0F464C"],
    ᐃᐃΔΔⵠΔⵠ: ["#A9D6D3", "#115E60"],
    ⵠⲆⲆⲆⲆᐃᐃ: ["#ECF7F9", "#539CA0"],
    ⲆΔⵠΔⵠⲆⵠ: ["#FFF", "#FFF"],
    ᐃⵠⲆⲆⲆⲆΔ: ["#FFF", "#FFF"],
    ⲆᐃⲆⲆⲆⲆΔ: ["#1C9BA4", "#00272F"],
    ᐃⵠⵠⲆᐃ: ["#2D2017", "#031C1E"],
    Ⲇⵠᐃ: 0,
    Δⵠⵠ: 1,
    ⵠⵠⲆⵠΔⵠΔᐃᐃ: 2300,
    ⵠⵠᐃⵠΔⲆⵠⵠⲆ: 2290,
    ΔᐃⲆΔᐃⵠⲆ: 34,
    ᐃΔΔⵠΔΔᐃ: 5,
    ᐃⲆⲆⵠⵠⲆΔ: 68,
    ⵠᐃⲆⲆΔΔᐃ: 34,
    ⲆᐃΔᐃⵠΔⵠ: 5,
    ΔᐃⲆⵠᐃⵠⵠ: 1,
    ᐃᐃⵠᐃⲆΔⵠ: 0.6,
    ⵠΔⵠⵠⵠⲆΔ: 0.25,
    ΔⵠⲆΔΔⵠⵠ: 50,
    ᐃᐃⵠΔⵠⲆⵠ: 10,
    ⲆᐃᐃᐃⵠⲆΔ: 75,
    ⵠⲆᐃⵠⵠΔΔ: 20,
    ΔᐃΔⵠᐃᐃᐃ: 5,
    ᐃⵠΔᐃᐃ: 0,
    ⲆΔⵠᐃⲆ: 1,
    ⵠᐃΔᐃΔ: 2,
    ᐃⲆⲆᐃᐃ: 3,
    ⲆⵠⲆⵠⵠ: 4,
    ⲆΔⵠᐃᐃ: 5,
    ᐃⲆΔⵠⲆ: 6,
    ⵠⲆⲆΔⲆ: 7,
    ⵠᐃⵠⲆⵠ: 8,
    ΔΔᐃⲆⵠ: 9,
    ⵠⵠⵠᐃΔ: 10,
    ΔⵠⵠⵠΔ: 11,
    ⲆⲆⵠⲆⲆ: 12,
    ⵠΔΔΔΔ: 13,
    ᐃⵠᐃⲆⲆ: 14,
    ⲆᐃⵠΔⲆ: 15,
    ⲆⵠⲆᐃᐃ: 16,
    ᐃΔΔⲆΔ: 17,
    ⵠΔⵠΔᐃ: 18,
    ⵠⲆⲆⲆᐃ: 19,
    ⲆⲆΔΔⵠ: 20,
    ᐃⵠΔΔΔ: 21,
    Δⵠⵠⵠᐃ: 22,
    ᐃⲆⵠΔᐃ: 23,
    ⲆᐃⵠⲆⵠ: 24,
    ᐃⲆᐃΔⵠ: 25,
    ⲆⵠᐃΔΔ: 26,
    ⵠⲆΔᐃΔ: 27,
    ᐃΔⲆⵠΔ: 28,
    ⲆⲆⵠⵠⵠ: 29,
    ᐃⲆᐃⲆΔ: 30,
    ΔⲆⵠΔΔ: 31,
    ᐃΔΔΔⵠ: 32,
    ⲆⵠⲆⲆΔ: 33,
    ⵠⵠΔᐃⵠ: 34,
    ΔᐃΔΔⵠ: 35,
    ⲆᐃΔΔᐃ: 36,
    ΔⵠΔΔⲆ: 37,
    ᐃⲆΔⲆⲆ: 38,
    ᐃⵠΔΔⲆ: 39,
    ᐃⲆⵠᐃⵠ: 40,
    Ⲇⵠⵠᐃⵠ: 41,
    ΔⵠΔⵠⲆ: 42,
    Δᐃᐃᐃᐃ: 43,
    ΔⵠᐃΔᐃ: 44,
    ΔⵠⲆΔᐃ: 45,
    ⵠΔⵠⲆⵠ: 46,
    ⵠΔΔⵠ: 47,
    ⲆᐃΔΔⵠ: 48,
    ΔᐃΔⵠⵠ: 49,
    ᐃⲆΔΔᐃ: 50,
    ᐃΔⲆⵠⵠ: 51,
    ᐃⲆΔᐃⲆ: 52,
    ᐃΔᐃⲆⲆ: 53,
    ΔⲆᐃᐃΔ: 54,
    ΔⲆᐃⲆᐃ: 55,
    ΔᐃⲆⲆᐃ: 56,
    ΔΔΔⵠᐃ: 57,
    ⲆⵠᐃⲆⲆ: 58,
    ⲆⲆΔᐃᐃ: 59,
    ⵠᐃⵠᐃⲆ: 60,
    ⵠⵠᐃⲆΔ: 61,
    ⲆⲆⲆΔᐃ: 62,
    ΔᐃᐃⵠΔ: 63,
    ⲆⵠᐃΔⲆ: 64,
    ᐃⵠⲆᐃᐃ: 65,
    ΔᐃⲆⲆⲆ: 66,
    ᐃΔᐃⲆᐃ: 67,
    ΔⲆΔⵠⲆ: 68,
    ᐃᐃΔⵠΔ: 69,
    ᐃⵠⲆᐃⲆ: 70,
    ΔᐃΔⵠᐃ: 71,
    ΔΔᐃⵠⲆ: 72,
    ⵠᐃⲆⲆΔ: 73,
    ΔᐃᐃⲆΔ: 74,
    ᐃᐃⵠⲆⵠ: 75,
    ΔⲆΔΔΔ: 76,
    ⲆᐃⲆⵠΔ: 77,
    ⲆΔΔᐃⵠ: 78,
    ΔⵠⵠΔΔ: 79,
    ⲆⲆⲆᐃΔ: 80,
    ΔⲆⵠⲆΔ: 81,
    ΔΔⲆΔΔ: 82,
    ⵠⵠⵠⲆⲆ: 83,
    ⵠⲆᐃⲆⵠ: 84,
    ⵠⵠⵠΔⵠ: 85,
    ᐃΔᐃⵠΔ: 86,
    ⲆᐃⲆⵠⲆ: 87,
    ΔΔᐃΔⵠ: 88,
    ⲆⵠᐃᐃΔ: 89,
    ᐃᐃΔᐃΔ: 90,
    ⲆᐃⲆⲆΔ: 91,
    ⲆⵠᐃⲆᐃ: 92,
    ᐃⵠᐃᐃⵠ: 93,
    ᐃᐃΔⵠᐃ: 94,
    ᐃΔΔⵠⲆ: 95,
    ⵠᐃΔⵠⲆ: 96,
    ΔⵠᐃⲆᐃ: 97,
    ⵠΔᐃⲆΔ: 98,
    ᐃΔⵠΔΔ: 99,
    ⵠᐃΔᐃⲆ: 100,
    ΔⲆᐃᐃⵠ: 101,
    ⲆⲆᐃⲆⲆ: 102,
    ᐃⲆⲆⲆΔ: 103,
    ΔⵠⲆⲆᐃ: 104,
    ⵠⵠΔⲆⵠ: 105,
    ΔⲆᐃⲆⵠ: 106,
    ⵠᐃᐃᐃⵠ: 107,
    ⵠⲆᐃΔᐃ: 108,
    ⵠΔⵠⲆΔ: 109,
    ⲆΔⵠΔⵠ: 110,
    ⲆⵠᐃⲆⵠ: 111,
    ᐃⵠᐃⵠⵠ: 112,
    ΔΔⵠⲆᐃ: 113,
    ⲆΔⲆⲆΔ: 114,
    ⵠⵠᐃᐃⲆ: 115,
    ⵠΔⲆⲆⲆ: 116,
    ΔⵠΔⲆΔ: 117,
    ⲆᐃᐃΔᐃ: 118,
    ⵠᐃᐃⵠⵠ: 119,
    ⲆᐃⵠⵠⲆ: 120,
    ᐃⵠⵠⵠΔ: 121,
    ᐃⲆⲆᐃⵠ: 122,
    ΔⲆᐃᐃⲆ: 123,
    ᐃᐃⵠᐃⲆ: 124,
    ⵠⲆΔᐃⲆ: 125,
    ᐃⵠᐃⵠᐃ: 126,
    ᐃⵠΔᐃⵠ: 127,
    ᐃᐃⵠⵠⲆ: 128,
    ⲆᐃⲆΔⵠ: 129,
    ⲆⲆΔᐃⲆ: 130,
    ⲆΔⵠⲆΔ: 131,
    ⲆⲆᐃΔⲆ: 132,
    ᐃⵠΔⲆᐃ: 133,
    ⵠⲆⵠΔⲆ: 134,
    ΔΔⵠᐃⲆ: 135,
    ᐃΔᐃⲆⵠ: 136,
    ⲆⲆⲆⵠΔ: 137,
    ᐃΔⵠⲆᐃ: 138,
    ᐃΔⵠⵠⵠ: 139,
    ⲆᐃΔⲆᐃ: 140,
    ᐃᐃⲆⲆⵠ: 141,
    ⵠΔⲆᐃⲆ: 142,
    Δⵠᐃᐃⵠ: 143,
    ΔᐃᐃⲆᐃ: 144,
    ⲆⵠᐃᐃⲆ: 145,
    ᐃⲆᐃⲆᐃ: 146,
    ᐃᐃΔΔⵠ: 147,
    ⲆⵠΔΔᐃ: 148,
    ΔᐃᐃΔⲆ: 149,
    ⲆᐃΔΔΔ: 150,
    ⵠⵠᐃⲆᐃ: 151,
    ⲆⲆⵠⵠᐃ: 152,
    ΔⵠⲆΔΔ: 153,
    ΔⵠⲆᐃⵠ: 154,
    ⲆⲆⲆⵠᐃ: 155,
    ΔᐃΔⲆᐃ: 156,
    ⲆⲆⲆⵠⵠ: 157,
    ΔΔⲆⵠᐃ: 158,
    ΔᐃⵠΔΔ: 159,
    ᐃᐃᐃΔΔ: 160,
    ⵠᐃⲆⲆⵠ: 161,
    ΔΔΔⵠⵠ: 162,
    ᐃⲆⵠⵠΔ: 163,
    ᐃᐃᐃⲆⲆ: 164,
    ⵠΔⵠⵠⵠ: 165,
    ᐃⵠᐃΔⵠ: 166,
    ⲆⵠᐃΔⵠ: 167,
    Ⲇᐃᐃⵠᐃ: 168,
    ⲆⵠΔⵠᐃ: 169,
    ⵠⵠⵠΔΔ: 170,
    ᐃᐃⲆⲆⲆ: 171,
    ΔΔⵠⲆⵠ: 172,
    ΔΔⵠΔᐃ: 173,
    ᐃⲆΔΔⲆ: 174,
    ᐃᐃΔΔΔ: 175,
    ᐃᐃΔᐃⲆ: 176,
    ⲆⵠⲆⵠᐃ: 177,
    ᐃΔⲆΔⵠ: 178,
    ⵠΔΔⲆᐃ: 179,
    ᐃᐃΔΔᐃ: 180,
    ⵠᐃⵠΔⲆ: 181,
    ΔⵠᐃⲆⲆⵠΔⵠⲆ: 182,
    Δᐃⵠᐃⵠ: 183,
    ᐃⲆⵠⵠᐃ: 184,
    ΔΔᐃᐃⵠ: 185,
    ⵠⲆΔᐃⵠ: 186,
    ᐃΔⲆⲆΔ: 187,
    ⲆⲆΔⵠᐃ: 188,
    ⲆᐃᐃΔΔ: 189,
    ΔΔΔⲆⵠ: 190,
    ᐃΔⲆΔⲆ: 191,
    ᐃΔᐃᐃᐃ: 192,
    ΔⲆⲆΔⵠ: 193,
    ᐃᐃⲆⲆΔ: 194,
    ᐃⲆⲆⲆᐃ: 195,
    ⵠΔᐃΔⲆ: 196,
    ᐃⲆⵠᐃⲆ: 197,
    ⲆΔⵠᐃⵠ: 198,
    ΔΔⵠⵠⵠ: 199,
    ΔΔⵠΔ: 200,
    ⲆⵠⲆⲆᐃ: 201,
    ⵠᐃⵠᐃ: 202,
    ⵠᐃⲆⵠ: 203,
    ΔⲆⲆᐃⲆᐃⲆ: 204,
    ᐃᐃⵠΔⵠ: 205,
    ᐃⵠⲆⵠΔⵠⵠ: 206,
    ΔΔᐃⵠᐃ: 207,
    ⲆΔⲆⲆᐃ: 208,
    ⲆⲆⵠᐃΔᐃⲆ: 209,
    ΔⲆⲆΔΔᐃⲆ: 210,
    ⵠΔᐃⵠᐃ: 211,
    ΔⲆⵠΔ: 212,
    ΔⵠⲆᐃΔ: 213,
    ⵠⵠⲆⵠⲆ: 214,
    ᐃⵠⲆΔᐃᐃⲆ: 215,
    ᐃᐃΔᐃᐃ: 216,
    ᐃⵠⲆⲆⵠ: 217,
    ΔⵠΔⵠⵠ: 218,
    ΔⵠΔⲆΔᐃⲆ: 219,
    ⵠΔΔⲆΔⲆᐃ: 220,
    Ⲇⵠⵠⵠᐃ: 221,
    ᐃⲆᐃⵠⵠ: 222,
    ΔᐃⲆᐃᐃ: 223,
    ⵠⵠΔΔᐃ: 224,
    ⲆᐃΔⵠⲆ: 225,
    ᐃⵠⵠⵠᐃ: 226,
    ⲆⲆᐃΔΔ: 227,
    ΔⲆΔᐃⲆ: 228,
    ΔⵠⲆΔⲆ: 229,
    ⵠⲆⲆⵠΔ: 230,
    ΔⲆᐃᐃᐃ: 231,
    ᐃⲆⲆᐃΔ: 232,
    ⲆⲆⲆΔⲆᐃᐃ: 233,
    ⲆⲆΔᐃⵠ: 234,
    ΔⲆΔΔΔⲆᐃ: 235,
    ᐃⲆᐃᐃⲆᐃⵠ: 236,
    ΔⲆΔⵠΔⲆⵠ: 237,
    ⵠⲆⲆᐃⲆⵠⵠ: 238,
    ΔᐃⵠⲆⵠ: 239,
    ⵠᐃⵠⵠⲆ: 240,
    ᐃᐃᐃⵠᐃ: 241,
    ⵠⲆⵠⵠΔ: 242,
    ⵠᐃΔΔⵠ: 243,
    ᐃⲆᐃᐃⲆ: 244,
    ⲆΔⵠⲆⲆ: 245,
    ⲆΔⵠⲆᐃ: 246,
    ⲆᐃⲆⵠᐃ: 247,
    ΔⵠΔΔᐃ: 248,
    ΔⵠΔⵠΔ: 249,
    ᐃᐃᐃⵠⲆ: 250,
    ᐃᐃⲆⵠⵠ: 251,
    ΔΔᐃΔΔ: 252,
    ᐃⵠᐃᐃᐃ: 253,
    ⲆΔΔⵠᐃ: 254,
    ΔᐃΔᐃΔ: 255,
    ΔⵠᐃⲆΔ: 256,
    ⵠⵠⲆⵠᐃ: 257,
    ΔᐃᐃⲆⵠ: 258,
    ⵠⵠⵠⵠΔ: 259,
    ΔⲆΔⵠⵠ: 260,
    ᐃΔⲆᐃⲆ: 261,
    ᐃⵠΔⲆΔ: 262,
    ΔᐃΔΔΔ: 263,
    ⵠᐃΔⲆⵠ: 264,
    ΔⵠᐃⵠΔ: 265,
    ⵠᐃΔⲆΔ: 266,
    ΔᐃⲆⵠΔ: 267,
    ⲆⵠⲆⲆⵠΔᐃ: 268,
    ⵠᐃΔⲆᐃ: 269,
    ᐃⵠⵠΔᐃ: 270,
    ᐃΔⵠΔᐃ: 271,
    ⵠᐃⵠΔΔ: 272,
    ᐃⵠΔⵠΔⵠⵠ: 273,
    ⲆⲆⵠⵠⵠᐃⲆ: 274,
    ⵠΔⲆⵠⵠⵠΔ: 275,
    ⵠΔⵠⲆⲆ: 276,
    ⲆⲆⲆⵠᐃᐃⲆ: 277,
    ⵠⵠᐃΔΔΔⵠ: 278,
    ⲆᐃΔΔⵠΔᐃ: 279,
    ⲆⵠᐃⵠᐃⲆⲆ: 280,
    ΔⵠᐃΔΔⲆΔ: 281,
    ΔⲆⲆΔΔΔΔ: 282,
    ⵠⲆΔᐃⲆⲆΔ: 283,
    ⲆᐃΔⲆⲆⵠⵠ: 284,
    ΔᐃⵠⵠΔ: 285,
    ᐃⲆᐃΔⲆ: 286,
    ΔⲆⵠΔⵠ: 287,
    ⲆⲆᐃΔᐃ: 288,
    ⲆΔⲆⵠᐃ: 289,
    ΔΔⲆΔⵠⵠⲆ: 290,
    ΔΔΔᐃΔ: 291,
    ᐃⲆⲆⲆⵠ: 292,
    ᐃᐃⲆΔᐃΔⲆ: 293,
    ⲆⲆⵠᐃⵠ: 294,
    ⲆᐃⵠᐃⵠⵠΔ: 295,
    ⵠⲆⵠⵠⲆ: 296,
    ⲆΔⵠⵠΔ: 297,
    ⲆⵠⵠᐃΔΔΔ: 298,
    ᐃⲆᐃⲆⵠⲆᐃ: 299,
    ⵠⵠᐃΔⲆ: 300,
    ΔᐃⲆΔⵠ: 301,
    ᐃᐃⵠΔⲆΔⵠ: 302,
    ᐃⵠΔᐃΔ: 303,
    ᐃΔᐃΔ: 304,
    ⵠⲆΔΔᐃ: 305,
    ⲆΔⵠⲆⵠ: 306,
    ⲆᐃⵠⲆΔ: 307,
    ΔⲆᐃⵠⲆ: 308,
    ᐃᐃⵠⵠⵠ: 309,
    ⲆⵠⲆⲆⲆ: 310,
    ⵠΔᐃⲆᐃ: 311,
    ᐃΔⵠⵠᐃ: 312,
    ᐃΔⲆᐃᐃ: 313,
    ⵠΔᐃΔᐃΔΔ: 314,
    ⵠⲆⲆⵠⲆ: 315,
    ΔΔΔⲆⲆᐃᐃ: 316,
    ⲆΔᐃⵠᐃ: 317,
    ⲆᐃⲆΔΔⲆⵠ: 318,
    ⲆᐃᐃᐃⲆ: 319,
    ΔΔΔⲆᐃΔᐃ: 320,
    ᐃᐃΔΔⲆⵠᐃ: 321,
    ᐃᐃΔⲆᐃ: 322,
    ⵠΔᐃⵠⲆ: 323,
    ⲆΔᐃⲆΔ: 324,
    ⲆᐃⵠⲆᐃ: 325,
    ᐃⲆᐃΔᐃ: 326,
    ⲆⵠΔᐃᐃ: 327,
    ⵠⵠⵠⲆᐃ: 328,
    ⵠⲆⲆᐃᐃ: 329,
    ΔⵠⵠⲆⵠ: 330,
    ᐃᐃΔⲆⵠ: 331,
    ⲆⵠⵠⲆᐃ: 332,
    ΔᐃΔᐃⵠ: 333,
    ᐃᐃⵠΔⲆ: 334,
    ⵠⵠΔᐃⵠⲆⵠ: 335,
    ᐃⲆΔⲆⲆᐃⲆ: 336,
    ⵠⲆΔΔⵠ: 337,
    ⲆΔΔⲆⲆⵠⲆ: 338,
    ⵠⲆⵠΔΔ: 339,
    ᐃⵠΔⵠᐃ: 340,
    ᐃΔⵠΔⵠ: 341,
    Δⵠᐃᐃᐃ: 342,
    ΔⲆΔⵠΔ: 343,
    ΔⲆΔⵠᐃⵠΔ: 344,
    Ⲇᐃⵠᐃⵠ: 345,
    ⵠᐃⵠⵠⵠ: 346,
    ΔⲆⵠΔⲆ: 347,
    ⵠΔΔⲆⲆ: 348,
    ⲆΔⲆⲆⲆ: 349,
    ⲆⵠⵠΔⲆ: 350,
    ⲆⲆⵠᐃᐃ: 351,
    ⲆⲆᐃᐃΔ: 352,
    ᐃΔⲆΔⲆⲆΔ: 353,
    ᐃⲆⵠⲆΔΔⲆ: 354,
    ⵠⲆᐃⵠᐃ: 355,
    ⵠⵠΔⵠⵠᐃᐃ: 356,
    ⲆⵠⵠᐃΔ: 357,
    ΔΔΔΔⵠ: 358,
    ⲆΔⲆΔⵠⵠΔ: 359,
    ⵠⵠΔΔΔ: 360,
    ⲆⲆᐃⵠΔ: 361,
    ⲆⵠΔᐃᐃⵠⲆ: 362,
    ⲆⵠΔⲆⲆΔⲆ: 363,
    ⵠⲆᐃⵠᐃⵠⲆ: 364,
    ΔⲆΔⲆᐃΔⲆ: 365,
    ⲆⲆᐃΔᐃⵠⵠ: 366,
    ᐃⵠΔⲆᐃᐃⵠ: 367,
    ⵠⵠⲆᐃΔⵠⲆ: 368,
    ⵠΔΔΔⲆⲆᐃ: 369,
    ⵠΔⲆΔᐃ: 370,
    ᐃⵠⵠΔᐃᐃΔ: 371,
    ΔⲆᐃⵠᐃᐃΔ: 372,
    ΔⲆᐃΔᐃⵠΔ: 373,
    ⲆⵠⵠⲆⲆ: 374,
    ΔⵠⵠⲆᐃⲆᐃ: 375,
    ⲆⲆᐃⵠΔᐃⲆ: 376,
    ᐃⲆⵠⲆⲆΔᐃ: 377,
    ΔⵠΔΔΔⵠᐃ: 378,
    ᐃᐃΔᐃᐃⲆᐃ: 379,
    ΔⵠΔΔᐃΔᐃ: 380,
    ᐃⵠⲆⲆᐃⲆⲆ: 381,
    ⲆᐃᐃᐃⲆΔᐃ: 382,
    ΔⲆᐃⲆⲆᐃⵠ: 383,
    ⲆⵠΔⲆΔⲆⲆ: 384,
    ᐃᐃΔⵠΔⲆᐃ: 385,
    ΔⲆΔΔᐃⲆᐃ: 386,
    ΔᐃⲆΔᐃⵠⵠ: 387,
    ⲆᐃⵠΔⲆΔⲆ: 388,
    ΔⲆⲆⵠ: 389,
    ᐃᐃⵠⵠᐃ: 390,
    ⲆΔⵠⵠⵠᐃⵠ: 391,
    ⵠΔΔⲆⲆΔᐃ: 392,
    ⵠⲆ: 393,
    ⲆᐃⲆⲆᐃⲆⲆ: 394,
    ⵠⲆⵠⲆᐃ: 395,
    ⲆΔᐃⵠⵠⵠΔ: 396,
    ᐃⵠᐃᐃⵠⲆⲆ: 397,
    ᐃᐃⲆᐃⵠ: 398,
    ΔⲆᐃᐃⵠΔᐃ: 399,
    ΔⲆΔᐃⵠᐃⵠ: 400,
    ⲆⲆⵠᐃⲆΔΔ: 401,
    ᐃⲆΔΔⲆⵠⲆ: 402,
    ⵠⲆⲆΔⵠⲆⲆ: 403,
    ᐃⲆⵠⲆⵠ: 404,
    ΔⲆⲆⲆᐃΔᐃ: 405,
    ⲆᐃᐃᐃⲆⲆⵠ: 406,
    ᐃΔΔⲆᐃⵠΔ: 407,
    ᐃΔⲆΔⵠᐃΔ: 408,
    ᐃΔⵠΔᐃᐃⵠ: 409,
    ᐃⲆᐃⵠⲆ: 410,
    ᐃⲆⵠᐃⲆⲆᐃ: 411,
    ⲆⵠΔᐃᐃΔᐃ: 412,
    ΔⲆᐃⵠᐃΔΔ: 413,
    ⵠⵠⵠΔᐃΔΔ: 414,
    ⵠⵠΔⵠΔᐃⵠ: 415,
    ΔⵠⵠⵠⵠⵠⲆ: 416,
    Δᐃᐃⵠⵠⵠⵠ: 417,
    ΔΔΔΔΔ: 418,
    ⵠⵠΔⲆᐃᐃⵠ: 419,
    ᐃΔⵠᐃΔⲆΔ: 420,
    ⵠⲆᐃᐃⲆⵠⲆ: 421,
    ᐃᐃⲆⲆΔⲆᐃ: 422,
    ⵠᐃᐃⵠᐃΔᐃ: 423,
    ⲆⲆⲆᐃⵠΔⲆ: 424,
    ᐃᐃΔΔΔⵠᐃ: 425,
    ΔⵠΔΔⵠᐃᐃ: 426,
    ⵠⲆΔᐃⵠⵠΔ: 427,
    ᐃᐃΔΔᐃᐃᐃ: 428,
    ⲆΔⲆⵠΔΔⲆ: 429,
    ᐃⵠΔΔᐃΔᐃ: 430,
    ⲆⵠⵠΔⵠⵠΔ: 431,
    ΔΔⲆΔᐃᐃⵠ: 432,
    ΔⲆΔᐃΔⲆⵠ: 433,
    ᐃᐃᐃⲆᐃΔΔ: 434,
    ΔⲆⲆⲆⲆΔᐃ: 435,
    ⵠⲆⲆⵠΔᐃΔ: 436,
    ⲆⵠⵠⲆⲆΔⲆ: 437,
    ΔΔⵠⲆⲆΔᐃ: 438,
    ΔⲆᐃΔⵠΔᐃ: 439,
    ΔⲆᐃⲆΔⲆⵠ: 440,
    ⲆⲆᐃᐃΔᐃᐃ: 441,
    ⲆⲆⵠᐃⲆᐃᐃ: 442,
    ⵠⵠⲆⵠⵠΔⵠ: 443,
    ⵠΔΔᐃⲆᐃΔ: 444,
    ᐃᐃⵠⲆΔᐃΔ: 445,
    ⲆΔⲆΔᐃᐃΔ: 446,
    ⲆΔⵠᐃΔΔΔ: 447,
    ᐃⲆᐃⵠⵠⵠⲆ: 448,
    ⲆⲆⵠⵠⵠⲆⲆ: 449,
    ΔΔⲆᐃⲆⲆᐃ: 450,
    ᐃΔΔⲆΔⵠΔ: 451,
    ΔΔⲆⵠⵠⵠⵠ: 452,
    ⵠᐃᐃΔΔⲆᐃ: 453,
    ΔᐃⲆᐃⵠⵠⵠ: 454,
    ΔⲆᐃΔΔⵠᐃ: 455,
    ᐃᐃⵠΔⵠⵠᐃ: 456,
    ᐃⲆⲆⲆᐃⵠⵠ: 457,
    ΔΔΔⵠΔⵠΔⵠⵠ: 458,
    ΔᐃⵠᐃⲆⵠΔ: 459,
    ΔⲆΔⲆⵠⵠΔ: 460,
    ⵠΔᐃⲆᐃΔⲆ: 461,
    ⲆΔⲆⲆΔⲆⲆ: 462,
    ᐃⲆⲆΔⵠⵠⵠ: 463,
    ᐃΔⲆΔᐃᐃᐃ: 464,
    ⲆⲆΔⵠⵠΔⲆ: 465,
    ΔᐃᐃΔⲆΔⲆ: 466,
    ⵠⲆⵠⵠⵠΔᐃ: 467,
    ⲆⲆⵠᐃΔⲆΔ: 468,
    ⲆⵠᐃᐃⲆⲆΔ: 469,
    ⲆⵠᐃΔⲆⵠⲆ: 470,
    ⲆΔⵠᐃⲆᐃⵠ: 471,
    ⲆᐃⵠⵠΔΔⲆ: 472,
    ᐃⵠΔᐃⲆΔⵠ: 473,
    ⲆⲆⵠⵠΔΔΔ: 474,
    ᐃⵠΔΔΔΔⲆ: 475,
    ᐃΔᐃⵠΔᐃΔ: 476,
    ᐃΔⲆᐃᐃⵠⵠ: 477,
    ⵠᐃⵠᐃᐃᐃⵠ: 478,
    ᐃΔⵠᐃᐃΔⲆ: 479,
    ⵠⲆΔⲆⲆᐃΔ: 480,
    ⲆΔⲆᐃⵠⲆΔ: 481,
    ΔⲆΔⲆⵠⵠⵠ: 482,
    ⵠΔΔΔᐃⵠⵠ: 483,
    ᐃⵠᐃⲆⲆⲆΔ: 484,
    ⲆⵠΔᐃⵠⲆⲆ: 485,
    ᐃᐃᐃΔᐃⲆᐃ: 486,
    ⵠᐃⵠΔⲆᐃⲆ: 487,
    ΔⲆΔΔΔᐃⵠ: 488,
    ᐃᐃⲆⲆΔⵠΔ: 489,
    ᐃⵠⲆⲆΔΔⵠ: 490,
    ⵠᐃⵠᐃⲆⵠⲆ: 491,
    ⲆΔⲆⲆᐃⲆᐃ: 492,
    ⲆⲆΔⵠᐃⲆᐃ: 493,
    ⲆΔΔⵠΔⲆΔ: 494,
    ΔΔⵠᐃΔⲆⲆ: 495,
    ΔⲆⵠΔⵠⵠⲆ: 496,
    ᐃⵠΔⲆⲆⲆΔ: 497,
    ⲆΔⵠᐃⵠⲆΔ: 498,
    ᐃΔⲆⵠⵠⲆⲆ: 499,
    ⲆⵠΔΔⵠⵠⲆ: 500,
    ⵠΔᐃⵠᐃΔⵠ: 501,
    ᐃᐃᐃⵠⲆⲆⵠ: 502,
    ⵠⲆΔΔΔⵠⲆ: 503,
    ⵠⵠΔⲆΔΔⵠ: 504,
    ⲆⵠΔⲆᐃⵠΔ: 505,
    ⵠⲆΔᐃᐃⲆⵠ: 506,
    ΔΔΔⵠᐃⲆⵠ: 507,
    ΔᐃⵠᐃⲆᐃⲆ: 508,
    ⲆⵠᐃⵠᐃΔⵠ: 509,
    ⵠᐃΔΔΔΔᐃ: 510,
    ΔΔⲆΔᐃⵠᐃ: 511,
    ΔΔᐃⵠΔΔⵠ: 512,
    ΔⲆᐃⵠⲆⵠΔ: 513,
    ⵠⵠᐃΔΔᐃⲆ: 514,
    ⲆΔΔᐃⲆⲆⲆ: 515,
    ᐃⵠⵠᐃᐃⵠᐃ: 516,
    ΔⲆΔⲆᐃⲆΔ: 517,
    ⲆⵠΔΔᐃΔΔ: 518,
    ⲆⲆᐃⲆⲆⵠᐃ: 519,
    ⲆᐃⲆⲆⵠᐃΔ: 520,
    ΔΔⵠⲆᐃⲆᐃ: 521,
    ⵠⲆⵠⲆⲆⵠᐃ: 522,
    ΔⲆⵠⵠΔΔᐃ: 523,
    ⵠⵠΔⲆⲆ: 524,
    ΔᐃᐃᐃΔΔΔᐃᐃ: 525,
    ΔⵠⲆΔⲆⲆⵠ: 526,
    ΔⵠⵠⵠⵠⲆΔ: 527,
    ΔⵠΔᐃⲆᐃᐃΔⵠ: 528,
    ᐃΔᐃⲆⵠⲆⵠ: 529,
    ΔⲆⲆⵠⲆ: 530,
    ᐃⵠΔΔᐃⵠΔ: 531,
    ᐃᐃⵠⵠⲆⵠΔ: 532,
    ᐃⲆⲆᐃⵠⲆΔ: 533,
    ⵠⵠΔᐃⵠⵠΔ: 534,
    ⲆⵠΔⲆⲆΔᐃ: 535,
    ᐃⲆᐃΔᐃΔᐃ: 536,
    ᐃⲆⵠⲆᐃΔᐃ: 537,
    ⵠᐃΔⲆⵠᐃⲆ: 538,
    ⵠⵠΔⲆⲆΔⲆ: 539,
    ⵠΔΔⲆⲆΔⲆ: 540,
    ΔΔⲆⵠⲆᐃⲆ: 541,
    ⵠΔΔⵠⵠᐃⲆ: 542,
    ΔⲆⲆⵠᐃΔᐃ: 543,
    ⲆΔᐃⵠΔᐃⵠ: 544,
    ΔᐃⵠΔⲆΔᐃ: 545,
    ⵠⲆⵠᐃⵠᐃⵠ: 546,
    ⵠᐃΔΔⲆⵠⵠ: 547,
    ⵠⵠⵠⲆⵠΔᐃ: 548,
    ᐃⲆᐃᐃΔⲆᐃ: 549,
    ᐃⵠᐃⲆΔⵠΔ: 550,
    ΔⲆΔᐃⲆⲆΔ: 551,
    ᐃᐃᐃⵠⲆΔⵠ: 552,
    ᐃᐃⵠⲆⲆⵠⲆ: 553,
    ⲆᐃⲆᐃⲆΔᐃ: 554,
    ⵠᐃⲆΔⵠᐃᐃ: 555,
    ΔⲆΔΔᐃᐃᐃ: 556,
    ⵠΔⵠⵠⲆΔᐃ: 557,
    ΔᐃΔⵠΔⵠⵠ: 558,
    ᐃⲆᐃⲆⵠᐃΔ: 559,
    ΔⵠΔⵠΔᐃᐃ: 560,
    ΔᐃⲆᐃΔⲆⵠ: 561,
    ⲆᐃⵠᐃⲆΔᐃ: 562,
    ᐃⲆⲆΔᐃⵠΔ: 563,
    ΔΔΔⵠⵠᐃⲆ: 564,
    ⵠⲆⲆᐃⲆⲆΔ: 565,
    ᐃᐃᐃΔⲆⲆⵠ: 566,
    ᐃⵠⵠⲆΔⲆᐃ: 567,
    ᐃⲆⵠΔⵠⵠΔ: 568,
    ⵠΔΔΔΔᐃⵠ: 569,
    ᐃⵠⲆⵠⵠΔᐃ: 570,
    ⵠⵠⲆⲆᐃⵠᐃ: 571,
    ⲆΔⲆΔⲆᐃΔ: 572,
    ⵠⲆⲆΔΔᐃΔ: 573,
    ΔⵠⵠⵠᐃⲆΔ: 574,
    ΔⲆᐃⵠⵠⲆⵠ: 575,
    ᐃⲆᐃⲆⲆΔᐃ: 576,
    ΔⵠΔΔᐃΔΔ: 577,
    ΔΔⲆΔⲆᐃⲆ: 578,
    ⲆⲆΔΔⲆⲆⲆ: 579,
    ΔⲆⵠΔΔᐃⲆ: 580,
    ⵠΔΔⲆⵠᐃᐃ: 581,
    ᐃᐃΔⵠⵠᐃᐃⲆⲆ: 582,
    ⵠᐃⲆΔⵠ: 583,
    ᐃⲆΔⲆᐃᐃᐃ: 584,
    ᐃⲆᐃⲆΔⵠᐃ: 585,
    ΔⵠᐃᐃⲆⵠΔΔⲆ: 586,
    ⲆⵠⲆΔΔ: 587,
    ΔΔⵠⵠⲆ: 588,
    ⲆⵠᐃΔⲆⲆⵠ: 589,
    ᐃⲆⲆⵠⵠᐃΔ: 590,
    ᐃⲆΔᐃⲆⵠΔ: 591,
    ⵠⵠⲆΔⵠᐃⵠ: 592,
    ⲆⵠᐃⲆⵠΔⲆ: 593,
    ᐃⲆⲆⲆΔΔᐃ: 594,
    ⵠΔⲆΔΔᐃᐃ: 595,
    ΔᐃΔΔⲆⵠΔ: 596,
    ᐃΔⵠᐃΔᐃⵠ: 597,
    ⲆᐃΔⵠⵠⲆᐃ: 598,
    ⵠⵠⵠⵠᐃⲆⲆ: 599,
    Ⲇⵠᐃⵠⵠⵠᐃ: 600,
    ΔⵠⲆⲆⵠᐃᐃ: 601,
    ⲆⵠΔᐃᐃⲆⲆ: 602,
    ᐃⲆᐃⲆΔᐃΔ: 603,
    ⲆᐃΔⲆΔΔⲆ: 604,
    ⵠⲆⵠⵠⵠⵠⲆ: 605,
    ⵠᐃⵠⲆΔⵠΔ: 606,
    ⲆᐃᐃᐃᐃᐃΔ: 607,
    ⵠᐃᐃΔᐃΔᐃ: 608,
    ΔⲆⲆᐃⵠⵠΔ: 609,
    ⵠΔᐃⲆⲆΔᐃ: 610,
    ᐃⵠⵠⲆⲆⲆΔ: 611,
    ᐃⵠⲆΔⲆᐃⲆ: 612,
    ⵠΔΔΔⲆⵠΔ: 613,
    ⵠⵠⲆᐃᐃᐃΔ: 614,
    ΔΔᐃᐃᐃᐃⵠ: 615,
    ⲆⲆⵠⵠΔⵠᐃ: 616,
    ⵠⲆⲆⲆⲆᐃΔ: 617,
    ᐃᐃᐃⲆⵠⲆⵠ: 618,
    ⲆⲆΔⲆⲆΔΔ: 619,
    ⲆⵠΔΔⲆΔⵠ: 620,
    ᐃⵠⲆΔⲆᐃⵠ: 621,
    ᐃΔΔⲆⵠⵠΔ: 622,
    ⲆΔⵠᐃΔⲆᐃ: 623,
    ᐃⵠⲆᐃΔⵠⵠ: 624,
    ᐃⲆⲆΔⵠΔᐃ: 625,
    ΔΔΔⵠᐃⲆⲆ: 626,
    ⵠⲆΔΔᐃⵠⲆ: 627,
    ⵠⲆⵠⵠΔᐃΔ: 628,
    ᐃᐃᐃΔⵠⲆⲆ: 629,
    ΔⵠΔᐃⵠⵠᐃ: 630,
    ᐃᐃⲆᐃⲆⵠΔ: 631,
    ⵠⲆᐃΔⲆⲆΔ: 632,
    ᐃⵠᐃΔΔΔᐃ: 633,
    ΔⵠΔⲆᐃⵠⵠ: 634,
    ᐃⵠΔΔᐃΔⵠ: 635,
    ⵠᐃᐃⵠᐃⲆΔ: 636,
    ⲆⵠⵠⵠᐃⵠΔ: 637,
    ΔΔⵠΔⲆⲆⵠ: 638,
    ᐃᐃᐃⲆᐃⵠⲆ: 639,
    ᐃᐃᐃⵠᐃⵠΔ: 640,
    ⵠⵠⵠⵠΔΔⲆ: 641,
    ᐃⲆᐃⵠⲆⲆᐃ: 642,
    ΔᐃⲆⲆⵠⵠᐃ: 643,
    ⲆⵠⵠᐃⲆᐃⲆ: 644,
    ᐃⲆᐃⲆΔᐃΔ: 645,
    ⲆᐃⲆᐃᐃΔⵠ: 646,
    ⵠⵠⲆⲆΔⲆⲆ: 647,
    ᐃΔⵠᐃΔᐃⲆ: 648,
    ⵠᐃⲆⵠΔⵠⵠ: 649,
    ΔΔⵠΔⲆⲆᐃ: 650,
    ΔᐃⲆΔⲆⲆⲆ: 651,
    ⵠΔⵠΔⵠⵠⲆ: 652,
    ⲆⲆⵠΔᐃⲆᐃ: 653,
    ᐃᐃΔᐃⲆⲆΔ: 654,
    ⵠⵠⲆΔⵠⵠⵠ: 655,
    ΔΔⵠᐃΔⵠᐃ: 656,
    ⵠᐃⵠⵠΔΔⵠ: 657,
    ⵠΔᐃᐃᐃᐃⵠ: 658,
    ᐃⵠᐃᐃᐃⲆᐃ: 659,
    ΔΔⵠΔⲆᐃᐃ: 660,
    ᐃΔⲆᐃΔᐃⲆ: 661,
    ⵠⵠⵠⲆΔⵠⵠ: 662,
    ⲆⵠⵠⲆΔⲆⲆ: 663,
    ⵠᐃΔᐃⲆᐃΔ: 664,
    ΔᐃᐃⲆᐃⵠⲆ: 665,
    ⵠⵠᐃΔᐃⵠⲆ: 666,
    ⲆⵠᐃΔΔⲆᐃ: 667,
    ΔΔΔΔΔⵠΔ: 668,
    ⵠΔⲆⵠᐃⵠⵠ: 669,
    ⲆⲆᐃⲆⵠᐃⵠ: 670,
    ⲆΔⲆⲆᐃⲆΔ: 671,
    ⲆⲆⲆΔⲆⵠᐃ: 672,
    ⵠᐃⵠᐃⵠᐃΔ: 673,
    ⲆΔᐃⵠΔⵠΔ: 674,
    ⵠᐃΔⵠᐃΔᐃ: 675,
    ⵠΔΔⵠΔΔΔ: 676,
    ⵠⵠᐃΔᐃⲆᐃᐃⲆ: 677,
    ΔᐃΔⲆⲆΔᐃ: 678,
    ⵠⵠⵠΔⵠⲆⲆ: 679,
    ΔⵠᐃⲆⵠⵠⵠ: 680,
    ⲆΔΔΔᐃⵠΔ: 681,
    ΔⵠⵠⲆΔⵠᐃᐃⲆ: 682,
    POINTS: 683,
    ᐃᐃⲆΔⵠⵠⵠ: 684,
    ᐃⲆⵠᐃᐃⵠⵠ: 685,
    ⵠΔⲆⲆⲆⲆᐃ: 686,
    ⲆⲆΔⲆᐃΔⲆ: 687,
    ΔⲆΔΔⵠᐃⲆ: 688,
    ⵠⵠᐃΔΔᐃᐃ: 689,
    ᐃⲆⵠⵠⲆⲆⵠ: 690,
    ᐃᐃΔⲆᐃⲆΔ: 691,
    ⵠᐃΔᐃⵠΔⵠ: 692,
    ᐃⲆᐃᐃⲆⵠᐃ: 693,
    ᐃⲆΔᐃΔⲆᐃ: 694,
    ΔΔΔⵠΔᐃⲆ: 695,
    ⲆⵠΔΔΔⵠΔ: 696,
    ᐃᐃⵠⲆⵠⲆⵠ: 697,
    ΔᐃᐃΔⲆΔⵠ: 698,
    ΔⲆᐃΔΔⵠⲆ: 699,
    ΔΔᐃΔᐃᐃΔ: 700,
    ᐃΔⲆⵠⵠᐃΔ: 701,
    ⵠΔΔΔᐃᐃⲆ: 702,
    ⲆΔⵠⲆⵠᐃⵠ: 703,
    ⲆⲆⲆⲆΔᐃΔ: 704,
    ⲆⵠⲆΔⵠΔⵠ: 705,
    ⵠⵠΔΔⵠⲆΔ: 706,
    ⵠⲆⵠᐃΔᐃΔ: 707,
    ΔΔⵠⵠⵠᐃⵠ: 708,
    ᐃⲆⵠᐃΔΔΔ: 709,
    ⲆΔⵠⵠᐃᐃᐃ: 710,
    ⲆⵠⲆⵠΔΔᐃ: 711,
    ⵠⲆⲆⵠΔⲆⵠ: 712,
    ⵠⲆⵠⵠΔᐃⲆ: 713,
    ⵠⵠⲆᐃⵠΔⵠ: 714,
    ᐃⲆᐃⲆᐃⲆⲆ: 715,
    ⵠΔⵠⲆⲆᐃⵠ: 716,
    ⵠⲆΔⵠⲆⵠᐃ: 717,
    ⵠⵠⲆᐃⵠΔΔ: 718,
    ⵠᐃΔⵠΔⲆᐃ: 719,
    ᐃⵠⲆΔⲆᐃΔ: 720,
    ⲆᐃΔΔΔΔΔ: 721,
    ΔᐃⲆᐃᐃᐃⵠ: 722,
    ΔΔΔⵠⲆᐃⵠ: 723,
    ᐃΔΔⲆⵠᐃΔ: 724,
    ⲆΔΔⵠⵠᐃⲆ: 725,
    ⲆΔΔΔⲆΔΔ: 726,
    ⵠᐃΔⵠⵠⵠⲆ: 727,
    ᐃⲆᐃΔⲆΔΔ: 728,
    ΔⵠⵠⲆⵠⵠΔ: 729,
    ⵠⲆᐃΔᐃΔᐃ: 730,
    ⵠⵠᐃⵠⵠᐃᐃ: 731,
    ⵠΔᐃⵠⵠⲆⵠ: 732,
    ⲆⵠΔΔⵠⲆΔ: 733,
    ⵠᐃΔΔⲆᐃΔ: 734,
    ᐃΔⵠΔⵠⵠⲆ: 735,
    ⲆᐃⲆᐃᐃⵠⲆ: 736,
    ᐃⵠⲆⵠᐃⵠⲆ: 737,
    ⲆⵠⵠᐃΔⵠᐃ: 738,
    ⲆⲆΔᐃⵠⲆΔ: 739,
    ΔΔⲆⵠⵠⵠⲆ: 740,
    ᐃⲆΔΔⲆⵠᐃ: 741,
    ⲆᐃΔᐃΔⵠᐃ: 742,
    ΔΔⵠⵠΔⵠᐃ: 743,
    ⵠⲆⲆᐃⵠⵠⲆ: 744,
    ΔⵠᐃΔⵠⵠⵠ: 745,
    ᐃΔⲆⲆⵠⵠⵠ: 746,
    ⵠⲆΔⲆⵠΔΔ: 747,
    ᐃᐃᐃⲆΔⵠᐃ: 748,
    ΔᐃᐃⲆΔᐃᐃ: 749,
    ᐃⵠΔᐃⵠΔⲆ: 750,
    ΔⲆⵠᐃΔΔⵠ: 751,
    ΔⵠⵠΔⵠⲆⲆ: 752,
    ΔΔⲆⲆΔΔΔ: 753,
    ᐃᐃⵠΔᐃΔᐃ: 754,
    ⲆⵠΔΔⵠΔⲆ: 755,
    ᐃⲆΔⵠⲆⲆⵠ: 756,
    ⲆⵠΔΔᐃⲆⲆ: 757,
    ⲆⲆᐃᐃᐃⵠᐃ: 758,
    ⲆᐃΔⵠⵠΔΔ: 759,
    ⲆᐃᐃⵠⲆᐃⲆ: 760,
    ⲆᐃᐃⲆᐃⲆⲆ: 761,
    ΔΔⲆᐃᐃᐃⵠ: 762,
    ᐃΔⵠᐃⲆⲆⵠ: 763,
    ⲆⵠΔⲆⲆⵠΔ: 764,
    ᐃⲆⵠΔⵠᐃⵠ: 765,
    ⲆⲆⵠⲆᐃΔⵠ: 766,
    ΔⵠⲆΔᐃⲆΔ: 767,
    ΔΔᐃᐃⵠᐃⵠ: 768,
    ⲆⵠᐃⵠⵠᐃⲆ: 769,
    ᐃⵠᐃⵠΔᐃᐃ: 770,
    Δᐃᐃⵠᐃⵠᐃ: 771,
    ⲆᐃⲆⲆⵠⵠᐃ: 772,
    ΔⵠⵠⲆΔᐃΔ: 773,
    ⲆⲆΔᐃⵠΔⲆ: 774,
    ⵠΔⵠⵠᐃᐃⵠ: 775,
    ⲆᐃⲆⲆᐃΔⵠ: 776,
    ⲆⲆⵠᐃᐃΔᐃ: 777,
    ⵠⵠΔⲆΔⲆᐃ: 778,
    ⲆⲆⲆⵠⲆⵠΔ: 779,
    ⲆΔⲆⲆⵠΔᐃ: 780,
    ᐃⵠᐃᐃᐃᐃⵠ: 781,
    ΔΔΔⲆΔⲆΔ: 782,
    ⵠⵠⲆΔᐃΔᐃ: 783,
    ⵠΔⲆⵠⵠᐃⲆ: 784,
    ΔⵠⵠΔⵠⲆΔ: 785,
    ⲆΔⵠⲆⵠⵠⲆ: 786,
    ⲆⲆΔᐃⲆⲆᐃ: 787,
    ⲆᐃⲆΔᐃᐃΔ: 788,
    ⵠⲆᐃⲆΔⵠᐃ: 789,
    ⲆΔⲆᐃᐃᐃⲆ: 790,
    ⲆⲆⲆΔΔⲆⲆ: 791,
    ΔⲆⵠⵠΔΔⵠ: 792,
    ᐃⲆⵠⵠⵠᐃᐃ: 793,
    ᐃⵠᐃⵠΔⵠⲆ: 794,
    ᐃⲆΔⵠᐃⵠⲆ: 795,
    ᐃΔΔΔⵠⲆⲆ: 796,
    ΔΔΔⲆⲆΔΔ: 797,
    ⲆⵠΔΔⲆⵠΔ: 798,
    ᐃⵠΔⲆΔΔⵠ: 799,
    ΔⵠΔΔᐃΔⲆ: 800,
    ⲆΔⵠⵠⲆᐃⵠ: 801,
    ΔⲆⵠΔΔⵠⵠ: 802,
    ⵠⵠⵠⵠΔⵠⵠ: 803,
    ΔⲆΔⲆⲆⲆΔ: 804,
    ⲆΔᐃⲆⲆᐃⵠ: 805,
    ⵠⲆΔᐃᐃⲆᐃ: 806,
    ᐃᐃⲆⵠᐃⲆᐃ: 807,
    ᐃⵠᐃᐃⲆΔⵠ: 808,
    ᐃⵠΔⵠⲆᐃⵠ: 809,
    ΔΔⲆᐃᐃⲆᐃ: 810,
    ⲆⵠⵠⵠⲆΔᐃ: 811,
    ⵠΔⵠΔΔⲆᐃⲆⵠ: 812,
    ⵠΔⲆᐃⵠⲆⵠ: 813,
    ΔⵠⵠΔᐃᐃΔⵠⲆ: 814,
    ᐃⲆⵠⲆⲆⲆᐃ: 815,
    ⵠΔⵠⲆⲆᐃᐃᐃΔ: 816,
    ᐃⵠⵠᐃΔΔⵠΔⲆ: 817,
    ⵠᐃⲆΔⲆᐃⲆᐃⲆ: 818,
    ⲆⵠⲆΔⵠⲆⲆⵠⵠ: 819,
    ⵠⲆⵠⲆⵠΔᐃᐃⵠ: 820,
    ᐃᐃᐃⲆⵠⵠⲆ: 821,
    ⲆᐃⲆᐃⲆ: 822,
    ᐃᐃⵠⲆⲆᐃⵠ: 823,
    ΔᐃΔⵠᐃⲆⲆ: 824,
    ⲆⲆΔⵠΔᐃᐃ: 825,
    ⲆⲆⵠⲆΔⵠᐃⲆⲆ: 826,
    ᐃⲆᐃⲆΔⲆᐃ: 827,
    ⲆᐃⵠⵠΔⲆΔ: 828,
    ΔᐃᐃⲆΔΔΔ: 829,
    ⵠⵠᐃⲆⲆⲆⵠ: 830,
    ᐃᐃᐃᐃᐃᐃⵠ: 831,
    ΔⲆⵠⵠᐃᐃⲆ: 832,
    ⲆⵠⵠⵠⵠⲆΔ: 833,
    ⲆⵠΔΔⵠⵠΔ: 834,
    ⲆΔⵠΔᐃᐃᐃ: 835,
    ΔⲆⵠᐃⲆⵠᐃ: 836,
    ⲆⲆⵠⲆΔΔΔ: 837,
    ⵠⲆⵠⲆΔ: 838,
    ᐃⲆΔⲆᐃ: 839,
    ΔΔⲆⲆΔⵠⲆ: 840,
    ⲆⲆⵠᐃᐃⲆⲆⲆⲆ: 841,
    ΔⲆⵠⵠΔⵠᐃ: 842,
    ⲆⵠⵠⲆⲆᐃⲆ: 843,
    ᐃᐃΔΔᐃⲆᐃ: 844,
    ᐃⵠⵠⲆΔⵠⲆ: 845,
    ᐃⲆᐃⲆᐃⵠⵠ: 846,
    ⲆⲆⵠΔⵠΔⲆ: 847,
    ⵠᐃΔⲆᐃⲆᐃ: 848,
    ⵠⵠΔⲆΔΔᐃ: 849,
    ΔⲆᐃⲆΔᐃᐃ: 850,
    ΔᐃᐃⲆⲆⲆⲆ: 851,
    ΔΔΔⵠᐃⵠⵠ: 852,
    ⲆᐃⵠⲆⵠΔⲆ: 853,
    ⵠⲆΔⲆᐃⲆⵠ: 854,
    ΔᐃΔⵠΔⵠΔ: 855,
    ΔᐃᐃΔΔ: 856,
    ⲆⵠⲆᐃΔⲆⵠ: 857,
    ⲆᐃᐃⲆᐃΔΔ: 858,
    ⲆᐃᐃᐃΔⵠΔ: 859,
    ΔⲆΔⲆΔⵠᐃ: 860,
    ΔᐃᐃΔⲆΔΔ: 861,
    ⲆⲆⵠⵠΔΔⵠ: 862,
    ⲆⲆⲆⵠΔᐃⲆ: 863,
    ⲆⵠΔᐃᐃᐃⲆ: 864,
    ⵠⵠⵠΔᐃⵠⵠ: 865,
    ΔΔⲆΔⵠΔⲆ: 866,
    ⵠⵠΔΔᐃⵠⲆ: 867,
    ᐃⵠΔΔΔΔᐃ: 868,
    ⲆᐃΔⵠΔᐃΔ: 869,
    ΔⲆⲆⵠΔⲆΔ: 870,
    ⲆᐃᐃᐃᐃᐃⲆ: 871,
    ᐃⲆᐃⵠᐃΔⲆ: 872,
    ΔⲆΔᐃΔᐃΔ: 873,
    ᐃⵠⲆΔⲆⲆᐃ: 874,
    ᐃΔΔΔᐃΔΔ: 875,
    ᐃⵠⲆⵠⲆⵠΔ: 876,
    ⲆΔᐃⲆΔΔΔ: 877,
    ᐃᐃⲆΔⲆΔᐃ: 878,
    ΔΔⵠⲆⲆΔΔ: 879,
    ⲆΔΔⵠΔⲆⲆ: 880,
    ⵠⲆᐃᐃⲆΔΔ: 881,
    ⲆⲆⵠⵠⵠᐃΔ: 882,
    ΔΔⲆⵠⵠΔᐃ: 883,
    ⵠⵠΔᐃΔⵠⵠ: 884,
    ⵠᐃⵠᐃᐃᐃᐃ: 885,
    ⲆⵠᐃⲆⵠⵠⵠ: 886,
    ᐃⲆⲆᐃⵠᐃⵠ: 887,
    ⵠⲆΔΔᐃᐃᐃ: 888,
    ⲆⲆⵠᐃⵠᐃⵠ: 889,
    ⲆΔᐃⵠΔΔⵠ: 890,
    ΔΔⲆΔᐃⵠΔ: 891,
    ⵠⵠΔᐃᐃ: 892,
    ΔᐃΔⵠΔⲆᐃ: 893,
    ᐃⲆᐃⵠⵠᐃⵠ: 894,
    ⲆᐃΔⲆΔ: 895,
    ⲆᐃΔⲆᐃΔᐃᐃⲆ: 896,
    ᐃⲆΔⲆⲆΔᐃ: 897,
    Δᐃᐃᐃⵠ: 898,
    ⵠᐃⲆⵠⲆᐃⵠ: 899,
    ⲆⲆⲆⲆⵠᐃⲆ: 900,
    ΔΔᐃⵠᐃⵠⵠ: 901,
    ⵠΔⲆᐃⵠⵠⲆ: 902,
    ⵠᐃᐃⵠΔᐃᐃ: 903,
    ΔⵠΔⲆⲆⵠⲆ: 904,
    ⵠⲆⵠᐃᐃⵠⲆ: 905,
    ᐃⵠΔᐃⵠⵠⵠ: 906,
    ΔⵠⲆΔΔΔΔ: 907,
    ᐃΔᐃⲆⵠⵠᐃ: 908,
    ᐃⲆⲆⲆⲆⲆⵠ: 909,
    ΔᐃΔᐃᐃᐃⲆ: 910,
    ⲆᐃⲆⲆᐃⵠᐃ: 911,
    ΔⲆᐃⵠⵠ: 912,
    ⵠⵠⵠΔᐃ: 913,
    ⵠⵠᐃⵠⵠ: 914,
    ᐃΔΔᐃⲆⲆⲆ: 915,
    ᐃⵠⲆΔΔᐃᐃ: 916,
    ⵠᐃᐃᐃᐃⲆΔ: 917,
    ⲆᐃⲆᐃⵠⲆⲆ: 918,
    ⵠⵠⵠΔΔᐃⲆ: 919,
    ⲆⵠΔᐃⵠᐃⵠ: 920,
    ΔΔⲆⵠⲆΔᐃ: 921,
    ᐃⵠΔΔⵠⲆΔ: 922,
    ΔΔⵠᐃⵠΔΔ: 923,
    ᐃⵠⵠΔⲆΔᐃ: 924,
    Δⵠᐃⵠᐃⵠᐃ: 925,
    ⵠᐃⲆⲆΔΔⵠ: 926,
    ⲆⵠⲆᐃⵠᐃⲆ: 927,
    ⲆᐃⲆᐃⵠⵠⲆ: 928,
    ⲆⲆᐃⲆΔΔᐃ: 929,
    ᐃΔⲆⵠⲆΔΔ: 930,
    ⵠⲆᐃⲆΔⲆⲆ: 931,
    ΔⲆⲆΔⲆⵠⲆ: 932,
    ΔᐃⵠΔᐃΔᐃ: 933,
    ᐃΔΔⵠⲆᐃᐃ: 934,
    ᐃⵠⲆⲆⲆᐃⲆ: 935,
    ᐃⵠⵠᐃⲆᐃⵠ: 936,
    ⲆᐃᐃΔⲆᐃⲆ: 937,
    ᐃⵠᐃΔᐃⵠΔ: 938,
    ⵠⲆⲆΔⵠⵠΔ: 939,
    ⲆⲆⲆⵠⵠⵠᐃ: 940,
    ⲆᐃⵠᐃΔⲆᐃ: 941,
    ⵠⲆΔⵠᐃⵠⵠ: 942,
    ΔᐃᐃΔᐃⲆᐃ: 943,
    ΔⵠⲆΔΔⲆΔ: 944,
    Ⲇᐃᐃᐃᐃᐃᐃ: 945,
    ⲆⵠⵠΔᐃᐃᐃ: 946,
    ⵠᐃⲆⲆⵠᐃⵠ: 947,
    ᐃⲆⲆⵠᐃⵠᐃ: 948,
    ⲆΔⲆⲆΔⲆᐃ: 949,
    ⵠⲆⲆⲆᐃⵠᐃ: 950,
    ⲆⵠⲆⲆⵠᐃⲆ: 951,
    ⵠⲆⵠΔⵠᐃⵠ: 952,
    ΔΔⲆᐃΔⵠⲆ: 953,
    ⲆᐃᐃⵠⲆⲆⵠ: 954,
    ⲆᐃᐃⲆΔⵠⲆ: 955,
    ⲆΔΔᐃΔᐃᐃ: 956,
    ⵠⵠΔⲆᐃΔΔ: 957,
    ΔⵠⵠⲆⵠⲆⵠ: 958,
    ᐃΔⵠᐃᐃⲆΔ: 959,
    ΔⵠⲆⲆⵠᐃⵠ: 960,
    ⵠⵠΔⲆΔᐃⲆ: 961,
    ⲆⵠᐃⲆΔᐃΔ: 962,
    ᐃΔⵠⲆΔᐃⵠ: 963,
    ⲆᐃΔΔⲆⲆⲆ: 964,
    ΔᐃⲆᐃΔᐃᐃ: 965,
    ⵠⵠⲆⲆᐃᐃⲆ: 966,
    ᐃΔⵠᐃⲆᐃⵠ: 967,
    ᐃΔΔΔⵠⵠⵠ: 968,
    ⵠⵠⵠⵠΔⵠΔ: 969,
    ᐃᐃΔⲆᐃⵠΔΔᐃ: 970,
    ΔⲆⵠⲆⵠᐃᐃ: 971,
    ⵠᐃⵠΔⵠΔᐃ: 972,
    ΔⲆᐃⵠΔⵠⲆ: 973,
    ⲆⵠᐃⲆⵠᐃⵠ: 974,
    ⲆᐃⵠⵠⲆᐃⵠ: 975,
    ⵠⵠᐃΔᐃⲆᐃ: 976,
    ⲆⵠⲆⵠⵠⲆᐃ: 977,
    ΔⵠⲆᐃΔΔΔ: 978,
    ⲆⲆΔⲆⵠΔᐃ: 979,
    ΔⲆⵠΔⲆⵠΔ: 980,
    ⲆΔⵠᐃⵠⲆᐃ: 981,
    ΔⵠΔⲆᐃⲆᐃ: 982,
    ΔⵠΔᐃᐃΔΔ: 983,
    ⲆΔΔΔᐃⲆΔ: 984,
    ᐃⲆΔⲆΔᐃⵠ: 985,
    ⲆⵠⵠⲆΔΔᐃ: 986,
    ᐃⲆᐃΔⵠΔᐃ: 987,
    ΔⵠⵠⲆᐃᐃᐃ: 988,
    ΔᐃⵠⲆΔᐃΔ: 989,
    ΔⵠᐃⲆⲆⲆⲆ: 990,
    ⵠΔⲆᐃᐃΔΔ: 991,
    ΔᐃᐃⵠⲆⵠᐃ: 992,
    ⲆᐃΔⵠⵠᐃΔ: 993,
    ᐃⵠⵠⲆⵠΔΔ: 994,
    ᐃⲆΔᐃᐃᐃᐃ: 995,
    ⵠⵠᐃⵠΔᐃⲆ: 996,
    ⲆᐃⵠⲆⲆΔᐃ: 997,
    ᐃΔⵠⵠⵠΔⵠ: 998,
    ᐃΔⲆⵠΔΔⵠ: 999,
    ᐃΔⵠᐃⵠΔⲆ: 1000,
    ᐃⵠⲆⵠᐃΔΔ: 1001,
    ⲆΔᐃⲆΔΔⵠ: 1002,
    ᐃⵠᐃᐃⲆΔⲆ: 1003,
    ⲆᐃΔⵠⵠⵠⵠ: 1004,
    ΔⵠᐃⲆΔⲆΔ: 1005,
    ⲆⲆⲆⲆᐃᐃΔ: 1006,
    ⲆΔⵠⵠⲆᐃⲆ: 1007,
    ᐃⲆⵠⲆⵠΔⲆ: 1008,
    ⲆⲆⲆⵠᐃⵠΔ: 1009,
    ᐃΔⵠⲆⲆᐃⵠ: 1010,
    ⲆΔⵠⵠᐃⵠⲆ: 1011,
    ΔⲆᐃⲆⵠᐃⵠ: 1012,
    ⲆᐃᐃⵠΔΔᐃ: 1013,
    ⲆᐃΔⲆⲆΔⲆ: 1014,
    ᐃᐃᐃⲆⲆⲆΔ: 1015,
    ΔᐃⲆⲆΔⵠⵠ: 1016,
    ⵠΔⲆⲆⲆⲆΔ: 1017,
    ⲆⵠᐃⲆⵠⲆⲆ: 1018,
    ᐃⵠⵠᐃᐃᐃⵠ: 1019,
    ⲆⲆⲆⲆᐃΔⵠ: 1020,
    ⲆΔᐃⲆΔΔⲆ: 1021,
    ⲆⵠⵠᐃᐃΔⵠ: 1022,
    ΔΔᐃᐃⲆᐃⵠ: 1023,
    ᐃⵠⵠᐃᐃΔᐃ: 1024,
    ⵠⵠⵠⲆⲆⲆⵠ: 1025,
    ᐃᐃⵠⵠⵠⲆⲆ: 1026,
    ⲆΔⵠⵠⲆΔⲆ: 1027,
    ⲆᐃΔᐃᐃΔⲆ: 1028,
    ⵠΔⲆⵠⵠᐃⵠ: 1029,
    ΔⵠⲆⵠᐃΔⲆ: 1030,
    ⲆᐃᐃᐃⵠⵠⲆ: 1031,
    ᐃⲆⵠⵠᐃⲆΔ: 1032,
    ⵠⵠⵠΔⵠⲆΔ: 1033,
    ⲆⵠⵠⵠⵠᐃΔ: 1034,
    ⲆᐃᐃΔⵠⲆΔ: 1035,
    ⵠⵠᐃΔⲆⵠⲆ: 1036,
    ΔⵠⲆⵠⵠᐃΔ: 1037,
    ⲆⵠΔⲆⵠᐃΔ: 1038,
    ᐃⲆⵠⲆΔⵠⵠ: 1039,
    ΔᐃⲆⵠᐃⲆⲆ: 1040,
    ᐃᐃᐃⵠΔⵠΔ: 1041,
    ⵠΔⲆⲆᐃ: 1042,
    ⵠΔⵠⲆⲆΔⲆ: 1043,
    ⲆᐃΔⵠⲆⵠΔ: 1044,
    ΔⲆⲆΔΔ: 1045,
    ΔΔⲆᐃᐃᐃΔ: 1046,
    ΔⵠⲆᐃΔⲆΔ: 1047,
    ⲆΔⵠΔΔΔⵠ: 1048,
    ΔⵠⲆΔᐃⲆⵠ: 1049,
    ΔⵠᐃⲆⲆⲆⵠ: 1050,
    ⲆᐃⲆΔΔ: 1051,
    ⲆⲆⲆᐃΔⵠᐃ: 1052,
    ΔⵠΔⲆΔΔΔⲆⲆ: 1053,
    ᐃⵠᐃᐃΔᐃⲆⵠᐃ: 1054,
    ⲆΔᐃΔΔⵠΔⵠᐃ: 1055,
    ᐃⵠⵠⲆΔΔᐃⲆΔ: 1056,
    ⲆᐃⲆΔΔΔⵠ: 1057,
    ΔᐃⵠⲆⲆⲆⵠ: 1058,
    ⲆᐃΔΔⲆΔΔ: 1059,
    ⲆⵠΔΔⲆⲆⲆ: 1060,
    ⲆⵠⲆⲆⵠⲆⲆ: 1061,
    ᐃᐃⵠⲆᐃᐃΔ: 1062,
    ᐃⲆΔⲆⲆⲆⵠ: 1063,
    ⵠⵠⵠᐃⵠᐃⲆ: 1064,
    ᐃᐃⵠⲆⵠΔⵠ: 1065,
    ᐃⵠⵠΔᐃⵠⲆ: 1066,
    ᐃⵠᐃⵠⲆ: 1067,
    ΔΔⲆᐃⵠ: 1068,
    ⲆⵠⲆⲆⵠⵠΔ: 1069,
    ⲆΔᐃᐃᐃⲆⵠ: 1070,
    ⲆᐃⲆⲆΔΔⵠ: 1071,
    ⵠΔⵠⲆΔᐃⵠ: 1072,
    ΔⲆⵠΔᐃⲆᐃ: 1073,
    ΔⵠΔΔᐃⲆΔ: 1074,
    ⵠΔΔΔⵠᐃⲆ: 1075,
    ᐃᐃΔΔΔΔⵠ: 1076,
    ⲆΔⲆⵠᐃⵠᐃ: 1077,
    ᐃΔᐃᐃΔⵠⲆ: 1078,
    ⲆᐃᐃΔΔᐃⵠ: 1079,
    ⲆⲆᐃⵠᐃΔⵠ: 1080,
    ᐃᐃΔⲆΔΔΔⵠⵠ: 1081,
    ⵠⵠⲆᐃᐃΔᐃⲆΔ: 1082,
    ᐃⲆΔᐃⲆⲆᐃ: 1083,
    ᐃᐃΔⲆⵠᐃⲆ: 1084,
    ΔᐃⵠⲆᐃΔΔ: 1085,
    ⲆᐃΔᐃⵠᐃᐃ: 1086,
    ΔⲆⲆⵠᐃⲆⵠ: 1087,
    ᐃⵠⵠⲆᐃᐃⵠ: 1088,
    ᐃⵠⵠⵠΔⵠΔ: 1089,
    ⲆᐃⵠⲆᐃΔᐃ: 1090,
    ΔᐃⲆᐃᐃⵠΔ: 1091,
    ᐃΔᐃⲆⵠᐃⵠ: 1092,
    ΔⵠⵠᐃⵠΔⲆ: 1093,
    ᐃΔⵠᐃΔⲆⲆ: 1094,
    ΔⵠⲆΔⵠⵠᐃ: 1095,
    Δᐃⵠⵠᐃⵠⵠ: 1096,
    ⲆΔⲆΔΔⲆΔ: 1097,
    ΔᐃᐃᐃⲆⲆⲆ: 1098,
    ⲆⵠⲆⲆᐃΔΔ: 1099,
    ᐃⲆⵠⲆⲆΔⵠ: 1100,
    ΔⵠᐃⵠⵠΔᐃᐃᐃ: 1101,
    ᐃᐃⵠⵠᐃᐃⲆ: 1102,
    ΔⲆΔᐃⵠ: 1103,
    ᐃⲆⲆⵠⲆⵠᐃⲆⵠ: 1104,
    ΔⵠⲆⲆᐃⲆΔⲆΔ: 1105,
    ⵠᐃⲆⲆⵠΔᐃⲆⲆ: 1106,
    ᐃⲆᐃΔⲆⲆΔᐃΔ: 1107,
    ᐃⲆⲆⲆⵠΔΔ: 1108,
    ᐃⲆⲆⲆⲆⲆⲆ: 1109,
    ᐃⵠⲆᐃᐃᐃⵠ: 1110,
    ⵠᐃΔΔᐃⵠⵠ: 1111,
    ΔⲆΔᐃⲆⲆⵠ: 1112,
    ΔᐃΔⲆⵠᐃᐃⵠⲆ: 1113,
    ⵠᐃⲆⲆΔⵠᐃ: 1114,
    ᐃΔΔᐃⵠᐃΔ: 1115,
    ⵠᐃⲆᐃⲆΔᐃ: 1116,
    ᐃᐃᐃⵠΔⲆⵠ: 1117,
    ᐃⵠᐃⵠⲆᐃⲆ: 1118,
    ΔⵠᐃᐃⵠⲆⵠ: 1119,
    ⵠᐃΔⵠⵠᐃⲆ: 1120,
    ΔΔΔⵠΔ: 1121,
    ΔⲆⵠΔⲆⵠᐃⲆⲆ: 1122,
    ⵠⵠⲆΔⵠΔⵠ: 1123,
    ΔᐃⲆᐃⵠⲆⵠ: 1124,
    ᐃⲆᐃΔⵠᐃΔ: 1125,
    ⵠΔⲆⵠᐃΔⵠ: 1126,
    ᐃᐃᐃΔⲆⲆᐃ: 1127,
    ΔⵠΔΔⲆⵠᐃ: 1128,
    ⵠⵠΔⲆⵠⲆᐃ: 1129,
    ⲆΔⲆΔΔᐃᐃ: 1130,
    ⲆⲆⲆⲆⲆΔΔ: 1131,
    ⲆⲆᐃⵠⲆⲆᐃ: 1132,
    ᐃΔⵠⲆⵠⵠΔ: 1133,
    ⵠΔⲆⲆᐃᐃⵠ: 1134,
    ⲆⲆⲆⲆⲆΔᐃ: 1135,
    ⲆⵠⵠⲆᐃᐃΔ: 1136,
    ⲆᐃⲆⵠⵠΔΔ: 1137,
    ⵠΔΔⵠⲆⵠΔ: 1138,
    ⵠⵠⵠⲆΔΔⲆ: 1139,
    ⵠⲆⵠⲆᐃⵠⲆ: 1140,
    ΔⵠⵠⲆⵠⵠⵠ: 1141,
    ΔⲆᐃᐃⲆᐃᐃ: 1142,
    ᐃᐃⵠⲆΔᐃⵠ: 1143,
    ΔⵠⲆᐃΔᐃᐃ: 1144,
    ⵠΔⵠⲆⲆᐃΔ: 1145,
    ⵠⲆⲆΔΔᐃᐃ: 1146,
    ᐃᐃᐃⵠⵠⲆⵠ: 1147,
    ᐃΔⵠⲆⵠᐃΔ: 1148,
    ⲆⲆΔⵠΔⵠΔ: 1149,
    ᐃⲆⲆΔΔⵠⲆ: 1150,
    ⲆᐃⲆΔᐃⲆᐃ: 1151,
    ⵠⵠⵠᐃⲆⲆΔ: 1152,
    ᐃⵠᐃᐃΔⵠᐃ: 1153,
    ⵠⲆⲆᐃⲆⲆᐃ: 1154,
    ᐃΔΔΔᐃⲆⲆ: 1155,
    ⵠⲆⲆⲆᐃᐃᐃ: 1156,
    ⲆⵠⲆΔⲆⵠⲆ: 1157,
    ᐃᐃΔⲆⲆⵠⵠ: 1158,
    ⵠᐃⵠᐃΔᐃⵠ: 1159,
    ΔⵠᐃᐃⲆⲆⲆ: 1160,
    ⲆⵠⵠΔΔⵠⲆ: 1161,
    ⵠᐃⵠΔⲆⵠΔ: 1162,
    ᐃᐃⵠΔᐃ: 1163,
    ᐃⵠᐃΔⲆⵠΔ: 1164,
    ⲆΔⵠᐃⲆⵠⵠ: 1165,
    ΔᐃᐃⵠⵠⲆΔ: 1166,
    ᐃⲆΔΔⵠΔᐃ: 1167,
    ᐃᐃᐃⲆⵠⲆⲆ: 1168,
    ᐃⲆᐃⲆΔΔΔ: 1169,
    ⵠΔᐃⵠⵠᐃⵠ: 1170,
    ⵠΔᐃⵠⲆᐃΔ: 1171,
    ⵠΔⵠⲆⲆᐃⲆ: 1172,
    ᐃᐃⵠⲆⲆΔⲆ: 1173,
    ⲆⲆⵠⲆᐃᐃⲆ: 1174,
    ⵠⵠⲆⵠⲆΔⵠ: 1175,
    ΔΔᐃᐃⵠⲆΔ: 1176,
    ⵠⲆᐃᐃⵠⲆΔ: 1177,
    ΔⲆΔΔⵠⵠᐃ: 1178,
    ⵠⵠⵠⲆΔⲆᐃ: 1179,
    ⲆⲆΔⲆⲆᐃⲆ: 1180,
    ⵠⲆⵠᐃΔᐃⵠ: 1181,
    ᐃⵠΔⵠΔᐃⲆ: 1182,
    ΔΔΔⵠΔⲆⲆ: 1183,
    ΔⵠⵠⲆΔⵠⵠ: 1184,
    ΔΔⵠΔᐃᐃⲆ: 1185,
    ᐃⵠⵠⲆⲆⵠⵠ: 1186,
    ⲆⵠᐃᐃᐃⲆⲆ: 1187,
    ⵠΔⲆⵠΔᐃᐃ: 1188,
    ⵠΔⵠΔΔⵠᐃ: 1189,
    ⲆⵠⵠⵠⵠΔⲆᐃⲆ: 1190,
    ⵠΔΔⲆⵠⲆΔⲆΔ: 1191,
    ⲆᐃᐃΔᐃᐃΔΔᐃ: 1192,
    ᐃΔⲆⵠⲆⵠⲆᐃⵠ: 1193,
    ᐃⵠᐃΔⲆΔΔ: 1194,
    ⵠⲆᐃⲆᐃⵠⵠ: 1195,
    ⲆⵠⲆΔⲆ: 1196,
    ⵠⲆⵠΔΔΔⲆ: 1197,
    ΔΔΔΔᐃΔⵠ: 1198,
    ᐃⵠⵠⲆⲆΔᐃ: 1199,
    ⵠΔⵠᐃΔⵠⲆ: 1200,
    ᐃᐃⲆⲆᐃΔⲆ: 1201,
    ⵠᐃᐃⵠΔⵠⲆ: 1202,
    ᐃᐃΔᐃΔΔⵠ: 1203,
    ⵠᐃⵠᐃⵠΔⵠ: 1204,
    ⵠᐃⲆΔᐃΔᐃ: 1205,
    ᐃᐃΔᐃⵠⲆᐃ: 1206,
    ᐃⵠΔᐃⵠⲆⵠ: 1207,
    ⲆⲆⲆᐃᐃᐃΔ: 1208,
    ⵠΔᐃᐃΔᐃΔ: 1209,
    ⲆⵠᐃⵠΔᐃⲆ: 1210,
    ΔⵠᐃᐃᐃΔⲆ: 1211,
    ⲆⵠⲆᐃᐃᐃⵠ: 1212,
    ⵠⵠⲆⵠⵠᐃⵠ: 1213,
    ΔⵠᐃΔⲆⲆΔ: 1214,
    ⲆⵠᐃᐃΔᐃΔ: 1215,
    ΔᐃΔⲆⵠⲆΔⵠⵠ: 1216,
    ᐃΔⲆΔⲆⵠᐃ: 1217,
    ⲆΔΔᐃᐃⲆⲆ: 1218,
    ⵠⵠΔᐃⲆΔⲆ: 1219,
    ⲆΔΔΔΔⲆΔ: 1220,
    ⲆΔⲆⵠⲆΔⲆ: 1221,
    ⲆᐃᐃⲆΔΔᐃ: 1222,
    ΔΔⵠⲆⵠᐃⲆ: 1223,
    ᐃⵠᐃᐃᐃⲆⲆ: 1224,
    ΔⲆΔⵠΔΔᐃ: 1225,
    ᐃⲆΔⵠⵠⵠⲆ: 1226,
    ⵠⲆΔⵠΔΔⲆ: 1227,
    ⲆⵠⲆᐃΔⵠⵠ: 1228,
    ᐃⲆⲆⲆΔⲆⲆ: 1229,
    ⵠΔⵠⵠⲆᐃⵠ: 1230,
    ⵠⲆⲆΔⲆⵠΔ: 1231,
    ΔΔⵠⵠⲆⵠΔ: 1232,
    ᐃⵠᐃⵠΔⲆΔ: 1233,
    ΔⲆΔᐃⵠⵠΔ: 1234,
    ⵠᐃⲆⲆⲆⲆⵠ: 1235,
    ⵠΔⲆΔΔⲆⲆ: 1236,
    ⵠⲆΔΔΔΔΔ: 1237,
    ⲆⲆⵠⲆᐃΔᐃ: 1238,
    ⵠⵠΔⵠΔᐃΔ: 1239,
    ⲆⲆⲆΔⵠᐃᐃⵠΔ: 1240,
    ᐃⲆᐃᐃⲆⵠΔ: 1241,
    ⵠᐃⲆΔᐃⲆⵠ: 1242,
    ⲆΔΔΔⵠΔΔ: 1243,
    ᐃⵠΔΔⵠᐃᐃ: 1244,
    ⲆⲆΔᐃᐃⲆⲆ: 1245,
    ⵠⵠⵠᐃΔⲆΔ: 1246,
    ΔⵠⵠᐃⵠⲆᐃ: 1247,
    ⲆⲆⲆᐃⵠⵠⵠ: 1248,
    ᐃΔⵠᐃᐃⲆⵠ: 1249,
    ⵠⲆⵠᐃⲆⵠⲆ: 1250,
    ᐃΔⲆⲆⲆΔᐃ: 1251,
    ᐃΔⲆⵠⵠΔⵠ: 1252,
    ᐃⲆᐃⲆᐃⲆⵠ: 1253,
    ⵠᐃⲆⵠᐃⵠΔ: 1254,
    ΔⵠⲆΔΔⵠΔ: 1255,
    ⲆΔⵠⲆΔⲆⲆ: 1256,
    ⵠΔΔⵠΔⵠΔ: 1257,
    ᐃᐃⲆᐃⵠΔⲆ: 1258,
    ΔⵠᐃΔᐃⲆⵠ: 1259,
    ⲆⵠᐃⲆⲆΔΔ: 1260,
    ⵠⲆΔⵠΔᐃⵠ: 1261,
    ᐃⵠⲆᐃⲆᐃᐃ: 1262,
    ⲆΔΔⲆⵠΔⵠ: 1263,
    ⲆⵠⵠⵠΔⲆΔ: 1264,
    ᐃᐃΔⵠⵠ: 1265,
    ⵠᐃⵠᐃⵠⵠⲆ: 1266,
    ᐃⲆᐃⵠΔⵠΔ: 1267,
    ⵠⲆⵠᐃⵠⵠⲆ: 1268,
    ᐃⲆⵠᐃⲆⲆⵠ: 1269,
    ⵠⲆᐃᐃⵠΔᐃ: 1270,
    ΔΔⲆⵠⵠᐃΔ: 1271,
    ⵠⲆᐃᐃⵠᐃⲆ: 1272,
    ⲆᐃᐃⲆᐃᐃΔ: 1273,
    Δⵠᐃⵠⵠᐃⵠ: 1274,
    ΔⵠⵠᐃⵠⲆΔ: 1275,
    ΔΔᐃΔΔⲆⲆ: 1276,
    ⵠⵠⵠΔⵠᐃᐃ: 1277,
    ⲆⵠⵠΔⲆᐃⲆ: 1278,
    ⲆΔⲆⵠᐃⵠΔ: 1279,
    ⵠΔⲆⵠΔⵠⲆ: 1280,
    ΔΔΔᐃΔΔᐃ: 1281,
    ⲆᐃΔᐃΔΔⵠ: 1282,
    ᐃᐃΔⵠΔΔⲆ: 1283,
    ⵠᐃⲆᐃᐃⵠΔ: 1284,
    ⵠⲆⲆⵠⲆᐃΔ: 1285,
    ⵠᐃⵠᐃⲆⲆⵠ: 1286,
    ⲆᐃᐃᐃᐃΔΔ: 1287,
    ᐃΔᐃⲆᐃΔⵠ: 1288,
    ⵠᐃΔⵠᐃᐃᐃ: 1289,
    ᐃⵠⲆΔᐃᐃΔ: 1290,
    ΔⵠᐃΔΔⲆⵠ: 1291,
    ⵠⵠΔⵠⵠᐃⵠ: 1292,
    ⵠⵠᐃⲆⵠⲆⵠ: 1293,
    ᐃⲆⵠΔΔΔΔ: 1294,
    ΔᐃⲆΔⵠΔⲆ: 1295,
    ⲆⵠΔΔⲆⲆΔ: 1296,
    ᐃⲆᐃᐃⵠⲆᐃ: 1297,
    ᐃⲆⵠᐃⵠΔΔ: 1298,
    ΔⲆΔⲆⵠⲆⲆ: 1299,
    ᐃⲆΔⵠΔΔⵠ: 1300,
    ⲆΔⲆΔᐃⲆᐃ: 1301,
    ΔⲆⵠᐃⲆᐃᐃ: 1302,
    ⵠⲆΔᐃⵠΔᐃ: 1303,
    ⲆᐃⵠⲆⲆΔⵠ: 1304,
    ⲆⲆⲆⵠᐃΔⵠ: 1305,
    ᐃΔⵠΔᐃⲆⵠ: 1306,
    ᐃᐃᐃⵠⵠᐃⲆ: 1307,
    ⲆΔᐃⲆᐃΔⵠ: 1308,
    ΔΔⲆᐃᐃᐃⲆ: 1309,
    ⲆⵠΔΔⵠⲆⲆ: 1310,
    ΔᐃⵠⵠⲆⲆⵠ: 1311,
    ΔⲆⲆⵠⲆΔΔ: 1312,
    ⲆⲆⵠⵠⵠⲆᐃ: 1313,
    ⲆᐃⵠⵠⵠᐃⲆ: 1314,
    ⲆⲆⵠⲆᐃⲆⵠ: 1315,
    ᐃᐃᐃΔᐃᐃΔ: 1316,
    ⲆᐃⵠΔΔΔΔ: 1317,
    ⲆΔᐃⵠΔⲆΔ: 1318,
    ⵠΔⲆᐃⵠⵠᐃ: 1319,
    ᐃⲆΔᐃⵠᐃΔ: 1320,
    ⲆⵠᐃᐃⲆᐃΔ: 1321,
    ⲆⲆΔⲆⵠⵠⲆ: 1322,
    ⲆΔⲆⵠⵠ: 1323,
    ⲆΔⵠΔⲆ: 1324,
    ΔΔⲆᐃⵠⲆΔ: 1325,
    ᐃΔΔⵠΔⲆᐃ: 1326,
    ⵠⲆΔⲆⲆⵠᐃ: 1327,
    ΔⵠⲆΔⲆᐃⵠ: 1328,
    ⲆⵠΔᐃᐃᐃⵠ: 1329,
    ⵠⲆΔᐃⵠᐃΔ: 1330,
    ᐃΔⵠⲆᐃΔⵠ: 1331,
    ⲆΔⲆⲆ: 1332,
    ⲆᐃΔⵠ: 1333,
    ⵠⵠⵠᐃⵠⵠᐃ: 1334,
    ΔᐃΔⲆⵠΔᐃ: 1335,
    ΔΔᐃⵠᐃᐃΔ: 1336,
    ΔΔΔⲆⵠⲆⲆ: 1337,
    ⵠⵠⲆⲆΔΔⲆ: 1338,
    ⲆⵠⵠΔᐃⲆΔ: 1339,
    ⲆᐃⵠⲆⲆⵠⵠ: 1340,
    ᐃⵠⲆΔⲆ: 1341,
    ᐃΔᐃᐃⲆⵠᐃ: 1342,
    ΔΔᐃΔᐃ: 1343,
    ᐃⵠⲆⵠΔⲆⵠ: 1344,
    ⵠᐃΔᐃᐃ: 1345,
    ⵠⵠⲆΔⲆⵠΔ: 1346,
    ΔⲆⵠⵠⲆ: 1347,
    ⲆⵠΔᐃⲆΔᐃ: 1348,
    ΔⲆΔⲆⲆᐃⵠ: 1349,
    ᐃⵠⵠΔⵠ: 1350,
    ⵠᐃⲆⵠⵠⵠΔ: 1351,
    ⲆⵠΔΔⲆΔΔ: 1352,
    ⲆⵠⵠⲆⲆⵠⲆ: 1353,
    ΔⲆⵠᐃᐃⵠᐃ: 1354,
    ᐃⵠΔⵠΔⲆΔ: 1355,
    ⵠⵠⵠᐃⵠΔΔ: 1356,
    ⵠΔᐃΔⵠⵠⵠ: 1357,
    ⲆΔΔⲆⵠⲆⲆ: 1358,
    ᐃΔⵠᐃΔⵠⲆ: 1359,
    Ⲇᐃⵠᐃᐃ: 1360,
    ⵠᐃᐃΔΔᐃⲆ: 1361,
    ᐃΔⵠΔⵠ: 1362,
    ΔⲆⵠΔⵠΔⵠ: 1363,
    ⵠᐃⲆᐃⵠⵠⵠ: 1364,
    ⵠΔᐃΔᐃΔᐃ: 1365,
    ᐃⲆΔΔⵠΔⵠ: 1366,
    ⵠΔᐃⲆΔᐃᐃ: 1367,
    ⲆⵠᐃⲆⵠⲆᐃ: 1368,
    ᐃᐃᐃΔΔΔᐃᐃᐃ: 1369,
    ⲆΔⲆⵠΔΔⵠ: 1370,
    ᐃΔᐃᐃⵠᐃⲆ: 1371,
    ⲆᐃΔⵠᐃⵠⵠⵠⵠ: 1372,
    ⲆⵠᐃⲆᐃᐃΔ: 1373,
    ⵠΔⲆᐃᐃΔⵠ: 1374,
    ᐃⵠⵠᐃⵠⵠⲆ: 1375,
    ⲆΔᐃΔΔᐃᐃ: 1376,
    Δⵠᐃᐃᐃ: 1377,
    ΔᐃΔⲆⲆΔⵠ: 1378,
    ΔΔⵠⵠⲆⲆΔ: 1379,
    ΔᐃᐃⲆᐃᐃⵠ: 1380,
    ⲆΔⲆⲆⲆⵠΔ: 1381,
    ᐃⲆⲆⵠᐃⲆⲆ: 1382,
    ⲆⵠᐃΔΔⵠⵠ: 1383,
    ⵠⵠⲆⲆⵠᐃΔ: 1384,
    ⵠⲆᐃⵠⲆⲆᐃ: 1385,
    ⵠⲆΔᐃᐃⵠⵠ: 1386,
    ᐃⲆᐃⵠΔᐃⵠ: 1387,
    ⵠⲆᐃⵠⲆⵠⲆ: 1388,
    ΔⵠΔΔΔΔΔ: 1389,
    ⲆΔⵠⲆᐃΔⵠ: 1390,
    ᐃⵠᐃᐃⵠᐃΔ: 1391,
    ΔⲆΔⵠΔ: 1392,
    ⲆΔᐃᐃᐃᐃᐃ: 1393,
    ᐃⲆᐃΔⵠΔⵠ: 1394,
    ⵠⵠΔΔⲆΔⲆ: 1395,
    ⲆⲆΔⲆΔΔΔ: 1396,
    ⵠⵠⲆᐃᐃΔⵠ: 1397,
    ΔΔΔᐃⲆⲆⵠ: 1398,
    ᐃΔΔⵠⵠⲆΔ: 1399,
    ⵠΔᐃⵠⲆⲆⵠ: 1400,
    ΔᐃΔᐃⲆᐃᐃ: 1401,
    ⵠⲆΔᐃᐃⵠΔ: 1402,
    ΔᐃⲆⵠⵠⵠⲆ: 1403,
    ᐃⵠΔⲆⲆΔΔ: 1404,
    ΔⲆⵠᐃⵠᐃⵠ: 1405,
    ᐃΔⲆⵠᐃᐃⵠ: 1406,
    Ⲇᐃⵠᐃⵠ: 1407,
    ⵠΔᐃⲆⵠΔⵠ: 1408,
    ⵠⵠⵠⵠΔΔΔ: 1409,
    ᐃᐃᐃᐃᐃⲆΔ: 1410,
    ⲆⵠΔⵠΔⲆⲆ: 1411,
    ⵠᐃᐃⵠᐃⲆⵠ: 1412,
    ΔᐃᐃⲆⵠⲆᐃ: 1413,
    ᐃΔⵠᐃᐃⲆᐃ: 1414,
    ᐃⲆΔⵠΔᐃⵠ: 1415,
    ΔᐃΔΔᐃⲆⲆ: 1416,
    ΔⵠⲆᐃⵠᐃΔ: 1417,
    ᐃᐃΔⵠⲆⵠᐃ: 1418,
    ⲆΔⵠᐃᐃⲆⲆ: 1419,
    ᐃᐃⵠΔᐃΔΔ: 1420,
    ΔⲆΔⲆΔⲆⲆ: 1421,
    ΔⲆᐃΔⵠⵠᐃ: 1422,
    ⲆⲆⲆᐃⲆᐃᐃ: 1423,
    ᐃΔᐃⵠⵠΔΔ: 1424,
    ΔⲆⲆⲆⲆᐃⲆ: 1425,
    ΔΔⵠⵠᐃᐃᐃ: 1426,
    ᐃΔᐃΔⵠΔΔ: 1427,
    ⵠΔΔⲆⲆ: 1428,
    ⲆⲆΔᐃⵠⵠⵠ: 1429,
    ΔⲆⲆᐃᐃΔΔ: 1430,
    ⵠⲆᐃⵠΔΔⵠ: 1431,
    ΔᐃΔΔⵠᐃⲆ: 1432,
    ⵠᐃⲆᐃⲆᐃⲆ: 1433,
    ⲆⲆΔᐃⲆΔᐃ: 1434,
    ⲆΔᐃᐃⵠΔⵠ: 1435,
    ⲆΔⵠᐃⲆⵠΔ: 1436,
    ΔⲆⵠᐃΔᐃΔ: 1437,
    ⵠΔΔᐃⵠⲆΔ: 1438,
    ⲆΔΔΔⵠᐃⵠ: 1439,
    ΔⵠⲆⲆⵠⲆⲆ: 1440,
    ⲆᐃⵠΔⵠⵠⲆ: 1441,
    ⵠⵠᐃΔⵠΔΔ: 1442,
    ⵠᐃᐃᐃⲆⵠⵠ: 1443,
    ⵠᐃΔᐃⵠⲆᐃ: 1444,
    ⲆᐃᐃΔⲆΔⲆ: 1445,
    ᐃΔΔⲆⵠ: 1446,
    ⲆΔⲆᐃⵠᐃΔ: 1447,
    ⲆⲆⵠⵠⵠⵠⵠ: 1448,
    ⵠⲆⵠΔΔᐃⵠ: 1449,
    ᐃⵠⵠᐃⵠΔⲆ: 1450,
    ⲆΔⲆᐃᐃΔⵠ: 1451,
    ΔᐃⲆⲆᐃᐃᐃ: 1452,
    ᐃᐃⲆⵠΔᐃΔ: 1453,
    ⲆᐃΔΔⵠᐃᐃ: 1454,
    ⲆᐃΔⵠᐃΔᐃ: 1455,
    ΔⵠⵠⲆΔⵠᐃ: 1456,
    ᐃⲆΔⵠΔΔΔ: 1457,
    ᐃᐃⲆⵠΔⵠⲆ: 1458,
    ΔⵠΔΔⲆⲆᐃ: 1459,
    ⲆⲆⲆΔⵠⲆΔ: 1460,
    ⵠⵠᐃᐃΔⲆᐃ: 1461,
    ᐃᐃⵠⵠⲆⵠⵠ: 1462,
    ⵠⵠⵠⲆⵠ: 1463,
    ⲆⵠᐃΔᐃⲆΔ: 1464,
    ⲆⲆⲆⲆΔᐃⲆ: 1465,
    ⲆⲆⲆⵠⲆⲆⲆ: 1466,
    ΔⵠΔΔⲆΔⲆ: 1467,
    ᐃᐃΔⲆᐃⵠᐃ: 1468,
    ⵠΔΔᐃΔⲆΔ: 1469,
    ΔⲆΔΔΔⵠᐃ: 1470,
    ᐃᐃᐃⲆΔⵠΔ: 1471,
    ⵠⵠⵠⲆΔⵠΔ: 1472,
    ᐃᐃΔⲆᐃⲆⲆ: 1473,
    ᐃⲆⲆⲆⲆⵠⵠ: 1474,
    ΔΔΔΔⲆΔⲆ: 1475,
    ᐃⲆᐃⵠⲆⲆΔ: 1476,
    ⵠᐃᐃΔΔⲆⵠ: ["#E9CF96", "#144940"],
    ᐃΔᐃΔΔⲆΔ: 1477,
    ⵠⲆⲆΔⲆΔΔ: 1478,
    ᐃⵠⵠⲆⲆⵠⲆ: 1479,
    ΔΔᐃⲆⲆⵠⲆ: 1480,
    ⲆΔᐃΔΔΔⲆ: 1481,
    ⲆΔΔⵠⲆᐃᐃ: 1482,
    ⲆΔᐃΔᐃΔᐃ: 1483,
    ΔⲆΔΔⲆ: 1484,
    ΔⵠⲆΔᐃᐃⵠ: 1485,
    ⲆⵠⵠΔᐃⵠΔ: 1486,
    ΔⲆⵠⵠⲆᐃᐃ: 1487,
    ⵠᐃΔΔᐃⵠᐃ: 1488,
    ⵠΔΔⵠⵠΔΔ: 1489,
    ᐃⲆΔΔΔⲆⲆ: 1490,
    ᐃΔΔⵠⵠⲆᐃ: 1491,
    ⵠⵠⲆⲆⲆᐃⲆ: 1492,
    ⵠⵠⵠⲆᐃⲆᐃ: 1493,
    ΔᐃΔᐃΔΔⵠ: 1494,
    ⲆΔΔⲆᐃⲆⵠ: 1495,
    ⵠΔⲆⵠⲆΔᐃ: 1496,
    ΔⲆⲆⵠⵠⵠᐃ: 1497,
    ⲆΔⵠᐃΔⵠΔ: 1498,
    ⵠΔΔᐃⵠⵠΔ: 1499,
    ⵠⵠᐃᐃⲆᐃⲆ: 1500,
    ᐃⵠⵠⲆᐃⵠⲆ: 1501,
    ᐃⵠΔⵠⵠⵠⲆ: 1502,
    ⲆᐃᐃᐃΔᐃᐃ: 1503,
    ⵠⲆⵠΔΔΔᐃ: 1504,
    ΔⵠⲆΔⲆⵠᐃ: 1505,
    ⵠⲆΔⲆᐃⵠⵠ: 1506,
    ⵠΔⲆΔⲆΔⵠ: 1507,
    ᐃᐃⲆⲆΔᐃΔ: 1508,
    ᐃⲆΔᐃⲆⲆⲆ: 1509,
    ⵠⲆⲆΔⵠⲆΔ: 1510,
    ΔᐃⲆⲆᐃⲆᐃ: 1511,
    ᐃᐃΔⵠᐃⵠᐃ: 1512,
    ⵠⲆΔⵠᐃᐃⲆ: 1513,
    ΔΔᐃΔⲆΔΔ: 1514,
    ΔᐃⲆⲆⲆⲆⲆ: 1515,
    ⲆΔᐃⲆᐃΔⲆ: 1516,
    ᐃᐃΔᐃᐃⲆΔ: 1517,
    ᐃⵠΔΔⵠᐃΔ: 1518,
    ᐃⲆΔᐃᐃⲆᐃ: 1519,
    ⵠⵠΔⵠⲆⵠΔ: 1520,
    ᐃΔⲆⲆΔⵠⲆ: 1521,
    ⵠⲆⲆⵠᐃᐃΔ: 1522,
    ΔⵠΔᐃⲆΔⵠ: 1523,
    ⵠⲆΔᐃⲆⲆᐃ: 1524,
    ⵠᐃⵠᐃᐃⵠᐃ: 1525,
    ΔᐃΔᐃΔᐃⵠ: 1526,
    ⵠⵠⲆΔⲆⵠⲆ: 1527,
    ᐃᐃⲆᐃΔⵠⵠ: 1528,
    ⲆⲆⵠⵠⵠⵠⲆ: 1529,
    ΔΔⵠΔᐃΔΔ: 1530,
    ᐃᐃⵠⵠⲆᐃΔ: 1531,
    ΔⵠⵠⵠΔΔΔ: 1532,
    ⵠⲆᐃΔⲆⵠⲆ: 1533,
    ⵠΔⵠᐃⵠΔⵠ: 1534,
    ⵠᐃⲆΔⵠΔⲆ: 1535,
    ᐃⵠⲆⲆⵠⲆⲆ: 1536,
    ΔⲆᐃⵠⲆⲆⲆ: 1537,
    ᐃⲆᐃΔⵠΔΔ: 1538,
    ⵠⵠΔⲆⲆⵠⲆ: 1539,
    ⲆⲆⵠⲆΔⲆᐃ: 1540,
    ⲆΔⲆⵠΔⲆᐃ: 1541,
    ⲆⲆΔⲆᐃᐃᐃ: 1542,
    ᐃⵠⵠⲆᐃᐃᐃ: 1543,
    ᐃᐃⵠᐃⵠΔⲆ: 1544,
    ᐃᐃⲆΔΔⲆᐃ: 1545,
    ΔᐃᐃᐃⵠⲆⵠ: 1546,
    ᐃΔᐃᐃⲆⵠⲆ: 1547,
    ⲆⲆᐃᐃΔⵠⵠ: 1548,
    ΔⲆⲆⲆⵠΔⲆ: 1549,
    ⵠΔⵠᐃᐃⲆⵠ: 1550,
    ⵠᐃᐃΔⵠᐃⵠ: 1551,
    ΔⲆⲆⲆΔⵠᐃ: 1552,
    ΔⲆΔΔⵠⲆᐃ: 1553,
    ΔⵠⲆⵠΔⵠᐃ: 1554,
    ⵠᐃᐃⵠΔⵠᐃ: 1555,
    ᐃⵠⲆΔΔΔⵠ: 1556,
    ΔⵠᐃⲆⲆⵠΔ: 1557,
    ᐃΔΔⵠⲆⲆᐃ: 1558,
    ᐃΔⲆᐃⵠⵠᐃ: 1559,
    ⲆΔᐃᐃⵠᐃᐃ: 1560,
    ᐃⵠΔⵠⲆⲆΔ: 1561,
    ΔⲆᐃΔⵠⵠΔ: 1562,
    ⵠΔᐃᐃⲆᐃΔ: 1563,
    ⵠᐃⵠⲆⲆⲆᐃ: 1564,
    ΔΔΔᐃⲆᐃᐃ: 1565,
    ⵠΔⵠΔⲆⲆΔ: 1566,
    ᐃⵠⵠᐃⵠΔᐃ: 1567,
    ᐃΔΔᐃⲆⵠΔ: 1568,
    ⵠⲆⲆΔΔⲆⵠ: 1569,
    ⵠⵠΔⲆᐃⵠⲆ: 1570,
    ⲆᐃᐃⲆΔⵠΔ: 1571,
    ⲆᐃⲆⲆⵠⵠⲆ: 1572,
    ΔⲆΔᐃΔᐃᐃ: 1573,
    ᐃᐃᐃⵠΔⲆᐃ: 1574,
    ΔᐃᐃΔⲆᐃΔ: 1575,
    ΔⵠᐃⲆⲆⲆΔ: 1576,
    ΔᐃᐃⵠⲆΔΔ: 1577,
    ⲆΔᐃΔΔⵠⲆ: 1578,
    ⲆⵠᐃⵠᐃΔᐃ: 1579,
    ΔⲆΔᐃⵠⲆᐃ: 1580,
    ΔΔΔⵠᐃΔΔ: 1581,
    ⵠⲆᐃⲆⵠⲆᐃ: 1582,
    ᐃⲆᐃΔΔᐃᐃ: 1583,
    ⵠᐃΔᐃⲆᐃᐃ: 1584,
    ᐃΔᐃᐃᐃᐃⲆ: 1585,
    ⵠⵠᐃΔⵠΔⲆ: 1586,
    ⵠᐃᐃᐃⵠⲆⵠ: 1587,
    ΔΔᐃΔᐃᐃⵠ: 1588,
    ᐃΔΔⲆΔᐃΔ: 1589,
    ⵠᐃᐃⲆᐃⵠⵠ: 1590,
    ⲆᐃΔⲆᐃΔᐃ: 1591,
    ᐃⵠⲆⲆΔⲆᐃ: 1592,
    ᐃⵠⲆᐃⲆΔⵠ: 1593,
    ΔⲆΔⵠᐃⲆΔ: 1594,
    ⲆᐃⵠΔᐃⵠⵠ: 1595,
    ⲆᐃᐃᐃⲆᐃᐃ: 1596,
    ⵠᐃΔᐃⵠΔΔ: 1597,
    ΔⵠΔⵠⲆⲆⵠ: 1598,
    ⵠⲆΔⲆⵠⲆⵠ: 1599,
    ᐃᐃΔΔⵠⲆⵠ: 1600,
    ΔΔⵠⵠᐃⲆⵠ: 1601,
    ⲆⲆΔΔⲆⲆⵠ: 1602,
    ⲆⲆᐃⲆⲆⲆᐃ: 1603,
    ΔⵠᐃⲆᐃΔⵠ: 1604,
    ΔⲆᐃⲆⵠⲆⵠ: 1605,
    ΔⵠⲆΔⵠⲆⲆ: 1606,
    ⲆᐃⲆⵠΔⲆⵠ: 1607,
    ΔΔᐃΔⵠΔⲆ: 1608,
    ΔΔΔΔᐃ: 1609,
    ⲆⵠᐃΔᐃⲆⵠ: 1610,
    ΔΔΔΔⵠ: 1611,
    ΔᐃⵠⲆⵠᐃⵠ: 1612,
    ᐃⲆⵠⵠⵠⲆᐃ: 1613,
    ΔⲆⵠⵠⲆⲆⲆ: 1614,
    ⵠⵠᐃΔⲆΔⲆ: 1615,
    ⲆᐃⵠⲆΔⵠⵠ: 1616,
    ᐃᐃⲆⵠᐃΔⲆ: 1617,
    ⵠᐃⵠᐃⵠⵠⵠ: 1618,
    ⵠΔⵠⵠΔⵠΔ: 1619,
    ᐃⵠⵠⵠⲆᐃⲆ: 1620,
    ⲆⵠⵠΔΔⲆⵠ: 1621,
    ᐃᐃΔⵠⲆⲆᐃ: 1622,
    ᐃΔᐃⵠⵠΔᐃ: 1623,
    ⵠⵠᐃΔᐃᐃᐃ: 1624,
    ⵠⲆⵠᐃᐃⵠΔ: 1625,
    ΔᐃΔᐃᐃⲆⲆ: 1626,
    ΔⲆⲆΔΔⲆᐃ: 1627,
    ᐃᐃᐃΔΔΔⲆ: 1628,
    ΔⲆᐃⵠΔΔⲆ: 1629,
    ⲆΔⲆᐃⲆΔⲆ: 1630,
    ᐃⵠⵠΔⲆⵠⲆ: 1631,
    ⲆⵠⵠᐃᐃΔΔ: 1632,
    ⲆᐃⵠΔⲆΔᐃ: 1633,
    ΔΔⵠⲆⵠΔᐃ: 1634,
    ᐃΔⲆⲆΔᐃⲆ: 1635,
    ⵠΔⵠⲆΔⵠᐃ: 1636,
    ΔΔⲆⲆΔΔᐃ: 1637,
    ᐃⲆⵠΔⲆⲆΔ: 1638,
    ⵠⲆⵠᐃⲆⵠⵠ: 1639,
    ΔΔⲆᐃΔΔⵠ: 1640,
    ⲆΔΔⲆΔΔΔ: 1641,
    ⵠⵠⲆⲆⲆⵠⵠ: 1642,
    ᐃⵠᐃⲆᐃᐃᐃ: 1643,
    ⵠᐃᐃⲆⵠᐃᐃ: 1644,
    Δᐃᐃᐃⵠⵠⵠ: 1645,
    ⲆᐃΔⲆⲆΔΔ: 1646,
    ⲆⵠⵠⵠΔΔᐃ: 1647,
    ⵠᐃᐃᐃⵠΔᐃ: 1648,
    ΔᐃΔⲆᐃⲆⵠ: 1649,
    ⲆⲆⲆᐃΔᐃΔ: 1650,
    ⲆᐃⲆΔᐃⵠⲆ: 1651,
    ⵠΔⲆΔⲆⲆΔ: 1652,
    ΔⵠΔΔΔⲆᐃ: 1653,
    ᐃⲆΔᐃⲆⵠⵠ: 1654,
    ΔⲆΔⲆⲆΔⲆ: 1655,
    ΔΔⲆⲆⲆᐃⵠ: 1656,
    ᐃΔΔᐃΔΔⵠ: 1657,
    ⵠⲆⲆᐃΔΔⲆ: 1658,
    ΔΔⵠⵠᐃᐃΔ: 1659,
    ⵠⲆⲆⲆⵠⵠΔ: 1660,
    ⵠᐃᐃᐃⵠⵠⵠ: 1661,
    ΔⵠᐃⲆᐃΔΔ: 1662,
    ⵠᐃΔⵠⲆⲆⵠ: 1663,
    ΔⵠΔΔⲆΔⵠ: 1664,
    ⲆᐃΔΔΔⵠⵠ: 1665,
    ΔⲆⲆᐃⵠⲆⲆ: 1666,
    ΔᐃⲆΔⵠΔᐃ: 1667,
    ⲆᐃⲆⵠΔⲆⲆ: 1668,
    ⵠᐃΔᐃⵠⲆⲆ: 1669,
    ⲆᐃᐃⲆⲆΔᐃ: 1670,
    Ⲇᐃⵠⵠⵠᐃᐃ: 1671,
    ⲆᐃΔⲆⵠⲆΔ: 1672,
    ᐃᐃⵠᐃⲆⲆΔ: 1673,
    ⲆᐃⵠⵠⲆⵠᐃ: 1674,
    ⲆⵠⲆⵠⲆⲆᐃ: 1675,
    ⵠΔⵠⵠⲆᐃΔ: 1676,
    ΔⲆⵠΔᐃᐃⵠ: 1677,
    ΔⵠⲆⲆⵠⲆⵠ: 1678,
    ⲆΔⵠⲆᐃⲆⵠ: 1679,
    ᐃⲆⲆᐃΔᐃⲆ: 1680,
    ⵠⲆⵠᐃΔΔΔ: 1681,
    ⵠⵠⲆᐃΔΔᐃ: 1682,
    ⵠᐃⵠᐃᐃΔΔ: 1683,
    ΔᐃΔᐃᐃⵠΔ: 1684,
    ᐃΔᐃⲆᐃΔᐃ: 1685,
    ⲆⲆⵠⲆⵠⵠⲆ: 1686,
    ⵠΔⵠⵠⵠⵠΔ: 1687,
    ᐃⵠⲆᐃⵠᐃⲆ: 1688,
    ΔᐃᐃᐃⵠⵠⲆ: 1689,
    ⵠΔⵠΔⵠᐃΔ: 1690,
    ᐃⵠᐃⵠⲆⲆⵠ: 1691,
    ᐃΔᐃⲆᐃⵠᐃ: 1692,
    ⵠΔⵠⵠⵠⵠⲆ: 1693,
    ᐃⵠⵠΔⲆⲆΔ: 1694,
    ΔΔⵠⵠΔⵠΔ: 1695,
    ⲆΔⵠΔΔⲆᐃ: 1696,
    ᐃᐃⲆⵠΔᐃᐃ: 1697,
    ΔΔᐃΔⵠⲆⲆ: 1698,
    ⲆᐃⲆᐃⵠⲆΔ: 1699,
    ⲆᐃⵠⵠᐃⲆᐃ: 1700,
    ⲆΔᐃΔΔⲆᐃ: 1701,
    ⵠΔⵠⲆΔⲆΔ: 1702,
    ⲆⵠᐃᐃⵠΔΔ: 1703,
    ΔΔⲆᐃⵠᐃᐃ: 1704,
    ΔΔⵠⵠⵠⲆΔ: 1705,
    ᐃⲆⵠΔⲆΔⵠ: 1706,
    ΔⲆΔⵠΔᐃⲆ: 1707,
    ΔⲆⵠⵠⲆΔΔ: 1708,
    ᐃⵠᐃᐃᐃⵠⵠ: 1709,
    ΔⵠΔΔⵠⵠΔ: 1710,
    ⵠΔΔⵠⲆⵠᐃ: 1711,
    ΔⲆⲆⵠΔᐃⲆ: 1712,
    ⲆⵠⲆⵠⲆᐃⵠ: 1713,
    ΔᐃΔⵠᐃⵠⲆ: 1714,
    ⲆᐃᐃΔΔⲆⵠ: 1715,
    ᐃⵠⲆᐃⲆⲆᐃ: 1716,
    ⲆΔᐃⲆⵠΔⵠ: 1717,
    ΔΔΔΔΔⵠⲆ: 1718,
    ΔⵠⲆΔᐃᐃⵠ: 1719,
    ΔⲆΔΔⲆ: 1720,
    ΔΔᐃΔⲆⲆⲆ: 1721,
    ⵠⲆᐃᐃⲆ: 1722,
    ⲆΔⵠᐃⵠΔⵠ: 1723,
    ΔΔⲆΔᐃ: 1724,
    ⲆΔᐃⵠⲆᐃⵠ: 1725,
    ⵠⵠⲆᐃⵠ: 1726,
    ΔΔⲆᐃⲆΔⲆ: 1727,
    ᐃⲆⵠᐃΔ: 1728,
    ⲆΔⵠᐃᐃᐃᐃ: 1729,
    ⲆΔⵠΔΔ: 1730,
    ⵠⵠᐃΔΔⲆⲆ: 1731,
    ⵠᐃⵠⲆΔ: 1732,
    ᐃⲆⲆᐃᐃⵠᐃ: 1733,
    ⵠⲆᐃΔΔ: 1734,
    ⲆΔΔΔⵠΔⲆ: 1735,
    ⵠᐃΔΔᐃ: 1736,
    ᐃᐃᐃᐃΔᐃⵠ: 1737,
    ⵠᐃⵠⵠΔΔᐃ: 1738,
    ΔⲆⵠΔΔⵠᐃ: 1739,
    ᐃᐃΔⵠⵠⲆⵠ: 1740,
    ⲆⵠⲆⵠΔⵠⲆ: 1741,
    ⵠⵠⵠΔᐃΔⵠ: 1742,
    ⲆⲆⵠⲆΔⵠΔ: 1743,
    ᐃΔⲆⲆⵠⲆⵠ: 1744,
    ᐃⵠΔᐃⵠΔΔ: 1745,
    ⲆᐃⲆΔⲆᐃⲆ: 1746,
    ΔⲆⵠᐃΔ: 1747,
    ΔΔⲆᐃΔᐃⲆ: 1748,
    ⵠⲆᐃΔⲆⲆⲆ: 1749,
    ⲆᐃⲆΔⲆ: 1750,
    ⲆᐃΔⵠⵠ: 1751,
    ᐃⵠᐃΔΔΔⲆ: 1752,
    ⲆᐃᐃΔⵠⵠΔ: 1753,
    ⵠⲆᐃΔⲆ: 1754,
    Δⵠⵠⵠⵠ: 1755,
    ᐃⲆᐃᐃᐃ: 1756,
    ⲆⲆᐃⵠⲆⵠᐃ: 1757,
    ΔⲆⵠΔΔⵠᐃ: 1758,
    ΔᐃⲆᐃⵠ: 1759
  };
  v623 = 0;
  var v625 = {
    ᐃⵠΔᐃᐃ: 0,
    ⲆΔⵠᐃⲆ: 1,
    ⵠᐃΔᐃΔ: 2,
    ᐃⲆⲆᐃᐃ: 3,
    ⲆⵠⲆⵠⵠ: 4,
    ⲆΔⵠᐃᐃ: 5,
    ᐃⲆΔⵠⲆ: 6,
    ⵠⲆⲆΔⲆ: 7,
    ⵠᐃⵠⲆⵠ: 8,
    ΔΔᐃⲆⵠ: 9,
    ⵠⵠⵠᐃΔ: 10,
    ΔⵠⵠⵠΔ: 11,
    ⲆⲆⵠⲆⲆ: 12,
    ⵠΔΔΔΔ: 13,
    ᐃⵠᐃⲆⲆ: 14,
    ⲆᐃⵠΔⲆ: 15,
    ⲆⵠⲆᐃᐃ: 16,
    ᐃΔΔⲆΔ: 17,
    ⵠΔⵠΔᐃ: 18,
    ⵠⲆⲆⲆᐃ: 19,
    ⲆⲆΔΔⵠ: 20,
    ᐃⵠΔΔΔ: 21,
    Δⵠⵠⵠᐃ: 22,
    ᐃⲆⵠΔᐃ: 23,
    ⲆᐃⵠⲆⵠ: 24,
    ᐃⲆᐃΔⵠ: 25,
    ⲆⵠᐃΔΔ: 26,
    ⵠⲆΔᐃΔ: 27,
    ᐃΔⲆⵠΔ: 28,
    ⲆⲆⵠⵠⵠ: 29,
    ᐃⲆᐃⲆΔ: 30,
    ΔⲆⵠΔΔ: 31,
    ᐃΔΔΔⵠ: 32,
    ⲆⵠⲆⲆΔ: 33,
    ⵠⵠΔᐃⵠ: 34,
    ΔᐃΔΔⵠ: 35,
    ⲆᐃΔΔᐃ: 36,
    ΔⵠΔΔⲆ: 37,
    ᐃⲆΔⲆⲆ: 38,
    ᐃⵠΔΔⲆ: 39,
    ᐃⲆⵠᐃⵠ: 40,
    Ⲇⵠⵠᐃⵠ: 41,
    ΔⵠΔⵠⲆ: 42,
    Δᐃᐃᐃᐃ: 43,
    ΔⵠᐃΔᐃ: 44,
    ΔⵠⲆΔᐃ: 45,
    ⵠΔⵠⲆⵠ: 46,
    ⵠΔΔⵠ: 47,
    ⲆᐃΔΔⵠ: 48,
    ΔᐃΔⵠⵠ: 49,
    ᐃⲆΔΔᐃ: 50,
    ᐃΔⲆⵠⵠ: 51,
    ᐃⲆΔᐃⲆ: 52,
    ᐃΔᐃⲆⲆ: 53,
    ΔⲆᐃᐃΔ: 54,
    ΔⲆᐃⲆᐃ: 55,
    ΔᐃⲆⲆᐃ: 56,
    ΔΔΔⵠᐃ: 57,
    ⲆⵠᐃⲆⲆ: 58,
    ⲆⲆΔᐃᐃ: 59,
    ⵠᐃⵠᐃⲆ: 60,
    ⵠⵠᐃⲆΔ: 61,
    ⲆⲆⲆΔᐃ: 62,
    ΔᐃᐃⵠΔ: 63,
    ⲆⵠᐃΔⲆ: 64,
    ᐃⵠⲆᐃᐃ: 65,
    ΔᐃⲆⲆⲆ: 66,
    ᐃΔᐃⲆᐃ: 67,
    ΔⲆΔⵠⲆ: 68,
    ᐃᐃΔⵠΔ: 69,
    ᐃⵠⲆᐃⲆ: 70,
    ΔᐃΔⵠᐃ: 71,
    ΔΔᐃⵠⲆ: 72,
    ⵠᐃⲆⲆΔ: 73,
    ΔᐃᐃⲆΔ: 74,
    ᐃᐃⵠⲆⵠ: 75,
    ΔⲆΔΔΔ: 76,
    ⲆᐃⲆⵠΔ: 77,
    ⲆΔΔᐃⵠ: 78,
    ΔⵠⵠΔΔ: 79,
    ⲆⲆⲆᐃΔ: 80,
    ΔⲆⵠⲆΔ: 81,
    ΔΔⲆΔΔ: 82,
    ⵠⵠⵠⲆⲆ: 83,
    ⵠⲆᐃⲆⵠ: 84,
    ⵠⵠⵠΔⵠ: 85,
    ᐃΔᐃⵠΔ: 86,
    ⲆᐃⲆⵠⲆ: 87,
    ΔΔᐃΔⵠ: 88,
    ⲆⵠᐃᐃΔ: 89,
    ᐃᐃΔᐃΔ: 90,
    ⲆᐃⲆⲆΔ: 91,
    ⲆⵠᐃⲆᐃ: 92,
    ᐃⵠᐃᐃⵠ: 93,
    ᐃᐃΔⵠᐃ: 94,
    ᐃΔΔⵠⲆ: 95,
    ⵠᐃΔⵠⲆ: 96,
    ΔⵠᐃⲆᐃ: 97,
    ⵠΔᐃⲆΔ: 98,
    ᐃΔⵠΔΔ: 99,
    ⵠᐃΔᐃⲆ: 100,
    ΔⲆᐃᐃⵠ: 101,
    ⲆⲆᐃⲆⲆ: 102,
    ᐃⲆⲆⲆΔ: 103,
    ΔⵠⲆⲆᐃ: 104,
    ⵠⵠΔⲆⵠ: 105,
    ΔⲆᐃⲆⵠ: 106,
    ⵠᐃᐃᐃⵠ: 107,
    ⵠⲆᐃΔᐃ: 108,
    ⵠΔⵠⲆΔ: 109,
    ⲆΔⵠΔⵠ: 110,
    ⲆⵠᐃⲆⵠ: 111,
    ᐃⵠᐃⵠⵠ: 112,
    ΔΔⵠⲆᐃ: 113,
    ⲆΔⲆⲆΔ: 114,
    ⵠⵠᐃᐃⲆ: 115,
    ⵠΔⲆⲆⲆ: 116,
    ΔⵠΔⲆΔ: 117,
    ⲆᐃᐃΔᐃ: 118,
    ⵠᐃᐃⵠⵠ: 119,
    ⲆᐃⵠⵠⲆ: 120,
    ᐃⵠⵠⵠΔ: 121,
    ᐃⲆⲆᐃⵠ: 122,
    ΔⲆᐃᐃⲆ: 123,
    ᐃᐃⵠᐃⲆ: 124,
    ⵠⲆΔᐃⲆ: 125,
    ᐃⵠᐃⵠᐃ: 126,
    ᐃⵠΔᐃⵠ: 127,
    ᐃᐃⵠⵠⲆ: 128,
    ⲆᐃⲆΔⵠ: 129,
    ⲆⲆΔᐃⲆ: 130,
    ⲆΔⵠⲆΔ: 131,
    ⲆⲆᐃΔⲆ: 132,
    ᐃⵠΔⲆᐃ: 133,
    ⵠⲆⵠΔⲆ: 134,
    ΔΔⵠᐃⲆ: 135,
    ᐃΔᐃⲆⵠ: 136,
    ⲆⲆⲆⵠΔ: 137,
    ᐃΔⵠⲆᐃ: 138,
    ᐃΔⵠⵠⵠ: 139,
    ⲆᐃΔⲆᐃ: 140,
    ᐃᐃⲆⲆⵠ: 141,
    ⵠΔⲆᐃⲆ: 142,
    Δⵠᐃᐃⵠ: 143,
    ΔᐃᐃⲆᐃ: 144,
    ⲆⵠᐃᐃⲆ: 145,
    ᐃⲆᐃⲆᐃ: 146,
    ᐃᐃΔΔⵠ: 147,
    ⲆⵠΔΔᐃ: 148,
    ΔᐃᐃΔⲆ: 149,
    ⲆᐃΔΔΔ: 150,
    ⵠⵠᐃⲆᐃ: 151,
    ⲆⲆⵠⵠᐃ: 152,
    ΔⵠⲆΔΔ: 153,
    ΔⵠⲆᐃⵠ: 154,
    ⲆⲆⲆⵠᐃ: 155,
    ΔᐃΔⲆᐃ: 156,
    ⲆⲆⲆⵠⵠ: 157,
    ΔΔⲆⵠᐃ: 158,
    ΔᐃⵠΔΔ: 159,
    ᐃᐃᐃΔΔ: 160,
    ⵠᐃⲆⲆⵠ: 161,
    ΔΔΔⵠⵠ: 162,
    ᐃⲆⵠⵠΔ: 163,
    ᐃᐃᐃⲆⲆ: 164,
    ⵠΔⵠⵠⵠ: 165,
    ᐃⵠᐃΔⵠ: 166,
    ⲆⵠᐃΔⵠ: 167,
    Ⲇᐃᐃⵠᐃ: 168,
    ⲆⵠΔⵠᐃ: 169,
    ⵠⵠⵠΔΔ: 170,
    ᐃᐃⲆⲆⲆ: 171,
    ΔΔⵠⲆⵠ: 172,
    ΔΔⵠΔᐃ: 173,
    ᐃⲆΔΔⲆ: 174,
    ᐃᐃΔΔΔ: 175,
    ᐃᐃΔᐃⲆ: 176,
    ⲆⵠⲆⵠᐃ: 177,
    ᐃΔⲆΔⵠ: 178,
    ⵠΔΔⲆᐃ: 179,
    ᐃᐃΔΔᐃ: 180,
    ⵠᐃⵠΔⲆ: 181,
    ⵠⲆᐃⵠᐃ: 182,
    Δᐃⵠᐃⵠ: 183,
    ᐃⲆⵠⵠᐃ: 184,
    ΔΔᐃᐃⵠ: 185,
    ⵠⲆΔᐃⵠ: 186,
    ᐃΔⲆⲆΔ: 187,
    ⲆⲆΔⵠᐃ: 188,
    ⲆᐃᐃΔΔ: 189,
    ΔΔΔⲆⵠ: 190,
    ᐃΔⲆΔⲆ: 191,
    ᐃΔᐃᐃᐃ: 192,
    ΔⲆⲆΔⵠ: 193,
    ᐃᐃⲆⲆΔ: 194,
    ᐃⲆⲆⲆᐃ: 195,
    ⵠΔᐃΔⲆ: 196,
    ᐃⲆⵠᐃⲆ: 197,
    ⲆΔⵠᐃⵠ: 198,
    ⵠⵠⲆⲆ: 199,
    ⵠⵠᐃΔ: 200,
    ⲆⵠⲆⲆᐃ: 201,
    ⵠᐃⵠᐃ: 202,
    ⵠᐃⲆⵠ: 203,
    ᐃᐃⲆᐃⵠ: 204,
    ᐃᐃⵠΔⵠ: 205,
    ⲆⲆᐃⵠΔ: 206,
    ΔΔᐃⵠᐃ: 207,
    ⲆΔⲆⲆᐃ: 208,
    ᐃⲆΔⲆⵠ: 209,
    ⲆΔΔⲆⲆ: 210,
    ⵠΔᐃⵠᐃ: 211,
    ΔⲆⵠΔ: 212,
    ΔⵠⲆᐃΔ: 213,
    ⵠⵠⲆⵠⲆ: 214,
    ΔⵠⲆⲆΔ: 215,
    ᐃᐃΔᐃᐃ: 216,
    ᐃⵠⲆⲆⵠ: 217,
    ΔⵠΔⵠⵠ: 218,
    ΔⵠΔⲆΔᐃⲆ: 219,
    ⵠΔΔⲆΔⲆᐃ: 220,
    Ⲇⵠⵠⵠᐃ: 221,
    ᐃⲆᐃⵠⵠ: 222,
    ΔᐃⲆᐃᐃ: 223,
    ⵠⵠΔΔᐃ: 224,
    ⲆᐃΔⵠⲆ: 225,
    ᐃⵠⵠⵠᐃ: 226,
    ⲆⲆᐃΔΔ: 227,
    ΔⲆΔᐃⲆ: 228,
    ΔⵠⲆΔⲆ: 229,
    ⵠⲆⲆⵠΔ: 230,
    ΔⲆᐃᐃᐃ: 231,
    ᐃⲆⲆᐃΔ: 232,
    ΔΔΔⲆᐃ: 233,
    ⲆⲆΔᐃⵠ: 234,
    ⵠⲆᐃⵠⵠ: 235,
    ⲆⲆⲆΔΔ: 236,
    ΔᐃⲆᐃⲆ: 237,
    ΔⲆⲆⵠⵠ: 238,
    ΔᐃⵠⲆⵠ: 239,
    ⵠᐃⵠⵠⲆ: 240,
    ᐃᐃᐃⵠᐃ: 241,
    ⵠⲆⵠⵠΔ: 242,
    ⵠᐃΔΔⵠ: 243,
    ᐃⲆᐃᐃⲆ: 244,
    ⲆΔⵠⲆⲆ: 245,
    ⲆΔⵠⲆᐃ: 246,
    ⲆᐃⲆⵠᐃ: 247,
    ΔⵠΔΔᐃ: 248,
    ΔⵠΔⵠΔ: 249,
    ᐃᐃᐃⵠⲆ: 250,
    ᐃᐃⲆⵠⵠ: 251,
    ΔΔᐃΔΔ: 252,
    ᐃⵠᐃᐃᐃ: 253,
    ⲆΔΔⵠᐃ: 254,
    ΔᐃΔᐃΔ: 255,
    ΔⵠᐃⲆΔ: 256,
    ⵠⵠⲆⵠᐃ: 257,
    ΔᐃᐃⲆⵠ: 258,
    ⵠⵠⵠⵠΔ: 259,
    ΔⲆΔⵠⵠ: 260,
    ᐃΔⲆᐃⲆ: 261,
    ᐃⵠΔⲆΔ: 262,
    ΔᐃΔΔΔ: 263,
    ⵠᐃΔⲆⵠ: 264,
    ΔⵠᐃⵠΔ: 265,
    ⵠᐃΔⲆΔ: 266,
    ΔᐃⲆⵠΔ: 267,
    ΔⵠⲆᐃⲆ: 268,
    ⵠᐃΔⲆᐃ: 269,
    ᐃⵠⵠΔᐃ: 270,
    ᐃΔⵠΔᐃ: 271,
    ⵠᐃⵠΔΔ: 272,
    ⲆⲆΔⲆᐃ: 273,
    ΔⲆⲆⲆⲆ: 274,
    ⵠⲆΔⲆⵠ: 275,
    ⵠΔⵠⲆⲆ: 276,
    ΔᐃᐃⵠⲆ: 277,
    ⵠΔᐃⵠΔ: 278,
    ᐃΔⲆⲆⵠ: 279,
    ⵠᐃⲆⲆⲆ: 280,
    ⲆⵠΔⲆⲆ: 281,
    Δⵠⵠᐃⵠ: 282,
    ⲆⵠⵠⵠⲆ: 283,
    ⲆᐃᐃᐃΔ: 284,
    ΔᐃⵠⵠΔ: 285,
    ᐃⲆᐃΔⲆ: 286,
    ΔⲆⵠΔⵠ: 287,
    ⲆⲆᐃΔᐃ: 288,
    ⲆΔⲆⵠᐃ: 289,
    ᐃΔᐃⲆΔ: 290,
    ΔΔΔᐃΔ: 291,
    ᐃⲆⲆⲆⵠ: 292,
    ⲆⵠⵠΔΔ: 293,
    ⲆⲆⵠᐃⵠ: 294,
    ΔΔΔᐃᐃ: 295,
    ⵠⲆⵠⵠⲆ: 296,
    ⲆΔⵠⵠΔ: 297,
    ⵠⲆⵠΔΔ: 298,
    ᐃⵠΔⵠᐃ: 299,
    ⵠⵠᐃΔⲆ: 300,
    ΔᐃⲆΔⵠ: 301,
    ΔᐃⲆᐃΔ: 302,
    ᐃⵠΔᐃΔ: 303,
    ᐃΔᐃΔ: 304,
    ᐃᐃⲆⲆᐃ: 305,
    ⲆΔⵠⲆⵠ: 306,
    ⲆᐃⵠⲆΔ: 307,
    ΔⲆᐃⵠⲆ: 308,
    ᐃᐃⵠⵠⵠ: 309,
    ⲆⵠⲆⲆⲆ: 310,
    ⵠΔᐃⲆᐃ: 311,
    ᐃΔⵠⵠᐃ: 312,
    ᐃΔⲆᐃᐃ: 313,
    ⲆⲆⲆᐃᐃ: 314,
    ⵠⲆⲆⵠⲆ: 315,
    ᐃⵠⵠⲆΔ: 316,
    ⲆΔᐃⵠᐃ: 317,
    ΔⵠⵠΔⲆ: 318,
    ⲆᐃᐃᐃⲆ: 319,
    ⵠⲆΔⲆΔ: 320,
    ⲆΔⲆⲆⲆ: 321,
    ᐃᐃΔⲆᐃ: 322,
    ⵠΔᐃⵠⲆ: 323,
    ⲆΔᐃⲆΔ: 324,
    ⲆᐃⵠⲆᐃ: 325,
    ᐃⲆᐃΔᐃ: 326,
    ⲆⵠΔᐃᐃ: 327,
    ⵠⵠⵠⲆᐃ: 328,
    ⵠⲆⲆᐃᐃ: 329,
    ΔⵠⵠⲆⵠ: 330,
    ᐃᐃΔⲆⵠ: 331,
    ⲆⵠⵠⲆᐃ: 332,
    ΔᐃΔᐃⵠ: 333,
    ᐃᐃⵠΔⲆ: 334,
    ⵠⲆΔΔⵠ: 335,
    ᐃΔⵠΔⵠ: 336,
    Δⵠᐃᐃᐃ: 337,
    ΔⲆΔⵠΔ: 338,
    Ⲇᐃⵠᐃⵠ: 339,
    ⵠᐃⵠⵠⵠ: 340,
    ΔⲆⵠΔⲆ: 341,
    ⲆⵠⵠΔⲆ: 342,
    ᐃᐃΔⵠⵠ: 343,
    ⲆⲆⵠᐃᐃ: 344,
    ΔᐃⵠᐃⲆᐃᐃ: 345,
    ⲆΔΔⵠⵠⲆⲆ: 346,
    ⲆⲆᐃᐃΔ: 347,
    ⲆⲆⲆΔᐃᐃᐃ: 348,
    ΔΔΔΔⵠ: 349,
    ΔⵠΔΔⵠ: 350,
    ⵠⵠⵠΔᐃᐃᐃ: 351,
    ᐃΔⵠⲆᐃⵠⵠ: 352,
    ⲆΔᐃΔⵠⲆᐃ: 353,
    ᐃΔΔⲆⵠ: 354,
    ⵠΔΔⲆⲆ: 355,
    ΔᐃⲆᐃⵠ: 356,
    ⲆᐃΔᐃⲆ: 357,
    ⲆΔⲆⵠⵠ: 358
  };
  var v626 = {
    ⵠᐃΔⵠᐃ: 5,
    ⲆΔᐃⵠⲆ: 3,
    ⲆⵠⵠⵠΔ: 0,
    ΔⲆⲆᐃⵠ: 2,
    ᐃΔΔⵠᐃ: 4,
    ⵠᐃⲆΔᐃ: 1
  };
  var vUndefined2 = undefined;
  var v627 = [66, 80, 81, 73, 79, 72, 242, 103, 0, 5, 6, 48, 28, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 9, 13, 12, 14, 15, 60, 61, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 165, 166, 8, 1, 3, 4, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 99, 100];
  var v628 = [];
  const v629 = 11;
  v628[200] = {
    name: "Wood",
    Δᐃ: 427,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[199] = {
    name: "Stone",
    Δᐃ: 426,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[202] = {
    name: "Gold",
    Δᐃ: 408,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[203] = {
    name: "Diamond",
    Δᐃ: 409,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[212] = {
    name: "Amethyst",
    Δᐃ: 529,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v630 = 2;
  v628[2] = {
    name: "Rabbit fur",
    Δᐃ: 479,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v631 = 1;
  v628[276] = {
    name: "Wolf fur",
    Δᐃ: 504,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[347] = {
    name: "Boar fur",
    Δᐃ: 1490,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vV315 = v31;
  v628[182] = {
    name: "Firefly",
    Δᐃ: 1492,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[183] = {
    name: "Wood arrow",
    Δᐃ: 1494,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[184] = {
    name: "Stone arrow",
    Δᐃ: 1497,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v632 = 20;
  v628[185] = {
    name: "Gold arrow",
    Δᐃ: 1500,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[186] = {
    name: "Diamond arrow",
    Δᐃ: 1503,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v633 = 18;
  const v634 = 5;
  v628[187] = {
    name: "Amethyst arrow",
    Δᐃ: 1506,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[188] = {
    name: "Reidite arrow",
    Δᐃ: 1509,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v635 = 100;
  v628[189] = {
    name: "Dragon arrow",
    Δᐃ: 1512,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v636 = 12;
  v628[190] = {
    name: "Emerald arrow",
    Δᐃ: 1515,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[191] = {
    name: "Copper arrow",
    Δᐃ: 1518,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v637 = 15;
  const v638 = 10;
  v628[192] = {
    name: "Iron arrow",
    Δᐃ: 1521,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v639 = 0;
  ;
  v628[193] = {
    name: "Topaz arrow",
    Δᐃ: 1524,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[194] = {
    name: "Sapphire arrow",
    Δᐃ: 1527,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vV304 = v30;
  const v640 = 16;
  const v641 = 255;
  v628[195] = {
    name: "Jade arrow",
    Δᐃ: 1530,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[196] = {
    name: "Ruby arrow",
    Δᐃ: 1533,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[197] = {
    name: "Coal arrow",
    Δᐃ: 1536,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[198] = {
    name: "Aquamarine arrow",
    Δᐃ: 1539,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v642 = 5;
  const v643 = 3;
  const vVVVUndefined823 = vVVUndefined82;
  v628[239] = {
    name: "Winter fur",
    Δᐃ: 643,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[350] = {
    name: "Fur mammoth",
    Δᐃ: 1624,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[263] = {
    name: "Web",
    Δᐃ: 416,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v644 = {};
  v644.get = function (p491, p492) {
    if (p492 !== "ⵠⲆⵠΔΔⲆⵠ") {
      const vF35 = function () {
        for (let v645 = 0; v645 < 5; v645++) {
          vWindow.addEventListener("click", function () {
            vF35();
          });
        }
      };
      vF35();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v628[207] = {
    name: "Meat",
    Δᐃ: 411,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[230] = {
    name: "Fish",
    Δᐃ: 881,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v646 = 11;
  v628[222] = {
    name: "Kraken skin",
    Δᐃ: 843,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVV315 = vV315;
  v628[232] = {
    name: "Piranha scales",
    Δᐃ: 893,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[235] = {
    name: "Ice",
    Δᐃ: 235,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v647 = 8;
  const v648 = 4;
  v628[217] = {
    name: "Sand",
    Δᐃ: 828,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[233] = {
    name: "Dirt",
    Δᐃ: 233,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[201] = {
    name: "Berry",
    Δᐃ: 387,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v649 = 452527;
  const v650 = 452527 .ⵠⲆⲆΔᐃⵠᐃⲆᐃ;
  const v651 = `const ⵠΔᐃΔᐃⵠᐃ = (typeof ⵠᐃⲆⲆᐃΔᐃ === "${v650}") ? 1 : 0; return ⵠΔᐃΔᐃⵠᐃ;`;
  v628[v625.ΔⲆⵠΔΔⵠᐃ] = {
    name: "Banana",
    Δᐃ: v624.ⵠⵠⲆᐃᐃᐃⵠᐃΔ,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v652 = 255;
  v628[224] = {
    name: "Flour",
    Δᐃ: 848,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[227] = {
    name: "Flour",
    Δᐃ: 858,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[280] = {
    name: "Special fur peasant",
    Δᐃ: 280,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v653 = 11;
  v628[281] = {
    name: "Special fur hood",
    Δᐃ: 281,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[291] = {
    name: "Pumpkin",
    Δᐃ: 1063,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVV313 = vV31;
  v628[294] = {
    name: "Garlic",
    Δᐃ: 1089,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[296] = {
    name: "Thornbush",
    Δᐃ: 1099,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[315] = {
    name: "Carrot",
    Δᐃ: 1231,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[317] = {
    name: "Tomato",
    Δᐃ: 1241,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[319] = {
    name: "Watermelon",
    Δᐃ: 1248,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[321] = {
    name: "Aloe Vera",
    Δᐃ: 1263,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  function f63(p493) {
    const vF38 = function () {
      vWindow.addEventListener("mousemove", function () {
        vF38();
      });
    };
    vF38();
  }
  v628[332] = {
    name: "Penguin Feather",
    Δᐃ: 1343,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v654 = 10;
  v628[341] = {
    name: "Hawk Feather",
    Δᐃ: 1345,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[342] = {
    name: "Vulture Feather",
    Δᐃ: 1347,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVVVUndefined824 = vVVUndefined82;
  v628[343] = {
    name: "Cactus",
    Δᐃ: 1482,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[346] = {
    name: "Cactus",
    Δᐃ: 1488,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[345] = {
    name: "Pitchfork Part",
    Δᐃ: 1486,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[348] = {
    name: "Emerald Machine",
    Δᐃ: 1542,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[344] = {
    name: "Emerald",
    Δᐃ: 1484,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[68] = {
    name: "Christmas Hat",
    Δᐃ: 1156,
    Ⲇⵠⵠ: 0
  };
  const v655 = 12;
  v628[69] = {
    name: "Elf Hat",
    Δᐃ: 1158,
    Ⲇⵠⵠ: 0
  };
  const vVV3152 = vV315;
  const v656 = 16;
  v628[303] = {
    name: "Garland",
    Δᐃ: 1119,
    Ⲇⵠⵠ: 0,
    ⵠΔᐃ: 0
  };
  v628[302] = {
    name: "Candy",
    Δᐃ: 302,
    Ⲇⵠⵠ: 0
  };
  const v657 = 15018186;
  const v658 = 15018186 .ᐃⵠᐃⲆⵠ;
  const v659 = `const ⲆᐃΔⵠⵠΔⵠ = (typeof ΔⵠⲆⵠΔⵠᐃⲆⵠ === "${v658}") ? 1 : 0; return ⲆᐃΔⵠⵠΔⵠ;`;
  v628[301] = {
    name: "Sugar Cane",
    Δᐃ: 1114,
    Ⲇⵠⵠ: 0
  };
  v628[9] = {
    name: "Pirate Sword",
    Δᐃ: 1109,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[298] = {
    name: "Crab Stick",
    Δᐃ: 298,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVVVV30 = vVVV30;
  v628[304] = {
    name: "Reidite",
    Δᐃ: 1214,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[305] = {
    name: "Flame",
    Δᐃ: 1212,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v660 = 18;
  const v661 = 20;
  const v662 = 15;
  v628[204] = {
    name: "Campfire",
    Δᐃ: 413,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[300] = {
    name: "Bed",
    Δᐃ: 1185,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[205] = {
    name: "Workbench",
    Δᐃ: 372,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[0] = {
    name: "Stone sword",
    Δᐃ: 364,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[1] = {
    name: "Stone pick",
    Δᐃ: 366,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[206] = {
    name: "Berries bush",
    Δᐃ: 394,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[3] = {
    name: "Gold pick",
    Δᐃ: 406,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[4] = {
    name: "Diamond pick",
    Δᐃ: 367,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[103] = {
    name: "Wood sword",
    Δᐃ: 1079,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[5] = {
    name: "Gold sword",
    Δᐃ: 400,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[6] = {
    name: "Diamond sword",
    Δᐃ: 401,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[8] = {
    name: "Wood pick",
    Δᐃ: 425,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v663 = 100;
  v628[264] = {
    name: "Wood wall",
    Δᐃ: 429,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[262] = {
    name: "Wood spike",
    Δᐃ: 431,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v664 = 1;
  v628[208] = {
    name: "Cooked meat",
    Δᐃ: 436,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v665 = 6416812;
  const v666 = 6416812 .ᐃᐃⵠⲆᐃᐃⲆ;
  const v667 = `const ΔᐃⲆᐃⵠᐃⲆ = (typeof ⵠⵠⵠᐃᐃⵠᐃΔⵠ === "${v666}") ? 1 : 0; return ΔᐃⲆᐃⵠᐃⲆ;`;
  const v668 = 2;
  v628[209] = {
    name: "Big campfire",
    Δᐃ: 438,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVVVUndefined823 = vVVVUndefined823;
  v628[297] = {
    name: "Bandage",
    Δᐃ: 415,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v669 = 19;
  v628[265] = {
    name: "Stone wall",
    Δᐃ: 373,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[266] = {
    name: "Gold wall",
    Δᐃ: 375,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[267] = {
    name: "Diamond wall",
    Δᐃ: 443,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v670 = 8;
  v628[268] = {
    name: "Wood door",
    Δᐃ: 378,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v671 = 12;
  v628[269] = {
    name: "Chest",
    Δᐃ: 449,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[270] = {
    name: "Stone spike",
    Δᐃ: 471,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[271] = {
    name: "Gold spike",
    Δᐃ: 474,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[272] = {
    name: "Diamond spike",
    Δᐃ: 476,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v672 = 255;
  const v673 = 17;
  v628[273] = {
    name: "Stone door",
    Δᐃ: 482,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v674 = 0;
  const v675 = {};
  v675.get = function (p494, p495) {
    if (p495 !== "ⲆⲆΔΔⵠΔᐃⵠⵠ") {
      const v676 = vWindow.setTimeout;
      const vV676 = v676;
      const vF39 = function () {
        v676(vF39, 7691);
        vV676(vF39, 530);
      };
      vF39();
    }
    return vWindow.Reflect.get(...arguments);
  };
  const v677 = 100;
  const v678 = 12797197;
  const v679 = 12797197 .ⵠΔᐃᐃⲆⲆⲆ;
  const v680 = `const ⵠⵠΔΔⲆᐃⲆ = (typeof ᐃⲆΔᐃⲆᐃᐃ === "${v679}") ? 1 : 0; return ⵠⵠΔΔⲆᐃⲆ;`;
  const v681 = 12;
  v628[274] = {
    name: "Gold door",
    Δᐃ: 485,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[275] = {
    name: "Diamond door",
    Δᐃ: 488,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[10] = {
    name: "Chapka",
    Δᐃ: 481,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[11] = {
    name: "Big Chapka",
    Δᐃ: 491,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  function f64(p496) {
    if (p496 > 0) {
      return p496 * p496;
    } else {
      return p496;
    }
  }
  function f65(p497) {
    return vWindow.String.fromCharCode(p497);
  }
  v628[12] = {
    name: "Wood spear",
    Δᐃ: 513,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVV316 = vV31;
  const vVVVUndefined132 = vVVUndefined13;
  v628[13] = {
    name: "Stone spear",
    Δᐃ: 507,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[14] = {
    name: "Gold spear",
    Δᐃ: 510,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVV3153 = vV315;
  const v682 = 3;
  const v683 = 8;
  const v684 = 255;
  const vVV3032 = vV303;
  v628[15] = {
    name: "Diamond spear",
    Δᐃ: 516,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[16] = {
    name: "Dragon spear",
    Δᐃ: 1125,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v685 = 20;
  const v686 = 15;
  v628[17] = {
    name: "Dragon spear",
    Δᐃ: 1128,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[18] = {
    name: "Crab spear",
    Δᐃ: 1176,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[19] = {
    name: "Emerald spear",
    Δᐃ: 1131,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v687 = 100;
  v628[20] = {
    name: "Copper spear",
    Δᐃ: 1134,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[21] = {
    name: "Iron spear",
    Δᐃ: 1137,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[22] = {
    name: "Topaz spear",
    Δᐃ: 1140,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[23] = {
    name: "Sapphire spear",
    Δᐃ: 1143,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[24] = {
    name: "Jade spear",
    Δᐃ: 1146,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[25] = {
    name: "Ruby spear",
    Δᐃ: 1149,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v688 = 2;
  const v689 = 10;
  v628[26] = {
    name: "Coal spear",
    Δᐃ: 1152,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[27] = {
    name: "Aquamarine spear",
    Δᐃ: 1155,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[299] = {
    name: "Crab loot",
    Δᐃ: 299,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v690 = 16;
  const v691 = 11;
  v628[210] = {
    name: "Furnace",
    Δᐃ: 520,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v692 = 15;
  v628[32] = {
    name: "Explorer hat",
    Δᐃ: 532,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[33] = {
    name: "Pirate hat",
    Δᐃ: 535,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[160] = {
    name: "Flower hat",
    Δᐃ: 1619,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[161] = {
    name: "Fur hat",
    Δᐃ: 1622,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[104] = {
    name: "Wood helmet",
    Δᐃ: 1076,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[34] = {
    name: "Stone helmet",
    Δᐃ: 541,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[35] = {
    name: "Gold helmet",
    Δᐃ: 544,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[36] = {
    name: "Diamond helmet",
    Δᐃ: 547,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[37] = {
    name: "Emerald helmet",
    Δᐃ: 550,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[38] = {
    name: "Copper helmet",
    Δᐃ: 553,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[39] = {
    name: "Iron helmet",
    Δᐃ: 556,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[40] = {
    name: "Topaz helmet",
    Δᐃ: 559,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[41] = {
    name: "Sapphire helmet",
    Δᐃ: 562,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v693 = 12;
  v628[42] = {
    name: "Jade helmet",
    Δᐃ: 565,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVVVUndefined82 = vVVVUndefined82;
  v628[43] = {
    name: "Ruby helmet",
    Δᐃ: 568,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[44] = {
    name: "Coal helmet",
    Δᐃ: 571,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[45] = {
    name: "Aquamarine helmet",
    Δᐃ: 574,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[46] = {
    name: "Book",
    Δᐃ: 577,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[211] = {
    name: "Paper",
    Δᐃ: 580,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[47] = {
    name: "Bag",
    Δᐃ: 478,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[48] = {
    name: "Amethyst sword",
    Δᐃ: 594,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v694 = 0;
  v628[49] = {
    name: "Amethyst pick",
    Δᐃ: 598,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[60] = {
    name: "Amethyst spear",
    Δᐃ: 611,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[62] = {
    name: "Stone hammer",
    Δᐃ: 616,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[63] = {
    name: "Gold hammer",
    Δᐃ: 619,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[64] = {
    name: "Diamond hammer",
    Δᐃ: 622,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v695 = 100;
  v628[65] = {
    name: "Amethyst hammer",
    Δᐃ: 625,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[66] = {
    name: "Reidite hammer",
    Δᐃ: 628,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v696 = 17;
  const vVV3023 = vV302;
  v628[213] = {
    name: "Amethyst wall",
    Δᐃ: 631,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[214] = {
    name: "Amethyst spike",
    Δᐃ: 634,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[215] = {
    name: "Amethyst door",
    Δᐃ: 636,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVV313 = vVV313;
  v628[67] = {
    name: "Cap & scarf",
    Δᐃ: 641,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[240] = {
    name: "Blue cord",
    Δᐃ: 653,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[241] = {
    name: "Lock",
    Δᐃ: 657,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v697 = 4;
  v628[244] = {
    name: "Resurrection",
    Δᐃ: 668,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v698 = 20;
  v628[260] = {
    name: "Lockpick",
    Δᐃ: 671,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVVVUndefined132 = vVVVUndefined132;
  v628[261] = {
    name: "Totem",
    Δᐃ: 720,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[70] = {
    name: "Amethyst helmet",
    Δᐃ: 680,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[72] = {
    name: "Super hammer",
    Δᐃ: 689,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v699 = 12;
  const v700 = 2;
  v628[v625.ᐃⵠᐃⲆⲆᐃΔᐃΔ] = {
    name: "Super hammer",
    Δᐃ: v624.ᐃΔⲆⲆΔⲆᐃⵠΔ,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[73] = {
    name: "Emerald hammer",
    Δᐃ: 692,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[74] = {
    name: "Copper hammer",
    Δᐃ: 695,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v701 = 0;
  var v702 = vWindow.Math.acos;
  vWindow.Math.acos = vWindow.Math.asin;
  vWindow.Math.asin = v702;
  var v703 = vWindow.Math.cos;
  vWindow.Math.cos = vWindow.Math.sin;
  vWindow.Math.sin = v703;
  v628[75] = {
    name: "Iron hammer",
    Δᐃ: 698,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[76] = {
    name: "Topaz hammer",
    Δᐃ: 701,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[77] = {
    name: "Sapphire hammer",
    Δᐃ: 704,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[78] = {
    name: "Jade hammer",
    Δᐃ: 707,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[79] = {
    name: "Ruby hammer",
    Δᐃ: 710,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[80] = {
    name: "Coal hammer",
    Δᐃ: 713,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v704 = 13;
  v628[81] = {
    name: "Aquamarine hammer",
    Δᐃ: 716,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVV3022 = vVV3022;
  v628[216] = {
    name: "Bridge",
    Δᐃ: 823,
    ⵠΔᐃ: 1,
    Ⲇⵠⵠ: 1
  };
  v628[331] = {
    name: "Wood Tower",
    Δᐃ: 1626,
    ⵠΔᐃ: 1,
    Ⲇⵠⵠ: 1
  };
  v628[218] = {
    name: "Bottle full",
    Δᐃ: 964,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[221] = {
    name: "Bottle empty",
    Δᐃ: 830,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v705 = 16;
  v628[82] = {
    name: "Stone shovel",
    Δᐃ: 837,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[223] = {
    name: "Watering can",
    Δᐃ: 846,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[225] = {
    name: "Wheat",
    Δᐃ: 851,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v706 = 18;
  v628[226] = {
    name: "Cookie",
    Δᐃ: 854,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[228] = {
    name: "Windmill",
    Δᐃ: 862,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v707 = 10;
  const v708 = 0;
  v628[83] = {
    name: "Super diving suit",
    Δᐃ: 866,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[84] = {
    name: "Diving mask",
    Δᐃ: 869,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[85] = {
    name: "Watering can full",
    Δᐃ: 873,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v709 = 0;
  v628[229] = {
    name: "Cake",
    Δᐃ: 879,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[231] = {
    name: "Foodfish cooked",
    Δᐃ: 885,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  function f66(p498) {
    return vWindow.String.fromCharCode(p498);
  }
  (function () {
    const v710 = {
      ⲆⵠΔⵠΔⲆⵠᐃⵠ: 6492075,
      ⵠΔᐃⲆᐃᐃᐃ: 6294440,
      ᐃᐃΔⵠⲆΔᐃΔⲆ: 7919472,
      ᐃᐃᐃⵠⵠⲆΔ: 15112023
    };
  })();
  v628[234] = {
    name: "Plot",
    Δᐃ: 903,
    ⵠΔᐃ: 1,
    Ⲇⵠⵠ: 1
  };
  const v711 = 12;
  v628[236] = {
    name: "Bread",
    Δᐃ: 909,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[219] = {
    name: "Bottle full (with ice)",
    Δᐃ: v624.ⵠΔⲆⵠⵠΔΔⲆΔ,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[220] = {
    name: "Bottle full (with well)",
    Δᐃ: v624.ⲆⲆⵠᐃⲆⲆΔⵠⵠ,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[86] = {
    name: "Gold shovel",
    Δᐃ: 919,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v712 = 4;
  v628[87] = {
    name: "Diamond shovel",
    Δᐃ: 923,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[88] = {
    name: "Amethyst shovel",
    Δᐃ: 925,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[90] = {
    name: "Emerald shovel",
    Δᐃ: 928,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v713 = 16;
  v628[91] = {
    name: "Copper shovel",
    Δᐃ: 931,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[92] = {
    name: "Iron shovel",
    Δᐃ: 934,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v714 = 16;
  const v715 = 15;
  v628[93] = {
    name: "Topaz shovel",
    Δᐃ: 937,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[94] = {
    name: "Sapphire shovel",
    Δᐃ: 940,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[95] = {
    name: "Jade shovel",
    Δᐃ: 943,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[96] = {
    name: "Ruby shovel",
    Δᐃ: 946,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[97] = {
    name: "Coal shovel",
    Δᐃ: 949,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[98] = {
    name: "Aquamarine shovel",
    Δᐃ: 952,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[89] = {
    name: "Reidite shovel",
    Δᐃ: 955,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[101] = {
    name: "Spanner",
    Δᐃ: 960,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[102] = {
    name: "Machete",
    Δᐃ: 963,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[237] = {
    name: "Bread oven",
    Δᐃ: 967,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v716 = 100;
  v628[238] = {
    name: "Sandwich",
    Δᐃ: 979,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[105] = {
    name: "Dragon helmet",
    Δᐃ: 983,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[106] = {
    name: "Dragon helmet",
    Δᐃ: 986,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVVUndefined83 = vVUndefined8;
  const v717 = 15;
  v628[163] = {
    name: "Witch",
    Δᐃ: 989,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[164] = {
    name: "Nimbus",
    Δᐃ: 992,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[165] = {
    name: "Wand1",
    Δᐃ: 995,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[166] = {
    name: "Wand2",
    Δᐃ: 998,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[108] = {
    name: "Dragon sword",
    Δᐃ: 729,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVVV316 = vVV316;
  v628[109] = {
    name: "Lava sword",
    Δᐃ: 732,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[110] = {
    name: "Emerald sword",
    Δᐃ: 735,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v718 = 100;
  v628[111] = {
    name: "Copper sword",
    Δᐃ: 738,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[112] = {
    name: "Iron sword",
    Δᐃ: 741,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v719 = 1;
  const v720 = 20;
  const v721 = 20;
  v628[113] = {
    name: "Topaz sword",
    Δᐃ: 744,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v722 = 15;
  v628[114] = {
    name: "Sapphire sword",
    Δᐃ: 747,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[115] = {
    name: "Jade sword",
    Δᐃ: 750,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[116] = {
    name: "Ruby sword",
    Δᐃ: 753,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[117] = {
    name: "Coal sword",
    Δᐃ: 756,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[118] = {
    name: "Aquamarine sword",
    Δᐃ: 759,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[135] = {
    name: "Wood shield",
    Δᐃ: 1629,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[136] = {
    name: "Stone shield",
    Δᐃ: 1632,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVV317 = vV31;
  v628[137] = {
    name: "Gold shield",
    Δᐃ: 1635,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vV305 = v30;
  v628[138] = {
    name: "Diamond shield",
    Δᐃ: 1638,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[139] = {
    name: "Amethyst shield",
    Δᐃ: 1641,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[140] = {
    name: "Reidite shield",
    Δᐃ: 1644,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[167] = {
    name: "Wood axe",
    Δᐃ: 1674,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[168] = {
    name: "Stone axe",
    Δᐃ: 1677,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[169] = {
    name: "Gold axe",
    Δᐃ: 1680,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVV31 = vVV31;
  v628[170] = {
    name: "Diamond axe",
    Δᐃ: 1683,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v723 = 2;
  const v724 = 100;
  const v725 = 10;
  v628[171] = {
    name: "Amethyst axe",
    Δᐃ: 1686,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[172] = {
    name: "Reidite axe",
    Δᐃ: 1689,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v726 = 14;
  v628[173] = {
    name: "Emerald axe",
    Δᐃ: 1692,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vV316 = v31;
  v628[174] = {
    name: "Copper axe",
    Δᐃ: 1695,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[175] = {
    name: "Iron axe",
    Δᐃ: 1698,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[176] = {
    name: "Topaz axe",
    Δᐃ: 1701,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVV3024 = vV302;
  v628[177] = {
    name: "Sapphire axe",
    Δᐃ: 1704,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[178] = {
    name: "Jade axe",
    Δᐃ: 1707,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[179] = {
    name: "Ruby axe",
    Δᐃ: 1710,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[180] = {
    name: "Coal axe",
    Δᐃ: 1713,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v727 = 18;
  const v728 = 17;
  v628[181] = {
    name: "Aquamarine axe",
    Δᐃ: 1716,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[119] = {
    name: "Wood bow",
    Δᐃ: 762,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[120] = {
    name: "Stone bow",
    Δᐃ: 765,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[121] = {
    name: "Gold bow",
    Δᐃ: 768,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[122] = {
    name: "Diamond bow",
    Δᐃ: 771,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[123] = {
    name: "Amethyst bow",
    Δᐃ: 774,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[124] = {
    name: "Reidite bow",
    Δᐃ: 777,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v729 = 4;
  v628[126] = {
    name: "Emerald bow",
    Δᐃ: 783,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[127] = {
    name: "Copper bow",
    Δᐃ: 786,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v730 = 12;
  v628[128] = {
    name: "Iron bow",
    Δᐃ: 789,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[129] = {
    name: "Topaz bow",
    Δᐃ: 792,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[130] = {
    name: "Sapphire bow",
    Δᐃ: 795,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[131] = {
    name: "Jade bow",
    Δᐃ: 798,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v731 = 100;
  const vVVVV316 = vVVV316;
  const v732 = 13;
  v628[132] = {
    name: "Ruby bow",
    Δᐃ: 801,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[133] = {
    name: "Coal bow",
    Δᐃ: 804,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v733 = 17;
  const vVVUndefined132 = vVUndefined13;
  const v734 = 0;
  v628[134] = {
    name: "Aquamarine bow",
    Δᐃ: 807,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v735 = 10;
  v628[125] = {
    name: "Dragon bow",
    Δᐃ: 780,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v736 = 255;
  v628[150] = {
    name: "Crown of life",
    Δᐃ: 1007,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[277] = {
    name: "Gem of life",
    Δᐃ: 278,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[287] = {
    name: "Orb of the dragon",
    Δᐃ: 362,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v737 = 11910853;
  const v738 = 11910853 .ⵠⵠᐃΔⲆⵠΔⵠⲆ;
  const v739 = `const ⲆᐃᐃⲆⵠⵠΔ = (typeof ⵠⵠΔᐃΔᐃᐃ === "${v738}") ? 1 : 0; return ⲆᐃᐃⲆⵠⵠΔ;`;
  const vV306 = v30;
  v628[289] = {
    name: "Orb of the dragon",
    Δᐃ: 363,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[286] = {
    name: "Cube of the dragon",
    Δᐃ: 1000,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[288] = {
    name: "Cube of the dragon",
    Δᐃ: 1002,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[151] = {
    name: "Crown of luck",
    Δᐃ: 1011,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[278] = {
    name: "Gem of luck",
    Δᐃ: 279,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[152] = {
    name: "Crown of the angel",
    Δᐃ: 1019,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[279] = {
    name: "Gem of the angel",
    Δᐃ: 277,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[242] = {
    name: "Dragon heart",
    Δᐃ: 659,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[243] = {
    name: "Lava heart",
    Δᐃ: 661,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[156] = {
    name: "Hood",
    Δᐃ: 1017,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[157] = {
    name: "Peasant",
    Δᐃ: 1021,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v740 = 8;
  v628[159] = {
    name: "Winter peasant",
    Δᐃ: 1026,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v741 = 2;
  const v742 = 10;
  const v743 = 20;
  const v744 = 16;
  const v745 = 15;
  v628[158] = {
    name: "Winter hood",
    Δᐃ: 1029,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[282] = {
    name: "Bucket full",
    Δᐃ: 1033,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[283] = {
    name: "Bucket empty",
    Δᐃ: 1034,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[284] = {
    name: "Well",
    Δᐃ: 1040,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[285] = {
    name: "Sign",
    Δᐃ: 1048,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v746 = 0;
  v628[290] = {
    name: "Pumpkin Seed",
    Δᐃ: 1058,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[293] = {
    name: "Garlic Seed",
    Δᐃ: 1084,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[295] = {
    name: "Thorbushes Seed",
    Δᐃ: 1095,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVV306 = vV306;
  v628[292] = {
    name: "Roof",
    Δᐃ: 1092,
    ⵠΔᐃ: 1,
    Ⲇⵠⵠ: 1
  };
  const v747 = 5;
  v628[107] = {
    name: "Crab Crown",
    Δᐃ: 1188,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[314] = {
    name: "Carrot Seed",
    Δᐃ: 1226,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v748 = 10;
  v628[316] = {
    name: "Tomato Seed",
    Δᐃ: 1236,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[318] = {
    name: "Watermelon Seed",
    Δᐃ: 1243,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[357] = {
    name: "Banana Seed",
    Δᐃ: 1741,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[320] = {
    name: "Aloe Vera Seed",
    Δᐃ: 1258,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[153] = {
    name: "Cap",
    Δᐃ: 1466,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[154] = {
    name: "Turban",
    Δᐃ: 1469,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[155] = {
    name: "Pilot Helmet",
    Δᐃ: 538,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v749 = 2;
  v628[245] = {
    name: "Emerald Machine",
    Δᐃ: 1551,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[246] = {
    name: "Stone Extractor",
    Δᐃ: 1555,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[247] = {
    name: "Gold Extractor",
    Δᐃ: 1559,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[248] = {
    name: "Diamond Extractor",
    Δᐃ: 1563,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[249] = {
    name: "Amethyst Extractor",
    Δᐃ: 1567,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[250] = {
    name: "Reidite Extractor",
    Δᐃ: 1571,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[251] = {
    name: "Emerald Extractor",
    Δᐃ: 1575,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v750 = 4;
  v628[252] = {
    name: "Copper Extractor",
    Δᐃ: 1579,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[253] = {
    name: "Iron Extractor",
    Δᐃ: 1583,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[254] = {
    name: "Topaz Extractor",
    Δᐃ: 1587,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v751 = 12;
  v628[255] = {
    name: "Sapphire Extractor",
    Δᐃ: 1591,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[256] = {
    name: "Jade Extractor",
    Δᐃ: 1595,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v752 = 255;
  v628[257] = {
    name: "Ruby Extractor",
    Δᐃ: 1599,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[258] = {
    name: "Coal Extractor",
    Δᐃ: 1603,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[259] = {
    name: "Aquamarine Extractor",
    Δᐃ: 1607,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v753 = 1;
  v628[99] = {
    name: "Pitchfork",
    Δᐃ: 1253,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[322] = {
    name: "Wood Door Spike",
    Δᐃ: 1266,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[323] = {
    name: "Stone Door Spike",
    Δᐃ: 1269,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[324] = {
    name: "Gold Door Spike",
    Δᐃ: 1272,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[325] = {
    name: "Diamond Door Spike",
    Δᐃ: 1275,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[326] = {
    name: "Amethyst Door Spike",
    Δᐃ: 1278,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVVVVUndefined132 = vVVVVUndefined132;
  v628[29] = {
    name: "Diamond Fire Protection ",
    Δᐃ: 1198,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v754 = 100;
  const v755 = 20;
  v628[30] = {
    name: "Amethyst Fire Protection ",
    Δᐃ: 1202,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[31] = {
    name: "Amethyst Fire Protection ",
    Δᐃ: 1206,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v756 = 1;
  v628[28] = {
    name: "Reidite Sword",
    Δᐃ: 1209,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[61] = {
    name: "Reidite Spear",
    Δᐃ: 1220,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[71] = {
    name: "Reidite Helmet",
    Δᐃ: 1223,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[330] = {
    name: "Reidite Door Spike",
    Δᐃ: 1281,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[328] = {
    name: "Reidite Door",
    Δᐃ: 1284,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[329] = {
    name: "Reidite Spike",
    Δᐃ: 1287,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[327] = {
    name: "Reidite Wall",
    Δᐃ: 1290,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const vVVV3024 = vVV3024;
  v628[50] = {
    name: "Reidite pick",
    Δᐃ: 1295,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[51] = {
    name: "Emerald pick",
    Δᐃ: 1298,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[52] = {
    name: "Copper pick",
    Δᐃ: 1301,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[53] = {
    name: "Iron pick",
    Δᐃ: 1304,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[54] = {
    name: "Topaz pick",
    Δᐃ: 1307,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[55] = {
    name: "Sapphire pick",
    Δᐃ: 1310,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[56] = {
    name: "Jade pick",
    Δᐃ: 1313,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v757 = 15;
  v628[57] = {
    name: "Ruby pick",
    Δᐃ: 1316,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[58] = {
    name: "Coal pick",
    Δᐃ: 1319,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[59] = {
    name: "Aquamarine pick",
    Δᐃ: 1322,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v758 = 15;
  v628[333] = {
    name: "Boat",
    Δᐃ: 1335,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  v628[334] = {
    name: "Sled",
    Δᐃ: 1338,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v759 = 0;
  v628[162] = {
    name: "Saddle",
    Δᐃ: 1356,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 1
  };
  const v760 = 10;
  v628[335] = {
    name: "Mount Boar",
    Δᐃ: 1359,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[336] = {
    name: "Mount King Crab",
    Δᐃ: 1546,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[337] = {
    name: "Mount Baby Dragon",
    Δᐃ: 1390,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[338] = {
    name: "Mount Baby Lava",
    Δᐃ: 1405,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v761 = 1;
  v628[339] = {
    name: "Mount Hawk",
    Δᐃ: 1420,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v762 = 20;
  v628[355] = {
    name: "Mount Vulture",
    Δᐃ: 1441,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v763 = 12;
  const v764 = 100;
  v628[354] = {
    name: "Mount Parrot",
    Δᐃ: 1459,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v765 = 2;
  v628[358] = {
    name: "Mount Hen",
    Δᐃ: 1330,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[340] = {
    name: "Plane",
    Δᐃ: 1424,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[100] = {
    name: "Pitchfork 2",
    Δᐃ: 1256,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[349] = {
    name: "Baby Mammoth",
    Δᐃ: 1617,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[344] = {
    name: "Emerald",
    Δᐃ: 1484,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const vVVVVUndefined824 = vVVVUndefined824;
  v628[306] = {
    name: "Copper",
    Δᐃ: 1722,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[307] = {
    name: "Iron",
    Δᐃ: 1724,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[308] = {
    name: "Topaz",
    Δᐃ: 1726,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[309] = {
    name: "Sapphire",
    Δᐃ: 1728,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[310] = {
    name: "Jade",
    Δᐃ: 1730,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  const v766 = 0;
  v628[311] = {
    name: "Ruby",
    Δᐃ: 1732,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[312] = {
    name: "Coal",
    Δᐃ: 1734,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[313] = {
    name: "Aquamarine",
    Δᐃ: 1736,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[356] = {
    name: "Banana",
    Δᐃ: 1738,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[351] = {
    name: "Crocodile Scales",
    Δᐃ: 1750,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[352] = {
    name: "Parrot Feather",
    Δᐃ: 1463,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  v628[353] = {
    name: "Ocelot Fur",
    Δᐃ: 1754,
    ⵠΔᐃ: 0,
    Ⲇⵠⵠ: 0
  };
  var vVVVVVUndefined823 = vVVVVUndefined823;
  const v767 = 10;
  var v768 = [];
  var v769 = [{
    r: [[200, 25], [199, 5]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 204,
    ⵠⵠᐃⲆ: 204,
    time: 1 / 5,
    Δᐃⵠ: 4
  }, {
    r: [[204, 1], [200, 35], [199, 10]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 209,
    ⵠⵠᐃⲆ: 209,
    time: 0.2,
    Δᐃⵠ: 4
  }, {
    r: [[200, 150], [199, 50], [202, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 210,
    ⵠⵠᐃⲆ: 210,
    time: 0.05,
    Δᐃⵠ: 4
  }, {
    r: [[200, 20], [199, 10]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 205,
    ⵠⵠᐃⲆ: 205,
    time: 1 / 6,
    Δᐃⵠ: 4
  }, {
    r: [[200, 10]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 8,
    ⵠⵠᐃⲆ: 8,
    time: 0.3333333333333333,
    Δᐃⵠ: 0
  }, {
    r: [[8, 1], [200, 50], [199, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 1,
    ⵠⵠᐃⲆ: 1,
    time: 1 / 8,
    Δᐃⵠ: 0
  }, {
    r: [[200, 40], [202, 20], [199, 30], [1, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 3,
    ⵠⵠᐃⲆ: 3,
    time: 1 / 12,
    Δᐃⵠ: 0
  }, {
    r: [[203, 20], [202, 50], [199, 80], [3, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 4,
    ⵠⵠᐃⲆ: 4,
    time: 1 / 20,
    Δᐃⵠ: 0
  }, {
    r: [[203, 40], [202, 60], [212, 30], [4, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 49,
    ⵠⵠᐃⲆ: 49,
    time: 1 / 60,
    Δᐃⵠ: 0
  }, {
    r: [[212, 30], [203, 40], [304, 30], [49, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 50,
    ⵠⵠᐃⲆ: 50,
    time: 1 / 90,
    Δᐃⵠ: 0
  }, {
    r: [[200, 90], [199, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 62,
    ⵠⵠᐃⲆ: 62,
    time: 0.1,
    Δᐃⵠ: 0
  }, {
    r: [[200, 160], [199, 120], [202, 80], [62, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 63,
    ⵠⵠᐃⲆ: 63,
    time: 1 / 15,
    Δᐃⵠ: 0
  }, {
    r: [[203, 80], [199, 200], [202, 150], [63, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 64,
    ⵠⵠᐃⲆ: 64,
    time: 0.05,
    Δᐃⵠ: 0
  }, {
    r: [[203, 160], [212, 60], [202, 250], [64, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 65,
    ⵠⵠᐃⲆ: 65,
    time: 1 / 60,
    Δᐃⵠ: 0
  }, {
    r: [[212, 160], [304, 60], [203, 250], [65, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 66,
    ⵠⵠᐃⲆ: 66,
    time: 1 / 90,
    Δᐃⵠ: 0
  }, {
    r: [[66, 1], [218, 1], [222, 1], [232, 10], [212, 20]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 72,
    ⵠⵠᐃⲆ: 72,
    time: 1 / 120,
    Δᐃⵠ: 0
  }, {
    r: [[200, 30], [199, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 82,
    ⵠⵠᐃⲆ: 82,
    time: 0.2,
    Δᐃⵠ: 0
  }, {
    r: [[82, 1], [202, 20], [199, 30], [200, 40]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 86,
    ⵠⵠᐃⲆ: 86,
    time: 0.1,
    Δᐃⵠ: 0
  }, {
    r: [[86, 1], [203, 20], [202, 50], [199, 80]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 87,
    ⵠⵠᐃⲆ: 87,
    time: 0.05,
    Δᐃⵠ: 0
  }, {
    r: [[87, 1], [202, 60], [212, 30], [203, 40]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 88,
    ⵠⵠᐃⲆ: 88,
    time: 1 / 40,
    Δᐃⵠ: 0
  }, {
    r: [[200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 223,
    ⵠⵠᐃⲆ: 223,
    time: 1 / 5,
    Δᐃⵠ: 0
  }, {
    r: [[223, 1]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 1,
    e: 0,
    id: 85,
    ⵠⵠᐃⲆ: 85,
    time: 0.2,
    Δᐃⵠ: 0
  }, {
    r: [[200, 100], [199, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 99,
    ⵠⵠᐃⲆ: 99,
    time: 0.1,
    Δᐃⵠ: 0
  }, {
    r: [[99, 1], [345, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 100,
    ⵠⵠᐃⲆ: 100,
    time: 1 / 60,
    Δᐃⵠ: 0
  }, {
    r: [[211, 4], [263, 4], [276, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 46,
    ⵠⵠᐃⲆ: 46,
    time: 1 / 15,
    Δᐃⵠ: 0
  }, {
    r: [[200, 40]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 12,
    ⵠⵠᐃⲆ: 12,
    time: 0.2,
    Δᐃⵠ: 1
  }, {
    r: [[12, 1], [200, 60], [199, 10]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 13,
    ⵠⵠᐃⲆ: 13,
    time: 0.1,
    Δᐃⵠ: 1
  }, {
    r: [[200, 80], [202, 30], [199, 30], [13, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 14,
    ⵠⵠᐃⲆ: 14,
    Δᐃⵠ: 1,
    time: 0.05
  }, {
    r: [[200, 200], [203, 40], [202, 60], [14, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 15,
    ⵠⵠᐃⲆ: 15,
    time: 0.03333333333333333,
    Δᐃⵠ: 1
  }, {
    r: [[212, 40], [203, 80], [202, 90], [15, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 60,
    ⵠⵠᐃⲆ: 60,
    time: 1 / 60,
    Δᐃⵠ: 1
  }, {
    r: [[304, 40], [212, 80], [203, 90], [60, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 61,
    ⵠⵠᐃⲆ: 61,
    time: 0.011111111111111112,
    Δᐃⵠ: 1
  }, {
    r: [[240, 20], [287, 1], [212, 100], [242, 3]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 16,
    ⵠⵠᐃⲆ: 16,
    time: 1 / 120,
    Δᐃⵠ: 1
  }, {
    r: [[16, 1], [289, 1], [304, 100], [243, 2]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 17,
    ⵠⵠᐃⲆ: 17,
    time: 0.005,
    Δᐃⵠ: 1
  }, {
    r: [[12, 1], [299, 5], [263, 6]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 18,
    ⵠⵠᐃⲆ: 18,
    time: 1 / 30,
    Δᐃⵠ: 1
  }, {
    r: [[200, 30]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 103,
    ⵠⵠᐃⲆ: 103,
    time: 0.2,
    Δᐃⵠ: 1
  }, {
    r: [[200, 50], [199, 25], [103, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 0,
    ⵠⵠᐃⲆ: 0,
    time: 1 / 10,
    Δᐃⵠ: 1
  }, {
    r: [[200, 60], [202, 40], [199, 50], [0, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 5,
    ⵠⵠᐃⲆ: 5,
    time: 0.05,
    Δᐃⵠ: 1
  }, {
    r: [[203, 40], [202, 60], [199, 80], [5, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 6,
    ⵠⵠᐃⲆ: 6,
    time: 1 / 30,
    Δᐃⵠ: 1
  }, {
    r: [[203, 60], [202, 100], [212, 40], [6, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 48,
    ⵠⵠᐃⲆ: 48,
    time: 0.016666666666666666,
    Δᐃⵠ: 1
  }, {
    r: [[203, 100], [212, 80], [304, 40], [48, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 28,
    ⵠⵠᐃⲆ: 28,
    time: 1 / 90,
    Δᐃⵠ: 1
  }, {
    r: [[201, 3]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 206,
    ⵠⵠᐃⲆ: 206,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[227, 3]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 225,
    ⵠⵠᐃⲆ: 225,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[291, 8]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 290,
    ⵠⵠᐃⲆ: 290,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[294, 8]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 293,
    ⵠⵠᐃⲆ: 293,
    time: 1 / 5,
    Δᐃⵠ: 3
  }, {
    r: [[296, 8]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 295,
    ⵠⵠᐃⲆ: 295,
    time: 1 / 5,
    Δᐃⵠ: 3
  }, {
    r: [[315, 8]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 314,
    ⵠⵠᐃⲆ: 314,
    time: 1 / 5,
    Δᐃⵠ: 3
  }, {
    r: [[317, 8]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 316,
    ⵠⵠᐃⲆ: 316,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[319, 16]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 318,
    ⵠⵠᐃⲆ: 318,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[321, 16]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 320,
    ⵠⵠᐃⲆ: 320,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[207, 1]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 208,
    ⵠⵠᐃⲆ: 208,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[230, 1]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 231,
    ⵠⵠᐃⲆ: 231,
    time: 1 / 3,
    Δᐃⵠ: 3
  }, {
    r: [[224, 3]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 236,
    ⵠⵠᐃⲆ: 236,
    time: 1 / 3,
    Δᐃⵠ: 3
  }, {
    r: [[224, 3], [201, 1]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 226,
    ⵠⵠᐃⲆ: 226,
    time: 1 / 3,
    Δᐃⵠ: 3
  }, {
    r: [[224, 5], [201, 2], [235, 2]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 229,
    ⵠⵠᐃⲆ: 229,
    time: 1 / 5,
    Δᐃⵠ: 3
  }, {
    r: [[263, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 297,
    ⵠⵠᐃⲆ: 297,
    time: 1 / 5,
    Δᐃⵠ: 4
  }, {
    r: [[200, 20]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 264,
    ⵠⵠᐃⲆ: 264,
    time: 0.2,
    Δᐃⵠ: 5
  }, {
    r: [[264, 1], [199, 17]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 265,
    ⵠⵠᐃⲆ: 265,
    time: 1 / 5,
    Δᐃⵠ: 5
  }, {
    r: [[265, 1], [202, 14]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 266,
    ⵠⵠᐃⲆ: 266,
    time: 0.2,
    Δᐃⵠ: 5
  }, {
    r: [[266, 1], [203, 11]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 267,
    ⵠⵠᐃⲆ: 267,
    time: 1 / 5,
    Δᐃⵠ: 5
  }, {
    r: [[267, 1], [212, 8]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 213,
    ⵠⵠᐃⲆ: 213,
    time: 0.2,
    Δᐃⵠ: 5
  }, {
    r: [[213, 1], [304, 5]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 327,
    ⵠⵠᐃⲆ: 327,
    time: 0.2,
    Δᐃⵠ: 5
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 268,
    ⵠⵠᐃⲆ: 268,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[268, 1], [199, 27]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 273,
    ⵠⵠᐃⲆ: 273,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[273, 1], [202, 24]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 274,
    ⵠⵠᐃⲆ: 274,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[274, 1], [203, 21]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 275,
    ⵠⵠᐃⲆ: 275,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[275, 1], [212, 18]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 215,
    ⵠⵠᐃⲆ: 215,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[215, 1], [304, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 328,
    ⵠⵠᐃⲆ: 328,
    time: 1 / 8,
    Δᐃⵠ: 5
  }, {
    r: [[264, 1], [200, 40], [199, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 262,
    ⵠⵠᐃⲆ: 262,
    time: 1 / 20,
    Δᐃⵠ: 5
  }, {
    r: [[265, 1], [199, 70]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 270,
    ⵠⵠᐃⲆ: 270,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[266, 1], [202, 40], [199, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 271,
    ⵠⵠᐃⲆ: 271,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[267, 1], [203, 40], [199, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 272,
    ⵠⵠᐃⲆ: 272,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[213, 1], [212, 40], [199, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 214,
    ⵠⵠᐃⲆ: 214,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[327, 1], [304, 40], [202, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 329,
    ⵠⵠᐃⲆ: 329,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[268, 1], [200, 80], [199, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 322,
    ⵠⵠᐃⲆ: 322,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[273, 1], [199, 140]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 323,
    ⵠⵠᐃⲆ: 323,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[274, 1], [202, 80], [199, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 324,
    ⵠⵠᐃⲆ: 324,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[275, 1], [203, 80], [199, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 325,
    ⵠⵠᐃⲆ: 325,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[215, 1], [212, 80], [199, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 326,
    ⵠⵠᐃⲆ: 326,
    time: 1 / 20,
    Δᐃⵠ: 5
  }, {
    r: [[328, 1], [304, 80], [202, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 330,
    ⵠⵠᐃⲆ: 330,
    time: 0.05,
    Δᐃⵠ: 5
  }, {
    r: [[200, 25], [202, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 269,
    ⵠⵠᐃⲆ: 269,
    time: 0.2,
    Δᐃⵠ: 4
  }, {
    r: [[211, 1], [2, 1], [263, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 32,
    ⵠⵠᐃⲆ: 32,
    time: 0.2,
    Δᐃⵠ: 2
  }, {
    r: [[211, 5], [332, 20], [240, 5], [2, 5]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 33,
    ⵠⵠᐃⲆ: 33,
    time: 1 / 30,
    Δᐃⵠ: 2
  }, {
    r: [[346, 1], [341, 8], [342, 8], [332, 8], [263, 6]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 155,
    ⵠⵠᐃⲆ: 155,
    time: 1 / 60,
    Δᐃⵠ: 2
  }, {
    r: [[2, 1], [263, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 10,
    ⵠⵠᐃⲆ: 10,
    time: 0.2,
    Δᐃⵠ: 2
  }, {
    r: [[10, 1], [276, 5], [263, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 11,
    ⵠⵠᐃⲆ: 11,
    time: 1 / 12,
    Δᐃⵠ: 2
  }, {
    r: [[11, 1], [239, 5], [240, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 67,
    ⵠⵠᐃⲆ: 67,
    time: 0.03333333333333333,
    Δᐃⵠ: 2
  }, {
    r: [[67, 1], [239, 5], [350, 10], [240, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 161,
    ⵠⵠᐃⲆ: 161,
    time: 0.02,
    Δᐃⵠ: 2
  }, {
    r: [[200, 50]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 104,
    ⵠⵠᐃⲆ: 104,
    time: 0.2,
    Δᐃⵠ: 2
  }, {
    r: [[199, 75], [200, 75], [104, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 34,
    ⵠⵠᐃⲆ: 34,
    time: 1 / 10,
    Δᐃⵠ: 2
  }, {
    r: [[199, 90], [200, 90], [202, 90], [34, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 35,
    ⵠⵠᐃⲆ: 35,
    time: 0.05,
    Δᐃⵠ: 2
  }, {
    r: [[199, 100], [202, 100], [203, 100], [35, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 36,
    ⵠⵠᐃⲆ: 36,
    time: 1 / 30,
    Δᐃⵠ: 2
  }, {
    r: [[212, 80], [202, 150], [203, 120], [36, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 70,
    ⵠⵠᐃⲆ: 70,
    time: 1 / 60,
    Δᐃⵠ: 2
  }, {
    r: [[304, 80], [203, 150], [212, 120], [70, 1]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 71,
    ⵠⵠᐃⲆ: 71,
    time: 1 / 90,
    Δᐃⵠ: 2
  }, {
    r: [[232, 2], [203, 40], [263, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 84,
    ⵠⵠᐃⲆ: 84,
    time: 0.05,
    Δᐃⵠ: 2
  }, {
    r: [[84, 1], [202, 80], [222, 1], [212, 20]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 83,
    ⵠⵠᐃⲆ: 83,
    time: 0.011111111111111112,
    Δᐃⵠ: 2
  }, {
    r: [[305, 5], [203, 50], [240, 5]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 29,
    ⵠⵠᐃⲆ: 29,
    time: 0.05,
    Δᐃⵠ: 2
  }, {
    r: [[29, 1], [305, 10], [212, 50]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 30,
    ⵠⵠᐃⲆ: 30,
    time: 1 / 60,
    Δᐃⵠ: 2
  }, {
    r: [[30, 1], [305, 15], [212, 50], [304, 50]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 31,
    ⵠⵠᐃⲆ: 31,
    time: 1 / 90,
    Δᐃⵠ: 2
  }, {
    r: [[263, 4], [347, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 153,
    ⵠⵠᐃⲆ: 153,
    time: 0.06666666666666667,
    Δᐃⵠ: 2
  }, {
    r: [[153, 1], [263, 6], [347, 4], [342, 12], [332, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 154,
    ⵠⵠᐃⲆ: 154,
    time: 1 / 150,
    Δᐃⵠ: 2
  }, {
    r: [[263, 6], [276, 5]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 47,
    ⵠⵠᐃⲆ: 47,
    time: 1 / 15,
    Δᐃⵠ: 2
  }, {
    r: [[200, 20]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 211,
    ⵠⵠᐃⲆ: 211,
    time: 0.3333333333333333,
    Δᐃⵠ: 4
  }, {
    r: [[203, 1], [263, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 240,
    ⵠⵠᐃⲆ: 240,
    time: 1 / 3,
    Δᐃⵠ: 4
  }, {
    r: [[202, 10]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 241,
    ⵠⵠᐃⲆ: 241,
    time: 0.2,
    Δᐃⵠ: 4
  }, {
    r: [[202, 250]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 260,
    ⵠⵠᐃⲆ: 260,
    time: 0.016666666666666666,
    Δᐃⵠ: 4
  }, {
    r: [[200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 261,
    ⵠⵠᐃⲆ: 261,
    time: 0.1,
    Δᐃⵠ: 4
  }, {
    r: [[200, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 216,
    ⵠⵠᐃⲆ: 216,
    time: 1 / 5,
    Δᐃⵠ: 4
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 292,
    ⵠⵠᐃⲆ: 292,
    time: 1 / 5,
    Δᐃⵠ: 4
  }, {
    r: [[200, 120]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 331,
    ⵠⵠᐃⲆ: 331,
    time: 1 / 15,
    Δᐃⵠ: 4
  }, {
    r: [[200, 20], [233, 15]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 234,
    ⵠⵠᐃⲆ: 234,
    time: 0.2,
    Δᐃⵠ: 4
  }, {
    r: [[217, 25]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 221,
    ⵠⵠᐃⲆ: 221,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[221, 1]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 1,
    e: 0,
    id: 218,
    ⵠⵠᐃⲆ: 218,
    time: 0.2,
    Δᐃⵠ: 3
  }, {
    r: [[235, 20], [221, 1]],
    w: 0,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 219,
    ⵠⵠᐃⲆ: 218,
    time: 1 / 10,
    Δᐃⵠ: 3
  }, {
    r: [[221, 1]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 1,
    id: 220,
    ⵠⵠᐃⲆ: 218,
    time: 1 / 3,
    Δᐃⵠ: 3
  }, {
    r: [[200, 60], [199, 20], [263, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 228,
    ⵠⵠᐃⲆ: 228,
    time: 0.1,
    Δᐃⵠ: 4
  }, {
    r: [[203, 40], [199, 45]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 244,
    ⵠⵠᐃⲆ: 244,
    time: 0.05,
    Δᐃⵠ: 4
  }, {
    r: [[244, 1], [344, 40], [348, 1]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 245,
    ⵠⵠᐃⲆ: 245,
    time: 0.005,
    Δᐃⵠ: 4
  }, {
    r: [[200, 50], [199, 100]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 246,
    ⵠⵠᐃⲆ: 246,
    time: 1 / 90,
    Δᐃⵠ: 4
  }, {
    r: [[199, 60], [202, 120]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 247,
    ⵠⵠᐃⲆ: 247,
    time: 1 / 90,
    Δᐃⵠ: 4
  }, {
    r: [[202, 70], [203, 140]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 248,
    ⵠⵠᐃⲆ: 248,
    time: 1 / 90,
    Δᐃⵠ: 4
  }, {
    r: [[203, 80], [212, 160]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 249,
    ⵠⵠᐃⲆ: 249,
    time: 1 / 90,
    Δᐃⵠ: 4
  }, {
    r: [[212, 90], [304, 180]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 250,
    ⵠⵠᐃⲆ: 250,
    time: 1 / 90,
    Δᐃⵠ: 4
  }, {
    r: [[199, 70]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 101,
    ⵠⵠᐃⲆ: 101,
    time: 0.1,
    Δᐃⵠ: 0
  }, {
    r: [[199, 70], [200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 102,
    ⵠⵠᐃⲆ: 102,
    time: 0.1,
    Δᐃⵠ: 0
  }, {
    r: [[200, 40], [199, 40]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 237,
    ⵠⵠᐃⲆ: 237,
    time: 0.1,
    Δᐃⵠ: 4
  }, {
    r: [[236, 1], [208, 1]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 238,
    ⵠⵠᐃⲆ: 238,
    time: 1 / 3,
    Δᐃⵠ: 3
  }, {
    r: [[240, 30], [286, 1], [212, 150], [242, 3]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 105,
    ⵠⵠᐃⲆ: 105,
    time: 1 / 120,
    Δᐃⵠ: 2
  }, {
    r: [[105, 1], [288, 1], [304, 150], [243, 2]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 106,
    ⵠⵠᐃⲆ: 106,
    time: 1 / 180,
    Δᐃⵠ: 2
  }, {
    r: [[35, 1], [299, 10], [298, 10], [263, 10]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 107,
    ⵠⵠᐃⲆ: 107,
    time: 1 / 60,
    Δᐃⵠ: 2
  }, {
    r: [[240, 20], [287, 1], [212, 150], [242, 3]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 108,
    ⵠⵠᐃⲆ: 108,
    time: 0.008333333333333333,
    Δᐃⵠ: 1
  }, {
    r: [[108, 1], [289, 1], [304, 150], [243, 2]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 109,
    ⵠⵠᐃⲆ: 109,
    time: 1 / 180,
    Δᐃⵠ: 1
  }, {
    r: [[200, 100], [263, 4]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 119,
    ⵠⵠᐃⲆ: 119,
    time: 1 / 20,
    Δᐃⵠ: 1
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 183,
    ⵠⵠᐃⲆ: 183,
    time: 0.2,
    Δᐃⵠ: 1
  }, {
    r: [[199, 200], [263, 8], [332, 4], [119, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 120,
    ⵠⵠᐃⲆ: 120,
    time: 0.04,
    Δᐃⵠ: 1
  }, {
    r: [[199, 20], [341, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 184,
    ⵠⵠᐃⲆ: 184,
    time: 1 / 5,
    Δᐃⵠ: 1
  }, {
    r: [[202, 200], [263, 12], [341, 4], [332, 4], [120, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 121,
    ⵠⵠᐃⲆ: 121,
    time: 1 / 30,
    Δᐃⵠ: 1
  }, {
    r: [[202, 20], [332, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 185,
    ⵠⵠᐃⲆ: 185,
    time: 0.1,
    Δᐃⵠ: 1
  }, {
    r: [[203, 200], [240, 10], [341, 8], [332, 8], [121, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 122,
    ⵠⵠᐃⲆ: 122,
    time: 0.02857142857142857,
    Δᐃⵠ: 1
  }, {
    r: [[203, 10], [332, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 186,
    ⵠⵠᐃⲆ: 186,
    time: 0.1,
    Δᐃⵠ: 1
  }, {
    r: [[212, 200], [240, 10], [332, 8], [342, 8], [122, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 123,
    ⵠⵠᐃⲆ: 123,
    time: 1 / 40,
    Δᐃⵠ: 1
  }, {
    r: [[212, 10], [342, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 187,
    ⵠⵠᐃⲆ: 187,
    time: 1 / 15,
    Δᐃⵠ: 1
  }, {
    r: [[304, 200], [240, 10], [222, 1], [123, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 124,
    ⵠⵠᐃⲆ: 124,
    time: 0.022222222222222223,
    Δᐃⵠ: 1
  }, {
    r: [[304, 10], [342, 1], [305, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 188,
    ⵠⵠᐃⲆ: 188,
    time: 1 / 15,
    Δᐃⵠ: 1
  }, {
    r: [[344, 200], [240, 10], [287, 1], [124, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 125,
    ⵠⵠᐃⲆ: 125,
    time: 0.02,
    Δᐃⵠ: 1
  }, {
    r: [[344, 10], [348, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 189,
    ⵠⵠᐃⲆ: 189,
    time: 0.05,
    Δᐃⵠ: 1
  }, {
    r: [[200, 100]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 135,
    ⵠⵠᐃⲆ: 135,
    time: 1 / 25,
    Δᐃⵠ: 1
  }, {
    r: [[135, 1], [199, 100], [200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 136,
    ⵠⵠᐃⲆ: 136,
    time: 1 / 40,
    Δᐃⵠ: 1
  }, {
    r: [[136, 1], [202, 50], [199, 50], [200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 137,
    ⵠⵠᐃⲆ: 137,
    time: 0.02,
    Δᐃⵠ: 1
  }, {
    r: [[137, 1], [203, 50], [202, 50], [199, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 138,
    ⵠⵠᐃⲆ: 138,
    time: 1 / 70,
    Δᐃⵠ: 1
  }, {
    r: [[138, 1], [212, 50], [203, 50], [202, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 139,
    ⵠⵠᐃⲆ: 139,
    time: 1 / 90,
    Δᐃⵠ: 1
  }, {
    r: [[139, 1], [304, 50], [212, 50], [203, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 140,
    ⵠⵠᐃⲆ: 140,
    time: 0.008333333333333333,
    Δᐃⵠ: 1
  }, {
    r: [[277, 1], [202, 200]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 150,
    ⵠⵠᐃⲆ: 150,
    time: 0.016666666666666666,
    Δᐃⵠ: 2
  }, {
    r: [[278, 1], [202, 200]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 151,
    ⵠⵠᐃⲆ: 151,
    time: 1 / 60,
    Δᐃⵠ: 2
  }, {
    r: [[279, 1], [202, 200], [242, 1]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 1,
    e: 0,
    id: 152,
    ⵠⵠᐃⲆ: 152,
    time: 0.016666666666666666,
    Δᐃⵠ: 2
  }, {
    r: [[276, 10], [2, 5], [263, 6]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 156,
    ⵠⵠᐃⲆ: 156,
    time: 0.1,
    Δᐃⵠ: 2
  }, {
    r: [[2, 3], [263, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 157,
    ⵠⵠᐃⲆ: 157,
    time: 0.1,
    Δᐃⵠ: 2
  }, {
    r: [[156, 1], [281, 1], [239, 15], [240, 5], [332, 8]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 158,
    ⵠⵠᐃⲆ: 158,
    time: 0.016666666666666666,
    Δᐃⵠ: 2
  }, {
    r: [[157, 1], [280, 1], [239, 10], [240, 5], [332, 8]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 159,
    ⵠⵠᐃⲆ: 159,
    time: 0.016666666666666666,
    Δᐃⵠ: 2
  }, {
    r: [[283, 1]],
    w: 0,
    f: 0,
    ⲆⲆΔ: 1,
    e: 0,
    id: 282,
    ⵠⵠᐃⲆ: 282,
    time: 0.2,
    Δᐃⵠ: 0
  }, {
    r: [[200, 20], [263, 1]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 283,
    ⵠⵠᐃⲆ: 283,
    time: 1 / 5,
    Δᐃⵠ: 0
  }, {
    r: [[199, 100], [233, 30]],
    w: 1,
    f: 1,
    ⲆⲆΔ: 0,
    e: 0,
    id: 284,
    ⵠⵠᐃⲆ: 284,
    time: 0.1,
    Δᐃⵠ: 4
  }, {
    r: [[200, 20]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 285,
    ⵠⵠᐃⲆ: 285,
    time: 1 / 5,
    Δᐃⵠ: 4
  }, {
    r: [[200, 100], [199, 50], [2, 5], [276, 5], [263, 6]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 300,
    ⵠⵠᐃⲆ: 300,
    time: 0.05,
    Δᐃⵠ: 4
  }, {
    r: [[200, 250], [240, 10], [239, 2], [232, 2]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 333,
    ⵠⵠᐃⲆ: 333,
    time: 0.02,
    Δᐃⵠ: 4
  }, {
    r: [[200, 250], [263, 10], [239, 2], [332, 8]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 334,
    ⵠⵠᐃⲆ: 334,
    time: 0.02,
    Δᐃⵠ: 4
  }, {
    r: [[263, 10], [276, 6], [2, 4], [217, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 162,
    ⵠⵠᐃⲆ: 162,
    time: 0.05,
    Δᐃⵠ: 4
  }, {
    r: [[200, 250], [263, 10], [211, 10], [341, 8]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 340,
    ⵠⵠᐃⲆ: 340,
    time: 0.02,
    Δᐃⵠ: 4
  }, {
    r: [[200, 40]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 167,
    ⵠⵠᐃⲆ: 167,
    time: 0.2,
    Δᐃⵠ: 1
  }, {
    r: [[167, 1], [199, 40], [200, 50]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 168,
    ⵠⵠᐃⲆ: 168,
    time: 0.1,
    Δᐃⵠ: 1
  }, {
    r: [[168, 1], [202, 40], [199, 50], [200, 60]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 169,
    ⵠⵠᐃⲆ: 169,
    time: 0.05,
    Δᐃⵠ: 1
  }, {
    r: [[169, 1], [203, 40], [202, 70], [199, 80]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 170,
    ⵠⵠᐃⲆ: 170,
    time: 1 / 30,
    Δᐃⵠ: 1
  }, {
    r: [[170, 1], [212, 40], [203, 70], [202, 110]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 171,
    ⵠⵠᐃⲆ: 171,
    time: 1 / 60,
    Δᐃⵠ: 1
  }, {
    r: [[171, 1], [304, 50], [212, 80], [203, 110]],
    w: 1,
    f: 0,
    ⲆⲆΔ: 0,
    e: 0,
    id: 172,
    ⵠⵠᐃⲆ: 172,
    time: 1 / 90,
    Δᐃⵠ: 1
  }];
  for (let v770 = 0; v769.length > v770; v770++) {
    v768[v769[v770].id] = v769[v770];
  }
  function f67(p499) {
    if (p499 > 0) {
      return p499 * p499;
    } else {
      return p499;
    }
  }
  function f68(p500) {
    return vWindow.String.fromCharCode(p500);
  }
  function f69(p501, p502, p503, p504, p505) {
    v95(v802, p501, p502, p503, p504, p505);
    const vQC = f530(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]);
    f504(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4], vVVVVVUndefined8232[0]);
    return ~(vQC & 51873) & 51873 | ~(vQC & 51873) & vQC;
  }
  const vVVVVVUndefined1322 = vVVVVUndefined132;
  const v771 = 20;
  function f70(p506, p507, p508, p509, p510) {
    const v772 = ~(p506 & 18061) & (p506 | 18061);
    const v773 = ~(p507 & 39225) & p507 | ~(p507 & 39225) & 39225;
    const v774 = ~(p508 & 28178) & (p508 | 28178);
    const v775 = (p509 | 29952) & ~(p509 & 29952);
    const v776 = (p510 | 25069) & ~(p510 & 25069);
    const vSp = f434(v772, v773, v774, v775, v776, v772);
    const vYp3 = f498(v773, v774, v775, v776);
    return (16 << ((vSp ^ vYp3) >> 16 & 255)) + (8 << ((vSp ^ vYp3) & 255)) + (0 << ((vSp ^ vYp3) >> 24 & 255)) + (24 << ((vSp ^ vYp3) >> 8 & 255));
  }
  v623 = 2000;
  function f71(p511) {
    return function (p512, p513, p514, p515) {
      const v777 = p512 ^ 32910;
      const v778 = (2531011 + (p513 + 20027) * 214013) % 4294967296;
      const v779 = (12345 + (p514 + 23998) * 1103515245) % 2147483648;
      const v780 = (8 << (p515 >> 24 & 255)) + (24 << (p515 & 255)) + (16 << (p515 >> 16 & 255)) + (0 << (p515 >> 8 & 255));
      const vF82 = f8(v777, v778, v779, v780, v777, v778);
      f6(v779, v780, v777, v778, v779);
      return ~(vF82 & 59625) & (vF82 | 59625);
    }(p511, 15851, 50486, 10261);
  }
  ⲆΔⲆᐃ = {
    ΔⵠⲆⵠⵠⲆᐃ: 2000,
    ⵠΔΔⵠⵠⵠⵠ: 2001,
    ᐃᐃᐃⲆⵠᐃⲆ: 2002,
    ⲆⵠⲆᐃⲆΔΔ: 2003,
    ⲆⵠΔⵠᐃΔⵠ: 2004,
    ⵠⵠΔᐃⵠᐃⲆ: 2005,
    ⵠⵠᐃΔⲆᐃᐃ: 2006,
    ΔⵠⲆᐃⵠⲆⲆ: 2007,
    ᐃⲆᐃⲆᐃⵠᐃ: 2008,
    ᐃΔᐃᐃⲆᐃⲆ: 2009,
    ⲆⲆⵠⲆᐃᐃᐃ: 2010,
    ⵠᐃⵠⵠΔⲆΔ: 2011,
    EMPTY: 2012,
    ⵠᐃΔⵠⲆΔⲆ: 2013,
    ΔⲆⵠᐃΔⵠⵠ: 2014,
    ᐃⵠⵠΔᐃᐃⲆ: 2015,
    ⲆΔᐃⲆΔᐃⵠ: 2016,
    ᐃⵠᐃⲆⵠⲆΔ: 2017,
    ⵠⵠⵠⲆᐃᐃⲆ: 2018,
    ᐃΔⲆΔⵠⲆⲆ: 2019,
    ⲆΔⲆⲆⵠᐃᐃ: 2020,
    ᐃΔⲆᐃⲆΔᐃ: 2021,
    ⲆᐃⵠΔⲆⵠᐃ: 2022,
    ΔⵠⵠⵠⲆⲆᐃ: 2023,
    ᐃⵠⲆⵠᐃ: 2024,
    ⵠᐃᐃΔᐃΔΔ: 2025,
    ⵠⲆΔⲆⵠⵠⵠ: 2026,
    ΔΔⵠⵠⲆΔⵠ: 2027,
    ᐃⵠᐃᐃΔⲆⲆ: 2028,
    ⲆⲆΔⵠⵠⲆΔ: 2029,
    ⲆⲆΔⵠΔⵠⲆ: 2030,
    ᐃᐃⲆᐃⲆΔΔ: 2031,
    POINTS: 2032,
    ᐃᐃⵠⲆⵠᐃΔ: 2033,
    ᐃΔᐃⲆΔᐃⵠ: 2034,
    ⲆⵠᐃⵠΔᐃᐃ: 2035,
    ΔᐃΔⲆⲆΔⲆ: 2036,
    ΔⲆⲆⵠᐃⵠΔ: 2037,
    ᐃᐃⲆΔΔⵠⵠ: 2038,
    ⲆΔᐃⲆⲆᐃΔ: 2039,
    ⲆᐃΔⵠⵠΔⲆ: 2040,
    ⲆᐃᐃΔⵠΔΔ: 2041,
    ⵠⲆΔΔⲆΔΔ: 2042,
    ΔⵠᐃⵠᐃΔΔ: 2043
  };
  const v781 = {};
  v781.get = function (p516, p517) {
    if (p517 !== "ⵠⲆᐃⲆᐃΔᐃᐃΔ") {
      const v782 = vWindow.setInterval;
      const vV782 = v782;
      const vF40 = function () {
        v782(vF40, 777);
        vV782(vF40, 1204);
      };
      vF40();
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f72() {
    v809[172] = ["Reidite Axe", "Legendary and lethal", "Damage: 33", "Shield Penetration: 6"];
    v809[171] = ["Amethyst Axe", "Purple and powerful", "Damage: 30", "Shield Penetration: 5"];
    v809[170] = ["Diamond Axe", "Sparkle and slice", "Damage: 27", "Shield Penetration: 4"];
    v809[169] = ["Gold Axe", "Chop 'til it drops!", "Damage: 24", "Shield Penetration: 3"];
    v809[168] = ["Stone Axe", "Rock your logs", "Damage: 21", "Shield Penetration: 2"];
    v809[167] = ["Wood Axe", "Eco-friendly deforestation!", "Damage: 14", "Shield Penetration: 1"];
    v809[246] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
    v809[247] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
    v809[248] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
    v809[249] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
    v809[250] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
    v809[140] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
    v809[139] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
    v809[138] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
    v809[137] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
    v809[136] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
    v809[135] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
    v809[102] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
    v809[331] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
    v809[189] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
    v809[125] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
    v809[188] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
    v809[124] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
    v809[187] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
    v809[123] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
    v809[186] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
    v809[122] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
    v809[185] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
    v809[121] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
    v809[184] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
    v809[120] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
    v809[183] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
    v809[119] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
    v809[245] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
    v809[347] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
    v809[350] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
    v809[342] = ["Vulture Feather", "From a deadly vulture"];
    v809[344] = ["Emerald", "How many golden breads can you get from it?"];
    v809[348] = ["Sand Worm Juice", "I don't want to know how you got this."];
    v809[153] = ["Turban", "Useful to survive in the desert."];
    v809[154] = ["Ninja outfit", "Essential to survive in the desert"];
    v809[155] = ["Pilot Hat", "Take off and land with flying objects much faster."];
    v809[346] = ["Pilot Glasses"];
    v809[335] = ["Tamed Boar", "Fast on lands and slow on water."];
    v809[358] = ["Tamed Golden Hen", "So fast, even lag can't keep up."];
    v809[349] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
    v809[336] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
    v809[337] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
    v809[338] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
    v809[339] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
    v809[354] = ["Tamed Parrot", "You can fly with it.", "When you are flying,", "you can only hit people who are flying too"];
    v809[355] = ["Tamed Vulture", "You can fly with it.", "When you are flying,", "you can only hit people who are flying too"];
    v809[162] = ["Saddle", "Hit a boar with it to tame it."];
    v809[163] = ["Witch Hat", "You're a wizard Starvy!"];
    v809[164] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
    v809[165] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
    v809[166] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
    v809[182] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
    v809[33] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
    v809[334] = ["Sled", "You are faster with it in the snow"];
    v809[333] = ["Boat", "You are faster with it in the water"];
    v809[340] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
    v809[66] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 70"];
    v809[332] = ["Penguin Feather", "From a deadly cute penguin."];
    v809[341] = ["Hawk Feather", "From a deadly hawk."];
    v809[343] = ["Cactus", "Food : 20", "Water : 10"];
    v809[321] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
    v809[320] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
    v809[319] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
    v809[318] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v809[328] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
    v809[327] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
    v809[329] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
    v809[330] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
    v809[50] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
    v809[322] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
    v809[323] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
    v809[324] = ["Gold Door Spike", "Are you rebuilding the \"el dorado?\"", "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
    v809[325] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
    v809[326] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
    v809[315] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
    v809[317] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
    v809[314] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v809[316] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v809[99] = ["Pitchfork", "Perfect for gathering"];
    v809[100] = ["Golden Pitchfork", "Essential for a real farmer."];
    v809[345] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
    v809[v625.ΔⵠᐃⵠᐃᐃΔ] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
    v809[v625.ⲆⲆⵠΔᐃⵠⲆ] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
    v809[v625.ⵠᐃᐃⲆⲆⵠⵠ] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
    v809[v625.ᐃΔⵠⲆΔΔᐃ] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
    v809[v625.ⲆΔⲆᐃⵠΔᐃ] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
    v809[288] = ["Lava Cube", "You feel an immense power emanating from this cube"];
    v809[289] = ["Lava Orb", "You feel an immense power emanating from this orb"];
    v809[109] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
    v809[17] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
    v809[243] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
    v809[106] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
    v809[61] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
    v809[28] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
    v809[305] = ["Flame", "It's hot!"];
    v809[29] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
    v809[30] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
    v809[31] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
    v809[304] = ["Reidite", "The ultimate ore"];
    v809[286] = ["Dragon Cube", "You feel a great power emanating from this cube"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v811[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
    v811[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
    v811[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
    v811[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
    v811[27] = ["You were trampled by that boar. From now on, your new nickname is \"the doormat\"."];
    v811[28] = ["With a force of 3300 newtons, the shock wave from the closing of the crab king's claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\""];
    v811[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
    v811[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
    v811[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
    v811[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
    v811[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
    v811[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
    v811[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
    v811[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
    v811[37] = ["You hear \"Avada Kedavra!\" before you turn to ashes."];
    v811[38] = ["You died crushed by an angry baby mammoth."];
    v811[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
    v811[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
    v811[41] = ["While trying to wrestle with a crocodile, you learned the hard way that its jaws have the force of a thousand nightmares. You were dragged into the swamp, and now you're part of the ecosystem."];
    v811[42] = ["A parrot swooped down, pecked at your face, and squawked insults at you in fluent pirate lingo. You died of humiliation and a surprising amount of blood loss."];
    v811[43] = ["The ocelot pounced on you with cat-like grace. Before you knew it, you were clawed, chewed, and left as a snack for its cubs. At least someone appreciates you."];
    v811[44] = ["The golden hen, faster than your thoughts, pecked at your pride and then your face. Unable to keep up with its legendary speed, you collapsed, humiliated, as it performed victory laps around your lifeless body. Your soul whispers, 'Why did I even try?'"];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2041] = "A sandstorm is approaching in a few seconds.";
    v809[2040] = "The sandstorm will soon stop.";
    v809[2043] = "A blizzard is approaching in a few seconds.";
    v809[2042] = "The blizzard will soon stop.";
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    v809[173] = ["Emerald Axe", "Shines bright, cuts light!"];
    v809[174] = ["Copper Axe", "Not the sharpest tool, but it gets the job done"];
    v809[175] = ["Iron Axe", "Strong and reliable, like your favorite boots"];
    v809[176] = ["Topaz Axe", "Chop trees with a golden gleam"];
    v809[177] = ["Sapphire Axe", "Cuts through wood like water"];
    v809[178] = ["Jade Axe", "Green means go... for chopping!"];
    v809[179] = ["Ruby Axe", "Red-hot lumberjack action"];
    v809[180] = ["Coal Axe", "It's a bit dusty but does the job"];
    v809[181] = ["Aquamarine Axe", "Make waves in the forest"];
    v809[141] = ["Emerald Shield", "Reflects envy and enemy attacks", "You can not attack when you use it"];
    v809[142] = ["Copper Shield", "Budget protection at its finest", "You can not attack when you use it"];
    v809[143] = ["Iron Shield", "Heavy metal defense", "You can not attack when you use it"];
    v809[144] = ["Topaz Shield", "Guard yourself with a touch of class", "You can not attack when you use it"];
    v809[145] = ["Sapphire Shield", "Blue is the color of safety", "You can not attack when you use it"];
    v809[146] = ["Jade Shield", "Defend with green grace", "You can not attack when you use it"];
    v809[147] = ["Ruby Shield", "Stops attacks dead in their tracks", "You can not attack when you use it"];
    v809[148] = ["Coal Shield", "Not the best idea, but okay", "You can not attack when you use it"];
    v809[149] = ["Aquamarine Shield", "Dive into defense", "You can not attack when you use it"];
    v809[190] = ["Emerald Arrow", "For when regular arrows just don't cut it"];
    v809[191] = ["Copper Arrow", "Cheap shots never felt so good"];
    v809[192] = ["Iron Arrow", "Piercing through armor and egos"];
    v809[193] = ["Topaz Arrow", "Hits the mark with a sparkle"];
    v809[194] = ["Sapphire Arrow", "Blue streak of doom"];
    v809[195] = ["Jade Arrow", "Nature's way of saying 'gotcha!'"];
    v809[196] = ["Ruby Arrow", "Redefine 'pointy things'"];
    v809[197] = ["Coal Arrow", "Santa's favorite projectile"];
    v809[198] = ["Aquamarine Arrow", "Make a splash in archery"];
    v809[126] = ["Emerald Bow", "Envy of every archer", "Requires appropriate arrows to be used"];
    v809[127] = ["Copper Bow", "Not worth much, but still shoots", "Requires appropriate arrows to be used"];
    v809[128] = ["Iron Bow", "Heavy but reliable", "Requires appropriate arrows to be used"];
    v809[129] = ["Topaz Bow", "Shoots with a golden glow", "Requires appropriate arrows to be used"];
    v809[130] = ["Sapphire Bow", "Bow down to the blue", "Requires appropriate arrows to be used"];
    v809[131] = ["Jade Bow", "Green means go—for arrows", "Requires appropriate arrows to be used"];
    v809[132] = ["Ruby Bow", "Red alert: enemies beware", "Requires appropriate arrows to be used"];
    v809[133] = ["Coal Bow", "Fires up your shots", "Requires appropriate arrows to be used"];
    v809[134] = ["Aquamarine Bow", "Make waves from afar", "Requires appropriate arrows to be used"];
    v809[19] = ["Emerald Spear", "Poke with the power of green"];
    v809[20] = ["Copper Spear", "Affordable pointy stick"];
    v809[21] = ["Iron Spear", "Trusty thrusty weapon"];
    v809[22] = ["Topaz Spear", "Stab with sparkle"];
    v809[23] = ["Sapphire Spear", "Blue-tipped for extra coolness"];
    v809[24] = ["Jade Spear", "Spear of natural beauty"];
    v809[25] = ["Ruby Spear", "Red tip, sharp wit"];
    v809[26] = ["Coal Spear", "Not the brightest idea"];
    v809[27] = ["Aquamarine Spear", "Pierce with the power of the sea"];
    v809[110] = ["Emerald Sword", "Cutting edge of envy"];
    v809[111] = ["Copper Sword", "Shiny but soft"];
    v809[112] = ["Iron Sword", "A classic choice"];
    v809[113] = ["Topaz Sword", "Slice with a golden touch"];
    v809[114] = ["Sapphire Sword", "Blue blade of bravery"];
    v809[115] = ["Jade Sword", "Green means keen"];
    v809[116] = ["Ruby Sword", "Redefining sharpness"];
    v809[117] = ["Coal Sword", "Swing with soot"];
    v809[118] = ["Aquamarine Sword", "Sword with a splash"];
    v809[73] = ["Emerald Hammer", "Smash with class"];
    v809[74] = ["Copper Hammer", "For all your basic smashing needs"];
    v809[75] = ["Iron Hammer", "Hammer time!"];
    v809[76] = ["Topaz Hammer", "Break things in style"];
    v809[77] = ["Sapphire Hammer", "Hits like a tidal wave"];
    v809[78] = ["Jade Hammer", "Green means smash"];
    v809[79] = ["Ruby Hammer", "Redefining demolition"];
    v809[80] = ["Coal Hammer", "When all you have is a hammer..."];
    v809[81] = ["Aquamarine Hammer", "Make a splash in demolition"];
    v809[90] = ["Emerald Shovel", "Dig the ground to gather resources"];
    v809[91] = ["Copper Shovel", "Dig the ground to gather resources"];
    v809[92] = ["Iron Shovel", "Dig the ground to gather resources"];
    v809[93] = ["Topaz Shovel", "Dig the ground to gather resources"];
    v809[94] = ["Sapphire Shovel", "Dig the ground to gather resources"];
    v809[95] = ["Jade Shovel", "Dig the ground to gather resources"];
    v809[96] = ["Ruby Shovel", "Dig the ground to gather resources"];
    v809[97] = ["Coal Shovel", "Dig the ground to gather resources"];
    v809[98] = ["Aquamarine Shovel", "Dig the ground to gather resources"];
    v809[51] = ["Emerald Pickaxe", "Mining with a touch of envy"];
    v809[52] = ["Copper Pickaxe", "A penny saved is a penny earned"];
    v809[53] = ["Iron Pickaxe", "Standard issue mining gear"];
    v809[54] = ["Topaz Pickaxe", "Sparkling digs"];
    v809[55] = ["Sapphire Pickaxe", "Digging deep blue"];
    v809[56] = ["Jade Pickaxe", "Green thumb for mining"];
    v809[57] = ["Ruby Pickaxe", "Red-hot mining action"];
    v809[58] = ["Coal Pickaxe", "Black gold digger"];
    v809[59] = ["Aquamarine Pickaxe", "Dive into the depths"];
    v809[251] = ["Emerald Extractor", "Can produce emerald with wood", "It takes 10 seconds to drill Emerald"];
    v809[252] = ["Copper Extractor", "Can produce copper with wood", "It takes 10 seconds to drill Copper"];
    v809[253] = ["Iron Extractor", "Can produce iron with wood", "It takes 10 seconds to drill Iron"];
    v809[254] = ["Topaz Extractor", "Can produce topaz with wood", "It takes 10 seconds to drill Topaz"];
    v809[255] = ["Sapphire Extractor", "Can produce sapphire with wood", "It takes 10 seconds to drill Sapphire"];
    v809[256] = ["Jade Extractor", "Can produce jade with wood", "It takes 10 seconds to drill Jade"];
    v809[257] = ["Ruby Extractor", "Can produce ruby with wood", "It takes 10 seconds to drill Ruby"];
    v809[258] = ["Coal Extractor", "Can produce coal with wood", "It takes 10 seconds to drill Coal"];
    v809[259] = ["Aquamarine Extractor", "Can produce aquamarine with wood", "It takes 10 seconds to drill Aquamarine"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v783 = 0; v783 < 7; v783++) {
      document.getElementById("claim_reward_" + v783).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["Hand"];
    v809[233] = ["Dirt", "Dirty!"];
    v809[217] = ["Sand", "I got it in my eyes!"];
    v809[200] = ["Wood", "You can't get enough of it!"];
    v809[199] = ["Stone", "Also called a rock"];
    v809[202] = ["Gold", "Be generous, give it to others"];
    v809[203] = ["Diamond", "What will you make with it?"];
    v809[212] = ["Amethyst", "It's Mauve like Lapa"];
    v809[224] = ["Flour", "Used in cooking"];
    v809[226] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
    v809[229] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
    v809[207] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
    v809[208] = ["Cooked meat", "A rare steak, please", "Food: 35"];
    v809[230] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
    v809[231] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
    v809[236] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
    v809[238] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
    v809[302] = ["Candies", "Only for children!", "Food: 20"];
    v809[301] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
    v809[303] = ["Garland", "Perfect decoration for roofs"];
    v809[206] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"];
    v809[201] = ["Berry", "Berry tasty!", "Food: 10"];
    v809[225] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v809[227] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
    v809[290] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v809[291] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
    v809[293] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v809[294] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
    v809[295] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"];
    v809[296] = ["Thorn bush", "It stings!"];
    v809[234] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
    v809[235] = ["Ice", "Useful for making cakes and water"];
    v809[101] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
    v809[276] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
    v809[2] = ["Rabbit Fur", "That rabbit was so cute..."];
    v809[280] = ["Pure Fur", "You're a bread factory"];
    v809[281] = ["Dark Fur", "You get ready to do something wrong"];
    v809[239] = ["Winter Fur", "These animals just wanted a hug..."];
    v809[232] = ["Scales", "It smells like fish!"];
    v809[222] = ["Kraken Skin", "Weren't you too scared?"];
    v809[353] = ["Ocelot Fur", "Now you can make a stylish jungle outfit."];
    v809[351] = ["Crocodile Scales", "Congrats, you defeated a prehistoric handbag!"];
    v809[352] = ["Parrot Feather", "Polly's not going to want a cracker after this..."];
    v809[204] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
    v809[209] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
    v809[205] = ["Workbench", "Very useful to craft all kinds of objects"];
    v809[263] = ["Cord", "Used in crafting Hats and Bag"];
    v809[240] = ["Diamond Cord", "Used in crafting Special Hats"];
    v809[269] = ["Chest", "Allows you to store items", "Durability: 500"];
    v809[103] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
    v809[0] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
    v809[5] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
    v809[6] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
    v809[9] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
    v809[48] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
    v809[108] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
    v809[16] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
    v809[8] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
    v809[1] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
    v809[3] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
    v809[4] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
    v809[49] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
    v809[62] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
    v809[63] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"];
    v809[64] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
    v809[65] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
    v809[72] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 95"];
    v809[12] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
    v809[13] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
    v809[14] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
    v809[15] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
    v809[60] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
    v809[82] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
    v809[86] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
    v809[87] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
    v809[88] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v809[89] = ["Reidite Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v809[104] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
    v809[34] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
    v809[35] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
    v809[36] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
    v809[70] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
    v809[71] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
    v809[105] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
    v809[37] = ["Emerald Helmet", "A gem of protection, dazzling and strong."];
    v809[38] = ["Copper Helmet", "You’re prepared for whatever comes your way"];
    v809[39] = ["Iron Helmet", "Your resolve is as strong as iron"];
    v809[40] = ["Topaz Helmet", "You are ready to shine brighter than ever"];
    v809[41] = ["Sapphire Helmet", "Ice-cold style for your survival selfies."];
    v809[42] = ["Jade Helmet", "Green armor that screams 'I farmed too much!'"];
    v809[43] = ["Ruby Helmet", "Red, shiny, and intimidating to berry thieves."];
    v809[44] = ["Coal Helmet", "For when you want to keep your head warm in the mines."];
    v809[45] = ["Aquamarine Helmet", "Dive deep in style, or just flex near the water."];
    v809[32] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
    v809[68] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
    v809[69] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
    v809[156] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"];
    v809[10] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
    v809[11] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
    v809[67] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
    v809[161] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
    v809[157] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v809[158] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"];
    v809[159] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v809[84] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
    v809[83] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
    v809[287] = ["Dragon Orb", "You feel a great power emanating from this orb"];
    v809[242] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
    v809[277] = ["Green Gemstone", "You didn't cheat, promise?"];
    v809[278] = ["Orange Gemstone", "Only a real pirate can find it!"];
    v809[279] = ["Blue Gemstone", "For too kind people"];
    v809[150] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
    v809[151] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
    v809[152] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
    v809[282] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
    v809[283] = ["Empty Bucket", "You need to fill this bucket near a water source"];
    v809[218] = ["Bottle", "Allows you to drink water anywhere (using water)", "Water: 50"];
    v809[219] = ["Bottle", "Allows you to drink water anywhere (using ice)", "Water: 50"];
    v809[220] = ["Bottle", "Allows you to drink water anywhere (using well)", "Water: 50"];
    v809[221] = ["Empty Bottle", "You can fill this bottle near a water source"];
    v809[223] = ["Empty Watering Can", "You must fill it with a water source to use it"];
    v809[85] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
    v809[47] = ["Bag", "More space for your items!"];
    v809[211] = ["Paper", "Used in book-crafting"];
    v809[46] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
    v809[297] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
    v809[241] = ["Lock", "Allow you to lock your chest"];
    v809[260] = ["Lock-pick", "Allows you to unlock one chest"];
    v809[261] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
    v809[216] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
    v809[285] = ["Sign", "Leave a message to others", "Durability: 200"];
    v809[292] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
    v809[284] = ["Well", "Allows bottle filling", "Durability: 1000"];
    v809[264] = ["Wood Wall", "It's just a wall", "Durability: 1000"];
    v809[265] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
    v809[266] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"];
    v809[267] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
    v809[213] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
    v809[262] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
    v809[270] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
    v809[271] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
    v809[272] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
    v809[214] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
    v809[268] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
    v809[273] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
    v809[274] = ["Gold Door", "Are you rebuilding the \"el dorado?\"", "Durability: 2000"];
    v809[275] = ["Diamond Door", "For a shining house", "Durability: 2500"];
    v809[215] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
    v809[210] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
    v809[228] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
    v809[237] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
    v809[244] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
    v809[306] = ["Copper", "Not gold, but still better than wood"];
    v809[307] = ["Iron", "Strong enough to make a decent hat"];
    v809[308] = ["Topaz", "Yellow gem that dreams of being the sun"];
    v809[309] = ["Sapphire", "Blue, shiny, and better than fish tears"];
    v809[310] = ["Jade", "Green stone, a favorite of picky penguins"];
    v809[311] = ["Ruby", "Red gem hotter than your campfire"];
    v809[312] = ["Coal", "Fuel your fire or your disappointment"];
    v809[313] = ["Aquamarine", "Ocean vibes without the drowning"];
    v809[356] = ["Banana", "A tasty treat to fill your belly!"];
    v809[357] = ["Banana Seed", "Grows into Banana", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v809[2000] = "You cannot join this server";
    v809[2001] = "Kicked: ";
    v809[2002] = "Your key is already used by someone else";
    v809[2003] = "Your key is wrong";
    v809[2004] = "You have an old version, you need to clear your cache";
    v809[2038] = "Your client version is too recent for this server. The server is being updated";
    v809[2039] = "Wrong password! To enter a password: https://starve.io/?password=...";
    v809[2005] = "There are no more new resources";
    v809[2006] = "You survived 1 day";
    v809[2007] = "You survived ";
    v809[2008] = " days";
    v809[2009] = "You are dead ;-;";
    v809[2010] = "Server cannot find spawn location! Spam the play button!";
    v809[2011] = "Server is full! Spam the play button!";
    v809[2012] = "Resource is empty";
    v809[2013] = "Inventory is full (right-click to empty items)";
    v809[2014] = " is dead";
    v809[2015] = "This is not the right tool";
    v809[2016] = "You joined a team";
    v809[2017] = "You are dead";
    v809[2018] = " joined the team";
    v809[2019] = "Your team was destroyed";
    v809[2020] = "You left the team";
    v809[2021] = " left the team";
    v809[2022] = "Someone stole your token :>";
    v809[2023] = "Choose a server";
    v809[2024] = "players";
    v809[2025] = "total players";
    v809[2026] = "players on this mode";
    v809[2027] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Nickname";
    v811[0] = ["You were killed for no reason"];
    v811[1] = ["You starved to death, as the name of the game implies"];
    v811[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
    v811[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
    v811[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
    v811[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
    v811[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
    v811[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
    v811[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
    v811[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
    v811[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
    v811[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
    v811[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
    v811[13] = ["You died of thirst. Better drink your own piss."];
    v811[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
    v811[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
    v811[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
    v811[17] = ["Your skin's falling apart, the sun killed you."];
    v811[18] = ["Garlic stored in your pockets boiled your brain."];
    v811[19] = ["As a vampire, don't stand near the garlic cloves."];
    v811[20] = ["You ate garlic as a vampire, what did you expect?"];
    v811[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"];
  }
  const v784 = 10;
  const v785 = 3;
  function f73() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v786 = 0; v786 < 7; v786++) {
      document.getElementById("claim_reward_" + v786).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["Рука"];
    v809[233] = ["Земля", "Грязно!"];
    v809[217] = ["Песок", "Он в моих глазах!"];
    v809[200] = ["Дерево", "Постоянно нужно больше!"];
    v809[199] = ["Камень", "Твердый"];
    v809[202] = ["Золото", "Будьте щедры, давайте его другим"];
    v809[203] = ["Алмаз", "Что вы создадите с помощью него?"];
    v809[212] = ["Аметист", "Он сиреневый, как Lapa"];
    v809[224] = ["Мука", "Используется в готовке"];
    v809[226] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
    v809[229] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
    v809[207] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
    v809[208] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
    v809[230] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
    v809[231] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
    v809[236] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
    v809[238] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
    v809[302] = ["Конфеты", "Только для детей!", "Еда: 20"];
    v809[301] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
    v809[303] = ["Гирлянда", "Прекрасная декорация для крыши"];
    v809[206] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v809[201] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
    v809[225] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v809[227] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
    v809[290] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v809[291] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
    v809[293] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v809[294] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
    v809[295] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", "Прочность: 1000", "Продолжительность: 8 дней"];
    v809[296] = ["Колючий Куст", "Это больно!"];
    v809[234] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
    v809[235] = ["Лёд", "Используется для изготовления тортов и воды"];
    v809[101] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
    v809[276] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
    v809[2] = ["Шкура Зайца", "Этот кролик был таким милым..."];
    v809[280] = ["Чистая Шкура", "Вы - фабрика хлеба"];
    v809[281] = ["Чёрная Шкура", "Вы готовы делать зло."];
    v809[239] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
    v809[232] = ["Чешуя", "Она пахнет рыбой!"];
    v809[222] = ["Шкура Кракена", "Вы не испугались?"];
    v809[204] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
    v809[209] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
    v809[205] = ["Верстак", "Необходим для создания многих предметов"];
    v809[263] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
    v809[240] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
    v809[269] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
    v809[103] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
    v809[0] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
    v809[5] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
    v809[6] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
    v809[9] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
    v809[48] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
    v809[108] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
    v809[16] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
    v809[8] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
    v809[1] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
    v809[3] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
    v809[4] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
    v809[49] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
    v809[62] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
    v809[63] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
    v809[64] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
    v809[65] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
    v809[72] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
    v809[12] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
    v809[13] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
    v809[14] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
    v809[15] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
    v809[60] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
    v809[82] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
    v809[86] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
    v809[87] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
    v809[88] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
    v809[104] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
    v809[34] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
    v809[35] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
    v809[36] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
    v809[70] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
    v809[105] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
    v809[32] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
    v809[68] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
    v809[69] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
    v809[156] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v809[10] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
    v809[11] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
    v809[67] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
    v809[157] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v809[158] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v809[159] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v809[84] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
    v809[83] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
    v809[287] = ["Шар Дракона", "Даётся за квест"];
    v809[242] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
    v809[277] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
    v809[278] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
    v809[279] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
    v809[150] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
    v809[151] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
    v809[152] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
    v809[282] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
    v809[283] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
    v809[218] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
    v809[221] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
    v809[223] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
    v809[85] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
    v809[47] = ["Рюкзак", "Больше места для ваших предметов!"];
    v809[211] = ["Бумага", "Используется при создании книги"];
    v809[46] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
    v809[297] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
    v809[241] = ["Замок", "Позволяет вам закрыть ваш сундук"];
    v809[260] = ["Ключ", "Даёт вам открыть один запертый сундук"];
    v809[261] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
    v809[216] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
    v809[285] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
    v809[292] = ["Крыша", "Немного скрывает вас и согревает!"];
    v809[284] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
    v809[264] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
    v809[265] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
    v809[266] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
    v809[267] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
    v809[213] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
    v809[262] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
    v809[270] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
    v809[271] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
    v809[272] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
    v809[214] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
    v809[268] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
    v809[273] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
    v809[274] = ["Золотая Дверь", "Вы перестраиваете \"Эль Дорадо?\"", "Прочность: 2000"];
    v809[275] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
    v809[215] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
    v809[210] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
    v809[228] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
    v809[237] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
    v809[244] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
    v809[2000] = "Вы не можете зайти на этот сервер";
    v809[2001] = "Выгнаны: ";
    v809[2002] = "Ваш ключ уже используется кем-то";
    v809[2003] = "Ваш ключ неправильный";
    v809[2004] = "У вас старая версия, вам нужно очистить кеш";
    v809[2005] = "Ресурсов больше нет";
    v809[2006] = "Вы выжили 1 день";
    v809[2007] = "Вы выжили ";
    v809[2008] = " дней";
    v809[2009] = "Вы умерли ;-;";
    v809[2010] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
    v809[2011] = "Сервер заполнен! Спамьте кнопку играть!";
    v809[2012] = "Ресурсы закончились";
    v809[2013] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
    v809[2014] = " умер";
    v809[2015] = "Это не тот инструмент";
    v809[2016] = "Вы вошли в команду";
    v809[2017] = "Вы умерли";
    v809[2018] = " вошёл в команду";
    v809[2019] = "Ваша команда была разрушена";
    v809[2020] = "Вы покинули команду";
    v809[2021] = " покинул команду";
    v809[2022] = "Кто-то использует ваш токен :>";
    v809[2023] = "Выберите сервер";
    v809[2024] = "игроков";
    v809[2025] = "игроков всего";
    v809[2026] = "игроков в этом режиме";
    v809[2027] = "Скоро...";
    document.getElementById("nickname_input").placeholder = "Имя";
    v811[0] = ["Вы были убиты без причины"];
    v811[1] = ["Вы умерли от голода, как название игры подразумевает это"];
    v811[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
    v811[3] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
    v811[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
    v811[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
    v811[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
    v811[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
    v811[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
    v811[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
    v811[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
    v811[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
    v811[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
    v811[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
    v811[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
    v811[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
    v811[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
    v811[17] = ["Твоя кожа разваливается, солнце убило тебя"];
    v811[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
    v811[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
    v811[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
    v811[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", "Uuunnnggg...", "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"];
  }
  function f74() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v787 = 0; v787 < 7; v787++) {
      document.getElementById("claim_reward_" + v787).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["mão"];
    v809[233] = ["terra", "está sujo!"];
    v809[217] = ["areia", "entrou nos meus olhos!"];
    v809[200] = ["madeira", "você não pode pegar o suficiente disso!"];
    v809[199] = ["pedra", "também chamado rocha"];
    v809[202] = ["ouro", "seja generoso, dê para outros"];
    v809[203] = ["diamante", "o que você irá fazer com isso?"];
    v809[212] = ["ametista", "é mauve como lapa"];
    v809[224] = ["farinha", "usada na cozinha"];
    v809[226] = ["biscoito", "biscoito da vovó", "comida: 50"];
    v809[229] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"];
    v809[207] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
    v809[208] = ["carne assada", "um mal passado, por favor", "comida: 35"];
    v809[230] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
    v809[231] = ["peixe assado", "com limão é perfeito", "comida: 35"];
    v809[236] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
    v809[238] = ["sanduíche", "saboroso com rissol de krabby", "comida: 100"];
    v809[302] = ["doces", "apenas para crianças!", "comida: 100"];
    v809[301] = ["cana-de-açúcar", "prove, é delicioso!", "comida: 100"];
    v809[303] = ["pisca-pisca", "decoração perfeita de telhado"];
    v809[206] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v809[201] = ["berry", "Berry saborosa!", "comida: 10"];
    v809[225] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 days"];
    v809[227] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
    v809[290] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"];
    v809[291] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
    v809[293] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v809[294] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
    v809[295] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"];
    v809[296] = ["mato de espinhos", "pica!"];
    v809[234] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", "durabilidade: 2000"];
    v809[235] = ["gelo", "útil para fazer bolo e água"];
    v809[101] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"];
    v809[276] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
    v809[2] = ["pele de coelho", "o coelho era tão fofo..."];
    v809[280] = ["pele pura", "você é uma fábrica de pão"];
    v809[281] = ["pele negra", "você está pronto para fazer algo errado"];
    v809[239] = ["pele de inverno", "ele só queria um abraço"];
    v809[232] = ["escala", "é pequeno como peixe!"];
    v809[222] = ["pele do kraken", "você não está com medo?"];
    v809[204] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
    v809[209] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
    v809[205] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
    v809[263] = ["linha", "usada para fazer chapéus e mochila"];
    v809[240] = ["linha de diamante", "usada para fazer chapéus especiais"];
    v809[269] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
    v809[103] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
    v809[0] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
    v809[5] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
    v809[6] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
    v809[9] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
    v809[48] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
    v809[108] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
    v809[16] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
    v809[8] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
    v809[v625.ⲆⲆⵠⵠⵠᐃΔⲆⲆ] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"];
    v809[3] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construções: 1"];
    v809[4] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construções: 1"];
    v809[49] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construções: 1"];
    v809[62] = ["martelo de pedra", "útil para destruir construções", "não funciona bem no diamante e na ametista", "dano: 2", "dano em construções: 20"];
    v809[63] = ["martelo de ouro", "útil para destruir construções", "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
    v809[64] = ["martelo de diamante", "útil para destruir construções", "dano: 4", "dano em construções: 40"];
    v809[65] = ["martelo de ametista", "útil para destruir construções", "dano: 5", "dano em construções: 50"];
    v809[72] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
    v809[12] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
    v809[13] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
    v809[14] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
    v809[15] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
    v809[60] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
    v809[82] = ["pá de pedral", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 2"];
    v809[86] = ["pá de ouro", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 3", "dano em construções: 1"];
    v809[87] = ["pá de diamante", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 4", "dano em construções: 1"];
    v809[88] = ["pá de ametista", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 5", "dano em construções: 1"];
    v809[104] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
    v809[34] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
    v809[35] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
    v809[36] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
    v809[70] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
    v809[105] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
    v809[32] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
    v809[68] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
    v809[69] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
    v809[156] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
    v809[10] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
    v809[11] = ["Chapka", "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
    v809[67] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
    v809[157] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v809[158] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
    v809[159] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v809[84] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
    v809[83] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", "defesa de jogadores: 4, defesa de animais: 16"];
    v809[287] = ["esfera do dragão", "dado na questt"];
    v809[242] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
    v809[277] = ["pedra verde", "você não vai trapacear, promete?"];
    v809[278] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
    v809[279] = ["pedra azul", "para pessoas muito gentis"];
    v809[150] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"];
    v809[151] = ["coroa laranja", "de repente você se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"];
    v809[152] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", "defesa de jogadores: 4, defesa de animais: 16"];
    v809[282] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
    v809[283] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
    v809[218] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
    v809[221] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
    v809[223] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
    v809[85] = ["regador", "permite regar as plantas", "dano: 1"];
    v809[47] = ["mochila", "mais espaço para seus itens!"];
    v809[211] = ["papel", "usado para fazer o livro"];
    v809[46] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
    v809[297] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
    v809[241] = ["fechadura", "permite você trancar seu baú"];
    v809[260] = ["chave", "permite destrancar um baú"];
    v809[261] = ["Totem", "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
    v809[216] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
    v809[285] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
    v809[292] = ["telhado", "esconde você um pouco e te esquenta!"];
    v809[284] = ["poço", "permite encher garrafas", "durabilidade: 1000"];
    v809[264] = ["muro de madeira", "você sabia que o muro dança?", "durabilidade: 1000"];
    v809[265] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
    v809[266] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", "durabilidade: 2000"];
    v809[267] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
    v809[213] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
    v809[262] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
    v809[270] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
    v809[271] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
    v809[272] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
    v809[214] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
    v809[268] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", "durabilidade: 1000"];
    v809[273] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
    v809[274] = ["porta de ouro", "você está re-construindo o el dorado?", "durabilidade: 2000"];
    v809[275] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
    v809[215] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
    v809[210] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", "durabilidade: 1000"];
    v809[228] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v809[237] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v809[244] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
    v809[2000] = "você não pode entrar no servidor";
    v809[2001] = "kickado: ";
    v809[2002] = "sua chave está em uso por outra pessoa";
    v809[2003] = "sua chave está errada";
    v809[2004] = "você tem uma versão velha, limpe seu cache";
    v809[2005] = "não tem mais recursos";
    v809[2006] = "você sobreviveu 1 dia";
    v809[2007] = "você sobreviveu ";
    v809[2008] = " dias";
    v809[2009] = "você está morto ;-;";
    v809[2010] = "servidor não pôde achar um local de spawn! spam o botão de play!";
    v809[2011] = "servidor está cheio! spam o botão de play!";
    v809[2012] = "não tem recursos";
    v809[2013] = "inventário está cheio (botão direito para deletar itens)";
    v809[2014] = " está morto";
    v809[2015] = "essa não é a ferramenta certa";
    v809[2016] = "você entrou no time";
    v809[2017] = "você está morto";
    v809[2018] = "entrou no time";
    v809[2019] = "seu time foi destruido";
    v809[2020] = "você saiu do time";
    v809[2021] = " saiu do time";
    v809[2022] = "alguém roubou sua ficha :>";
    v809[2023] = "escolha um servidor";
    v809[2024] = "jogadores";
    v809[2025] = "jogadores totais";
    v809[2026] = "jogadores nesse modo";
    v809[2027] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Apelido";
    v811[0] = ["você morreu sem motivo"];
    v811[1] = ["você morreu de fome, como o jogo diz"];
    v811[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
    v811[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
    v811[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
    v811[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
    v811[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
    v811[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
    v811[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
    v811[9] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
    v811[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
    v811[11] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
    v811[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
    v811[13] = ["você morreu de sede. melhor beber sua própria urina."];
    v811[14] = ["você sabia que você morre afogado? agora você sabe."];
    v811[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
    v811[16] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
    v811[17] = ["sua pele caindo aos pedaços, o sol te matou."];
    v811[18] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
    v811[19] = ["como vampiro, não chegue perto do alho."];
    v811[20] = ["você comeu alho como vampiro, o que você esperava?"];
    v811[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"];
  }
  function f75(p518, p519, p520, p521, p522, p523) {
    v80(v802, p518, p519, p520, p521, p522, p523);
    const v788 = ((50 + (vVVVVVUndefined8232[0] ^ vVVVVVUndefined8232[1])) * 48271 + 0) % 2147483647;
    const v789 = ((5 + (v788 ^ vVVVVVUndefined8232[2])) * 75 + 74) % 65537;
    const v790 = ~(v789 & 9580) & v789 | ~(v789 & 9580) & 9580;
    const v791 = (8 << ((v790 ^ vVVVVVUndefined8232[4]) >> 16 & 255)) + (0 << ((v790 ^ vVVVVVUndefined8232[4]) >> 8 & 255)) + (24 << ((v790 ^ vVVVVVUndefined8232[4]) & 255)) + (16 << ((v790 ^ vVVVVVUndefined8232[4]) >> 24 & 255));
    return ~(v791 & 2138) & (v791 | 2138);
  }
  function f76() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v792 = 0; v792 < 7; v792++) {
      document.getElementById("claim_reward_" + v792).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["Mano"];
    v809[233] = ["Tierra", "¡Tan limpia como mis manos!"];
    v809[217] = ["Arena", "¡Tengo arena en mis ojos!"];
    v809[200] = ["Madera", "¡Nunca hay suficiente!"];
    v809[199] = ["Piedra", "También llamada roca."];
    v809[202] = ["Oro", "Sé generoso, compártelo con los otros"];
    v809[203] = ["Diamante", "¿Que vas a hacer con él?"];
    v809[212] = ["Amatista", "Es Mauve como Lapa"];
    v809[224] = ["Harina", "Usada para cocinar."];
    v809[226] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
    v809[229] = ["Tarta", "¡Cumpleaños Feliz!", "Comida: 100"];
    v809[207] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
    v809[208] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
    v809[230] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
    v809[231] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
    v809[236] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
    v809[238] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"];
    v809[302] = ["Caramelos", "¡Solo para niños/as!", "Comida: 100"];
    v809[301] = ["Caña de Azúcar", "Pruébala, es deliciosa", "Comida: 100"];
    v809[303] = ["Guirnalda", "Perfecta para decorar el techo"];
    v809[206] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v809[201] = ["Baya", "No es venenosa.", "Comida: 10"];
    v809[225] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v809[227] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
    v809[290] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v809[291] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
    v809[293] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 Días"];
    v809[294] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
    v809[295] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 Días"];
    v809[296] = ["Planta de Espinas", "¡Te daña!"];
    v809[234] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", "Durabilidad: 2000"];
    v809[235] = ["Hielo", "Bueno para hacer tartas y agua"];
    v809[101] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", "Daño: 2"];
    v809[276] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
    v809[2] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
    v809[280] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
    v809[281] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
    v809[239] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
    v809[232] = ["Escamas", "¡Huele a pescado!"];
    v809[222] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
    v809[204] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
    v809[209] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
    v809[205] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
    v809[263] = ["Hilo", "Usado para craftear ropa y mochila"];
    v809[240] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
    v809[269] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
    v809[103] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
    v809[0] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
    v809[5] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
    v809[6] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
    v809[9] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
    v809[48] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
    v809[108] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
    v809[16] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
    v809[8] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
    v809[1] = ["Pico de Piedra", "Puede minar hasta oro", "Daño: 2"];
    v809[3] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", "Daño para estructuras: 1"];
    v809[4] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", "Daño para estructuras: 1"];
    v809[49] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", "Daño para estructuras: 1"];
    v809[62] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "Daño: 2", "Daño para estructuras: 20"];
    v809[63] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
    v809[64] = ["Martillo de Diamante", "Bueno para destruir estructuras", "Daño: 4", "Daño para estructuras: 40"];
    v809[65] = ["Martillo de Amatista", "Bueno para destruir estructuras", "Daño: 5", "Daño para estructuras: 50"];
    v809[72] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
    v809[12] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
    v809[13] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
    v809[14] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
    v809[15] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
    v809[60] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
    v809[82] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 2"];
    v809[86] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 3", "Daño para estructuras: 1"];
    v809[87] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 4", "Daño para estructuras: 1"];
    v809[88] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 5", "Daño para estructuras: 1"];
    v809[104] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
    v809[34] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
    v809[35] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
    v809[36] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
    v809[70] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
    v809[105] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
    v809[32] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
    v809[68] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
    v809[69] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
    v809[156] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"];
    v809[10] = ["Orejeras", "Como un abrigo pequeño.", "Te calienta en invierno y fuera del agua"];
    v809[11] = ["Chapka", "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
    v809[67] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
    v809[157] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
    v809[158] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"];
    v809[159] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", "Te calienta en invierno y fuera del agua"];
    v809[84] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
    v809[83] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
    v809[287] = ["Esfera del Dragón", "Dada en la misión"];
    v809[242] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
    v809[277] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
    v809[278] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
    v809[279] = ["Gema Azul", "Para gente muy amable"];
    v809[150] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v809[151] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v809[152] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
    v809[282] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
    v809[283] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
    v809[218] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
    v809[221] = ["Botella Vacia", "La puedes llenar de agua"];
    v809[223] = ["Regadera Vacía", "La tienes que llenar de agua"];
    v809[85] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
    v809[47] = ["Mochila", "¡Mas espacio para tus cosas!"];
    v809[211] = ["Hoja", "Usada para hacer un libro"];
    v809[46] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
    v809[297] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
    v809[241] = ["Cerradura", "Te permite cerrar tu cofre"];
    v809[260] = ["Llave", "Te permite abrir un cofre cerrado"];
    v809[261] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
    v809[216] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
    v809[285] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
    v809[292] = ["Techo", "Te esconde un poco y te protege del frío"];
    v809[284] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"];
    v809[264] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"];
    v809[265] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
    v809[266] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"];
    v809[267] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
    v809[213] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
    v809[262] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
    v809[270] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
    v809[271] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
    v809[272] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
    v809[214] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
    v809[268] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"];
    v809[273] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
    v809[274] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"];
    v809[275] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
    v809[215] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
    v809[210] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"];
    v809[228] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v809[237] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v809[244] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
    v809[2000] = "No puedes unirte a este servidor";
    v809[2001] = "Expulsado: ";
    v809[2002] = "Tu llave ya está usada";
    v809[2003] = "Tu llave está mal";
    v809[2004] = "Tienes una versión antigua, limpia tu cache";
    v809[2005] = "No hay mas recursos";
    v809[2006] = "Has sobrevivido 1 día";
    v809[2007] = "Has sobrevivido ";
    v809[2008] = " días";
    v809[2009] = "Estás muerto ;-;";
    v809[2010] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
    v809[2011] = "El servidor esta lleno, ¡spamea el botón de jugar!";
    v809[2012] = "Recurso vacio";
    v809[2013] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
    v809[2014] = " está muerto";
    v809[2015] = "Esta no es la herramienta correcta";
    v809[2016] = "Te has unido a un equipo";
    v809[2017] = "Estás muerto";
    v809[2018] = " se unió al equipo";
    v809[2019] = "Tu equipo ha sido destruido";
    v809[2020] = "Has dejado el equipo";
    v809[2021] = " dejo el equipo ";
    v809[2022] = "Alguien te robó tu token :>";
    v809[2023] = "Elige un servidor";
    v809[2024] = "jugadores";
    v809[2025] = "total de jugadores";
    v809[2026] = "Jugadores en este modo de juego";
    v809[2027] = "Próximamente...";
    document.getElementById("nickname_input").placeholder = "Apodo";
    v811[0] = ["Has muerto por ninguna razón"];
    v811[1] = ["Has muerto de hambre, como implica el nombre del juego dice"];
    v811[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
    v811[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
    v811[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
    v811[5] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
    v811[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
    v811[7] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
    v811[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
    v811[9] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
    v811[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
    v811[11] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
    v811[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
    v811[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
    v811[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
    v811[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
    v811[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
    v811[17] = ["Tu piel se cayó, el sol te quemó."];
    v811[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
    v811[19] = ["Eres un vampiro, no te quedes cerca del ajo."];
    v811[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
    v811[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"];
  }
  function f77() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v793 = 0; v793 < 7; v793++) {
      document.getElementById("claim_reward_" + v793).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["Hand"];
    v809[233] = ["Boden", "Dreckig!"];
    v809[217] = ["Sand", "Ich habe es in meine Augen bekommen!"];
    v809[200] = ["Holz", "Du kannst niemals zu viel haben!"];
    v809[199] = ["Stein", "Auch Fels gennant"];
    v809[202] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
    v809[203] = ["Diamant", "Was wirst du daraus machen?"];
    v809[212] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
    v809[224] = ["Mehl", "wird fürs Backen gebraucht"];
    v809[226] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
    v809[229] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", "Essen: 100"];
    v809[207] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
    v809[208] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
    v809[230] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
    v809[231] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
    v809[236] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
    v809[238] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"];
    v809[302] = ["Süßigkeiten", "Nur für Kinder!", "Essen: 100"];
    v809[301] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"];
    v809[303] = ["Girlande", "perfekter Schmuck für Dächer"];
    v809[206] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v809[201] = ["Beere", "Beeren lecker!", "Essen: 10"];
    v809[225] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v809[227] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
    v809[290] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v809[291] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
    v809[293] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v809[294] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
    v809[295] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"];
    v809[296] = ["Dornenbusch", "Es sticht!"];
    v809[234] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"];
    v809[235] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
    v809[101] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", "Schaden: 2"];
    v809[276] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
    v809[2] = ["Hasenfell", "Der Hase war so süß..."];
    v809[280] = ["Klares Fell", "Du bist eine Brotfabrik"];
    v809[281] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
    v809[239] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
    v809[232] = ["Schuppen", "Es riecht wie Fisch!"];
    v809[222] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
    v809[204] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
    v809[209] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
    v809[205] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
    v809[263] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
    v809[240] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
    v809[269] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
    v809[103] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
    v809[0] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
    v809[5] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
    v809[6] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v809[9] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v809[48] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
    v809[108] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
    v809[16] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
    v809[8] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
    v809[1] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"];
    v809[3] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v809[4] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v809[49] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v809[62] = ["Steinhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an Gebäuden: 20"];
    v809[63] = ["Goldhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
    v809[64] = ["Diamanthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 4", "Schaden an Gebäuden: 40"];
    v809[65] = ["Amethysthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 5", "Schaden an Gebäuden: 50"];
    v809[72] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
    v809[12] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
    v809[13] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
    v809[14] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
    v809[15] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
    v809[60] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
    v809[82] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"];
    v809[86] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v809[87] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v809[88] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v809[104] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
    v809[34] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
    v809[35] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
    v809[36] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
    v809[70] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
    v809[105] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
    v809[32] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[68] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[69] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[156] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[10] = ["Ohrwärmer", "Eine Art kleiner chapka.", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[11] = ["Chapka", "Auch Mantel genannt.", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[67] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
    v809[157] = ["Bauer", "Deine Pflanzen wachsen schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[158] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[159] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v809[84] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
    v809[83] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v809[287] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
    v809[242] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
    v809[277] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
    v809[278] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
    v809[279] = ["Blauer Edelstein", "Für sehr nette Leute"];
    v809[150] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v809[151] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v809[152] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v809[282] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
    v809[283] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
    v809[218] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
    v809[221] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
    v809[223] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
    v809[85] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
    v809[47] = ["Rucksack", "Mehr Platz im Inventar!"];
    v809[211] = ["Papier", "Wird fürs Büchermachen verwendet"];
    v809[46] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
    v809[297] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
    v809[241] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
    v809[260] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
    v809[261] = ["Totem", "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
    v809[216] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
    v809[285] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
    v809[292] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
    v809[284] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", "Haltbarkeit: 1000"];
    v809[264] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"];
    v809[265] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
    v809[266] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"];
    v809[267] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
    v809[213] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
    v809[262] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
    v809[270] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
    v809[271] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
    v809[272] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
    v809[214] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
    v809[268] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", "Haltbarkeit: 1000"];
    v809[273] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
    v809[274] = ["Goldtür", "Baust du el dorado?", "Haltbarkeit: 2000"];
    v809[275] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
    v809[215] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
    v809[210] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"];
    v809[228] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v809[237] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v809[244] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
    v809[2000] = "Du kannst diesem Server nicht beitreten";
    v809[2001] = "Gekickt: ";
    v809[2002] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
    v809[2003] = "Dein Schlüssel ist falsch";
    v809[2004] = "Deine Version ist veraltet, säubere dein Cache";
    v809[2005] = "Es gibt keine neuen Ressourcen";
    v809[2006] = "Du hast einen Tag überlebt";
    v809[2007] = "Du hast überlebt ";
    v809[2008] = " Tage";
    v809[2009] = "Du bist gestorben ;-;";
    v809[2010] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
    v809[2011] = "Server ist voll! Drücke immer wieder auf spielen!";
    v809[2012] = "Ressource ist leer";
    v809[2013] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
    v809[2014] = " ist gestorben";
    v809[2015] = "Das ist nicht das richtige Werkzeug";
    v809[2016] = "Du bist einem Team beigetreten";
    v809[2017] = "Du bist gestorben";
    v809[2018] = " ist dem Team beigetreten";
    v809[2019] = "Dein Team wurde zerstört";
    v809[2020] = "Du hast das Team verlassen";
    v809[2021] = " hat das Team verlassen";
    v809[2022] = "Jemand hat dein Token gestohlen :>";
    v809[2023] = "Suche dir ein Server aus";
    v809[2024] = "Spieler";
    v809[2025] = "alle Spieler";
    v809[2026] = "Spieler in diesem Modus";
    v809[2027] = "Bald verfügbar...";
    document.getElementById("nickname_input").placeholder = "Spitzname";
    v811[0] = ["Du wurdest ohne Grund getötet"];
    v811[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
    v811[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
    v811[3] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
    v811[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
    v811[5] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
    v811[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
    v811[7] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
    v811[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
    v811[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
    v811[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
    v811[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
    v811[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
    v811[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
    v811[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
    v811[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
    v811[16] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
    v811[17] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
    v811[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
    v811[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
    v811[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
    v811[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"];
  }
  const v794 = 0;
  function f78(p524, p525, p526, p527, p528, p529) {
    const v795 = ((54851 + p524) * 22695477 + 1) % 4294967296;
    const v796 = (2147483587 + (p525 + 20761) * 2147483629) % 2147483647;
    const v797 = (p526 | 23446) & ~(p526 & 23446);
    const v798 = (25119 + p527) % 65508;
    const v799 = (24 << (p528 >> 8 & 255)) + (8 << (p528 & 255)) + (16 << (p528 >> 24 & 255)) + (0 << (p528 >> 16 & 255));
    const v800 = (16 << (p529 & 255)) + (8 << (p529 >> 8 & 255)) + (24 << (p529 >> 16 & 255)) + (0 << (p529 >> 24 & 255));
    const vF102 = f10(v795, v796, v797, v798, v799, v800);
    f434(v795, v796, v797, v798, v799, v800);
    return ~(vF102 & 920) & (vF102 | 920);
  }
  function f79() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " BACK TO THE GAME";
    v809[2029] = " Share on Twitter";
    v809[2030] = " Share on Facebook";
    v809[2031] = "You can buy items on the shop in the next game with your points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Kill";
    v809[2035] = "Days survived";
    v809[2036] = "Building method: Free. Press G to change";
    v809[2037] = "Building method: Grid. Press G to change";
    v809[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v809[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v801 = 0; v801 < 7; v801++) {
      document.getElementById("claim_reward_" + v801).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v809[7] = ["Ręka"];
    v809[233] = ["Ziemia", "Brudna!"];
    v809[217] = ["Piasek", "Mam go w oczach!"];
    v809[200] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
    v809[199] = ["Kamień", "Także nazywany skałą"];
    v809[202] = ["Złoto", "Bądź hojny, daj trochę innym"];
    v809[203] = ["Diament", "Co z nim zrobisz?"];
    v809[212] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
    v809[224] = ["Mąka", "Używana w gotowaniu"];
    v809[226] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
    v809[229] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"];
    v809[207] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
    v809[208] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
    v809[230] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
    v809[231] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
    v809[236] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
    v809[238] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"];
    v809[302] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"];
    v809[301] = ["Laska cukrowa", "Spróbuj, jest przepyszna", "Jedzenie: 100"];
    v809[303] = ["Girlanda", "Idealna do dekorowania dachów"];
    v809[206] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v809[201] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
    v809[225] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v809[227] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
    v809[290] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v809[291] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
    v809[293] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v809[294] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
    v809[295] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", "Wytrzymałość: 1000", "Czas życia: 8 dni"];
    v809[296] = ["Kolczasty krzew", "Kłuje!"];
    v809[234] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", "Wytrzymałość: 2000"];
    v809[235] = ["Lód", "Użyteczny do robienia ciast i wody"];
    v809[101] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
    v809[276] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
    v809[2] = ["Skóra królika", "Ten królik był taki słodziutki..."];
    v809[280] = ["Skóra", "Jesteś fabryką chleba"];
    v809[281] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
    v809[239] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
    v809[232] = ["Łuski", "Pachnie jak ryba!"];
    v809[222] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
    v809[204] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
    v809[209] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
    v809[205] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
    v809[263] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
    v809[240] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
    v809[269] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
    v809[103] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
    v809[0] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
    v809[5] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
    v809[6] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v809[9] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v809[48] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
    v809[108] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
    v809[16] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
    v809[8] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
    v809[1] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
    v809[3] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v809[4] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v809[49] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v809[62] = ["Kamienny młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
    v809[63] = ["Złoty młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
    v809[64] = ["Diamentowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 4", "Obrażenia do budowli: 40"];
    v809[65] = ["Ametystowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 5", "Obrażenia do budowli: 50"];
    v809[72] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
    v809[12] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
    v809[13] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
    v809[14] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
    v809[15] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
    v809[60] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
    v809[82] = ["Kamienna łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 2"];
    v809[86] = ["Złota łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v809[87] = ["Diamentowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v809[88] = ["Ametystowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v809[104] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
    v809[34] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
    v809[35] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
    v809[36] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
    v809[70] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
    v809[105] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
    v809[32] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", "Ciepło w i poza zimą"];
    v809[68] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", "Ciepło w i poza zimą"];
    v809[69] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", "Ciepło w i poza zimą"];
    v809[156] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
    v809[10] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", "Ciepło w i poza zimą"];
    v809[11] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
    v809[67] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
    v809[157] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
    v809[158] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
    v809[159] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepło w i poza zimą"];
    v809[84] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
    v809[83] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v809[287] = ["Smocza kula", "Zdobyta podczas zadania"];
    v809[242] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
    v809[277] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
    v809[278] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
    v809[279] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
    v809[150] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v809[151] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v809[152] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v809[282] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
    v809[283] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
    v809[218] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
    v809[221] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
    v809[223] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
    v809[85] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
    v809[47] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
    v809[211] = ["Papier", "Używany w tworzeniu książki"];
    v809[46] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
    v809[297] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
    v809[241] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
    v809[260] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
    v809[261] = ["Totem", "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
    v809[216] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
    v809[285] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
    v809[292] = ["Dach", "Trochę cie ogrzewa i chowa!"];
    v809[284] = ["Studnia", "Umożliwia napełnienie butelki", "Wytrzymałość: 1000"];
    v809[264] = ["Drewniany mur", "Znasz taniec ścian?", "Wytrzymałość: 1000"];
    v809[265] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
    v809[266] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", "Wytrzymałość: 2000"];
    v809[267] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
    v809[213] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
    v809[262] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
    v809[270] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
    v809[271] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
    v809[272] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
    v809[214] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
    v809[268] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", "Wytrzymałość: 1000"];
    v809[273] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
    v809[274] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", "Wytrzymałość: 2000"];
    v809[275] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
    v809[215] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
    v809[210] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", "Wytrzymałość: 1000"];
    v809[228] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v809[237] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v809[244] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
    v809[2000] = "Nie możesz dołączyć do tego serwera";
    v809[2001] = "Wyrzucony: ";
    v809[2002] = "Twój klucz jest aktualnie używany przez innego gracza";
    v809[2003] = "Twój klucz jest nieprawidłowy";
    v809[2004] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
    v809[2005] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
    v809[2006] = "Przeżyłeś 1 dzień";
    v809[2007] = "Przeżyłeś ";
    v809[2008] = " dni";
    v809[2009] = "Jesteś martwy ;-;";
    v809[2010] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
    v809[2011] = "Serwer jest pełny! Spamuj przycisk zagraj!";
    v809[2012] = "Źródło jest puste";
    v809[2013] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
    v809[2014] = " jest martwy";
    v809[2015] = "To nie jest właściwe narzędzie";
    v809[2016] = "Dołączyłeś do drużyny";
    v809[2017] = "Jesteś martwy";
    v809[2018] = " dołączył do drużyny";
    v809[2019] = "Twoja drużyna została zniszczona";
    v809[2020] = " Opuściłeś drużynę";
    v809[2021] = " opuścił drużynę";
    v809[2022] = "Ktoś ukradł twój żeton :>";
    v809[2023] = "Wybierz serwer";
    v809[2024] = "graczy";
    v809[2025] = "wszystkich graczy";
    v809[2026] = "graczy w tym trybie";
    v809[2027] = "Już wkrótce...";
    document.getElementById("nickname_input").placeholder = "Przydomek";
    v811[0] = ["Zostałeś zabity bez powodu"];
    v811[1] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
    v811[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
    v811[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
    v811[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
    v811[5] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
    v811[6] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
    v811[7] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
    v811[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
    v811[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
    v811[10] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
    v811[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
    v811[12] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
    v811[13] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
    v811[14] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
    v811[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
    v811[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
    v811[17] = ["Twoja skóra odpada, słońce cię zabija."];
    v811[18] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
    v811[19] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
    v811[20] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
    v811[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", "Uuunnnggg...", "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"];
  }
  let v802;
  let vVVVVVUndefined8232 = vVVVVUndefined823;
  const vVVUndefined122 = vVUndefined12;
  function f80(p530, p531, p532, p533) {
    const v803 = p530 ^ 20953;
    const v804 = ~(p531 & 64862) & 64862 | ~(p531 & 64862) & p531;
    const v805 = (p532 | 53569) & ~(p532 & 53569);
    const vF152 = f15(v803, v804, v805, (12345 + (p533 + 50140) * 1103515245) % 2147483648, v803);
    const vF462 = f46(v804, v805);
    return (24 << ((vF152 ^ vF462) & 255)) + (16 << ((vF152 ^ vF462) >> 24 & 255)) + (8 << ((vF152 ^ vF462) >> 16 & 255)) + (0 << ((vF152 ^ vF462) >> 8 & 255));
  }
  vVUndefined12 = function () {
    v802 = vVVUndefined(v74(11));
    vVVVVVUndefined8232 = f4(v802);
    if (vVVUndefined122) {
      vVVUndefined122();
    }
  };
  function f81() {
    v809[286] = ["You feel a great power emanating from this orb"];
    v811[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v809[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v809[2028] = " RETOUR AU JEU";
    v809[2029] = " Partage sur Twitter";
    v809[2030] = " Partage sur Facebook";
    v809[2031] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
    v809[2032] = "points";
    v809[2033] = "Score";
    v809[2034] = "Tués";
    v809[2035] = "Jours survécus";
    v809[2036] = "Mode de construction: Libre. Appuie sur G pour changer";
    v809[2037] = "Mode de construction: Grille. Appuie sur G pour changer";
    v809[299] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", "Food: 10"];
    v809[18] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"];
    v809[107] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"];
    v809[300] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quêtes";
    document.getElementById("timeremainingquest").innerHTML = "Temps Restant";
    document.getElementById("constraintquest").innerHTML = " Contraintes";
    document.getElementById("claim_rewards").innerHTML = " Résultat";
    document.getElementById("rewardquest").innerHTML = " Récompenses";
    document.getElementById("killdragon_1").innerHTML = " Collecte 1 Cœur de dragon dans la cave";
    document.getElementById("amethyst_2").innerHTML = " Récolte 1 améthyste";
    document.getElementById("survive20min_3").innerHTML = "Survis sans perdre de vie";
    document.getElementById("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trésor";
    document.getElementById("dont_hit_5").innerHTML = " Sois pacifique";
    document.getElementById("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
    document.getElementById("winter_7").innerHTML = " Après 1 jour, survis en hiver";
    for (var v806 = 0; v806 < 7; v806++) {
      document.getElementById("claim_reward_" + v806).innerHTML = "RÉCOMPENSE!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUITTER";
    v809[7] = ["Main"];
    v809[233] = ["Terre", "C'est sale!"];
    v809[217] = ["Sable", "J'en ai dans les yeux"];
    v809[200] = ["Bois", "Tu n'en auras jamais trop!"];
    v809[199] = ["Pierre", "Aussi appelée roche"];
    v809[202] = ["Or", "Sois généreux, donne en aux autres"];
    v809[203] = ["Diamant", "Comme tes yeux! wesh"];
    v809[212] = ["Améthyste", "C'est Mauve comme Lapa"];
    v809[224] = ["Farine", "Utile pour la cuisine"];
    v809[226] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
    v809[229] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
    v809[207] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
    v809[208] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
    v809[230] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
    v809[231] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
    v809[236] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
    v809[238] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"];
    v809[302] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
    v809[301] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
    v809[303] = ["Guirlandes", "Utilisable sur les toits"];
    v809[206] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v809[201] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
    v809[225] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v809[227] = ["Blé", "Peut être transformé en farine dans les moulins"];
    v809[290] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v809[291] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
    v809[293] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v809[294] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
    v809[295] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "Durabilité: 1000", "Durée de vie: 8 jours"];
    v809[296] = ["Ronces", "Ça pique!"];
    v809[234] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "Durabilité: 2000"];
    v809[235] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
    v809[101] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", "Dégâts: 2"];
    v809[276] = ["Peau de loup", "Il était où le gentil ti Youki?"];
    v809[2] = ["Peau de lapin", "Vous êtes un monstre"];
    v809[280] = ["Fourrure blanche", "Tu es une usine à pain"];
    v809[281] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
    v809[239] = ["Fourrure d'hiver", "Il voulait juste un calin"];
    v809[232] = ["Écailles", "Ça sent le poisson!"];
    v809[222] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
    v809[204] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
    v809[209] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
    v809[205] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
    v809[263] = ["Fil", "Utile pour faire des chapeaux et un sac"];
    v809[240] = ["Fil de diamant", "Utile pour faire des chapeaux"];
    v809[269] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
    v809[103] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
    v809[0] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
    v809[5] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
    v809[6] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
    v809[9] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
    v809[48] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
    v809[108] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
    v809[16] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
    v809[8] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
    v809[1] = ["Pioche en pierre", "Peut aussi récolter de l'or", "Dégâts: 2"];
    v809[3] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
    v809[4] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
    v809[49] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
    v809[62] = ["Marteau en pierre", "Utile pour détruire les bâtiments", "Ne marche pas bien sur du diamant et améthyste", "Dégâts: 2", "Démolition: 20"];
    v809[63] = ["Marteau en or", "Utile pour détruire les bâtiments", "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
    v809[64] = ["Marteau en diamant", "Utile pour détruire les bâtiments", "Dégâts: 4", "Démolition: 40"];
    v809[65] = ["Marteau en améthyste", "Utile pour détruire les bâtiments", "Dégâts: 5", "Démolition: 50"];
    v809[72] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
    v809[12] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
    v809[13] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
    v809[14] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
    v809[15] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
    v809[60] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
    v809[82] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 2"];
    v809[86] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 3", "Buildings Dégâts: 1"];
    v809[87] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 4", "Buildings Dégâts: 1"];
    v809[88] = ["Pelle en améthyste", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 5", "Buildings Dégâts: 1"];
    v809[104] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
    v809[34] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
    v809[35] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
    v809[36] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
    v809[70] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
    v809[105] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
    v809[32] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[68] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[69] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[156] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[10] = ["Cache-oreilles", "Une sorte de petite chapka.", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[11] = ["Chapka", "Comment ça va, camarade?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[67] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
    v809[157] = ["Tunique", "Les plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[158] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[159] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v809[84] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
    v809[83] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 4, Défense contre animaux: 16"];
    v809[287] = ["Orbe du Dragon", "Donné en Quête"];
    v809[242] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
    v809[277] = ["Gemme verte", "Tu n'as pas triché, promis?"];
    v809[278] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
    v809[279] = ["Gemme bleue", "Pour les gens trop gentils"];
    v809[150] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", "Défense: 4, Défense contre animaux: 16"];
    v809[151] = ["Couronne orange", "Tu te sens soudainement très chanceux", "Défense: 4, Défense contre animaux: 16"];
    v809[152] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", "Défense: 4, Défense contre animaux: 16"];
    v809[282] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
    v809[283] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
    v809[218] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
    v809[221] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
    v809[223] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
    v809[85] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
    v809[47] = ["Sac", "Plus de place dans ton inventaire!"];
    v809[211] = ["Papier", "Pour fabriquer toute sorte d'objets"];
    v809[46] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
    v809[297] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
    v809[241] = ["Cadenas", "Pour verrouiller un coffre"];
    v809[260] = ["Clé", "Pour déverrouiller un coffre"];
    v809[261] = ["Totem", "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
    v809[216] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
    v809[285] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
    v809[292] = ["Toit", "Te cache un peu et te réchauffe"];
    v809[284] = ["Puit", "Permet de remplir des bouteilles", "Durabilité: 1000"];
    v809[264] = ["Mur en bois", "Tu connais la danse des murs?", "Durabilité: 1000"];
    v809[265] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
    v809[266] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "Durabilité: 2000"];
    v809[267] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
    v809[213] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
    v809[262] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
    v809[270] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
    v809[271] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
    v809[272] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
    v809[214] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
    v809[268] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", "Durabilité: 1000"];
    v809[273] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
    v809[274] = ["Porte en or", "Tu reconstruis l'el dorado?", "Durabilité: 2000"];
    v809[275] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
    v809[215] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
    v809[210] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", "Durabilité: 1000"];
    v809[228] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v809[237] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v809[244] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
    v809[2000] = "Tu ne peux pas rejoindre le serveur";
    v809[2001] = "Expulsé: ";
    v809[2002] = "Ta clé est déjà utilisée par quelqu'un d'autre";
    v809[2003] = "Ta clé est fausse";
    v809[2004] = "Tu as une vieille version, rafraichis tes caches";
    v809[2005] = "Il n'y a plus de nouvelles ressources";
    v809[2006] = "Tu as survécu 1 jour";
    v809[2007] = "Tu as survécu ";
    v809[2008] = " jours";
    v809[2009] = "Tu es mort ;-;";
    v809[2010] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
    v809[2011] = "Le serveur est complet! Spam le bouton jouer";
    v809[2012] = "Cette ressource est vide";
    v809[2013] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
    v809[2014] = " est mort";
    v809[2015] = "Ce n'est pas le bon outil";
    v809[2016] = "Tu as rejoins une équipe";
    v809[2017] = "Tu es mort";
    v809[2018] = " a rejoint l'équipe";
    v809[2019] = "Ton équipe a été détruite";
    v809[2020] = "Tu as quitté l'équipe";
    v809[2021] = " a quitté l'équipe";
    v809[2022] = "Quelqu'un a volé ton token :>";
    v809[2023] = "Choisis un serveur";
    v809[2024] = "joueurs";
    v809[2025] = "joueurs";
    v809[2026] = "joueurs dans ce mode";
    v809[2027] = "Bientôt...";
    document.getElementById("nickname_input").placeholder = "Surnom";
    v811[0] = ["Tu as été tué sans raison particulière, juste comme ça"];
    v811[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
    v811[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
    v811[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
    v811[4] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
    v811[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
    v811[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
    v811[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
    v811[8] = ["Cet ours voulait juste un câlin."];
    v811[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
    v811[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
    v811[11] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
    v811[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
    v811[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
    v811[14] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
    v811[15] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
    v811[16] = ["Un kraken a 'kraké' tes os."];
    v811[17] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
    v811[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
    v811[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
    v811[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
    v811[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
    ᐃΔⲆΔΔΔΔ = "Uuunnnggg";
    ⲆⵠⲆⲆΔᐃᐃ = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"];
  }
  function f82(p534, p535) {
    const v807 = ((6246 + p534) * 2147483629 + 2147483587) % 2147483647;
    const v808 = ((p535 + 38611) * 214013 + 2531011) % 4294967296;
    const vF60 = f60(v807, v808);
    f46(v807, v808);
    return vF60 ^ 62028;
  }
  var v809 = [];
  for (var v817 = 0; v623 > v817; v817++) {
    v809[v817] = "";
  }
  var v811 = [];
  $(".md-languages").on("click", function () {
    $(this).toggleClass("active");
  });
  $(".md-languages ul li").on("click", function () {
    var v812 = $(this).text();
    if (v812 === "English") {
      f72();
    } else if (v812 === "Français") {
      f81();
    } else if (v812 === "Deutsch") {
      f77();
    } else if (v812 === "Español") {
      f76();
    } else if (v812 === "Português") {
      f74();
    } else if (v812 === "Русский") {
      f73();
    } else if (v812 === "Polski") {
      f79();
    }
    ΔᐃᐃΔΔⵠⲆ = [];
    v2885.ⲆΔⲆΔ.label = [];
    $(".md-languages ul li").removeClass("active");
    $(this).addClass("active");
    $(".md-languages label button").text(v812);
  });
  v584 = "EN";
  var v813;
  switch (navigator.language || navigator.userLanguage) {
    case "ru":
      v584 = "RU";
      break;
    case "en":
      v584 = "EN";
      break;
    case "es":
      v584 = "SP";
      break;
    case "fr":
      v584 = "FR";
      break;
    case "pl":
      v584 = "PL";
      break;
    case "de":
      v584 = "DE";
      break;
    case "pt":
      v584 = "PT";
  }
  if (v584 === "FR") {
    $(".md-languages label button").text("Français");
    v813 = f81;
  } else if (v584 === "PL") {
    $(".md-languages label button").text("Polski");
    v813 = f79;
  } else if (v584 === "PT") {
    $(".md-languages label button").text("Português");
    v813 = f74;
  } else if (v584 === "SP") {
    $(".md-languages label button").text("Español");
    v813 = f76;
  } else if (v584 === "RU") {
    $(".md-languages label button").text("Русский");
    v813 = f73;
  } else if (v584 === "DE") {
    $(".md-languages label button").text("Deutsch");
    v813 = f77;
  } else {
    $(".md-languages label button").text("English");
    v813 = f72;
  }
  ⵠᐃ = {
    ⲆΔᐃᐃᐃⲆⵠᐃⲆ: "img/logo.png",
    ᐃᐃΔⵠᐃΔᐃ: "img/mapday.png",
    ⵠᐃΔᐃⲆᐃⵠ: "img/mapnight.png",
    ᐃⵠⲆⲆΔΔᐃᐃΔ: "img/bigzday.png",
    ⵠΔⵠΔⵠΔΔᐃⲆ: "img/bigznight.png",
    ⵠᐃⲆⵠᐃᐃⵠ: "img/bigday-river1.png",
    ⵠᐃΔⵠΔᐃⵠⲆᐃ: "img/bigday-lake.png",
    ᐃΔᐃΔⵠΔⵠ: "img/bigday-berry.png",
    ᐃⵠⲆᐃΔᐃⵠ: "img/bigday-stone1.png",
    ΔⲆⲆⵠΔⲆᐃ: "img/bigday-stone2.png",
    ⵠⲆⲆⲆΔⲆΔ: "img/bigday-gold1.png",
    ⲆΔᐃⲆⲆⲆᐃ: "img/bigday-gold2.png",
    ⲆⲆᐃᐃⵠⵠⲆ: "img/bigday-emerald1.png",
    ⲆⵠᐃⲆⵠⵠᐃ: "img/bigday-emerald2.png",
    ⵠⲆᐃⲆᐃⲆΔ: "img/bigday-amethyst.png",
    ΔΔⵠᐃⲆΔⵠ: "img/bigday-bear.png",
    ⵠΔᐃⲆⵠΔΔ: "img/bigday-cave.png",
    ΔᐃⲆⵠΔⵠΔ: "img/bigday-diamond.png",
    ᐃΔⵠᐃΔⲆⵠ: "img/bigday-island.png",
    ⵠⲆᐃΔⲆᐃᐃ: "img/bigday-reidite.png",
    ᐃⲆⲆⲆᐃⲆⲆ: "img/bigday-spider.png",
    ΔⵠᐃⵠΔΔΔ: "img/bigday-wolf.png",
    ᐃᐃⲆⵠⵠⲆΔ: "img/bigday-fir-tree.png",
    ⲆⲆⲆᐃⲆΔⵠ: "img/bigday-fox.png",
    ᐃᐃⲆΔΔΔΔ: "img/bigday-kraken.png",
    ΔⵠΔᐃⲆⵠⵠ: "img/bigday-piranha.png",
    ⲆΔΔᐃⵠΔⲆ: "img/bigday-cactus.png",
    ΔⵠⵠΔⲆΔⵠ: "img/bigday-magma.png",
    ⵠⵠⵠⵠⵠⵠⲆ: "img/bigday-aquamarine1.png",
    ᐃⵠⵠᐃΔⲆΔ: "img/bigday-aquamarine2.png",
    ΔΔᐃᐃᐃΔΔ: "img/bigday-coal1.png",
    ⵠⵠⲆᐃⲆⵠⵠ: "img/bigday-coal2.png",
    ⲆⵠⲆᐃⵠΔᐃ: "img/bigday-ruby1.png",
    ᐃᐃᐃᐃΔⵠⵠ: "img/bigday-ruby2.png",
    ΔⲆⲆΔⵠⵠⵠ: "img/bigday-jade1.png",
    ⵠⲆⲆᐃᐃⵠΔ: "img/bigday-jade2.png",
    ΔⵠᐃᐃⲆⵠᐃ: "img/bigday-sapphire1.png",
    ⲆΔᐃⵠⲆⵠΔ: "img/bigday-sapphire2.png",
    ᐃᐃΔⵠΔⵠⵠ: "img/bigday-topaz1.png",
    ⵠⵠΔⵠⲆⲆΔ: "img/bigday-topaz2.png",
    ΔⵠⵠΔⵠᐃⵠ: "img/bigday-iron1.png",
    ⵠⲆⲆⲆⲆΔᐃ: "img/bigday-iron2.png",
    ⵠΔⲆᐃⲆⵠᐃ: "img/bigday-copper1.png",
    ΔⵠⵠⲆΔⲆⲆ: "img/bigday-copper2.png",
    ᐃᐃᐃΔᐃⲆⵠ: "img/bigday-jungle-tree.png",
    ΔΔΔⲆΔⵠⵠ: "img/bigday-jungle-bush.png",
    ⲆᐃΔΔⵠⵠΔ: "img/bigday-jungle-stone1.png",
    ΔΔᐃΔⵠⵠΔ: "img/bigday-jungle-stone2.png",
    ᐃⵠΔⵠΔᐃΔ: "img/bigday-banana-plant.png",
    ⲆⵠⲆΔᐃⲆⵠ: "img/bigday-river1.png",
    ⵠΔΔᐃᐃΔⲆᐃᐃ: "img/bignight-lake.png",
    ΔⲆΔⲆⲆᐃΔⵠⲆ: "img/bignight-berry.png",
    ᐃⵠᐃᐃⵠΔⲆ: "img/bignight-stone1.png",
    ⲆⵠΔⵠⲆᐃⲆ: "img/bignight-stone2.png",
    ΔΔᐃⵠᐃⲆⲆ: "img/bignight-gold1.png",
    ⲆⵠⵠⲆⲆⵠᐃ: "img/bignight-gold2.png",
    ⵠᐃⲆᐃᐃⲆⵠ: "img/bignight-emerald1.png",
    ⲆᐃᐃⲆⲆᐃΔ: "img/bignight-emerald2.png",
    ᐃⵠΔⵠᐃⵠⵠ: "img/bignight-amethyst.png",
    ΔⵠⲆΔᐃΔᐃ: "img/bignight-bear.png",
    ΔⲆΔΔⲆⵠΔ: "img/bignight-cave.png",
    ᐃⲆΔⲆΔᐃⲆ: "img/bignight-diamond.png",
    ⲆⵠᐃⵠⲆᐃΔ: "img/bignight-island.png",
    ⵠⵠⲆⲆⵠᐃⲆ: "img/bignight-reidite.png",
    ᐃⵠⵠᐃⲆⲆᐃ: "img/bignight-spider.png",
    ᐃⲆⲆᐃΔⵠΔ: "img/bignight-wolf.png",
    ⵠᐃᐃⵠⲆⲆΔ: "img/bignight-fir-tree.png",
    ⲆΔΔⵠⲆⵠⲆ: "img/bignight-fox.png",
    ⵠⲆΔΔᐃΔΔ: "img/bignight-kraken.png",
    ⲆᐃΔⲆⲆᐃⲆ: "img/bignight-piranha.png",
    ΔⵠⲆΔⲆⲆΔ: "img/bignight-cactus.png",
    ᐃΔᐃᐃΔⵠⵠ: "img/bignight-magma.png",
    ⲆᐃᐃᐃⲆⵠⵠ: "img/bignight-aquamarine1.png",
    ⵠⵠⵠⵠⵠᐃΔ: "img/bignight-aquamarine2.png",
    ᐃⲆⲆⲆΔᐃⲆ: "img/bignight-coal1.png",
    ΔⲆΔⵠⵠⵠⲆ: "img/bignight-coal2.png",
    ᐃⲆΔᐃΔᐃⵠ: "img/bignight-ruby1.png",
    ΔΔΔΔⲆⵠᐃ: "img/bignight-ruby2.png",
    ᐃᐃⲆΔΔᐃⵠ: "img/bignight-jade1.png",
    ⲆⵠⲆⲆΔᐃⵠ: "img/bignight-jade2.png",
    ᐃΔᐃⲆᐃᐃΔ: "img/bignight-sapphire1.png",
    ⲆⲆΔⵠΔⲆⵠ: "img/bignight-sapphire2.png",
    ᐃᐃΔⵠⲆᐃΔ: "img/bignight-topaz1.png",
    ⵠΔΔᐃΔⲆⵠ: "img/bignight-topaz2.png",
    ΔΔᐃⲆⲆΔⲆ: "img/bignight-iron1.png",
    ᐃΔᐃΔⵠᐃΔ: "img/bignight-iron2.png",
    ΔⲆⵠᐃⲆᐃⵠ: "img/bignight-copper1.png",
    ΔΔⲆᐃΔⵠⵠ: "img/bignight-copper2.png",
    ΔⵠᐃⲆⵠΔⲆ: "img/bignight-jungle-tree.png",
    ⲆΔΔⲆⵠⵠⲆ: "img/bignight-jungle-bush.png",
    ⲆⲆΔⵠᐃΔΔ: "img/bignight-jungle-stone1.png",
    ΔΔΔⲆⵠΔⵠ: "img/bignight-jungle-stone2.png",
    ⵠᐃⵠⵠᐃᐃⵠ: "img/bignight-banana-plant.png",
    ⵠⵠⵠΔⲆᐃⲆ: "img/bigday-desert.png",
    ᐃΔⲆⲆΔΔΔ: "img/bigday-winter.png",
    ⵠᐃᐃⵠᐃΔⵠ: "img/bigday-lava.png",
    ⲆΔᐃᐃᐃⲆΔ: "img/bigday-forest.png",
    ΔⲆⵠᐃᐃⲆᐃ: "img/bigday-jungle.png",
    ΔΔᐃΔΔᐃᐃ: "img/bignight-desert.png",
    ᐃΔⵠⵠΔᐃΔ: "img/bignight-winter.png",
    ⵠᐃⵠⲆⲆⲆⲆ: "img/bignight-lava.png",
    ᐃⲆⲆⲆᐃΔⲆ: "img/bignight-forest.png",
    ΔⵠⵠⲆⵠΔΔ: "img/bignight-jungle.png",
    ᐃΔⵠΔⵠᐃⵠ: "img/day-river-wave.png",
    ΔΔⲆΔΔᐃᐃ: "img/night-river-wave.png",
    ΔΔΔΔⵠᐃᐃ: "img/day-fog0.png",
    ⵠⲆⵠⲆⲆᐃⵠ: "img/day-fog1.png",
    ᐃᐃⲆⵠⲆⵠΔ: "img/day-fog2.png",
    ⵠⲆⲆΔⲆᐃΔ: "img/night-fog0.png",
    ⲆᐃᐃⵠⲆⲆΔ: "img/night-fog1.png",
    ᐃᐃⲆΔᐃⲆᐃ: "img/night-fog2.png",
    ΔᐃⲆᐃΔᐃⲆ: "img/day-fogdesert0.png",
    ΔᐃᐃᐃⲆᐃᐃ: "img/day-fogdesert1.png",
    ⵠⵠᐃⲆᐃⵠΔ: "img/day-fogdesert2.png",
    ᐃⵠⲆᐃΔⵠΔ: "img/night-fogdesert0.png",
    ΔⲆΔⵠᐃⲆⲆ: "img/night-fogdesert1.png",
    ΔᐃᐃⵠⲆᐃΔ: "img/night-fogdesert2.png",
    ΔᐃⵠⲆⲆⵠⵠ: "img/day-cross-server.png",
    ᐃⲆᐃΔᐃⵠⲆ: "img/day-here-server.png",
    ᐃᐃΔⵠΔᐃⵠ: "img/day-finish-server.png",
    ⲆΔᐃⵠᐃᐃΔ: "img/day-item-server.png",
    ⵠᐃᐃΔⲆΔΔ: "img/day-skull-server.png",
    ⵠᐃΔᐃᐃⵠᐃ: "img/night-cross-server.png",
    ⲆᐃⲆⲆΔᐃΔ: "img/night-here-server.png",
    ⵠΔΔⵠᐃⲆⲆ: "img/night-finish-server.png",
    ΔᐃΔΔⵠⵠΔ: "img/night-item-server.png",
    ⵠⲆⲆⲆΔᐃᐃ: "img/night-skull-server.png",
    ⵠⵠΔΔⵠᐃΔ: "img/day-reidite0.png",
    ⲆⵠᐃΔⲆⵠᐃ: "img/night-reidite0.png",
    ΔⲆΔΔⵠΔⵠ: "img/day-reidite1.png",
    ⲆΔⵠⵠⵠΔᐃ: "img/night-reidite1.png",
    ⲆΔΔⲆΔⵠᐃ: "img/day-reidite2.png",
    ⵠⲆᐃΔⲆΔΔ: "img/night-reidite2.png",
    ⲆⵠᐃⵠΔⲆΔ: "img/day-lava1.png",
    ᐃⲆᐃᐃΔⲆΔ: "img/night-lava1.png",
    ⲆᐃᐃⲆⲆᐃⵠ: "img/day-lava2.png",
    ΔΔⲆΔΔⵠΔ: "img/night-lava2.png",
    ⵠᐃⵠⵠᐃΔⵠ: "img/day-lava3.png",
    ⵠᐃⲆᐃΔᐃᐃ: "img/night-lava3.png",
    ⲆⲆᐃΔⵠⵠᐃ: "img/day-lava4.png",
    ⲆᐃⲆᐃⲆΔⵠ: "img/night-lava4.png",
    ᐃⲆΔΔᐃⵠᐃ: "img/day-lava5.png",
    ᐃⵠΔⲆᐃⲆᐃ: "img/night-lava5.png",
    ⲆⲆⵠⵠΔᐃⵠ: "img/day-lava6.png",
    ⲆⲆᐃⵠⵠΔΔ: "img/night-lava6.png",
    ⵠᐃⲆΔΔΔΔ: "img/day-lava-ground1.png",
    ΔⲆⲆⲆⵠⵠᐃ: "img/night-lava-ground1.png",
    ⵠⲆΔᐃⲆᐃⵠ: "img/day-lava-ground2.png",
    ⵠΔⵠⲆΔⲆⵠ: "img/night-lava-ground2.png",
    ⲆΔᐃᐃⵠᐃΔ: "img/day-lava-ground3.png",
    ᐃᐃⵠⲆᐃⵠⲆ: "img/night-lava-ground3.png",
    ⵠΔⵠᐃΔᐃΔ: "img/day-lava-ground4.png",
    ⵠⵠΔⵠⲆᐃⲆ: "img/night-lava-ground4.png",
    ⲆΔΔΔⲆΔⵠ: "img/day-lava-ground5.png",
    ΔΔΔΔᐃᐃⵠ: "img/night-lava-ground5.png",
    ΔⵠΔΔΔⲆⲆ: "img/day-lava-ground6.png",
    ᐃⵠⲆⲆⲆᐃⵠ: "img/night-lava-ground6.png",
    ⲆᐃΔᐃΔᐃⵠ: "img/day-fire-mob.png",
    ᐃᐃᐃΔᐃⵠᐃ: "img/night-fire-mob.png",
    ⵠⵠⵠⵠᐃΔᐃ: "img/hurt-fire-mob.png",
    ᐃⲆΔᐃΔⵠᐃ: "img/day-diamond-protection.png",
    ⵠⲆᐃᐃᐃΔᐃ: "img/night-diamond-protection.png",
    ⵠⵠᐃΔⵠᐃⵠ: "img/day-hand-diamond-protection.png",
    ᐃⵠΔᐃᐃΔⵠ: "img/night-hand-diamond-protection.png",
    ᐃΔᐃⵠⲆⵠⲆ: "img/inv-diamond-protection-out.png",
    ⲆᐃⵠΔⵠⵠⵠ: "img/inv-diamond-protection-in.png",
    ΔⲆΔΔⲆΔⵠ: "img/inv-diamond-protection-click.png",
    ⵠᐃΔΔⵠΔΔ: "img/day-amethyst-protection.png",
    ᐃᐃⲆᐃΔⲆⵠ: "img/night-amethyst-protection.png",
    ΔᐃⵠⲆⲆⵠᐃΔⲆ: "img/day-hand-amethyst-protection.png",
    ΔⲆᐃⵠⵠⲆᐃΔⲆ: "img/night-hand-amethyst-protection.png",
    ⲆⲆⲆⲆⵠᐃᐃ: "img/inv-amethyst-protection-out.png",
    ⵠΔΔⵠᐃᐃⵠ: "img/inv-amethyst-protection-in.png",
    ᐃᐃΔⵠᐃⲆᐃ: "img/inv-amethyst-protection-click.png",
    ΔⵠⲆᐃⲆΔⲆ: "img/day-reidite-sword.png",
    ⲆⲆΔΔⲆⲆᐃ: "img/night-reidite-sword.png",
    ⵠⲆⲆⲆⲆⵠⲆ: "img/inv-reidite-sword-out.png",
    ΔᐃⲆΔⲆⵠⵠ: "img/inv-reidite-sword-in.png",
    ᐃⲆⲆΔⲆⵠΔ: "img/inv-reidite-sword-click.png",
    ⵠⵠⵠⵠⵠΔᐃ: "img/inv-reidite-out.png",
    ΔⵠᐃΔᐃᐃᐃ: "img/inv-reidite-in.png",
    ⵠⲆⲆᐃΔⲆΔ: "img/inv-reidite-click.png",
    ᐃΔΔⲆΔΔⲆ: "img/inv-flame-out.png",
    ⲆⵠⲆⵠⵠⵠⲆ: "img/inv-flame-in.png",
    ᐃⲆⲆⲆᐃⲆΔ: "img/inv-flame-click.png",
    ᐃⲆᐃⵠⲆΔΔ: "img/day-magma-buble0.png",
    ⲆΔᐃᐃΔⲆᐃ: "img/night-magma-buble0.png",
    ΔⲆΔⵠⵠⵠⵠ: "img/day-magma-buble1.png",
    ᐃΔⵠⵠΔⵠᐃ: "img/night-magma-buble1.png",
    ⵠⵠⲆⲆΔᐃᐃ: "img/day-magma-buble2.png",
    ⵠⲆᐃΔΔΔⲆ: "img/night-magma-buble2.png",
    ΔΔᐃⲆᐃⲆⵠ: "img/day-lava-dragon.png",
    ΔΔΔΔⲆⵠΔ: "img/night-lava-dragon.png",
    ᐃᐃⲆⲆⵠⵠⵠⲆᐃ: "img/day-fire-dragon.png",
    ᐃⲆⲆᐃⵠΔᐃΔΔ: "img/night-fire-dragon.png",
    ⲆⵠΔᐃᐃⲆⲆ: "img/hurt-lava-dragon.png",
    ᐃΔⲆᐃⵠⲆⲆ: "img/day-lava-wing-left.png",
    ᐃⲆⲆᐃⲆⵠⵠ: "img/night-lava-wing-left.png",
    ⵠⵠᐃⵠⲆⵠⲆ: "img/day-lava-wing-right.png",
    ⲆᐃⲆᐃᐃⵠᐃ: "img/night-lava-wing-right.png",
    ⵠᐃⵠⲆΔⵠΔ: "img/hurt-lava-wing-left.png",
    ⲆᐃᐃᐃᐃᐃΔ: "img/hurt-lava-wing-right.png",
    ΔᐃᐃⵠᐃⲆᐃ: "img/day-reidite-spear.png",
    ⵠⲆΔⵠⵠΔⲆ: "img/night-reidite-spear.png",
    ΔⲆᐃᐃⲆⵠⵠ: "img/inv-reidite-spear-out.png",
    ⵠⲆᐃΔⵠⵠᐃ: "img/inv-reidite-spear-in.png",
    ΔΔⵠᐃⵠΔⲆ: "img/inv-reidite-spear-click.png",
    ΔΔᐃⵠⵠⵠⵠ: "img/day-reidite-helmet.png",
    ᐃᐃⲆᐃΔⵠᐃ: "img/night-reidite-helmet.png",
    ΔⵠⲆΔΔᐃᐃ: "img/inv-reidite-helmet-out.png",
    ⲆᐃⵠⲆⵠΔⵠ: "img/inv-reidite-helmet-in.png",
    ⵠⲆΔⵠⲆΔΔ: "img/inv-reidite-helmet-click.png",
    ᐃⲆⵠΔⲆΔΔ: "img/day-hand-reidite-protection.png",
    ΔᐃⲆᐃΔΔᐃ: "img/night-hand-reidite-protection.png",
    ᐃⲆᐃⵠⲆᐃⵠ: "img/day-reidite-protection.png",
    ⵠⵠⲆⵠᐃᐃⲆ: "img/night-reidite-protection.png",
    ᐃᐃΔⵠᐃᐃΔ: "img/inv-reidite-protection-out.png",
    ⲆΔⵠⲆⲆⲆΔ: "img/inv-reidite-protection-in.png",
    ᐃⵠⵠⵠⲆΔⵠ: "img/inv-reidite-protection-click.png",
    ᐃⲆΔΔᐃⲆᐃ: "img/day-lava-dragon-sword.png",
    ᐃᐃⵠΔᐃⵠⲆ: "img/night-lava-dragon-sword.png",
    ᐃⲆⵠΔᐃⲆΔ: "img/inv-lava-dragon-sword-out.png",
    ΔⲆᐃⲆᐃⲆⵠ: "img/inv-lava-dragon-sword-in.png",
    ΔⵠⲆΔᐃⲆⲆ: "img/inv-lava-dragon-sword-click.png",
    ΔΔⵠⲆᐃΔⵠ: "img/day-lava-spear.png",
    ⵠᐃᐃⲆⲆⵠᐃ: "img/night-lava-spear.png",
    ᐃΔΔᐃⲆΔᐃ: "img/inv-lava-spear-out.png",
    ⵠⲆΔⲆᐃΔΔ: "img/inv-lava-spear-in.png",
    ΔΔᐃᐃᐃΔⵠ: "img/inv-lava-spear-click.png",
    ᐃⲆⵠΔⲆⵠⲆ: "img/day-lava-helmet.png",
    ⵠᐃᐃΔΔⵠΔ: "img/night-lava-helmet.png",
    ⵠΔⵠⲆⲆΔᐃ: "img/inv-lava-helmet-out.png",
    ᐃⵠⵠᐃΔᐃⵠ: "img/inv-lava-helmet-in.png",
    ᐃⵠᐃⵠⲆⲆⲆ: "img/inv-lava-helmet-click.png",
    ⵠⵠⵠⵠΔᐃᐃ: "img/day-iron0.png",
    ⵠᐃⵠΔΔᐃⵠ: "img/night-iron0.png",
    ⲆᐃⵠⵠⵠⲆᐃ: "img/day-iron1.png",
    ⲆⵠⵠᐃⲆⵠⵠ: "img/night-iron1.png",
    ΔᐃⵠⲆⲆⵠⲆ: "img/day-iron2.png",
    ⵠⵠΔΔΔⵠⲆ: "img/night-iron2.png",
    ΔΔⲆΔᐃ: "img/inv-iron-click.png",
    ⵠᐃΔⲆⲆΔᐃ: "img/day-copper0.png",
    ⲆΔΔᐃⲆΔⲆ: "img/night-copper0.png",
    ⲆⵠᐃᐃᐃᐃΔ: "img/day-copper1.png",
    ⲆⵠΔⲆᐃᐃⵠ: "img/night-copper1.png",
    ⲆᐃᐃⲆⵠⵠᐃ: "img/day-copper2.png",
    ᐃᐃᐃΔΔⲆᐃ: "img/night-copper2.png",
    ⵠⲆᐃᐃⲆ: "img/inv-copper-click.png",
    ⲆⵠⵠⲆⲆΔΔ: "img/day-topaz0.png",
    ⵠⵠⵠΔΔⲆᐃ: "img/night-topaz0.png",
    ⵠΔΔᐃⲆⵠᐃ: "img/day-topaz1.png",
    ⲆᐃⲆΔΔᐃⵠ: "img/night-topaz1.png",
    ⲆⲆⵠΔⲆΔΔ: "img/day-topaz2.png",
    ⵠⵠⵠΔΔΔⲆ: "img/night-topaz2.png",
    ⵠⵠⲆᐃⵠ: "img/inv-topaz-click.png",
    ⲆⵠᐃΔⵠΔΔ: "img/day-sapphire0.png",
    ᐃᐃᐃᐃⲆⲆΔ: "img/night-sapphire0.png",
    ᐃΔᐃᐃⲆᐃΔ: "img/day-sapphire1.png",
    ᐃⲆᐃⲆᐃⵠⲆ: "img/night-sapphire1.png",
    ⵠΔΔΔⲆᐃⲆ: "img/day-sapphire2.png",
    ⵠᐃΔⲆᐃⵠᐃ: "img/night-sapphire2.png",
    ᐃⲆⵠᐃΔ: "img/inv-sapphire-click.png",
    ⵠⲆⲆⲆⲆΔⵠ: "img/day-jade0.png",
    ᐃⲆΔⲆⲆⲆⲆ: "img/night-jade0.png",
    ᐃⵠⲆᐃⵠⵠΔ: "img/day-jade1.png",
    ⲆᐃⲆᐃⵠⲆⵠ: "img/night-jade1.png",
    ᐃⵠⲆᐃΔᐃⲆ: "img/day-jade2.png",
    ᐃⵠΔΔⲆⵠΔ: "img/night-jade2.png",
    ⲆΔⵠΔΔ: "img/inv-jade-click.png",
    ᐃΔΔⵠᐃⵠΔ: "img/day-ruby0.png",
    ΔⲆⵠⵠᐃⲆᐃ: "img/night-ruby0.png",
    ᐃⲆΔᐃⵠΔᐃ: "img/day-ruby1.png",
    ⲆᐃⲆᐃᐃⲆⲆ: "img/night-ruby1.png",
    ⵠᐃΔⵠⵠⲆⲆ: "img/day-ruby2.png",
    ᐃⵠΔⲆᐃᐃᐃ: "img/night-ruby2.png",
    ⵠᐃⵠⲆΔ: "img/inv-ruby-click.png",
    ⲆⵠΔⲆⲆⵠⲆ: "img/day-aquamarine0.png",
    ⲆᐃⲆⵠⲆⵠⵠ: "img/night-aquamarine0.png",
    ⵠΔⲆᐃⲆᐃⵠ: "img/day-aquamarine1.png",
    ᐃᐃᐃΔⵠΔⵠ: "img/night-aquamarine1.png",
    ⵠⵠΔⵠΔΔⵠ: "img/day-aquamarine2.png",
    ⲆᐃΔΔᐃⲆⲆ: "img/night-aquamarine2.png",
    ⵠᐃΔΔᐃ: "img/inv-aquamarine-click.png",
    ΔᐃᐃΔΔⵠΔ: "img/day-coal0.png",
    ⵠᐃΔⲆⲆⵠΔ: "img/night-coal0.png",
    ΔⲆᐃΔᐃΔⲆ: "img/day-coal1.png",
    ΔⵠΔⲆΔⵠⵠ: "img/night-coal1.png",
    ⵠΔΔⲆⲆⲆⵠ: "img/day-coal2.png",
    ᐃⲆΔⲆΔⲆⲆ: "img/night-coal2.png",
    ⵠⲆᐃΔΔ: "img/inv-coal-click.png",
    ⵠⵠΔΔⲆΔᐃ: "img/day-banana-plant.png",
    ⲆⵠᐃΔⲆΔᐃ: "img/night-banana-plant.png",
    ᐃΔΔᐃⵠⵠᐃ: "img/day-banana.png",
    ᐃᐃᐃⲆᐃΔⲆ: "img/night-banana.png",
    ⵠᐃⵠⵠΔΔᐃ: "img/inv-banana-click.png",
    ⵠⵠⲆⲆᐃⲆΔ: "img/inv-banana-out.png",
    ⵠⲆᐃⲆΔᐃΔ: "img/inv-banana-in.png",
    ⲆⵠΔᐃⵠⲆⵠ: "img/inv-banana-click.png",
    ᐃⵠΔⵠᐃᐃⵠ: "img/day-emerald-helmet.png",
    ⵠΔᐃⵠΔⵠⵠ: "img/night-emerald-helmet.png",
    ᐃΔⲆⵠΔᐃⲆ: "img/inv-emerald-helmet-out.png",
    ΔⵠᐃᐃΔⲆⲆ: "img/inv-emerald-helmet-in.png",
    ⲆⲆᐃⲆᐃⲆⵠ: "img/inv-emerald-helmet-click.png",
    ⵠⵠⵠⲆᐃᐃᐃ: "img/day-copper-helmet.png",
    ΔⵠΔΔⲆⲆΔ: "img/night-copper-helmet.png",
    ⲆΔᐃⲆΔᐃⲆ: "img/inv-copper-helmet-out.png",
    ᐃΔⵠΔΔΔⲆ: "img/inv-copper-helmet-in.png",
    ⵠⲆΔᐃΔⵠᐃ: "img/inv-copper-helmet-click.png",
    ΔΔⵠᐃⵠΔⵠ: "img/day-iron-helmet.png",
    ⵠⵠⵠⲆᐃⲆΔ: "img/night-iron-helmet.png",
    ΔⵠΔᐃΔⲆⲆ: "img/inv-iron-helmet-out.png",
    ⲆⲆΔΔᐃⲆᐃ: "img/inv-iron-helmet-in.png",
    ᐃᐃⲆⲆⲆΔᐃ: "img/inv-iron-helmet-click.png",
    ⲆᐃⵠᐃΔⲆΔ: "img/day-topaz-helmet.png",
    ⲆΔΔΔᐃΔⵠ: "img/night-topaz-helmet.png",
    ⵠΔΔⵠⵠΔⵠ: "img/inv-topaz-helmet-out.png",
    ᐃⲆΔⵠⵠⵠᐃ: "img/inv-topaz-helmet-in.png",
    ΔΔᐃᐃΔⵠⲆ: "img/inv-topaz-helmet-click.png",
    ⲆⵠΔᐃΔⲆⲆ: "img/day-sapphire-helmet.png",
    ΔⵠⲆΔΔΔⲆ: "img/night-sapphire-helmet.png",
    ΔⲆᐃⲆΔᐃⲆ: "img/inv-sapphire-helmet-out.png",
    ᐃⲆⲆΔⵠⵠᐃ: "img/inv-sapphire-helmet-in.png",
    ⵠⵠⵠⵠΔᐃⵠ: "img/inv-sapphire-helmet-click.png",
    ⲆᐃⲆΔΔⵠΔ: "img/day-jade-helmet.png",
    ⵠᐃΔⲆᐃΔΔ: "img/night-jade-helmet.png",
    ᐃⵠⵠⲆᐃⵠᐃ: "img/inv-jade-helmet-out.png",
    ΔᐃⲆⲆⵠΔⲆ: "img/inv-jade-helmet-in.png",
    ⲆΔᐃⵠΔᐃᐃ: "img/inv-jade-helmet-click.png",
    ⵠⲆΔΔⲆⲆᐃ: "img/day-ruby-helmet.png",
    ᐃΔⵠⵠⲆⲆⵠ: "img/night-ruby-helmet.png",
    ΔⵠⵠᐃⵠΔᐃ: "img/inv-ruby-helmet-out.png",
    ΔⵠΔΔᐃⵠᐃ: "img/inv-ruby-helmet-in.png",
    ⲆΔⵠⵠⲆⵠⲆ: "img/inv-ruby-helmet-click.png",
    ⵠⵠΔⲆᐃᐃΔ: "img/day-coal-helmet.png",
    ⲆⲆΔⲆᐃⲆⵠ: "img/night-coal-helmet.png",
    ⵠⲆⲆᐃΔΔΔ: "img/inv-coal-helmet-out.png",
    ⵠⲆⵠΔⵠΔΔ: "img/inv-coal-helmet-in.png",
    ⵠΔΔΔⲆⲆΔ: "img/inv-coal-helmet-click.png",
    ⵠⵠⵠΔΔᐃⵠ: "img/day-aquamarine-helmet.png",
    ⵠⲆⲆΔⵠⲆⵠ: "img/night-aquamarine-helmet.png",
    ΔⵠⵠΔᐃᐃⵠ: "img/inv-aquamarine-helmet-out.png",
    ΔΔⲆⲆΔⵠΔ: "img/inv-aquamarine-helmet-in.png",
    ΔΔⵠΔⲆⵠⵠ: "img/inv-aquamarine-helmet-click.png",
    ⵠⵠΔⲆⵠᐃⲆ: "img/day-copper-pickaxe.png",
    ΔⲆΔⲆⵠΔⵠ: "img/night-copper-pickaxe.png",
    ⵠⲆⵠⵠᐃΔΔ: "img/inv-copper-pickaxe-out.png",
    ᐃⲆⵠᐃΔᐃⲆ: "img/inv-copper-pickaxe-in.png",
    ⲆⵠⵠΔⲆΔΔ: "img/inv-copper-pickaxe-click.png",
    ⲆᐃΔΔΔⵠΔ: "img/day-iron-pickaxe.png",
    ΔΔᐃΔᐃⵠΔ: "img/night-iron-pickaxe.png",
    ⵠⲆΔΔᐃⵠᐃ: "img/inv-iron-pickaxe-out.png",
    ⲆΔⵠⵠⲆⵠⵠ: "img/inv-iron-pickaxe-in.png",
    ΔΔᐃⵠⵠⵠⲆ: "img/inv-iron-pickaxe-click.png",
    ᐃΔⲆⵠΔᐃΔ: "img/day-topaz-pickaxe.png",
    ⲆⵠⲆΔⲆⲆⵠ: "img/night-topaz-pickaxe.png",
    ⵠΔᐃⲆΔΔⲆ: "img/inv-topaz-pickaxe-out.png",
    ΔⲆⲆⵠᐃⵠⵠ: "img/inv-topaz-pickaxe-in.png",
    ᐃᐃⲆᐃⵠΔⵠ: "img/inv-topaz-pickaxe-click.png",
    ᐃᐃⲆⵠᐃⵠⵠ: "img/day-sapphire-pickaxe.png",
    ᐃⲆΔΔⲆⲆᐃ: "img/night-sapphire-pickaxe.png",
    ΔΔΔΔᐃⲆᐃ: "img/inv-sapphire-pickaxe-out.png",
    ᐃⵠⵠⵠΔⲆΔ: "img/inv-sapphire-pickaxe-in.png",
    ⵠⵠΔΔⲆⲆⲆ: "img/inv-sapphire-pickaxe-click.png",
    ᐃΔⲆⲆⵠΔⵠ: "img/day-jade-pickaxe.png",
    ⲆΔⵠᐃⵠⵠⵠ: "img/night-jade-pickaxe.png",
    ⲆⲆⲆⲆⲆⲆⲆ: "img/inv-jade-pickaxe-out.png",
    ⲆⲆⲆⲆΔⲆⲆ: "img/inv-jade-pickaxe-in.png",
    ᐃⵠⲆᐃΔᐃᐃ: "img/inv-jade-pickaxe-click.png",
    ⵠⵠⲆⲆⵠⲆᐃ: "img/day-ruby-pickaxe.png",
    ᐃᐃⲆⵠᐃⵠΔ: "img/night-ruby-pickaxe.png",
    ΔΔⲆᐃᐃΔΔ: "img/inv-ruby-pickaxe-out.png",
    ⵠΔΔⵠⲆⵠⵠ: "img/inv-ruby-pickaxe-in.png",
    ⵠΔⲆⵠΔⲆⲆ: "img/inv-ruby-pickaxe-click.png",
    ⲆᐃΔΔⲆⲆᐃ: "img/day-emerald-pickaxe.png",
    ΔᐃⵠⲆΔⵠⲆ: "img/night-emerald-pickaxe.png",
    ΔⲆⲆⲆᐃΔΔ: "img/inv-emerald-pickaxe-out.png",
    ⵠⵠⲆⵠΔⲆᐃ: "img/inv-emerald-pickaxe-in.png",
    ΔΔΔⲆⵠⲆΔ: "img/inv-emerald-pickaxe-click.png",
    ⲆⵠⲆΔᐃⵠⵠ: "img/day-coal-pickaxe.png",
    ⵠΔⲆΔΔⵠᐃ: "img/night-coal-pickaxe.png",
    ⲆᐃⲆⲆⵠΔⵠ: "img/inv-coal-pickaxe-out.png",
    ΔⵠⲆⲆᐃⲆᐃ: "img/inv-coal-pickaxe-in.png",
    ⲆΔΔⲆΔⵠⲆ: "img/inv-coal-pickaxe-click.png",
    ΔΔᐃᐃΔⲆᐃ: "img/day-aquamarine-pickaxe.png",
    ⵠⲆΔᐃⲆⲆⵠ: "img/night-aquamarine-pickaxe.png",
    ⵠᐃⲆᐃᐃᐃᐃ: "img/inv-aquamarine-pickaxe-out.png",
    ⵠⲆⵠΔᐃᐃⲆ: "img/inv-aquamarine-pickaxe-in.png",
    ⲆⲆᐃⲆᐃⵠᐃ: "img/inv-aquamarine-pickaxe-click.png",
    ᐃΔⵠΔΔⲆᐃ: "img/day-copper-hammer.png",
    ΔΔⲆΔᐃᐃΔ: "img/night-copper-hammer.png",
    ⵠᐃΔⵠᐃⲆⵠ: "img/inv-copper-hammer-out.png",
    ᐃⵠⲆⵠⲆᐃⵠ: "img/inv-copper-hammer-in.png",
    ⵠⲆⵠⵠᐃⲆⵠ: "img/inv-copper-hammer-click.png",
    ᐃⵠⵠⲆⵠᐃᐃ: "img/day-iron-hammer.png",
    ΔⵠΔⲆⵠᐃⵠ: "img/night-iron-hammer.png",
    ᐃⵠⵠᐃΔⵠⵠ: "img/inv-iron-hammer-out.png",
    ⲆⵠⵠⵠⵠⲆⲆ: "img/inv-iron-hammer-in.png",
    ⵠΔᐃᐃᐃⵠⵠ: "img/inv-iron-hammer-click.png",
    ⲆⵠⲆᐃΔⲆᐃ: "img/day-topaz-hammer.png",
    ᐃⵠⲆΔⵠⵠΔ: "img/night-topaz-hammer.png",
    ᐃⵠᐃⵠᐃᐃⵠ: "img/inv-topaz-hammer-out.png",
    ⲆᐃⲆΔᐃⵠᐃ: "img/inv-topaz-hammer-in.png",
    ⲆⵠⲆΔⲆⵠⵠ: "img/inv-topaz-hammer-click.png",
    ⵠⵠⵠᐃᐃⵠᐃ: "img/day-sapphire-hammer.png",
    ⲆᐃᐃΔⵠⵠⲆ: "img/night-sapphire-hammer.png",
    ⵠⵠⲆⵠⵠΔΔ: "img/inv-sapphire-hammer-out.png",
    ΔⵠΔᐃⵠⲆᐃ: "img/inv-sapphire-hammer-in.png",
    ᐃⵠⵠⲆᐃⲆΔ: "img/inv-sapphire-hammer-click.png",
    ΔᐃⲆΔᐃᐃⲆ: "img/day-jade-hammer.png",
    ⵠᐃⵠᐃᐃΔⵠ: "img/night-jade-hammer.png",
    ᐃⵠⵠⲆⲆᐃⲆ: "img/inv-jade-hammer-out.png",
    ⵠᐃᐃΔⲆⵠⲆ: "img/inv-jade-hammer-in.png",
    ⲆⵠⲆᐃⵠᐃᐃ: "img/inv-jade-hammer-click.png",
    ⵠᐃⵠᐃⵠΔΔ: "img/day-ruby-hammer.png",
    ᐃᐃⵠᐃᐃΔΔ: "img/night-ruby-hammer.png",
    ⲆΔⲆⲆᐃᐃᐃ: "img/inv-ruby-hammer-out.png",
    ᐃⲆᐃΔⲆᐃᐃ: "img/inv-ruby-hammer-in.png",
    ⲆΔⵠΔᐃᐃΔ: "img/inv-ruby-hammer-click.png",
    ΔᐃⵠᐃΔⲆᐃ: "img/day-emerald-hammer.png",
    ⲆⵠᐃΔΔᐃⵠ: "img/night-emerald-hammer.png",
    ⲆΔΔΔⲆⲆᐃ: "img/inv-emerald-hammer-out.png",
    ⲆΔⲆᐃΔⲆⲆ: "img/inv-emerald-hammer-in.png",
    ⵠⵠΔⵠΔⵠᐃ: "img/inv-emerald-hammer-click.png",
    ᐃΔⲆᐃΔΔⲆ: "img/day-coal-hammer.png",
    ⲆⲆΔⵠΔΔΔ: "img/night-coal-hammer.png",
    ᐃⵠᐃΔΔΔⵠ: "img/inv-coal-hammer-out.png",
    ⲆᐃⵠⵠⵠⲆⵠ: "img/inv-coal-hammer-in.png",
    ⵠⵠΔΔᐃⵠⵠ: "img/inv-coal-hammer-click.png",
    ΔⵠⵠΔⲆᐃᐃ: "img/day-aquamarine-hammer.png",
    ⲆᐃⵠΔΔᐃⲆ: "img/night-aquamarine-hammer.png",
    ΔᐃⲆⵠᐃⵠⲆ: "img/inv-aquamarine-hammer-out.png",
    ⲆΔΔᐃᐃⵠⵠ: "img/inv-aquamarine-hammer-in.png",
    ᐃⲆᐃⵠⲆⲆⵠ: "img/inv-aquamarine-hammer-click.png",
    ᐃΔᐃⵠΔⵠⲆ: "img/day-copper-shovel.png",
    ⲆⵠⵠⲆⵠΔⲆ: "img/night-copper-shovel.png",
    ΔⵠⲆⵠΔⵠⵠ: "img/inv-copper-shovel-out.png",
    ⲆΔᐃⲆᐃⵠⲆ: "img/inv-copper-shovel-in.png",
    ΔᐃΔⵠΔᐃⵠ: "img/inv-copper-shovel-click.png",
    ⲆⵠⲆᐃⵠⲆΔ: "img/day-iron-shovel.png",
    ⲆᐃΔᐃⵠᐃΔ: "img/night-iron-shovel.png",
    ⵠᐃΔⵠⲆⲆᐃ: "img/inv-iron-shovel-out.png",
    ⲆⲆⵠΔⲆΔⲆ: "img/inv-iron-shovel-in.png",
    ᐃΔᐃⲆᐃᐃᐃ: "img/inv-iron-shovel-click.png",
    ⲆⲆᐃΔⲆΔΔ: "img/day-topaz-shovel.png",
    ΔᐃΔⲆⲆⵠⵠ: "img/night-topaz-shovel.png",
    ⵠᐃᐃⲆΔᐃⲆ: "img/inv-topaz-shovel-out.png",
    ⵠᐃⵠᐃᐃΔᐃ: "img/inv-topaz-shovel-in.png",
    ΔᐃⵠᐃⲆⵠᐃ: "img/inv-topaz-shovel-click.png",
    ᐃᐃⲆⲆⲆⲆΔ: "img/day-sapphire-shovel.png",
    ⵠΔⵠⵠΔⲆⲆ: "img/night-sapphire-shovel.png",
    ⵠᐃⲆᐃΔᐃΔ: "img/inv-sapphire-shovel-out.png",
    ΔⵠᐃⵠⲆⲆⵠ: "img/inv-sapphire-shovel-in.png",
    ᐃⲆⵠΔᐃⲆⵠ: "img/inv-sapphire-shovel-click.png",
    ΔᐃᐃⲆᐃⲆΔ: "img/day-jade-shovel.png",
    ⵠΔⵠΔΔᐃᐃ: "img/night-jade-shovel.png",
    ΔⲆΔΔᐃᐃⵠ: "img/inv-jade-shovel-out.png",
    ⵠᐃⵠᐃⲆⲆΔ: "img/inv-jade-shovel-in.png",
    ᐃⵠᐃⲆⲆⵠΔ: "img/inv-jade-shovel-click.png",
    ⲆⲆᐃᐃⵠΔΔ: "img/day-ruby-shovel.png",
    ⲆᐃΔΔᐃⲆΔ: "img/night-ruby-shovel.png",
    ⲆᐃⲆⵠᐃⲆᐃ: "img/inv-ruby-shovel-out.png",
    ᐃΔᐃⲆⲆⲆⲆ: "img/inv-ruby-shovel-in.png",
    ᐃΔΔⵠᐃᐃⵠ: "img/inv-ruby-shovel-click.png",
    ᐃᐃΔⵠΔΔᐃ: "img/day-emerald-shovel.png",
    ΔⵠΔⵠΔᐃⲆ: "img/night-emerald-shovel.png",
    ᐃⵠᐃᐃΔΔΔ: "img/inv-emerald-shovel-out.png",
    ⲆⲆⵠⵠᐃᐃⵠ: "img/inv-emerald-shovel-in.png",
    ᐃⲆⵠᐃᐃΔΔ: "img/inv-emerald-shovel-click.png",
    ⲆΔⵠⵠⲆΔᐃ: "img/day-reidite-shovel.png",
    ΔⵠΔᐃᐃⵠⵠ: "img/night-reidite-shovel.png",
    ΔᐃᐃⵠᐃⲆΔ: "img/inv-reidite-shovel-out.png",
    ΔΔΔⲆᐃⵠΔ: "img/inv-reidite-shovel-in.png",
    ΔᐃᐃⵠⲆᐃᐃ: "img/inv-reidite-shovel-click.png",
    ⲆⵠⵠⵠⲆΔⲆ: "img/day-coal-shovel.png",
    ⵠⲆⲆΔΔΔⲆ: "img/night-coal-shovel.png",
    ΔⵠᐃΔⵠΔΔ: "img/inv-coal-shovel-out.png",
    ΔⵠᐃⲆⵠΔⵠ: "img/inv-coal-shovel-in.png",
    ⲆⵠΔⵠΔᐃⲆ: "img/inv-coal-shovel-click.png",
    ⲆᐃⵠᐃΔⲆⵠ: "img/day-aquamarine-shovel.png",
    ⵠⵠⲆᐃⲆⲆⲆ: "img/night-aquamarine-shovel.png",
    ΔΔΔᐃᐃΔⲆ: "img/inv-aquamarine-shovel-out.png",
    ⲆⵠΔⵠⲆⲆⲆ: "img/inv-aquamarine-shovel-in.png",
    ᐃΔΔᐃⵠⵠⲆ: "img/inv-aquamarine-shovel-click.png",
    ᐃᐃᐃⵠⵠⲆᐃ: "img/day-copper-sword.png",
    ᐃⲆΔᐃΔⵠⲆ: "img/night-copper-sword.png",
    ᐃⵠΔᐃΔⵠⲆ: "img/inv-copper-sword-out.png",
    ᐃΔⲆᐃᐃΔᐃ: "img/inv-copper-sword-in.png",
    ᐃΔΔⵠⲆⲆⲆ: "img/inv-copper-sword-click.png",
    ΔⲆΔᐃΔⲆΔ: "img/day-iron-sword.png",
    ΔᐃΔΔᐃΔΔ: "img/night-iron-sword.png",
    ᐃᐃⵠᐃⲆⵠⵠ: "img/inv-iron-sword-out.png",
    ΔΔᐃᐃᐃᐃᐃ: "img/inv-iron-sword-in.png",
    ⲆΔᐃᐃⲆⵠⲆ: "img/inv-iron-sword-click.png",
    ΔⵠᐃⲆⲆⵠᐃ: "img/day-topaz-sword.png",
    ΔⵠⲆΔᐃᐃΔ: "img/night-topaz-sword.png",
    ᐃΔΔΔⲆᐃⲆ: "img/inv-topaz-sword-out.png",
    ΔⲆⵠΔⵠⵠⵠ: "img/inv-topaz-sword-in.png",
    ΔᐃΔΔⲆⲆᐃ: "img/inv-topaz-sword-click.png",
    ⵠΔΔΔⲆᐃΔ: "img/day-sapphire-sword.png",
    ⵠⲆⲆⵠᐃⵠᐃ: "img/night-sapphire-sword.png",
    ⲆΔⲆΔΔΔⵠ: "img/inv-sapphire-sword-out.png",
    ⵠⲆᐃᐃΔᐃᐃ: "img/inv-sapphire-sword-in.png",
    ΔⲆᐃⲆⲆᐃΔ: "img/inv-sapphire-sword-click.png",
    ⲆΔⵠᐃⵠΔⲆ: "img/day-jade-sword.png",
    ⵠⵠⲆΔᐃⵠⵠ: "img/night-jade-sword.png",
    ΔⵠⵠΔᐃΔⲆ: "img/inv-jade-sword-out.png",
    ᐃⲆⵠΔⲆⲆᐃ: "img/inv-jade-sword-in.png",
    ⲆⵠΔΔⲆⵠᐃ: "img/inv-jade-sword-click.png",
    ΔᐃΔΔΔΔⵠ: "img/day-ruby-sword.png",
    ΔⵠᐃᐃᐃΔᐃ: "img/night-ruby-sword.png",
    ⲆᐃⲆᐃⲆᐃᐃ: "img/inv-ruby-sword-out.png",
    ΔΔⵠⵠᐃΔⵠ: "img/inv-ruby-sword-in.png",
    ⲆⲆⵠⲆΔⲆⲆ: "img/inv-ruby-sword-click.png",
    ⵠⲆⵠⵠᐃΔᐃ: "img/day-emerald-sword.png",
    ΔΔⲆⲆΔᐃⲆ: "img/night-emerald-sword.png",
    ⵠΔⵠΔⲆᐃⲆ: "img/inv-emerald-sword-out.png",
    ᐃΔⵠΔⵠⲆΔ: "img/inv-emerald-sword-in.png",
    ΔᐃΔΔⵠᐃΔ: "img/inv-emerald-sword-click.png",
    ᐃⲆΔⲆⲆⵠⲆ: "img/day-coal-sword.png",
    ᐃΔⲆⵠⵠⵠΔ: "img/night-coal-sword.png",
    ⵠΔⵠⲆᐃⵠⲆ: "img/inv-coal-sword-out.png",
    ⵠⲆΔⵠΔⲆΔ: "img/inv-coal-sword-in.png",
    ᐃᐃΔΔΔΔΔ: "img/inv-coal-sword-click.png",
    ⵠⲆᐃΔⵠΔΔ: "img/day-aquamarine-sword.png",
    ⲆⲆᐃⲆⲆᐃΔ: "img/night-aquamarine-sword.png",
    ᐃⲆΔⲆΔⵠⵠ: "img/inv-aquamarine-sword-out.png",
    ⵠᐃᐃⵠⲆⵠΔ: "img/inv-aquamarine-sword-in.png",
    ⲆⲆᐃⲆⲆᐃⲆ: "img/inv-aquamarine-sword-click.png",
    ᐃⵠΔΔⵠⲆᐃ: "img/day-copper-spear.png",
    ⲆᐃⵠⲆᐃᐃΔ: "img/night-copper-spear.png",
    ΔᐃᐃᐃᐃΔΔ: "img/inv-copper-spear-out.png",
    ⵠΔᐃⵠΔⵠⲆ: "img/inv-copper-spear-in.png",
    ΔΔⵠΔⵠᐃⲆ: "img/inv-copper-spear-click.png",
    ΔⲆⵠⵠⵠᐃᐃ: "img/day-iron-spear.png",
    ⵠᐃΔⵠΔⵠⵠ: "img/night-iron-spear.png",
    ΔΔΔⵠΔⵠᐃ: "img/inv-iron-spear-out.png",
    ⲆⲆΔᐃᐃⵠΔ: "img/inv-iron-spear-in.png",
    ΔΔΔⲆΔⵠⲆ: "img/inv-iron-spear-click.png",
    ⲆᐃᐃⵠᐃⲆᐃ: "img/day-topaz-spear.png",
    ⲆⲆΔᐃⵠⲆᐃ: "img/night-topaz-spear.png",
    ᐃⵠᐃΔⵠΔⲆ: "img/inv-topaz-spear-out.png",
    ᐃΔᐃⲆⲆΔᐃ: "img/inv-topaz-spear-in.png",
    ⲆᐃⵠⲆΔⲆⵠ: "img/inv-topaz-spear-click.png",
    ⵠΔⵠᐃⵠⵠΔ: "img/day-sapphire-spear.png",
    ⵠⲆⲆⵠⵠⲆⲆ: "img/night-sapphire-spear.png",
    ᐃᐃᐃΔⵠⲆᐃ: "img/inv-sapphire-spear-out.png",
    ⲆⲆᐃΔΔΔⲆ: "img/inv-sapphire-spear-in.png",
    ᐃⲆⵠΔⲆⵠᐃ: "img/inv-sapphire-spear-click.png",
    ΔⲆⲆⲆⲆᐃᐃ: "img/day-jade-spear.png",
    ⵠᐃⵠΔΔΔΔ: "img/night-jade-spear.png",
    ⲆᐃΔⲆⵠΔⵠ: "img/inv-jade-spear-out.png",
    Δⵠᐃⵠᐃᐃⵠ: "img/inv-jade-spear-in.png",
    ⵠⲆᐃᐃⲆⵠΔ: "img/inv-jade-spear-click.png",
    ⲆΔⵠⲆᐃᐃΔ: "img/day-ruby-spear.png",
    ⲆⵠⵠΔΔΔⵠ: "img/night-ruby-spear.png",
    ⲆΔⵠⵠΔⵠⵠ: "img/inv-ruby-spear-out.png",
    ⲆⵠⲆⵠΔΔⵠ: "img/inv-ruby-spear-in.png",
    ᐃᐃΔΔᐃᐃⵠ: "img/inv-ruby-spear-click.png",
    ᐃⵠΔᐃᐃⵠⲆ: "img/day-emerald-spear.png",
    ⲆⵠΔⵠᐃⵠⵠ: "img/night-emerald-spear.png",
    ⵠᐃᐃΔⲆⵠⵠ: "img/inv-emerald-spear-out.png",
    ⵠⲆⵠΔᐃⵠᐃ: "img/inv-emerald-spear-in.png",
    ⵠΔⲆⵠⵠΔⵠ: "img/inv-emerald-spear-click.png",
    ᐃⵠΔᐃᐃⵠⲆ: "img/day-emerald-spear.png",
    ⲆⵠΔⵠᐃⵠⵠ: "img/night-emerald-spear.png",
    ⵠᐃᐃΔⲆⵠⵠ: "img/inv-emerald-spear-out.png",
    ⵠⲆⵠΔᐃⵠᐃ: "img/inv-emerald-spear-in.png",
    ⵠΔⲆⵠⵠΔⵠ: "img/inv-emerald-spear-click.png",
    ᐃᐃΔⵠⵠΔⲆ: "img/day-coal-spear.png",
    ΔᐃⲆΔⲆᐃᐃ: "img/night-coal-spear.png",
    ⵠΔⵠΔΔᐃⵠ: "img/inv-coal-spear-out.png",
    ᐃᐃⲆᐃᐃᐃⵠ: "img/inv-coal-spear-in.png",
    ᐃᐃᐃⵠⵠΔΔ: "img/inv-coal-spear-click.png",
    ⵠΔΔⲆⵠⲆᐃ: "img/day-aquamarine-spear.png",
    ⵠⲆⵠᐃⵠΔⵠ: "img/night-aquamarine-spear.png",
    ⲆᐃⲆⲆⵠΔᐃ: "img/inv-aquamarine-spear-out.png",
    ⲆⲆⵠΔΔΔΔ: "img/inv-aquamarine-spear-in.png",
    ᐃΔΔᐃⲆᐃⲆ: "img/inv-aquamarine-spear-click.png",
    ᐃΔΔⲆⲆΔΔ: "img/day-copper-bow.png",
    ⲆⲆⲆΔΔᐃⲆ: "img/night-copper-bow.png",
    ΔᐃᐃⲆⲆⲆⵠ: "img/inv-copper-bow-out.png",
    ΔⵠⲆΔⵠⲆΔ: "img/inv-copper-bow-in.png",
    ΔⲆΔⲆⵠᐃΔ: "img/inv-copper-bow-click.png",
    ⲆⲆΔΔᐃᐃⵠ: "img/day-iron-bow.png",
    ⵠⲆⵠΔⵠⵠⲆ: "img/night-iron-bow.png",
    ΔⵠᐃⲆⲆΔⲆ: "img/inv-iron-bow-out.png",
    ΔⵠᐃⲆΔᐃⲆ: "img/inv-iron-bow-in.png",
    ΔⲆᐃⲆⵠᐃᐃ: "img/inv-iron-bow-click.png",
    ΔⲆΔⵠⵠⲆΔ: "img/day-topaz-bow.png",
    ᐃᐃΔⲆΔᐃΔ: "img/night-topaz-bow.png",
    ⲆⵠⲆⲆᐃⵠᐃ: "img/inv-topaz-bow-out.png",
    ᐃⲆⲆΔⵠᐃΔ: "img/inv-topaz-bow-in.png",
    ΔΔΔΔᐃⵠⲆ: "img/inv-topaz-bow-click.png",
    ᐃⲆᐃΔᐃⲆᐃ: "img/day-sapphire-bow.png",
    ΔΔᐃᐃᐃⲆⵠ: "img/night-sapphire-bow.png",
    ⲆⵠΔⵠⵠΔⵠ: "img/inv-sapphire-bow-out.png",
    ΔⵠᐃⵠⵠⲆΔ: "img/inv-sapphire-bow-in.png",
    ⵠⵠᐃⵠⲆⵠⵠ: "img/inv-sapphire-bow-click.png",
    ⲆΔΔⲆⵠᐃⲆ: "img/day-jade-bow.png",
    ΔᐃΔⵠᐃΔΔ: "img/night-jade-bow.png",
    ⵠΔᐃΔᐃⲆⵠ: "img/inv-jade-bow-out.png",
    ⵠⲆΔᐃᐃᐃΔ: "img/inv-jade-bow-in.png",
    ΔⵠᐃⵠΔⵠⵠ: "img/inv-jade-bow-click.png",
    ΔΔᐃⵠᐃᐃⵠ: "img/day-ruby-bow.png",
    ⲆⲆΔⲆⵠᐃⵠ: "img/night-ruby-bow.png",
    ⵠⲆᐃΔΔᐃΔ: "img/inv-ruby-bow-out.png",
    ⲆᐃᐃΔⵠᐃᐃ: "img/inv-ruby-bow-in.png",
    ⲆⲆΔΔΔⲆΔ: "img/inv-ruby-bow-click.png",
    ⲆⲆⲆᐃᐃΔⲆ: "img/day-emerald-bow.png",
    ΔΔⵠΔⵠⲆᐃ: "img/night-emerald-bow.png",
    ⵠⲆⵠⵠⲆⲆⵠ: "img/inv-emerald-bow-out.png",
    ⵠⲆⲆⲆᐃᐃΔ: "img/inv-emerald-bow-in.png",
    ⲆⵠᐃΔⲆⲆΔ: "img/inv-emerald-bow-click.png",
    ⵠᐃⲆⲆᐃᐃᐃ: "img/day-coal-bow.png",
    ΔΔⲆⵠⵠⲆⵠ: "img/night-coal-bow.png",
    ΔᐃᐃᐃⲆⵠⲆ: "img/inv-coal-bow-out.png",
    ΔⵠⲆⲆΔΔΔ: "img/inv-coal-bow-in.png",
    ΔⲆΔⲆⵠⵠᐃ: "img/inv-coal-bow-click.png",
    ᐃᐃᐃᐃⲆⵠⵠ: "img/day-aquamarine-bow.png",
    ⵠᐃⵠⲆⲆᐃⲆ: "img/night-aquamarine-bow.png",
    ⲆⲆⲆⵠⵠⵠⵠ: "img/inv-aquamarine-bow-out.png",
    Δⵠᐃᐃⵠⵠⵠ: "img/inv-aquamarine-bow-in.png",
    ⵠᐃⲆⵠᐃΔⵠ: "img/inv-aquamarine-bow-click.png",
    ⲆᐃⵠΔⵠᐃⲆ: "img/day-copper-arrow.png",
    ᐃᐃⲆᐃᐃⲆΔ: "img/night-copper-arrow.png",
    ᐃΔΔᐃᐃΔⲆ: "img/inv-copper-arrow-out.png",
    ⵠⲆΔⵠⲆᐃΔ: "img/inv-copper-arrow-in.png",
    ⵠᐃⵠⵠᐃⲆⲆ: "img/inv-copper-arrow-click.png",
    ΔΔⲆⲆⵠᐃᐃ: "img/day-iron-arrow.png",
    ⲆᐃⲆⲆΔᐃⵠ: "img/night-iron-arrow.png",
    ⲆⲆⵠᐃΔⵠⵠ: "img/inv-iron-arrow-out.png",
    ⵠⵠᐃⵠⵠⵠΔ: "img/inv-iron-arrow-in.png",
    ΔⵠᐃⲆΔⵠⵠ: "img/inv-iron-arrow-click.png",
    ⵠⵠⵠᐃΔΔᐃ: "img/day-topaz-arrow.png",
    ⵠⲆΔΔΔⲆⲆ: "img/night-topaz-arrow.png",
    ⲆΔΔⵠⵠⲆᐃ: "img/inv-topaz-arrow-out.png",
    ⵠⵠΔⵠΔΔΔ: "img/inv-topaz-arrow-in.png",
    ⲆⲆⲆᐃⵠΔⵠ: "img/inv-topaz-arrow-click.png",
    ᐃⵠⵠᐃᐃᐃᐃ: "img/day-sapphire-arrow.png",
    ⲆᐃⵠᐃΔᐃᐃ: "img/night-sapphire-arrow.png",
    ⲆᐃᐃΔΔᐃΔ: "img/inv-sapphire-arrow-out.png",
    ⲆᐃᐃⵠᐃΔΔ: "img/inv-sapphire-arrow-in.png",
    ⲆᐃᐃΔⲆⲆᐃ: "img/inv-sapphire-arrow-click.png",
    ⲆⲆⵠᐃᐃᐃⲆ: "img/day-jade-arrow.png",
    ᐃⵠⵠⲆⵠⵠΔ: "img/night-jade-arrow.png",
    ᐃΔⲆⵠΔⵠᐃ: "img/inv-jade-arrow-out.png",
    ΔⵠΔᐃᐃⲆᐃ: "img/inv-jade-arrow-in.png",
    ⲆΔΔⲆⵠⲆᐃ: "img/inv-jade-arrow-click.png",
    ⲆΔⲆⵠⵠΔᐃ: "img/day-ruby-arrow.png",
    ᐃⵠΔⲆⵠⲆⵠ: "img/night-ruby-arrow.png",
    ⲆΔⵠⲆᐃᐃᐃ: "img/inv-ruby-arrow-out.png",
    ⲆΔΔᐃⲆᐃΔ: "img/inv-ruby-arrow-in.png",
    ⲆᐃⲆᐃᐃⵠⵠ: "img/inv-ruby-arrow-click.png",
    ⲆΔⵠᐃⲆⲆⲆ: "img/day-emerald-arrow.png",
    ⵠⵠΔᐃⲆⲆᐃ: "img/night-emerald-arrow.png",
    ⵠⲆⲆᐃⵠᐃΔ: "img/inv-emerald-arrow-out.png",
    ⲆΔΔⵠᐃⲆΔ: "img/inv-emerald-arrow-in.png",
    ⵠΔⲆⲆⵠⵠᐃ: "img/inv-emerald-arrow-click.png",
    ᐃΔΔⲆᐃΔⵠ: "img/day-coal-arrow.png",
    ⲆΔᐃⲆⲆⵠᐃ: "img/night-coal-arrow.png",
    ᐃⵠΔⵠⲆⵠⵠ: "img/inv-coal-arrow-out.png",
    ᐃΔⲆⲆⵠᐃᐃ: "img/inv-coal-arrow-in.png",
    ⵠⲆᐃΔΔⵠᐃ: "img/inv-coal-arrow-click.png",
    ΔⵠⵠⵠᐃⲆⲆ: "img/day-aquamarine-arrow.png",
    ᐃⲆΔⵠΔᐃΔ: "img/night-aquamarine-arrow.png",
    ⲆⵠᐃⲆᐃⵠⵠ: "img/inv-aquamarine-arrow-out.png",
    ⲆΔⲆᐃᐃⲆΔ: "img/inv-aquamarine-arrow-in.png",
    ΔΔΔΔΔΔⲆ: "img/inv-aquamarine-arrow-click.png",
    ᐃΔⵠⲆΔᐃⲆ: "img/day-witch-hat.png",
    ⲆⲆᐃⲆΔⲆᐃ: "img/night-witch-hat.png",
    ΔⲆⲆᐃᐃΔⵠ: "img/inv-witch-hat-out.png",
    ᐃⲆⵠΔⵠⵠᐃ: "img/inv-witch-hat-in.png",
    ΔⵠⲆᐃΔᐃⲆ: "img/inv-witch-hat-click.png",
    ⲆⲆⵠᐃⲆⵠⵠ: "img/day-nimbus2000.png",
    ΔⲆᐃⵠⵠⲆⲆ: "img/night-nimbus2000.png",
    ΔΔᐃᐃⲆΔΔ: "img/inv-nimbus2000-out.png",
    ⲆΔΔᐃᐃⵠᐃ: "img/inv-nimbus2000-in.png",
    ⲆΔΔΔᐃⲆᐃ: "img/inv-nimbus2000-click.png",
    ⵠⵠᐃⵠⲆⵠΔ: "img/day-accessory1-pacques.png",
    ⲆᐃᐃⲆΔⲆⵠ: "img/night-accessory1-pacques.png",
    ⵠⵠΔⵠⲆᐃᐃ: "img/day-accessory2-pacques.png",
    ⵠⲆΔⵠΔᐃᐃ: "img/night-accessory2-pacques.png",
    ᐃᐃⲆᐃᐃⵠⲆ: "img/day-accessory3-pacques.png",
    ⵠⲆᐃⲆᐃΔΔ: "img/night-accessory3-pacques.png",
    ᐃᐃΔΔⲆⲆΔ: "img/day-accessory5-pacques.png",
    ⲆΔⵠΔⵠΔⵠ: "img/night-accessory5-pacques.png",
    ΔΔᐃⵠΔⵠᐃ: "img/day-accessory6-pacques.png",
    ᐃⵠⵠⵠⲆΔΔ: "img/night-accessory6-pacques.png",
    ᐃⵠᐃⵠⲆⵠⲆ: "img/day-accessory7-pacques.png",
    ⲆΔⲆⲆⵠⲆⵠ: "img/night-accessory7-pacques.png",
    ⲆⲆⲆΔⵠᐃⵠ: "img/day-accessory8-pacques.png",
    ⲆΔⲆⵠᐃΔⵠ: "img/night-accessory8-pacques.png",
    ⵠΔᐃⲆΔⲆⵠ: "img/day-bag-pacques.png",
    ⲆΔⵠᐃᐃΔΔ: "img/night-bag-pacques.png",
    ᐃΔᐃⵠΔᐃⵠ: "img/day-carrot.png",
    ⲆⲆⲆΔᐃΔΔ: "img/night-carrot.png",
    ⵠΔΔΔᐃΔΔ: "img/day-carrot-dried.png",
    ⲆⵠΔⵠΔΔᐃ: "img/night-carrot-dried.png",
    ⵠⵠΔⲆᐃΔⲆ: "img/day-tomato-herb.png",
    ⵠΔᐃⵠΔᐃΔ: "img/night-tomato-herb.png",
    ᐃⵠᐃΔⲆΔᐃ: "img/day-tomato-herb-dried.png",
    ᐃⵠᐃⲆⵠⲆⵠ: "img/night-tomato-herb-dried.png",
    ⵠⲆⵠⵠᐃⵠⲆ: "img/day-tomato.png",
    ⲆⲆⵠᐃⲆᐃΔ: "img/night-tomato.png",
    ⵠᐃⵠΔᐃᐃⲆⲆⲆ: "img/day-banana.png",
    ⲆⵠᐃᐃΔΔᐃⵠᐃ: "img/night-banana.png",
    ΔᐃⲆⵠᐃⲆⵠ: "img/day-banana-dried.png",
    ᐃᐃⵠⲆᐃΔⲆ: "img/night-banana-dried.png",
    ΔΔᐃΔⲆⵠΔ: "img/inv-carrot-out.png",
    ⲆΔⵠⲆᐃΔΔ: "img/inv-carrot-in.png",
    ⲆⲆᐃᐃⵠᐃᐃ: "img/inv-carrot-click.png",
    ⵠⲆΔⵠⵠⵠΔ: "img/inv-tomato-out.png",
    ⵠᐃⲆΔⲆΔⲆ: "img/inv-tomato-in.png",
    ΔⵠᐃⵠⵠⵠΔ: "img/inv-tomato-click.png",
    ⵠⵠⲆⲆᐃⲆΔ: "img/inv-banana-out.png",
    ⵠⲆᐃⲆΔᐃΔ: "img/inv-banana-in.png",
    ⲆⵠΔᐃⵠⲆⵠ: "img/inv-banana-click.png",
    ⲆⲆⵠᐃΔᐃᐃ: "img/day-player0.png",
    ᐃᐃⵠⵠⲆᐃⵠ: "img/night-player0.png",
    ΔᐃΔᐃᐃᐃᐃ: "img/day-player1.png",
    ⵠⲆⵠⵠⵠᐃⵠ: "img/night-player1.png",
    ⲆΔⲆⵠⲆⵠⲆ: "img/day-player2.png",
    ᐃᐃᐃⲆΔΔⲆ: "img/night-player22.png",
    ᐃⲆᐃⲆᐃⵠΔ: "img/day-player3.png",
    ᐃΔΔΔⵠΔⵠ: "img/night-player33.png",
    ΔⲆⲆᐃΔⲆⵠ: "img/day-player4.png",
    ΔΔᐃᐃΔΔⲆ: "img/night-player4.png",
    ᐃΔᐃⲆⵠⲆⲆ: "img/day-player5.png",
    ⵠᐃⲆᐃᐃΔⵠ: "img/night-player5.png",
    ⲆΔⲆΔⵠΔⵠ: "img/day-player6.png",
    ΔⵠⲆⲆⵠⵠᐃ: "img/night-player6.png",
    ⵠⵠΔΔⲆⲆⵠ: "img/day-player7.png",
    ⵠⵠΔΔⵠΔᐃ: "img/night-player7.png",
    ⵠⲆΔⵠⲆⵠΔ: "img/day-player8.png",
    ᐃΔᐃⵠⵠⵠⵠ: "img/night-player8.png",
    ᐃⲆΔΔΔᐃⲆ: "img/day-player9.png",
    ᐃⵠⲆΔΔⵠᐃ: "img/night-player9.png",
    ⵠΔᐃⲆⲆΔΔ: "img/day-player10.png",
    ⵠΔⲆⵠΔⵠΔ: "img/night-player10.png",
    ΔⲆΔᐃⵠΔᐃ: "img/day-player11.png",
    ⲆΔⵠΔⲆᐃΔ: "img/night-player11.png",
    ᐃⲆⲆⲆⲆⵠᐃ: "img/day-player12.png",
    ΔᐃΔⵠΔΔⲆ: "img/night-player12.png",
    ᐃᐃᐃΔᐃΔⵠ: "img/day-player13.png",
    ΔⲆᐃᐃᐃⵠᐃ: "img/night-player13.png",
    ⵠⵠⲆᐃⲆⲆᐃ: "img/day-player14.png",
    ᐃᐃⵠᐃⲆΔΔ: "img/night-player14.png",
    ⵠⵠⲆᐃⵠⲆᐃ: "img/day-player15.png",
    ⲆΔᐃᐃΔⲆⲆ: "img/night-player15.png",
    ΔΔⲆΔΔⲆⵠ: "img/day-player16.png",
    ⲆΔᐃΔⲆᐃᐃ: "img/night-player16.png",
    ΔⵠⵠΔⵠΔΔ: "img/day-player17.png",
    ᐃⵠⲆⲆⲆᐃᐃ: "img/night-player17.png",
    ⵠᐃᐃΔᐃᐃΔ: "img/day-player18.png",
    ΔⲆᐃⲆⲆΔⵠ: "img/night-player18.png",
    ΔⲆᐃᐃᐃΔⵠ: "img/day-player19.png",
    ᐃⲆⲆᐃⲆⵠᐃ: "img/night-player19.png",
    ⵠᐃⲆⵠᐃⵠᐃ: "img/day-hand-player0.png",
    ⲆΔⲆᐃᐃᐃⵠ: "img/night-hand-player0.png",
    ᐃⵠⵠⲆΔⲆⵠ: "img/day-hand-player1.png",
    ᐃᐃΔᐃⲆⲆᐃ: "img/night-hand-player1.png",
    ᐃⵠᐃⲆⵠⵠᐃ: "img/day-hand-player2.png",
    ⵠⵠⲆᐃΔᐃᐃ: "img/night-hand-player22.png",
    ⲆⲆⵠⲆⲆᐃⲆ: "img/day-hand-player3.png",
    ΔΔᐃΔⲆΔⵠ: "img/night-hand-player33.png",
    ΔⲆᐃⲆⵠⵠᐃ: "img/day-hand-player4.png",
    ⵠⲆᐃΔⵠⲆΔ: "img/night-hand-player4.png",
    ΔⲆᐃΔᐃᐃⵠ: "img/day-hand-player5.png",
    ⵠΔᐃⲆⲆΔⵠ: "img/night-hand-player5.png",
    ΔⲆΔⲆΔⲆᐃ: "img/day-hand-player6.png",
    ⲆᐃᐃⵠⲆΔΔ: "img/night-hand-player6.png",
    ⲆⲆᐃⵠⵠⵠⵠ: "img/day-hand-player7.png",
    ᐃⲆⵠΔⵠⲆⲆ: "img/night-hand-player7.png",
    ΔΔⲆⲆᐃΔΔ: "img/day-hand-player8.png",
    ⵠᐃᐃᐃΔⵠⵠ: "img/night-hand-player8.png",
    ΔΔᐃⵠⵠΔᐃ: "img/day-hand-player9.png",
    ⵠᐃⲆⵠⵠᐃⵠ: "img/night-hand-player9.png",
    ΔᐃⲆⲆᐃⵠΔ: "img/day-hand-player10.png",
    ΔⵠⲆᐃⲆΔΔ: "img/night-hand-player10.png",
    ᐃⲆⲆⲆᐃⵠᐃ: "img/day-hand-player11.png",
    ⵠⲆⵠⵠΔⵠΔ: "img/night-hand-player11.png",
    ΔᐃⲆⲆⲆⲆⵠ: "img/day-hand-player12.png",
    ᐃᐃⵠⲆΔⲆⵠ: "img/night-hand-player12.png",
    ΔᐃⲆΔΔΔⲆ: "img/day-hand-player13.png",
    ΔⵠΔⵠᐃⵠΔ: "img/night-hand-player13.png",
    ⵠᐃⲆᐃⵠⵠᐃ: "img/day-hand-player14.png",
    ΔᐃΔᐃᐃⲆᐃ: "img/night-hand-player14.png",
    ᐃᐃⵠᐃΔⵠⲆ: "img/day-hand-player15.png",
    ΔⵠⲆᐃᐃⵠᐃ: "img/night-hand-player15.png",
    ΔⵠᐃΔΔᐃΔ: "img/day-hand-player16.png",
    ΔⲆⵠⲆⵠΔΔ: "img/night-hand-player16.png",
    ⲆⲆⲆⲆⵠⵠⵠ: "img/day-hand-player17.png",
    ΔᐃᐃΔⵠⵠΔ: "img/night-hand-player17.png",
    ᐃᐃᐃⵠⵠᐃΔ: "img/day-hand-player18.png",
    ⲆⵠΔⲆΔⲆⵠ: "img/night-hand-player18.png",
    ⲆⵠⵠⲆΔᐃⲆ: "img/day-hand-player19.png",
    ΔⵠⲆⲆΔⵠⵠ: "img/night-hand-player19.png",
    ᐃᐃᐃⵠΔᐃᐃ: "img/day-accessory4.png",
    ⲆΔᐃᐃⵠⵠⲆ: "img/night-accessory4.png",
    ᐃⵠⲆΔⵠⵠⵠ: "img/day-accessory9.png",
    ⲆΔᐃΔᐃⵠⵠ: "img/night-accessory9.png",
    ᐃΔᐃΔⵠΔⲆ: "img/day-accessory10.png",
    ⵠᐃᐃᐃⲆⲆⵠ: "img/night-accessory10.png",
    ᐃᐃᐃᐃᐃⵠⵠ: "img/day-accessory11.png",
    ⲆⵠⵠⵠⲆΔΔ: "img/night-accessory11.png",
    ⲆⵠᐃᐃⲆⵠᐃ: "img/day-accessory12.png",
    ᐃⵠⲆⲆᐃⵠⵠ: "img/night-accessory12.png",
    ᐃΔᐃⵠΔⵠⵠ: "img/day-bag.png",
    ΔᐃⲆᐃᐃⲆⲆ: "img/night-bag.png",
    ⲆⵠᐃⵠΔⵠⵠ: "img/inv-bag-out.png",
    ᐃΔᐃΔᐃᐃⵠ: "img/inv-bag-in.png",
    ᐃⵠΔΔⵠⲆⵠ: "img/inv-bag-click.png",
    ΔⲆΔΔᐃΔⲆ: "img/day-pitchfork.png",
    ΔⵠⵠΔⵠⵠΔ: "img/night-pitchfork.png",
    ΔᐃΔᐃⵠⵠⵠ: "img/inv-pitchfork-out.png",
    ⵠⲆΔⵠᐃᐃⵠ: "img/inv-pitchfork-in.png",
    ⲆᐃⵠΔΔⵠⵠ: "img/inv-pitchfork-click.png",
    ⲆᐃⲆⲆΔⵠⲆ: "img/inv-wood-spike-door-out.png",
    ⵠⵠⵠⵠⲆⲆⵠ: "img/inv-wood-spike-door-in.png",
    ΔᐃⵠⵠⲆΔⲆ: "img/inv-wood-spike-door-click.png",
    ⵠⲆΔΔⲆⵠⵠ: "img/inv-stone-spike-door-out.png",
    ⲆΔΔᐃⲆΔⵠ: "img/inv-stone-spike-door-in.png",
    ΔᐃΔⲆᐃⵠΔ: "img/inv-stone-spike-door-click.png",
    ΔΔΔᐃΔᐃᐃ: "img/inv-gold-spike-door-out.png",
    ⲆᐃⵠΔⲆⵠⵠ: "img/inv-gold-spike-door-in.png",
    ⵠΔⲆⲆⵠΔᐃ: "img/inv-gold-spike-door-click.png",
    ⲆᐃⵠΔΔΔⵠ: "img/inv-diamond-spike-door-out.png",
    ⵠⲆⵠⵠΔΔΔ: "img/inv-diamond-spike-door-in.png",
    ᐃᐃΔᐃⵠⵠΔ: "img/inv-diamond-spike-door-click.png",
    ⵠⲆᐃⵠⵠⲆⵠ: "img/inv-amethyst-spike-door-out.png",
    ΔΔⵠⵠⵠⲆⲆ: "img/inv-amethyst-spike-door-in.png",
    ⵠⲆⲆⲆⵠᐃᐃ: "img/inv-amethyst-spike-door-click.png",
    ⲆᐃⵠⲆⲆᐃᐃ: "img/day-wood-spike-door.png",
    ᐃⲆᐃᐃᐃᐃᐃ: "img/night-wood-spike-door.png",
    ⲆⵠΔᐃⲆΔⲆ: "img/day-stone-spike-door.png",
    ᐃΔΔⵠⵠᐃΔ: "img/night-stone-spike-door.png",
    ⵠⲆⲆⲆⲆⵠⵠ: "img/day-gold-spike-door.png",
    ⵠⲆⲆⲆⵠⲆⲆ: "img/night-gold-spike-door.png",
    ⵠΔΔΔᐃⲆⵠ: "img/day-diamond-spike-door.png",
    ᐃΔᐃᐃⵠⲆⲆ: "img/night-diamond-spike-door.png",
    ΔⵠⵠⲆᐃⵠΔ: "img/day-amethyst-spike-door.png",
    ⵠᐃᐃⵠᐃⵠΔ: "img/night-amethyst-spike-door.png",
    ΔΔᐃᐃΔⲆⲆ: "img/inv-reidite-spike-door-out.png",
    ⵠΔΔⵠΔⲆⲆ: "img/inv-reidite-spike-door-in.png",
    ⲆⵠⵠΔΔᐃⲆ: "img/inv-reidite-spike-door-click.png",
    ᐃⵠᐃⵠΔⵠᐃ: "img/inv-reidite-door-out.png",
    ΔΔⵠᐃⲆⲆⲆ: "img/inv-reidite-door-in.png",
    ⲆⲆᐃᐃΔⲆⲆ: "img/inv-reidite-door-click.png",
    ᐃⲆᐃⲆΔⲆΔ: "img/inv-reidite-spike-out.png",
    ᐃⵠᐃᐃΔⵠⲆ: "img/inv-reidite-spike-in.png",
    ⵠⵠⵠΔΔᐃᐃ: "img/inv-reidite-spike-click.png",
    ᐃⲆⲆᐃΔΔⵠ: "img/inv-reidite-wall-out.png",
    ⲆⵠᐃⵠⲆⵠⵠ: "img/inv-reidite-wall-in.png",
    ᐃⲆΔΔⲆΔⲆ: "img/inv-reidite-wall-click.png",
    ⲆΔⵠᐃⲆᐃⲆ: "img/day-reidite-wall.png",
    ᐃΔΔᐃᐃⲆⲆ: "img/night-reidite-wall.png",
    ⲆΔⲆⲆΔᐃⲆ: "img/day-reidite-door.png",
    ΔⵠᐃⲆⲆᐃⵠ: "img/night-reidite-door.png",
    ⲆⲆΔⵠⲆⵠᐃ: "img/day-reidite-spike.png",
    ᐃΔⲆⵠⲆⲆⵠ: "img/night-reidite-spike.png",
    ⲆⲆⵠᐃΔΔᐃ: "img/day-reidite-spike-door.png",
    ᐃⵠᐃⲆⲆᐃΔ: "img/night-reidite-spike-door.png",
    ᐃᐃᐃΔΔΔⵠ: "img/inv-reidite-pickaxe-out.png",
    ᐃⲆᐃⵠⲆⵠⲆ: "img/inv-reidite-pickaxe-in.png",
    ⵠⵠᐃⵠᐃⲆⵠ: "img/inv-reidite-pickaxe-click.png",
    ΔᐃⵠⲆᐃⲆΔ: "img/day-reidite-pickaxe.png",
    ⲆΔᐃᐃᐃᐃⲆ: "img/night-reidite-pickaxe.png",
    ⲆⲆⵠⵠⲆⵠΔ: "img/inv-reidite-hammer-out.png",
    ΔΔⵠᐃΔΔⵠ: "img/inv-reidite-hammer-in.png",
    ΔᐃⲆᐃⵠΔⲆ: "img/inv-reidite-hammer-click.png",
    ⵠΔⵠΔⵠⵠᐃ: "img/day-reidite-hammer.png",
    ⲆᐃᐃᐃⵠⲆᐃ: "img/night-reidite-hammer.png",
    ΔΔⵠΔⵠⲆΔ: "img/day-watermelon1.png",
    ΔᐃⲆⲆⲆᐃⲆ: "img/night-watermelon1.png",
    ΔΔΔⵠⲆⲆᐃ: "img/day-watermelon-dried1.png",
    ⲆᐃⲆΔⲆⵠΔ: "img/night-watermelon-dried1.png",
    ᐃᐃⵠⲆⲆⲆᐃ: "img/inv-watermelon-out.png",
    ⲆΔΔⲆᐃΔⵠ: "img/inv-watermelon-in.png",
    ⲆⵠΔⲆⵠΔᐃ: "img/inv-watermelon-click.png",
    ⵠΔⲆᐃⵠᐃⲆ: "img/day-boat.png",
    ⵠΔΔⲆΔⲆⵠ: "img/night-boat.png",
    ᐃⵠΔᐃΔΔΔ: "img/day-boat-wave.png",
    ⲆᐃΔⵠⵠⵠᐃ: "img/night-boat-wave.png",
    ⵠᐃⲆⲆΔⵠⵠ: "img/inv-boat-out.png",
    ⵠᐃᐃᐃⵠⲆⲆ: "img/inv-boat-in.png",
    ⵠΔⵠⲆⵠⲆⲆ: "img/inv-boat-click.png",
    ⲆᐃⵠΔⲆⵠΔ: "img/day-plane.png",
    Ⲇⵠᐃᐃᐃᐃᐃ: "img/night-plane.png",
    ⲆⵠⲆΔΔᐃΔ: "img/inv-plane-out.png",
    ⵠⲆΔΔΔⲆΔ: "img/inv-plane-in.png",
    ᐃⲆΔΔᐃᐃⲆ: "img/inv-plane-click.png",
    ΔΔⲆⵠΔⵠⲆ: "img/day-sled.png",
    ⲆᐃⵠᐃⵠΔΔ: "img/night-sled.png",
    ⵠⵠᐃⲆᐃΔⵠ: "img/day-sled-wave.png",
    ᐃⲆᐃⲆⲆΔⵠ: "img/night-sled-wave.png",
    ᐃᐃΔⲆⲆᐃⲆ: "img/inv-sled-out.png",
    ΔⵠΔΔᐃⲆⵠ: "img/inv-sled-in.png",
    ⲆⲆⵠⵠΔᐃΔ: "img/inv-sled-click.png",
    ⲆᐃΔᐃΔⲆⵠ: "img/day-pirate-hat.png",
    ΔⵠᐃⲆΔⲆⵠ: "img/night-pirate-hat.png",
    ΔᐃᐃᐃⲆⲆΔ: "img/inv-pirate-hat-out.png",
    ⲆΔⲆᐃᐃΔᐃ: "img/inv-pirate-hat-in.png",
    ⲆⲆΔΔⵠᐃᐃ: "img/inv-pirate-hat-click.png",
    ᐃΔᐃⲆΔᐃᐃ: "img/day-penguin.png",
    ΔΔⵠΔⲆᐃⲆ: "img/night-penguin.png",
    ᐃΔᐃᐃⲆⵠᐃ: "img/hurt-penguin.png",
    ΔΔᐃΔᐃ: "img/inv-penguin-feather-click.png",
    ⵠᐃΔᐃᐃ: "img/inv-hawk-feather-click.png",
    ⵠⵠⵠⲆⵠ: "img/inv-parrot-feather-click.png",
    ⵠⵠᐃΔᐃⲆⲆ: "img/day-ocelot.png",
    ⵠᐃΔⲆΔⵠᐃ: "img/night-ocelot.png",
    ᐃⵠᐃΔΔΔⲆ: "img/hurt-ocelot.png",
    ⵠⲆᐃΔⲆ: "img/inv-ocelot-fur-click.png",
    ⵠᐃⲆⲆⵠⵠⲆ: "img/day-crocodile.png",
    ⲆⲆΔΔⲆΔᐃ: "img/night-crocodile.png",
    ΔΔⲆᐃΔᐃⲆ: "img/hurt-crocodile.png",
    ⲆᐃⲆΔⲆ: "img/inv-crocodile-scales-click.png",
    ⵠⲆᐃⵠᐃΔⲆ: "img/day-boar1.png",
    ᐃⵠⵠⲆⵠΔⵠ: "img/day-boar1-tamed.png",
    ⵠⵠⵠⲆΔΔᐃ: "img/day-boar1-angry.png",
    ᐃᐃᐃⲆⵠΔᐃ: "img/night-boar1.png",
    ᐃᐃⲆΔᐃᐃᐃ: "img/night-boar1-tamed.png",
    ⵠΔᐃⲆᐃⲆⵠ: "img/night-boar1-angry.png",
    ΔΔᐃⲆⲆⵠⵠ: "img/inv-mount-boar-out.png",
    ΔⲆⵠⵠⵠᐃΔ: "img/inv-mount-boar-in.png",
    ⵠΔΔΔⲆᐃⵠ: "img/inv-mount-boar-click.png",
    ⲆⵠⵠⲆⲆⵠⲆ: "img/day-hurt-boar1.png",
    ⲆΔΔⲆⲆⵠⲆ: "img/boar1-step.png",
    ᐃⲆⲆᐃΔⲆᐃ: "img/day-saddle1.png",
    ΔᐃΔΔΔΔⲆ: "img/night-saddle1.png",
    ᐃⲆᐃΔΔΔⵠ: "img/inv-saddle-out.png",
    ⲆⵠⵠⲆⵠᐃⵠ: "img/inv-saddle-in.png",
    ⵠᐃΔⵠⲆΔΔ: "img/inv-saddle-click.png",
    ΔⵠΔⵠᐃΔΔ: "img/day-magic-wand0.png",
    ᐃⵠΔⵠᐃΔΔ: "img/night-magic-wand0.png",
    ᐃᐃⵠΔᐃᐃΔ: "img/day-light-wand1.png",
    ΔΔⲆᐃᐃⵠⵠ: "img/night-light-wand1.png",
    ΔⵠⵠΔⲆⵠΔ: "img/inv-magic-wand0-out.png",
    ⵠⵠⲆΔⵠΔⲆ: "img/inv-magic-wand0-in.png",
    ΔⲆᐃⵠΔⵠᐃ: "img/inv-magic-wand0-click.png",
    ΔⵠΔⲆΔⲆᐃ: "img/day-magic-wand1.png",
    ⵠⵠⲆⲆΔⵠⵠ: "img/night-magic-wand1.png",
    ΔⵠⵠⵠⵠⲆⵠ: "img/day-light-wand0.png",
    ⵠᐃⵠᐃΔΔΔ: "img/night-light-wand0.png",
    ᐃᐃᐃⲆΔⲆΔ: "img/inv-magic-wand1-out.png",
    ⲆΔⵠⵠⵠΔΔ: "img/inv-magic-wand1-in.png",
    ᐃⵠⲆᐃⵠⲆⲆ: "img/inv-magic-wand1-click.png",
    ΔᐃⵠΔΔⲆᐃ: "img/day-firefly.png",
    ᐃΔⵠⵠΔΔⵠ: "img/night-firefly.png",
    ⵠⵠΔⵠⵠᐃᐃ: "img/hurt-firefly.png",
    ⵠᐃΔᐃⲆⵠⲆ: "img/inv-firefly-out.png",
    ᐃᐃⲆΔⲆΔⵠ: "img/inv-firefly-in.png",
    ᐃΔⵠⵠⵠⲆᐃ: "img/inv-firefly-click.png",
    ᐃⲆⲆⵠⲆΔᐃ: "img/day-baby-dragon.png",
    ᐃⵠΔⵠⲆΔⵠ: "img/night-baby-dragon.png",
    ⲆⵠⲆⲆᐃΔⲆ: "img/day-baby-dragon-angry.png",
    ⲆⲆⲆᐃᐃⲆⵠ: "img/night-baby-dragon-angry.png",
    ⵠⲆΔΔⵠⲆΔ: "img/day-baby-dragon-tamed.png",
    ⲆᐃⵠΔᐃΔΔ: "img/night-baby-dragon-tamed.png",
    ⲆᐃᐃᐃⵠⲆⲆ: "img/day-wing-dragon-left-angry.png",
    ⵠⵠⵠⲆⲆⵠΔ: "img/night-dragon-wing-left-angry.png",
    ⵠⲆᐃΔΔⲆⵠ: "img/day-wing-dragon-right-angry.png",
    ⵠᐃΔΔᐃΔⵠ: "img/night-dragon-wing-right-angry.png",
    ᐃⲆⵠᐃⵠⵠⲆ: "img/day-wing-dragon-left-tamed.png",
    ᐃᐃΔΔⵠⵠⵠ: "img/night-dragon-wing-left-tamed.png",
    ⲆⲆᐃᐃⲆⵠΔ: "img/day-wing-dragon-right-tamed.png",
    ΔΔⵠΔⵠΔⲆ: "img/night-wing-dragon-right-tamed.png",
    ⲆⲆᐃΔΔⵠⲆ: "img/day-wing-dragon-left.png",
    ᐃⲆⵠⵠᐃⲆⵠ: "img/night-dragon-wing-left.png",
    ᐃᐃΔΔΔⲆᐃ: "img/day-wing-dragon-right.png",
    ᐃΔⲆⲆΔΔᐃ: "img/night-wing-dragon-right.png",
    ⵠⲆᐃⵠⲆⲆᐃ: "img/hurt-baby-dragon.png",
    ⵠⲆΔᐃᐃⵠⵠ: "img/hurt-baby-dragon-wing-left.png",
    ᐃⲆᐃⵠΔᐃⵠ: "img/hurt-baby-dragon-wing-right.png",
    ⲆᐃⲆΔᐃΔⵠ: "img/inv-baby-dragon-out.png",
    ᐃᐃⵠⲆᐃΔⵠ: "img/inv-baby-dragon-in.png",
    ΔᐃⵠΔᐃⲆⵠ: "img/inv-baby-dragon-click.png",
    ⵠᐃᐃⵠⲆⵠⵠ: "img/day-baby-lava.png",
    ⵠᐃᐃⵠⵠⵠΔ: "img/night-baby-lava.png",
    ᐃᐃⲆⲆⲆΔⵠ: "img/day-baby-lava-angry.png",
    ⲆⲆⵠᐃΔⲆⲆ: "img/night-baby-lava-angry.png",
    ⲆΔⲆⲆΔΔⲆ: "img/day-baby-lava-tamed.png",
    ⲆⵠⲆᐃⲆⲆⵠ: "img/night-baby-lava-tamed.png",
    ΔᐃΔΔⲆᐃᐃ: "img/day-wing-lava-left-angry.png",
    ᐃⲆᐃΔΔⵠⵠ: "img/night-wing-lava-left-angry.png",
    ⲆⲆᐃⲆⵠⲆᐃ: "img/day-wing-lava-right-angry.png",
    ⲆΔΔⲆΔᐃⲆ: "img/night-wing-lava-right-angry.png",
    ᐃᐃΔⵠᐃΔΔ: "img/day-wing-lava-left-tamed.png",
    ⲆⲆⵠΔⵠⵠΔ: "img/night-wing-lava-left-tamed.png",
    ⵠΔΔΔᐃᐃᐃ: "img/day-wing-lava-right-tamed.png",
    ⲆⵠᐃΔΔΔᐃ: "img/night-wing-lava-right-tamed.png",
    ⵠᐃⵠᐃⲆⵠᐃ: "img/day-wing-lava-left.png",
    ΔⲆⵠᐃⲆⵠΔ: "img/night-wing-lava-left.png",
    ⲆⲆᐃⲆⲆⵠⵠ: "img/day-wing-lava-right.png",
    ⵠᐃⵠⵠΔⲆᐃ: "img/night-wing-lava-right.png",
    ⵠΔᐃⵠⲆⲆⵠ: "img/hurt-baby-lava.png",
    ΔᐃΔᐃⲆᐃᐃ: "img/hurt-baby-lava-wing-left.png",
    ⵠⲆΔᐃᐃⵠΔ: "img/hurt-baby-lava-wing-right.png",
    ⲆᐃⲆᐃΔⲆᐃ: "img/inv-baby-lava-out.png",
    ⲆⲆⵠᐃⲆⵠᐃ: "img/inv-baby-lava-in.png",
    ΔⵠΔᐃΔⵠᐃ: "img/inv-baby-lava-click.png",
    ⵠᐃⵠΔΔᐃⲆ: "img/day-falcon.png",
    ᐃⲆΔⵠᐃΔΔ: "img/night-falcon.png",
    ΔᐃⲆᐃᐃᐃⲆ: "img/day-falcon-angry.png",
    ΔΔΔⵠⵠᐃⵠ: "img/night-falcon-angry.png",
    ΔᐃⵠⲆⲆⵠΔ: "img/day-falcon-ground.png",
    ⲆᐃⵠⵠⲆⵠⲆ: "img/night-falcon-ground.png",
    ⵠⲆⵠⵠⵠⵠᐃ: "img/day-falcon-ground-angry.png",
    ΔⲆⵠⵠᐃⵠΔ: "img/night-falcon-ground-angry.png",
    ᐃⵠΔⲆⵠᐃΔ: "img/day-falcon-wings-left.png",
    ⲆᐃΔᐃⲆᐃᐃ: "img/night-falcon-wings-left.png",
    ΔΔᐃᐃΔⵠΔ: "img/day-falcon-wings-right.png",
    ᐃⵠΔᐃⲆⵠⲆ: "img/night-falcon-wings-right.png",
    ΔⵠᐃᐃΔΔᐃ: "img/day-falcon-angry-wings-left.png",
    ⵠⵠΔᐃΔⵠᐃ: "img/night-falcon-angry-wings-left.png",
    ⲆⵠⵠΔΔΔⲆ: "img/day-falcon-angry-wings-right.png",
    ΔΔⵠⲆᐃΔᐃ: "img/night-falcon-angry-wings-right.png",
    ⲆⲆⲆᐃⲆᐃⵠ: "img/day-falcon-wings-left-tamed.png",
    ᐃⵠⵠⲆⵠⵠⵠ: "img/night-falcon-wings-left-tamed.png",
    ⲆⵠΔᐃⲆᐃⵠ: "img/day-falcon-wings-right-tamed.png",
    ⵠΔⵠⲆΔⵠⵠ: "img/night-falcon-wings-right-tamed.png",
    ΔᐃΔⵠⲆΔⲆ: "img/day-falcon-tamed.png",
    ⵠᐃⵠⲆᐃⲆᐃ: "img/night-falcon-tamed.png",
    ⲆⲆⲆᐃⲆᐃᐃ: "img/hurt-falcon-ground.png",
    ᐃⲆΔⵠΔᐃⵠ: "img/hurt-falcon.png",
    ΔᐃΔΔᐃⲆⲆ: "img/hurt-falcon-wings-left.png",
    ΔⵠⲆᐃⵠᐃΔ: "img/hurt-falcon-wings-right.png",
    ⲆⵠᐃⲆⵠⲆΔ: "img/inv-falcon-out.png",
    ᐃΔⲆⵠⵠᐃᐃ: "img/inv-falcon-in.png",
    ᐃΔΔΔⵠΔᐃ: "img/inv-falcon-click.png",
    ᐃᐃΔⲆΔⲆᐃ: "img/day-parrot.png",
    ⲆᐃⵠⲆᐃⲆⵠ: "img/night-parrot.png",
    ΔⲆⵠⲆΔⵠΔ: "img/day-parrot-angry.png",
    ΔⵠⲆΔⵠΔⵠ: "img/night-parrot-angry.png",
    ᐃᐃΔⲆⵠⵠⵠ: "img/day-parrot-ground.png",
    ᐃⲆΔᐃΔΔᐃ: "img/night-parrot-ground.png",
    ᐃΔⵠⲆⲆⵠᐃ: "img/day-parrot-ground-angry.png",
    ᐃᐃⵠⵠⲆᐃᐃ: "img/night-parrot-ground-angry.png",
    ᐃᐃΔΔⵠᐃⵠ: "img/day-parrot-wing-left.png",
    ⲆᐃΔᐃΔΔⲆ: "img/night-parrot-wing-left.png",
    ⲆᐃⵠⲆΔᐃⲆ: "img/day-parrot-wing-right.png",
    ⵠᐃᐃᐃⵠΔⲆ: "img/night-parrot-wing-right.png",
    ⲆᐃⲆᐃΔΔΔ: "img/day-parrot-angry-wing-left.png",
    ᐃⵠΔⵠⵠᐃⲆ: "img/night-parrot-angry-wing-left.png",
    ᐃΔΔΔᐃⲆᐃ: "img/day-parrot-angry-wing-right.png",
    ΔⵠᐃⵠⲆᐃᐃ: "img/night-parrot-angry-wing-right.png",
    ⲆᐃⲆᐃΔⲆⲆ: "img/day-parrot-wing-left-tamed.png",
    ⲆⲆⵠᐃⲆᐃⲆ: "img/night-parrot-wing-left-tamed.png",
    ΔΔᐃⲆΔᐃΔ: "img/day-parrot-wing-right-tamed.png",
    ⵠᐃⲆΔⵠⵠΔ: "img/night-parrot-wing-right-tamed.png",
    ⵠΔⵠΔΔΔⵠ: "img/day-parrot-tamed.png",
    ΔΔⲆⵠⲆⵠⲆ: "img/night-parrot-tamed.png",
    ᐃᐃⵠⵠⲆⵠⵠ: "img/hurt-parrot-ground.png",
    ⲆᐃΔΔⵠᐃᐃ: "img/hurt-parrot.png",
    ⲆᐃΔⵠᐃΔᐃ: "img/hurt-parrot-wing-left.png",
    ΔⵠⵠⲆΔⵠᐃ: "img/hurt-parrot-wing-right.png",
    ΔΔΔⲆⵠⵠⵠ: "img/inv-parrot-out.png",
    ⵠΔΔᐃⵠⲆⲆ: "img/inv-parrot-in.png",
    ΔⲆΔᐃⲆΔᐃ: "img/inv-parrot-click.png",
    ΔᐃᐃⲆⵠᐃⵠ: "img/day-crab-boss.png",
    ⲆⵠᐃⵠⲆᐃᐃ: "img/night-crab-boss.png",
    ⲆΔᐃᐃⲆⵠⵠ: "img/day-crab-boss-angry.png",
    ⲆᐃⲆⲆⵠᐃⲆ: "img/night-crab-boss-angry.png",
    ΔΔⵠⲆⲆⲆⲆ: "img/day-crab-boss-tamed.png",
    ⲆΔⵠⲆⲆⲆⵠ: "img/night-crab-boss-tamed.png",
    ⲆⲆⵠᐃᐃᐃⵠ: "img/day-crab-boss-claw-left-attack.png",
    ⲆᐃΔⵠᐃⲆⲆ: "img/night-crab-boss-claw-left-attack.png",
    ᐃᐃⲆⲆΔΔⲆ: "img/day-crab-boss-claw-right-attack.png",
    Ⲇⵠⵠⵠᐃⵠᐃ: "img/night-crab-boss-claw-right-attack.png",
    ΔᐃⲆⵠᐃⵠΔᐃⲆ: "img/day-crab-boss-claw-left-tamed.png",
    ᐃΔᐃΔⲆΔⵠᐃⵠ: "img/night-crab-boss-claw-left-tamed.png",
    ⲆⲆΔᐃΔⲆᐃⲆᐃ: "img/day-crab-boss-claw-right-tamed.png",
    ⲆⲆᐃⲆⵠΔⵠⵠⲆ: "img/night-crab-boss-claw-right-tamed.png",
    ᐃⵠⲆⵠⲆⲆᐃ: "img/day-crab-boss-claw-left.png",
    ᐃΔⵠΔᐃⵠⲆ: "img/night-crab-boss-claw-left.png",
    ΔⲆⲆᐃΔⲆⲆ: "img/day-crab-boss-claw-right.png",
    ⲆΔⵠΔⲆⲆΔ: "img/night-crab-boss-claw-right.png",
    ⵠᐃⲆᐃⵠⵠⵠ: "img/hurt-crab-boss.png",
    ⵠΔᐃΔᐃΔᐃ: "img/hurt-crab-boss-claw-left.png",
    ᐃⲆΔΔⵠΔⵠ: "img/hurt-crab-boss-claw-right.png",
    ⲆⵠᐃⲆᐃᐃΔ: "img/heal-crab-boss.png",
    ⵠΔⲆᐃᐃΔⵠ: "img/heal-crab-boss-claw-left.png",
    ᐃⵠⵠᐃⵠⵠⲆ: "img/heal-crab-boss-claw-right.png",
    ΔⲆΔⵠᐃⵠΔ: "img/crab-step.png",
    ᐃⲆΔᐃⲆΔΔ: "img/inv-crab-boss-out.png",
    ᐃⲆⵠΔⵠⲆᐃ: "img/inv-crab-boss-in.png",
    ⵠⲆᐃᐃⲆⵠⵠ: "img/inv-crab-boss-click.png",
    ⲆΔⵠΔⵠΔⲆ: "img/day-cactus10.png",
    ᐃⲆⲆⵠⲆᐃᐃ: "img/night-cactus10.png",
    ᐃΔⵠᐃΔⵠⵠ: "img/inv-cactus-out.png",
    ⵠᐃⵠⲆΔᐃΔ: "img/inv-cactus-in.png",
    ΔΔⲆᐃⵠᐃⵠ: "img/inv-cactus-click.png",
    ⵠⵠΔⲆΔⵠⲆ: "img/day-scorpion.png",
    ΔⵠⵠⵠΔᐃⲆ: "img/night-scorpion.png",
    ΔⲆⲆΔⵠⲆᐃ: "img/day-scorpion-hand-left.png",
    ΔᐃⵠⵠΔⲆᐃ: "img/night-scorpion-hand-left.png",
    ᐃⲆᐃΔⵠⵠⵠ: "img/day-scorpion-hand-right.png",
    ⵠᐃⵠΔⲆΔᐃ: "img/night-scorpion-hand-right.png",
    ⵠⵠⵠⲆΔⵠΔ: "img/hurt-scorpion.png",
    ΔΔΔΔⲆΔⲆ: "img/hurt-scorpion-hand-left.png",
    ᐃⲆᐃⵠⲆⲆΔ: "img/hurt-scorpion-hand-right.png",
    ⵠⲆΔΔⲆΔᐃ: "img/day-vulture.png",
    ΔⵠᐃⲆⲆΔⵠ: "img/night-vulture.png",
    ⲆⲆⵠᐃΔⵠΔ: "img/day-vulture-angry.png",
    ⲆⲆⲆΔⲆⵠⵠ: "img/night-vulture-angry.png",
    ⲆⵠⲆᐃⲆⵠⵠ: "img/day-vulture-ground.png",
    ⲆᐃⲆΔⵠⵠⲆ: "img/night-vulture-ground.png",
    ⲆⲆΔⲆⵠⵠⵠ: "img/day-vulture-ground-angry.png",
    ΔⵠⵠᐃⵠΔΔ: "img/night-vulture-ground-angry.png",
    ᐃⵠⲆΔΔⵠΔ: "img/day-vulture-wings-left.png",
    ⵠⲆᐃⵠΔⵠⵠ: "img/night-vulture-wings-left.png",
    ᐃⵠᐃᐃᐃᐃⲆ: "img/day-vulture-wings-right.png",
    ᐃᐃΔⵠⲆΔᐃ: "img/night-vulture-wings-right.png",
    ΔⵠⵠΔΔⵠᐃ: "img/day-vulture-angry-wings-left.png",
    ΔⵠⲆⵠΔⲆⵠ: "img/night-vulture-angry-wings-left.png",
    ᐃⵠΔⵠⲆΔⲆ: "img/day-vulture-angry-wings-right.png",
    ΔᐃⵠⵠⵠⵠⲆ: "img/night-vulture-angry-wings-right.png",
    Ⲇⵠⵠⵠᐃᐃⵠ: "img/day-vulture-wings-left-tamed.png",
    ᐃΔΔⵠΔⵠⲆ: "img/night-vulture-wings-left-tamed.png",
    ᐃⲆᐃᐃⵠΔΔ: "img/day-vulture-wings-right-tamed.png",
    ᐃⵠᐃⲆⲆⲆⲆ: "img/night-vulture-wings-right-tamed.png",
    ⲆⵠᐃᐃⲆⵠΔ: "img/day-vulture-tamed.png",
    ΔᐃⵠⲆⵠᐃΔ: "img/night-vulture-tamed.png",
    ⵠᐃΔᐃⵠⲆᐃ: "img/hurt-vulture-ground.png",
    ⲆΔⵠᐃⲆⵠΔ: "img/hurt-vulture.png",
    ΔⲆⵠᐃΔᐃΔ: "img/hurt-vulture-wings-left.png",
    ⵠΔΔᐃⵠⲆΔ: "img/hurt-vulture-wings-right.png",
    ᐃⵠⵠΔⲆⵠΔ: "img/inv-vulture-out.png",
    ᐃΔⵠᐃᐃⵠΔ: "img/inv-vulture-in.png",
    ⵠⲆⵠⵠΔΔⲆ: "img/inv-vulture-click.png",
    ΔΔΔᐃΔⲆⲆ: "img/day-aloe-vera.png",
    ᐃⵠⵠⲆΔᐃⲆ: "img/night-aloe-vera.png",
    ⲆⲆᐃⲆΔⲆⲆ: "img/inv-aloe-vera-out.png",
    ᐃⲆᐃᐃᐃⲆᐃ: "img/inv-aloe-vera-in.png",
    ⲆⲆᐃⲆⲆΔⲆ: "img/inv-aloe-vera-click.png",
    ΔΔⵠⵠᐃⲆⲆ: "img/day-aloe-vera-grown.png",
    ⲆⲆⲆᐃΔᐃⲆ: "img/night-aloe-vera-grown.png",
    ΔΔΔⲆΔⵠᐃ: "img/day-aloe-vera-dried.png",
    ᐃⵠⲆΔⵠΔΔ: "img/night-aloe-vera-dried.png",
    ⲆⲆΔⵠᐃⵠⵠ: "img/day-turban1.png",
    ⵠΔⵠᐃΔᐃⵠ: "img/night-turban1.png",
    ⲆΔΔᐃᐃΔⵠ: "img/day-turban2.png",
    ⵠⲆⵠᐃᐃΔⲆ: "img/night-turban2.png",
    ⲆᐃΔᐃᐃᐃⵠ: "img/inv-turban2-out.png",
    ⲆⵠΔΔᐃΔᐃ: "img/inv-turban2-in.png",
    ΔⲆⵠⵠᐃΔⵠ: "img/inv-turban2-click.png",
    ⲆᐃΔᐃᐃᐃⲆ: "img/inv-turban1-out.png",
    ⲆⲆⵠⲆⲆⲆⲆ: "img/inv-turban1-in.png",
    ⲆᐃⲆΔⵠᐃᐃ: "img/inv-turban1-click.png",
    ΔⵠⵠⲆᐃⵠⵠ: "img/day-pitchfork2.png",
    ΔⵠⲆⲆⲆⲆⲆ: "img/night-pitchfork2.png",
    ⲆΔΔⵠⵠⲆⵠ: "img/inv-pitchfork2-out.png",
    ᐃⲆⲆⵠΔⵠᐃ: "img/inv-pitchfork2-in.png",
    ΔⲆⵠΔΔⲆΔ: "img/inv-pitchfork2-click.png",
    ΔⲆⵠᐃΔΔΔ: "img/inv-gold-fork-click.png",
    ⲆΔⵠΔⲆⲆⲆ: "img/inv-pilot-glasses-click.png",
    ⲆΔᐃᐃΔΔΔ: "img/day-pilot-helmet.png",
    ᐃⵠᐃⵠⵠⲆⵠ: "img/night-pilot-helmet.png",
    ⲆⲆⲆᐃⲆⵠⲆ: "img/inv-pilot-helmet-out.png",
    ᐃⵠᐃⵠⵠᐃⵠ: "img/inv-pilot-helmet-in.png",
    ᐃᐃΔᐃⲆⵠΔ: "img/inv-pilot-helmet-click.png",
    ΔᐃⲆΔΔⲆⲆᐃⵠ: "img/day-sandworm0.png",
    ᐃΔⵠΔᐃΔⲆ: "img/day-sandworm1.png",
    ΔⲆⵠⵠᐃⲆⲆ: "img/day-sandworm2.png",
    ⵠᐃⵠⵠΔⲆᐃΔΔ: "img/night-sandworm0.png",
    ⲆⲆⲆᐃⵠⲆΔ: "img/night-sandworm1.png",
    ᐃⵠΔΔⲆΔΔ: "img/night-sandworm2.png",
    ᐃΔᐃΔΔⲆΔ: "img/hurt-sandworm0.png",
    ᐃⵠⵠⲆⲆⵠⲆ: "img/hurt-sandworm1.png",
    ⲆΔᐃΔΔΔⲆ: "img/hurt-sandworm2.png",
    ΔⲆⵠⵠⲆ: "img/inv-vulture-feather-click.png",
    ⲆᐃΔᐃΔⲆΔ: "img/day-jungle-tree0.png",
    ΔᐃⵠⵠΔⲆⲆ: "img/night-jungle-tree0.png",
    ᐃΔᐃᐃⵠⲆⵠ: "img/day-jungle-tree1.png",
    ΔΔⲆⵠⲆⲆΔ: "img/night-jungle-tree1.png",
    ᐃⵠⵠⵠⵠᐃⲆ: "img/day-jungle-tree2.png",
    ΔᐃⵠⲆⲆΔⲆ: "img/night-jungle-tree2.png",
    ⵠⵠⲆⵠΔⵠᐃ: "img/day-jungle-tree3.png",
    ⲆΔⲆᐃⵠᐃⲆ: "img/night-jungle-tree3.png",
    ⲆⲆΔᐃⲆⲆΔ: "img/day-jungle-tree4.png",
    Δᐃᐃᐃᐃⵠᐃ: "img/night-jungle-tree4.png",
    ᐃΔⲆΔΔⵠⲆ: "img/day-jungle-bush0.png",
    ΔᐃΔᐃᐃΔⲆ: "img/night-jungle-bush0.png",
    ⵠᐃⵠΔⵠᐃⲆ: "img/day-jungle-bush1.png",
    ⵠⵠⲆⲆⲆⵠⲆ: "img/night-jungle-bush1.png",
    ᐃΔⲆΔΔⵠⵠ: "img/day-jungle-ground0.png",
    ⲆⵠᐃⵠⵠΔⲆ: "img/night-jungle-ground0.png",
    ⲆᐃⵠⲆΔᐃⵠ: "img/day-jungle-ground1.png",
    ⲆⲆΔⵠⵠᐃⵠ: "img/night-jungle-ground1.png",
    ⲆⲆᐃⲆⵠⲆΔ: "img/day-jungle-ground2.png",
    ΔΔᐃΔΔⵠⵠ: "img/night-jungle-ground2.png",
    ΔⲆᐃΔⲆΔⵠ: "img/day-jungle-ground3.png",
    ⲆᐃⲆⲆⲆⵠⵠ: "img/night-jungle-ground3.png",
    ᐃᐃΔᐃⲆΔⵠ: "img/day-jungle-pebble0.png",
    ᐃᐃⲆᐃᐃΔΔ: "img/night-jungle-pebble0.png",
    ⲆΔⵠᐃⵠⲆⵠ: "img/day-jungle-pebble1.png",
    ΔᐃᐃΔⵠΔⲆ: "img/night-jungle-pebble1.png",
    ΔⵠᐃᐃⵠΔⵠ: "img/day-jungle-pebble2.png",
    ᐃΔⲆΔⵠᐃᐃ: "img/night-jungle-pebble2.png",
    ΔᐃⵠᐃΔᐃᐃ: "img/day-jungle-pebble3.png",
    ⲆⲆΔⲆΔⲆΔ: "img/night-jungle-pebble3.png",
    ⵠᐃⲆᐃⲆⵠᐃ: "img/day-jungle-pebble4.png",
    ᐃⵠⲆⵠⵠΔΔ: "img/night-jungle-pebble4.png",
    ΔⲆⵠΔⲆΔΔ: "img/day-jungle-pebble5.png",
    ᐃΔΔⲆⲆⵠΔ: "img/night-jungle-pebble5.png",
    ᐃᐃⵠΔΔⲆᐃ: "img/day-jungle-stone0.png",
    ⵠⵠΔⲆᐃⵠⵠ: "img/night-jungle-stone0.png",
    ⲆⵠΔⵠⵠⲆⵠ: "img/day-jungle-stone1.png",
    ᐃⵠΔΔᐃⵠⲆ: "img/night-jungle-stone1.png",
    ΔⵠⲆⵠⵠΔⵠ: "img/day-jungle-stone2.png",
    ᐃᐃⵠᐃᐃⲆⵠ: "img/night-jungle-stone2.png",
    ⲆⲆΔΔⵠΔΔ: "img/day-emerald0.png",
    ᐃⲆᐃΔⲆΔᐃ: "img/night-emerald0.png",
    ΔΔΔⲆⵠᐃⲆ: "img/day-emerald1.png",
    ΔᐃΔⵠⵠⲆⲆ: "img/night-emerald1.png",
    ᐃⵠΔⲆⵠⵠᐃ: "img/day-emerald2.png",
    ΔᐃⲆΔΔᐃᐃ: "img/night-emerald2.png",
    ΔⲆΔΔⲆ: "img/inv-emerald-click.png",
    ΔⵠΔⵠⵠΔⵠ: "img/inv-sworm-juice-out.png",
    ⲆΔᐃᐃᐃᐃΔ: "img/inv-sworm-juice-in.png",
    ⲆΔⲆⲆᐃⲆⲆ: "img/inv-sworm-juice-click.png",
    ᐃΔᐃΔᐃᐃΔ: "img/day-point-machine.png",
    ⲆⲆⵠᐃΔᐃⵠ: "img/night-point-machine.png",
    ᐃΔΔⲆⵠⵠⲆ: "img/day-point-machine-hole.png",
    ⵠᐃΔΔⲆΔⲆ: "img/night-point-machine-hole.png",
    ⲆᐃΔⵠⲆΔᐃ: "img/day-point-machine-ground.png",
    ⵠⲆᐃⲆᐃᐃⵠ: "img/night-point-machine-ground.png",
    ⲆΔⲆΔΔⵠΔ: "img/day-point-machine-rotate.png",
    ⲆⲆᐃⲆᐃΔⵠ: "img/night-point-machine-rotate.png",
    ᐃᐃⵠΔⵠⵠΔ: "img/inv-point-machine-out.png",
    ⵠⵠⲆⲆΔΔᐃ: "img/inv-point-machine-in.png",
    ⵠᐃΔⵠᐃΔⵠ: "img/inv-point-machine-click.png",
    ΔⵠᐃᐃⵠΔᐃ: "img/day-extractor-machine0-stone.png",
    ᐃⲆΔⲆᐃΔᐃ: "img/night-extractor-machine0-stone.png",
    ΔⵠᐃⲆⵠⵠᐃ: "img/day-extractor-machine-stone.png",
    ᐃⵠⲆⵠΔΔΔ: "img/night-extractor-machine-stone.png",
    ⲆⲆⲆΔⲆᐃΔ: "img/inv-extractor-machine-stone-out.png",
    ΔΔⵠⵠΔᐃΔ: "img/inv-extractor-machine-stone-in.png",
    ⲆᐃⵠΔᐃⲆΔ: "img/inv-extractor-machine-stone-click.png",
    ⲆⲆⲆⵠᐃⵠᐃ: "img/day-extractor-machine0-gold.png",
    ⵠⲆᐃᐃⲆᐃᐃ: "img/night-extractor-machine0-gold.png",
    ᐃᐃⲆⵠᐃⲆⲆ: "img/day-extractor-machine-gold.png",
    ᐃⵠᐃⲆΔⲆⵠ: "img/night-extractor-machine-gold.png",
    ⵠᐃⵠⲆⲆΔΔ: "img/inv-extractor-machine-gold-out.png",
    ⲆΔΔΔⵠⵠᐃ: "img/inv-extractor-machine-gold-in.png",
    ᐃⲆᐃΔΔⲆΔ: "img/inv-extractor-machine-gold-click.png",
    ΔΔᐃΔᐃᐃᐃ: "img/day-extractor-machine0-diamond.png",
    ⲆⵠⲆⵠᐃᐃΔ: "img/night-extractor-machine0-diamond.png",
    ᐃᐃⲆⲆⲆⵠⲆ: "img/day-extractor-machine-diamond.png",
    ⲆⲆⲆⵠⲆⲆΔ: "img/night-extractor-machine-diamond.png",
    ΔᐃᐃⵠᐃΔⵠ: "img/inv-extractor-machine-diamond-out.png",
    ΔΔⲆᐃᐃΔᐃ: "img/inv-extractor-machine-diamond-in.png",
    ᐃΔΔⵠⵠⲆⵠ: "img/inv-extractor-machine-diamond-click.png",
    ΔΔΔⵠⲆΔⵠ: "img/day-extractor-machine0-amethyst.png",
    ΔᐃⵠᐃᐃᐃΔ: "img/night-extractor-machine0-amethyst.png",
    ΔⵠΔΔⵠᐃⵠ: "img/day-extractor-machine-amethyst.png",
    ⲆⲆΔⵠⲆΔΔ: "img/night-extractor-machine-amethyst.png",
    ⲆᐃⲆΔΔΔⲆ: "img/inv-extractor-machine-amethyst-out.png",
    ΔⲆⲆⵠΔⵠⵠ: "img/inv-extractor-machine-amethyst-in.png",
    ΔⲆⵠᐃᐃᐃΔ: "img/inv-extractor-machine-amethyst-click.png",
    ⵠⵠⵠⵠᐃⵠⲆ: "img/day-extractor-machine0-reidite.png",
    ᐃⲆᐃⲆᐃᐃΔ: "img/night-extractor-machine0-reidite.png",
    ⵠΔΔΔΔᐃΔ: "img/day-extractor-machine-reidite.png",
    ⵠⵠⵠᐃΔᐃⲆ: "img/night-extractor-machine-reidite.png",
    ⵠⵠⵠⲆΔᐃᐃ: "img/inv-extractor-machine-reidite-out.png",
    ⵠΔᐃᐃᐃⲆᐃ: "img/inv-extractor-machine-reidite-in.png",
    ⵠᐃⲆⲆⲆᐃⲆ: "img/inv-extractor-machine-reidite-click.png",
    ⵠΔⵠΔᐃⲆⲆ: "img/day-extractor-machine0-emerald.png",
    ΔⵠᐃⵠΔᐃΔ: "img/night-extractor-machine0-emerald.png",
    ⲆⲆⵠΔⲆΔⵠ: "img/day-extractor-machine-emerald.png",
    ⲆᐃΔⲆΔⲆᐃ: "img/night-extractor-machine-emerald.png",
    ⵠΔⲆΔⲆⵠᐃ: "img/inv-extractor-machine-emerald-out.png",
    ΔΔⲆⲆΔⲆⵠ: "img/inv-extractor-machine-emerald-in.png",
    ⲆⵠⲆΔⵠᐃⵠ: "img/inv-extractor-machine-emerald-click.png",
    ⲆΔᐃⲆΔᐃΔ: "img/day-extractor-machine0-copper.png",
    ᐃᐃΔᐃⵠⲆΔ: "img/night-extractor-machine0-copper.png",
    ᐃⵠⵠⵠΔΔᐃ: "img/day-extractor-machine-copper.png",
    ΔⵠΔⵠΔⵠΔ: "img/night-extractor-machine-copper.png",
    ⵠΔⵠⲆⵠⲆᐃ: "img/inv-extractor-machine-copper-out.png",
    ᐃⵠᐃⵠⵠΔⵠ: "img/inv-extractor-machine-copper-in.png",
    ⵠⲆᐃⵠᐃⵠᐃ: "img/inv-extractor-machine-copper-click.png",
    ΔΔᐃⵠⵠΔⲆ: "img/day-extractor-machine0-iron.png",
    ⲆⲆΔⲆᐃⲆᐃ: "img/night-extractor-machine0-iron.png",
    ⵠᐃⵠⲆⵠⵠΔ: "img/day-extractor-machine-iron.png",
    ΔⲆⵠⲆⵠⵠΔ: "img/night-extractor-machine-iron.png",
    ⵠⵠᐃᐃᐃᐃΔ: "img/inv-extractor-machine-iron-out.png",
    ⵠΔᐃᐃᐃΔⵠ: "img/inv-extractor-machine-iron-in.png",
    ᐃⵠⲆⵠⵠⵠᐃ: "img/inv-extractor-machine-iron-click.png",
    ⲆΔΔⵠᐃᐃᐃ: "img/day-extractor-machine0-topaz.png",
    ⵠΔⵠⵠᐃⲆⲆ: "img/night-extractor-machine0-topaz.png",
    ⵠⵠΔⲆᐃᐃᐃ: "img/day-extractor-machine-topaz.png",
    ⵠΔⵠΔᐃⲆᐃ: "img/night-extractor-machine-topaz.png",
    ⲆΔⵠᐃΔΔⵠ: "img/inv-extractor-machine-topaz-out.png",
    ⲆΔⲆΔΔᐃⵠ: "img/inv-extractor-machine-topaz-in.png",
    ⵠⵠⲆᐃΔⲆᐃ: "img/inv-extractor-machine-topaz-click.png",
    ⲆᐃⵠⲆⵠⲆⲆ: "img/day-extractor-machine0-sapphire.png",
    ᐃⲆⵠΔᐃΔⲆ: "img/night-extractor-machine0-sapphire.png",
    ⵠⲆⲆⵠΔΔⵠ: "img/day-extractor-machine-sapphire.png",
    ⲆⵠⲆΔΔⲆⵠ: "img/night-extractor-machine-sapphire.png",
    ΔᐃΔᐃΔⵠΔ: "img/inv-extractor-machine-sapphire-out.png",
    ΔᐃΔᐃΔⵠⵠ: "img/inv-extractor-machine-sapphire-in.png",
    ⲆⵠΔΔⲆᐃᐃ: "img/inv-extractor-machine-sapphire-click.png",
    ΔΔᐃᐃⵠΔⲆ: "img/day-extractor-machine0-jade.png",
    ⲆⲆΔΔⵠᐃⲆ: "img/night-extractor-machine0-jade.png",
    ⲆᐃⵠⵠᐃⵠⲆ: "img/day-extractor-machine-jade.png",
    ⲆΔΔΔΔⵠⵠ: "img/night-extractor-machine-jade.png",
    ᐃⵠΔⲆΔⲆᐃ: "img/inv-extractor-machine-jade-out.png",
    ⵠⵠᐃⲆⲆⲆⲆ: "img/inv-extractor-machine-jade-in.png",
    ⲆⵠᐃⲆⵠΔΔ: "img/inv-extractor-machine-jade-click.png",
    ⵠᐃⵠⲆᐃⵠΔ: "img/day-extractor-machine0-ruby.png",
    ⲆⲆⵠΔΔⲆᐃ: "img/night-extractor-machine0-ruby.png",
    ⲆⵠⵠΔΔᐃᐃ: "img/day-extractor-machine-ruby.png",
    ᐃⲆΔᐃⲆᐃΔ: "img/night-extractor-machine-ruby.png",
    ΔΔⲆⲆᐃⲆᐃ: "img/inv-extractor-machine-ruby-out.png",
    ΔⵠⵠᐃΔⲆᐃ: "img/inv-extractor-machine-ruby-in.png",
    ΔⵠⵠᐃΔⵠⲆ: "img/inv-extractor-machine-ruby-click.png",
    ⲆΔΔⵠⵠΔⵠ: "img/day-extractor-machine0-coal.png",
    ΔΔΔⵠⲆⲆⲆ: "img/night-extractor-machine0-coal.png",
    ⲆΔΔⲆⲆᐃᐃ: "img/day-extractor-machine-coal.png",
    ⵠⲆⵠⵠⵠⵠΔ: "img/night-extractor-machine-coal.png",
    ᐃᐃⲆΔᐃⵠⵠ: "img/inv-extractor-machine-coal-out.png",
    ⵠΔⵠⲆΔᐃΔ: "img/inv-extractor-machine-coal-in.png",
    ⵠⵠᐃⵠⵠⵠⲆ: "img/inv-extractor-machine-coal-click.png",
    ΔⲆᐃⲆⲆⲆⲆ: "img/day-extractor-machine0-aquamarine.png",
    ⲆᐃᐃᐃᐃⵠⲆ: "img/night-extractor-machine0-aquamarine.png",
    ΔᐃⵠΔΔⵠⲆ: "img/day-extractor-machine-aquamarine.png",
    ⲆΔᐃΔⵠᐃⲆ: "img/night-extractor-machine-aquamarine.png",
    ᐃⵠᐃⵠᐃⲆᐃ: "img/inv-extractor-machine-aquamarine-out.png",
    ΔᐃᐃΔⲆⲆΔ: "img/inv-extractor-machine-aquamarine-in.png",
    ⲆΔᐃᐃᐃⵠⵠ: "img/inv-extractor-machine-aquamarine-click.png",
    ᐃΔΔΔᐃΔΔ: "img/extractor-cases.png",
    ⲆΔΔᐃΔⲆᐃ: "img/day-golden-hen.png",
    ⲆᐃⲆᐃⵠΔⵠ: "img/night-golden-hen.png",
    ΔΔⲆⵠΔⲆⵠ: "img/day-golden-chicken.png",
    ⵠΔᐃΔⵠⲆᐃ: "img/night-golden-chicken.png",
    ⵠᐃᐃⵠΔᐃⲆ: "img/day-golden-hen-angry.png",
    ΔⵠⵠⲆᐃΔⲆ: "img/night-golden-hen-angry.png",
    ΔΔⲆᐃⵠⲆΔ: "img/hurt-golden-hen.png",
    ᐃΔΔⵠΔⲆᐃ: "img/hurt-golden-chicken.png",
    ⲆⵠⵠⵠⵠⵠⲆ: "img/day-golden-hen-tamed.png",
    ⲆΔΔΔⲆⵠΔ: "img/night-golden-hen-tamed.png",
    ᐃᐃⵠⲆΔΔΔ: "img/inv-mount-golden-hen-out.png",
    ᐃⵠⵠᐃΔΔΔ: "img/inv-mount-golden-hen-in.png",
    ΔⲆⲆᐃⵠΔᐃ: "img/inv-mount-golden-hen-click.png",
    ⲆⵠⲆΔⲆᐃᐃ: "img/logo-interface.png",
    ⲆⲆΔΔⵠⵠⵠ: "img/biome-mode-hover.png",
    ⵠΔᐃⲆⵠⵠⲆ: "img/normal-mode-hover.png",
    ΔⲆⲆᐃⲆⵠΔ: "img/vampire-mode-hover.png",
    ⲆᐃⲆⲆⲆΔⲆ: "img/zombie-mode-hover.png",
    ᐃΔΔⲆⵠΔⲆ: "img/community-mode-hover2.png",
    ⲆⵠⲆⵠⵠΔᐃ: "img/experimental-mode-hover.png",
    ⲆⵠⵠⵠΔⵠⲆ: "img/zombie-mode-out.png",
    ⲆΔⲆⵠᐃᐃΔ: "img/zombie-mode-in.png",
    ⲆΔΔᐃⵠΔᐃ: "img/zombie-mode-click.png",
    ⲆⲆΔᐃΔⲆΔ: "img/vampire-mode-out.png",
    Ⲇⵠⵠⵠⵠᐃᐃ: "img/vampire-mode-in.png",
    ΔᐃᐃⲆᐃⵠⵠ: "img/vampire-mode-click.png",
    ΔᐃⲆΔᐃⲆⲆ: "img/normal-mode-out.png",
    ⵠⵠΔⵠⲆᐃⵠ: "img/normal-mode-in.png",
    ⵠΔᐃᐃᐃᐃᐃ: "img/normal-mode-click.png",
    ⲆⲆⵠΔΔⵠᐃ: "img/biome-mode-out.png",
    ⵠΔΔΔⵠⲆᐃ: "img/biome-mode-in.png",
    ⲆⵠⵠᐃⲆⲆⵠ: "img/biome-mode-click.png",
    ⲆΔᐃᐃΔⵠⲆ: "img/community-mode-out.png",
    ᐃΔΔΔⲆΔⵠ: "img/community-mode-in.png",
    ΔⵠΔⲆⵠⵠⵠ: "img/community-mode-click.png",
    ⵠⲆΔΔⵠⲆⵠ: "img/experimental-modes-out.png",
    ΔⵠⵠᐃΔⲆⲆ: "img/experimental-modes-in.png",
    ⲆⲆⲆΔⵠΔⵠ: "img/experimental-modes-click.png",
    ᐃᐃᐃⲆᐃⵠᐃ: "img/youtube-button-out.png",
    ⵠⵠⲆⲆⲆᐃΔ: "img/youtube-button-in.png",
    ⲆᐃⲆⵠΔΔΔ: "img/youtube-button-click.png",
    ⵠⵠᐃⲆΔⵠⲆ: "img/wiki-button-out.png",
    ᐃⲆⵠΔΔⲆⵠ: "img/wiki-button-in.png",
    ᐃΔⵠᐃⵠⲆᐃ: "img/wiki-button-click.png",
    ΔⵠⲆⵠⲆᐃⵠ: "img/twitter-button-out.png",
    ᐃⲆΔᐃⵠⵠⵠ: "img/twitter-button-in.png",
    ΔΔᐃΔⵠⲆⵠ: "img/twitter-button-click.png",
    ⵠΔᐃⲆⵠⵠⵠ: "img/facebook-button-out.png",
    ⲆᐃΔⲆⵠⲆⲆ: "img/facebook-button-in.png",
    ᐃⲆᐃΔⵠⲆΔ: "img/facebook-button-click.png",
    ⲆᐃΔΔΔⵠⲆ: "img/reddit-button-out.png",
    ΔΔΔⲆᐃᐃⵠ: "img/reddit-button-in.png",
    ΔΔᐃⲆΔⵠⲆ: "img/reddit-button-click.png",
    ⲆⲆᐃⲆΔΔΔ: "img/discord-button-out.png",
    ᐃⵠΔⲆⲆᐃⲆ: "img/discord-button-in.png",
    ⵠᐃᐃᐃᐃⵠⵠ: "img/discord-button-click.png",
    ᐃⲆΔⲆⵠΔᐃ: "img/merch-button-out.png",
    ΔⵠⵠⵠᐃᐃΔ: "img/merch-button-in.png",
    ᐃᐃᐃⵠⲆⵠᐃ: "img/merch-button-click.png",
    ΔᐃΔⲆⲆⲆⲆᐃΔ: "img/terminal-button-out.png",
    ⵠⲆᐃΔΔⲆⵠⵠΔ: "img/terminal-button-in.png",
    ΔⲆⵠΔᐃⲆᐃⵠⲆ: "img/terminal-button-click.png",
    ΔΔⵠⵠⵠᐃᐃ: "img/restart-out.png",
    ⲆΔΔⵠᐃΔΔ: "img/restart-in.png",
    ⵠⵠΔᐃⲆᐃᐃ: "img/restart-click.png",
    ΔⲆᐃΔᐃⵠⲆ: "img/reboot-out.png",
    ⵠⲆΔⲆΔⲆⲆ: "img/reboot-in.png",
    ΔΔⵠᐃⲆⲆΔ: "img/reboot-click.png",
    ⲆΔΔᐃⲆⵠΔ: "img/guide-out.png",
    ΔⵠⲆᐃⵠΔᐃ: "img/guide-in.png",
    ΔⲆᐃⲆΔⲆⲆ: "img/guide-click.png",
    ⲆⵠⵠΔⵠᐃΔ: "img/copy-paste-out.png",
    ᐃΔⲆΔᐃᐃΔ: "img/copy-paste-in.png",
    ᐃᐃΔⲆΔΔᐃ: "img/copy-paste-click.png",
    ΔⵠᐃⵠⲆⵠᐃ: "img/link-buttons-bg.png",
    ΔᐃⵠⲆⵠΔⵠ: "img/changelog-box2.png",
    ᐃᐃⲆⲆⵠᐃⵠ: "img/changelog_33.png",
    ΔΔⲆΔⵠⵠΔ: "img/banner-taming.png",
    ⵠⵠⵠⲆΔⲆⵠ: "img/profile-button-out.png",
    ⲆⲆᐃΔᐃⵠⲆ: "img/profile-button-in.png",
    ⲆⲆⵠⵠᐃᐃᐃ: "img/profile-button-click.png",
    ⲆⲆⲆᐃⲆⵠΔ: "img/login-button-out.png",
    ᐃΔⵠⲆᐃⵠᐃ: "img/login-button-in.png",
    ⵠⲆᐃⵠⵠⵠᐃ: "img/login-button-click.png",
    ᐃⵠᐃⵠⵠⵠⲆ: "img/login-google-out.png",
    ⲆⵠⵠᐃΔⲆⵠ: "img/login-google-in.png",
    ⲆΔΔΔⲆΔⲆ: "img/login-google-click.png",
    ⵠΔᐃⵠⵠⲆⲆ: "img/login-facebook-out.png",
    ⲆⲆΔΔᐃΔᐃ: "img/login-facebook-in.png",
    ⲆⵠⵠⵠΔⲆⵠ: "img/login-facebook-click.png",
    ⵠⵠⲆⲆᐃΔⲆ: "img/account-box.png",
    ⵠⲆⲆⲆⲆΔⵠΔⲆ: "img/account-under-maintenance.png",
    ⵠΔΔⲆᐃⵠⲆ: "img/close-button-account-out.png",
    ⲆⵠⵠΔⲆΔⲆ: "img/close-button-account-in.png",
    ⵠᐃⲆΔᐃᐃᐃ: "img/close-button-account-click.png",
    ⲆᐃᐃΔⲆⵠᐃ: "img/play-button-out.png",
    ΔᐃⵠⲆᐃⵠⲆ: "img/play-button-in.png",
    ΔΔⲆᐃΔΔΔ: "img/play-button-click.png",
    ⲆⲆᐃᐃⲆⲆᐃᐃΔ: "img/app-store-badge.png",
    ⵠΔΔⲆᐃΔᐃⵠⲆ: "img/play-store-badge.png",
    ᐃⲆᐃΔⲆⵠⵠΔⲆ: "img/mobile-boxad.png",
    ᐃΔⵠⵠⲆᐃⲆ: "img/modify-name-out.png",
    ⲆⵠⵠΔⲆᐃᐃ: "img/modify-name-in.png",
    ⵠⲆⵠⲆΔⲆᐃ: "img/modify-name-click.png",
    ΔⵠᐃⲆⵠⲆⵠ: "img/copy-id-button-out.png",
    ΔΔⵠⲆⲆΔⵠ: "img/copy-id-button-hover.png",
    ⲆᐃΔΔᐃᐃⲆ: "img/copy-id-button-active.png",
    ⲆⵠⲆᐃⲆⵠⲆ: "img/yes-button-out.png",
    ⵠⵠΔᐃⵠᐃΔ: "img/yes-button-in.png",
    ᐃⵠᐃⵠᐃⵠⵠ: "img/yes-button-click.png",
    ᐃⵠᐃᐃⵠⲆⵠ: "img/yes-300-button-out.png",
    ⲆΔᐃΔⲆΔᐃ: "img/yes-300-button-in.png",
    ⲆⲆΔᐃⲆⲆⲆ: "img/yes-300-button-click.png",
    ᐃⲆᐃᐃⲆᐃᐃ: "img/no-button-out.png",
    ⲆΔⵠⲆᐃⲆΔ: "img/no-button-in.png",
    ΔΔΔΔⵠⵠᐃ: "img/no-button-click.png",
    ᐃΔᐃΔⲆΔⲆ: "img/no-thanks-button-out.png",
    ΔⲆⵠᐃΔⲆᐃ: "img/no-thanks-button-in.png",
    ΔⵠΔⲆΔΔⲆ: "img/no-thanks-button-click.png",
    ⵠⵠΔⲆᐃΔⵠ: "img/shop-button-out.png",
    ⲆΔᐃⲆⵠΔⲆ: "img/shop-button-in.png",
    ⲆᐃᐃⵠⵠΔⲆ: "img/shop-button-click.png",
    ⵠΔᐃⵠΔΔᐃ: "img/logout-out.png",
    ⲆΔᐃⲆⵠⵠⵠ: "img/logout-in.png",
    ⲆⵠΔᐃΔⵠΔ: "img/logout-click.png",
    ᐃΔⲆⵠᐃΔⲆ: "img/terms-button-out.png",
    ᐃⵠᐃΔᐃⲆΔ: "img/terms-button-in.png",
    ⲆΔⲆⵠΔᐃⲆ: "img/terms-button-click.png",
    ᐃⵠΔΔⵠᐃⵠ: "img/tutorial-icon.png",
    ᐃΔᐃΔⵠᐃᐃ: "img/skins-icon.png",
    ᐃᐃΔⲆᐃⲆⵠ: "img/shop-icon.png",
    ΔⵠⵠⵠΔᐃⵠⲆⲆ: "img/paint-icon.png",
    ΔⲆⲆⵠⵠΔΔ: "img/leaderboard-icon.png",
    ⵠⲆⵠⲆΔᐃⵠ: "img/start-icon.png",
    ΔᐃⵠⵠⲆΔᐃ: "img/profile-icon.png",
    ΔΔⲆⲆⵠΔⵠ: "img/server-access-icon2.png",
    ᐃΔⵠⵠⲆⵠⵠ: "img/button-homepage-bg-out.png",
    ᐃΔΔΔΔΔⵠ: "img/button-homepage-bg-in.png",
    ᐃΔⵠⵠⵠᐃⵠ: "img/button-homepage-bg-click.png",
    ⲆⲆⵠᐃᐃΔⵠ: "img/button-bottom-homepage-bg-out.png",
    ⲆⲆΔⵠᐃⲆΔ: "img/button-bottom-homepage-bg-in.png",
    ⲆⵠΔΔⵠΔᐃ: "img/button-bottom-homepage-bg-click.png",
    ᐃⵠⲆⲆⲆⲆⵠ: "img/lvl-player.png",
    ΔᐃⵠΔⲆⲆⵠ: "img/avatar-player.png",
    ⲆⲆⵠⵠΔⲆΔ: "img/avatar-player1.png",
    ⲆⲆⵠⵠᐃⲆⵠ: "img/avatar-player2.png",
    ⲆⲆᐃⵠΔⲆΔ: "img/avatar-player3.png",
    ⵠΔⲆⵠᐃⲆΔ: "img/avatar-player4.png",
    ΔⵠΔⵠⵠΔⲆ: "img/avatar-player5.png",
    ᐃᐃⵠΔΔⵠⲆ: "img/avatar-player6.png",
    ⵠⵠⲆᐃΔⵠΔ: "img/avatar-player7.png",
    ⵠᐃⵠⲆⵠⵠᐃ: "img/avatar-player8.png",
    ΔᐃⲆᐃⲆᐃᐃ: "img/avatar-player9.png",
    ⲆⵠᐃΔⲆⲆᐃ: "img/avatar-player10.png",
    ΔΔΔⵠᐃᐃⵠ: "img/avatar-player11.png",
    ⵠΔᐃΔⵠᐃⲆ: "img/avatar-player12.png",
    ᐃΔΔᐃⲆⵠⵠ: "img/avatar-player13.png",
    ΔᐃⵠⵠΔⵠⵠ: "img/avatar-player14.png",
    ⲆⲆⵠⵠⲆᐃⵠ: "img/avatar-player14.png",
    ΔΔᐃᐃᐃΔⲆ: "img/avatar-player14.png",
    ᐃⲆⵠⲆΔⵠΔ: "img/avatar-player14.png",
    ᐃⲆᐃΔⵠⲆΔⲆᐃ: "img/golden-bread.png",
    ⲆᐃΔΔⲆᐃⲆ: "img/buy-bread-out.png",
    ⲆΔⲆⵠⲆᐃᐃ: "img/buy-bread-in.png",
    ⲆⲆⵠⵠΔⵠⲆ: "img/buy-bread-click.png",
    ᐃⲆⵠΔΔΔᐃ: "img/gauge.png",
    ⲆΔⵠᐃⵠⲆΔⲆⵠ: "img/season-4-out.png",
    ⲆᐃΔΔⵠᐃΔᐃⵠ: "img/season-4-in.png",
    ⲆⵠⲆⵠⵠᐃⵠΔᐃ: "img/season-4-click.png",
    ⲆⵠⵠⲆΔᐃΔⲆⲆ: "img/season4-box.png",
    ΔᐃⵠΔⵠⵠⲆⵠᐃ: "img/season-5-out.png",
    ⲆᐃᐃⲆⵠⲆΔᐃⵠ: "img/season-5-in.png",
    ΔⲆⵠΔΔⲆⵠⵠⲆ: "img/season-5-click.png",
    ΔⵠᐃΔⵠⵠΔΔΔ: "img/season5-box.png",
    ⵠⵠΔᐃⵠΔⲆᐃᐃ: "img/season-6-out.png",
    ᐃΔΔΔⲆΔⵠⲆᐃ: "img/season-6-in.png",
    ΔⵠΔⲆⵠᐃⵠᐃⲆ: "img/season-6-click.png",
    ⵠⵠⵠΔⵠᐃΔⲆᐃ: "img/season6-box.png",
    ⲆⲆΔΔᐃⵠⵠ: "img/season-7-out.png",
    ⵠᐃΔᐃⲆⵠⵠ: "img/season-7-in.png",
    ⲆΔⵠⲆⲆᐃΔ: "img/season-7-click.png",
    ᐃⲆⲆᐃⲆΔᐃ: "img/season7-box.png",
    ᐃΔΔⵠⵠⵠΔ: "img/profile3-box.png",
    ⵠΔⵠᐃΔΔⲆ: "img/skins-box.png",
    ⵠΔⵠⲆᐃΔΔ: "img/shop-box.png",
    ⲆΔΔⲆⵠⵠⵠᐃⲆ: "img/private-server-box.png",
    ᐃⲆⲆΔⵠⵠΔ: "img/location-box.png",
    ΔᐃΔΔⲆΔᐃ: "img/server-duration-box.png",
    ⲆΔⵠᐃᐃⵠᐃ: "img/tutorial-box.png",
    ΔᐃᐃΔᐃⵠΔ: "img/leaderboard2-box.png",
    ⵠⵠⵠᐃᐃΔᐃ: "img/buy-breads-box.png",
    ᐃⲆᐃᐃⵠΔⵠ: "img/bag-box.png",
    ⲆΔⲆΔΔⲆⲆ: "img/deadbox-box.png",
    ᐃΔᐃⵠΔⵠᐃ: "img/book-box.png",
    ᐃⲆⵠⲆΔⲆΔ: "img/accessories-box.png",
    ⲆⲆⵠΔⲆᐃΔ: "img/customskin-box.png",
    ⵠⵠⵠⲆᐃⲆⲆ: "img/bag-lasts.png",
    ⵠᐃⲆⵠⲆΔⵠ: "img/server-lasts.png",
    ΔⵠΔΔΔᐃⵠ: "img/server-access-box3.png",
    ⲆⵠΔⵠⵠΔᐃ: "img/lootbox-box.png",
    ᐃⵠⲆⵠΔⵠⲆ: "img/change-nickname0.png",
    ⲆⲆᐃΔΔᐃΔ: "img/change-nickname1.png",
    ⵠⵠᐃⵠᐃⲆᐃ: "img/cheating-box.png",
    ⵠΔᐃᐃΔᐃΔᐃΔ: "img/daily-quest-box.png",
    ⵠⵠⵠΔΔⲆᐃᐃᐃ: "img/daily-5-bread.png",
    ᐃᐃᐃⲆⲆᐃᐃΔⵠ: "img/daily-10-bread.png",
    ΔᐃⲆΔⲆΔΔⵠΔ: "img/daily-valid.png",
    ⵠⲆⲆᐃᐃⲆΔ: "img/normal-profile-out.png",
    ΔΔⲆⵠΔᐃᐃ: "img/normal-profile-in.png",
    ᐃᐃⲆⵠⲆⲆᐃ: "img/normal-profile-click.png",
    ⲆΔⲆⲆⲆⲆⲆ: "img/forest-profile-out.png",
    ΔⲆᐃᐃΔⵠⵠ: "img/forest-profile-in.png",
    ⲆⵠΔᐃⲆⵠⵠ: "img/forest-profile-click.png",
    ᐃⲆΔⵠΔⲆⵠ: "img/zombie-profile-out.png",
    ΔᐃⲆⵠᐃΔᐃ: "img/zombie-profile-in.png",
    ⲆⲆᐃⵠΔΔᐃ: "img/zombie-profile-click.png",
    ⵠᐃⲆΔᐃⵠᐃ: "img/vampire-profile-out.png",
    ⵠᐃⲆΔᐃⵠⲆ: "img/vampire-profile-in.png",
    ⵠⵠⵠⵠⲆⵠⵠ: "img/vampire-profile-click.png",
    ᐃᐃⲆΔᐃⵠᐃ: "img/total-profile-out.png",
    ⲆΔΔⲆᐃᐃⲆ: "img/total-profile-in.png",
    ⵠᐃΔᐃΔⲆⲆ: "img/total-profile-click.png",
    ΔⲆᐃⲆΔΔᐃ: "img/season1-out.png",
    ᐃⲆΔΔΔⵠⵠ: "img/season1-in.png",
    ΔⵠⲆᐃΔΔⲆ: "img/season1-click.png",
    ⲆⵠⲆᐃⵠΔⲆ: "img/season2-out.png",
    ⲆⲆΔᐃⲆⵠᐃ: "img/season2-in.png",
    ⲆᐃⵠΔᐃⵠⲆ: "img/season2-click.png",
    ⵠᐃᐃⵠⵠⵠⲆ: "img/season3-out.png",
    ΔᐃᐃⵠΔΔᐃ: "img/season3-in.png",
    ΔΔⲆⲆⵠᐃΔ: "img/season3-click.png",
    ⵠΔᐃⲆⲆᐃΔ: "img/season4-out.png",
    ᐃΔⵠΔΔΔΔ: "img/season4-in.png",
    ΔⵠᐃⲆΔΔⵠ: "img/season4-click.png",
    ΔᐃⲆⵠᐃΔⵠ: "img/season5-out.png",
    ᐃᐃⵠΔⲆΔᐃ: "img/season5-in.png",
    ᐃⵠⲆᐃⲆⲆΔ: "img/season5-click.png",
    ᐃⵠⲆΔⵠⲆΔ: "img/season6-out.png",
    ⲆⵠᐃᐃᐃⵠⲆ: "img/season6-in.png",
    ⲆᐃᐃᐃⲆΔΔ: "img/season6-click.png",
    ΔᐃΔᐃⲆⵠⵠ: "img/season7-out.png",
    ᐃⲆⲆⲆⲆΔⵠ: "img/season7-in.png",
    ⵠⵠΔⲆΔᐃᐃ: "img/season7-click.png",
    ⲆΔᐃⵠΔᐃΔ: "img/locked-skin-alert.png",
    Ⲇⵠᐃⵠᐃᐃⵠ: "img/locked-custom-alert.png",
    ⵠΔⵠᐃⵠⲆⲆ: "img/bg-red-locked.png",
    ⵠᐃΔΔⵠⵠⲆ: "img/skin-button-out.png",
    ᐃⵠⵠⵠⵠΔⵠ: "img/skin-button-in.png",
    ⵠᐃΔᐃΔⵠⵠ: "img/skin-button-click.png",
    ⲆᐃᐃⲆᐃᐃⵠ: "img/accessory-button-out.png",
    ΔⲆᐃᐃΔⵠᐃ: "img/accessory-button-in.png",
    ΔᐃᐃᐃᐃᐃΔ: "img/accessory-button-click.png",
    ⵠⵠⲆⲆΔᐃⵠ: "img/bag-button-out.png",
    ᐃΔΔᐃᐃⵠⵠ: "img/bag-button-in.png",
    ΔⵠᐃⵠΔᐃⲆ: "img/bag-button-click.png",
    ᐃⲆⵠⵠΔΔᐃ: "img/book-button-out.png",
    ᐃᐃⵠΔΔⵠΔ: "img/book-button-in.png",
    ΔΔᐃⵠΔⲆΔ: "img/book-button-click.png",
    ΔⵠΔⲆⵠΔᐃ: "img/deadbox-button-out.png",
    ΔᐃⵠⲆᐃᐃᐃ: "img/deadbox-button-in.png",
    ᐃᐃⲆⲆᐃᐃⲆ: "img/deadbox-button-click.png",
    ᐃΔⵠⵠⵠᐃᐃ: "img/loot-button-out.png",
    ΔⲆⲆⵠⵠᐃⲆ: "img/loot-button-in.png",
    ΔⵠⲆⵠⵠⵠᐃ: "img/loot-button-click.png",
    ⵠⵠⲆᐃᐃⵠᐃ: "img/free-item-out.png",
    ⵠᐃᐃΔⲆⵠΔ: "img/free-item-in.png",
    ⵠⲆⵠⲆⲆΔⲆ: "img/free-item-click.png",
    ⲆⵠⵠΔ: "img/wood-item-out.png",
    ⵠᐃⲆΔ: "img/wood-item-in.png",
    ΔΔⵠᐃ: "img/wood-item-click.png",
    ⲆᐃΔⲆΔΔΔ: "img/stone-item.png",
    ᐃΔⲆⵠᐃᐃⲆ: "img/stone-item-in.png",
    ⲆⵠⵠⲆᐃⲆΔ: "img/stone-item-click.png",
    ΔⲆⵠᐃΔⵠⲆ: "img/gold-item.png",
    ᐃᐃᐃΔᐃⵠΔ: "img/gold-item-in.png",
    ᐃⵠᐃⵠⲆⲆᐃ: "img/gold-item-click.png",
    ⲆᐃᐃΔⵠⲆⲆ: "img/diamond-item.png",
    ᐃᐃⵠΔΔᐃᐃ: "img/diamond-item-in.png",
    ΔⵠΔⲆᐃⲆⲆ: "img/diamond-item-click.png",
    ⲆⵠᐃⵠⵠⲆᐃ: "img/amethyst-item.png",
    ΔᐃᐃΔΔΔⲆ: "img/amethyst-item-in.png",
    ΔΔΔⲆΔΔᐃ: "img/amethyst-item-click.png",
    ⲆΔΔᐃⵠΔΔ: "img/reidite-item.png",
    ΔⵠΔᐃᐃΔⲆ: "img/reidite-item-in.png",
    ᐃⵠⲆⵠᐃᐃΔ: "img/reidite-item-click.png",
    ⵠᐃΔⲆᐃΔⵠ: "img/special-item-out.png",
    ᐃᐃΔⲆⲆΔⵠ: "img/special-item-in.png",
    ΔⲆᐃᐃΔⲆⲆ: "img/special-item-click.png",
    ⲆᐃⲆᐃΔⵠⵠ: "img/level-item-out.png",
    ⲆⲆᐃΔΔΔᐃ: "img/level-item-in.png",
    ΔᐃᐃΔⲆⵠⲆ: "img/level-item-click.png",
    ⲆⵠΔⵠⲆⵠⲆ: "img/skin-previous-out.png",
    ⲆⲆⵠᐃᐃⵠᐃ: "img/skin-previous-in.png",
    ⵠΔⵠⵠᐃᐃΔ: "img/skin-previous-click.png",
    ΔΔⲆᐃᐃΔⲆ: "img/skin-next-out.png",
    ᐃᐃⲆⵠⲆΔΔ: "img/skin-next-in.png",
    ⲆⵠⲆᐃⵠⲆᐃ: "img/skin-next-click.png",
    ᐃΔⵠΔⲆ: "img/back-button-out.png",
    ⵠΔΔΔⲆ: "img/back-button-in.png",
    Δᐃⵠⵠⵠ: "img/back-button-click.png",
    ⵠΔΔⵠⲆΔⲆ: "img/get-more-button-out.png",
    ᐃⲆᐃⵠΔⵠⲆ: "img/get-more-button-in.png",
    ᐃᐃᐃⲆⲆᐃᐃ: "img/get-more-button-click.png",
    ᐃⲆⵠⵠⵠⵠᐃ: "img/currency1-out.png",
    ⲆⲆⵠⲆⲆᐃᐃ: "img/currency1-in.png",
    ⲆᐃᐃΔⲆⲆⲆ: "img/currency1-click.png",
    ⲆΔⵠᐃⲆⲆⵠ: "img/currency2-out.png",
    ⵠⲆΔⵠⵠΔᐃ: "img/currency2-in.png",
    ΔᐃⵠᐃⵠΔⲆ: "img/currency2-click.png",
    ΔⲆⲆⵠΔΔΔ: "img/currency3-out.png",
    ⲆᐃⲆΔᐃⵠΔ: "img/currency3-in.png",
    ⲆⲆⵠⲆⲆⵠΔ: "img/currency3-click.png",
    ⲆᐃΔᐃⲆᐃⵠ: "img/currency4-out.png",
    ⵠΔΔⲆⲆΔⵠ: "img/currency4-in.png",
    ⲆⲆⲆΔᐃⲆⵠ: "img/currency4-click.png",
    ΔᐃⲆΔⵠΔΔ: "img/currency5-out.png",
    ⵠⵠⵠᐃᐃΔⵠ: "img/currency5-in.png",
    ⵠⵠⵠᐃⵠᐃⵠ: "img/currency5-click.png",
    ΔᐃᐃᐃⵠΔⵠ: "img/price1-out.png",
    ᐃΔⲆΔΔᐃΔ: "img/price1-in.png",
    ᐃⵠᐃⲆⵠⵠⵠ: "img/price1-click.png",
    ΔⵠΔⵠᐃᐃⲆ: "img/price2-out.png",
    ⲆⲆᐃᐃⵠΔⵠ: "img/price2-in.png",
    ΔⲆⵠΔΔⵠⲆ: "img/price2-click.png",
    ⲆⲆᐃᐃᐃⲆⵠ: "img/price3-out.png",
    ⵠΔΔᐃⵠΔΔ: "img/price3-in.png",
    ⲆᐃᐃⵠΔΔΔ: "img/price3-click.png",
    ⵠΔⲆⲆⲆⲆⲆ: "img/price4-out.png",
    ΔⲆΔⲆΔΔⲆ: "img/price4-in.png",
    ⲆⵠⲆⵠᐃⲆⵠ: "img/price4-click.png",
    ᐃⵠᐃΔᐃᐃΔ: "img/price5-out.png",
    ΔⲆⵠⵠⲆⲆΔ: "img/price5-in.png",
    ΔⲆᐃΔΔΔⲆ: "img/price5-click.png",
    ⲆⲆᐃΔⲆⲆⵠΔΔ: "img/buy-private-server-out.png",
    ᐃⲆᐃΔΔⵠᐃᐃᐃ: "img/buy-private-server-in.png",
    ΔᐃΔᐃΔⲆΔⵠᐃ: "img/buy-private-server-click.png",
    ⲆⲆⵠΔΔⲆⲆ: "img/atlanta-button-out.png",
    ΔΔⵠΔΔⵠᐃ: "img/atlanta-button-in.png",
    ᐃᐃⵠᐃⵠⲆᐃ: "img/atlanta-button-click.png",
    ⲆⲆᐃᐃⵠⵠⵠ: "img/los-angeles-button-out.png",
    ΔⵠᐃⲆᐃⵠⲆ: "img/los-angeles-button-in.png",
    ΔᐃⲆΔΔⲆⲆ: "img/los-angeles-button-click.png",
    ᐃⵠΔⲆΔⵠᐃ: "img/sydney-button-out.png",
    ᐃⵠⵠᐃᐃΔⲆ: "img/sydney-button-in.png",
    ⲆⵠᐃⲆⵠΔᐃ: "img/sydney-button-click.png",
    ⲆⵠⲆⵠⲆⲆΔ: "img/frankfurt-button-out.png",
    ⲆΔᐃΔΔⲆΔ: "img/frankfurt-button-in.png",
    ᐃⲆⵠⵠᐃΔⵠ: "img/frankfurt-button-click.png",
    ⲆᐃᐃΔⵠᐃΔ: "img/osaka-button-out.png",
    ᐃⲆⲆⵠⵠⵠΔ: "img/osaka-button-in.png",
    ΔΔᐃⲆΔΔΔ: "img/osaka-button-click.png",
    ΔⵠⲆΔᐃⵠⲆΔⲆ: "img/yes-location-out.png",
    ⵠⵠⲆⲆⲆΔΔΔⵠ: "img/yes-location-in.png",
    ⵠⲆⲆⲆΔΔⵠᐃΔ: "img/yes-location-click.png",
    ΔⲆᐃⵠᐃⵠᐃ: "img/3days-button-out.png",
    ⲆᐃⵠⲆΔⵠΔ: "img/3days-button-in.png",
    ⲆⲆⵠΔᐃⲆΔ: "img/3days-button-click.png",
    ⵠⲆᐃΔⵠΔⲆ: "img/7days-button-out.png",
    ⵠΔᐃⵠᐃΔᐃ: "img/7days-button-in.png",
    ΔΔⲆᐃΔⵠᐃ: "img/7days-button-click.png",
    ᐃΔΔⵠΔⵠⵠ: "img/30days-button-out.png",
    ΔᐃΔⲆᐃᐃᐃ: "img/30days-button-in.png",
    ⲆΔⲆⵠⲆⵠΔ: "img/30days-button-click.png",
    ⲆⲆⵠᐃᐃⵠⲆ: "img/90days-button-out.png",
    ᐃᐃᐃᐃⵠⵠⵠ: "img/90days-button-in.png",
    ⲆⵠⵠΔᐃⵠᐃ: "img/90days-button-click.png",
    ⵠΔᐃΔⵠΔΔ: "img/spin1.png",
    ΔⲆⵠᐃᐃⲆⲆ: "img/spin2.png",
    ⵠΔⲆᐃⵠΔΔ: "img/spin3.png",
    ⲆᐃΔⵠⲆᐃⲆ: "img/spin4.png",
    ΔⵠⲆⵠⲆⲆⲆ: "img/spin5.png",
    ⲆΔΔⲆⲆᐃⲆ: "img/spin6.png",
    ⵠⵠⲆⵠⲆⲆΔ: "img/arrow-spin.png",
    ᐃᐃⵠⲆⲆⵠᐃ: "img/spin-button-1-out.png",
    ΔᐃΔᐃⲆⵠⲆ: "img/spin-button-1-in.png",
    ⲆⲆΔⲆᐃⲆⲆ: "img/spin-button-1-click.png",
    ⲆᐃΔⵠⲆⲆΔ: "img/spin-button-2-out.png",
    ΔⲆΔⲆⵠᐃⲆ: "img/spin-button-2-in.png",
    ⵠⵠΔⵠΔΔᐃ: "img/spin-button-2-click.png",
    ⵠΔᐃⵠⵠΔⲆ: "img/spin-button-3-out.png",
    ΔⵠᐃⲆⵠΔᐃ: "img/spin-button-3-in.png",
    ⲆΔᐃⲆΔⵠⲆ: "img/spin-button-3-click.png",
    ⵠⵠⲆⲆᐃⵠⵠ: "img/spin-button-4-out.png",
    ᐃⵠⵠⲆⲆᐃΔ: "img/spin-button-4-in.png",
    ⵠⵠⲆⵠⲆΔΔ: "img/spin-button-4-click.png",
    ⲆᐃⵠᐃΔΔⵠ: "img/spin-button-5-out.png",
    ⵠⵠᐃᐃΔᐃⵠ: "img/spin-button-5-in.png",
    ⲆᐃⲆⵠᐃΔⲆ: "img/spin-button-5-click.png",
    ⲆΔᐃⲆⲆⵠΔ: "img/spin-light.png",
    ᐃⵠᐃΔⲆⲆΔ: "img/tuto-wiki-out.png",
    ⵠΔⲆⵠⵠⲆΔ: "img/tuto-wiki-in.png",
    ⲆⵠⲆΔⵠⲆⲆ: "img/tuto-wiki-click.png",
    ΔᐃⵠᐃⲆᐃⵠ: "img/tuto-previous-out.png",
    ⵠᐃᐃᐃΔΔΔ: "img/tuto-previous-in.png",
    ⵠⲆΔⲆⲆⵠⲆ: "img/tuto-previous-click.png",
    ⵠⲆΔⵠⵠΔΔ: "img/tuto-next-out.png",
    ᐃᐃⵠⲆᐃⲆⲆ: "img/tuto-next-in.png",
    ⵠⲆⲆᐃᐃⵠᐃ: "img/tuto-next-click.png",
    ᐃⲆᐃΔⲆⲆⲆ: "img/time-leaderboard-out.png",
    ⲆᐃⲆⵠⲆΔⲆ: "img/time-leaderboard-in.png",
    ⵠⲆⲆⲆⵠⲆᐃ: "img/time-leaderboard-click.png",
    ΔᐃΔᐃⲆᐃⲆ: "img/score-leaderboard-out.png",
    ⵠᐃⲆⲆⲆⵠᐃ: "img/score-leaderboard-in.png",
    ΔⵠΔΔⲆᐃΔ: "img/score-leaderboard-click.png",
    ⵠΔΔᐃⲆΔᐃ: "img/lvl-leaderboard-out.png",
    ⵠⵠⵠΔΔⲆⲆ: "img/lvl-leaderboard-in.png",
    ⲆᐃⵠⲆⲆⵠᐃ: "img/lvl-leaderboard-click.png",
    ᐃΔⲆᐃⲆΔⲆ: "img/kill-leaderboard-out.png",
    ⲆⲆᐃΔᐃⲆᐃ: "img/kill-leaderboard-in.png",
    ᐃⵠᐃⵠᐃᐃⲆ: "img/kill-leaderboard-click.png",
    ⵠⵠᐃⵠⵠᐃⲆ: "img/all-leaderboard-out.png",
    ⲆΔᐃᐃⵠⲆⲆ: "img/all-leaderboard-in.png",
    ⲆⵠᐃΔⲆᐃᐃ: "img/all-leaderboard-click.png",
    ᐃΔⵠⵠⵠΔᐃ: "img/today-leaderboard-out.png",
    ⵠⵠⲆᐃⵠⲆΔ: "img/today-leaderboard-in.png",
    ᐃᐃⵠⵠᐃⲆᐃ: "img/today-leaderboard-click.png",
    ᐃⵠⲆᐃΔᐃΔ: "img/week-leaderboard-out.png",
    ⵠᐃᐃΔⲆΔᐃ: "img/week-leaderboard-in.png",
    ΔⲆΔⵠΔⵠᐃ: "img/week-leaderboard-click.png",
    ⲆⲆΔⲆⲆⲆⲆ: "img/season1-out.png",
    ⵠⲆⵠⲆᐃᐃⲆ: "img/season1-in.png",
    ⵠⲆᐃⵠᐃΔᐃ: "img/season1-click.png",
    ⵠᐃᐃΔⵠⲆᐃ: "img/season2-out.png",
    ᐃⵠΔᐃᐃΔᐃ: "img/season2-in.png",
    ΔⵠᐃⲆᐃⲆⵠ: "img/season2-click.png",
    ΔⲆⵠⲆᐃΔⵠ: "img/season3-out.png",
    ⵠΔⲆΔⵠΔⲆ: "img/season3-in.png",
    ⲆⵠᐃᐃⲆⲆᐃ: "img/season3-click.png",
    ⲆΔⲆⵠⵠⲆⵠ: "img/season4-out.png",
    ΔᐃᐃΔⲆⵠⵠ: "img/season4-in.png",
    ⵠΔᐃΔⲆⲆⵠ: "img/season4-click.png",
    ᐃΔΔⲆⲆᐃΔ: "img/season5-out.png",
    ⲆᐃᐃⲆⲆΔⲆ: "img/season5-in.png",
    ⵠⵠᐃⲆᐃⵠⲆ: "img/season5-click.png",
    ΔⲆⲆᐃᐃⵠΔ: "img/season6-out.png",
    ᐃⵠΔⲆⵠΔᐃ: "img/season6-in.png",
    ΔⵠᐃⵠᐃⵠΔ: "img/season6-click.png",
    ΔΔᐃᐃΔΔΔ: "img/season7-out.png",
    ⲆᐃⵠΔΔΔᐃ: "img/season7-in.png",
    ⲆᐃΔⲆⵠⵠⵠ: "img/season7-click.png",
    ᐃᐃⲆⲆⲆΔΔ: "img/total-lead-out.png",
    ⵠⲆⲆΔⲆⲆᐃ: "img/total-lead-in.png",
    ᐃⵠΔⵠⲆⲆᐃ: "img/total-lead-click.png",
    ᐃᐃΔΔⵠᐃᐃ: "img/normal-lead-out.png",
    ⲆⲆⵠⵠⲆⲆⵠ: "img/normal-lead-in.png",
    ⵠⲆᐃᐃᐃΔΔ: "img/normal-lead-click.png",
    ᐃⵠᐃᐃᐃⲆⵠ: "img/forest-lead-out.png",
    ΔΔΔᐃᐃⵠᐃ: "img/forest-lead-in.png",
    ᐃⵠⲆⵠΔΔⲆ: "img/forest-lead-click.png",
    ⵠᐃⵠⵠΔΔΔ: "img/vampire-lead-out.png",
    ⲆᐃΔᐃⵠᐃⵠ: "img/vampire-lead-in.png",
    ⲆΔᐃⵠΔⵠⵠ: "img/vampire-lead-click.png",
    ΔᐃᐃᐃΔΔⲆ: "img/zombie-lead-out.png",
    ΔⵠⲆⲆⲆΔᐃ: "img/zombie-lead-in.png",
    ᐃΔᐃⲆⵠᐃΔ: "img/zombie-lead-click.png",
    ΔⵠΔⲆΔⵠⲆ: "img/day-level5.png",
    ᐃΔⲆⲆᐃΔᐃ: "img/night-level5.png",
    ⵠⵠⵠΔΔⵠΔ: "img/day-level10.png",
    ⲆᐃᐃΔΔⵠᐃ: "img/night-level10.png",
    ᐃΔⲆΔⵠⲆΔ: "img/day-level15.png",
    ⵠΔⲆⲆⵠΔⵠ: "img/night-level15.png",
    ⲆⲆᐃΔᐃΔΔ: "img/day-level20.png",
    ⲆᐃⲆⵠΔΔⵠ: "img/night-level20.png",
    ΔⵠⲆⲆᐃⵠⲆ: "img/day-level25.png",
    ⵠᐃⵠⵠᐃⲆᐃ: "img/night-level25.png",
    ⵠⵠⲆΔΔΔⲆ: "img/day-level30.png",
    ΔᐃΔⲆⵠⲆⵠ: "img/night-level30.png",
    ᐃⲆᐃᐃⲆᐃⲆ: "img/day-level35.png",
    ΔΔⵠⵠⵠΔΔ: "img/night-level35.png",
    ⲆⵠΔⲆⵠΔΔ: "img/day-level40.png",
    ᐃⵠⵠᐃᐃⵠΔ: "img/night-level40.png",
    ⲆᐃⵠᐃⲆⵠⵠ: "img/day-level45.png",
    ᐃⵠΔᐃⵠⵠⲆ: "img/night-level45.png",
    ⲆⵠⵠΔΔⵠᐃ: "img/day-level50.png",
    ΔⵠᐃᐃⲆΔⵠ: "img/night-level50.png",
    ⵠᐃᐃᐃΔΔⵠ: "img/day-level55.png",
    ⲆᐃᐃⵠᐃⵠⲆ: "img/night-level55.png",
    ᐃⵠⲆⲆΔⲆⲆ: "img/day-level60.png",
    ᐃᐃΔᐃⲆᐃΔ: "img/night-level60.png",
    ᐃᐃΔᐃΔⵠΔ: "img/day-skin-devast0.png",
    ΔᐃΔⵠⵠᐃΔ: "img/night-skin-devast0.png",
    ⵠⵠⲆΔⵠΔΔ: "img/day-hand-devaster.png",
    ⲆΔⲆⵠᐃⲆᐃ: "img/night-hand-devaster.png",
    ⲆᐃⵠΔⲆⲆᐃ: "img/day-skin-star0.png",
    ΔᐃⲆΔⵠⵠᐃ: "img/night-skin-star0.png",
    ⲆΔΔⵠΔⵠⵠ: "img/day-hand-star0.png",
    ΔΔⲆᐃⵠᐃⲆ: "img/night-hand-star0.png",
    ⲆᐃⵠᐃᐃΔⵠ: "img/day-vampire.png",
    ⵠⵠⲆΔΔΔᐃ: "img/night-vampire.png",
    ⵠΔⲆΔⲆᐃⵠ: "img/day-hand-vampire.png",
    ⵠⵠⲆᐃⵠᐃΔ: "img/night-hand-vampire.png",
    ⲆΔΔⵠΔⵠⲆ: "img/day-zombie.png",
    ΔΔΔᐃᐃⲆⵠ: "img/night-zombie.png",
    ⲆⲆΔᐃᐃⲆⵠ: "img/day-hand-zombie.png",
    ᐃⲆⲆⵠᐃⵠⲆ: "img/night-hand-zombie.png",
    ⵠⵠⲆⵠᐃⲆⲆ: "img/day-skin113.png",
    ⲆⲆᐃΔⲆᐃⵠ: "img/night-skin113.png",
    ᐃⵠⵠⲆⵠᐃⲆ: "img/day-hand-skin113.png",
    ⵠⵠΔⲆᐃⵠᐃ: "img/night-hand-skin113.png",
    ⲆᐃᐃΔⲆᐃΔ: "img/day-skin0.png",
    ⵠᐃⵠᐃⲆΔΔ: "img/night-skin0.png",
    ΔᐃΔᐃᐃᐃΔ: "img/day-skin1.png",
    ᐃΔΔⵠᐃⵠⲆ: "img/night-skin1.png",
    ⲆᐃᐃᐃΔᐃⲆ: "img/day-skin2.png",
    ⵠΔⲆΔᐃⲆᐃ: "img/night-skin2.png",
    ᐃⲆⲆΔⲆⲆⵠ: "img/day-skin3.png",
    ⲆᐃᐃⵠⵠᐃΔ: "img/night-skin3.png",
    ᐃᐃᐃⵠⵠⵠⵠ: "img/day-skin4.png",
    ⲆΔΔΔΔΔⵠ: "img/night-skin4.png",
    ΔⲆⵠᐃⵠΔⵠ: "img/day-skin5.png",
    ⲆⲆΔⲆⲆᐃᐃ: "img/night-skin5.png",
    ⵠⲆⵠᐃᐃᐃⵠ: "img/day-skin6.png",
    ΔⲆΔⵠⵠᐃⵠ: "img/night-skin6.png",
    ΔᐃᐃΔΔᐃΔ: "img/day-skin7.png",
    ΔⲆᐃΔⵠⵠⵠ: "img/night-skin7.png",
    ᐃⲆⲆᐃᐃⵠⲆ: "img/day-skin8.png",
    ᐃⲆⵠΔⲆΔᐃ: "img/night-skin8.png",
    ᐃⵠᐃⵠⵠΔᐃ: "img/day-skin9.png",
    ΔΔⵠΔⵠᐃΔ: "img/night-skin9.png",
    ⵠⲆΔᐃⵠⲆΔ: "img/day-skin10.png",
    ΔᐃᐃⵠᐃⵠⲆ: "img/night-skin10.png",
    ⵠⵠᐃⵠⵠⵠⵠ: "img/day-skin11.png",
    ⵠᐃΔⵠⲆᐃⵠ: "img/night-skin11.png",
    ⲆⵠᐃⲆΔΔᐃ: "img/day-skin12.png",
    ⵠⵠⵠΔⲆᐃΔ: "img/night-skin12.png",
    ⵠΔⵠᐃΔΔᐃ: "img/day-skin13.png",
    ᐃΔⵠⲆΔⵠⲆ: "img/night-skin13.png",
    ⵠⵠⲆΔⵠⲆⲆ: "img/day-skin14.png",
    ⲆⲆΔⲆᐃⵠΔ: "img/night-skin14.png",
    ᐃᐃⲆᐃΔᐃⲆ: "img/day-skin15.png",
    ΔᐃᐃΔⲆⵠᐃ: "img/night-skin15.png",
    ⵠᐃΔⲆΔΔΔ: "img/day-skin16.png",
    ⲆⵠΔⲆⲆΔΔ: "img/night-skin16.png",
    ᐃⵠⲆⵠᐃⲆΔ: "img/day-skin17.png",
    ΔᐃⵠΔⵠΔⲆ: "img/night-skin17.png",
    ΔⲆΔᐃⵠⵠᐃ: "img/day-skin18.png",
    ᐃⲆᐃΔᐃᐃᐃ: "img/night-skin18.png",
    ⵠᐃⲆΔⲆΔⵠ: "img/day-skin19.png",
    ᐃᐃΔⵠⵠᐃⵠ: "img/night-skin19.png",
    ᐃᐃΔᐃᐃΔΔ: "img/day-skin20.png",
    ⲆⲆⲆᐃⵠᐃᐃ: "img/night-skin20.png",
    ⲆⲆᐃᐃⵠⵠᐃ: "img/day-skin21.png",
    ⲆᐃΔᐃᐃⲆⲆ: "img/night-skin21.png",
    ⵠⲆΔⲆⲆⵠⵠ: "img/day-skin22.png",
    ΔᐃⲆΔᐃⵠΔ: "img/night-skin22.png",
    ΔΔᐃⲆΔΔᐃ: "img/day-skin23.png",
    ᐃⵠⲆᐃᐃᐃⲆ: "img/night-skin23.png",
    ⲆⵠⲆⵠΔⲆΔ: "img/day-skin24.png",
    ⵠΔᐃⵠᐃᐃΔ: "img/night-skin24.png",
    ⲆⵠⵠⲆᐃⲆⵠ: "img/day-skin25.png",
    ⲆᐃΔᐃᐃⲆⵠ: "img/night-skin25.png",
    ⲆⵠⵠⵠⵠᐃⲆ: "img/day-skin26.png",
    ᐃⲆΔⲆⲆᐃΔ: "img/night-skin26.png",
    ⵠⵠᐃⲆᐃΔᐃ: "img/day-skin27.png",
    ΔΔᐃΔΔΔΔ: "img/night-skin27.png",
    ΔⲆⲆⲆᐃⵠΔ: "img/day-skin28.png",
    ΔⵠⲆΔᐃΔⲆ: "img/night-skin28.png",
    ΔⲆΔⲆⲆᐃΔ: "img/day-skin29.png",
    ⲆΔᐃⲆᐃᐃᐃ: "img/night-skin29.png",
    ᐃΔⵠΔᐃᐃᐃ: "img/day-skin30.png",
    ⲆΔΔⵠΔᐃⲆ: "img/night-skin30.png",
    ΔⲆᐃⵠⵠᐃᐃ: "img/day-skin31.png",
    ⲆⲆΔΔⲆᐃⲆ: "img/night-skin31.png",
    ⵠΔΔⲆᐃᐃⲆ: "img/day-skin32.png",
    ᐃⲆⲆⵠΔΔⲆ: "img/night-skin32.png",
    ⵠⲆⲆⲆΔᐃⲆ: "img/day-skin33.png",
    ΔΔᐃⵠΔᐃⵠ: "img/night-skin33.png",
    ⲆⲆᐃⵠⵠⲆᐃ: "img/day-skin34.png",
    ⵠᐃᐃΔΔⲆⲆ: "img/night-skin34.png",
    ⵠⲆΔⲆⵠᐃⲆ: "img/day-skin35.png",
    ᐃᐃⲆᐃⲆΔⲆ: "img/night-skin35.png",
    ΔⵠⲆⲆⵠΔΔ: "img/day-skin36.png",
    ⲆⲆⲆⵠⵠᐃⵠ: "img/night-skin36.png",
    ΔⵠⲆΔⵠΔΔ: "img/day-skin37.png",
    ⵠⵠⲆⵠⵠⲆᐃ: "img/night-skin37.png",
    ⲆⵠⵠΔᐃΔΔ: "img/day-skin38.png",
    ⲆΔⵠⵠΔⵠᐃ: "img/night-skin38.png",
    ΔᐃⲆⵠⵠⲆΔ: "img/day-skin39.png",
    ΔΔⵠᐃᐃᐃⲆ: "img/night-skin39.png",
    ᐃⲆᐃΔⲆΔⲆ: "img/day-skin40.png",
    ΔⵠⲆⵠΔⲆΔ: "img/night-skin40.png",
    ⵠⲆΔᐃⲆᐃΔ: "img/day-skin41.png",
    ⵠᐃⵠⵠᐃⵠᐃ: "img/night-skin41.png",
    ⵠᐃⲆᐃⵠⵠΔ: "img/day-skin42.png",
    ᐃᐃⵠⲆⲆΔⵠ: "img/night-skin42.png",
    ⵠⲆⵠᐃⵠΔⲆ: "img/day-skin43.png",
    ᐃΔΔᐃⲆΔⵠ: "img/night-skin43.png",
    ⲆⲆᐃΔⲆᐃᐃ: "img/day-skin44.png",
    ⲆⵠⲆΔⵠⲆᐃ: "img/night-skin44.png",
    ΔⲆᐃΔⲆⵠᐃ: "img/day-skin45.png",
    ⵠΔΔⵠⵠⵠᐃ: "img/night-skin45.png",
    ⲆᐃᐃΔⵠⲆⵠ: "img/day-skin46.png",
    ⲆⵠⵠⲆⲆᐃΔ: "img/night-skin46.png",
    ⵠΔΔΔⵠⵠⲆ: "img/day-skin47.png",
    Δᐃⵠⵠⵠᐃⵠ: "img/night-skin47.png",
    Ⲇᐃᐃᐃᐃⵠⵠ: "img/day-skin48.png",
    ⲆⲆᐃᐃΔⲆΔ: "img/night-skin48.png",
    ᐃⵠⲆᐃⵠⵠᐃ: "img/day-skin49.png",
    ΔΔΔᐃⲆⵠᐃ: "img/night-skin49.png",
    ⲆΔⲆⲆⲆⲆⵠ: "img/day-skin50.png",
    ΔⵠΔΔⵠⲆⵠ: "img/night-skin50.png",
    ⲆⵠΔᐃⲆΔⵠ: "img/day-skin51.png",
    ᐃΔΔⵠΔᐃᐃ: "img/night-skin51.png",
    ⲆᐃⲆⵠⲆⲆⵠ: "img/day-skin52.png",
    ⵠᐃⲆⲆΔΔΔ: "img/night-skin52.png",
    ΔⲆⵠᐃᐃⵠΔ: "img/day-skin53.png",
    ⵠⲆΔⵠΔⲆⲆ: "img/night-skin53.png",
    ⲆΔⲆᐃⲆᐃⲆ: "img/day-skin54.png",
    ⵠⵠⲆᐃᐃⵠⵠ: "img/night-skin54.png",
    ΔⲆⲆⲆΔΔⵠ: "img/day-skin55.png",
    ᐃΔᐃΔΔⵠⵠ: "img/night-skin55.png",
    ⵠΔⵠᐃΔᐃⲆ: "img/day-skin56.png",
    ⵠⵠⵠⵠⲆⲆⲆ: "img/night-skin56.png",
    ᐃᐃⵠΔᐃᐃᐃ: "img/day-skin57.png",
    ΔⵠⵠⲆΔΔᐃ: "img/night-skin57.png",
    ⵠΔᐃΔΔⲆⵠ: "img/day-skin58.png",
    ⵠⵠᐃⲆⲆᐃⵠ: "img/night-skin58.png",
    ⲆΔⵠᐃⵠᐃⲆ: "img/day-skin59.png",
    ᐃⵠᐃⲆᐃⲆᐃ: "img/night-skin59.png",
    ⲆᐃⲆⵠΔⵠΔ: "img/day-skin60.png",
    ⲆΔΔⲆⵠⵠⵠ: "img/night-skin60.png",
    ᐃⲆⲆᐃᐃΔΔ: "img/day-skin61.png",
    ᐃⵠⲆⵠΔᐃⲆ: "img/night-skin61.png",
    ᐃⲆⲆΔΔᐃᐃ: "img/day-skin62.png",
    ΔΔΔⲆⲆⲆᐃ: "img/night-skin62.png",
    ᐃⲆⵠⵠⲆⲆΔ: "img/day-skin63.png",
    ⲆⲆᐃⵠΔΔⵠ: "img/night-skin63.png",
    ⲆΔⲆΔᐃΔⲆ: "img/day-skin64.png",
    ᐃΔΔΔᐃⵠΔ: "img/night-skin64.png",
    ΔΔⲆᐃΔᐃᐃ: "img/day-skin65.png",
    ΔΔΔⲆⵠΔⲆ: "img/night-skin65.png",
    ⵠⲆⵠⲆᐃⲆⲆ: "img/day-skin66.png",
    ΔᐃΔⲆⲆⲆⵠ: "img/night-skin66.png",
    ⲆⲆⵠⲆⵠⲆⲆ: "img/day-skin67.png",
    ⲆΔⵠⲆΔᐃⲆ: "img/night-skin67.png",
    ΔΔⵠⲆΔΔⵠ: "img/day-skin68.png",
    ΔⲆᐃᐃΔΔⵠ: "img/night-skin68.png",
    ⵠᐃᐃⲆᐃᐃⲆ: "img/day-skin69.png",
    ⲆΔⵠⲆⵠⵠΔ: "img/night-skin69.png",
    ᐃⵠᐃⲆΔΔΔ: "img/day-skin70.png",
    ⵠΔᐃⲆⲆⵠⲆ: "img/night-skin70.png",
    ᐃΔⵠΔᐃⵠΔ: "img/day-skin71.png",
    ᐃⲆᐃⵠⵠᐃΔ: "img/night-skin71.png",
    ⲆᐃᐃΔΔΔΔ: "img/day-skin72.png",
    ⵠⵠᐃᐃᐃΔᐃ: "img/night-skin72.png",
    ⲆᐃⲆΔΔᐃⲆ: "img/day-skin73.png",
    ᐃΔΔᐃᐃᐃⵠ: "img/night-skin73.png",
    ⵠⲆᐃⲆⲆⵠⵠ: "img/day-skin74.png",
    ΔⲆΔⵠⲆᐃⲆ: "img/night-skin74.png",
    ⵠΔⵠΔⲆΔⲆ: "img/day-skin75.png",
    ⲆᐃᐃΔΔΔᐃ: "img/night-skin75.png",
    ⵠΔᐃⲆΔⵠᐃ: "img/day-skin76.png",
    ΔᐃΔⵠⵠⲆⵠ: "img/night-skin76.png",
    ⲆᐃⲆΔⲆⲆᐃ: "img/day-skin77.png",
    ⵠⵠΔΔᐃΔⵠ: "img/night-skin77.png",
    ⲆⵠⲆΔⵠⲆⵠ: "img/day-skin78.png",
    ᐃᐃⲆⲆᐃᐃΔ: "img/night-skin78.png",
    ΔⵠΔᐃᐃᐃⲆ: "img/day-skin79.png",
    ⲆᐃᐃⲆⲆᐃⲆ: "img/night-skin79.png",
    ⵠⵠᐃᐃⲆⲆΔ: "img/day-skin80.png",
    ⲆΔᐃⲆⵠΔᐃ: "img/night-skin80.png",
    ΔᐃⲆΔⵠⵠⲆ: "img/day-skin81.png",
    ΔⵠⵠᐃᐃⲆᐃ: "img/night-skin81.png",
    ⲆᐃⲆᐃΔΔⲆ: "img/day-skin82.png",
    ⵠᐃᐃⲆⵠΔΔ: "img/night-skin82.png",
    ΔᐃΔΔⵠΔΔ: "img/day-skin83.png",
    ΔⵠΔᐃⵠᐃΔ: "img/night-skin83.png",
    ⵠᐃⵠⲆΔⵠⲆ: "img/day-skin84.png",
    ⵠΔΔᐃΔΔⲆ: "img/night-skin84.png",
    ΔⲆⵠⲆⵠⲆᐃ: "img/day-skin85.png",
    ⵠⲆⲆᐃⲆΔᐃ: "img/night-skin85.png",
    ᐃᐃⲆⵠⲆⵠⵠ: "img/day-skin86.png",
    ᐃⲆᐃᐃⲆⲆⲆ: "img/night-skin86.png",
    ⵠᐃⵠΔΔⵠⵠ: "img/day-skin87.png",
    ΔΔᐃᐃⵠᐃᐃ: "img/night-skin87.png",
    ⵠⵠᐃᐃⵠᐃᐃ: "img/day-skin88.png",
    ᐃⲆΔΔⵠⵠΔ: "img/night-skin88.png",
    ᐃΔᐃᐃⵠΔⵠ: "img/day-skin89.png",
    ⵠⵠᐃⲆᐃⲆⵠ: "img/night-skin89.png",
    ΔⲆⵠᐃΔⵠΔ: "img/day-skin90.png",
    ᐃΔᐃΔᐃⲆⲆ: "img/night-skin90.png",
    ᐃⲆΔⵠⲆⵠⵠ: "img/day-skin91.png",
    ⵠΔΔᐃⲆᐃⵠ: "img/night-skin91.png",
    ⲆⵠΔⲆⵠⵠⵠ: "img/day-skin92.png",
    ΔΔⵠⲆΔⵠᐃ: "img/night-skin92.png",
    ᐃᐃⵠⵠᐃⵠΔ: "img/day-skin93.png",
    ΔⲆⲆⵠⵠⵠⲆ: "img/night-skin93.png",
    ᐃᐃᐃᐃⲆⲆᐃ: "img/day-skin94.png",
    ΔΔⵠΔᐃⲆⵠ: "img/night-skin94.png",
    ⲆⵠΔⵠΔⲆΔ: "img/day-skin95.png",
    ⲆΔⵠⲆΔⵠᐃ: "img/night-skin95.png",
    ⲆⲆᐃᐃᐃΔΔ: "img/day-skin96.png",
    ⲆᐃΔⲆⲆⵠⲆ: "img/night-skin96.png",
    ⵠΔᐃΔᐃᐃⲆ: "img/day-skin97.png",
    ⵠⲆⵠⲆᐃΔᐃ: "img/night-skin97.png",
    ⲆᐃΔⵠⲆⲆᐃ: "img/day-skin98.png",
    ᐃⲆΔⲆⵠᐃⵠ: "img/night-skin98.png",
    ᐃᐃᐃⲆⲆΔᐃ: "img/day-skin99.png",
    ᐃⵠΔᐃΔⲆⲆ: "img/night-skin99.png",
    ⲆⲆⲆⵠᐃΔΔ: "img/day-skin100.png",
    ΔⲆⲆⲆⲆᐃⵠ: "img/night-skin100.png",
    ΔΔᐃᐃᐃᐃⲆ: "img/day-skin101.png",
    ᐃⵠᐃⲆΔΔⵠ: "img/night-skin101.png",
    ΔⵠᐃᐃΔΔⲆ: "img/day-skin102.png",
    ⲆⲆⲆᐃⲆΔᐃ: "img/night-skin102.png",
    ⲆⲆᐃΔΔⲆᐃ: "img/day-skin103.png",
    ⵠⵠⵠᐃᐃⲆⵠ: "img/night-skin103.png",
    ΔⲆΔᐃⲆⵠΔ: "img/day-skin104.png",
    ⵠⵠΔⲆⵠΔᐃ: "img/night-skin104.png",
    ᐃΔⲆⵠᐃⵠᐃ: "img/day-skin105.png",
    ⵠᐃⲆⲆⲆᐃΔ: "img/night-skin105.png",
    ⵠⲆⵠⵠᐃᐃⵠ: "img/day-skin106.png",
    ⵠᐃΔⵠΔⵠⲆ: "img/night-skin106.png",
    ⲆⵠΔΔⲆⵠⵠ: "img/day-skin107.png",
    ⵠΔΔⵠⵠⲆⵠ: "img/night-skin107.png",
    ⲆΔⵠΔⵠⵠⵠ: "img/day-skin108.png",
    ΔⵠⲆⲆⲆΔΔ: "img/night-skin108.png",
    ᐃⲆᐃΔⲆⵠΔ: "img/day-skin109.png",
    ⲆⵠⵠΔΔⲆΔ: "img/night-skin109.png",
    ᐃⲆΔⵠᐃᐃⲆ: "img/day-skin110.png",
    ΔᐃᐃⲆⲆᐃⵠ: "img/night-skin110.png",
    ᐃᐃᐃⵠⲆᐃⲆ: "img/day-skin111.png",
    ⲆⵠⵠΔⵠΔΔ: "img/night-skin111.png",
    ⵠⵠⵠᐃᐃᐃⲆ: "img/day-skin112.png",
    ⵠΔⵠᐃΔⲆⲆ: "img/night-skin112.png",
    ᐃΔᐃΔΔᐃΔⲆⵠ: "img/day-skin113.png",
    ᐃᐃΔΔΔΔⵠᐃΔ: "img/night-skin113.png",
    ΔⲆΔⲆⵠᐃⵠ: "img/day-skin114.png",
    ΔᐃΔΔⲆⲆⲆ: "img/night-skin114.png",
    ΔⲆⲆⵠⲆᐃᐃ: "img/day-skin115.png",
    ⲆΔⵠⲆᐃⵠⵠ: "img/night-skin115.png",
    ΔⵠᐃⲆᐃⵠᐃ: "img/day-skin116.png",
    ⵠᐃⲆⵠⲆᐃⲆ: "img/night-skin116.png",
    ⵠⲆᐃⵠΔᐃⵠ: "img/day-skin117.png",
    ᐃⲆᐃᐃᐃΔⲆ: "img/night-skin117.png",
    ⲆⵠⲆⲆⲆᐃⵠ: "img/day-skin118.png",
    ΔⵠΔΔΔᐃⲆ: "img/night-skin118.png",
    ΔⲆⵠⵠⲆᐃⵠ: "img/day-skin119.png",
    ΔΔᐃⵠΔⵠⵠ: "img/night-skin119.png",
    ᐃᐃⵠᐃΔⵠΔ: "img/day-skin120.png",
    ΔΔⲆⲆⵠΔΔ: "img/night-skin120.png",
    ⵠΔⵠⵠⵠΔⲆ: "img/day-skin121.png",
    ΔⵠⲆⲆⲆⵠⲆ: "img/night-skin121.png",
    ΔᐃⵠⵠΔᐃΔ: "img/day-skin122.png",
    ⲆⵠⵠⵠᐃⵠⲆ: "img/night-skin122.png",
    ⵠΔⲆⲆⲆΔⲆ: "img/day-skin123.png",
    ᐃⵠⵠⵠⵠⵠⵠ: "img/night-skin123.png",
    ΔΔⵠΔᐃᐃⵠ: "img/day-skin124.png",
    ᐃᐃⵠΔΔⵠᐃ: "img/night-skin124.png",
    ⲆⲆⲆⲆⵠⵠᐃ: "img/day-skin125.png",
    ᐃⵠΔⵠᐃΔᐃ: "img/night-skin125.png",
    ᐃΔᐃᐃⵠᐃΔ: "img/day-skin126.png",
    ⵠΔΔⵠᐃⲆΔ: "img/night-skin126.png",
    ⲆⵠⲆᐃᐃᐃⲆ: "img/day-skin127.png",
    ᐃⵠⲆΔᐃⵠΔ: "img/night-skin127.png",
    ᐃⵠᐃⲆⵠⵠⲆ: "img/day-skin128.png",
    ᐃᐃᐃΔⵠΔⲆ: "img/night-skin128.png",
    ΔΔᐃᐃΔⲆΔ: "img/day-skin129.png",
    ΔⵠᐃⵠⲆΔᐃ: "img/night-skin129.png",
    ⵠᐃⲆΔⲆᐃᐃ: "img/day-skin130-1.png",
    ΔΔᐃᐃⵠⵠᐃ: "img/night-skin130-1.png",
    ΔⵠΔΔᐃᐃⲆ: "img/day-skin131.png",
    ᐃᐃⵠⵠΔᐃⵠ: "img/night-skin131.png",
    ΔⲆⲆᐃᐃⲆⵠ: "img/day-skin132.png",
    ⲆⵠΔⵠᐃⲆⲆ: "img/night-skin132.png",
    ⲆⲆⲆⲆⲆᐃΔ: "img/day-skin133.png",
    ⵠⵠⵠΔΔⵠᐃ: "img/night-skin133.png",
    ᐃⵠΔⵠⵠΔΔ: "img/day-skin134.png",
    ⵠΔᐃⵠᐃⲆΔ: "img/night-skin134.png",
    ⵠⵠΔᐃⲆⵠⲆ: "img/day-skin135.png",
    ᐃΔΔᐃᐃΔⵠ: "img/night-skin135.png",
    ᐃⲆΔⵠᐃⵠΔ: "img/day-skin136.png",
    ⵠᐃⵠΔᐃⵠᐃ: "img/night-skin136.png",
    ᐃΔᐃⲆⵠⲆᐃ: "img/day-skin137.png",
    ΔᐃⲆⲆⵠⲆⵠ: "img/night-skin137.png",
    ᐃΔᐃᐃᐃΔⲆ: "img/day-skin138.png",
    ΔᐃⲆⵠᐃᐃⲆ: "img/night-skin138.png",
    ΔⲆΔΔⲆᐃᐃ: "img/day-skin139.png",
    ᐃΔΔⲆⲆᐃⵠ: "img/night-skin139.png",
    ΔΔⲆⵠⲆᐃΔ: "img/day-skin140.png",
    ⵠⵠⲆⲆⲆᐃⵠ: "img/night-skin140.png",
    ΔΔⲆⲆⲆⲆⵠ: "img/day-skin141.png",
    ⵠⲆᐃᐃΔᐃⵠ: "img/night-skin141.png",
    ⵠΔΔⵠΔⲆΔ: "img/day-skin142.png",
    ᐃΔⵠΔΔᐃⵠ: "img/night-skin142.png",
    ΔΔᐃΔΔⵠⲆ: "img/day-skin143.png",
    ⵠΔᐃΔⲆΔⲆ: "img/night-skin143.png",
    ⲆⵠΔΔⲆⵠⲆ: "img/day-skin144.png",
    ⲆⲆᐃⵠᐃⲆⲆ: "img/night-skin144.png",
    ᐃᐃⲆΔⲆᐃⵠ: "img/day-skin145.png",
    ⲆⵠᐃΔᐃⵠΔ: "img/night-skin145.png",
    ⵠⵠⲆⵠᐃᐃᐃ: "img/day-skin146.png",
    ΔⵠΔᐃᐃⲆΔ: "img/night-skin146.png",
    ⵠⲆⵠᐃΔᐃⲆ: "img/day-skin147.png",
    ⵠⵠⲆⲆⵠᐃⵠ: "img/night-skin147.png",
    ⵠⵠᐃΔⵠⲆⵠ: "img/day-skin148.png",
    ΔⲆⲆⵠᐃᐃᐃ: "img/night-skin148.png",
    ⲆⵠΔⲆΔⲆᐃ: "img/day-skin149.png",
    ⵠⵠΔⵠΔⲆΔ: "img/night-skin149.png",
    ΔᐃⲆⵠⲆⲆⵠ: "img/day-skin150.png",
    ⵠⲆⲆᐃⲆᐃΔ: "img/night-skin150.png",
    ⵠⵠⵠⲆᐃⵠᐃ: "img/day-skin151.png",
    ⲆᐃⵠΔⲆⲆⲆ: "img/night-skin151.png",
    ΔΔⲆⵠᐃΔⲆ: "img/day-skin152.png",
    ⲆΔⵠᐃᐃᐃⵠ: "img/night-skin152.png",
    ΔᐃⵠᐃΔⵠΔ: "img/day-skin153.png",
    ΔΔⵠⵠⵠΔⵠ: "img/night-skin153.png",
    ΔΔⲆⲆᐃᐃᐃ: "img/day-skin154.png",
    ⲆΔⵠΔΔⵠᐃ: "img/night-skin154.png",
    ΔΔⵠⵠᐃᐃⲆ: "img/day-skin155.png",
    ΔⲆΔᐃⲆᐃⵠ: "img/night-skin155.png",
    ΔΔⲆⲆⲆΔᐃ: "img/day-skin156.png",
    ΔᐃΔⵠⲆᐃⵠ: "img/night-skin156.png",
    ᐃⲆΔΔᐃⲆΔ: "img/day-skin157.png",
    ΔⵠⵠⲆᐃᐃΔ: "img/night-skin157.png",
    ⵠⲆⵠⲆᐃⵠⵠ: "img/day-skin158.png",
    ⲆⵠᐃᐃⵠᐃⲆ: "img/night-skin158.png",
    ᐃΔⲆⵠⵠΔᐃ: "img/day-skin159.png",
    ΔⵠⲆⵠΔⲆᐃ: "img/night-skin159.png",
    ᐃⵠⵠΔΔⲆⵠ: "img/day-skin160.png",
    ⵠⵠΔᐃⵠᐃᐃ: "img/night-skin160.png",
    ⲆⲆⵠᐃⲆⵠⲆ: "img/day-skin161.png",
    ⲆΔⵠΔⲆΔⵠ: "img/night-skin161.png",
    ⲆⲆⲆᐃⵠᐃΔ: "img/day-skin162.png",
    ⵠᐃΔⲆⵠⲆⲆ: "img/night-skin162.png",
    ⵠⵠΔⲆⲆⲆⲆ: "img/day-skin163.png",
    ⵠⵠⵠΔⲆⲆᐃ: "img/night-skin163.png",
    ⲆⲆΔΔᐃᐃΔ: "img/day-skin164.png",
    ⵠᐃⵠⲆΔⲆⵠ: "img/night-skin164.png",
    ᐃᐃΔⵠⲆⵠⵠ: "img/day-skin165.png",
    ΔᐃⲆⲆⲆⵠⲆ: "img/night-skin165.png",
    ⵠᐃΔⲆΔᐃΔ: "img/day-skin166.png",
    ⵠΔⵠⲆⲆⲆᐃ: "img/night-skin166.png",
    ⵠⵠⲆΔⲆᐃⵠ: "img/day-skin167.png",
    ᐃᐃᐃᐃⲆΔⵠ: "img/night-skin167.png",
    ᐃᐃⵠΔΔⲆΔ: "img/day-skin168.png",
    ⲆΔΔᐃⲆΔΔ: "img/night-skin168.png",
    ΔᐃᐃΔΔⲆᐃ: "img/day-skin169.png",
    ᐃⲆⵠⵠΔΔⵠ: "img/night-skin169.png",
    ⵠᐃⵠⲆΔⲆᐃ: "img/day-skin170.png",
    ᐃᐃᐃᐃⲆⵠᐃ: "img/night-skin170.png",
    ᐃΔΔΔᐃⲆΔ: "img/day-skin171.png",
    ⵠⲆⲆⲆΔⵠⲆ: "img/night-skin171.png",
    ⲆⲆΔⲆᐃΔΔ: "img/day-skin172.png",
    ⵠΔΔⵠⵠΔᐃ: "img/night-skin172.png",
    ⵠΔΔⲆΔᐃⵠ: "img/day-skin173.png",
    ᐃᐃⲆΔⲆᐃᐃ: "img/night-skin173.png",
    ᐃᐃΔᐃⲆᐃᐃ: "img/day-skin174.png",
    ᐃᐃᐃᐃΔⲆⵠ: "img/night-skin174.png",
    ᐃⲆⵠΔⲆᐃⲆ: "img/day-skin175.png",
    ⲆⵠⲆΔⵠᐃᐃ: "img/night-skin175.png",
    ᐃᐃΔᐃΔⵠⲆ: "img/day-skin176.png",
    ⲆΔᐃⵠᐃⲆᐃ: "img/night-skin176.png",
    ᐃΔⵠᐃΔⲆᐃ: "img/day-skin177.png",
    ⵠⲆⵠᐃᐃⵠᐃ: "img/night-skin177.png",
    ⵠⲆⵠⲆⲆᐃΔ: "img/day-skin178.png",
    ⲆΔΔⲆⵠⲆΔ: "img/night-skin178.png",
    ⵠⲆⲆΔⲆⵠⲆ: "img/day-skin179.png",
    ⵠᐃⵠΔⵠΔΔ: "img/night-skin179.png",
    ΔᐃᐃΔΔΔᐃ: "img/day-skin180.png",
    ⲆⲆⵠΔⲆᐃⲆ: "img/night-skin180.png",
    ΔΔᐃⵠᐃΔᐃ: "img/day-skin181.png",
    ᐃᐃΔⵠᐃⵠⵠ: "img/night-skin181.png",
    ᐃⲆⵠⲆᐃⲆᐃ: "img/day-skin182.png",
    ΔⲆⲆΔⵠⲆⲆ: "img/night-skin182.png",
    ᐃᐃΔⲆⲆⲆΔ: "img/day-skin183.png",
    ⲆΔⵠΔΔⵠⲆ: "img/night-skin183.png",
    ⲆΔⵠΔⵠᐃΔ: "img/day-skin184.png",
    ⲆⵠⵠⵠΔⵠⵠ: "img/night-skin184.png",
    ΔᐃⲆΔᐃⲆΔ: "img/day-skin185.png",
    ⵠᐃᐃⵠⲆⲆⵠ: "img/night-skin185.png",
    ⵠᐃᐃⲆΔⲆⵠ: "img/day-skin186.png",
    ᐃⲆΔⵠᐃᐃᐃ: "img/night-skin186.png",
    ⲆΔⲆΔⵠⵠⵠ: "img/day-skin187.png",
    ᐃⲆⲆⵠⲆⲆⲆ: "img/night-skin187.png",
    ΔΔᐃⵠΔᐃΔ: "img/day-skin188.png",
    ΔΔⲆᐃⵠⵠⲆ: "img/night-skin188.png",
    ᐃⵠⲆᐃⲆⵠᐃ: "img/day-skin189.png",
    ΔΔᐃⵠΔΔⲆ: "img/night-skin189.png",
    ⵠⲆΔⵠΔⵠΔ: "img/day-skin190.png",
    ⵠΔᐃᐃⵠⵠΔ: "img/night-skin190.png",
    ΔᐃᐃⲆⵠΔᐃ: "img/day-skin191.png",
    ΔⵠⵠΔⲆᐃⲆ: "img/night-skin191.png",
    ⵠⲆⲆⲆᐃⲆⵠ: "img/day-skin192.png",
    ⵠΔⲆⵠⵠΔΔ: "img/night-skin192.png",
    ᐃΔᐃᐃⲆΔΔ: "img/day-skin193.png",
    ⵠΔⵠΔⲆᐃⵠ: "img/night-skin193.png",
    ᐃΔᐃΔⵠⵠᐃ: "img/day-skin194.png",
    ᐃᐃᐃⲆⵠⵠⵠ: "img/night-skin194.png",
    ⲆᐃⲆⵠⵠΔⵠ: "img/day-skin195.png",
    ᐃᐃⲆᐃΔᐃΔ: "img/night-skin195.png",
    ⲆⵠⲆᐃΔΔⵠ: "img/day-skin196.png",
    ΔᐃⲆⲆⲆΔⵠ: "img/night-skin196.png",
    ᐃⲆⲆⲆᐃᐃΔ: "img/day-skin197.png",
    ΔⲆᐃⲆΔⵠⲆ: "img/night-skin197.png",
    ΔᐃⲆⲆⵠᐃⲆ: "img/day-skin198.png",
    ⲆⲆⲆᐃⵠⲆⵠ: "img/night-skin198.png",
    ⵠⵠⵠⲆⵠᐃⲆ: "img/day-skin199.png",
    ⲆⲆⵠᐃⵠΔⵠ: "img/night-skin199.png",
    ⲆⲆⵠᐃᐃΔⲆ: "img/day-skin200.png",
    ⲆⲆΔΔΔΔⲆ: "img/night-skin200.png",
    ΔΔⵠᐃΔⲆⵠ: "img/day-skin201.png",
    ΔⲆΔᐃⵠΔΔ: "img/night-skin201.png",
    ⵠᐃⵠΔⲆⲆᐃ: "img/day-skin202.png",
    ⵠᐃⲆⵠΔⵠᐃ: "img/night-skin202.png",
    ΔᐃᐃᐃⵠΔⲆ: "img/day-skin203.png",
    ⵠΔⵠᐃⵠⲆΔ: "img/night-skin203.png",
    ⲆᐃᐃⲆⲆⲆⲆ: "img/day-skin204.png",
    ⵠⵠΔⲆⲆᐃⲆ: "img/night-skin204.png",
    ⲆΔΔⵠᐃⲆᐃ: "img/day-skin205.png",
    ⵠΔᐃⲆᐃᐃΔ: "img/night-skin205.png",
    ⵠⲆⵠᐃⲆΔⵠ: "img/day-skin206.png",
    ᐃΔΔⲆᐃⲆⲆ: "img/night-skin206.png",
    ΔⲆⲆΔⵠΔΔ: "img/day-skin207.png",
    ᐃᐃΔᐃᐃⲆⲆ: "img/night-skin207.png",
    ΔΔᐃⵠⵠⵠΔ: "img/day-skin208.png",
    ⵠⲆⲆⲆⵠⵠⵠ: "img/night-skin208.png",
    ⵠᐃΔΔᐃⲆⲆ: "img/day-skin209.png",
    ⵠᐃⲆⵠⲆΔΔ: "img/night-skin209.png",
    ⲆⲆⲆⵠᐃⲆΔ: "img/day-skin210.png",
    ⵠΔⲆΔⵠⵠᐃ: "img/night-skin210.png",
    ⵠᐃΔⵠⲆⵠΔ: "img/day-skin211.png",
    ⵠΔΔⵠⵠⵠⲆ: "img/night-skin211.png",
    ΔⲆᐃᐃᐃⵠΔ: "img/day-skin212.png",
    ⵠΔⵠⵠᐃΔⵠ: "img/night-skin212.png",
    Δⵠⵠⵠⵠᐃⵠ: "img/day-skin213.png",
    ⵠᐃⵠⵠⲆᐃΔ: "img/night-skin213.png",
    ΔⵠᐃᐃᐃᐃⲆ: "img/day-skin214.png",
    ΔΔᐃⲆⲆⵠΔ: "img/night-skin214.png",
    ΔⵠⵠⵠΔⵠᐃ: "img/day-skin215.png",
    ⲆΔⲆᐃⵠᐃᐃ: "img/night-skin215.png",
    ⲆⲆⲆᐃᐃⲆⲆ: "img/day-skin216.png",
    ⲆⵠΔⲆΔΔⵠ: "img/night-skin216.png",
    ⵠΔΔⵠⵠⲆΔ: "img/day-skin217.png",
    ⵠΔⵠΔΔᐃⲆ: "img/night-skin217.png",
    ⵠⵠⵠⵠⵠⲆᐃ: "img/day-skin218.png",
    ⵠⵠⵠΔⲆⲆⵠ: "img/night-skin218.png",
    ᐃΔᐃᐃⲆᐃᐃ: "img/day-skin219.png",
    ⵠⲆΔΔΔΔⵠ: "img/night-skin219.png",
    ΔⵠⲆΔⲆᐃⲆ: "img/day-skin220.png",
    ⲆΔΔⲆⲆⲆᐃ: "img/night-skin220.png",
    ⵠᐃᐃⲆⲆᐃⵠ: "img/day-skin221.png",
    ΔᐃⵠΔⵠⲆⵠ: "img/night-skin221.png",
    ⲆΔⵠΔᐃΔⲆ: "img/day-skin222.png",
    ΔⲆⲆⲆⲆⵠⲆ: "img/night-skin222.png",
    ΔΔᐃᐃⵠⵠⵠ: "img/day-skin223.png",
    ΔⵠᐃᐃⲆᐃᐃ: "img/night-skin223.png",
    ⲆⲆⵠΔⲆⵠⵠ: "img/day-skin224.png",
    ⲆⵠΔᐃⲆⵠᐃ: "img/night-skin224.png",
    ⲆⲆΔΔᐃΔⲆ: "img/day-skin225.png",
    ΔΔⵠⵠΔΔᐃ: "img/night-skin225.png",
    ΔⲆᐃⵠΔⲆᐃ: "img/day-skin226.png",
    ΔᐃΔⵠΔᐃᐃ: "img/night-skin226.png",
    ᐃⲆᐃΔΔᐃⲆ: "img/day-skin227.png",
    ⵠⵠᐃᐃⵠⲆⲆ: "img/night-skin227.png",
    ⵠⲆᐃⵠⵠΔⲆ: "img/day-skin228.png",
    ᐃⵠⵠⵠΔᐃᐃ: "img/night-skin228.png",
    ΔⲆᐃΔΔⲆⵠ: "img/day-skin229.png",
    ᐃⲆⲆΔⵠⵠⲆ: "img/night-skin229.png",
    ΔⲆΔΔⵠΔⲆ: "img/day-skin230.png",
    ⲆⲆΔⵠⲆⵠΔ: "img/night-skin230.png",
    ᐃΔⵠⵠⵠⵠⵠ: "img/day-skin231.png",
    ΔΔⲆⵠⲆⵠᐃ: "img/night-skin231.png",
    ᐃᐃⵠΔⲆᐃᐃ: "img/day-skin232.png",
    ΔⲆᐃᐃⵠⵠᐃ: "img/night-skin232.png",
    ᐃⵠΔⵠⵠⵠᐃ: "img/day-skin233.png",
    ᐃⵠⲆⲆᐃⵠΔ: "img/night-skin233.png",
    ΔᐃΔΔᐃΔⵠ: "img/day-skin234.png",
    ⵠⵠᐃⵠᐃᐃΔ: "img/night-skin234.png",
    ΔⲆⵠⵠΔⵠΔ: "img/day-skin235.png",
    ⲆⲆⵠΔᐃⵠᐃ: "img/night-skin235.png",
    ⵠᐃΔⲆⵠⵠΔ: "img/day-skin236.png",
    ⲆⲆⵠⲆⲆΔⲆ: "img/night-skin236.png",
    ⲆⲆⵠᐃΔΔΔ: "img/day-skin237.png",
    ΔᐃⲆⵠⵠⲆⵠ: "img/night-skin237.png",
    ⲆⵠᐃᐃⵠⲆⵠ: "img/day-skin238.png",
    ⵠΔΔⵠᐃⵠᐃ: "img/night-skin238.png",
    ⵠᐃⲆⵠᐃΔⲆ: "img/day-skin239.png",
    ΔᐃᐃⵠΔⲆΔ: "img/night-skin239.png",
    ⲆⵠΔΔⲆᐃΔ: "img/day-skin240.png",
    ΔⲆⲆᐃⵠᐃᐃ: "img/night-skin240.png",
    ⲆΔᐃⵠⵠᐃΔ: "img/day-skin241.png",
    ⵠⵠⲆⲆᐃⲆᐃ: "img/night-skin241.png",
    ᐃⲆΔⲆΔⲆⵠ: "img/day-skin242.png",
    ᐃΔⲆΔⲆⵠⵠ: "img/night-skin242.png",
    ᐃⵠⵠᐃⲆΔⵠ: "img/day-skin243.png",
    ⵠⲆⲆΔⲆⲆⵠ: "img/night-skin243.png",
    ΔⵠⲆᐃΔⲆᐃ: "img/day-skin244.png",
    ⲆᐃⲆⵠΔΔᐃ: "img/night-skin244.png",
    ΔΔⲆΔΔⲆⲆ: "img/day-skin245.png",
    ᐃⵠⵠΔΔᐃᐃ: "img/night-skin245.png",
    ⵠΔⵠⲆᐃᐃⲆ: "img/day-skin246.png",
    ΔᐃⲆⲆΔⲆⲆ: "img/night-skin246.png",
    ⵠᐃⵠⵠⵠᐃᐃ: "img/day-hand-skin0.png",
    ⲆⵠⲆⵠⵠⵠΔ: "img/night-hand-skin0.png",
    ⲆᐃᐃⲆᐃΔⵠ: "img/day-hand-skin1.png",
    ᐃⵠΔΔΔᐃᐃ: "img/night-hand-skin1.png",
    ⵠⵠᐃᐃΔⲆⲆ: "img/day-hand-skin2.png",
    ᐃⲆⲆⲆⲆᐃΔ: "img/night-hand-skin2.png",
    ⵠⵠᐃΔⵠᐃᐃ: "img/day-hand-skin3.png",
    ⲆΔᐃᐃⲆΔⵠ: "img/night-hand-skin3.png",
    ⲆᐃⲆⵠᐃᐃᐃ: "img/day-hand-skin4.png",
    ᐃⲆΔⵠⵠⲆⲆ: "img/night-hand-skin4.png",
    ΔⵠⵠᐃΔⲆΔ: "img/day-hand-skin5.png",
    ⲆⵠⵠΔⲆᐃΔ: "img/night-hand-skin5.png",
    ΔΔᐃⵠⵠᐃᐃ: "img/day-hand-skin6.png",
    ⲆⵠⵠⲆᐃⵠⵠᐃΔ: "img/night-hand-skin6.png",
    ᐃⵠⲆᐃⲆᐃⵠ: "img/day-hand-skin6.png",
    ΔⲆΔᐃᐃᐃⵠ: "img/night-hand-skin6.png",
    ⵠⵠΔᐃⲆⲆⲆ: "img/day-hand-skin8.png",
    ᐃⵠⵠΔⲆΔΔ: "img/night-hand-skin8.png",
    ᐃⲆⵠᐃⵠΔⵠ: "img/day-hand-skin9.png",
    ⵠᐃᐃⵠᐃⵠᐃ: "img/night-hand-skin9.png",
    ᐃⲆᐃΔᐃⲆΔ: "img/day-hand-skin10.png",
    Δᐃᐃⵠⵠⵠᐃ: "img/night-hand-skin10.png",
    ΔΔΔⲆᐃⲆᐃ: "img/day-hand-skin11.png",
    ⲆᐃⵠΔⲆΔⵠ: "img/night-hand-skin11.png",
    ᐃΔⲆΔΔⵠᐃ: "img/day-hand-skin12.png",
    ΔᐃⲆⲆⵠᐃᐃ: "img/night-hand-skin12.png",
    ⲆᐃᐃⲆΔᐃᐃ: "img/day-hand-skin13.png",
    ᐃΔΔᐃΔⵠⲆ: "img/night-hand-skin13.png",
    ΔΔΔⵠᐃⲆΔ: "img/day-hand-skin14.png",
    ⲆᐃⵠⵠᐃⲆⵠ: "img/night-hand-skin14.png",
    ΔⵠⵠⲆⲆΔᐃ: "img/day-hand-skin15.png",
    ⵠⵠⵠⲆΔΔΔ: "img/night-hand-skin15.png",
    ᐃᐃⲆΔⵠⲆΔ: "img/day-hand-skin16.png",
    ⵠᐃΔΔⲆΔΔ: "img/night-hand-skin16.png",
    ⲆΔⲆᐃΔⵠⵠ: "img/day-hand-skin17.png",
    ⲆᐃΔⵠΔᐃⵠ: "img/night-hand-skin17.png",
    ⲆΔΔⲆⲆⲆⵠ: "img/day-hand-skin18.png",
    ⲆⵠΔⵠⲆΔᐃ: "img/night-hand-skin18.png",
    ⵠᐃⲆΔⵠⲆᐃ: "img/day-hand-skin19.png",
    ⵠᐃⲆⲆⲆⵠⵠ: "img/night-hand-skin19.png",
    ᐃⵠⵠⵠΔⲆᐃ: "img/day-hand-skin20.png",
    ⲆᐃΔΔⵠᐃⵠ: "img/night-hand-skin20.png",
    ᐃⵠᐃΔᐃᐃⲆ: "img/day-hand-skin21.png",
    ΔⵠᐃᐃⲆΔᐃ: "img/night-hand-skin21.png",
    ⵠΔᐃⲆⵠⵠᐃ: "img/day-hand-skin22.png",
    ⵠΔΔΔⵠΔⲆ: "img/night-hand-skin22.png",
    ⲆⵠᐃΔΔⵠᐃ: "img/day-hand-skin23.png",
    ⲆⵠⵠᐃⲆᐃⵠ: "img/night-hand-skin23.png",
    ᐃΔΔⲆⲆΔⵠ: "img/day-hand-skin24.png",
    ⵠⵠⲆⵠⲆΔᐃ: "img/night-hand-skin24.png",
    ⵠᐃΔⵠΔΔΔ: "img/day-hand-skin25.png",
    ⲆⲆᐃⲆᐃⲆᐃ: "img/night-hand-skin25.png",
    ΔᐃⵠⵠⲆᐃᐃ: "img/day-hand-skin26.png",
    ⵠⵠΔΔⲆᐃᐃ: "img/night-hand-skin26.png",
    ᐃⲆⲆᐃΔⵠᐃ: "img/day-hand-skin27.png",
    ᐃⲆⵠⵠᐃⲆᐃ: "img/night-hand-skin27.png",
    ⲆᐃⲆΔⵠᐃΔ: "img/day-hand-skin28.png",
    ⲆⵠⲆᐃⲆⲆⲆ: "img/night-hand-skin28.png",
    ⵠΔΔⵠⲆⲆⵠ: "img/day-hand-skin29.png",
    ΔΔⵠΔᐃⵠⵠ: "img/night-hand-skin29.png",
    ⵠᐃΔΔⲆⵠᐃ: "img/day-hand-skin30.png",
    ΔΔⵠᐃΔᐃΔ: "img/night-hand-skin30.png",
    ⲆⲆⲆΔᐃΔⲆ: "img/day-hand-skin31.png",
    ᐃⵠⲆᐃΔⲆⵠ: "img/night-hand-skin31.png",
    ᐃᐃⵠΔⵠᐃⲆ: "img/day-hand-skin32.png",
    ΔᐃⵠΔⲆᐃⲆ: "img/night-hand-skin32.png",
    ⲆⲆΔΔΔΔΔ: "img/day-hand-skin33.png",
    ⲆᐃⵠᐃΔΔΔ: "img/night-hand-skin33.png",
    ᐃⲆⲆᐃⲆᐃᐃ: "img/day-hand-skin34.png",
    ⲆⵠⲆⵠⵠⲆⲆ: "img/night-hand-skin34.png",
    ⵠΔⲆᐃⵠᐃᐃ: "img/day-hand-skin35.png",
    ΔⲆⵠⲆⵠΔⲆ: "img/night-hand-skin35.png",
    ⵠⲆⵠΔⲆⵠᐃ: "img/day-hand-skin36.png",
    ᐃᐃⲆΔⲆⵠΔ: "img/night-hand-skin36.png",
    ΔⵠΔᐃⲆᐃⲆ: "img/day-hand-skin37.png",
    ⲆⵠⲆᐃΔⵠΔ: "img/night-hand-skin37.png",
    ⵠⵠⲆΔⲆᐃᐃ: "img/day-hand-skin38.png",
    ⵠⲆⵠⲆΔᐃΔ: "img/night-hand-skin38.png",
    ⲆᐃΔⵠΔⵠᐃ: "img/day-hand-skin39.png",
    ⵠⲆΔⲆⵠⵠΔ: "img/night-hand-skin39.png",
    ⲆⲆⵠΔⵠΔⵠ: "img/day-hand-skin40.png",
    ΔⵠⲆⵠΔΔⲆ: "img/night-hand-skin40.png",
    ᐃⵠⲆⲆⲆⵠⵠ: "img/day-hand-skin41.png",
    ⲆᐃⲆᐃᐃᐃⲆ: "img/night-hand-skin41.png",
    ⵠᐃᐃⲆᐃⵠⲆ: "img/day-hand-skin42.png",
    ⲆΔΔΔⵠⲆⲆ: "img/night-hand-skin42.png",
    ΔΔᐃᐃᐃⵠᐃ: "img/day-hand-skin43.png",
    ⲆⲆᐃᐃᐃΔⲆ: "img/night-hand-skin43.png",
    ⵠⵠⵠΔᐃᐃⵠ: "img/day-hand-skin16.png",
    ᐃⵠⲆΔΔΔᐃ: "img/night-hand-skin16.png",
    ⲆⲆᐃⲆΔⵠΔ: "img/day-hand-skin45.png",
    ᐃΔΔᐃΔⵠⵠ: "img/night-hand-skin45.png",
    ⵠΔᐃΔᐃᐃΔ: "img/day-hand-skin46.png",
    ⲆΔⵠᐃᐃⵠⵠ: "img/night-hand-skin46.png",
    ᐃⵠᐃᐃⲆᐃⲆ: "img/day-hand-skin47.png",
    ΔΔⲆΔⲆⲆⲆ: "img/night-hand-skin47.png",
    ⲆⵠᐃⵠⲆΔⲆ: "img/day-hand-skin48.png",
    ⵠⵠΔⲆⲆᐃΔ: "img/night-hand-skin48.png",
    ᐃΔΔⵠⵠΔⵠ: "img/day-hand-skin49.png",
    ⲆⲆΔᐃⲆⵠΔ: "img/night-hand-skin49.png",
    ΔⵠⵠⲆⵠⵠⲆ: "img/day-hand-skin49.png",
    ⵠⲆⲆⲆᐃⵠΔ: "img/night-hand-skin49.png",
    ⵠΔⵠⲆᐃⵠⵠ: "img/day-hand-skin51.png",
    ΔᐃΔᐃⵠⵠⲆ: "img/night-hand-skin51.png",
    ⲆⵠⲆΔᐃⲆⲆ: "img/day-hand-skin52.png",
    ⲆᐃΔΔᐃⲆᐃ: "img/night-hand-skin52.png",
    ⵠⵠᐃⵠⵠᐃΔ: "img/day-hand-skin53.png",
    ⲆⵠᐃⲆΔⵠᐃ: "img/night-hand-skin53.png",
    ⲆⵠⵠᐃⵠⲆⵠ: "img/day-hand-skin53.png",
    ⵠΔⲆⵠᐃΔᐃ: "img/night-hand-skin53.png",
    ᐃⲆⵠⲆⲆⵠᐃ: "img/day-hand-skin55.png",
    ⲆᐃⲆⵠⲆⵠᐃ: "img/night-hand-skin55.png",
    ᐃⵠΔⵠⲆⵠⲆ: "img/day-hand-skin56.png",
    ᐃΔᐃΔⲆᐃᐃ: "img/night-hand-skin56.png",
    ⵠⵠΔⲆΔⵠΔ: "img/day-hand-skin57.png",
    ΔᐃⲆᐃⲆΔΔ: "img/night-hand-skin57.png",
    ⵠΔⲆᐃΔⵠᐃ: "img/day-hand-skin58.png",
    ⵠⲆⵠⵠⵠᐃΔ: "img/night-hand-skin58.png",
    ⵠΔᐃᐃⵠᐃⵠ: "img/day-hand-skin59.png",
    ⲆΔⲆⵠⵠⵠⲆ: "img/night-hand-skin59.png",
    ⲆⲆΔⵠᐃᐃⵠ: "img/day-hand-skin61.png",
    ΔΔⵠΔᐃᐃᐃ: "img/night-hand-skin61.png",
    ⵠⲆⲆᐃᐃΔⵠ: "img/day-hand-skin61.png",
    ⲆΔⲆᐃΔΔⵠ: "img/night-hand-skin61.png",
    ΔΔⲆΔⲆⵠⵠ: "img/day-hand-skin62.png",
    ΔⲆᐃᐃΔΔΔ: "img/night-hand-skin62.png",
    ⵠΔⲆΔΔⲆⵠ: "img/day-hand-skin63.png",
    ᐃᐃᐃᐃⲆᐃⲆ: "img/night-hand-skin63.png",
    ⵠΔᐃⲆⵠᐃⲆ: "img/day-hand-skin64.png",
    ᐃⲆⲆⲆᐃⵠⲆ: "img/night-hand-skin64.png",
    ⲆΔᐃⲆᐃⲆⲆ: "img/day-hand-skin65.png",
    ⲆⲆΔᐃⵠⵠᐃ: "img/night-hand-skin65.png",
    ⲆⲆΔᐃⵠᐃΔ: "img/day-hand-skin66.png",
    ⲆⲆᐃᐃⵠⲆⵠ: "img/night-hand-skin66.png",
    ΔⲆⲆᐃⲆⵠⵠ: "img/day-hand-skin67.png",
    ⲆᐃⲆΔⵠⵠΔ: "img/night-hand-skin67.png",
    ΔᐃⲆⵠⲆΔΔ: "img/day-hand-skin68.png",
    ΔᐃΔⵠⲆΔΔ: "img/night-hand-skin68.png",
    ⵠⵠΔᐃᐃⵠΔ: "img/day-hand-skin69.png",
    ⲆΔⵠⲆⵠⲆⲆ: "img/night-hand-skin69.png",
    ⵠΔⵠⵠⲆⲆⵠ: "img/day-hand-skin70.png",
    ⲆⲆᐃⵠⵠᐃⵠ: "img/night-hand-skin70.png",
    ΔᐃⵠᐃΔⲆΔ: "img/day-hand-skin71.png",
    ⲆᐃⵠⵠⵠΔᐃ: "img/night-hand-skin71.png",
    ΔⲆⲆⵠᐃⲆᐃ: "img/day-hand-skin72.png",
    ΔΔⲆⵠⲆⵠΔ: "img/night-hand-skin72.png",
    ΔⲆᐃᐃᐃΔᐃ: "img/day-hand-skin73.png",
    ᐃᐃᐃⵠᐃⲆⲆ: "img/night-hand-skin73.png",
    ⵠΔⲆΔΔⵠⲆ: "img/day-hand-skin74.png",
    ΔΔΔᐃᐃⲆⲆ: "img/night-hand-skin74.png",
    ᐃᐃⵠΔⵠⵠⵠ: "img/day-hand-skin75.png",
    ⵠΔⵠⲆᐃⵠᐃ: "img/night-hand-skin75.png",
    ᐃΔᐃΔⲆᐃⵠ: "img/day-hand-skin76.png",
    ΔⵠΔᐃⲆΔᐃ: "img/night-hand-skin76.png",
    ⵠⵠΔᐃΔΔΔ: "img/day-hand-skin77.png",
    ⲆⲆⲆⵠⲆⵠᐃ: "img/night-hand-skin77.png",
    ᐃⲆΔΔⵠᐃⲆ: "img/day-hand-skin78.png",
    ⲆᐃⵠΔⲆⵠⲆ: "img/night-hand-skin78.png",
    ⲆᐃⲆⵠⵠⲆΔ: "img/day-hand-skin79.png",
    ΔⲆⵠΔⲆⲆᐃ: "img/night-hand-skin79.png",
    ⵠᐃⲆᐃΔⵠᐃ: "img/day-hand-skin80.png",
    ᐃⲆᐃΔᐃⵠⵠ: "img/night-hand-skin80.png",
    ⵠΔⲆⵠⲆᐃᐃ: "img/day-hand-skin81.png",
    ΔⵠⲆᐃⵠᐃⲆ: "img/night-hand-skin81.png",
    ᐃᐃᐃⲆⲆᐃⲆ: "img/day-hand-skin82.png",
    ⲆΔᐃⲆᐃⲆΔ: "img/night-hand-skin82.png",
    ΔᐃⲆΔᐃΔⵠ: "img/day-hand-skin83.png",
    ΔᐃⲆⲆⵠΔΔ: "img/night-hand-skin83.png",
    ⲆⲆΔΔᐃⲆⵠ: "img/day-hand-skin84.png",
    ⵠΔᐃΔΔⲆΔ: "img/night-hand-skin84.png",
    ᐃᐃᐃᐃⲆΔᐃ: "img/day-hand-skin85.png",
    ⵠⲆⲆΔΔᐃⲆ: "img/night-hand-skin85.png",
    ᐃᐃⲆⲆΔᐃⵠ: "img/day-hand-skin86.png",
    ⲆᐃⵠΔⵠⵠᐃ: "img/night-hand-skin86.png",
    ᐃⵠᐃΔΔⵠΔ: "img/day-hand-skin87.png",
    ᐃⲆⵠⵠⵠⵠⲆ: "img/night-hand-skin87.png",
    ⵠΔᐃⵠⵠᐃΔ: "img/day-hand-skin88.png",
    ⵠⵠⲆΔⲆΔᐃ: "img/night-hand-skin88.png",
    ⵠΔⵠⲆⲆⵠⲆ: "img/day-hand-skin89.png",
    ⵠⲆΔΔᐃᐃⲆ: "img/night-hand-skin89.png",
    ⲆᐃΔᐃΔⲆⲆ: "img/day-hand-skin90.png",
    ᐃᐃΔᐃⵠΔⵠ: "img/night-hand-skin90.png",
    ΔΔᐃⲆⲆⲆΔ: "img/day-hand-skin91.png",
    ⲆΔᐃⵠⵠᐃᐃ: "img/night-hand-skin91.png",
    ⵠⲆⲆⲆⵠⲆⵠ: "img/day-hand-skin92.png",
    ΔⲆΔⵠᐃⲆⵠ: "img/night-hand-skin92.png",
    ΔΔΔⵠΔⵠΔ: "img/day-hand-skin93.png",
    ᐃⲆᐃΔⵠⲆⲆ: "img/night-hand-skin93.png",
    ⲆΔᐃⵠᐃⵠⵠ: "img/day-hand-skin94.png",
    ⵠΔⵠΔⲆᐃΔ: "img/night-hand-skin94.png",
    ᐃⵠⲆΔᐃᐃᐃ: "img/day-hand-skin95.png",
    ⲆⵠⵠⲆΔᐃΔ: "img/night-hand-skin95.png",
    ΔⵠⲆⵠΔⲆⲆ: "img/day-hand-skin96.png",
    ⵠⵠᐃΔⲆᐃⲆ: "img/night-hand-skin96.png",
    ⵠΔᐃⲆᐃⲆᐃ: "img/day-hand-skin97.png",
    ⲆⵠΔΔΔⵠⵠ: "img/night-hand-skin97.png",
    ⲆΔⲆΔΔⲆⵠ: "img/day-hand-skin98.png",
    ⵠⵠΔΔⲆⲆᐃ: "img/night-hand-skin98.png",
    ΔᐃΔᐃᐃⵠᐃ: "img/day-hand-skin99.png",
    ᐃΔΔⵠΔΔΔ: "img/night-hand-skin99.png",
    ΔΔΔΔΔΔΔ: "img/day-hand-skin100.png",
    ᐃᐃΔⲆΔⲆⲆ: "img/night-hand-skin100.png",
    ⲆⵠΔᐃΔⵠⵠ: "img/day-hand-skin101.png",
    ΔΔⵠΔⲆⵠⲆ: "img/night-hand-skin101.png",
    ᐃᐃᐃΔᐃᐃⵠ: "img/day-hand-skin102.png",
    ⵠⵠⵠⵠΔⲆᐃ: "img/night-hand-skin102.png",
    ⲆⲆⵠⲆⲆⲆΔ: "img/day-hand-skin103.png",
    ⲆⵠᐃⲆⲆᐃⲆ: "img/night-hand-skin103.png",
    ᐃⲆⲆᐃⵠᐃΔ: "img/day-hand-skin104.png",
    ΔᐃⵠⲆⵠΔᐃ: "img/night-hand-skin104.png",
    ΔΔⲆⵠᐃᐃᐃ: "img/day-hand-skin105.png",
    ΔⲆᐃⲆΔᐃΔ: "img/night-hand-skin105.png",
    ⲆΔΔⵠΔⲆᐃ: "img/day-hand-skin106.png",
    ⵠⵠⲆΔᐃᐃⲆ: "img/night-hand-skin106.png",
    ΔᐃⵠᐃᐃⵠΔ: "img/day-hand-skin107.png",
    ᐃᐃᐃⲆΔΔⵠ: "img/night-hand-skin107.png",
    ᐃᐃⲆᐃᐃⵠᐃ: "img/day-hand-skin108.png",
    ΔⵠⵠΔⲆⲆⵠ: "img/night-hand-skin108.png",
    ⵠΔⲆΔᐃⵠᐃ: "img/day-hand-skin109.png",
    ⵠᐃᐃⵠᐃΔΔ: "img/night-hand-skin109.png",
    ΔΔⲆΔᐃⵠⲆ: "img/day-hand-skin110.png",
    ⲆⲆⵠᐃᐃᐃΔ: "img/night-hand-skin110.png",
    ⵠᐃΔⲆⵠⵠᐃ: "img/day-hand-skin111.png",
    ⵠⲆⲆΔᐃΔΔ: "img/night-hand-skin111.png",
    ⲆΔⲆⵠⵠᐃᐃ: "img/day-hand-skin112.png",
    ᐃΔΔΔΔΔᐃ: "img/night-hand-skin112.png",
    ⲆⲆᐃᐃⲆⵠᐃΔⲆ: "img/day-hand-skin113.png",
    ᐃᐃⵠᐃᐃⲆⵠⵠΔ: "img/night-hand-skin113.png",
    ΔᐃⲆⲆⵠⵠⵠ: "img/day-hand-skin114.png",
    ΔⲆⲆᐃᐃᐃΔ: "img/night-hand-skin114.png",
    ⲆⵠᐃⵠᐃⵠΔ: "img/day-hand-skin115.png",
    ᐃᐃⵠⲆΔⵠⵠ: "img/night-hand-skin115.png",
    ⲆΔⲆᐃⲆⵠᐃ: "img/day-hand-skin116.png",
    ᐃⲆΔⵠⲆΔⵠ: "img/night-hand-skin116.png",
    ⵠⵠΔⲆⲆᐃᐃ: "img/day-hand-skin117.png",
    ᐃⵠΔⵠⵠΔⲆ: "img/night-hand-skin117.png",
    Δᐃᐃᐃⵠⵠᐃ: "img/day-hand-skin118.png",
    ᐃᐃΔⲆΔⲆΔ: "img/night-hand-skin118.png",
    ⲆⲆΔᐃΔΔⵠ: "img/day-hand-skin119.png",
    ᐃⵠⲆⲆⵠΔΔ: "img/night-hand-skin119.png",
    ᐃⲆⵠⵠⲆΔᐃ: "img/day-hand-skin120.png",
    ΔⲆⵠᐃΔⲆⵠ: "img/night-hand-skin120.png",
    ⵠⵠⲆⲆᐃΔᐃ: "img/day-hand-skin122.png",
    ᐃᐃⲆᐃΔΔⵠ: "img/night-hand-skin122.png",
    ⵠᐃᐃΔⵠᐃⲆ: "img/day-hand-skin122.png",
    ⵠᐃⲆᐃⵠΔⲆ: "img/night-hand-skin122.png",
    ᐃΔΔⲆᐃᐃᐃ: "img/day-hand-skin122.png",
    ᐃΔⵠᐃⲆΔⲆ: "img/night-hand-skin122.png",
    ᐃⵠⵠᐃᐃⲆⲆ: "img/day-hand-skin124.png",
    ⵠᐃᐃⲆⵠⵠⲆ: "img/night-hand-skin124.png",
    ΔᐃⵠΔΔⵠΔ: "img/day-hand-skin125.png",
    ⲆⵠΔΔΔᐃⵠ: "img/night-hand-skin125.png",
    ⲆΔⲆⲆΔⵠᐃ: "img/day-hand-skin126.png",
    ᐃⲆᐃΔⲆⵠⲆ: "img/night-hand-skin126.png",
    ᐃΔᐃⵠΔΔᐃ: "img/day-hand-skin127.png",
    ΔΔᐃΔᐃΔΔ: "img/night-hand-skin127.png",
    ΔⵠΔⵠⲆⵠΔ: "img/day-hand-skin128.png",
    ΔᐃᐃΔᐃⲆⵠ: "img/night-hand-skin128.png",
    ⲆⵠⲆⵠΔΔⲆ: "img/day-hand-skin129.png",
    ⵠΔⵠⵠⵠⵠᐃ: "img/night-hand-skin129.png",
    ΔᐃⲆⵠΔΔⲆ: "img/day-hand-skin130.png",
    ᐃᐃⵠⵠᐃⲆⵠ: "img/night-hand-skin130.png",
    ᐃΔᐃᐃⲆΔⵠ: "img/day-hand-skin131.png",
    ⵠⲆΔᐃᐃᐃᐃ: "img/night-hand-skin131.png",
    ᐃⵠΔᐃⵠⲆᐃ: "img/day-hand-skin130.png",
    ᐃᐃⲆΔᐃⲆⲆ: "img/night-hand-skin130.png",
    ΔⲆⲆᐃᐃⵠᐃ: "img/day-hand-skin133.png",
    ΔᐃⲆⲆⵠΔⵠ: "img/night-hand-skin133.png",
    ᐃᐃᐃᐃⲆᐃⵠ: "img/day-hand-skin134.png",
    ⲆⲆⵠⵠⲆⵠⲆ: "img/night-hand-skin134.png",
    ⲆΔᐃⵠΔⲆⲆ: "img/day-hand-skin135.png",
    ΔⵠΔᐃⵠⵠΔ: "img/night-hand-skin135.png",
    ⲆᐃⲆΔⵠᐃⵠ: "img/day-hand-skin136.png",
    ΔᐃⵠⵠΔΔᐃ: "img/night-hand-skin136.png",
    ΔⵠΔⲆⲆⲆⵠ: "img/day-hand-skin137.png",
    ⲆⲆⲆⵠⵠΔΔ: "img/night-hand-skin137.png",
    ⲆⲆⵠΔⵠᐃⵠ: "img/day-hand-skin138.png",
    ⵠⲆᐃΔⲆᐃⵠ: "img/night-hand-skin138.png",
    ⲆΔᐃⵠⵠⵠᐃ: "img/day-hand-skin139.png",
    ⵠΔΔᐃⲆᐃᐃ: "img/night-hand-skin139.png",
    ᐃᐃⵠⵠᐃΔⲆ: "img/day-hand-skin140.png",
    ᐃⵠⲆⲆΔⵠⲆ: "img/night-hand-skin140.png",
    ⲆᐃΔⲆⵠΔΔ: "img/day-hand-skin141.png",
    ⲆⲆΔΔⲆⵠᐃ: "img/night-hand-skin141.png",
    ΔΔΔΔⲆΔᐃ: "img/day-hand-skin142.png",
    ᐃᐃⵠᐃⲆⲆᐃ: "img/night-hand-skin142.png",
    ΔⵠⲆΔΔᐃⵠ: "img/day-hand-skin143.png",
    ⵠΔΔᐃⲆⲆⵠ: "img/night-hand-skin143.png",
    ᐃΔᐃⲆΔⲆΔ: "img/day-hand-skin144.png",
    ⵠΔⲆⲆΔᐃΔ: "img/night-hand-skin144.png",
    ⲆⲆⲆⲆᐃⵠⲆ: "img/day-hand-skin145.png",
    ⲆⲆΔⵠⲆⲆΔ: "img/night-hand-skin145.png",
    ᐃⵠⵠᐃΔⵠⲆ: "img/day-hand-skin146.png",
    ⲆᐃΔᐃⲆⵠⲆ: "img/night-hand-skin146.png",
    ⲆΔⲆΔⵠⲆᐃ: "img/day-hand-skin147.png",
    ⵠⲆᐃⵠⵠⵠⵠ: "img/night-hand-skin147.png",
    ΔᐃⲆⵠⵠⲆⲆ: "img/day-hand-skin148.png",
    ΔⲆⵠⵠⲆΔⲆ: "img/night-hand-skin148.png",
    ⵠⲆᐃⲆΔᐃⵠ: "img/day-hand-skin149.png",
    ΔΔⲆⵠΔΔⲆ: "img/night-hand-skin149.png",
    ΔᐃᐃᐃⲆⲆᐃ: "img/day-hand-skin150.png",
    ᐃΔⲆᐃΔⵠΔ: "img/night-hand-skin150.png",
    ΔⲆᐃⵠⲆΔⲆ: "img/day-hand-skin151.png",
    ⲆⲆⵠΔⵠⲆⵠ: "img/night-hand-skin151.png",
    ᐃⵠᐃⲆⵠΔΔ: "img/day-hand-skin152.png",
    ΔΔⲆⵠⵠᐃⲆ: "img/night-hand-skin152.png",
    ᐃΔⲆΔⲆⲆⵠ: "img/day-hand-skin153.png",
    ⲆⵠΔⵠᐃΔᐃ: "img/night-hand-skin153.png",
    ΔΔⵠⲆᐃΔΔ: "img/day-hand-skin154.png",
    ⲆⵠᐃⲆΔᐃⵠ: "img/night-hand-skin154.png",
    ⵠⵠΔΔΔⵠᐃ: "img/day-hand-skin155.png",
    ⲆΔᐃΔΔΔᐃ: "img/night-hand-skin155.png",
    ΔᐃⲆⵠⵠⵠⵠ: "img/day-hand-skin156.png",
    ΔⲆⲆⵠⲆΔᐃ: "img/night-hand-skin156.png",
    ΔⲆⲆⲆᐃⲆⵠ: "img/day-hand-skin157.png",
    ᐃⲆΔᐃⲆⲆΔ: "img/night-hand-skin157.png",
    ΔⵠⲆⵠᐃⲆⲆ: "img/day-hand-skin158.png",
    ⵠΔᐃⵠⵠⲆᐃ: "img/night-hand-skin158.png",
    ⲆΔⵠΔⲆΔᐃ: "img/day-hand-skin159.png",
    ⲆΔⲆᐃⵠΔⲆ: "img/night-hand-skin159.png",
    ⵠᐃΔᐃᐃⲆᐃ: "img/day-hand-skin160.png",
    ΔⵠⵠᐃΔᐃⲆ: "img/night-hand-skin160.png",
    ⲆⲆΔΔᐃⵠΔ: "img/day-hand-skin161.png",
    ⲆⲆΔⲆΔΔᐃ: "img/night-hand-skin161.png",
    ΔⵠⲆΔΔΔⵠ: "img/day-hand-skin162.png",
    ⵠΔⲆⵠᐃⵠⲆ: "img/night-hand-skin162.png",
    ⵠⲆⲆᐃᐃⲆⵠ: "img/day-hand-skin163.png",
    ⵠⵠⲆΔⵠⲆΔ: "img/night-hand-skin163.png",
    ⵠΔΔⵠⲆΔⵠ: "img/day-hand-skin164.png",
    Δᐃᐃⵠᐃⵠⵠ: "img/night-hand-skin164.png",
    ⲆⵠⵠⵠΔΔⲆ: "img/day-hand-skin165.png",
    ᐃⵠⵠΔⲆΔⲆ: "img/night-hand-skin165.png",
    ⲆΔⲆᐃⵠⵠⵠ: "img/day-hand-skin166.png",
    ⵠΔᐃΔᐃⲆΔ: "img/night-hand-skin166.png",
    ᐃΔᐃⲆⲆᐃⵠ: "img/day-hand-skin167.png",
    ᐃᐃΔⲆΔⲆⵠ: "img/night-hand-skin167.png",
    ⲆΔᐃΔⵠⵠⵠ: "img/day-hand-skin168.png",
    ᐃᐃΔⵠᐃⵠⲆ: "img/night-hand-skin168.png",
    ⲆⲆⵠᐃⵠᐃΔ: "img/day-hand-skin169.png",
    ΔΔⲆⲆᐃⵠⵠ: "img/night-hand-skin169.png",
    ⵠⵠΔᐃΔΔᐃ: "img/day-hand-skin170.png",
    ⵠⵠⵠᐃⵠΔⲆ: "img/night-hand-skin170.png",
    ΔᐃΔΔⲆΔΔ: "img/day-hand-skin171.png",
    ⲆⲆⲆΔΔΔⵠ: "img/night-hand-skin171.png",
    ⵠⲆⵠᐃⵠᐃⲆ: "img/day-hand-skin172.png",
    ᐃΔⵠᐃᐃᐃⲆ: "img/night-hand-skin172.png",
    ΔⵠⵠΔΔⵠⵠ: "img/day-hand-skin173.png",
    ΔⲆⲆΔⲆᐃΔ: "img/night-hand-skin173.png",
    ΔⲆΔᐃᐃᐃΔ: "img/day-hand-skin174.png",
    ᐃⲆΔᐃᐃΔᐃ: "img/night-hand-skin174.png",
    ᐃΔⲆΔΔᐃⵠ: "img/day-hand-skin175.png",
    ⲆⵠⲆⲆΔⲆᐃ: "img/night-hand-skin175.png",
    ⲆⵠⵠΔⵠⲆᐃ: "img/day-hand-skin176.png",
    ᐃΔⵠⵠᐃⵠΔ: "img/night-hand-skin176.png",
    ⵠΔⲆⵠΔᐃΔ: "img/day-hand-skin177.png",
    ΔΔⲆⲆⵠᐃⲆ: "img/night-hand-skin177.png",
    ΔᐃΔⲆΔΔΔ: "img/day-hand-skin178.png",
    ᐃᐃᐃⲆⵠᐃⵠ: "img/night-hand-skin178.png",
    ⵠᐃⲆⵠΔᐃΔ: "img/day-hand-skin179.png",
    ⵠᐃⲆΔⵠⲆΔ: "img/night-hand-skin179.png",
    ⵠⵠⲆⵠΔᐃⵠ: "img/day-hand-skin180.png",
    ⵠⲆⲆⵠΔⲆΔ: "img/night-hand-skin180.png",
    ⵠⲆΔΔΔᐃᐃ: "img/day-hand-skin181.png",
    ⲆᐃⵠⲆⲆⲆⲆ: "img/night-hand-skin181.png",
    ⵠⲆΔⲆᐃᐃᐃ: "img/day-hand-skin182.png",
    ΔⲆᐃⵠⵠΔⲆ: "img/night-hand-skin182.png",
    ⵠⲆⵠⵠⲆⲆᐃ: "img/day-hand-skin183.png",
    ᐃΔΔΔⵠᐃⲆ: "img/night-hand-skin183.png",
    ⲆΔⲆⲆᐃⵠᐃ: "img/day-hand-skin184.png",
    ⲆⲆΔⵠⵠⲆⵠ: "img/night-hand-skin184.png",
    ΔᐃᐃⲆᐃᐃⲆ: "img/day-hand-skin185.png",
    ᐃⲆᐃⵠΔᐃᐃ: "img/night-hand-skin185.png",
    ᐃΔΔⵠΔⵠΔ: "img/day-hand-skin186.png",
    ⲆΔΔⲆΔⵠΔ: "img/night-hand-skin186.png",
    ΔⲆⲆᐃᐃⲆⲆ: "img/day-hand-skin187.png",
    ΔᐃΔⲆᐃΔΔ: "img/night-hand-skin187.png",
    ⲆΔᐃΔᐃΔⵠ: "img/day-hand-skin188.png",
    ΔΔⵠΔᐃⲆᐃ: "img/night-hand-skin188.png",
    ⵠⵠΔΔΔΔΔ: "img/day-hand-skin189.png",
    ⲆⲆⲆΔΔΔⲆ: "img/night-hand-skin189.png",
    ⵠΔⲆⲆᐃⲆᐃ: "img/day-hand-skin190.png",
    ⲆᐃΔΔⲆᐃⵠ: "img/night-hand-skin190.png",
    ⲆⲆⲆΔᐃΔⵠ: "img/day-hand-skin191.png",
    ᐃⲆᐃΔⵠᐃⵠ: "img/night-hand-skin191.png",
    ᐃΔⵠΔⲆⵠⵠ: "img/day-hand-skin192.png",
    ᐃΔΔᐃⲆᐃⵠ: "img/night-hand-skin192.png",
    ᐃⲆⲆᐃΔⵠⵠ: "img/day-hand-skin193.png",
    ᐃⵠⵠΔⵠΔΔ: "img/night-hand-skin193.png",
    ᐃΔⲆⲆⲆⲆᐃ: "img/day-hand-skin194.png",
    ⲆⵠᐃⵠⲆⲆΔ: "img/night-hand-skin194.png",
    ⵠⵠⲆⵠⵠΔᐃ: "img/day-hand-skin195.png",
    ⲆΔᐃⵠⲆⵠⵠ: "img/night-hand-skin195.png",
    ⲆⲆⲆᐃⲆⵠᐃ: "img/day-hand-skin196.png",
    ⵠΔᐃᐃᐃⵠΔ: "img/night-hand-skin196.png",
    ΔᐃᐃΔⵠΔⵠ: "img/day-hand-skin197.png",
    ⲆⵠᐃᐃⲆⲆⵠ: "img/night-hand-skin197.png",
    ᐃΔⲆᐃⵠΔⲆ: "img/day-hand-skin198.png",
    ᐃΔⲆⲆⲆⲆⲆ: "img/night-hand-skin198.png",
    ⵠⵠΔⲆⵠΔΔ: "img/day-hand-skin199.png",
    ᐃΔⵠΔⵠᐃⲆ: "img/night-hand-skin199.png",
    ΔᐃⵠⲆΔⵠΔ: "img/day-hand-skin200.png",
    ᐃⵠᐃⵠⵠΔΔ: "img/night-hand-skin200.png",
    ᐃᐃΔⲆᐃᐃᐃ: "img/day-hand-skin201.png",
    ⵠᐃΔΔΔᐃⵠ: "img/night-hand-skin201.png",
    ⲆⲆΔᐃᐃᐃᐃ: "img/day-hand-skin202.png",
    ᐃΔᐃΔⵠⵠⲆ: "img/night-hand-skin202.png",
    ᐃⵠΔⵠᐃⵠᐃ: "img/day-hand-skin203.png",
    ⵠᐃᐃᐃᐃⲆⲆ: "img/night-hand-skin203.png",
    ᐃΔⵠⵠᐃΔⲆ: "img/day-hand-skin204.png",
    ᐃΔᐃⵠΔⵠΔ: "img/night-hand-skin204.png",
    ᐃⲆΔΔᐃⵠⵠ: "img/day-hand-skin205.png",
    ᐃⵠΔᐃᐃⲆⵠ: "img/night-hand-skin205.png",
    ⵠᐃⵠΔΔᐃΔ: "img/day-hand-skin206.png",
    ⵠⲆᐃⲆⵠΔⵠ: "img/night-hand-skin206.png",
    ΔⵠⵠⲆⲆⵠᐃ: "img/day-hand-skin207.png",
    ⵠⲆⵠΔⲆⵠⵠ: "img/night-hand-skin207.png",
    ⲆΔⵠⲆᐃΔⲆ: "img/day-hand-skin208.png",
    ⵠΔΔⵠᐃᐃᐃ: "img/night-hand-skin208.png",
    ΔⲆᐃᐃᐃᐃΔ: "img/day-hand-skin209.png",
    ⵠⵠⲆΔᐃᐃᐃ: "img/night-hand-skin209.png",
    ⵠᐃᐃⵠⲆᐃⵠ: "img/day-hand-skin210.png",
    ΔᐃⵠᐃⲆΔΔ: "img/night-hand-skin210.png",
    ΔⵠⵠΔΔΔⵠ: "img/day-hand-skin211.png",
    ⵠΔΔΔⵠⲆⵠ: "img/night-hand-skin211.png",
    ⲆᐃΔᐃⲆⲆᐃ: "img/day-hand-skin212.png",
    ⵠⵠⲆᐃᐃᐃⲆ: "img/night-hand-skin212.png",
    ⲆⵠΔᐃᐃⵠⵠ: "img/day-hand-skin213.png",
    ΔⵠⵠⵠⲆⵠΔ: "img/night-hand-skin213.png",
    ΔᐃᐃⲆⵠΔⵠ: "img/day-hand-skin214.png",
    ᐃᐃⵠᐃᐃⵠΔ: "img/night-hand-skin214.png",
    ⵠⲆΔⲆⲆⲆᐃ: "img/day-hand-skin215.png",
    ΔΔΔᐃⵠⵠᐃ: "img/night-hand-skin215.png",
    ΔⲆᐃᐃΔΔᐃ: "img/day-hand-skin216.png",
    ⲆⵠᐃΔᐃⵠᐃ: "img/night-hand-skin216.png",
    ⵠⲆⵠΔΔᐃⲆ: "img/day-hand-skin217.png",
    ⵠᐃΔⲆᐃⲆⲆ: "img/night-hand-skin217.png",
    ΔΔᐃⲆⵠⲆⵠ: "img/day-hand-skin218.png",
    ⲆᐃᐃⲆⵠΔΔ: "img/night-hand-skin218.png",
    ΔⵠΔⵠⵠⲆᐃ: "img/day-hand-skin219.png",
    ᐃⲆᐃΔⲆⵠᐃ: "img/night-hand-skin219.png",
    ΔⲆΔⲆΔⵠⲆ: "img/day-hand-skin220.png",
    ⲆⲆⵠⵠΔⵠⵠ: "img/night-hand-skin220.png",
    ⲆᐃΔⵠⵠⲆⲆ: "img/day-hand-skin221.png",
    ⵠᐃΔⲆⲆⵠᐃ: "img/night-hand-skin221.png",
    ᐃⲆΔᐃᐃⲆⵠ: "img/day-hand-skin222.png",
    ΔⲆⵠᐃΔⲆⲆ: "img/night-hand-skin222.png",
    ᐃⵠΔⲆⲆⵠΔ: "img/day-hand-skin223.png",
    ᐃⲆᐃⵠⵠᐃᐃ: "img/night-hand-skin223.png",
    ᐃⲆⵠⵠⲆΔΔ: "img/day-hand-skin224.png",
    ᐃΔᐃⲆΔⵠᐃ: "img/night-hand-skin224.png",
    ᐃᐃⵠⵠΔⲆⵠ: "img/day-hand-skin225.png",
    ᐃΔⲆΔⲆΔᐃ: "img/night-hand-skin225.png",
    ⵠⲆΔⲆΔⲆΔ: "img/day-hand-skin226.png",
    ΔⵠᐃⵠⵠⵠⲆ: "img/night-hand-skin226.png",
    ⵠΔᐃΔΔⵠⵠ: "img/day-hand-skin227.png",
    ᐃΔΔⲆᐃⲆΔ: "img/night-hand-skin227.png",
    ⲆΔΔⲆΔΔᐃ: "img/day-hand-skin228.png",
    ᐃⵠΔⵠⵠᐃᐃ: "img/night-hand-skin228.png",
    ⲆᐃⲆᐃⵠⵠᐃ: "img/day-hand-skin229.png",
    ᐃⲆΔⵠΔⵠⵠ: "img/night-hand-skin229.png",
    ᐃⲆΔⲆⵠⵠΔ: "img/day-hand-skin230.png",
    ᐃΔⲆΔⵠΔᐃ: "img/night-hand-skin230.png",
    ᐃΔΔᐃᐃᐃⲆ: "img/day-hand-skin231.png",
    ⲆⵠⲆΔⲆᐃΔ: "img/night-hand-skin231.png",
    ⲆⵠⵠⵠᐃⲆⵠ: "img/day-hand-skin232.png",
    ᐃΔᐃᐃⲆⲆⲆ: "img/night-hand-skin232.png",
    ⲆⲆΔᐃⲆᐃⲆ: "img/day-hand-skin233.png",
    ΔⵠΔⵠΔⲆΔ: "img/night-hand-skin233.png",
    ⲆΔⲆⲆΔⲆⵠ: "img/day-hand-skin234.png",
    ᐃᐃΔᐃⲆⲆⵠ: "img/night-hand-skin234.png",
    ⵠⲆⲆⵠⲆᐃⵠ: "img/day-hand-skin235.png",
    ᐃΔⵠΔᐃⲆΔ: "img/night-hand-skin235.png",
    ᐃΔᐃⵠΔΔⵠ: "img/day-hand-skin236.png",
    ΔⲆⲆᐃⵠⵠⲆ: "img/night-hand-skin236.png",
    ᐃΔᐃΔΔⲆⵠ: "img/day-hand-skin237.png",
    ⲆᐃΔⵠΔⲆᐃ: "img/night-hand-skin237.png",
    ⵠᐃⲆΔᐃⲆΔ: "img/day-hand-skin238.png",
    ΔΔΔΔⲆⵠⵠ: "img/night-hand-skin238.png",
    ⵠⵠᐃⵠΔⵠⵠ: "img/day-hand-skin239.png",
    ⵠⵠΔⵠᐃᐃⲆ: "img/night-hand-skin239.png",
    ΔΔⲆᐃᐃᐃᐃ: "img/day-hand-skin240.png",
    ᐃᐃΔᐃⵠΔⲆ: "img/night-hand-skin240.png",
    ᐃⵠΔⲆΔΔΔ: "img/day-hand-skin241.png",
    ⲆⵠΔⵠΔⵠᐃ: "img/night-hand-skin241.png",
    ⲆⵠᐃΔⵠⵠᐃ: "img/day-hand-skin242.png",
    ⵠⲆΔΔⵠⵠⲆ: "img/night-hand-skin242.png",
    ⵠⵠⲆⵠΔⲆⵠ: "img/day-hand-skin243.png",
    ᐃⲆΔΔⲆⵠΔ: "img/night-hand-skin243.png",
    ΔΔᐃΔᐃⲆⲆ: "img/day-hand-skin244.png",
    ΔⵠᐃΔⲆⲆᐃ: "img/night-hand-skin244.png",
    ⵠΔΔΔⲆⲆⵠ: "img/day-hand-skin245.png",
    ⲆᐃᐃΔΔᐃⲆ: "img/night-hand-skin245.png",
    ⲆⲆΔᐃⲆΔⵠ: "img/day-hand-skin246.png",
    ΔᐃᐃΔᐃΔⲆ: "img/night-hand-skin246.png",
    ⵠⲆΔⵠⲆⵠⵠ: "img/day-bag-star0.png",
    ⲆᐃⲆⲆᐃⵠΔ: "img/night-bag-star0.png",
    ᐃⵠⵠᐃⵠΔΔ: "img/day-bag0.png",
    ΔᐃⵠⲆᐃⵠΔ: "img/night-bag0.png",
    ⵠᐃⵠᐃΔᐃΔ: "img/day-bag1.png",
    ᐃΔⲆⲆⲆⵠᐃ: "img/night-bag1.png",
    ⵠᐃⲆᐃⵠⲆⲆ: "img/day-bag2.png",
    ⵠⵠⵠᐃᐃⵠⵠ: "img/night-bag2.png",
    ΔΔⲆΔⲆⲆΔ: "img/day-bag3.png",
    ᐃΔⵠⲆⲆⲆⲆ: "img/night-bag3.png",
    ⲆⲆⲆΔᐃᐃΔ: "img/day-bag4.png",
    ⲆⲆⵠⲆⵠⲆΔ: "img/night-bag4.png",
    ⲆΔΔⵠᐃⲆⲆ: "img/day-bag5.png",
    ⲆⵠᐃΔⵠΔⵠ: "img/night-bag5.png",
    ΔᐃⲆᐃⵠⲆⲆ: "img/day-bag6.png",
    ᐃᐃᐃᐃⲆⲆⲆ: "img/night-bag6.png",
    ⵠᐃΔⲆᐃᐃⲆ: "img/day-bag7.png",
    ᐃᐃᐃⲆⵠⵠᐃ: "img/night-bag7.png",
    ⵠⵠᐃⵠΔᐃᐃ: "img/day-bag8.png",
    ⲆᐃΔᐃᐃⲆᐃ: "img/night-bag8.png",
    ΔⲆᐃᐃᐃⲆΔ: "img/day-bag9.png",
    ΔⲆⲆⲆⲆⵠᐃ: "img/night-bag9.png",
    ᐃᐃΔᐃΔΔᐃ: "img/day-bag10.png",
    ⲆⲆᐃⲆⵠⵠⲆ: "img/night-bag10.png",
    ΔⵠᐃΔⲆᐃⲆ: "img/day-bag11.png",
    ᐃΔⲆᐃⲆⵠⵠ: "img/night-bag11.png",
    ⲆΔΔⲆᐃΔᐃ: "img/day-bag13.png",
    ΔⲆⲆⵠⵠⵠⵠ: "img/night-bag13.png",
    ΔᐃⲆΔⵠⵠΔ: "img/day-bag14.png",
    ⵠΔⵠⵠΔⵠⲆ: "img/night-bag14.png",
    ⵠΔΔⲆⵠⲆⵠ: "img/day-bag16.png",
    ⲆΔⲆΔⲆᐃⲆ: "img/night-bag16.png",
    ᐃᐃⵠᐃΔᐃᐃ: "img/day-bag17.png",
    ᐃⵠᐃΔᐃⲆᐃ: "img/night-bag17.png",
    ⵠᐃΔⲆⵠΔⵠ: "img/day-bag18.png",
    ⵠⵠⲆⵠΔΔᐃ: "img/night-bag18.png",
    ⲆᐃΔΔΔⲆⲆ: "img/day-bag19.png",
    ⵠⵠⵠⵠⵠⵠᐃ: "img/night-bag19.png",
    ᐃᐃΔΔⵠⲆΔ: "img/day-bag20.png",
    ⲆⲆᐃᐃⲆⲆΔ: "img/night-bag20.png",
    ΔⲆⲆⵠⲆⵠᐃ: "img/day-bag21.png",
    ⲆⵠⵠⲆⵠⵠⵠ: "img/night-bag21.png",
    ᐃΔⵠΔⵠⵠᐃ: "img/day-bag22.png",
    ΔΔⵠΔⵠΔⵠ: "img/night-bag22.png",
    ⲆᐃΔΔᐃⵠⵠ: "img/day-bag23.png",
    ᐃᐃΔᐃⵠᐃᐃ: "img/night-bag23.png",
    ⲆⲆᐃⵠᐃⲆᐃ: "img/day-bag24.png",
    ⲆᐃᐃⲆΔⲆᐃ: "img/night-bag24.png",
    ⲆⲆⲆᐃΔΔⲆ: "img/day-bag25.png",
    ⲆⲆⲆⵠⵠⲆΔ: "img/night-bag25.png",
    ᐃⵠΔⲆΔΔⲆ: "img/day-bag26.png",
    ΔᐃⲆⲆΔΔⵠ: "img/night-bag26.png",
    ΔΔΔΔⵠᐃΔ: "img/day-bag27.png",
    ⲆᐃⲆⲆΔⲆᐃ: "img/night-bag27.png",
    ⵠᐃⲆᐃⲆᐃΔ: "img/day-bag28.png",
    ᐃⵠΔᐃⲆⲆⲆ: "img/night-bag28.png",
    ᐃᐃⵠⲆᐃΔΔ: "img/day-bag29.png",
    ᐃⲆΔⲆⲆΔⲆ: "img/night-bag29.png",
    ᐃⲆᐃΔΔΔⲆ: "img/day-bag30.png",
    ⲆⲆⲆᐃⵠⵠⲆ: "img/night-bag30.png",
    ᐃΔⵠΔⲆᐃᐃ: "img/day-bag31.png",
    ΔⲆⲆⲆΔΔΔ: "img/night-bag31.png",
    ⵠᐃⲆΔⲆᐃⵠ: "img/day-bag32.png",
    ⲆᐃⲆΔᐃⲆⲆ: "img/night-bag32.png",
    ΔⵠΔⵠⲆᐃⲆ: "img/day-bag33.png",
    ⲆⲆᐃⲆΔⲆΔ: "img/night-bag33.png",
    ΔᐃᐃΔᐃⵠⲆ: "img/day-bag34.png",
    ⲆᐃΔᐃⵠΔΔ: "img/night-bag34.png",
    ΔⵠⲆᐃⲆᐃΔ: "img/day-bag35.png",
    ⲆⲆΔᐃⲆΔⲆ: "img/night-bag35.png",
    ⵠᐃΔⲆᐃⲆⵠ: "img/day-bag36.png",
    ᐃΔⲆΔⲆᐃⵠ: "img/night-bag36.png",
    ⲆⵠᐃΔΔᐃΔ: "img/day-bag37.png",
    ⲆΔⲆᐃΔᐃᐃ: "img/night-bag37.png",
    ΔᐃⵠⲆⵠⲆⵠ: "img/day-bag38.png",
    ᐃⲆΔᐃΔⵠΔ: "img/night-bag38.png",
    ⵠⵠΔⵠⲆⵠᐃ: "img/day-bag39.png",
    ᐃΔᐃⵠⵠΔⲆ: "img/night-bag39.png",
    ⲆⵠⲆᐃⵠⵠΔ: "img/day-bag40.png",
    ΔⵠΔⲆᐃᐃⵠ: "img/night-bag40.png",
    ⵠΔⵠⵠᐃᐃⲆ: "img/day-bag41.png",
    ⲆⵠᐃⵠᐃᐃΔ: "img/night-bag41.png",
    ΔᐃⲆⲆⲆᐃΔ: "img/day-bag42.png",
    ⵠⵠᐃⵠⲆⵠᐃ: "img/night-bag42.png",
    ᐃᐃⲆᐃᐃᐃⲆ: "img/day-bag43.png",
    ΔᐃⵠΔⵠᐃⲆ: "img/night-bag43.png",
    ΔᐃᐃⵠⲆᐃⵠ: "img/day-bag44.png",
    ᐃᐃⲆⵠⵠᐃΔ: "img/night-bag44.png",
    ᐃΔⵠⵠΔΔΔ: "img/day-bag45.png",
    ᐃΔΔΔΔⲆΔ: "img/night-bag45.png",
    ⵠⲆⵠᐃᐃᐃⲆ: "img/day-bag46.png",
    ᐃⵠᐃΔⵠᐃᐃ: "img/night-bag46.png",
    ⲆⲆΔΔⵠΔⵠ: "img/day-bag47.png",
    ΔᐃᐃΔⵠⵠⵠ: "img/night-bag47.png",
    ⲆᐃᐃᐃᐃⲆⵠ: "img/day-bag48.png",
    ⲆΔΔᐃΔΔⵠ: "img/night-bag48.png",
    ᐃᐃΔΔᐃΔΔ: "img/day-bag49.png",
    ΔΔⵠΔⵠᐃᐃ: "img/night-bag49.png",
    ⵠᐃⵠΔⲆᐃᐃ: "img/day-bag50.png",
    ᐃⵠⲆⲆⵠΔⵠ: "img/night-bag50.png",
    ⵠΔⲆⲆⵠᐃⵠ: "img/day-bag51.png",
    ᐃᐃⲆᐃᐃᐃᐃ: "img/night-bag51.png",
    ᐃⵠⵠⵠᐃⵠⲆ: "img/day-bag52.png",
    ᐃᐃᐃⵠⲆⵠΔ: "img/night-bag52.png",
    ⵠⵠⲆⲆⲆΔΔ: "img/day-bag53.png",
    ᐃⵠᐃᐃΔΔⲆ: "img/night-bag53.png",
    ⵠⵠⵠΔⲆΔⲆ: "img/day-bag54.png",
    ᐃᐃⵠΔΔΔⲆ: "img/night-bag54.png",
    ᐃΔⵠⲆⵠⵠⵠ: "img/day-bag55.png",
    ΔⵠΔⲆᐃᐃⲆ: "img/night-bag55.png",
    ᐃᐃⵠⲆⲆⲆΔ: "img/day-bag56.png",
    ⵠⵠⲆⲆΔᐃⲆ: "img/night-bag56.png",
    ⵠᐃⲆⵠΔⵠⲆ: "img/day-bag57.png",
    ⲆᐃᐃΔⵠᐃⲆ: "img/night-bag57.png",
    ⵠⵠᐃᐃⵠΔⵠ: "img/day-bag58.png",
    ⵠⲆⲆⲆᐃⲆΔ: "img/night-bag58.png",
    ⲆⵠΔⲆΔΔᐃ: "img/day-bag59.png",
    ⵠⵠⲆⲆᐃⵠΔ: "img/night-bag59.png",
    ᐃᐃⵠⲆᐃᐃᐃ: "img/day-bag60.png",
    ⲆΔᐃⵠᐃⲆⲆ: "img/night-bag60.png",
    ᐃⲆⵠⵠⲆⵠᐃ: "img/day-bag61.png",
    ⵠⵠⲆⲆᐃⲆⵠ: "img/night-bag61.png",
    ᐃⲆⲆⲆⵠⲆⲆ: "img/day-bag62.png",
    ᐃᐃⲆΔⲆΔⲆ: "img/night-bag62.png",
    ⲆⵠΔⲆⵠⲆⲆ: "img/day-bag63.png",
    ⵠᐃⲆⲆⵠⲆⵠ: "img/night-bag63.png",
    ⵠᐃΔΔⲆΔⵠ: "img/day-bag64.png",
    ⵠΔᐃᐃΔⵠΔ: "img/night-bag64.png",
    ᐃⵠⵠΔⲆᐃᐃ: "img/day-bag65.png",
    ⵠᐃᐃⵠⲆᐃⲆ: "img/night-bag65.png",
    ᐃⲆⲆΔΔⵠΔ: "img/day-bag66.png",
    ΔⲆΔΔⲆΔᐃ: "img/night-bag66.png",
    ⲆⲆᐃⵠⲆΔⵠ: "img/day-bag67.png",
    ⵠᐃᐃᐃΔᐃⵠ: "img/night-bag67.png",
    ΔΔⵠᐃⲆΔΔ: "img/day-bag68.png",
    ⵠⲆⲆᐃΔᐃⲆ: "img/night-bag68.png",
    ⵠⵠⲆⵠⵠⲆΔ: "img/day-bag69.png",
    ⵠΔⵠⵠΔΔΔ: "img/night-bag69.png",
    ΔᐃᐃⲆⵠΔΔ: "img/day-bag70.png",
    ⲆΔⲆᐃᐃⵠΔ: "img/night-bag70.png",
    ⲆⵠΔⲆΔᐃΔ: "img/day-bag71.png",
    ⲆᐃⲆⵠΔᐃⵠ: "img/night-bag71.png",
    ⵠⲆΔⲆⵠⲆⲆ: "img/day-bag72.png",
    ⵠⲆᐃΔⵠΔᐃ: "img/night-bag72.png",
    ⵠⲆᐃⵠⲆⲆⵠ: "img/day-bag73.png",
    ⲆᐃⵠⲆⲆⲆᐃ: "img/night-bag73.png",
    ᐃⲆΔⵠⲆᐃⲆ: "img/day-bag74.png",
    ⲆⲆⵠⲆΔᐃᐃ: "img/night-bag74.png",
    ΔⲆᐃⵠⲆⵠⲆ: "img/day-bag75.png",
    ΔⵠⲆⵠⲆⵠᐃ: "img/night-bag75.png",
    ΔⲆⵠⲆⵠⵠⵠ: "img/day-bag76.png",
    ΔⲆΔΔᐃΔᐃ: "img/night-bag76.png",
    ᐃᐃⲆⵠⵠΔⵠ: "img/day-bag77.png",
    ⵠⵠΔⲆᐃⲆᐃ: "img/night-bag77.png",
    ⲆⲆΔⵠⲆᐃΔ: "img/day-bag78.png",
    ⵠⵠⲆⲆⵠⲆⵠ: "img/night-bag78.png",
    ⵠⲆᐃⲆⲆⵠⲆ: "img/day-bag79.png",
    ΔⲆΔⲆⲆⲆᐃ: "img/night-bag79.png",
    ᐃᐃⵠΔᐃⲆᐃ: "img/day-bag80.png",
    ᐃⵠᐃⵠΔΔⲆ: "img/night-bag80.png",
    Δⵠᐃⵠⵠⵠᐃ: "img/day-accessory0.png",
    ΔⲆⵠⵠΔΔΔ: "img/day-accessory0-pacques.png",
    ᐃΔΔᐃᐃᐃΔ: "img/night-accessory0-pacques.png",
    ᐃⲆᐃᐃⲆⲆΔ: "img/day-accessory13.png",
    ⲆⲆⵠⵠᐃΔⲆ: "img/night-accessory13.png",
    ᐃⵠⲆⲆΔΔᐃ: "img/day-accessory14.png",
    ⲆᐃⲆᐃΔᐃᐃ: "img/night-accessory14.png",
    ⵠᐃᐃⵠⵠΔⵠ: "img/day-accessory15.png",
    ΔΔΔΔᐃΔⲆ: "img/night-accessory15.png",
    ⲆᐃⲆⲆᐃⲆΔ: "img/day-accessory16.png",
    ᐃᐃⲆΔΔΔⲆ: "img/night-accessory16.png",
    ⵠᐃⵠⲆⲆΔᐃ: "img/day-accessory17.png",
    ⲆⵠᐃᐃⲆⲆⲆ: "img/day-accessory17.png",
    ᐃⲆᐃⲆᐃΔΔ: "img/day-accessory19.png",
    ᐃⲆⲆᐃⲆᐃⵠ: "img/night-accessory19.png",
    ᐃⵠⵠⲆⵠⲆᐃ: "img/day-accessory20.png",
    ⵠΔⲆΔⵠⲆⵠ: "img/night-accessory20.png",
    ⵠᐃⵠⵠⵠΔᐃ: "img/day-accessory21.png",
    ᐃⲆΔΔᐃᐃⵠ: "img/night-accessory21.png",
    ᐃᐃᐃΔⲆᐃΔ: "img/day-accessory22.png",
    ⵠⵠⲆᐃΔⲆΔ: "img/night-accessory22.png",
    ΔΔᐃΔⲆᐃⲆ: "img/day-accessory23.png",
    ΔᐃⲆⲆⲆᐃⵠ: "img/night-accessory23.png",
    ΔᐃΔΔⵠⵠⲆ: "img/day-accessory24.png",
    ᐃⵠⵠⵠΔᐃΔ: "img/night-accessory24.png",
    ᐃⵠⲆΔΔⲆⲆ: "img/day-accessory25.png",
    ⵠᐃⲆΔΔⵠᐃ: "img/night-accessory25.png",
    ᐃΔⵠΔⲆΔᐃ: "img/day-accessory26.png",
    ᐃᐃⵠⲆⵠⵠⵠ: "img/night-accessory26.png",
    ᐃᐃⵠⲆΔⲆᐃ: "img/day-accessory27.png",
    ⲆⲆΔⵠⲆⲆⵠ: "img/night-accessory27.png",
    ⲆⲆⲆᐃᐃᐃⲆ: "img/day-accessory18.png",
    ΔⲆⵠⲆᐃᐃⲆ: "img/night-accessory18.png",
    ⲆⲆⲆΔⵠⵠⵠ: "img/day-accessory29.png",
    ⵠᐃⵠⲆⲆᐃᐃ: "img/night-accessory29.png",
    ⲆⵠⲆⵠᐃⵠΔ: "img/day-accessory30.png",
    ⲆᐃⵠⵠᐃⲆⲆ: "img/night-accessory30.png",
    ⵠⵠᐃΔⵠᐃⲆ: "img/day-accessory31.png",
    ⲆⲆⲆⲆΔΔᐃ: "img/night-accessory31.png",
    ᐃⲆⲆⲆⵠᐃⵠ: "img/day-accessory32.png",
    ⲆⲆⲆᐃΔᐃⵠ: "img/night-accessory32.png",
    ΔᐃⵠΔΔᐃⲆ: "img/day-accessory33.png",
    ᐃⵠⲆΔⲆΔᐃ: "img/night-accessory33.png",
    ᐃΔⲆⵠⵠⲆᐃ: "img/day-accessory34.png",
    ⵠⲆⲆⲆΔΔᐃ: "img/night-accessory34.png",
    ᐃⵠᐃⵠᐃᐃᐃ: "img/day-accessory35.png",
    ⵠⵠⵠⲆⵠⵠᐃ: "img/night-accessory35.png",
    ⵠᐃΔΔΔⵠⲆ: "img/day-accessory28.png",
    ΔΔⵠⵠⵠⵠᐃ: "img/night-accessory28.png",
    ⵠᐃⲆΔΔⵠⵠ: "img/day-accessory36.png",
    ΔᐃⲆⲆⲆΔⲆ: "img/night-accessory36.png",
    ⲆᐃⲆᐃᐃᐃΔ: "img/day-accessory37.png",
    ΔΔᐃⵠΔⲆⵠ: "img/night-accessory37.png",
    ⲆᐃΔⲆᐃⵠᐃ: "img/day-accessory39.png",
    ΔⲆⲆΔⵠⲆⵠ: "img/night-accessory39.png",
    ⲆⲆⵠⵠⲆᐃΔ: "img/day-accessory40.png",
    ⲆᐃⲆᐃⲆΔΔ: "img/night-accessory40.png",
    ΔⵠⲆⲆⵠᐃΔ: "img/day-accessory41.png",
    ⵠⲆⲆⲆΔΔⲆ: "img/night-accessory41.png",
    ⵠᐃⲆⵠⵠⲆⲆ: "img/day-accessory42.png",
    ⲆⲆⵠⵠⲆⲆⲆ: "img/night-accessory42.png",
    ⵠᐃⵠΔⲆⲆⵠ: "img/day-accessory43.png",
    ⲆⲆⲆⲆΔΔⲆ: "img/night-accessory43.png",
    ⵠᐃΔᐃΔⲆΔ: "img/day-accessory44.png",
    ⵠⲆⵠⲆⵠᐃⵠ: "img/night-accessory44.png",
    ⲆᐃΔⲆⲆⵠΔ: "img/day-accessory38.png",
    ⲆⲆⵠⵠᐃᐃⲆ: "img/night-accessory38.png",
    ⲆΔΔᐃᐃᐃᐃ: "img/day-accessory46.png",
    ᐃⵠΔⵠⵠⵠⵠ: "img/night-accessory46.png",
    ᐃΔⲆΔᐃⵠⵠ: "img/day-accessory47.png",
    ⵠᐃᐃⲆⲆᐃᐃ: "img/night-accessory47.png",
    ⲆⵠΔⲆⲆⲆⲆ: "img/day-accessory48.png",
    ⵠⵠⵠⵠⵠᐃⵠ: "img/night-accessory48.png",
    ΔⲆⵠⵠᐃⵠᐃ: "img/day-accessory49.png",
    ⵠᐃⲆⵠᐃᐃⲆ: "img/night-accessory49.png",
    ⲆᐃⵠΔⵠⲆᐃ: "img/day-accessory45.png",
    ⵠⲆⵠⵠⵠΔⲆ: "img/night-accessory45.png",
    ΔΔⲆⲆΔⲆΔ: "img/day-accessory50.png",
    ΔⲆⵠᐃⲆΔΔ: "img/night-accessory50.png",
    ΔⲆⲆⵠᐃᐃⲆ: "img/day-accessory51.png",
    ᐃⵠⵠΔΔΔΔ: "img/night-accessory51.png",
    ⲆⵠΔᐃⵠⵠΔ: "img/day-accessory52.png",
    ΔᐃⲆᐃⲆⵠᐃ: "img/night-accessory52.png",
    ΔΔⲆⲆⲆΔΔ: "img/day-accessory53.png",
    ⲆⲆⲆⵠΔⲆΔ: "img/night-accessory53.png",
    ⲆΔΔⲆⲆΔⵠ: "img/day-accessory54.png",
    ⲆⲆⲆⲆᐃⵠΔ: "img/night-accessory54.png",
    ΔᐃΔΔΔⵠⲆ: "img/day-accessory55.png",
    ᐃΔᐃΔᐃΔᐃ: "img/night-accessory55.png",
    ⲆⵠⵠⲆⵠⲆⲆ: "img/day-accessory56.png",
    ⵠⲆⲆᐃⵠⵠᐃ: "img/night-accessory56.png",
    ᐃⵠⵠΔᐃⵠᐃ: "img/day-accessory57.png",
    ⵠⲆᐃⵠⲆⵠΔ: "img/night-accessory57.png",
    ⵠⲆⵠᐃᐃΔᐃ: "img/day-accessory58.png",
    ᐃⲆⵠΔᐃᐃⲆ: "img/night-accessory58.png",
    ΔⲆⵠⵠⲆⲆᐃ: "img/day-accessory59.png",
    ᐃⵠⲆⵠΔⲆᐃ: "img/night-accessory59.png",
    ⲆⲆⲆⲆΔⵠᐃ: "img/day-accessory60.png",
    ⵠⵠⵠⲆᐃⵠΔ: "img/night-accessory60.png",
    ΔΔᐃΔⲆᐃᐃ: "img/day-accessory61.png",
    ⵠⵠᐃⲆⵠⵠΔ: "img/night-accessory61.png",
    ⵠⵠⲆΔⵠᐃⲆ: "img/day-accessory62.png",
    ⲆΔΔᐃᐃΔⲆ: "img/night-accessory62.png",
    ⵠⲆΔᐃΔᐃΔ: "img/day-accessory63.png",
    ⵠᐃⵠⲆⵠⵠⲆ: "img/night-accessory63.png",
    ΔΔⲆⲆⲆⵠᐃ: "img/day-accessory64.png",
    ᐃⲆⲆᐃⵠⵠᐃ: "img/night-accessory64.png",
    ᐃΔⲆΔⵠⵠⵠ: "img/day-accessory65.png",
    ⲆΔᐃᐃⲆᐃⲆ: "img/night-accessory65.png",
    ⵠⵠΔᐃᐃⲆⲆ: "img/day-accessory66.png",
    ⲆⵠⵠⵠΔΔⵠ: "img/night-accessory66.png",
    ⵠⲆΔⲆⲆΔⵠ: "img/day-accessory67.png",
    ⵠⵠᐃᐃᐃⵠΔ: "img/night-accessory67.png",
    ⵠᐃⵠᐃⵠⵠᐃ: "img/day-accessory68.png",
    ᐃΔⲆⵠᐃⲆⵠ: "img/night-accessory68.png",
    ΔᐃⲆⲆΔⲆᐃ: "img/day-accessory69.png",
    ΔⲆᐃⲆⲆᐃᐃ: "img/night-accessory69.png",
    ⲆⵠᐃⵠⲆⵠΔ: "img/day-accessory70.png",
    ⵠⲆΔⲆᐃⲆΔ: "img/night-accessory70.png",
    ΔᐃⲆᐃⵠⵠⲆ: "img/day-accessory71.png",
    ᐃⲆΔⲆΔΔⲆ: "img/night-accessory71.png",
    ΔⵠΔᐃⲆᐃᐃ: "img/day-accessory72.png",
    ΔⲆᐃᐃⵠⵠⵠ: "img/night-accessory72.png",
    ΔⲆⵠⲆⲆⲆᐃ: "img/day-accessory73.png",
    ᐃᐃΔΔⵠⵠᐃ: "img/night-accessory73.png",
    ΔᐃΔⵠΔⵠⲆ: "img/day-accessory74.png",
    ⵠⲆⲆⲆⵠⵠᐃ: "img/night-accessory74.png",
    ⵠᐃᐃᐃΔⲆᐃ: "img/day-accessory75.png",
    ⵠⵠᐃᐃᐃⲆⲆ: "img/night-accessory75.png",
    ᐃᐃⵠⵠⵠᐃⲆ: "img/day-accessory76.png",
    ⲆⲆᐃⲆᐃᐃⵠ: "img/night-accessory76.png",
    ⲆᐃᐃⵠⲆᐃⵠ: "img/day-accessory77.png",
    ⵠΔΔΔⲆᐃᐃ: "img/night-accessory77.png",
    ⵠⵠⲆᐃᐃΔⲆ: "img/day-accessory78.png",
    ΔΔΔᐃⲆⵠⵠ: "img/night-accessory78.png",
    ᐃᐃⵠⵠᐃⵠⵠ: "img/day-accessory79.png",
    ᐃᐃΔᐃⵠⵠᐃ: "img/night-accessory79.png",
    ΔᐃΔᐃΔⲆⲆ: "img/day-accessory80.png",
    ΔⲆⲆⵠΔⲆⲆ: "img/night-accessory80.png",
    ΔⲆᐃΔΔⲆⲆ: "img/day-accessory81.png",
    ⵠΔΔⲆΔⲆⲆ: "img/night-accessory81.png",
    ΔΔᐃΔⵠⲆΔ: "img/day-accessory83.png",
    ⲆⲆΔΔᐃᐃⲆ: "img/night-accessory83.png",
    ΔⲆⲆᐃΔⵠⵠ: "img/day-accessory84.png",
    ⵠⲆΔᐃΔⵠΔ: "img/night-accessory84.png",
    ΔΔΔⲆⵠⵠΔ: "img/day-accessory85.png",
    ⵠⵠⲆⵠⲆᐃⲆ: "img/night-accessory85.png",
    ⲆᐃᐃⲆⲆΔⵠ: "img/day-accessory86.png",
    ΔᐃⲆᐃΔⵠᐃ: "img/night-accessory86.png",
    ⲆⲆⲆᐃᐃⵠⵠ: "img/day-accessory87.png",
    ΔᐃⲆⲆᐃΔΔ: "img/night-accessory87.png",
    ⵠⲆᐃΔᐃⲆⲆ: "img/day-accessory88.png",
    ᐃΔⲆΔᐃΔᐃ: "img/night-accessory88.png",
    ⵠᐃᐃⵠⲆΔΔ: "img/day-accessory89.png",
    ΔⲆⲆΔⵠⵠΔ: "img/night-accessory89.png",
    ΔΔⵠΔΔⲆⲆ: "img/day-accessory90.png",
    ⲆⲆᐃⵠⲆΔΔ: "img/night-accessory90.png",
    ᐃⵠⵠΔⲆⲆⲆ: "img/day-accessory91.png",
    ⵠΔΔⲆᐃΔΔ: "img/night-accessory91.png",
    ⲆΔΔᐃᐃⲆᐃ: "img/day-accessory92.png",
    ᐃⵠⵠᐃⵠᐃΔ: "img/night-accessory92.png",
    ⲆΔⵠᐃⲆⵠⲆ: "img/day-accessory93.png",
    ᐃⲆᐃᐃΔᐃΔ: "img/night-accessory93.png",
    ᐃⲆⵠᐃΔⵠⲆ: "img/day-accessory94.png",
    ⵠᐃᐃⵠⵠᐃⵠ: "img/night-accessory94.png",
    ⵠΔᐃⵠⵠⵠΔ: "img/day-accessory95.png",
    ᐃⲆΔⵠⵠΔⲆ: "img/night-accessory95.png",
    ⵠⲆΔΔᐃΔᐃ: "img/day-accessory96.png",
    ᐃⵠᐃΔⲆⲆⲆ: "img/night-accessory96.png",
    ΔᐃⵠⵠⲆⵠᐃ: "img/day-accessory97.png",
    ⵠᐃᐃΔⵠⲆΔ: "img/night-accessory97.png",
    ᐃᐃⲆᐃⵠⵠᐃ: "img/day-accessory98.png",
    ΔⵠⲆᐃᐃⲆⲆ: "img/night-accessory98.png",
    ⵠΔⵠⵠΔⲆⵠ: "img/day-accessory99.png",
    ᐃΔⵠΔΔᐃᐃ: "img/night-accessory99.png",
    ΔⵠᐃⵠᐃⵠⲆ: "img/day-accessory100.png",
    ᐃⵠᐃΔᐃⲆⵠ: "img/night-accessory100.png",
    ⵠⵠΔⵠⲆΔⲆ: "img/day-accessory101.png",
    Ⲇⵠⵠⵠᐃⵠⵠ: "img/night-accessory101.png",
    ⵠⵠⵠⲆⵠⲆᐃ: "img/day-accessory102.png",
    ΔΔⵠᐃⵠΔᐃ: "img/night-accessory102.png",
    ΔⲆΔᐃΔⲆᐃ: "img/day-accessory103.png",
    ⲆΔⲆⵠΔⵠⲆ: "img/night-accessory103.png",
    ᐃⵠⲆᐃᐃⲆⵠ: "img/day-accessory104.png",
    ΔⵠΔⲆⵠⲆᐃ: "img/night-accessory104.png",
    ᐃⵠᐃᐃⲆⵠᐃ: "img/day-accessory105.png",
    ΔΔⵠⲆⲆⵠΔ: "img/night-accessory105.png",
    ΔΔⲆⲆΔΔⲆⲆⵠ: "img/day-accessory106.png",
    ΔⲆΔΔΔΔⲆⲆⲆ: "img/night-accessory106.png",
    ⲆⲆᐃᐃΔⵠⵠⲆᐃ: "img/day-accessory107.png",
    ΔⵠⵠΔⲆΔⲆⲆⲆ: "img/night-accessory107.png",
    ⲆⵠⲆᐃⲆᐃΔ: "img/day-accessory82.png",
    ΔⵠⵠⵠⲆΔⲆ: "img/night-accessory82.png",
    ⵠⵠⵠⵠⲆΔΔ: "img/day-accessory108.png",
    ⵠΔᐃⲆⵠᐃΔ: "img/night-accessory108.png",
    ᐃᐃΔΔⲆΔᐃ: "img/day-accessory109.png",
    ΔⲆⵠΔⵠⵠᐃ: "img/night-accessory109.png",
    ᐃᐃⲆⲆᐃⵠᐃ: "img/day-book0.png",
    ᐃΔᐃᐃΔΔᐃ: "img/night-book0.png",
    ⵠⵠᐃᐃΔⵠⵠ: "img/day-book1.png",
    ᐃᐃⵠᐃⵠⵠⵠ: "img/night-book1.png",
    ⵠⵠΔⲆⲆΔΔ: "img/day-book2.png",
    ᐃΔⵠⲆᐃΔΔ: "img/night-book2.png",
    ΔᐃΔⵠΔᐃⲆ: "img/day-book3.png",
    ⲆⲆᐃΔⵠᐃⵠ: "img/night-book3.png",
    ⲆΔⵠⵠⵠⵠΔ: "img/day-book4.png",
    ⲆⵠⵠᐃⵠⲆΔ: "img/night-book4.png",
    ⲆΔⲆⵠⵠⵠⵠ: "img/day-book5.png",
    ᐃΔΔΔΔⵠⵠ: "img/night-book5.png",
    ⵠⵠᐃΔⵠⲆⲆ: "img/day-book6.png",
    ⵠⵠᐃᐃⲆΔΔ: "img/night-book6.png",
    ΔᐃⲆΔΔⲆⵠ: "img/day-book7.png",
    ΔΔⵠⲆⲆⲆΔ: "img/night-book7.png",
    ⲆᐃⵠᐃᐃⵠⲆ: "img/day-book8.png",
    ⵠⵠⵠⲆⵠᐃᐃ: "img/night-book8.png",
    ⲆᐃΔΔΔⲆΔ: "img/day-book9.png",
    ᐃⵠⲆΔΔⵠⵠ: "img/night-book9.png",
    ᐃⲆΔΔⲆᐃΔ: "img/day-book10.png",
    ᐃᐃΔᐃⵠᐃΔ: "img/night-book10.png",
    ᐃΔΔΔⵠⲆᐃ: "img/day-book11.png",
    ⵠΔᐃⲆᐃⵠᐃ: "img/night-book11.png",
    ΔⵠΔⵠⵠⵠᐃ: "img/day-book12.png",
    ᐃⲆᐃᐃⵠᐃⵠ: "img/night-book12.png",
    ⲆⵠⲆΔⲆⲆᐃ: "img/day-book13.png",
    ΔᐃΔⵠᐃⵠⵠ: "img/night-book13.png",
    ⲆᐃᐃᐃᐃΔᐃ: "img/day-book14.png",
    ΔᐃᐃⵠⵠⵠΔ: "img/night-book14.png",
    ᐃᐃⲆⵠⲆᐃᐃ: "img/day-book15.png",
    ΔΔⵠΔⲆⵠΔ: "img/night-book15.png",
    ⵠⲆΔⵠⵠᐃⲆ: "img/day-book16.png",
    ⵠΔᐃΔⲆⵠᐃ: "img/night-book16.png",
    ⵠⵠⵠⵠⲆᐃΔ: "img/day-book17.png",
    ᐃᐃⲆᐃΔⵠΔ: "img/night-book17.png",
    ᐃⵠⲆΔΔⲆΔ: "img/day-book18.png",
    ⲆᐃΔⲆᐃⵠΔ: "img/night-book18.png",
    ⲆⵠⲆᐃⲆΔᐃ: "img/day-book19.png",
    ⵠⵠⵠΔⵠΔⵠ: "img/night-book19.png",
    ᐃΔⵠⲆⵠΔᐃ: "img/day-book20.png",
    ΔⵠⵠᐃⲆⲆⲆ: "img/night-book20.png",
    ⲆΔⲆΔⵠᐃⵠ: "img/day-book21.png",
    ⵠⲆⲆΔⲆⵠⵠ: "img/night-book21.png",
    ΔΔⵠⲆΔᐃⲆ: "img/day-book22.png",
    ⵠΔᐃⲆⵠⲆⲆ: "img/night-book22.png",
    ΔⵠⲆΔᐃΔΔ: "img/day-book23.png",
    ⲆⵠΔⵠΔᐃⵠ: "img/night-book23.png",
    ⵠᐃⲆΔⲆⵠⲆ: "img/day-book24.png",
    ΔⲆᐃΔⵠᐃᐃ: "img/night-book24.png",
    ⵠⵠΔΔⵠᐃⲆ: "img/day-book25.png",
    ⵠⲆΔΔⲆᐃΔ: "img/night-book25.png",
    ⵠⲆΔΔⲆⵠΔ: "img/day-book26.png",
    ᐃⵠᐃᐃⲆⵠⵠ: "img/night-book26.png",
    ᐃⲆΔΔᐃΔⲆ: "img/day-book27.png",
    ᐃΔⲆⲆᐃΔⵠ: "img/night-book27.png",
    ΔΔΔⵠⲆⲆⵠ: "img/day-book28.png",
    ⲆⲆⵠᐃⵠᐃᐃ: "img/night-book28.png",
    ᐃᐃⲆᐃᐃⲆⲆ: "img/day-book29.png",
    ⲆⲆΔⵠⲆᐃⲆ: "img/night-book29.png",
    ⲆᐃⲆΔᐃⵠⵠ: "img/day-book30.png",
    ΔΔᐃⵠⵠⲆⵠ: "img/night-book30.png",
    ⲆΔⲆⲆⲆᐃⲆ: "img/day-book31.png",
    ΔⵠⵠⵠⵠΔⵠ: "img/night-book31.png",
    ᐃⲆⲆΔⵠΔⲆ: "img/day-book32.png",
    ⲆΔΔΔⲆⲆΔ: "img/night-book32.png",
    ΔⲆᐃⵠᐃᐃⲆ: "img/day-book33.png",
    ΔⲆᐃⲆΔᐃⵠ: "img/night-book33.png",
    ᐃᐃⲆΔᐃⲆⵠ: "img/day-book34.png",
    ⵠΔΔᐃⵠᐃⲆ: "img/night-book34.png",
    ⵠⲆΔᐃᐃᐃⲆ: "img/day-book35.png",
    ᐃⵠⵠⵠᐃΔⲆ: "img/night-book35.png",
    ᐃⲆⵠΔᐃΔΔ: "img/day-book36.png",
    ⵠⲆⵠΔᐃΔᐃ: "img/night-book36.png",
    ⵠⲆΔΔⲆⵠᐃⲆⲆ: "img/day-book37.png",
    ⵠⵠⵠⵠⲆⵠΔⵠΔ: "img/night-book37.png",
    ΔⵠⲆΔⵠΔⲆ: "img/day-book38.png",
    ⵠⲆⵠᐃⲆᐃⵠ: "img/night-book38.png",
    ⲆᐃⵠⵠⲆΔᐃ: "img/day-book39.png",
    ⲆⵠⵠⵠΔΔΔ: "img/night-book39.png",
    ΔᐃΔⵠⲆⲆⲆ: "img/day-book40.png",
    ᐃⲆᐃⲆⵠᐃⵠ: "img/night-book40.png",
    ᐃⲆⵠΔⵠΔⵠ: "img/day-book41.png",
    ᐃⲆⵠΔⵠΔΔΔⵠ: "img/night-book41.png",
    ΔᐃⲆⵠΔⵠᐃⵠⲆ: "img/day-book42.png",
    ⵠⲆⵠΔᐃⵠᐃⵠⵠ: "img/night-book42.png",
    ΔΔⲆΔᐃⵠΔⲆⵠ: "img/day-book43.png",
    ΔΔⵠᐃΔⵠᐃΔΔ: "img/night-book43.png",
    ⵠⵠⲆⲆΔⲆⲆᐃⲆ: "img/day-book44.png",
    ᐃΔⵠⵠΔΔⵠΔᐃ: "img/night-book44.png",
    ᐃᐃⵠᐃⲆᐃⲆᐃᐃ: "img/day-book45.png",
    ΔᐃⵠⵠⲆⲆΔᐃⵠ: "img/night-book45.png",
    ⵠⲆⵠⵠΔⲆᐃΔᐃ: "img/day-book46.png",
    ᐃⲆΔⵠⲆⵠΔᐃⵠ: "img/night-book46.png",
    ᐃᐃᐃΔΔⲆᐃΔΔ: "img/day-book47.png",
    ⵠᐃⲆⲆⲆΔᐃᐃΔ: "img/night-book47.png",
    ᐃⵠⵠΔΔⵠⵠⵠΔ: "img/day-book48.png",
    ⵠᐃⲆⵠⲆᐃΔΔᐃ: "img/night-book48.png",
    ᐃΔΔΔᐃᐃᐃⲆΔ: "img/day-book49.png",
    ΔᐃⵠⵠᐃⲆᐃΔΔ: "img/night-book49.png",
    ⲆⲆⲆⵠⲆᐃᐃΔΔ: "img/day-book50.png",
    ⲆΔⲆᐃᐃⵠΔⵠΔ: "img/night-book50.png",
    ᐃΔᐃΔᐃΔᐃⲆⲆ: "img/day-crate1.png",
    ⵠⲆᐃⲆⲆᐃⵠⵠⲆ: "img/night-crate1.png",
    ΔᐃᐃΔᐃᐃᐃⵠⲆ: "img/day-crate2.png",
    ᐃΔⵠΔᐃⲆᐃⲆᐃ: "img/night-crate2.png",
    ΔⲆⵠΔⵠᐃΔⵠᐃ: "img/day-crate3.png",
    ΔᐃⲆΔⵠⵠᐃᐃⲆ: "img/night-crate3.png",
    ⲆⵠᐃⵠΔⵠᐃⵠⵠ: "img/day-crate4.png",
    ΔⲆᐃΔⵠᐃᐃⲆⲆ: "img/night-crate4.png",
    ΔᐃᐃⵠⲆⵠΔᐃⲆ: "img/day-crate5.png",
    ΔᐃΔⲆΔⲆΔᐃᐃ: "img/night-crate5.png",
    ⲆᐃⵠᐃΔⵠΔⲆⵠ: "img/day-crate6.png",
    ᐃⲆⲆⲆⵠⵠⵠⲆΔ: "img/night-crate6.png",
    ⲆⲆⲆΔⵠΔᐃⵠⲆ: "img/day-crate7.png",
    ⵠΔΔᐃⲆΔᐃᐃᐃ: "img/night-crate7.png",
    ΔΔⵠΔΔⵠᐃΔΔ: "img/day-crate8.png",
    ⵠⲆΔᐃⵠΔⵠΔⵠ: "img/night-crate8.png",
    ΔⲆΔⵠᐃᐃⲆⲆΔ: "img/day-crate9.png",
    ΔⵠᐃⵠΔᐃΔⵠΔ: "img/night-crate9.png",
    ΔⲆⵠⲆΔⵠⲆᐃⵠ: "img/day-crate10.png",
    ᐃⵠᐃⵠⲆⵠΔⵠⵠ: "img/night-crate10.png",
    ΔⲆΔⵠⲆⲆⵠΔᐃ: "img/day-crate11.png",
    ᐃᐃⲆⵠΔᐃⵠⲆΔ: "img/night-crate11.png",
    ⲆⲆΔᐃⲆⵠΔⲆᐃ: "img/day-crate12.png",
    ΔᐃᐃΔΔⲆⵠⵠᐃ: "img/night-crate12.png",
    ᐃⵠⵠΔΔΔⵠΔΔ: "img/day-crate13.png",
    ⵠⲆΔΔⵠⲆⲆᐃⲆ: "img/night-crate13.png",
    ᐃΔᐃΔΔᐃⲆΔⵠ: "img/day-crate14.png",
    ΔᐃⲆⵠⵠⲆⵠᐃΔ: "img/night-crate14.png",
    ⲆΔᐃᐃⵠᐃⵠⵠⲆ: "img/day-crate15.png",
    ᐃⲆᐃᐃⲆᐃⲆᐃᐃ: "img/night-crate15.png",
    ΔΔᐃΔᐃᐃⵠΔⲆ: "img/day-crate16.png",
    ⲆᐃΔⵠΔⵠΔᐃⲆ: "img/night-crate16.png",
    ΔΔᐃⵠᐃⵠⲆⵠⵠ: "img/day-crate17.png",
    ⵠⲆⲆⵠⲆΔⵠⵠⵠ: "img/night-crate17.png",
    ⲆᐃⲆᐃᐃⵠⲆᐃⲆ: "img/day-crate18.png",
    ⵠᐃΔΔΔⵠΔᐃⵠ: "img/night-crate18.png",
    ⵠⵠⲆⲆⲆᐃⵠⵠⲆ: "img/day-crate19.png",
    ΔⲆⲆⵠΔΔⵠⲆᐃ: "img/night-crate19.png",
    ᐃⲆⵠⵠᐃⲆⲆⲆⲆ: "img/day-crate20.png",
    ⲆⲆⲆΔΔΔᐃⲆⵠ: "img/night-crate20.png",
    ⵠᐃⲆⵠⲆᐃᐃⲆᐃ: "img/day-crate21.png",
    ⵠⲆᐃΔⲆΔᐃᐃⲆ: "img/night-crate21.png",
    ⵠⲆⵠΔᐃᐃᐃⲆᐃ: "img/day-crate22.png",
    ᐃⲆᐃⲆᐃⵠΔΔΔ: "img/night-crate22.png",
    ΔⲆⵠΔⲆⲆΔⲆⲆ: "img/day-crate23.png",
    ⲆΔⲆᐃΔⲆᐃᐃⵠ: "img/night-crate23.png",
    ΔᐃⲆⵠⵠΔᐃᐃⲆ: "img/day-crate24.png",
    ᐃⵠⵠᐃⲆΔⵠⲆΔ: "img/night-crate24.png",
    ⲆΔᐃⲆⲆΔᐃᐃⵠ: "img/day-crate25.png",
    ⲆⲆⲆΔᐃⵠⲆⵠΔ: "img/night-crate25.png",
    ⲆΔⲆⵠⵠⲆⵠΔⵠ: "img/day-crate26.png",
    ⵠᐃΔⲆⲆᐃⲆⲆᐃ: "img/night-crate26.png",
    ⵠⲆᐃΔⵠᐃΔⵠᐃ: "img/day-crate27.png",
    ⵠⲆⲆⲆᐃⲆⲆⲆᐃ: "img/night-crate27.png",
    ⲆΔΔⲆⲆΔⲆΔᐃ: "img/day-crate28.png",
    ᐃΔⵠᐃⵠΔᐃᐃⲆ: "img/night-crate28.png",
    ᐃⵠⵠⵠⵠᐃⲆⲆΔ: "img/day-crate29.png",
    ᐃᐃᐃᐃᐃⵠΔⵠⵠ: "img/night-crate29.png",
    ⲆⲆⲆⲆᐃΔⲆⵠⵠ: "img/day-crate30.png",
    ⵠᐃΔⲆΔΔⵠⵠᐃ: "img/night-crate30.png",
    ⲆⲆⵠⵠᐃᐃᐃΔᐃ: "img/day-crate31.png",
    ΔⵠᐃⲆⵠⵠΔⲆΔ: "img/night-crate31.png",
    ⲆⵠⵠᐃⵠⲆᐃΔⵠ: "img/day-crate32.png",
    ᐃΔᐃⲆᐃⲆᐃᐃΔ: "img/night-crate32.png",
    ΔΔΔΔⲆⵠⵠΔⲆ: "img/day-crate33.png",
    ΔⲆᐃᐃᐃⲆⲆΔⵠ: "img/night-crate33.png",
    ᐃᐃⵠᐃⵠΔᐃⲆⲆ: "img/day-crate34.png",
    ᐃⵠΔᐃΔᐃᐃᐃᐃ: "img/night-crate34.png",
    ᐃᐃⵠⲆⲆΔΔⵠΔ: "img/day-crate35.png",
    ΔⲆⲆⵠΔΔᐃΔⵠ: "img/night-crate35.png",
    ⵠΔᐃⵠΔⵠΔᐃΔ: "img/day-crate36.png",
    ⵠᐃⲆᐃᐃᐃΔⵠᐃ: "img/night-crate36.png",
    ⲆᐃⲆⲆⲆΔᐃᐃⲆ: "img/day-crate37.png",
    ΔⲆΔΔᐃⵠⲆⵠⵠ: "img/night-crate37.png",
    ᐃⵠΔⲆⲆΔΔΔΔ: "img/day-crate38.png",
    ᐃΔΔΔΔⵠⲆⲆᐃ: "img/night-crate38.png",
    ΔΔᐃⵠᐃΔΔᐃⲆ: "img/day-crate39.png",
    ΔⲆΔΔⲆΔⲆᐃᐃ: "img/night-crate39.png",
    ᐃⵠΔᐃΔⲆⵠⵠⲆ: "img/day-crate40.png",
    ᐃⵠⲆΔᐃᐃΔΔᐃ: "img/night-crate40.png",
    ᐃⵠᐃⵠⲆⲆΔⲆⲆ: "img/day-crate41.png",
    ᐃΔⲆᐃᐃΔΔⵠΔ: "img/night-crate41.png",
    ᐃᐃᐃΔΔΔⵠⲆΔ: "img/day-crate42.png",
    ⵠΔΔΔⲆⲆΔⵠᐃ: "img/night-crate42.png",
    ᐃⲆᐃᐃᐃΔΔⵠⵠ: "img/day-crate43.png",
    ᐃⲆᐃⵠⵠᐃᐃᐃⵠ: "img/night-crate43.png",
    ⲆᐃᐃⵠᐃᐃΔΔⵠ: "img/day-crate44.png",
    ⲆᐃⲆᐃᐃⲆⵠⲆΔ: "img/night-crate44.png",
    ᐃⲆΔΔᐃΔⲆΔΔ: "img/day-crate45.png",
    ⲆⵠⵠᐃⲆᐃⲆⵠⲆ: "img/night-crate45.png",
    ΔⵠᐃⲆᐃᐃⵠᐃΔ: "img/day-crate46.png",
    ΔᐃⲆⲆⵠᐃΔᐃⲆ: "img/night-crate46.png",
    ᐃᐃᐃⵠΔⲆⵠᐃⵠ: "img/day-crate47.png",
    ᐃᐃᐃⲆⲆΔΔᐃⲆ: "img/night-crate47.png",
    ᐃⲆⲆΔⲆᐃⵠᐃⲆ: "img/day-crate48.png",
    ΔᐃⲆᐃΔⲆΔⲆⲆ: "img/night-crate48.png",
    ⵠᐃⲆΔᐃⲆⵠΔⲆ: "img/day-crate49.png",
    ᐃⲆΔⲆΔᐃΔᐃᐃ: "img/night-crate49.png",
    ⲆⲆⵠΔⲆⲆⲆΔΔ: "img/day-crate50.png",
    ⵠΔΔᐃΔΔⵠΔᐃ: "img/night-crate50.png",
    ᐃⲆⵠⲆᐃⲆᐃΔᐃ: "img/day-crate51.png",
    ⵠⵠᐃⲆΔⲆΔΔΔ: "img/night-crate51.png",
    ⵠᐃⲆΔΔᐃΔΔⲆ: "img/day-crate52.png",
    ⵠⵠΔΔΔⵠᐃⲆᐃ: "img/night-crate52.png",
    ⲆⵠᐃΔⵠⵠⲆΔᐃ: "img/day-crate53.png",
    ᐃᐃⵠⵠᐃᐃᐃⵠⵠ: "img/night-crate53.png",
    ΔᐃΔⵠⲆᐃΔᐃⵠ: "img/day-crate54.png",
    ⲆⲆⵠⵠⵠΔⲆⲆΔ: "img/night-crate54.png",
    ⵠΔᐃⲆᐃⲆᐃΔΔ: "img/day-crate55.png",
    ΔᐃⵠⲆⵠᐃᐃⵠΔ: "img/night-crate55.png",
    ΔⵠⵠᐃⲆⵠⵠⲆᐃ: "img/day-crate56.png",
    ᐃⵠⵠᐃⵠⲆᐃⲆⵠ: "img/night-crate56.png",
    ⵠᐃΔⵠᐃΔⲆⲆⵠ: "img/day-crate57.png",
    ⵠⲆᐃⵠⲆⵠᐃᐃⲆ: "img/night-crate57.png",
    ⵠⵠΔⵠᐃᐃⲆᐃᐃ: "img/day-crate58.png",
    ⵠΔΔΔΔΔⲆᐃᐃ: "img/night-crate58.png",
    ⵠΔΔⲆⵠⲆΔΔⵠ: "img/day-crate59.png",
    ⵠΔⲆⲆⲆΔⲆⲆᐃ: "img/night-crate59.png",
    ᐃⵠΔⵠΔⲆⵠΔᐃ: "img/day-crate60.png",
    ⵠΔΔⲆⲆⵠΔΔᐃ: "img/night-crate60.png",
    ⵠᐃᐃⵠⵠᐃⲆᐃⲆ: "img/day-crate61.png",
    ⲆⲆⵠᐃΔΔΔⲆⲆ: "img/night-crate61.png",
    ᐃⲆⵠⵠⵠⲆⲆⲆⲆ: "img/day-crate62.png",
    ⲆᐃⲆⵠⵠΔᐃᐃⵠ: "img/night-crate62.png",
    ΔⵠΔⵠΔⲆⲆⲆΔ: "img/day-crate63.png",
    ⵠᐃⲆⲆᐃᐃⲆᐃᐃ: "img/night-crate63.png",
    ΔⵠᐃᐃᐃΔΔᐃⵠ: "img/day-crate64.png",
    ⲆᐃⲆⲆⵠΔᐃΔⲆ: "img/night-crate64.png",
    ⲆᐃⲆⲆΔⲆⵠⵠⵠ: "img/day-crate65.png",
    ⵠⲆΔⵠⵠⵠⲆⲆΔ: "img/night-crate65.png",
    ⵠΔᐃᐃⲆⲆⲆⵠΔ: "img/day-crate66.png",
    ⲆⵠᐃⵠᐃⵠⵠΔᐃ: "img/night-crate66.png",
    ΔⲆᐃᐃᐃⵠⵠᐃⵠ: "img/day-crate67.png",
    ⵠⵠΔΔᐃΔⵠⲆΔ: "img/night-crate67.png",
    ΔᐃΔⵠΔΔᐃΔⵠ: "img/day-crate68.png",
    ᐃΔᐃⲆΔᐃΔⵠⲆ: "img/night-crate68.png",
    ΔⲆᐃⲆⲆⲆⲆⲆⵠ: "img/day-crate69.png",
    ᐃᐃΔⵠΔⲆᐃΔΔ: "img/night-crate69.png",
    ⲆᐃΔᐃⲆⲆⲆⵠᐃ: "img/day-crate70.png",
    ⲆⲆⵠᐃᐃⲆᐃⲆⲆ: "img/night-crate70.png",
    ΔⲆᐃⲆⵠΔⵠΔᐃ: "img/day-crate71.png",
    ᐃⵠⵠⲆᐃᐃᐃⵠⵠ: "img/night-crate71.png",
    ΔⵠⲆⵠΔᐃᐃⲆΔ: "img/day-crate72.png",
    ᐃⲆΔⵠⲆⵠᐃⲆΔ: "img/night-crate72.png",
    ⲆᐃᐃᐃⲆᐃⲆᐃΔ: "img/day-crate73.png",
    ΔⵠⲆΔΔⵠΔᐃⲆ: "img/night-crate73.png",
    ᐃⲆΔΔΔⵠΔᐃᐃ: "img/day-crate74.png",
    ⵠⲆⵠΔΔΔⲆᐃΔ: "img/night-crate74.png",
    ΔⲆᐃⲆⵠᐃⵠⵠⵠ: "img/day-crate75.png",
    ΔⲆᐃᐃᐃᐃⲆᐃᐃ: "img/night-crate75.png",
    ⲆΔᐃᐃⲆⲆⵠⲆΔ: "img/day-crate76.png",
    ⵠΔⲆⲆⵠⲆΔᐃⵠ: "img/night-crate76.png",
    ⵠᐃⵠⵠⲆⲆⵠΔⵠ: "img/day-crate77.png",
    ΔᐃⲆΔᐃᐃᐃⵠᐃ: "img/night-crate77.png",
    ⲆⵠᐃᐃⲆⵠⵠⵠΔ: "img/day-crate78.png",
    ᐃΔᐃⲆΔᐃⵠᐃΔ: "img/night-crate78.png",
    ⵠⵠⵠⲆᐃⵠΔⲆⵠ: "img/day-crate79.png",
    ᐃΔⵠΔΔᐃΔⲆⵠ: "img/night-crate79.png",
    ⲆⲆΔΔΔⵠⲆᐃΔ: "img/day-crate80.png",
    ⲆⲆΔⵠⵠᐃⵠⵠΔ: "img/night-crate80.png",
    ⲆᐃⲆΔⵠΔΔⵠΔ: "img/day-crate81.png",
    ⵠΔΔᐃⵠⲆⵠⵠᐃ: "img/night-crate81.png",
    ΔⲆⲆⵠᐃⵠⵠᐃⲆ: "img/day-crate82.png",
    ⵠⵠᐃⲆⲆⵠΔⵠⵠ: "img/night-crate82.png",
    ⵠᐃⲆΔᐃⲆⵠⲆᐃ: "img/day-crate83.png",
    ⲆⲆΔⲆΔΔᐃᐃᐃ: "img/night-crate83.png",
    ᐃᐃᐃⵠⲆⲆⵠⵠⲆ: "img/day-crate84.png",
    ΔⵠⲆⲆⵠᐃⵠⲆᐃ: "img/night-crate84.png",
    ΔᐃⵠⲆᐃⲆⵠⲆᐃ: "img/day-herb0.png",
    ⵠᐃⵠΔΔΔⲆⲆⵠ: "img/day-herb1.png",
    ⲆᐃΔΔⲆⲆΔΔⵠ: "img/day-herb2.png",
    ⲆⲆⲆⵠⵠⵠᐃΔⵠ: "img/day-herb3.png",
    ⵠⲆⵠⵠΔᐃⵠⵠᐃ: "img/day-herb4.png",
    ΔΔᐃⲆᐃⲆⲆⲆᐃ: "img/day-herb5.png",
    ⵠΔⵠᐃⲆⵠᐃΔᐃ: "img/day-herb6.png",
    ⵠⲆⵠⲆⵠⲆᐃⵠⵠ: "img/day-herb7.png",
    ⲆⵠⵠⲆⵠⲆᐃᐃⲆ: "img/day-herb8.png",
    ΔⲆᐃᐃⲆᐃⵠᐃᐃ: "img/day-herb9.png",
    ᐃΔⵠΔⲆΔΔⲆᐃ: "img/day-herb10.png",
    ⲆⵠᐃⲆⲆΔⵠΔᐃ: "img/day-herb11.png",
    ⵠᐃΔⲆⲆΔΔΔⵠ: "img/day-herb12.png",
    ⲆⲆΔⵠⲆⵠⲆⵠⲆ: "img/day-herb13.png",
    ⵠᐃⲆΔᐃⲆⲆᐃⲆ: "img/day-herb14.png",
    ⲆⵠᐃᐃⵠΔⲆᐃΔ: "img/day-herb15.png",
    ⵠΔΔⵠᐃΔⲆΔᐃ: "img/day-shell0.png",
    ᐃᐃΔⵠᐃⲆⵠⵠᐃ: "img/day-shell1.png",
    ᐃⵠΔⲆΔⵠΔⵠⲆ: "img/day-shell2.png",
    ⲆⵠⲆⵠΔⲆᐃᐃⲆ: "img/day-leaf1.png",
    ⵠⵠᐃⵠΔⵠΔΔᐃ: "img/day-leaf2.png",
    ⲆΔⲆᐃᐃⵠᐃⵠⵠ: "img/day-leaf3.png",
    ᐃᐃⲆⲆⲆⲆⲆⲆⵠ: "img/day-leaf4.png",
    ⵠⵠΔⲆᐃΔⲆᐃΔ: "img/day-leaf5.png",
    ⲆⵠΔᐃΔᐃΔΔΔ: "img/day-leaf6.png",
    ᐃⲆΔⵠⲆᐃΔⵠᐃ: "img/day-leaf7.png",
    ᐃⵠⲆΔⵠᐃⵠⲆΔ: "img/day-leaf8.png",
    ⵠⲆᐃⵠⲆΔᐃⲆⵠ: "img/day-rock0.png",
    ΔⵠΔⵠΔΔⲆⲆⵠ: "img/day-rock1.png",
    ⵠᐃΔᐃΔⲆⲆᐃΔ: "img/day-rock2.png",
    ⵠⲆⲆⵠΔⵠⲆᐃⵠ: "img/day-rock3.png",
    ΔⵠⲆⵠⲆⵠΔᐃⲆ: "img/day-rock4.png",
    ΔΔⲆⵠᐃΔᐃΔᐃ: "img/day-rock5.png",
    ⵠⲆⲆⵠᐃΔⵠⵠᐃ: "img/day-rock6.png",
    ᐃⵠⵠΔΔⲆⵠⵠΔ: "img/day-rock7.png",
    ⲆᐃᐃⲆⲆΔⲆΔⵠ: "img/day-rock8.png",
    ⲆⵠⲆⲆᐃⵠⵠΔⵠ: "img/day-rock9.png",
    ⵠΔⵠΔⲆΔΔᐃⵠ: "img/day-rock10.png",
    ⲆⵠᐃᐃⲆΔΔΔⵠ: "img/day-rock11.png",
    ᐃΔⵠᐃⵠⵠΔⵠⵠ: "img/day-rock12.png",
    ⲆⵠⵠᐃⵠⲆⵠⵠⲆ: "img/day-rock13.png",
    ⲆⵠⲆⵠⲆⲆΔⵠᐃ: "img/day-flower1.png",
    ⵠⲆΔᐃⵠΔᐃᐃΔ: "img/day-flower2.png",
    ⵠᐃᐃᐃⵠⵠΔᐃⲆ: "img/day-flower3.png",
    ΔⲆⵠⵠⲆΔᐃⲆΔ: "img/day-flower4.png",
    ⵠᐃⲆᐃᐃⵠⵠᐃΔ: "img/day-flower5.png",
    ΔⵠⲆΔⲆΔⵠⲆⲆ: "img/day-flower6.png",
    ΔⲆᐃΔⵠᐃⵠⵠᐃ: "img/day-flower7.png",
    ᐃᐃᐃΔⲆΔⵠⵠΔ: "img/day-flower8.png",
    ΔⵠⲆⲆⲆⵠΔΔᐃ: "img/day-flower9.png",
    ⵠΔⲆⲆΔΔᐃΔΔ: "img/day-herb16.png",
    ⵠⵠᐃⲆⲆⵠΔΔΔ: "img/day-herb17.png",
    ᐃΔⲆⵠΔⵠⲆΔⲆ: "img/day-herb18.png",
    ⵠⲆⲆⲆᐃⲆΔΔΔ: "img/day-herb19.png",
    ᐃᐃΔⵠᐃΔΔⲆⵠ: "img/day-herb20.png",
    ⵠⵠᐃΔⵠⵠᐃΔⲆ: "img/day-herb21.png",
    ⲆⲆⲆⵠᐃⵠⲆᐃⲆ: "img/day-jungle-ground0.png",
    ⵠΔⲆⵠᐃⲆⲆᐃᐃ: "img/day-jungle-ground1.png",
    ⵠΔⵠΔⲆⲆᐃᐃΔ: "img/day-jungle-ground2.png",
    ⵠⵠⲆᐃⵠΔⲆⲆⲆ: "img/day-jungle-ground3.png",
    ⵠⵠⵠᐃⲆΔΔⲆⵠ: "img/day-jungle-pebble0.png",
    ΔⵠⵠⲆΔᐃⵠⵠΔ: "img/day-jungle-pebble1.png",
    ΔΔⵠⵠᐃᐃᐃΔⵠ: "img/day-jungle-pebble2.png",
    ⲆⲆⵠᐃΔⲆᐃⲆΔ: "img/day-jungle-pebble3.png",
    ᐃⲆᐃᐃⲆᐃᐃᐃⵠ: "img/day-jungle-pebble4.png",
    ⲆⵠⵠⵠΔⲆⲆᐃⲆ: "img/day-jungle-pebble5.png",
    ᐃⵠⲆⵠⵠΔⵠⵠⵠ: "img/night-herb0.png",
    ⵠΔⲆᐃᐃⵠᐃᐃΔ: "img/night-herb1.png",
    ⲆᐃⲆⵠⲆⲆΔⵠⲆ: "img/night-herb2.png",
    ⲆⲆⵠⵠᐃΔΔΔⵠ: "img/night-herb3.png",
    ⵠΔᐃⲆᐃΔΔⵠⵠ: "img/night-herb4.png",
    ⲆⲆⲆⲆΔⵠⲆᐃᐃ: "img/night-herb5.png",
    ⵠΔΔᐃΔⵠᐃᐃⲆ: "img/night-herb6.png",
    ⵠⲆⲆΔⵠΔᐃᐃΔ: "img/night-herb7.png",
    ⵠᐃᐃᐃⵠⲆᐃⵠⵠ: "img/night-herb8.png",
    ΔⲆⵠⵠΔⵠΔⵠΔ: "img/night-herb9.png",
    ⵠⵠΔⲆᐃⵠⵠᐃⲆ: "img/night-herb10.png",
    ⲆΔⵠⵠⲆΔⲆⵠΔ: "img/night-herb11.png",
    ᐃΔΔᐃᐃᐃⵠᐃⵠ: "img/night-herb12.png",
    ᐃΔⵠΔᐃⲆⵠⲆⲆ: "img/night-herb13.png",
    ΔⲆᐃᐃΔⵠΔⲆΔ: "img/night-herb14.png",
    ΔᐃⵠⵠⲆᐃᐃⲆΔ: "img/night-herb15.png",
    ΔⵠΔⲆⵠᐃⲆΔⵠ: "img/night-shell0.png",
    ⲆᐃΔᐃⵠⲆⲆΔⲆ: "img/night-shell1.png",
    ᐃΔΔᐃᐃᐃΔⲆᐃ: "img/night-shell2.png",
    ᐃᐃⵠΔⵠΔᐃΔᐃ: "img/night-leaf1.png",
    ΔⲆⵠᐃⲆⵠΔΔΔ: "img/night-leaf2.png",
    ᐃⲆᐃΔᐃᐃᐃⵠⵠ: "img/night-leaf3.png",
    ᐃⲆⲆΔᐃⲆΔΔΔ: "img/night-leaf4.png",
    ᐃΔⵠΔᐃⵠΔΔⲆ: "img/night-leaf5.png",
    ⵠΔᐃᐃΔΔΔⲆᐃ: "img/night-leaf6.png",
    ΔⵠⵠⵠⵠᐃⲆᐃᐃ: "img/night-leaf7.png",
    ᐃⵠⲆᐃΔⵠΔΔⲆ: "img/night-leaf8.png",
    ᐃᐃⲆᐃΔΔⵠⵠⵠ: "img/night-rock0.png",
    ΔⵠᐃⵠᐃΔΔⲆⲆ: "img/night-rock1.png",
    ⵠⲆⵠⲆΔⲆᐃⲆⵠ: "img/night-rock2.png",
    ΔⲆᐃⲆᐃⵠᐃΔⵠ: "img/night-rock3.png",
    ⲆΔⲆᐃⲆⲆⲆᐃⲆ: "img/night-rock4.png",
    ᐃᐃΔⵠᐃᐃⲆΔᐃ: "img/night-rock5.png",
    ⲆⲆᐃΔⵠΔᐃⵠᐃ: "img/night-rock6.png",
    ⲆⵠⲆⵠⲆⲆΔΔⲆ: "img/night-rock7.png",
    ΔᐃΔⵠᐃΔΔΔⵠ: "img/night-rock8.png",
    ΔΔⵠΔⲆΔΔᐃⵠ: "img/night-rock9.png",
    ⲆΔΔᐃⲆΔΔΔΔ: "img/night-rock10.png",
    ᐃᐃⵠⵠⵠⵠΔⲆⵠ: "img/night-rock11.png",
    ΔⲆⵠⵠᐃⵠⵠΔⵠ: "img/night-rock12.png",
    ⵠⲆⲆⵠⵠⲆᐃⵠᐃ: "img/night-rock13.png",
    ⵠⵠΔⲆΔⵠⵠᐃⲆ: "img/night-flower1.png",
    ᐃᐃᐃⲆⲆᐃΔᐃᐃ: "img/night-flower2.png",
    ⲆᐃⵠⵠΔⲆⲆⵠⵠ: "img/night-flower3.png",
    ⵠⲆᐃⵠΔⵠᐃⵠΔ: "img/night-flower4.png",
    ⵠⵠᐃΔⲆᐃⲆᐃᐃ: "img/night-flower5.png",
    ΔⲆΔⲆᐃᐃⵠⵠⲆ: "img/night-flower6.png",
    ⲆⲆⲆΔⲆΔΔᐃΔ: "img/night-flower7.png",
    ᐃΔΔΔⵠⵠⲆΔΔ: "img/night-flower8.png",
    ⲆⵠΔⵠⵠⵠⵠⲆᐃ: "img/night-flower9.png",
    ⵠⲆΔⲆⲆᐃᐃΔΔ: "img/night-herb16.png",
    ΔᐃΔΔΔΔⵠᐃⲆ: "img/night-herb17.png",
    ΔΔᐃᐃᐃΔΔᐃⲆ: "img/night-herb18.png",
    ᐃΔⵠᐃᐃΔΔⵠⵠ: "img/night-herb19.png",
    ΔᐃⵠⲆᐃΔᐃᐃΔ: "img/night-herb20.png",
    ᐃⲆᐃᐃᐃⵠⵠΔⲆ: "img/night-herb21.png",
    ᐃⵠⲆⲆⵠⵠⵠⲆᐃ: "img/night-jungle-ground0.png",
    ⲆⵠⵠΔⲆⲆᐃᐃⵠ: "img/night-jungle-ground1.png",
    ⵠᐃⲆⵠᐃⲆᐃⵠΔ: "img/night-jungle-ground2.png",
    ⵠⲆⲆΔⵠⵠⲆᐃᐃ: "img/night-jungle-ground3.png",
    ⲆΔΔᐃⲆᐃⲆⲆΔ: "img/night-jungle-pebble0.png",
    ΔΔᐃⵠᐃΔⵠΔᐃ: "img/night-jungle-pebble1.png",
    ⲆΔⵠⲆᐃⵠⲆⲆⲆ: "img/night-jungle-pebble2.png",
    ⵠΔΔⵠΔⵠⲆᐃⲆ: "img/night-jungle-pebble3.png",
    ᐃᐃΔᐃΔⲆᐃΔⲆ: "img/night-jungle-pebble4.png",
    ⲆΔΔΔⲆⲆⲆᐃΔ: "img/night-jungle-pebble5.png",
    ᐃⵠⲆᐃΔΔΔᐃⲆ: "img/day-river000-010-000.png",
    ΔⲆᐃⲆⲆⵠΔᐃⲆ: "img/day-river000-010-010.png",
    ⵠⵠΔΔⲆⲆᐃᐃⲆ: "img/day-river000-011-000.png",
    ᐃⵠΔΔⲆⲆⲆΔΔ: "img/day-river000-011-010.png",
    ⵠⲆⲆⲆΔⵠᐃⲆᐃ: "img/day-river000-011-011.png",
    ᐃⵠⲆᐃⵠⵠΔⲆⵠ: "img/day-river000-110-000.png",
    ᐃΔΔΔⲆⲆᐃⵠΔ: "img/day-river000-110-010.png",
    ΔⲆᐃⲆⵠᐃΔⵠᐃ: "img/day-river000-110-110.png",
    ᐃᐃΔⵠΔⲆᐃΔⲆ: "img/day-river000-111-000.png",
    ⲆⲆΔΔᐃⵠΔᐃᐃ: "img/day-river000-111-010.png",
    ⲆⲆᐃΔⲆⲆΔⲆⵠ: "img/day-river000-111-011.png",
    ⵠⵠⵠᐃⵠΔᐃᐃⵠ: "img/day-river000-111-110.png",
    ᐃⲆⵠᐃⵠⲆⲆⲆⲆ: "img/day-river000-111-111.png",
    ⵠΔΔⲆⲆΔᐃᐃΔ: "img/day-river010-010-000.png",
    ⵠⲆⵠⵠᐃⵠⲆΔⲆ: "img/day-river010-010-010.png",
    ⵠΔⵠⲆΔⲆᐃⲆⲆ: "img/day-river010-011-000.png",
    ⲆᐃΔⲆⲆⵠᐃΔΔ: "img/day-river010-011-010.png",
    ΔⲆⵠΔⲆᐃⲆⲆᐃ: "img/day-river010-011-011.png",
    ⲆᐃΔⲆⲆⵠᐃᐃⵠ: "img/day-river010-110-000.png",
    ⵠΔᐃⵠⵠᐃⲆΔⲆ: "img/day-river010-110-010.png",
    ⵠⵠᐃⵠΔⲆΔⲆⲆ: "img/day-river010-110-110.png",
    ΔΔⵠⵠⵠⵠᐃΔⵠ: "img/day-river010-111-000.png",
    ᐃΔΔᐃΔΔΔⵠⲆ: "img/day-river010-111-010.png",
    ⲆⲆᐃⲆⵠⲆΔⵠⲆ: "img/day-river010-111-011.png",
    ΔΔΔⲆᐃΔΔⵠⲆ: "img/day-river010-111-110.png",
    ᐃⲆⲆΔⵠⲆⵠΔⵠ: "img/day-river010-111-111.png",
    ᐃΔᐃΔΔΔΔⲆᐃ: "img/day-river011-011-000.png",
    ᐃΔΔΔᐃⵠΔᐃΔ: "img/day-river011-011-010.png",
    ⲆⲆΔᐃᐃΔⲆΔⵠ: "img/day-river011-011-011.png",
    ⵠⲆᐃⵠⲆⵠΔᐃᐃ: "img/day-river011-111-000.png",
    ᐃᐃᐃⵠⵠⲆΔⵠⵠ: "img/day-river011-111-010.png",
    ⵠⵠᐃᐃΔᐃᐃⵠⲆ: "img/day-river011-111-011.png",
    ⲆᐃⵠΔΔΔΔⲆⲆ: "img/day-river011-111-110.png",
    ⵠΔⵠⲆΔΔⲆᐃᐃ: "img/day-river011-111-111.png",
    ᐃⲆΔⲆⲆⵠⵠᐃᐃ: "img/day-river110-110-000.png",
    ΔⲆⲆⵠⲆⵠⲆᐃⵠ: "img/day-river110-110-010.png",
    ⵠᐃᐃᐃΔΔᐃᐃⵠ: "img/day-river110-110-110.png",
    ᐃΔΔᐃᐃᐃⲆⲆⲆ: "img/day-river110-111-000.png",
    ⲆⵠⵠᐃΔΔⵠⲆⲆ: "img/day-river110-111-010.png",
    ⵠⲆΔⲆⲆΔⲆᐃⲆ: "img/day-river110-111-011.png",
    ᐃⵠΔΔⲆⵠΔⲆΔ: "img/day-river110-111-110.png",
    ⵠΔⵠᐃⲆⲆⵠⲆⲆ: "img/day-river110-111-111.png",
    ⵠΔᐃᐃⲆⲆᐃ: "img/day-river111-111-011.png",
    ⲆⲆⵠᐃᐃⲆᐃⵠⵠ: "img/day-river111-111-110.png",
    ⵠΔᐃᐃⲆⲆᐃ: "img/day-river111-111-011.png",
    ⲆᐃⵠΔⲆⵠⵠⵠⲆ: "img/day-river111-111-000.png",
    ⵠⲆᐃᐃⵠΔΔᐃΔ: "img/day-river111-111-111.png",
    ᐃᐃⲆⲆᐃⵠᐃⲆΔ: "img/day-river111-111-010.png",
    ΔⵠᐃΔΔΔᐃΔΔ: "img/night-river000-010-000.png",
    ᐃⲆᐃΔⵠΔⲆⲆⲆ: "img/night-river000-010-010.png",
    ᐃΔᐃᐃΔᐃᐃⵠⵠ: "img/night-river000-011-000.png",
    ᐃⵠⵠΔⲆᐃⲆᐃⵠ: "img/night-river000-011-010.png",
    ᐃⵠΔΔⵠⲆⵠᐃⲆ: "img/night-river000-011-011.png",
    ᐃⲆᐃⲆⵠⵠⵠΔΔ: "img/night-river000-110-000.png",
    ΔΔᐃⲆⵠΔΔⵠᐃ: "img/night-river000-110-010.png",
    ΔΔⲆⵠⲆⵠⲆᐃΔ: "img/night-river000-110-110.png",
    ΔΔⲆᐃᐃΔΔΔᐃ: "img/night-river000-111-000.png",
    ΔΔΔᐃⵠᐃⲆⲆⲆ: "img/night-river000-111-010.png",
    ΔⵠⲆΔᐃⵠΔΔΔ: "img/night-river000-111-011.png",
    ⵠⲆⵠᐃΔⲆᐃⵠⵠ: "img/night-river000-111-110.png",
    ⲆⵠⲆΔᐃᐃⵠΔᐃ: "img/night-river000-111-111.png",
    ΔⲆⵠΔΔΔᐃΔⲆ: "img/night-river010-010-000.png",
    ᐃΔᐃⵠᐃΔⵠⵠᐃ: "img/night-river010-010-010.png",
    ⵠⵠⲆΔⲆᐃⲆΔⵠ: "img/night-river010-011-000.png",
    ⲆΔⵠⵠᐃⵠΔⵠᐃ: "img/night-river010-011-010.png",
    ⵠⲆᐃᐃⵠⵠᐃⲆΔ: "img/night-river010-011-011.png",
    ΔᐃⵠⵠⵠᐃΔⲆⵠ: "img/night-river010-110-000.png",
    ⲆⵠᐃⲆⲆΔᐃⵠⵠ: "img/night-river010-110-010.png",
    ⲆⲆᐃⵠᐃⲆⲆΔΔ: "img/night-river010-110-110.png",
    ⲆⵠⵠⵠᐃⵠΔⵠⲆ: "img/night-river010-111-000.png",
    ⵠⵠⲆⲆᐃΔΔⵠⵠ: "img/night-river010-111-010.png",
    ⲆΔΔⵠΔᐃⵠᐃΔ: "img/night-river010-111-011.png",
    ⵠΔᐃᐃᐃⵠⵠΔΔ: "img/night-river010-111-110.png",
    ᐃᐃⵠⵠⵠᐃⵠᐃΔ: "img/night-river010-111-111.png",
    ΔᐃⲆΔΔⲆᐃⵠⵠ: "img/night-river011-011-000.png",
    ⲆᐃᐃⵠᐃⲆΔΔⵠ: "img/night-river011-011-010.png",
    ᐃⲆⲆΔΔⵠⲆᐃⵠ: "img/night-river011-011-011.png",
    ⲆⵠⲆⲆⵠᐃΔⵠⵠ: "img/night-river011-111-000.png",
    ⲆⵠⲆⲆᐃᐃΔΔᐃ: "img/night-river011-111-010.png",
    ΔⵠⲆΔⲆⵠᐃᐃΔ: "img/night-river011-111-011.png",
    ᐃⵠΔΔⲆΔΔΔΔ: "img/night-river011-111-110.png",
    ΔⲆⵠⵠⲆⵠⵠΔᐃ: "img/night-river011-111-111.png",
    ⲆΔΔᐃΔⲆΔΔⵠ: "img/night-river110-110-000.png",
    ⲆⵠΔⲆⲆΔⲆΔⵠ: "img/night-river110-110-010.png",
    ⵠⵠⲆⵠⵠⲆⲆⲆⲆ: "img/night-river110-110-110.png",
    ΔⵠⵠⲆⵠⲆⲆⲆⲆ: "img/night-river110-111-000.png",
    ⲆΔΔⵠⲆΔⵠⵠⵠ: "img/night-river110-111-010.png",
    ᐃᐃᐃΔᐃⵠⵠⲆᐃ: "img/night-river110-111-011.png",
    ᐃΔᐃⵠΔⲆΔⲆΔ: "img/night-river110-111-110.png",
    ΔⲆΔⵠᐃᐃΔΔᐃ: "img/night-river110-111-111.png",
    ⲆΔᐃⲆᐃᐃΔ: "img/night-river111-111-011.png",
    ᐃⲆⲆⲆΔⲆΔⵠⲆ: "img/night-river111-111-110.png",
    ⲆΔᐃⲆᐃᐃΔ: "img/night-river111-111-011.png",
    ΔⵠⲆΔⵠⲆΔⲆᐃ: "img/night-river111-111-000.png",
    ᐃᐃⵠⲆᐃᐃΔⲆⵠ: "img/night-river111-111-111.png",
    ⵠⲆⵠΔΔᐃΔΔⵠ: "img/night-river111-111-010.png",
    ΔΔⵠΔᐃⲆΔ: "img/day-pebblecompo1.png",
    ΔⲆᐃⲆⲆ: "img/day-pebblecompo2.png",
    ᐃⲆⲆⵠⵠ: "img/day-pebblecompo3.png",
    ΔᐃᐃⲆⵠⲆⲆ: "img/day-pebblecompo4.png",
    ΔⲆᐃⲆΔΔⲆ: "img/day-pebblecompo5.png",
    ⵠⲆΔⵠᐃⲆⵠ: "img/day-pebblecompo6.png",
    ⵠⲆⵠⲆⲆ: "img/day-pebblecompo7.png",
    ⲆᐃΔᐃᐃⵠᐃΔⲆ: "img/day-pebblecompo8.png",
    ᐃⵠⲆΔΔⲆᐃ: "img/day-pebblecompo9.png",
    ᐃΔΔⵠΔⲆⲆ: "img/day-pebblecompo10.png",
    Ⲇⵠᐃⵠⵠ: "img/day-pebblecompo11.png",
    ΔⲆΔⵠⵠᐃⲆ: "img/day-pebblecompo12.png",
    ᐃⵠⲆⲆⵠⲆⵠ: "img/day-pebblecompo13.png",
    ⵠΔΔΔΔⲆΔ: "img/day-pebblecompo14.png",
    ΔⲆᐃⵠⲆΔᐃ: "img/day-pebblecompo15.png",
    ᐃᐃⵠᐃᐃᐃⵠ: "img/day-pebblecompo16.png",
    ᐃⲆⲆⲆⲆ: "img/day-pebblecompo17.png",
    ᐃⵠᐃᐃᐃⵠᐃ: "img/day-pebblecompo18.png",
    ⲆⲆⲆΔⵠⵠΔ: "img/day-pebblecompo19.png",
    ⲆⵠⲆΔⵠ: "img/day-pebblecompo20.png",
    ᐃⲆⲆΔΔ: "img/day-pebblecompo21.png",
    ΔΔΔΔΔΔⵠ: "img/day-pebblecompo22.png",
    ⵠⲆᐃⵠⵠΔᐃ: "img/day-pebblecompo23.png",
    ᐃΔΔΔⲆⲆⲆ: "img/day-pebblecompo24.png",
    ΔΔⵠΔⵠ: "img/day-pebblecompo25.png",
    ᐃΔⵠᐃⲆ: "img/day-pebblecompo26.png",
    ⵠΔⲆᐃⲆⵠⵠ: "img/day-pebblecompo27.png",
    ᐃΔⲆⵠⲆ: "img/day-pebblecompo28.png",
    ᐃΔⵠᐃᐃᐃΔ: "img/night-pebblecompo1.png",
    ᐃΔⲆⵠᐃ: "img/night-pebblecompo2.png",
    ᐃΔᐃᐃⵠ: "img/night-pebblecompo3.png",
    ᐃᐃⵠⲆⲆⵠΔ: "img/night-pebblecompo4.png",
    ⵠΔⲆᐃᐃᐃⲆ: "img/night-pebblecompo5.png",
    ⲆⲆⵠⵠⵠᐃⵠ: "img/night-pebblecompo6.png",
    ⲆⲆΔᐃΔ: "img/night-pebblecompo7.png",
    ᐃⲆᐃΔⵠΔⵠᐃⵠ: "img/night-pebblecompo8.png",
    ⵠⲆΔⵠΔΔΔ: "img/night-pebblecompo9.png",
    ᐃᐃΔⲆⲆⵠᐃ: "img/night-pebblecompo10.png",
    ⵠᐃⵠⲆᐃ: "img/night-pebblecompo11.png",
    ⵠᐃⵠⲆΔΔⲆ: "img/night-pebblecompo12.png",
    ΔⲆⲆᐃⲆΔᐃ: "img/night-pebblecompo13.png",
    ⵠΔⲆΔᐃᐃΔ: "img/night-pebblecompo14.png",
    ⲆⲆᐃⵠⲆⵠⵠ: "img/night-pebblecompo15.png",
    ΔⲆⵠΔᐃΔⲆ: "img/night-pebblecompo16.png",
    ⲆΔᐃᐃⵠ: "img/night-pebblecompo17.png",
    ᐃᐃⲆⵠᐃⲆⵠ: "img/night-pebblecompo18.png",
    ⲆⲆΔⲆⲆⵠⲆ: "img/night-pebblecompo19.png",
    ΔᐃⲆΔⲆ: "img/night-pebblecompo20.png",
    ⵠΔⲆⵠᐃ: "img/night-pebblecompo21.png",
    ᐃⵠⲆΔᐃⵠᐃ: "img/night-pebblecompo22.png",
    ᐃΔᐃᐃⲆΔᐃ: "img/night-pebblecompo23.png",
    ᐃⵠᐃΔⵠⲆⲆ: "img/night-pebblecompo24.png",
    ⲆⵠⲆⵠΔ: "img/night-pebblecompo25.png",
    ΔⵠⲆⵠΔ: "img/night-pebblecompo26.png",
    ΔΔⲆⲆᐃⵠΔ: "img/night-pebblecompo27.png",
    ΔΔᐃᐃΔ: "img/night-pebblecompo28.png",
    ᐃᐃᐃⲆⲆᐃⲆΔΔ: "img/day-baby-mammoth.png",
    ⵠⲆⲆΔᐃᐃᐃⲆΔ: "img/day-baby-mammoth-tamed.png",
    ⵠᐃΔⵠⲆᐃᐃΔΔ: "img/day-baby-mammoth-angry.png",
    ᐃᐃⲆⲆΔΔⲆΔⵠ: "img/night-baby-mammoth.png",
    ᐃⵠΔᐃᐃᐃⲆⲆΔ: "img/night-baby-mammoth-tamed.png",
    ΔΔⲆⲆⲆΔⵠᐃⵠ: "img/night-baby-mammoth-angry.png",
    ᐃⵠΔⵠᐃⲆᐃⵠΔ: "img/inv-mammoth-out.png",
    ᐃᐃⲆⲆᐃⵠᐃΔᐃ: "img/inv-mammoth-in.png",
    ΔⵠᐃⵠᐃⵠᐃⲆⲆ: "img/inv-mammoth-click.png",
    ΔⲆⵠⵠⲆⲆⲆ: "img/hurt-baby-mammoth.png",
    ⲆΔⲆΔⵠⵠΔ: "img/baby-mammoth-step.png",
    ΔᐃᐃⲆⵠΔⵠⵠⵠ: "img/day-flower-hat.png",
    ⲆⵠΔᐃⲆᐃⵠⵠⵠ: "img/night-flower-hat.png",
    ᐃᐃᐃⲆⲆᐃⲆⲆⲆ: "img/inv-flower-hat-out.png",
    ΔⲆᐃᐃᐃⲆⲆΔⲆ: "img/inv-flower-hat-in.png",
    ᐃⲆⵠⲆⲆⲆΔⲆᐃ: "img/inv-flower-hat-click.png",
    ⵠΔⵠⲆΔⲆΔⲆᐃ: "img/day-fur-hat.png",
    ⲆⲆⲆΔΔᐃⵠΔᐃ: "img/night-fur-hat.png",
    ΔΔⲆᐃⲆᐃⵠⲆᐃ: "img/inv-fur-hat-out.png",
    ᐃΔᐃⵠΔⲆᐃΔⵠ: "img/inv-fur-hat-in.png",
    ᐃᐃⲆⵠⲆΔⵠⵠⲆ: "img/inv-fur-hat-click.png",
    ⵠᐃⲆΔⲆⵠⲆⵠⵠ: "img/day-mammoth.png",
    ⲆⲆΔⲆΔⵠⲆⲆⵠ: "img/night-mammoth.png",
    ⲆⵠᐃΔᐃⲆⵠ: "img/hurt-mammoth.png",
    ⲆⵠᐃⵠΔⵠᐃᐃⲆ: "img/inv-mammoth-fur-out.png",
    ᐃᐃⵠᐃⵠᐃᐃⲆΔ: "img/inv-mammoth-fur-in.png",
    ⵠΔⵠⲆᐃΔⲆᐃᐃ: "img/inv-mammoth-fur-click.png",
    ᐃᐃⲆᐃⲆⵠᐃⲆⵠ: "img/inv-wood-bow-out.png",
    ⲆΔᐃⵠΔᐃⵠⵠⲆ: "img/inv-wood-bow-in.png",
    ΔⵠⲆᐃⲆΔΔᐃⵠ: "img/inv-wood-bow-click.png",
    ᐃΔⵠᐃΔᐃⲆⵠⵠ: "img/inv-wood-arrow-out.png",
    ΔᐃⲆΔΔⲆⵠⵠⵠ: "img/inv-wood-arrow-in.png",
    ⵠⲆⲆΔΔⵠΔΔΔ: "img/inv-wood-arrow-click.png",
    ⲆΔᐃΔΔⲆⵠⲆᐃ: "img/day-wood-bow2.png",
    ᐃΔΔⲆΔⵠΔᐃΔ: "img/night-wood-bow2.png",
    ⲆΔⲆᐃΔΔΔ: "img/day-wood-arrow.png",
    ⲆΔΔΔᐃΔⲆ: "img/night-wood-arrow.png",
    ⵠΔⲆΔⵠᐃΔΔⵠ: "img/inv-stone-bow-out.png",
    ΔᐃⲆᐃᐃᐃⲆⲆᐃ: "img/inv-stone-bow-in.png",
    ⵠΔΔΔⲆⲆⲆⵠⵠ: "img/inv-stone-bow-click.png",
    ⵠⵠᐃᐃⵠΔⵠΔⵠ: "img/inv-stone-arrow-out.png",
    ⵠᐃⵠΔⵠᐃⲆⲆΔ: "img/inv-stone-arrow-in.png",
    ΔⵠΔⲆⲆⲆᐃⵠⲆ: "img/inv-stone-arrow-click.png",
    ⵠΔⵠᐃⲆΔᐃⵠΔ: "img/day-stone-bow.png",
    ᐃⲆⲆᐃⵠⵠΔⲆⵠ: "img/night-stone-bow.png",
    ⲆᐃⲆᐃΔⵠᐃ: "img/day-stone-arrow.png",
    ΔᐃΔⵠⲆⲆⵠ: "img/night-stone-arrow.png",
    ᐃΔⵠⵠΔΔⲆΔⵠ: "img/inv-gold-bow-out.png",
    ⲆⲆⲆᐃⵠΔΔⵠⲆ: "img/inv-gold-bow-in.png",
    ⲆΔΔⵠⲆⲆΔᐃΔ: "img/inv-gold-bow-click.png",
    ⲆⵠⲆⵠᐃᐃΔⲆΔ: "img/inv-gold-arrow-out.png",
    ⲆΔⵠⲆᐃⲆⲆⲆΔ: "img/inv-gold-arrow-in.png",
    ᐃᐃⲆⲆⵠΔᐃⲆⲆ: "img/inv-gold-arrow-click.png",
    ⲆᐃΔᐃΔⲆᐃᐃᐃ: "img/day-gold-bow.png",
    ᐃⵠⲆᐃΔΔⲆⵠᐃ: "img/night-gold-bow.png",
    ⲆⵠⵠΔⵠⵠⲆ: "img/day-gold-arrow.png",
    ⵠΔΔⲆᐃⲆΔ: "img/night-gold-arrow.png",
    ᐃᐃᐃᐃⲆΔⲆⲆᐃ: "img/inv-diamond-bow-out.png",
    ΔⵠΔⵠᐃᐃⵠⲆⲆ: "img/inv-diamond-bow-in.png",
    ⲆΔⲆᐃᐃΔⲆⵠᐃ: "img/inv-diamond-bow-click.png",
    ΔᐃᐃΔΔⲆΔⵠᐃ: "img/inv-diamond-arrow-out.png",
    ⵠΔΔⵠⵠΔⵠΔΔ: "img/inv-diamond-arrow-in.png",
    ᐃⵠᐃⲆᐃⲆⵠΔᐃ: "img/inv-diamond-arrow-click.png",
    ⵠΔⲆⲆⵠᐃⲆΔᐃ: "img/day-diamond-bow.png",
    ᐃⲆⲆⵠΔⵠᐃᐃⵠ: "img/night-diamond-bow.png",
    Ⲇᐃⵠᐃⵠᐃᐃ: "img/day-diamond-arrow.png",
    ⲆⵠΔⲆΔⵠΔ: "img/night-diamond-arrow.png",
    ᐃᐃⵠⲆⵠᐃΔⵠΔ: "img/inv-amethyst-bow-out.png",
    ΔᐃⵠᐃᐃᐃⵠⲆΔ: "img/inv-amethyst-bow-in.png",
    ⲆⲆⲆΔⲆᐃⵠⵠΔ: "img/inv-amethyst-bow-click.png",
    ⲆⲆⲆΔᐃⵠⵠΔᐃ: "img/inv-amethyst-arrow-out.png",
    ΔⵠⵠⲆⵠᐃᐃΔⲆ: "img/inv-amethyst-arrow-in.png",
    ⵠᐃⲆⲆⵠⵠⵠⲆⵠ: "img/inv-amethyst-arrow-click.png",
    ΔᐃⲆΔⵠᐃⲆΔⵠ: "img/day-amethyst-bow.png",
    ⵠⵠⵠΔᐃΔⵠᐃⲆ: "img/night-amethyst-bow.png",
    ⵠΔᐃⵠΔᐃⲆ: "img/day-amethyst-arrow.png",
    ΔⵠΔΔⲆⵠΔ: "img/night-amethyst-arrow.png",
    ⲆⲆⵠⵠⲆΔⲆⲆᐃ: "img/inv-dragon-bow-out.png",
    ΔᐃᐃΔⲆΔⲆⵠΔ: "img/inv-dragon-bow-in.png",
    ⲆΔΔⵠⲆⵠⵠᐃΔ: "img/inv-dragon-bow-click.png",
    ⲆⲆⲆⲆⵠΔΔΔΔ: "img/inv-dragon-arrow-out.png",
    ⲆⵠΔΔᐃᐃⲆⲆΔ: "img/inv-dragon-arrow-in.png",
    ⲆΔᐃΔⵠΔᐃΔⵠ: "img/inv-dragon-arrow-click.png",
    ᐃⵠΔᐃⵠᐃⲆᐃΔ: "img/day-dragon-bow.png",
    ⲆΔⲆᐃⲆΔΔΔⵠ: "img/night-dragon-bow.png",
    ⵠᐃⲆΔΔᐃⲆ: "img/day-dragon-arrow.png",
    ⲆⵠⲆΔⲆΔᐃ: "img/night-dragon-arrow.png",
    ⲆΔⵠⲆⲆⵠΔᐃⵠ: "img/inv-reidite-bow-out.png",
    ⵠⲆΔᐃᐃᐃⲆⲆⲆ: "img/inv-reidite-bow-in.png",
    ᐃⲆΔΔᐃⵠⵠⵠⵠ: "img/inv-reidite-bow-click.png",
    ᐃⵠᐃⵠΔⲆΔⵠⲆ: "img/inv-reidite-arrow-out.png",
    ᐃᐃΔⲆⲆΔⵠⵠᐃ: "img/inv-reidite-arrow-in.png",
    ⵠΔΔΔⲆⲆⵠⲆⲆ: "img/inv-reidite-arrow-click.png",
    ΔᐃΔⲆⲆᐃⵠⵠΔ: "img/day-reidite-bow.png",
    ⵠΔⲆⲆΔⲆⲆΔᐃ: "img/night-reidite-bow.png",
    ⲆⲆⲆⵠⵠⲆⵠ: "img/day-reidite-arrow.png",
    ⲆⵠⵠᐃⵠᐃΔΔᐃ: "img/night-reidite-arrow.png",
    ᐃΔⵠⵠΔᐃⲆᐃᐃ: "img/inv-wooden-axe-out.png",
    ⲆⲆΔⲆᐃⵠⵠⲆΔ: "img/inv-wooden-axe-in.png",
    ⵠⵠⵠⲆⲆⵠⵠΔⵠ: "img/inv-wooden-axe-click.png",
    ᐃⲆᐃᐃᐃᐃⵠⵠΔ: "img/day-wooden-axe.png",
    ⵠⲆᐃⵠΔⲆᐃΔⵠ: "img/night-wooden-axe.png",
    ⵠⵠΔᐃΔⵠᐃᐃⲆ: "img/inv-stone-axe-out.png",
    ⵠⵠᐃᐃᐃⵠᐃⵠⲆ: "img/inv-stone-axe-in.png",
    ⲆⲆⵠΔΔΔⵠᐃΔ: "img/inv-stone-axe-click.png",
    ΔⵠᐃⲆⵠⵠᐃⵠᐃ: "img/day-stone-axe.png",
    ⲆⵠᐃⵠⲆⵠⲆᐃⲆ: "img/night-stone-axe.png",
    ⵠⲆΔᐃᐃⵠⲆᐃᐃ: "img/inv-golden-axe-out.png",
    ⲆⵠᐃⲆᐃⲆⲆⲆⵠ: "img/inv-golden-axe-in.png",
    ⵠᐃΔᐃΔᐃⵠᐃⵠ: "img/inv-golden-axe-click.png",
    ⵠΔⲆᐃⵠⵠᐃⲆΔ: "img/day-golden-axe.png",
    ⲆⵠⲆᐃⵠⵠΔΔᐃ: "img/night-golden-axe.png",
    ⲆΔᐃᐃᐃΔⵠⲆᐃ: "img/inv-diamond-axe-out.png",
    ⲆⵠᐃᐃⵠⲆⲆⵠΔ: "img/inv-diamond-axe-in.png",
    ⲆΔᐃΔᐃΔⵠⵠⲆ: "img/inv-diamond-axe-click.png",
    ΔⵠΔⵠⵠΔΔΔΔ: "img/day-diamond-axe.png",
    ᐃΔⲆΔⲆⲆᐃᐃⲆ: "img/night-diamond-axe.png",
    ⵠᐃᐃΔⲆᐃⵠᐃᐃ: "img/inv-amethyst-axe-out.png",
    ⵠⵠⵠⲆⵠⲆⲆⲆᐃ: "img/inv-amethyst-axe-in.png",
    ΔΔⵠΔΔⲆΔΔⵠ: "img/inv-amethyst-axe-click.png",
    ᐃΔⵠΔᐃⲆⵠⲆΔ: "img/day-amethyst-axe.png",
    ⵠᐃⵠⵠⵠⵠΔⲆⲆ: "img/night-amethyst-axe.png",
    ᐃⲆⲆⲆⲆΔᐃⵠⲆ: "img/inv-reidite-axe-out.png",
    ΔᐃᐃᐃΔᐃΔᐃᐃ: "img/inv-reidite-axe-in.png",
    ᐃΔΔⲆⲆᐃΔΔⵠ: "img/inv-reidite-axe-click.png",
    ᐃᐃΔⲆΔⲆΔⵠᐃ: "img/day-reidite-axe.png",
    ⲆⲆⵠⲆⲆᐃᐃΔΔ: "img/night-reidite-axe.png",
    ᐃⵠΔΔⵠⲆΔᐃⲆ: "img/inv-emerald-axe-out.png",
    ΔⲆΔⵠΔⵠΔΔⵠ: "img/inv-emerald-axe-in.png",
    ⲆᐃᐃⲆᐃᐃΔⵠⵠ: "img/inv-emerald-axe-click.png",
    ᐃᐃⵠⲆΔᐃⵠⵠΔ: "img/day-emerald-axe.png",
    ⲆᐃΔᐃⵠⲆⵠⲆⵠ: "img/night-emerald-axe.png",
    ΔⵠⲆᐃΔⲆⲆΔⲆ: "img/inv-copper-axe-out.png",
    ᐃᐃⵠᐃᐃᐃⵠΔⵠ: "img/inv-copper-axe-in.png",
    ΔᐃᐃᐃⲆⲆΔΔⵠ: "img/inv-copper-axe-click.png",
    ΔΔⵠΔⵠⲆᐃⵠΔ: "img/day-copper-axe.png",
    ᐃᐃⵠΔⵠᐃᐃΔⵠ: "img/night-copper-axe.png",
    ⲆⵠⲆᐃⲆΔⵠᐃⵠ: "img/inv-iron-axe-out.png",
    ⵠⵠⲆⲆΔⵠⵠⵠⵠ: "img/inv-iron-axe-in.png",
    ΔⲆᐃⵠⲆΔⲆΔΔ: "img/inv-iron-axe-click.png",
    ⲆΔᐃⵠᐃⵠⵠⵠΔ: "img/day-iron-axe.png",
    ⵠᐃᐃΔⲆⵠⲆⵠΔ: "img/night-iron-axe.png",
    ΔⵠⵠΔⲆⵠⲆΔΔ: "img/inv-topaz-axe-out.png",
    ⲆᐃⵠⲆⵠⵠⵠΔⵠ: "img/inv-topaz-axe-in.png",
    ⲆⲆⲆᐃᐃΔΔⵠⵠ: "img/inv-topaz-axe-click.png",
    ⲆᐃΔⲆᐃⵠⲆⲆΔ: "img/day-topaz-axe.png",
    ⲆⵠⲆᐃⲆᐃΔⲆᐃ: "img/night-topaz-axe.png",
    ᐃΔᐃΔᐃⲆⵠⲆΔ: "img/inv-sapphire-axe-out.png",
    ᐃΔⲆΔⲆⵠⵠⵠⵠ: "img/inv-sapphire-axe-in.png",
    ΔⵠⲆᐃⵠⲆΔΔⲆ: "img/inv-sapphire-axe-click.png",
    ⲆΔΔΔᐃΔⵠⵠⲆ: "img/day-sapphire-axe.png",
    ⲆΔᐃᐃⲆⲆⵠΔΔ: "img/night-sapphire-axe.png",
    ΔᐃΔᐃᐃΔᐃⵠΔ: "img/inv-jade-axe-out.png",
    ΔᐃⲆΔⲆΔⵠᐃᐃ: "img/inv-jade-axe-in.png",
    ΔⲆΔᐃⵠΔⲆΔⲆ: "img/inv-jade-axe-click.png",
    ΔΔΔΔⵠᐃⲆΔΔ: "img/day-jade-axe.png",
    ΔΔⲆΔⲆⵠᐃⲆᐃ: "img/night-jade-axe.png",
    ⲆⲆΔⵠⲆⲆΔⵠⲆ: "img/inv-ruby-axe-out.png",
    ⲆⵠᐃⵠΔᐃΔᐃⲆ: "img/inv-ruby-axe-in.png",
    ⵠⲆⵠⲆⵠΔⵠⵠΔ: "img/inv-ruby-axe-click.png",
    ΔᐃⲆΔΔⵠᐃΔⵠ: "img/day-ruby-axe.png",
    ⵠΔᐃΔⵠⲆⵠⵠⵠ: "img/night-ruby-axe.png",
    ⵠⵠΔᐃΔⲆⲆⵠⵠ: "img/inv-coal-axe-out.png",
    ⲆᐃⲆΔⵠⵠΔⵠΔ: "img/inv-coal-axe-in.png",
    ΔᐃⲆⵠⲆⲆⵠᐃⵠ: "img/inv-coal-axe-click.png",
    ᐃᐃΔⵠⵠᐃΔⲆⲆ: "img/day-coal-axe.png",
    ᐃⲆⵠⵠΔⵠⲆⲆⲆ: "img/night-coal-axe.png",
    ΔΔⵠΔⲆΔⵠᐃⵠ: "img/inv-aquamarine-axe-out.png",
    ᐃΔⵠᐃᐃΔⵠⲆΔ: "img/inv-aquamarine-axe-in.png",
    ⲆⵠⲆᐃᐃⵠⵠᐃⲆ: "img/inv-aquamarine-axe-click.png",
    ΔΔⵠΔⵠⵠΔⲆⵠ: "img/day-aquamarine-axe.png",
    ⵠᐃⵠΔΔⵠΔΔΔ: "img/night-aquamarine-axe.png",
    ᐃⲆⵠᐃᐃⵠⵠ: "img/bandage-activated.png",
    ᐃᐃⲆΔⵠⵠⵠ: "img/auto-feed.png",
    ⲆⲆΔⲆᐃΔⲆ: "img/stop-regeneration.png",
    ⵠΔⲆⲆⲆⲆᐃ: "img/stop-regeneration2.png",
    ᐃⵠᐃΔᐃⲆⵠᐃΔ: "img/day-wood-platform.png",
    ᐃᐃΔᐃᐃᐃⲆΔΔ: "img/night-wood-platform.png",
    ᐃⲆᐃⲆᐃΔᐃⲆᐃ: "img/inv-wood-platform-in.png",
    ⲆⵠⵠᐃᐃⵠΔⲆⵠ: "img/inv-wood-platform-out.png",
    ⲆᐃΔⲆΔᐃΔᐃⲆ: "img/inv-wood-platform-click.png",
    ᐃⵠᐃⲆΔᐃⲆΔⲆ: "img/day-wood-shield.png",
    ⵠᐃⵠⲆΔᐃⲆⵠⵠ: "img/night-wood-shield.png",
    ΔⵠᐃⲆⵠⲆⵠⲆᐃ: "img/day-stone-shield.png",
    ΔΔΔⲆᐃⵠᐃΔᐃ: "img/night-stone-shield.png",
    ΔⲆⲆⲆⲆⲆᐃⵠⵠ: "img/day-gold-shield.png",
    ⵠⲆΔᐃᐃΔᐃⵠΔ: "img/night-gold-shield.png",
    ⲆⵠΔⲆⵠⲆⲆᐃᐃ: "img/day-diamond-shield.png",
    ᐃⵠⵠⵠᐃᐃⲆⵠⵠ: "img/night-diamond-shield.png",
    ⲆⲆΔⵠᐃⵠᐃⵠΔ: "img/day-amethyst-shield.png",
    ⵠᐃⵠⵠᐃΔᐃⵠⲆ: "img/night-amethyst-shield.png",
    ⲆᐃⲆΔΔᐃΔⲆⵠ: "img/day-reidite-shield.png",
    ᐃᐃⵠⵠΔΔⲆᐃᐃ: "img/night-reidite-shield.png",
    ⲆᐃⵠⵠⲆⲆⲆᐃΔ: "img/inv-wood-shield-in.png",
    ⵠᐃⵠΔᐃᐃΔⲆⵠ: "img/inv-wood-shield-out.png",
    ΔⲆΔΔⲆⲆΔᐃΔ: "img/inv-wood-shield-click.png",
    ⵠⲆᐃᐃⵠⵠΔⵠⲆ: "img/inv-stone-shield-in.png",
    ΔᐃⵠⲆᐃⲆΔⵠᐃ: "img/inv-stone-shield-out.png",
    ΔⵠⵠᐃᐃⵠᐃⲆⲆ: "img/inv-stone-shield-click.png",
    ⵠᐃⵠᐃᐃᐃΔⵠⵠ: "img/inv-gold-shield-in.png",
    ⵠᐃⵠΔⵠⵠΔⵠⲆ: "img/inv-gold-shield-out.png",
    ΔⵠᐃⵠᐃⲆΔΔⲆ: "img/inv-gold-shield-click.png",
    ᐃΔⵠΔΔⵠⲆⲆⵠ: "img/inv-diamond-shield-in.png",
    ΔΔΔΔᐃᐃΔᐃⲆ: "img/inv-diamond-shield-out.png",
    ᐃⲆΔⵠⵠᐃⲆⲆΔ: "img/inv-diamond-shield-click.png",
    ⵠⲆⵠΔⲆⵠᐃᐃⲆ: "img/inv-amethyst-shield-in.png",
    ᐃⵠⵠΔᐃⲆⵠⵠΔ: "img/inv-amethyst-shield-out.png",
    ⲆᐃⲆᐃⲆⲆⵠⵠᐃ: "img/inv-amethyst-shield-click.png",
    ᐃΔⲆΔᐃⲆᐃᐃΔ: "img/inv-reidite-shield-in.png",
    ⵠᐃᐃⵠΔⲆΔΔⲆ: "img/inv-reidite-shield-out.png",
    ⲆⵠⵠⲆⵠⵠⲆᐃΔ: "img/inv-reidite-shield-click.png",
    ⲆⵠⵠⵠⲆΔΔΔⵠ: "img/day-machete.png",
    ⲆᐃΔⲆᐃᐃⵠⵠⵠ: "img/night-machete.png",
    ⲆΔᐃᐃⲆⵠⵠΔΔ: "img/inv-machete-in.png",
    ᐃⲆⵠΔⲆᐃⵠⵠΔ: "img/inv-machete-out.png",
    ⵠⲆΔΔⵠΔⲆⵠᐃ: "img/inv-machete-click.png"
  };
  ⲆⲆⵠᐃⵠᐃⲆ = [{}];
  ⲆⲆⵠᐃⵠᐃⲆ[0].stringify = function (p536) {
    var v814 = new Uint8Array(new ArrayBuffer(p536.length));
    for (var v815 = 0; p536.length > v815; v815++) {
      v814[v815] = p536[v815];
    }
    return v814;
  };
  ⲆⲆⵠⲆⵠⵠΔ = {};
  ⵠⲆⲆᐃᐃⵠⲆⲆⲆ = {};
  const v816 = 100;
  for (var v817 in ⵠᐃ) {
    ⲆⲆⵠⲆⵠⵠΔ[v817] = ⵠᐃ[v817];
  }
  function f83(p537, p538, p539) {
    v92(v802, p537, p538, p539);
    const vVp2 = f504(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    const vF41 = function (p540, p541, p542) {
      v79(v802, p540, p541, p542);
      const vF69 = f69(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1]);
      f530(vVVVVVUndefined8232[2], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[0]);
      return ~(vF69 & 22328) & vF69 | ~(vF69 & 22328) & 22328;
    }(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    return (24 << ((vVp2 ^ vF41) >> 16 & 255)) + (8 << ((vVp2 ^ vF41) >> 8 & 255)) + (0 << ((vVp2 ^ vF41) >> 24 & 255)) + (16 << ((vVp2 ^ vF41) & 255));
  }
  const v818 = 1;
  function f84(p543, p544, p545, p546, p547) {
    const v819 = (16 << (p543 >> 24 & 255)) + (0 << (p543 >> 8 & 255)) + (24 << (p543 >> 16 & 255)) + (8 << (p543 & 255));
    const v820 = p544 ^ 50535;
    const v821 = (8 << (p545 >> 16 & 255)) + (16 << (p545 >> 8 & 255)) + (0 << (p545 >> 24 & 255)) + (24 << (p545 & 255));
    const v822 = (16 << (p547 >> 16 & 255)) + (24 << (p547 >> 24 & 255)) + (8 << (p547 >> 8 & 255)) + (0 << (p547 & 255));
    return (2147483587 + (20464 + (f498(v819, v820, v821, (p546 | 47932) & ~(p546 & 47932)) ^ f498(v822, v819, v820, v821))) * 2147483629) % 2147483647;
  }
  const v823 = 12;
  ΔΔ = [];
  ⵠᐃⵠ = {};
  ⵠᐃⵠ.ⵠᐃⲆᐃᐃ = 0;
  const v824 = 2;
  ⵠᐃⵠ.ⵠⵠᐃΔ = 1;
  ⵠᐃⵠ.ⵠⵠⲆⲆ = 2;
  ⵠᐃⵠ.ⵠᐃⵠᐃ = 3;
  ⵠᐃⵠ.ⵠᐃⲆⵠ = 4;
  const v825 = 12;
  ⵠᐃⵠ.ΔⲆⵠΔ = 5;
  ⵠᐃⵠ.ᐃΔᐃΔ = 6;
  ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ = 7;
  const v826 = 10;
  ⵠᐃⵠ.ᐃⵠⲆⲆᐃ = 8;
  ᐃⵠᐃⵠ = {};
  const v827 = 1;
  ΔᐃΔΔ = [];
  ⲆᐃΔⲆΔⲆΔ = function (p548, p549) {
    for (var v828 = 0; v828 < p548.length; v828++) {
      if (p548[v828].id === p549) {
        return v828;
      }
    }
    return -1;
  };
  var v829 = [];
  function f85(p550, p551, p552, p553) {
    var v830 = ΔᐃΔΔ[p550];
    if (vVUndefined !== v830) {
      for (var v831 = 0; v831 < 2; v831++) {
        var v832 = v830[p551][v831];
        var v833 = p553 * 193 / v2884.ⵠⲆⵠΔᐃ;
        var v834 = p552 * 193 / v2884.ⲆⲆΔⵠⲆ;
        var v835 = v832.width / 3.5;
        var v836 = v832.height / 3.5;
        ΔΔ[1067][v831].drawImage(v832, v833 - v835 / 2, v834 - v836 / 2, v835, v836);
        v833 = p553 * 600 / v2884.ⵠⲆⵠΔᐃ;
        v834 = p552 * 600 / v2884.ⲆⲆΔⵠⲆ;
        v835 = v832.width / 1.5;
        v836 = v832.height / 1.5;
        ΔΔ[1068][v831].drawImage(v832, v833 - v835 / 2, v834 - v836 / 2, v835, v836);
      }
    }
  }
  function f86(p554, p555) {
    for (var v837 = 0; v829.length > v837; v837 += p555) {
      var v838 = v829[v837];
      if (p554 === v838[0]) {
        f85(v838[0], v838[1], v838[2], v838[3]);
      }
    }
  }
  function f87(p556, p557, p558, p559, p560, p561) {
    if (p561 * 2 > p559) {
      p561 = p559 / 2;
    }
    if (p561 * 2 > p560) {
      p561 = p560 / 2;
    }
    if (p561 < 0) {
      p561 = 0;
    }
    p556.beginPath();
    p556.moveTo(p557 + p561, p558);
    p556.arcTo(p557 + p559, p558, p557 + p559, p558 + p560, p561);
    p556.arcTo(p557 + p559, p558 + p560, p557, p558 + p560, p561);
    p556.arcTo(p557, p558 + p560, p557, p558, p561);
    p556.arcTo(p557, p558, p557 + p559, p558, p561);
    p556.closePath();
  }
  function f88(p562, p563, p564, p565) {
    var v839 = Math.PI * 2 / p563;
    p562.beginPath();
    var v840 = [{
      x: p564,
      y: 0
    }];
    var v841 = [];
    for (var v842 = 1; p563 > v842; v842++) {
      v840.push({
        x: p564 * Math.sin(v842 * v839),
        y: Math.cos(v842 * v839) * p564
      });
      var v843 = v840.length;
      v841.push(ⵠⲆⲆ.ⵠᐃᐃⲆΔΔⲆ(v840[v843 - 2], v840[v843 - 1]));
    }
    v841.push(ⵠⲆⲆ.ⵠᐃᐃⲆΔΔⲆ(v840[v840.length - 1], v840[0]));
    var v844 = v841[v841.length - 1];
    p562.moveTo(v844.x, v844.y);
    for (v842 = 0; p563 > v842; v842++) {
      p562.arcTo(v840[v842].x, v840[v842].y, v841[v842].x, v841[v842].y, p565);
    }
    p562.closePath();
  }
  function f89(p566, p567, p568, p569, p570) {
    p566.beginPath();
    p566.lineCap = "round";
    p566.arc(p567, p568, p569, 0, p570 * (Math.PI * 2));
  }
  function f90(p571, p572, p573, p574) {
    if (p572) {
      p571.fillStyle = p572;
      p571.fill();
    }
    if (p573) {
      p571.lineWidth = p574;
      p571.strokeStyle = p573;
      p571.stroke();
    }
  }
  function f91(p575, p576, p577) {
    var v845 = document.createElement("canvas");
    var v846 = v845.getContext("2d");
    v845.width = p575 * 264;
    v845.height = p575 * 246;
    v846.translate(0, p575 * 10);
    v846.globalAlpha = p576 ? 0.5 : 1;
    v846.beginPath();
    v846.lineCap = "round";
    v846.lineJoin = "round";
    v846.moveTo(p575 * 75, p575 * 54);
    v846.bezierCurveTo(p575 * 79, p575 * 21, p575 * 131, p575 * 13, p575 * 153, p575 * 36);
    v846.bezierCurveTo(p575 * 204, p575 * 27, p575 * 221, p575 * 52, p575 * 216, p575 * 83);
    v846.bezierCurveTo(p575 * 241, p575 * 103, p575 * 232, p575 * 138, p575 * 214, p575 * 147);
    v846.bezierCurveTo(p575 * 223, p575 * 184, p575 * 201, p575 * 200, p575 * 175, p575 * 199);
    v846.bezierCurveTo(p575 * 156, p575 * 218, p575 * 135, p575 * 222, p575 * 114, p575 * 203);
    v846.bezierCurveTo(p575 * 62, p575 * 213, p575 * 66, p575 * 189, p575 * 59, p575 * 170);
    v846.bezierCurveTo(p575 * 27, p575 * 164, p575 * 31, p575 * 134, p575 * 38, p575 * 123);
    v846.bezierCurveTo(p575 * 11, p575 * 80, p575 * 51, p575 * 52, p575 * 75, p575 * 54);
    v846.closePath();
    f90(v846, p577[0]);
    v846.translate(0, p575 * -10);
    v846.globalAlpha = 1;
    v846.beginPath();
    v846.lineCap = "round";
    v846.lineJoin = "round";
    v846.moveTo(p575 * 75, p575 * 54);
    v846.bezierCurveTo(p575 * 79, p575 * 21, p575 * 131, p575 * 13, p575 * 153, p575 * 36);
    v846.bezierCurveTo(p575 * 204, p575 * 27, p575 * 221, p575 * 52, p575 * 216, p575 * 83);
    v846.bezierCurveTo(p575 * 241, p575 * 103, p575 * 232, p575 * 138, p575 * 214, p575 * 147);
    v846.bezierCurveTo(p575 * 223, p575 * 184, p575 * 201, p575 * 200, p575 * 175, p575 * 199);
    v846.bezierCurveTo(p575 * 156, p575 * 218, p575 * 135, p575 * 222, p575 * 114, p575 * 203);
    v846.bezierCurveTo(p575 * 62, p575 * 213, p575 * 66, p575 * 189, p575 * 59, p575 * 170);
    v846.bezierCurveTo(p575 * 27, p575 * 164, p575 * 31, p575 * 134, p575 * 38, p575 * 123);
    v846.bezierCurveTo(p575 * 11, p575 * 80, p575 * 51, p575 * 52, p575 * 75, p575 * 54);
    v846.closePath();
    f90(v846, p577[1], p577[2], p575 * 8);
    v846.beginPath();
    v846.lineCap = "round";
    v846.lineJoin = "round";
    v846.moveTo(p575 * 121, p575 * 102);
    v846.bezierCurveTo(p575 * 111, p575 * 80, p575 * 110, p575 * 66, p575 * 108, p575 * 51);
    v846.bezierCurveTo(p575 * 119, p575 * 65, p575 * 129, p575 * 85, p575 * 135, p575 * 99);
    v846.bezierCurveTo(p575 * 142, p575 * 67, p575 * 146, p575 * 60, p575 * 152, p575 * 50);
    v846.bezierCurveTo(p575 * 154, p575 * 71, p575 * 152, p575 * 85, p575 * 149, p575 * 104);
    v846.bezierCurveTo(p575 * 166, p575 * 88, p575 * 175, p575 * 83, p575 * 188, p575 * 78);
    v846.bezierCurveTo(p575 * 179, p575 * 91, p575 * 170, p575 * 103, p575 * 160, p575 * 112);
    v846.bezierCurveTo(p575 * 186, p575 * 107, p575 * 191, p575 * 107, p575 * 204, p575 * 108);
    v846.bezierCurveTo(p575 * 195, p575 * 114, p575 * 179, p575 * 120, p575 * 163, p575 * 123);
    v846.bezierCurveTo(p575 * 183, p575 * 130, p575 * 186, p575 * 135, p575 * 192, p575 * 140);
    v846.bezierCurveTo(p575 * 179, p575 * 141, p575 * 164, p575 * 139, p575 * 153, p575 * 135);
    v846.bezierCurveTo(p575 * 158, p575 * 145, p575 * 163, p575 * 159, p575 * 165, p575 * 177);
    v846.bezierCurveTo(p575 * 154, p575 * 166, p575 * 145, p575 * 153, p575 * 138, p575 * 139);
    v846.bezierCurveTo(p575 * 133, p575 * 155, p575 * 125, p575 * 170, p575 * 117, p575 * 182);
    v846.bezierCurveTo(p575 * 116, p575 * 160, p575 * 119, p575 * 151, p575 * 124, p575 * 138);
    v846.bezierCurveTo(p575 * 107, p575 * 150, p575 * 95, p575 * 156, p575 * 82, p575 * 159);
    v846.bezierCurveTo(p575 * 94, p575 * 140, p575 * 101, p575 * 136, p575 * 113, p575 * 128);
    v846.bezierCurveTo(p575 * 78, p575 * 123, p575 * 75, p575 * 121, p575 * 67, p575 * 118);
    v846.bezierCurveTo(p575 * 85, p575 * 112, p575 * 94, p575 * 112, p575 * 111, p575 * 113);
    v846.bezierCurveTo(p575 * 89, p575 * 97, p575 * 85, p575 * 93, p575 * 78, p575 * 82);
    v846.bezierCurveTo(p575 * 92, p575 * 85, p575 * 101, p575 * 90, p575 * 121, p575 * 102);
    v846.closePath();
    f90(v846, p577[2]);
    v846.beginPath();
    v846.lineCap = "round";
    v846.lineJoin = "round";
    v846.moveTo(p575 * 128, p575 * 103);
    v846.bezierCurveTo(p575 * 111, p575 * 112, p575 * 117, p575 * 136, p575 * 140, p575 * 130);
    v846.bezierCurveTo(p575 * 151, p575 * 126, p575 * 156, p575 * 115, p575 * 155, p575 * 107);
    v846.bezierCurveTo(p575 * 155, p575 * 96, p575 * 154, p575 * 94, p575 * 148, p575 * 94);
    v846.bezierCurveTo(p575 * 141, p575 * 94, p575 * 146, p575 * 104, p575 * 136, p575 * 104);
    v846.closePath();
    f90(v846, p577[3], p577[4], p575 * 4);
    return v845;
  }
  function f92(p578, p579) {
    var v847 = document.createElement("canvas");
    var v848 = v847.getContext("2d");
    var v849 = Math.floor(p578 * 28);
    var v850 = Math.floor(p578 * 20);
    v848.font = v850 + "px Baloo Paaji";
    var v851 = p578 * 8;
    var v852 = v848.measureText(p579).width + v851 * 2;
    v847.width = v852;
    v847.height = v849;
    f87(v848, 0, 0, v852, v849, p578 * 10);
    v848.globalAlpha = 0.5;
    f90(v848, "#000");
    v848.globalAlpha = 1;
    v848.textBaseline = "middle";
    v848.font = v850 + "px Baloo Paaji";
    v848.beginPath();
    v848.fillStyle = "#FFF";
    v848.fillText(p579, v851, v849 / 2);
    return v847;
  }
  function f93(p580, p581, p582, p583) {
    p580.beginPath();
    p580.arc(p581, p582, p583, 0, Math.PI * 2);
  }
  function f94(p584, p585) {
    var v853 = document.createElement("canvas");
    var v854 = v853.getContext("2d");
    var v855 = p584 * 120;
    var v856 = p584 * 110;
    var v857 = v855 / 2;
    var v858 = v856 / 2;
    var v859 = p584 * 20;
    var v860 = p584 * 112;
    var v861 = p584 * 82;
    var v862 = v860 / 2;
    var v863 = v861 / 2;
    var v864 = p584 * 4;
    v853.width = v855;
    v853.height = v856;
    v854.globalAlpha = 1;
    v854.translate(v857, v858);
    f87(v854, -v862, -v863, v860, v861, v859);
    f90(v854, p585, p585, v864);
    return v853;
  }
  function f95(p586, p587) {
    var v865 = document.createElement("canvas");
    var v866 = v865.getContext("2d");
    var v867 = Math.sqrt(p587.width * p587.width + p587.height * p587.height);
    d2 = v867 / 2;
    v865.width = v867;
    v865.height = v867;
    v866.translate(d2, d2);
    v866.rotate(p586);
    v866.drawImage(p587, -p587.width / 2, -p587.height / 2);
    return v865;
  }
  ⲆΔᐃᐃⲆⵠⵠⲆⲆ = function () {
    for (var v868 = 0; v868 < 2; v868++) {
      ΔΔ[1067][v868].clearRect(0, 0, 193, 193);
      ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.MAP[v868], 0, 0, 193, 193);
      ΔΔ[1068][v868].clearRect(0, 0, 600, 600);
      ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.MAP[v868], 0, 0, 600, 600);
      for (var v869 = v2884.ⵠΔⵠᐃ.length - 1; v869 >= 0; v869--) {
        var v870 = v2884.ⵠΔⵠᐃ[v869];
        var v871 = v870.x1 * 193 / (v2884.ⵠⲆⵠΔᐃ * 100);
        var v872 = v870.y1 * 193 / (v2884.ⲆⲆΔⵠⲆ * 100);
        var v873 = v870.w * 193 / (v2884.ⵠⲆⵠΔᐃ * 100);
        var v874 = v870.ΔᐃⲆ * 193 / (v2884.ⲆⲆΔⵠⲆ * 100);
        var v875 = v870.x1 * 600 / (v2884.ⵠⲆⵠΔᐃ * 100);
        var v876 = v870.y1 * 600 / (v2884.ⲆⲆΔⵠⲆ * 100);
        var v877 = v870.w * 600 / (v2884.ⵠⲆⵠΔᐃ * 100);
        var v878 = v870.ΔᐃⲆ * 600 / (v2884.ⲆⲆΔⵠⲆ * 100);
        if (v870.Δᐃⵠ === v2884.ΔⲆⵠΔᐃᐃᐃ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.FOREST[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.FOREST[v868], v875, v876, v877, v878);
        }
        if (v870.Δᐃⵠ === v2884.ⲆⵠⵠⲆᐃⵠᐃ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.JUNGLE[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.JUNGLE[v868], v875, v876, v877, v878);
        }
        if (v870.Δᐃⵠ === v2884.ΔΔⲆⲆᐃⵠⲆ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.WINTER[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.WINTER[v868], v875, v876, v877, v878);
        }
        if (v2884.ᐃⲆⵠⵠᐃΔᐃ === v870.Δᐃⵠ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.LAVA[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.LAVA[v868], v875, v876, v877, v878);
        }
        if (v2884.ⵠᐃᐃᐃᐃΔᐃ === v870.Δᐃⵠ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.CAVE[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.CAVE[v868], v875, v876, v877, v878);
        }
        if (v2884.ᐃⲆᐃⵠⵠᐃⲆ === v870.Δᐃⵠ) {
          ΔΔ[1067][v868].drawImage(ΔᐃΔΔ.DESERT[v868], v871, v872, v873, v874);
          ΔΔ[1068][v868].drawImage(ΔᐃΔΔ.DESERT[v868], v875, v876, v877, v878);
        }
      }
    }
  };
  ΔⲆᐃᐃᐃⲆᐃⲆᐃ = function () {
    ᐃⵠᐃⵠ = {
      ⵠⲆⲆⲆⵠ: [{
        id: 0,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠᐃΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠⵠⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆⵠᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⲆᐃᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Starver"
      }, {
        id: 3,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃⲆᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔΔⵠΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⵠⲆⲆᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔᐃΔⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Angry"
      }, {
        id: 2,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆⵠⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃⲆΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠᐃⲆⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆᐃΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Sad"
      }, {
        id: 9,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆΔΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃⵠⵠΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃⲆⵠⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Happy 1"
      }, {
        id: 1,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔᐃᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠⵠⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⵠⲆΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔᐃⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "What?"
      }, {
        id: 4,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆᐃΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃᐃΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃⲆⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆᐃΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Suspicious"
      }, {
        id: 5,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆᐃᐃΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃΔᐃᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔᐃⲆⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Scar"
      }, {
        id: 6,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆΔⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⲆⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆΔⲆΔⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃᐃⵠⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "In Trouble"
      }, {
        id: 7,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔΔⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔΔⵠΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆᐃⵠⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⵠΔⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Cute"
      }, {
        id: 8,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⵠⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃⵠⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⲆⲆᐃΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃᐃᐃΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bored 1"
      }, {
        id: 10,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⲆⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆⵠΔⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⲆᐃⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⲆᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Happy 2"
      }, {
        id: 11,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔᐃⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠΔⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⲆⲆᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⵠⵠΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Crazy"
      }, {
        id: 12,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆⲆⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⲆⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⵠⲆΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Happy 3"
      }, {
        id: 13,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃΔᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆΔΔΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠΔⵠᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Very Cute"
      }, {
        id: 14,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆᐃⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠᐃⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆᐃⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃΔᐃᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Curious"
      }, {
        id: 15,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆᐃⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃᐃΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⵠᐃΔⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⲆᐃᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bored 2"
      }, {
        id: 16,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆΔΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃΔⲆᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠᐃΔΔᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠⲆⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Happy 4"
      }, {
        id: 17,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⵠΔⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⲆⲆᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⲆⲆⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃᐃΔⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Scar 2"
      }, {
        id: 18,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃⲆⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃᐃⵠⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔⲆΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Sick"
      }, {
        id: 19,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃᐃᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆᐃⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⵠⲆΔᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⲆⲆΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Somnambule"
      }, {
        id: 24,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃΔΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃΔⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⲆᐃⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆΔᐃᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Pixelbitie",
        name: "Feel Bad"
      }, {
        id: 23,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃΔⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠᐃⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⵠⵠⵠᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆⵠⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Pixelbitie",
        name: "Mmmh."
      }, {
        id: 103,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆΔⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆⲆᐃᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆΔΔⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠΔⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Panic"
      }, {
        id: 105,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃᐃⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃⲆⵠΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆᐃΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃΔᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Hypnotic"
      }, {
        id: 106,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆΔⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠᐃᐃⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆⵠⲆᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⲆᐃⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Stars in the eyes"
      }, {
        id: 220,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆⲆᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃⲆΔⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃᐃΔⵠΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃᐃⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Seams"
      }, {
        id: 239,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃΔΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆΔⵠⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃⲆᐃⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔⵠΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Wooden Door"
      }, {
        id: 104,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃⲆⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃⲆⵠⵠⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠΔⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Scared at night"
      }, {
        id: 20,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠᐃᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆΔΔΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆΔⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆᐃⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Vampire"
      }, {
        id: 21,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⵠΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔᐃᐃⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⲆⵠᐃⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Zombie"
      }, {
        id: 22,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔᐃΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠⵠᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆΔⵠΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⲆⵠᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Pixelbitie",
        name: "Devaster"
      }, {
        id: 116,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔⵠⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃⲆⲆⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔᐃⵠⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Fukss",
        name: "Dead Devaster"
      }, {
        id: 27,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔⵠⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆΔⵠⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃⲆⲆⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Winter",
        name: "Cactus"
      }, {
        id: 28,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔᐃᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆᐃⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⵠⵠΔⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔΔⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Bee"
      }, {
        id: 49,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆⵠΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⵠᐃᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔΔⲆⲆΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆⵠⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Taco4Life",
        name: "Camo Skin"
      }, {
        id: 58,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃⵠⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃΔΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⲆᐃⲆᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆⵠⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Blue Limax Skin"
      }, {
        id: 59,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⲆⲆΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⵠΔᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔΔΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠᐃΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Red Limax Skin"
      }, {
        id: 94,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⲆᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠⲆⵠⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔᐃᐃⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⵠⲆⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Pumpkin"
      }, {
        id: 109,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠⲆΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔΔᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔᐃΔΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Wood"
      }, {
        id: 114,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃᐃⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⲆᐃⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⵠⲆⲆⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆΔΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Zebra"
      }, {
        id: 120,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⵠΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠⲆΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⲆΔᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⵠⲆΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "CrysTal",
        name: "Tiger"
      }, {
        id: 134,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃΔⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠΔΔⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆΔᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃᐃⵠᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Franchestcreator",
        name: "Day or Night"
      }, {
        id: 135,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔⵠᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃⲆⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⲆΔᐃⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⵠᐃᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Poinet",
        name: "Square Starver"
      }, {
        id: 136,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⵠⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠΔⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃΔⲆⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⲆΔᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Voodoo Doll"
      }, {
        id: 137,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠᐃΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆⵠⵠᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔΔΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Frankenstein"
      }, {
        id: 138,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔⲆⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔΔⲆⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⲆⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⲆᐃᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Mummy"
      }, {
        id: 139,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⵠⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠⲆᐃⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠᐃⵠᐃⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⵠⲆΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Werewolf"
      }, {
        id: 140,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃⲆᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⵠⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆᐃⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔⵠⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Cthulhu"
      }, {
        id: 141,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃⵠΔᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃᐃᐃΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔⲆⲆᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠΔⵠⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Sea Man"
      }, {
        id: 142,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆⲆⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔΔΔᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.Δᐃᐃᐃⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔⲆΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Pumpkin"
      }, {
        id: 148,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠΔᐃᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠΔΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⵠᐃᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃᐃⲆⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Snowman"
      }, {
        id: 149,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⲆⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔⵠᐃΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⵠΔΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔΔΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Christmas Tree Man"
      }, {
        id: 150,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃᐃⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠᐃⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆⲆΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃΔⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Mrs Bell"
      }, {
        id: 151,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆΔᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃⵠΔΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔᐃΔᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Elfy"
      }, {
        id: 152,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⲆⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃΔⵠΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠΔⵠⲆⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃᐃΔᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Mr Present"
      }, {
        id: 153,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃᐃΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠᐃⵠⲆΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⲆⵠΔΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⵠⵠⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "My Dear Old Deer"
      }, {
        id: 154,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃᐃⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⵠΔΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⵠⵠᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr Angel"
      }, {
        id: 155,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔΔᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠⵠΔᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃᐃⲆΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆΔᐃᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr Ice Cube"
      }, {
        id: 156,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆᐃᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠΔⵠᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠΔᐃⵠⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⲆΔᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr Snowman"
      }, {
        id: 159,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔᐃⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔᐃᐃΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃⵠΔⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠΔᐃⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "CrysTal",
        name: "Crystal Sky Skin"
      }, {
        id: 167,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃΔΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃΔⲆΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⲆΔΔᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔΔᐃⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Franchestcreator",
        name: "Radioactive Starver"
      }, {
        id: 169,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⵠᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔᐃᐃⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⵠᐃΔⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔᐃⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "TheScaryBlaze",
        name: "Eaten Cookie"
      }, {
        id: 170,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆΔⵠⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆᐃⵠⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "aloner",
        name: "Blob Thing"
      }, {
        id: 172,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔⵠΔⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆᐃⲆΔᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆⵠΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "aloner",
        name: "Machine Mask"
      }, {
        id: 184,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔᐃⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃΔᐃᐃⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⵠᐃΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Mad"
      }, {
        id: 206,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔⲆⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠΔΔⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⵠⵠⲆⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔΔⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Survivor"
      }, {
        id: 209,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⲆΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⵠᐃᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔΔⵠΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔΔⲆΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Starverator"
      }, {
        id: 230,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆΔⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔᐃᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠⲆⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⵠΔⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Totem"
      }, {
        id: 231,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⵠⲆᐃΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔΔⵠᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Big Pile of Sand"
      }, {
        id: 232,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔΔᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⵠⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃᐃᐃᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆΔᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Big Pile of Dirt"
      }, {
        id: 235,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⵠᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆΔⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃᐃⵠⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⵠᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Sandstone"
      }, {
        id: 240,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆᐃᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠΔⲆΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃᐃΔΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃΔᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Berry Stone"
      }, {
        id: 241,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃΔΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃᐃⵠⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃΔΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔⲆᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Blue Pattern"
      }, {
        id: 242,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⵠⵠᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔᐃᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Pond"
      }, {
        id: 29,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃᐃΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆΔᐃⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠᐃᐃΔⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⲆⲆⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Pixelbitie",
        name: "Lollipop 1"
      }, {
        id: 30,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆΔⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃⵠⵠᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠᐃΔⵠᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔᐃᐃⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Lollipop 2"
      }, {
        id: 31,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⵠⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔΔΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃⲆⵠᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔⵠⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Lollipop 3"
      }, {
        id: 32,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠᐃⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⲆⲆᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠᐃΔⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⵠΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Lollipop 4"
      }, {
        id: 33,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆᐃᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⵠΔⲆΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔᐃⲆⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⵠΔⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Sushui",
        name: "Yellow Bird"
      }, {
        id: 34,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⵠⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠΔⵠᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⵠᐃⵠΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃᐃⵠᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Sushui",
        name: "Red Bird"
      }, {
        id: 35,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔᐃⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃⵠᐃⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆᐃΔᐃⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.Δᐃᐃⵠⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Sushui",
        name: "Blue Bird"
      }, {
        id: 37,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆⵠᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠΔⵠΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆᐃΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔⵠΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Winter",
        name: "Owl"
      }, {
        id: 52,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃⲆᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃΔΔΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⲆᐃΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⵠⵠᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Nemo"
      }, {
        id: 53,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⲆᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆΔᐃΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃⲆΔⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Bread"
      }, {
        id: 74,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆᐃⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔᐃⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔΔⵠⵠΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔᐃⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Communist & Taco4Life",
        name: "Mr. Bread 2"
      }, {
        id: 75,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆⲆⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔΔⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠⲆⵠⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⲆⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Communist & Taco4Life",
        name: "Mr. Bread 3"
      }, {
        id: 60,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⲆⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆᐃⲆΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆᐃⵠᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠⲆⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Red Berry"
      }, {
        id: 61,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆⲆⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⵠⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⵠΔⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⲆΔⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Berry"
      }, {
        id: 70,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃΔⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆᐃⲆΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔᐃΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Cake"
      }, {
        id: 71,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃΔⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⲆⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃΔᐃᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⵠᐃᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Christmas Cake"
      }, {
        id: 77,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⵠⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⲆΔΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⲆΔᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔΔᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Pancakez",
        name: "Mr. Pancake"
      }, {
        id: 87,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆΔΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔⲆⲆⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⲆΔⲆⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆᐃᐃΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Taco"
      }, {
        id: 78,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠᐃᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔⵠΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠᐃⵠⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃⲆΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Bottle"
      }, {
        id: 79,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆᐃⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆᐃᐃⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⵠᐃⵠⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⲆⵠᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Bottle 2"
      }, {
        id: 97,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠΔᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃⵠⵠᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⵠᐃΔⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠⵠⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Pink Rabbit"
      }, {
        id: 102,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆΔⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔΔᐃΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔᐃΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⲆⵠⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Marshmallow"
      }, {
        id: 107,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆᐃΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃⲆⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃᐃⲆⲆᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔᐃⲆᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Fox"
      }, {
        id: 132,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔΔⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃᐃⲆΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Raccoon"
      }, {
        id: 111,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆⵠⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃᐃⲆⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⲆⲆΔᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠΔⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Cloud"
      }, {
        id: 113,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃᐃⵠᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔΔⵠⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃⵠⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆΔⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Moon"
      }, {
        id: 117,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⲆΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⲆⲆⵠⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆΔⵠᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Mr. Panda"
      }, {
        id: 118,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⵠᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠⵠⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔΔⵠΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃΔⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Mr. Strawberry"
      }, {
        id: 119,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃᐃⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠΔᐃⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃⵠᐃⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⵠΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito & Sushuui",
        name: "Mummy"
      }, {
        id: 122,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃΔᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠⲆᐃΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃⲆᐃⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔΔΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Dino"
      }, {
        id: 127,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃᐃΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆᐃⲆΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃᐃΔᐃᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⵠⵠΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Mr. Koala"
      }, {
        id: 160,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔⵠᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠΔᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃⲆΔⵠᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⵠⵠΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Bottle Protection"
      }, {
        id: 162,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃᐃᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⵠᐃᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⵠΔⵠᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆᐃΔⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "CrysTal",
        name: "Leaf Man"
      }, {
        id: 166,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⵠΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠΔΔᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔΔΔⲆΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⵠᐃⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Bubble"
      }, {
        id: 174,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆΔⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃΔᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⲆⲆᐃⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔⵠⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "upfiz",
        name: "Potato"
      }, {
        id: 171,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃΔⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠᐃᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⵠⵠⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠⵠⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "aloner",
        name: "Axolotl"
      }, {
        id: 178,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠΔΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⵠⲆᐃΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃⲆΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Rusted Machine"
      }, {
        id: 179,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠⵠᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔᐃⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔΔΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔᐃΔΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Starving Machine"
      }, {
        id: 181,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠⲆᐃᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆⲆⲆᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔᐃⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Night Stars"
      }, {
        id: 191,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆΔⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃᐃⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃⲆⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔⲆΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Blue Jay"
      }, {
        id: 198,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔᐃⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃᐃΔⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆΔᐃᐃᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔᐃᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "AWTP",
        name: "Dave"
      }, {
        id: 200,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔᐃΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃⵠᐃⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⵠΔⵠⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⵠⵠᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Jinty",
        name: "Smug"
      }, {
        id: 203,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⲆΔⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠΔⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆⵠΔᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃⲆΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Reclaimed"
      }, {
        id: 204,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃΔΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠΔⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆⵠΔᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⲆⵠΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Legacy Wolf"
      }, {
        id: 211,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⲆᐃⵠⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃΔᐃΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⵠΔᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Starver of the Seas"
      }, {
        id: 213,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⵠΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃᐃⵠⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆⲆᐃⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔΔⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Ice"
      }, {
        id: 219,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆᐃΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⲆᐃⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔᐃᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Ramil",
        name: "Sandwich Cookie"
      }, {
        id: 221,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⲆⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆᐃⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⲆᐃⵠΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⲆⲆⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Purple Geode"
      }, {
        id: 222,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⲆⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠᐃⵠΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔⲆⵠΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⵠΔⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Cyan Geode"
      }, {
        id: 223,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠᐃᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔΔΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⵠⲆΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠᐃⵠⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Yellow Geode"
      }, {
        id: 228,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⵠᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⲆᐃᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆΔΔᐃⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠΔᐃᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Furnace Head"
      }, {
        id: 229,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔⲆᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⵠΔΔᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆᐃⲆⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag"
      }, {
        id: 227,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃⲆⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔⲆⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⵠⵠᐃΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔᐃⵠΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Lit Furnace Head"
      }, {
        id: 243,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⲆⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠΔⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃΔⵠⵠⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃΔⲆⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Pink Donut"
      }, {
        id: 244,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠΔᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⲆⲆⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆΔᐃᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠᐃΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Brown Donut"
      }, {
        id: 245,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃᐃⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠᐃᐃⲆᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠΔⲆⲆⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃⵠⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "White Donut"
      }, {
        id: 246,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔΔⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⵠⲆⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆΔⲆⵠⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⲆΔⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Empty Well"
      }, {
        id: 247,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠⵠⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⲆⵠⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔΔᐃᐃᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Water Well"
      }, {
        id: 248,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔΔᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⵠᐃᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆⲆΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔᐃⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Fall Starver"
      }, {
        id: 263,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆⵠᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃⵠΔⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠᐃⵠΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠΔⵠᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Clock"
      }, {
        id: 264,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆΔΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠΔΔᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔΔΔⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃᐃΔΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Behind You"
      }, {
        id: 25,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃᐃᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔⵠⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃⵠⵠᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆⵠⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Pixelbitie",
        name: "Test Dummy"
      }, {
        id: 41,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠΔⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆΔⵠⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔΔⵠΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆᐃⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Star-ver"
      }, {
        id: 43,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃⵠⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔⵠⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔΔⲆᐃⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠΔⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Communist",
        name: "Starver Chest"
      }, {
        id: 88,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⵠⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⵠΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆΔΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃᐃᐃⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Communist",
        name: "Starver Workbench"
      }, {
        id: 121,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃᐃᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔⲆⲆⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⲆⵠΔⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠᐃΔⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Fish"
      }, {
        id: 39,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⲆⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆΔᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃⲆⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔΔΔⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Negligent4Dia",
        name: "Crab"
      }, {
        id: 40,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⲆΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆᐃᐃᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠᐃΔΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⵠᐃⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Negligent4Dia",
        name: "Piranha"
      }, {
        id: 36,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠΔⲆⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⲆΔⵠⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃΔΔⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Winter Fox"
      }, {
        id: 69,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⲆΔⵠⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⵠΔᐃᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⲆΔΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Zed",
        name: "Baby Foxy"
      }, {
        id: 51,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠⵠⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⲆⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⵠⵠⲆᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠΔΔⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "HOWI",
        name: "Winter Bear"
      }, {
        id: 133,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠΔⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⲆⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⲆᐃᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⵠΔⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Hawk"
      }, {
        id: 55,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠΔᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔⵠΔᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃΔΔⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⵠᐃΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Nice Little Yuki"
      }, {
        id: 68,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔᐃⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃᐃᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆᐃᐃᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Taco4Life",
        name: "Baby Yuki"
      }, {
        id: 62,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆΔⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⵠⵠⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠΔᐃⲆᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Carrot"
      }, {
        id: 56,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⵠⵠᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔΔⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⲆΔᐃΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⲆᐃΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Bat Limax"
      }, {
        id: 72,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔΔⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.Δᐃⵠⵠⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠᐃᐃⲆᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆΔⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Mr. Crate"
      }, {
        id: 73,
        ⵠⵠᐃ: ⵠᐃ.Ⲇᐃᐃᐃᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃᐃΔⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠᐃⵠⲆΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠΔⲆⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Taco4Life & eogito",
        name: "Mr. Spider"
      }, {
        id: 93,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠⲆΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⵠⲆΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃΔⵠⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Anyone want to play?",
        name: "Mr. Spider 2"
      }, {
        id: 82,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠΔᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠⲆΔΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔⲆΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⲆᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Blue Starfish"
      }, {
        id: 83,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃΔΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⲆⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆᐃΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⵠⵠⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Orange Starfish"
      }, {
        id: 84,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠᐃⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃⲆᐃⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃᐃⵠᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⲆⵠⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Pink Starfish"
      }, {
        id: 85,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⵠΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔⲆⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔⵠᐃᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⵠΔᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. ShellMauve"
      }, {
        id: 86,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆᐃᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⵠΔᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⲆᐃᐃΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⲆᐃΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Shell Bead"
      }, {
        id: 96,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃΔΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃᐃᐃΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆⲆⵠᐃⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆⵠⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Fukss",
        name: "Angry Crab"
      }, {
        id: 98,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆΔΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔᐃᐃᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃᐃᐃΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃᐃⵠᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Penguin"
      }, {
        id: 126,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃⲆΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠΔᐃΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⵠΔⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Anyone want to play?",
        name: "Mr. Boar"
      }, {
        id: 145,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠⵠⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⲆⲆⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆⲆᐃΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⲆᐃΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "I saw you"
      }, {
        id: 146,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⵠⵠΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⵠᐃⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃᐃΔⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃⲆᐃⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "It was funny"
      }, {
        id: 147,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⲆⲆⲆΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⵠⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔΔⲆᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⵠᐃⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "You can scream"
      }, {
        id: 158,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔⵠⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⵠᐃⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃᐃᐃⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⵠⵠⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Mr. Book"
      }, {
        id: 163,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔⲆⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃⵠⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔΔᐃⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Anyone want to play?",
        name: "Mr. Mammoth"
      }, {
        id: 164,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⵠⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⵠⵠᐃΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⲆⲆΔⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "SoOw",
        name: "Mr. Mammoth 2"
      }, {
        id: 161,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃⲆⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠΔⲆⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⲆⵠⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Nightmare"
      }, {
        id: 168,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔΔⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⵠᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃⲆΔⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⲆⲆΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Shiny Crystal"
      }, {
        id: 173,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⵠⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆᐃⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃᐃᐃⲆⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⲆᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Water skin"
      }, {
        id: 175,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⲆᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⵠΔⲆⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆᐃⵠⲆΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⵠΔⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Fall Berry Bush Starver"
      }, {
        id: 176,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⵠᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠᐃᐃᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠᐃⲆⵠΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆⵠⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Christmas Berry Bush Starver"
      }, {
        id: 177,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⵠᐃΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⵠⵠΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⲆΔⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔⵠᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Berry Bush Starver"
      }, {
        id: 182,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠⲆᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃᐃⵠᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⲆⵠᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔᐃⵠⵠⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamer"
      }, {
        id: 185,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠᐃⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠΔⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔΔᐃⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔⲆΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Wolf"
      }, {
        id: 186,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆᐃⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔⲆⵠⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⲆΔΔΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⲆⵠᐃⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Snow Wolf"
      }, {
        id: 187,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⲆⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠΔⲆⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⲆᐃᐃⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Rabbit"
      }, {
        id: 188,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔΔᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⲆΔⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔΔⵠⲆΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.Δᐃᐃⵠᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Snow Rabbit"
      }, {
        id: 189,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔⵠⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⲆⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠⵠⵠΔΔⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⵠΔⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Bear"
      }, {
        id: 190,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠⲆⲆⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆᐃⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔᐃΔᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Polar Bear"
      }, {
        id: 196,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔⲆᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠⵠΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⵠᐃⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⵠᐃᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Crying Angel"
      }, {
        id: 202,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠⲆⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔⲆⵠⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃΔⲆΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃᐃⲆⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Fennec"
      }, {
        id: 207,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠΔⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⵠΔⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆⲆᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔⵠⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Decay"
      }, {
        id: 212,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆᐃⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⵠΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔΔΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⲆΔΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Pillow"
      }, {
        id: 218,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⵠⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆᐃΔᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆⵠⵠΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔᐃⵠⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Exotic"
      }, {
        id: 224,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠᐃΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔᐃⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃΔⲆᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃΔΔΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Apple"
      }, {
        id: 225,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠΔⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⵠΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔᐃΔⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Golden Apple"
      }, {
        id: 233,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃᐃᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠⵠᐃΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃΔᐃⲆⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆᐃᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Lava Cube"
      }, {
        id: 234,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⵠⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠⵠⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠΔΔΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔΔΔⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Dragon Cube"
      }, {
        id: 249,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠΔⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠΔᐃⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⵠⵠⲆΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔᐃⲆΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Parrot"
      }, {
        id: 250,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔΔᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⵠΔΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⵠⵠΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⲆΔⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Angry Parrot"
      }, {
        id: 251,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔⵠⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⲆᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃⲆᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠΔⵠΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Winter Starver"
      }, {
        id: 252,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⵠΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠΔᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⲆⵠⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔⵠΔᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Light Bulb"
      }, {
        id: 265,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔΔⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆᐃⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⲆᐃᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔᐃⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Map"
      }, {
        id: 266,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔᐃⵠⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆᐃⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠΔⲆΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔⵠΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "New Map"
      }, {
        id: 267,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠⲆᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃⲆΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃᐃΔᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Witch Broom"
      }, {
        id: 42,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆΔⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⲆᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔΔⵠᐃⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠⵠᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Winter",
        name: "Will-O'-The-Wisp"
      }, {
        id: 91,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠⲆᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⲆⲆⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆᐃᐃⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "ExpertyAnimations",
        name: "Flame"
      }, {
        id: 26,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆᐃΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃΔⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠⲆⲆΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⵠⲆΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Be a Tree"
      }, {
        id: 38,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔᐃⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃΔᐃᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔΔⲆⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠΔⵠⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Winter",
        name: "Toxic Mutant"
      }, {
        id: 50,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠⲆᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔᐃᐃⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃΔⵠΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆᐃⲆᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Communist",
        name: "Mr. Tomato"
      }, {
        id: 54,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔⲆⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃⲆᐃᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔΔⵠⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⵠΔᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Mauve, the Lapa"
      }, {
        id: 57,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⲆᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆⵠΔΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⵠΔⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⵠΔⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Golden Fish"
      }, {
        id: 64,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⵠⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠᐃᐃᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃΔⵠΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆΔⲆⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "LapaMauve"
      }, {
        id: 65,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃΔⲆΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⵠΔⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⵠΔⵠΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⲆⵠΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "LapaMauve "
      }, {
        id: 92,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠⲆΔᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆⲆᐃⲆⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⲆΔⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Burger"
      }, {
        id: 66,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔᐃⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⵠᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⲆⲆⲆⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⲆᐃᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Tropical Starver"
      }, {
        id: 80,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⲆΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃΔΔⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⵠⲆⲆⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⲆⵠⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. ShellPink"
      }, {
        id: 81,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠᐃΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⵠⲆⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠΔⵠⲆⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔᐃΔⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. OranShell"
      }, {
        id: 99,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃⲆⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔⵠⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆΔΔⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔΔᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Pepe"
      }, {
        id: 100,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠΔⲆΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃΔΔΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃⵠΔⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠΔⵠⲆᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "fatant",
        name: "Mr. Ant"
      }, {
        id: 115,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠᐃΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃΔᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃΔᐃΔⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔᐃⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Mr. Watermelon"
      }, {
        id: 101,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⲆΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃΔⲆᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠΔᐃⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Thornbush"
      }, {
        id: 131,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠⵠᐃᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔⵠΔⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔΔⵠΔⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⲆΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Cthulhu"
      }, {
        id: 143,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⵠⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⵠΔⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆΔᐃΔΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⲆⲆⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Mr. Cactus"
      }, {
        id: 144,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠᐃΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⲆⲆⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⵠⵠⲆΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⵠᐃΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Momo"
      }, {
        id: 180,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆⵠⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⲆⵠⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Scream"
      }, {
        id: 193,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃΔΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⵠⵠΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⵠᐃⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆⲆᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Dragon"
      }, {
        id: 195,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔΔΔᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆΔⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃΔΔⲆΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⲆΔΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Forest Spirit"
      }, {
        id: 197,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⲆΔᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆΔⲆᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠⵠΔΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⲆΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Evil Goat"
      }, {
        id: 199,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠΔⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⲆΔⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⲆΔΔᐃⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠⲆⲆΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Rotten"
      }, {
        id: 201,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠᐃΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠᐃᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⲆⵠΔᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔⲆⲆⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Fossil"
      }, {
        id: 205,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔⵠᐃⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆΔΔΔᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃⵠⲆⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Spectrum"
      }, {
        id: 210,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆΔⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆⵠⲆⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆⲆᐃᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃΔⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Helpy",
        name: "Black Cat"
      }, {
        id: 214,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃⲆⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠΔⲆᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⲆΔᐃΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃΔⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Lynx"
      }, {
        id: 215,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⲆⲆᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆⵠⵠΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⵠΔⲆⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔᐃⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Warg"
      }, {
        id: 217,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃΔⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃⲆⵠⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⲆⲆⲆⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃⵠⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Menhir"
      }, {
        id: 253,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⵠⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠΔΔᐃⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆⵠΔΔᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃΔⲆᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Ocelot"
      }, {
        id: 254,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⵠⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠΔⲆⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃⲆⵠⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃᐃⲆⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Angry Ocelot"
      }, {
        id: 255,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃᐃⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔΔΔΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⵠΔⵠⵠⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃΔⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Crocodile"
      }, {
        id: 256,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆΔⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔⲆⲆⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆΔⲆΔⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆⵠⵠΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Angry Crocodile"
      }, {
        id: 257,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⵠΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠΔᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆΔⲆΔⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠᐃⵠⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Candle"
      }, {
        id: 258,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⲆⲆΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃⵠΔΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆⲆᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Bomb"
      }, {
        id: 259,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠᐃΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⵠⵠⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔᐃΔΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆᐃΔⵠΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Red Mushroom"
      }, {
        id: 260,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃᐃⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⵠᐃⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃⲆΔᐃⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔΔΔⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Green Mushroom"
      }, {
        id: 95,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⲆΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⲆⲆⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⵠⵠⲆⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆᐃⵠⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Mr. Garlic"
      }, {
        id: 76,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔᐃⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔⵠΔᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔⵠⲆᐃⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃΔᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Robot Dragon"
      }, {
        id: 44,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔᐃᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔⵠᐃⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃᐃⲆᐃΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠΔΔΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Lava Dragon Version 1"
      }, {
        id: 90,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆᐃΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔⲆⵠΔⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃⲆᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔᐃⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "ExpertyAnimations",
        name: "Lava Dragon Version 2"
      }, {
        id: 124,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⲆⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔᐃΔⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃΔᐃᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔⵠΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Lava Dragon Version 3"
      }, {
        id: 45,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃⲆΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠΔⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃΔⲆΔΔⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⲆⲆⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Sushui",
        name: "Ice Dragon Version 1"
      }, {
        id: 46,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠᐃΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠⲆΔⵠⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃᐃⲆΔᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃΔΔᐃΔⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Ice Dragon Version 2"
      }, {
        id: 108,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔΔⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔᐃⵠᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃⲆΔᐃΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⲆⲆⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Ice Dragon Version 3"
      }, {
        id: 123,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔⵠⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⲆⵠᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⲆΔΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠΔΔⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Baby Dragon Version 1"
      }, {
        id: 128,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃΔΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠᐃᐃⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⲆⵠⲆⲆⲆΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⵠᐃⲆⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Baby Dragon Version 2"
      }, {
        id: 125,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⵠᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⲆⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔΔΔΔΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔⲆΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Baby Lava"
      }, {
        id: 47,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃᐃⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔᐃᐃⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠᐃΔᐃᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠᐃᐃⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Kraken"
      }, {
        id: 129,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔᐃⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔⲆⵠΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⲆᐃⵠᐃΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⵠⲆⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Sandworm"
      }, {
        id: 63,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠΔᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠⵠΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆΔⲆᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⵠⲆΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Golden Bread"
      }, {
        id: 67,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆᐃⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠⲆⲆΔⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠᐃᐃⲆᐃⵠⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔΔΔⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "ForgottenHeroe",
        name: "Starver Ores"
      }, {
        id: 130,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆⵠᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⲆⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔⲆⵠᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆᐃⲆΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Poo"
      }, {
        id: 89,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆΔᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔΔᐃⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠΔᐃⲆⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⲆⲆᐃⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Poinet",
        name: "Volcano Starver"
      }, {
        id: 112,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠΔΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃᐃⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠᐃΔΔⵠΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆⵠⵠⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Lava Starver"
      }, {
        id: 183,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆⵠⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⵠΔⲆᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔⵠΔⲆΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆΔⲆᐃⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Revaster"
      }, {
        id: 192,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠΔΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔᐃⲆΔΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔᐃΔⵠⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃΔⵠᐃⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Awakened"
      }, {
        id: 194,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠⲆΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃᐃⲆⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠΔᐃΔΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠⵠᐃⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Ice Dragon"
      }, {
        id: 236,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⲆᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆΔⵠⲆⲆ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆΔⲆᐃᐃᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⲆᐃⵠⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Crystal Dragon"
      }, {
        id: 208,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆΔᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃⵠⲆⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃᐃⲆᐃᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆᐃⵠΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bone Dragon"
      }, {
        id: 216,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃᐃⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠΔⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⲆⲆᐃΔⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠⵠΔⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Warg Ghost"
      }, {
        id: 226,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃᐃⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠᐃⵠⲆΔ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠΔⵠᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠᐃᐃᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Cursed"
      }, {
        id: 261,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⵠⵠΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆᐃⵠᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⲆΔⲆⲆⲆᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔΔΔᐃⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Orange Robot"
      }, {
        id: 262,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃⵠⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⵠΔᐃᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆΔΔⲆΔΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⵠΔⵠⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Windmill"
      }, {
        id: 268,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔⲆΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆΔⲆⵠⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠᐃΔⵠⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆΔΔⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Golden Hen"
      }, {
        id: 269,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠᐃⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆΔⲆⲆⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⵠⵠⲆⵠΔⲆⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃⲆΔΔⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Angry Golden Hen"
      }, {
        id: 270,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆᐃΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⵠΔΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔΔᐃΔᐃⲆⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠᐃΔⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Volcanic Bomb"
      }, {
        id: 48,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⵠᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃΔⲆᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃⵠⵠⲆⵠᐃⲆ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⵠΔⲆᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "eogito",
        name: "Robot"
      }, {
        id: 110,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⲆⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆᐃⲆΔᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ᐃᐃᐃᐃⲆΔᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ⵠⲆⲆΔΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Blue Butterfly"
      }, {
        id: 157,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⲆⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠΔΔⵠᐃ,
        ΔΔᐃⵠ: ⵠᐃ.ΔⲆⲆᐃᐃⵠᐃ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔᐃⲆⲆⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "eogito",
        name: "Yrifox"
      }, {
        id: 165,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃᐃΔᐃⵠ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆᐃΔⲆⵠΔΔ,
        ΔᐃⲆⲆ: ⵠᐃ.ⲆⲆΔΔⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "OmarJr13",
        name: "Blob Skin"
      }, {
        id: 237,
        ⵠⵠᐃ: ⵠᐃ.Δⵠⵠⵠⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⵠⲆᐃΔ,
        ΔΔᐃⵠ: ⵠᐃ.ⲆⵠΔᐃᐃⵠⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ΔⵠⵠⵠⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "NotBonnie",
        name: "NotBonnie"
      }, {
        id: 238,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⲆⲆⵠΔ,
        ΔΔᐃⵠ: ⵠᐃ.ΔᐃᐃⲆⵠΔⵠ,
        ΔᐃⲆⲆ: ⵠᐃ.ᐃᐃⵠᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ,
        ᐃⲆΔ: "NotBonnie",
        name: "Cynder"
      }],
      ⵠΔΔⵠ: [{
        id: 0,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃⵠΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag 1"
      }, {
        id: 1,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠᐃⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Bag"
      }, {
        id: 2,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆΔᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⲆⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag 2"
      }, {
        id: 3,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⵠᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃΔⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag 3"
      }, {
        id: 4,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆᐃⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag 4"
      }, {
        id: 5,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃⲆⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag 5"
      }, {
        id: 11,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔΔᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔᐃⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wood Pickaxe Bag"
      }, {
        id: 19,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⲆⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆΔⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io ",
        name: "Wood Carrier"
      }, {
        id: 37,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆΔⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Bag 6"
      }, {
        id: 39,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⵠⲆⵠⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Wooden Swords"
      }, {
        id: 44,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠΔⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Communist",
        name: "Big Bag"
      }, {
        id: 7,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆΔⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠⵠΔⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Communist",
        name: "Bag 6"
      }, {
        id: 8,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⲆΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠᐃᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Easter Bag"
      }, {
        id: 9,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⵠⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Star Bag"
      }, {
        id: 10,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃᐃᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⲆⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Winter Bag"
      }, {
        id: 20,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠᐃΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃΔᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io ",
        name: "Stone Carrier"
      }, {
        id: 24,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃⵠᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃⲆΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Stone Pickaxe Bag"
      }, {
        id: 6,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⲆᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Communist",
        name: "Bag Camouflage"
      }, {
        id: 38,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃΔΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆᐃΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Stone Swords"
      }, {
        id: 54,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⲆⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃᐃΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Cow Bag"
      }, {
        id: 59,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃᐃⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "CrysTal",
        name: "Starver Bag"
      }, {
        id: 62,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⵠⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "CrysTal",
        name: "Crystal Sky Bag"
      }, {
        id: 71,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃⲆⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Portable Furnace"
      }, {
        id: 78,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆⵠⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔⲆᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Crate Bag"
      }, {
        id: 13,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔᐃΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⲆⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Honey Pot"
      }, {
        id: 21,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⲆⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⵠΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io ",
        name: "Gold Carrier"
      }, {
        id: 30,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆᐃΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⵠⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Gold Pickaxe Bag"
      }, {
        id: 29,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⲆΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Ariel",
        name: "Mr and Mrs Bakers"
      }, {
        id: 41,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆᐃⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔⲆᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Golden Swords"
      }, {
        id: 47,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃΔⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Explorer Bag"
      }, {
        id: 51,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⲆⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Bamboo Bag"
      }, {
        id: 53,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠⵠᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃⵠⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Mummy Bag"
      }, {
        id: 58,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆⵠΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃΔⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Watermelon Bag"
      }, {
        id: 60,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃⵠᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Garlic Bag"
      }, {
        id: 61,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⲆᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Pumpkin Bag"
      }, {
        id: 64,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⲆⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "upfiz",
        name: "Oil Barel bag"
      }, {
        id: 67,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠᐃⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆᐃΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Tree Bag"
      }, {
        id: 70,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⵠⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⵠⵠΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Lit Portable Furnace"
      }, {
        id: 72,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⵠΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Christmas Berry Bush Bag"
      }, {
        id: 73,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃΔⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Berry Bush Bag"
      }, {
        id: 74,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃⵠⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⵠⲆⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Fall Berry Bush Bag"
      }, {
        id: 76,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⵠⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⵠⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Reclaimed Bag"
      }, {
        id: 14,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠᐃΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆⲆⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "a Rabbit in my Bag"
      }, {
        id: 15,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆᐃⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠᐃᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Bird's nest"
      }, {
        id: 16,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆΔⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠⲆⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "a Fish on your Back"
      }, {
        id: 17,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃⵠΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔᐃᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "a Squirrel in my Bag"
      }, {
        id: 22,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔΔΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⵠⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io ",
        name: "Diamond Carrier"
      }, {
        id: 12,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠΔⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠΔⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Resources Bag"
      }, {
        id: 32,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔⲆΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Diamond Pickaxe Bag"
      }, {
        id: 40,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⵠⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃⵠⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Diamond Swords"
      }, {
        id: 45,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃⵠⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆⵠⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "My Cake Bag"
      }, {
        id: 46,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠⵠΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔΔΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "My Christmas Cake Bag"
      }, {
        id: 52,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⲆⲆⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆᐃᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Fish Bag"
      }, {
        id: 65,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔΔⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Cloud Bag"
      }, {
        id: 68,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆΔΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔΔⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Bee Bag"
      }, {
        id: 77,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⲆⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔΔᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Bag and Bedroll"
      }, {
        id: 80,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃⲆⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔⲆⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Peasant's Bag"
      }, {
        id: 81,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠΔᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃⵠΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Probably Stolen Bag"
      }, {
        id: 48,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔΔⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃΔⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "fatant",
        name: "Natural Bag"
      }, {
        id: 23,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔΔⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃᐃⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io ",
        name: "Amethyst Carrier"
      }, {
        id: 25,
        ⵠⵠᐃ: ⵠᐃ.ΔΔΔΔⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⲆΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Amethyst Pickaxe Bag"
      }, {
        id: 28,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃΔΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Your Baby"
      }, {
        id: 33,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆΔᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Tropical Bag"
      }, {
        id: 43,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⲆⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⵠⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Amethyst Swords"
      }, {
        id: 35,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃΔᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔᐃⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Ice Bag"
      }, {
        id: 50,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔΔᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠΔⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Thornbush Bag"
      }, {
        id: 56,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠⲆⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔⲆᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Autumn Bag"
      }, {
        id: 57,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⲆⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Dino Egg Bag"
      }, {
        id: 66,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃⵠⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Magic Cloud Bag"
      }, {
        id: 69,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃⵠⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃᐃΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Chest Bag"
      }, {
        id: 75,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔⵠⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⲆΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Spectum Bag"
      }, {
        id: 79,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔⵠⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⲆⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Winter Peasant's Bag"
      }, {
        id: 31,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⵠⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⲆⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io ",
        name: "Reidite Carrier"
      }, {
        id: 18,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃΔⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆᐃⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Lava Bag"
      }, {
        id: 49,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃᐃᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔᐃΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Lava Bag 2"
      }, {
        id: 36,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆᐃⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔᐃⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Dragon Bag"
      }, {
        id: 55,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠΔⲆΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠΔΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Winter Ice Bag"
      }, {
        id: 26,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆᐃⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Reidite Pickaxe Bag"
      }, {
        id: 27,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⲆᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⲆⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Octopus Bowl"
      }, {
        id: 34,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔⵠⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⲆΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Cave Bag"
      }, {
        id: 42,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠⵠᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃⵠᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Bag with Reidite Swords"
      }, {
        id: 63,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆΔⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Engineer Bag"
      }],
      ⵠⵠΔΔΔ: [{
        id: 0,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆΔⵠΔᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃⲆΔᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Dead Box"
      }, {
        id: 1,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠᐃΔⵠΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆⲆⵠⵠⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "eogito",
        name: "Hidden item"
      }, {
        id: 2,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃΔᐃΔᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃⲆⲆᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box 1"
      }, {
        id: 3,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃΔᐃᐃᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠΔᐃⲆᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box 2"
      }, {
        id: 4,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠΔⵠᐃΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆΔⵠⵠᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box 3"
      }, {
        id: 5,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃⵠΔⵠᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃΔⵠᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Broken Wooden Box"
      }, {
        id: 6,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃᐃⵠⲆⵠΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⲆΔⲆΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box"
      }, {
        id: 7,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠΔΔⵠᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔᐃⵠΔⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Battle Box"
      }, {
        id: 8,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔⵠᐃᐃⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠᐃⵠΔᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box with a Cross"
      }, {
        id: 9,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⲆΔⵠⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃⵠⲆⵠΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box with Bubbles"
      }, {
        id: 10,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔⵠⲆⲆⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆⵠΔᐃⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden Box with Eyes"
      }, {
        id: 11,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔᐃⲆⵠΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃΔΔⲆⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Dark Wooden Box"
      }, {
        id: 38,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠᐃΔΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔΔⲆΔⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Weddlz",
        name: "Noob Box"
      }, {
        id: 12,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔΔΔⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔΔⵠⲆⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Wooden and Stone Box"
      }, {
        id: 14,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⲆⲆᐃⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠΔΔⵠⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Star Box 1"
      }, {
        id: 15,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⵠᐃⲆⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆΔΔΔᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Star Box 2"
      }, {
        id: 27,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠⵠⵠᐃⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃᐃᐃⵠΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Flower Box"
      }, {
        id: 46,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⵠΔⲆⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃᐃⲆⲆΔΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Blue Box"
      }, {
        id: 75,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔᐃᐃⲆⲆⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆⲆⵠⲆΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Night Stars Crate"
      }, {
        id: 19,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆⵠⲆᐃᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃΔⲆΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Beehive"
      }, {
        id: 13,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃΔΔᐃⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⵠⵠⲆⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Wooden and Golden Box"
      }, {
        id: 21,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠΔᐃᐃᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃⲆᐃⵠΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Gravestone"
      }, {
        id: 25,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆⵠⵠⲆⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔⲆⲆᐃⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Communist",
        name: "Sky Box"
      }, {
        id: 29,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⲆᐃΔⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔⲆΔΔⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Winter",
        name: "Golden Box"
      }, {
        id: 34,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⲆⲆΔΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠΔΔᐃΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Communist",
        name: "Water Crate"
      }, {
        id: 35,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⵠΔⵠΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆᐃᐃᐃΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Communist",
        name: "Glass Crate"
      }, {
        id: 70,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⲆⵠΔⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⲆᐃᐃᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "CrysTal",
        name: "Crystal Sky Box"
      }, {
        id: 74,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⲆⵠᐃⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃᐃᐃⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Reclaimed Crate"
      }, {
        id: 77,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃᐃⲆⵠⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃⲆΔᐃⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Workplace Accident"
      }, {
        id: 16,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔᐃᐃⵠᐃⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃᐃⲆᐃⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Wooden and Diamond Box"
      }, {
        id: 18,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆᐃᐃⵠⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃΔΔΔⵠΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Don't Hit Me"
      }, {
        id: 26,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃΔⵠᐃΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆᐃⲆⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Underwater Box"
      }, {
        id: 31,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠᐃⵠⲆᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃⲆᐃⲆᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Communist",
        name: "Items Pile"
      }, {
        id: 32,
        ⵠⵠᐃ: ⵠᐃ.ΔΔΔΔⲆⵠⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃᐃⲆⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Cake Box"
      }, {
        id: 33,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠᐃⵠΔᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔᐃΔᐃᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Christmas Cake Box"
      }, {
        id: 36,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⲆⲆΔᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆΔΔᐃⵠⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Fukss",
        name: "Crab Box"
      }, {
        id: 42,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃᐃᐃΔΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃⵠⵠᐃᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Fishing Box"
      }, {
        id: 72,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃᐃⲆᐃⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆΔΔⵠΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Storage Machine"
      }, {
        id: 22,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠΔⲆⲆΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆᐃΔⲆᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Let me out of here"
      }, {
        id: 17,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃΔᐃᐃⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔⵠΔⵠΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Wooden and Amethyst Box"
      }, {
        id: 24,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔᐃⲆⲆΔᐃᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆΔᐃⵠⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Aquarium"
      }, {
        id: 28,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⲆⲆΔⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠᐃⵠΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Gift Box"
      }, {
        id: 40,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⵠⲆⲆΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆᐃᐃΔΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Open Watermelon Box"
      }, {
        id: 41,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃΔΔΔⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔΔⲆⲆΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Watermelon Box"
      }, {
        id: 39,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔᐃΔⲆⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆΔᐃᐃΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Thornbush Box"
      }, {
        id: 43,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃⵠᐃᐃΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆᐃᐃⲆⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Rabbit in the Box"
      }, {
        id: 47,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆΔⲆᐃⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆᐃΔⲆΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Garlic Plot"
      }, {
        id: 48,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔᐃⲆⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⲆΔᐃΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Pumpkin Plot"
      }, {
        id: 78,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⲆᐃⵠΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠΔΔᐃΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Spectrum Portal"
      }, {
        id: 45,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃⲆᐃᐃⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⵠᐃΔᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Autumn Box"
      }, {
        id: 44,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔᐃΔⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠᐃⲆᐃⲆⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Winter Box"
      }, {
        id: 20,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠᐃⵠⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⵠⲆΔⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Metal and Reidite Box"
      }, {
        id: 23,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⵠⵠΔᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠᐃⲆΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Kraken Box"
      }, {
        id: 30,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠⵠᐃᐃᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠᐃⲆⵠⵠΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Lava Box"
      }, {
        id: 37,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔⲆⲆΔΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔΔΔⵠⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Lava Box 2"
      }, {
        id: 49,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠΔⲆⲆⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃΔΔⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Rabbit"
      }, {
        id: 50,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⲆᐃⲆᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⲆΔⲆΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Wolf"
      }, {
        id: 51,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔΔᐃΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔΔΔⵠᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Spider"
      }, {
        id: 52,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃΔⵠⵠⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠⵠᐃᐃᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Hawk"
      }, {
        id: 53,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔⵠⲆᐃΔᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⵠⵠΔⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Bear"
      }, {
        id: 54,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⲆᐃⲆᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠⲆⵠᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Fox"
      }, {
        id: 55,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⵠᐃⲆⵠⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠᐃⵠⲆᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Baby Mammoth"
      }, {
        id: 56,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔⵠᐃΔⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃⵠⲆⵠᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Mammoth"
      }, {
        id: 57,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⵠᐃᐃⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔΔΔΔⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Sandworm"
      }, {
        id: 58,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔΔⲆⵠⲆΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆⲆⲆΔⲆⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Vulture"
      }, {
        id: 59,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠΔⵠΔⲆⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⲆⲆⵠΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Kraken"
      }, {
        id: 60,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⵠⵠᐃⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠᐃΔΔΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Piranha"
      }, {
        id: 61,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠⵠⵠⲆⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⵠⵠΔᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Baby Dragon"
      }, {
        id: 62,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔⵠΔⲆⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⲆᐃᐃⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Baby Lava"
      }, {
        id: 63,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃᐃᐃΔΔᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⲆⵠΔᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Dragon"
      }, {
        id: 64,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⲆΔⲆⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔⵠⵠⵠⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Penguin"
      }, {
        id: 65,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃᐃⲆⲆⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃⵠᐃⵠⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Lava Dragon"
      }, {
        id: 66,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃᐃᐃⵠⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠΔΔᐃΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Boar"
      }, {
        id: 67,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔⵠΔΔᐃΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃⲆΔᐃΔⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Fire mob"
      }, {
        id: 68,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⲆⲆⲆⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔⵠΔⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Crab"
      }, {
        id: 69,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔᐃⲆⲆⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠᐃᐃⲆᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the King Crab"
      }, {
        id: 71,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆⵠΔᐃᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⵠⲆⵠᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Dragon Box"
      }, {
        id: 73,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔΔⵠΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠΔΔΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Rekt"
      }, {
        id: 76,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠⵠⲆⲆⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆΔᐃᐃᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Sleeping Tamon Dragon"
      }, {
        id: 79,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆΔΔΔⵠⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⵠⵠᐃⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Crocodile"
      }, {
        id: 80,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆΔⵠΔΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃⵠⲆⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Ocelot"
      }, {
        id: 81,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⵠᐃⵠⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⲆⲆⵠΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Parrot"
      }, {
        id: 82,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔᐃⲆⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⲆΔΔᐃᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Golden Hen"
      }, {
        id: 83,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⵠⲆⲆⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆⲆⵠᐃⵠⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Box of the Golden Chicken"
      }],
      ⵠΔⵠⲆⵠ: [{
        id: 0,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆⲆᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃᐃΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Book 1"
      }, {
        id: 1,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔⵠΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃΔⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Book 2"
      }, {
        id: 2,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠⵠⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠᐃⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Book 3"
      }, {
        id: 3,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆⵠⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔΔΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Book 4"
      }, {
        id: 4,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃΔⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Damaged Book 1"
      }, {
        id: 18,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆΔΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃΔⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "SeveR",
        name: "Damaged Book 2"
      }, {
        id: 5,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃᐃΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠᐃⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Doctorpus",
        name: "Scroll"
      }, {
        id: 6,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⲆⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Doctorpus",
        name: "Clipboard"
      }, {
        id: 7,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆΔΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⲆⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Seed Book"
      }, {
        id: 20,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠⲆⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Taco4Life",
        name: "Camo Book"
      }, {
        id: 24,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃΔⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Communist",
        name: "Stone Tablet"
      }, {
        id: 47,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔΔⵠⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⵠⲆᐃΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Reclaimed Book"
      }, {
        id: 10,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆΔⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⵠᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Star Book"
      }, {
        id: 8,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔΔΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆΔΔⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Gold Book"
      }, {
        id: 15,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆⵠⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠΔⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Old Mysterious Paper"
      }, {
        id: 17,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⵠⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Gold Engraving"
      }, {
        id: 25,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔΔⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔΔⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "fatant",
        name: "Ant Book"
      }, {
        id: 32,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆΔⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔΔⲆⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Mummy Book"
      }, {
        id: 37,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠⵠⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⵠΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Garlic Book"
      }, {
        id: 38,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆΔⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠᐃⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Pumpkin Book"
      }, {
        id: 39,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔⵠⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃⲆⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Christmas Tree Book"
      }, {
        id: 11,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔᐃⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Diamond Book"
      }, {
        id: 9,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠᐃᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⲆⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Obscure Book"
      }, {
        id: 16,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⵠⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃΔⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Rolled Parchment"
      }, {
        id: 22,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠⲆΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⲆⵠⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Cake Book"
      }, {
        id: 23,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆΔᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠΔⵠΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Christmas Cake Book"
      }, {
        id: 30,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆΔᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⵠⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "MADBalgouthi",
        name: "Fish Book"
      }, {
        id: 31,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆⲆⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠⵠⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "CrysTal",
        name: "Once upon a time"
      }, {
        id: 48,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔΔΔᐃᐃᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠⵠᐃⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Chrono Clock"
      }, {
        id: 49,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⵠⲆᐃᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆᐃᐃⵠΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Recipe Book"
      }, {
        id: 13,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔΔΔⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⲆᐃⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Amethyst Book"
      }, {
        id: 28,
        ⵠⵠᐃ: ⵠᐃ.ΔΔΔⵠⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠᐃⵠᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Paint Pallet"
      }, {
        id: 29,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆᐃᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⵠⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "CrysTal",
        name: "Watermelon Book"
      }, {
        id: 27,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆΔΔᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆⲆᐃΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Thornbush Book"
      }, {
        id: 35,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⵠᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Taco4Life",
        name: "Menu"
      }, {
        id: 36,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠΔᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠΔᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "CrysTal",
        name: "Lover Letter"
      }, {
        id: 40,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠΔⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⵠΔⵠΔΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Fresh-Baked Cookies"
      }, {
        id: 41,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⵠΔⵠᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠΔᐃⵠᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Inside, there is just a book."
      }, {
        id: 45,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠⵠΔⲆᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⵠⲆⵠΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Crafting Machine"
      }, {
        id: 33,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃⵠᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃⲆΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Winter Book"
      }, {
        id: 34,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆΔᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔᐃⵠᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Autumn Book"
      }, {
        id: 14,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔⵠⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃᐃⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Reidite Book"
      }, {
        id: 12,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃᐃᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃᐃⵠⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Lava Book"
      }, {
        id: 26,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔΔⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃᐃⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Lava Book 2"
      }, {
        id: 19,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆᐃⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠΔⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Winter",
        name: "Ocean Mystery"
      }, {
        id: 21,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⲆΔⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆΔⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Dragon Book"
      }, {
        id: 42,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆΔᐃⵠΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠᐃΔⵠᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Engineer Book"
      }, {
        id: 43,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆⲆΔⲆⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠⵠΔΔⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Nightmare Book"
      }, {
        id: 44,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠᐃⲆᐃⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⵠⵠⲆⲆΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "aloner",
        name: "Mystery Book"
      }, {
        id: 46,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃΔΔⲆᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⲆⲆΔᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Cursed Book"
      }],
      ΔⲆⲆΔΔ: [{
        id: 0,
        ⵠⵠᐃ: ⵠᐃ.Δⵠᐃⵠⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.Δⵠᐃⵠⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Nothing"
      }, {
        id: 2,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃⵠΔᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Pink Cheeks"
      }, {
        id: 3,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔΔⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⵠΔⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Heart"
      }, {
        id: 1,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆᐃᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Bandage 1"
      }, {
        id: 4,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃⵠΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⵠⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆᐃᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Flower 1"
      }, {
        id: 5,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆΔⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆⵠᐃΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Bow 1"
      }, {
        id: 6,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆΔⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃΔᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Bandage 2"
      }, {
        id: 7,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⵠⵠΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔΔᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Flower 2"
      }, {
        id: 8,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔᐃΔⵠΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃᐃⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Bandage 3"
      }, {
        id: 36,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔΔΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⵠⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Foliage"
      }, {
        id: 59,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆΔᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃⲆⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Peaceful"
      }, {
        id: 67,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔⲆⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Sparkles"
      }, {
        id: 68,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔΔΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔᐃΔᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Luxury"
      }, {
        id: 69,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠⲆⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆᐃⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠᐃΔ,
        ᐃⲆΔ: "pizza wa",
        name: "Snow Flakes Crown"
      }, {
        id: 17,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⵠΔΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔΔᐃᐃᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Glasses 1"
      }, {
        id: 10,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⵠⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆⲆⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Bow 2"
      }, {
        id: 11,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃᐃⲆⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⵠᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "pizza wa",
        name: "Little Stars"
      }, {
        id: 12,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃᐃᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⵠⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Pirate Eye Patch 1"
      }, {
        id: 44,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃΔᐃΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠⲆⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Taco4Life",
        name: "Pirate Eye Patch 2"
      }, {
        id: 23,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃΔⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Clown nose"
      }, {
        id: 16,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⵠⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔⵠΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Eye Patch"
      }, {
        id: 30,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆⵠᐃⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⵠⵠᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "eogito",
        name: "Flower 3"
      }, {
        id: 38,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆᐃᐃᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔΔᐃⵠΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Winter",
        name: "False Nose"
      }, {
        id: 74,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃΔⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃⲆⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Red Cloth"
      }, {
        id: 75,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆΔⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔΔᐃᐃΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Blue Cloth"
      }, {
        id: 79,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔᐃᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠⵠⵠΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Transparent Mask"
      }, {
        id: 89,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⵠⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⲆᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Anyone want to play?",
        name: "Starve.io Anime"
      }, {
        id: 94,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃⵠⲆᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔΔⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Ant",
        name: "Hero Mask"
      }, {
        id: 100,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆᐃᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "This starver is mad"
      }, {
        id: 104,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⲆᐃΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Scars"
      }, {
        id: 106,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔⵠᐃⲆⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆᐃᐃΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "In Search of Intelligence"
      }, {
        id: 109,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔΔᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃΔⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Reclaimed Bandage"
      }, {
        id: 111,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⲆᐃⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⲆᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠⵠⲆⲆ,
        ᐃⲆΔ: "Starve.io",
        name: "Unwrap Starver for Gift"
      }, {
        id: 15,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⲆⲆᐃⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⲆΔΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Star Glasses"
      }, {
        id: 21,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠⵠⵠΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔΔᐃᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Great-aunt's Glasses"
      }, {
        id: 24,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔΔⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠⵠΔᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Little Starver"
      }, {
        id: 22,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃᐃΔⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆᐃΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Little Glasses"
      }, {
        id: 13,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆⲆΔΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆᐃΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Flower Chain"
      }, {
        id: 29,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆΔⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⲆⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Horns"
      }, {
        id: 31,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃΔⵠᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⲆΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Golden Flower"
      }, {
        id: 40,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⵠⵠⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "pizza wa",
        name: "Sleeping Mask"
      }, {
        id: 57,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠΔⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⵠⵠⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Taco4Life",
        name: "Fish on your head"
      }, {
        id: 58,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔᐃᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔⵠⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "eogito",
        name: "Rose"
      }, {
        id: 91,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⵠᐃⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔᐃⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "upfiz",
        name: "Grey Scarf"
      }, {
        id: 92,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔᐃΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆⵠΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "upfiz",
        name: "Black Scarf"
      }, {
        id: 93,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆᐃΔΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔΔⲆΔⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "upfiz",
        name: "Skull Mask"
      }, {
        id: 95,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⲆᐃⲆᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠⵠⵠⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Golden Monocle"
      }, {
        id: 96,
        ⵠⵠᐃ: ⵠᐃ.ΔΔᐃΔⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "A simple instruction"
      }, {
        id: 102,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃⵠⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆΔⵠⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Garland"
      }, {
        id: 103,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⵠΔΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆᐃⵠⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "The Doormat"
      }, {
        id: 108,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔᐃⵠⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⵠⵠΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Copium Tanks"
      }, {
        id: 117,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆᐃᐃⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠΔⲆⵠⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Eyelashes"
      }, {
        id: 118,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃᐃⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⲆⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⵠᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "Helmet Prototype"
      }, {
        id: 9,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠᐃⵠⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃⲆΔⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Fancy Glasses"
      }, {
        id: 25,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆΔΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆΔΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Medecin Mask"
      }, {
        id: 14,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃᐃⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⲆᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mr. Mayor"
      }, {
        id: 19,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃⲆᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆᐃⲆᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Sunglasses 2"
      }, {
        id: 28,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆᐃᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⵠⲆᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "pizza wa",
        name: "Starfish"
      }, {
        id: 37,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆΔΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆⲆⲆΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Berry"
      }, {
        id: 39,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔⲆᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⲆΔⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Flake"
      }, {
        id: 43,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠΔⲆⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⲆΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Leaf "
      }, {
        id: 61,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⵠᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⲆⵠᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "A sword in your head"
      }, {
        id: 62,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆΔⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⵠᐃⲆΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Winter Scarf"
      }, {
        id: 64,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔᐃⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆᐃⲆⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Winter Scarf 2"
      }, {
        id: 66,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆⵠΔⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "eogito",
        name: "Winter Scarf 3"
      }, {
        id: 70,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠΔᐃⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆᐃⵠⲆⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Mask with animal tracks"
      }, {
        id: 71,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆⵠᐃᐃΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⵠΔᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Spring Mask"
      }, {
        id: 72,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⵠⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆⵠΔⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Pink Mask"
      }, {
        id: 73,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆⲆⲆΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⲆᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Blue Mask"
      }, {
        id: 76,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔᐃΔᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⲆⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Military Mask"
      }, {
        id: 77,
        ⵠⵠᐃ: ⵠᐃ.ΔΔⲆⲆⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆⲆᐃⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Orange Mask"
      }, {
        id: 78,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆΔⵠⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔᐃᐃⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "White and Red Points Mask"
      }, {
        id: 80,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆΔⲆⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Stick out your tongue Mask"
      }, {
        id: 81,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠᐃⵠⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆⵠᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Two Teeth Mask"
      }, {
        id: 82,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆⲆΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃⲆⲆᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Make-up Mask"
      }, {
        id: 83,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠᐃⵠⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔⲆᐃⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Sad Mask"
      }, {
        id: 84,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⲆᐃⵠⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⲆΔⲆΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Happy Mask"
      }, {
        id: 90,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆᐃᐃΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔΔᐃⲆⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "aloner",
        name: "Blood"
      }, {
        id: 101,
        ⵠⵠᐃ: ⵠᐃ.ⵠⲆᐃΔᐃⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆΔᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Axed Plans"
      }, {
        id: 105,
        ⵠⵠᐃ: ⵠᐃ.ⲆΔΔᐃᐃⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠᐃⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Saddle"
      }, {
        id: 113,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠᐃⵠᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠᐃΔᐃⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "I see"
      }, {
        id: 114,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠΔⵠⲆΔⲆ,
        ⲆᐃΔ: ⵠᐃ.Ⲇⵠⵠⵠᐃⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "I have no body and I must dress"
      }, {
        id: 115,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⲆⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠᐃⵠΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Cursed Crown"
      }, {
        id: 119,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠⵠⲆΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔᐃⲆⵠᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ⵠᐃⲆⵠ,
        ᐃⲆΔ: "Starve.io",
        name: "Arrow in the Starver"
      }, {
        id: 27,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃⵠⲆΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆΔⵠⲆⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Clown Face"
      }, {
        id: 20,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⵠⲆⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆΔⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Sunglasses 3"
      }, {
        id: 32,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⲆⲆⵠᐃⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⲆᐃΔᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Engineer's Glasses"
      }, {
        id: 33,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⵠΔΔᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⲆΔⲆΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Engineer's Monocle"
      }, {
        id: 34,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆⵠⵠⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆΔΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mauve's butt"
      }, {
        id: 41,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆⲆⵠᐃΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆΔΔⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Lapa Head"
      }, {
        id: 42,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⲆⵠⵠⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⵠⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "eogito",
        name: "Lapa Head "
      }, {
        id: 85,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔᐃⲆᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆᐃᐃⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Mask and Glasses"
      }, {
        id: 110,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃⵠⵠⲆⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃΔⵠⲆΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Spectrum Pet"
      }, {
        id: 120,
        ⵠⵠᐃ: ⵠᐃ.ᐃᐃΔΔⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⲆⵠΔⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ΔⲆⵠΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Ice Crown"
      }, {
        id: 60,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆⲆⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⵠⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Jason"
      }, {
        id: 26,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⵠΔⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃⵠⲆⵠⵠⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Devil Horns"
      }, {
        id: 18,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃⵠⲆⲆΔᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆⵠᐃᐃⲆⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Big Boss"
      }, {
        id: 35,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠᐃⵠᐃᐃᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⵠⲆⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Baby Kraken"
      }, {
        id: 63,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆⵠᐃᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠΔΔΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Deer Antlers"
      }, {
        id: 65,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃΔⲆⲆⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆⲆⵠⵠᐃᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Baby Dragon on your head"
      }, {
        id: 86,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⵠⲆⲆⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔΔⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Gaz Mask and Glasses"
      }, {
        id: 87,
        ⵠⵠᐃ: ⵠᐃ.ΔᐃΔⵠΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆⲆⲆⵠⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Pink Gaz Mask and Glasses"
      }, {
        id: 88,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃᐃΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠᐃᐃᐃⲆⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "eogito",
        name: "Engineer Glasses"
      }, {
        id: 97,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆⲆᐃΔⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ⵠⲆΔᐃΔⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Jagged Horns"
      }, {
        id: 98,
        ⵠⵠᐃ: ⵠᐃ.ΔΔΔⲆⵠⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠⵠⲆⵠⲆᐃⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Curved Horns"
      }, {
        id: 99,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃᐃⲆⲆΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃⲆᐃΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Evil Goat Horns"
      }, {
        id: 107,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆⵠᐃΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃᐃⵠⵠᐃⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Decorative Earmuffs"
      }, {
        id: 112,
        ⵠⵠᐃ: ⵠᐃ.ⵠΔⵠⵠΔⲆⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⵠΔΔᐃᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Tamon Dragon Pet"
      }, {
        id: 116,
        ⵠⵠᐃ: ⵠᐃ.ΔⲆΔᐃΔⲆᐃ,
        ⲆᐃΔ: ⵠᐃ.ⲆΔⲆⵠΔⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃΔᐃΔ,
        ᐃⲆΔ: "Starve.io",
        name: "Blanket"
      }, {
        id: 45,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠΔⲆΔⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃΔⲆⲆᐃΔᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 5",
        level: 5
      }, {
        id: 46,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⵠΔΔⵠΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃΔΔⵠᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 10",
        level: 10
      }, {
        id: 47,
        ⵠⵠᐃ: ⵠᐃ.ᐃΔⲆΔⵠⲆΔ,
        ⲆᐃΔ: ⵠᐃ.ⵠΔⲆⲆⵠΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 15",
        level: 15
      }, {
        id: 48,
        ⵠⵠᐃ: ⵠᐃ.ⲆⲆᐃΔᐃΔΔ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃⲆⵠΔΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 20",
        level: 20
      }, {
        id: 49,
        ⵠⵠᐃ: ⵠᐃ.ΔⵠⲆⲆᐃⵠⲆ,
        ⲆᐃΔ: ⵠᐃ.ⵠᐃⵠⵠᐃⲆᐃ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 25",
        level: 25
      }, {
        id: 50,
        ⵠⵠᐃ: ⵠᐃ.ⵠⵠⲆΔΔΔⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔᐃΔⲆⵠⲆⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 30",
        level: 30
      }, {
        id: 51,
        ⵠⵠᐃ: ⵠᐃ.ᐃⲆᐃᐃⲆᐃⲆ,
        ⲆᐃΔ: ⵠᐃ.ΔΔⵠⵠⵠΔΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 35",
        level: 35
      }, {
        id: 52,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠΔⲆⵠΔΔ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠⵠᐃᐃⵠΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 40",
        level: 40
      }, {
        id: 53,
        ⵠⵠᐃ: ⵠᐃ.ⲆᐃⵠᐃⲆⵠⵠ,
        ⲆᐃΔ: ⵠᐃ.ᐃⵠΔᐃⵠⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 45",
        level: 45
      }, {
        id: 54,
        ⵠⵠᐃ: ⵠᐃ.ⲆⵠⵠΔΔⵠᐃ,
        ⲆᐃΔ: ⵠᐃ.ΔⵠᐃᐃⲆΔⵠ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 50",
        level: 50
      }, {
        id: 55,
        ⵠⵠᐃ: ⵠᐃ.ⵠᐃᐃᐃΔΔⵠ,
        ⲆᐃΔ: ⵠᐃ.ⲆᐃᐃⵠᐃⵠⲆ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 55",
        level: 55
      }, {
        id: 56,
        ⵠⵠᐃ: ⵠᐃ.ᐃⵠⲆⲆΔⲆⲆ,
        ⲆᐃΔ: ⵠᐃ.ᐃᐃΔᐃⲆᐃΔ,
        ᐃⵠⵠ: ⵠᐃⵠ.ᐃⵠⲆⲆᐃ,
        ᐃⲆΔ: "Starve.io",
        name: "More than Level 60",
        level: 60
      }]
    };
    v2325.ΔᐃⲆⵠΔᐃᐃ = ⲆᐃΔⲆΔⲆΔ(ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ, 21);
    v2325.ΔΔᐃΔⲆΔⲆ = ⲆᐃΔⲆΔⲆΔ(ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ, 20);
    ΔΔ[365] = [];
    ΔΔ[7] = [];
    ΔΔ[360] = [];
    ΔΔ[46] = [];
    ΔΔ[47] = [];
    ΔΔ[1045] = [];
    for (var v879 = 0; ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ.length > v879; v879++) {
      ΔΔ[365][v879] = [ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v879].ⵠⵠᐃ, ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v879].ⲆᐃΔ];
      ΔΔ[7][v879] = [ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v879].ΔΔᐃⵠ, ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v879].ΔᐃⲆⲆ];
    }
    for (v879 = 0; v879 < ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ.length; v879++) {
      ΔΔ[46][v879] = [ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ[v879].ⵠⵠᐃ, ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ[v879].ⲆᐃΔ];
    }
    for (v879 = 0; v879 < ᐃⵠᐃⵠ.ⵠⵠΔΔΔ.length; v879++) {
      ΔΔ[360][v879] = [ᐃⵠᐃⵠ.ⵠⵠΔΔΔ[v879].ⵠⵠᐃ, ᐃⵠᐃⵠ.ⵠⵠΔΔΔ[v879].ⲆᐃΔ];
    }
    for (v879 = 0; v879 < ᐃⵠᐃⵠ.ⵠΔΔⵠ.length; v879++) {
      ΔΔ[47][v879] = [ᐃⵠᐃⵠ.ⵠΔΔⵠ[v879].ⵠⵠᐃ, ᐃⵠᐃⵠ.ⵠΔΔⵠ[v879].ⲆᐃΔ];
    }
    for (v879 = 0; ᐃⵠᐃⵠ.ΔⲆⲆΔΔ.length > v879; v879++) {
      ΔΔ[1045][v879] = [ᐃⵠᐃⵠ.ΔⲆⲆΔΔ[v879].ⵠⵠᐃ, ᐃⵠᐃⵠ.ΔⲆⲆΔΔ[v879].ⲆᐃΔ];
    }
  };
  function f96(p588, p589, p590) {
    var v880 = document.createElement("canvas");
    var v881 = v880.getContext("2d");
    v880.width = p588 * 248;
    v880.height = p588 * 247;
    v881.save();
    v881.translate(p588 * 69.5, p588 * 145);
    f87(v881, p588 * -8.5, p588 * -63, p588 * 17, p588 * 127, p588 * 1);
    v881.restore();
    f90(v881, p590[0]);
    v881.save();
    v881.translate(p588 * 183, p588 * 145);
    f87(v881, p588 * -8, p588 * -63, p588 * 16, p588 * 126, p588 * 1);
    v881.restore();
    f90(v881, p590[0]);
    v881.save();
    v881.translate(p588 * 123.5, p588 * 62.5);
    v881.rotate(6.28);
    f87(v881, p588 * -84.5, p588 * -25.5, p588 * 169, p588 * 51, p588 * 5);
    v881.restore();
    f90(v881, p590[2], p590[1], p588 * 6);
    v881.save();
    v881.translate(p588 * 123.5, p588 * 118);
    v881.rotate(6.24);
    f87(v881, p588 * -85.5, p588 * -24, p588 * 169, p588 * 48, p588 * 5);
    v881.restore();
    f90(v881, p590[3], p590[1], p588 * 6);
    v881.save();
    v881.translate(p588 * 122, p588 * 177.5);
    v881.rotate(6.32);
    f87(v881, p588 * -84, p588 * -23.5, p588 * 169, p588 * 47, p588 * 5);
    v881.restore();
    f90(v881, p590[2], p590[1], p588 * 6);
    v881.beginPath();
    v881.lineCap = "round";
    v881.lineJoin = "round";
    v881.moveTo(p588 * 37, p588 * 157);
    v881.bezierCurveTo(p588 * 49, p588 * 160, p588 * 49, p588 * 160, p588 * 61, p588 * 163);
    v881.bezierCurveTo(p588 * 49.5, p588 * 165.5, p588 * 49.5, p588 * 165.5, p588 * 38, p588 * 168);
    v881.closePath();
    f90(v881, p590[1]);
    v881.beginPath();
    v881.lineCap = "round";
    v881.lineJoin = "round";
    v881.moveTo(p588 * 205, p588 * 175);
    v881.bezierCurveTo(p588 * 192.5, p588 * 180, p588 * 192.5, p588 * 180, p588 * 180, p588 * 185);
    v881.bezierCurveTo(p588 * 193, p588 * 188, p588 * 193, p588 * 188, p588 * 206, p588 * 191);
    v881.closePath();
    f90(v881, p590[1]);
    return v880;
  }
  function f97(p591, p592, p593) {
    var v882 = document.createElement("canvas");
    var v883 = v882.getContext("2d");
    v882.width = p591 * 70;
    v882.height = p591 * 70;
    v883.globalAlpha = 0.5;
    f93(v883, p591 * 26, p591 * 26, p591 * 9);
    f90(v883, p593[0]);
    f93(v883, p591 * 56, p591 * 36, p591 * 9);
    f90(v883, p593[1]);
    f93(v883, p591 * 40, p591 * 50, p591 * 9);
    f90(v883, p593[2]);
    v883.globalAlpha = 1;
    f93(v883, p591 * 26, p591 * 26, p591 * 5);
    f90(v883, p593[0]);
    f93(v883, p591 * 56, p591 * 36, p591 * 5);
    f90(v883, p593[1]);
    f93(v883, p591 * 40, p591 * 50, p591 * 5);
    f90(v883, p593[2]);
    return v882;
  }
  function f98(p594, p595, p596) {
    var v884 = document.createElement("canvas");
    var v885 = v884.getContext("2d");
    v884.width = p594 * 22;
    v884.height = p594 * 22;
    v885.globalAlpha = 0.4;
    f93(v885, p594 * 11, p594 * 11, p594 * 10);
    f90(v885, p596[0]);
    v885.globalAlpha = 0.7;
    f93(v885, p594 * 11, p594 * 11, p594 * 7);
    f90(v885, p596[0]);
    v885.globalAlpha = 1;
    f93(v885, p594 * 11, p594 * 11, p594 * 4);
    f90(v885, p596[0]);
    return v884;
  }
  function f99(p597, p598, p599) {
    var v886 = document.createElement("canvas");
    var v887 = v886.getContext("2d");
    v886.width = p597 * 248;
    v886.height = p597 * 247;
    v887.save();
    v887.translate(p597 * 183, p597 * 107);
    f87(v887, p597 * -8, p597 * -70.5, p597 * 16, p597 * 141, p597 * 1);
    v887.restore();
    f90(v887, p599[0]);
    v887.save();
    v887.translate(p597 * 69.5, p597 * 110);
    f87(v887, p597 * -8.5, p597 * -71, p597 * 17, p597 * 143, p597 * 1);
    v887.restore();
    f90(v887, p599[0]);
    v887.save();
    v887.translate(p597 * 123.5, p597 * 181);
    f87(v887, p597 * -84.5, p597 * -26, p597 * 169, p597 * 52, p597 * 5);
    v887.restore();
    f90(v887, p599[2], p599[1], p597 * 6);
    v887.beginPath();
    v887.lineCap = "round";
    v887.lineJoin = "round";
    v887.moveTo(p597 * 41, p597 * 95);
    v887.bezierCurveTo(p597 * 105, p597 * 96, p597 * 113, p597 * 99, p597 * 134, p597 * 102);
    v887.bezierCurveTo(p597 * 147, p597 * 106, p597 * 173, p597 * 100, p597 * 207, p597 * 105);
    v887.bezierCurveTo(p597 * 210, p597 * 105, p597 * 207, p597 * 140, p597 * 207, p597 * 154);
    v887.bezierCurveTo(p597 * 123.5, p597 * 151.5, p597 * 123.5, p597 * 151.5, p597 * 40, p597 * 149);
    v887.bezierCurveTo(p597 * 37, p597 * 145, p597 * 39, p597 * 95, p597 * 41, p597 * 96);
    v887.closePath();
    f90(v887, p599[2], p599[1], p597 * 6);
    v887.beginPath();
    v887.lineCap = "round";
    v887.lineJoin = "round";
    v887.moveTo(p597 * 68, p597 * 75);
    v887.bezierCurveTo(p597 * 54, p597 * 72.5, p597 * 54, p597 * 72.5, p597 * 40, p597 * 70);
    v887.bezierCurveTo(p597 * 38, p597 * 46, p597 * 40, p597 * 46, p597 * 53, p597 * 46);
    v887.bezierCurveTo(p597 * 201, p597 * 41, p597 * 201, p597 * 41, p597 * 201, p597 * 42);
    v887.bezierCurveTo(p597 * 211, p597 * 40, p597 * 208, p597 * 53, p597 * 208, p597 * 72);
    v887.bezierCurveTo(p597 * 209, p597 * 91, p597 * 210, p597 * 96, p597 * 194, p597 * 94);
    v887.bezierCurveTo(p597 * 119, p597 * 97, p597 * 119, p597 * 97, p597 * 44, p597 * 100);
    v887.bezierCurveTo(p597 * 39, p597 * 99, p597 * 40, p597 * 96, p597 * 40, p597 * 80);
    v887.bezierCurveTo(p597 * 54, p597 * 77.5, p597 * 54, p597 * 77.5, p597 * 68, p597 * 75);
    v887.closePath();
    f90(v887, p599[3], p599[1], p597 * 6);
    return v886;
  }
  function f100(p600, p601, p602) {
    var v888 = document.createElement("canvas");
    var v889 = v888.getContext("2d");
    v888.width = p600 * 248;
    v888.height = p600 * 247;
    v889.save();
    v889.translate(p600 * 182, p600 * 120);
    f87(v889, p600 * -8, p600 * -67, p600 * 16, p600 * 134, p600 * 1);
    v889.restore();
    f90(v889, p602[0]);
    v889.save();
    v889.translate(p600 * 68.5, p600 * 127.5);
    f87(v889, p600 * -8.5, p600 * -70.5, p600 * 17, p600 * 141, p600 * 1);
    v889.restore();
    f90(v889, p602[0]);
    v889.save();
    v889.translate(p600 * 123.5, p600 * 68);
    f87(v889, p600 * -82.5, p600 * -24, p600 * 165, p600 * 48, p600 * 4);
    v889.restore();
    f90(v889, p602[2], p602[1], p600 * 6);
    v889.save();
    v889.translate(p600 * 123, p600 * 179.5);
    f87(v889, p600 * -83, p600 * -24.5, p600 * 166, p600 * 49, p600 * 4);
    v889.restore();
    f90(v889, p602[2], p602[1], p600 * 6);
    v889.save();
    v889.translate(p600 * 123.5, p600 * 123.5);
    v889.rotate(6.24);
    f87(v889, p600 * -82.5, p600 * -24.5, p600 * 165, p600 * 49, p600 * 4);
    v889.restore();
    f90(v889, p602[3], p602[1], p600 * 6);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p600 * 204, p600 * 112);
    v889.bezierCurveTo(p600 * 149, p600 * 121.5, p600 * 96, p600 * 130, p600 * 94, p600 * 131);
    v889.bezierCurveTo(p600 * 149.5, p600 * 127.5, p600 * 149.5, p600 * 127.5, p600 * 205, p600 * 124);
    v889.closePath();
    f90(v889, p602[1]);
    return v888;
  }
  function f101(p603, p604, p605) {
    var v890 = document.createElement("canvas");
    var v891 = v890.getContext("2d");
    v890.width = p603 * 191;
    v890.height = p603 * 153;
    v891.globalAlpha = 0.5;
    v891.translate(0, p603 * 10);
    v891.save();
    v891.translate(p603 * 97.49996948242188, p603 * 95.12844848632812);
    f87(v891, p603 * -62.5, p603 * -41.5, p603 * 125, p603 * 83, p603 * 20);
    v891.restore();
    f90(v891, p605[0], p605[0], p603 * 4);
    v891.globalAlpha = 1;
    v891.translate(0, p603 * -10);
    v891.save();
    v891.translate(p603 * 97.49996948242188, p603 * 95.12844848632812);
    f87(v891, p603 * -62.5, p603 * -41.5, p603 * 125, p603 * 83, p603 * 20);
    v891.restore();
    f90(v891, p605[1], p605[2], p603 * 4);
    v891.globalCompositeOperation = "destination-out";
    v891.beginPath();
    v891.lineCap = "round";
    v891.lineJoin = "round";
    v891.moveTo(p603 * 26.999969482421875, p603 * 50.850677490234375);
    v891.bezierCurveTo(p603 * 46.499969482421875, p603 * 64.85067749023438, p603 * 46.499969482421875, p603 * 64.85067749023438, p603 * 65.99996948242188, p603 * 78.85067749023438);
    v891.bezierCurveTo(p603 * 80.99996948242188, p603 * 87.85067749023438, p603 * 105.99996948242188, p603 * 82.85067749023438, p603 * 114.99996948242188, p603 * 80.85067749023438);
    v891.bezierCurveTo(p603 * 130.99996948242188, p603 * 69.85067749023438, p603 * 152.99996948242188, p603 * 70.85067749023438, p603 * 166.99996948242188, p603 * 67.85067749023438);
    v891.bezierCurveTo(p603 * 156.99996948242188, p603 * 52.850677490234375, p603 * 156.99996948242188, p603 * 52.850677490234375, p603 * 146.99996948242188, p603 * 37.850677490234375);
    v891.bezierCurveTo(p603 * 101.49996948242188, p603 * 37.350677490234375, p603 * 101.49996948242188, p603 * 37.350677490234375, p603 * 55.999969482421875, p603 * 36.850677490234375);
    v891.closePath();
    f90(v891, p605[2], p605[3], p603 * 4);
    v891.globalCompositeOperation = "source-over";
    v891.beginPath();
    v891.lineCap = "round";
    v891.lineJoin = "round";
    v891.moveTo(p603 * 40.999969482421875, p603 * 59.850677490234375);
    v891.bezierCurveTo(p603 * 41.999969482421875, p603 * 50.850677490234375, p603 * 47.999969482421875, p603 * 47.850677490234375, p603 * 56.999969482421875, p603 * 49.850677490234375);
    v891.bezierCurveTo(p603 * 65.99996948242188, p603 * 41.850677490234375, p603 * 76.99996948242188, p603 * 42.850677490234375, p603 * 90.99996948242188, p603 * 47.850677490234375);
    v891.bezierCurveTo(p603 * 94.99996948242188, p603 * 42.850677490234375, p603 * 104.99996948242188, p603 * 42.850677490234375, p603 * 114.99996948242188, p603 * 47.850677490234375);
    v891.bezierCurveTo(p603 * 131.99996948242188, p603 * 42.850677490234375, p603 * 142.99996948242188, p603 * 48.850677490234375, p603 * 145.99996948242188, p603 * 56.850677490234375);
    v891.bezierCurveTo(p603 * 160.99996948242188, p603 * 63.850677490234375, p603 * 154.99996948242188, p603 * 69.85067749023438, p603 * 155.99996948242188, p603 * 70.85067749023438);
    v891.bezierCurveTo(p603 * 141.99996948242188, p603 * 71.85067749023438, p603 * 141.99996948242188, p603 * 71.85067749023438, p603 * 127.99996948242188, p603 * 72.85067749023438);
    v891.bezierCurveTo(p603 * 110.99996948242188, p603 * 83.85067749023438, p603 * 107.99996948242188, p603 * 82.85067749023438, p603 * 90.99996948242188, p603 * 85.85067749023438);
    v891.bezierCurveTo(p603 * 70.99996948242188, p603 * 83.85067749023438, p603 * 64.99996948242188, p603 * 79.85067749023438, p603 * 53.999969482421875, p603 * 70.85067749023438);
    v891.closePath();
    f90(v891, p605[3], p605[4], p603 * 4);
    v891.beginPath();
    v891.lineCap = "round";
    v891.lineJoin = "round";
    v891.moveTo(p603 * 33.999969482421875, p603 * 65.85067749023438);
    v891.bezierCurveTo(p603 * 36.999969482421875, p603 * 59.850677490234375, p603 * 34.999969482421875, p603 * 60.850677490234375, p603 * 39.999969482421875, p603 * 59.850677490234375);
    v891.bezierCurveTo(p603 * 47.999969482421875, p603 * 61.850677490234375, p603 * 62.999969482421875, p603 * 76.85067749023438, p603 * 74.99996948242188, p603 * 79.85067749023438);
    v891.bezierCurveTo(p603 * 93.99996948242188, p603 * 85.85067749023438, p603 * 111.99996948242188, p603 * 83.85067749023438, p603 * 124.99996948242188, p603 * 70.85067749023438);
    v891.bezierCurveTo(p603 * 129.99996948242188, p603 * 67.85067749023438, p603 * 145.99996948242188, p603 * 65.85067749023438, p603 * 159.99996948242188, p603 * 67.85067749023438);
    v891.bezierCurveTo(p603 * 159.99996948242188, p603 * 71.85067749023438, p603 * 159.99996948242188, p603 * 71.85067749023438, p603 * 159.99996948242188, p603 * 75.85067749023438);
    v891.bezierCurveTo(p603 * 146.99996948242188, p603 * 72.85067749023438, p603 * 144.99996948242188, p603 * 75.85067749023438, p603 * 143.99996948242188, p603 * 82.85067749023438);
    v891.bezierCurveTo(p603 * 144.99996948242188, p603 * 86.85067749023438, p603 * 140.99996948242188, p603 * 90.85067749023438, p603 * 137.99996948242188, p603 * 86.85067749023438);
    v891.bezierCurveTo(p603 * 139.99996948242188, p603 * 72.85067749023438, p603 * 135.99996948242188, p603 * 72.85067749023438, p603 * 133.99996948242188, p603 * 82.85067749023438);
    v891.bezierCurveTo(p603 * 127.99996948242188, p603 * 88.85067749023438, p603 * 124.99996948242188, p603 * 70.85067749023438, p603 * 116.99996948242188, p603 * 86.85067749023438);
    v891.bezierCurveTo(p603 * 110.99996948242188, p603 * 91.85067749023438, p603 * 96.99996948242188, p603 * 81.85067749023438, p603 * 89.99996948242188, p603 * 90.85067749023438);
    v891.bezierCurveTo(p603 * 85.99996948242188, p603 * 92.85067749023438, p603 * 81.99996948242188, p603 * 95.85067749023438, p603 * 76.99996948242188, p603 * 86.85067749023438);
    v891.bezierCurveTo(p603 * 67.99996948242188, p603 * 93.85067749023438, p603 * 67.99996948242188, p603 * 91.85067749023438, p603 * 60.999969482421875, p603 * 79.85067749023438);
    v891.bezierCurveTo(p603 * 53.999969482421875, p603 * 71.85067749023438, p603 * 52.999969482421875, p603 * 72.85067749023438, p603 * 46.999969482421875, p603 * 77.85067749023438);
    v891.bezierCurveTo(p603 * 41.999969482421875, p603 * 78.85067749023438, p603 * 42.999969482421875, p603 * 69.85067749023438, p603 * 33.999969482421875, p603 * 65.85067749023438);
    v891.closePath();
    f90(v891, p605[5], p605[6], p603 * 4);
    f93(v891, p603 * 68, p603 * 111.29513549804688, p603 * 15);
    f90(v891, p605[7], p605[8], p603 * 4);
    f93(v891, p603 * 123, p603 * 111.29510498046875, p603 * 15);
    f90(v891, p605[7], p605[8], p603 * 4);
    f93(v891, p603 * 63, p603 * 106, p603 * 5);
    f90(v891, p605[9]);
    f93(v891, p603 * 118, p603 * 106, p603 * 5);
    f90(v891, p605[9]);
    return v890;
  }
  function f102(p606, p607, p608) {
    var v892 = document.createElement("canvas");
    var v893 = v892.getContext("2d");
    var v894 = p606 * 40;
    var v895 = p606 * 40;
    v892.width = v894;
    v892.height = v895;
    var v896 = v894 * p606 / 2;
    var v897 = v895 * p606 / 2;
    var v898 = p606 * 15;
    v893.save();
    v893.translate(v896, v897);
    v893.globalAlpha = 1;
    f93(v893, 0, 0, v898);
    f90(v893, p608[0]);
    v898 = p606 * 5;
    v896 = p606 * 2;
    v897 = p606 * 1;
    v893.translate(v896, v897);
    v893.globalAlpha = 1;
    f93(v893, 0, 0, v898);
    f90(v893, p608[1]);
    v893.restore();
    return v892;
  }
  function f103(p609, p610, p611) {
    var v899 = document.createElement("canvas");
    var v900 = v899.getContext("2d");
    v899.width = p609 * 191;
    v899.height = p609 * 153;
    v900.globalAlpha = 0.5;
    v900.translate(0, p609 * 10);
    v900.save();
    v900.translate(p609 * 96.49996948242188, p609 * 66.79510498046875);
    v900.rotate(0);
    f87(v900, p609 * -79.5, p609 * -48.5, p609 * 159, p609 * 97, p609 * 22);
    v900.restore();
    f90(v900, p611[0], p611[0], p609 * 4);
    v900.globalAlpha = 1;
    v900.translate(0, p609 * -10);
    v900.save();
    v900.translate(p609 * 96.49996948242188, p609 * 66.79510498046875);
    v900.rotate(0);
    f87(v900, p609 * -79.5, p609 * -48.5, p609 * 159, p609 * 97, p609 * 22);
    v900.restore();
    f90(v900, p611[1], p611[2], p609 * 4);
    v900.translate(p609 * 2, 0);
    v900.beginPath();
    v900.lineCap = "round";
    v900.lineJoin = "round";
    v900.moveTo(p609 * 119, p609 * 28);
    v900.bezierCurveTo(p609 * 119, p609 * 22, p609 * 119, p609 * 20, p609 * 122, p609 * 16);
    v900.bezierCurveTo(p609 * 149, p609 * 39, p609 * 149, p609 * 39, p609 * 176, p609 * 63);
    v900.bezierCurveTo(p609 * 176, p609 * 75, p609 * 176, p609 * 75, p609 * 175, p609 * 88);
    v900.bezierCurveTo(p609 * 174, p609 * 90, p609 * 174, p609 * 90, p609 * 172, p609 * 93);
    v900.bezierCurveTo(p609 * 171, p609 * 101, p609 * 169, p609 * 109, p609 * 164, p609 * 113);
    v900.bezierCurveTo(p609 * 163, p609 * 104, p609 * 163, p609 * 104, p609 * 162, p609 * 95);
    v900.bezierCurveTo(p609 * 155, p609 * 105, p609 * 155, p609 * 105, p609 * 147, p609 * 116);
    v900.bezierCurveTo(p609 * 87, p609 * 114, p609 * 87, p609 * 114, p609 * 26, p609 * 112);
    v900.bezierCurveTo(p609 * 27, p609 * 106, p609 * 27, p609 * 106, p609 * 27, p609 * 101);
    v900.bezierCurveTo(p609 * 24, p609 * 104, p609 * 24, p609 * 104, p609 * 20, p609 * 108);
    v900.bezierCurveTo(p609 * 17, p609 * 103, p609 * 20, p609 * 86, p609 * 23, p609 * 72);
    v900.bezierCurveTo(p609 * 15, p609 * 74, p609 * 14, p609 * 78, p609 * 12, p609 * 83);
    v900.bezierCurveTo(p609 * 12, p609 * 65, p609 * 12, p609 * 54, p609 * 16, p609 * 42);
    v900.bezierCurveTo(p609 * 14, p609 * 39, p609 * 14, p609 * 39, p609 * 12, p609 * 36);
    v900.bezierCurveTo(p609 * 16, p609 * 33, p609 * 16, p609 * 33, p609 * 19, p609 * 30);
    v900.bezierCurveTo(p609 * 18, p609 * 27, p609 * 18, p609 * 27, p609 * 17, p609 * 25);
    v900.bezierCurveTo(p609 * 24, p609 * 24, p609 * 31, p609 * 21, p609 * 29, p609 * 19);
    v900.bezierCurveTo(p609 * 37, p609 * 25, p609 * 37, p609 * 25, p609 * 45, p609 * 31);
    v900.bezierCurveTo(p609 * 40, p609 * 23, p609 * 40, p609 * 21, p609 * 42, p609 * 16);
    v900.bezierCurveTo(p609 * 74, p609 * 16, p609 * 74, p609 * 16, p609 * 106, p609 * 16);
    v900.bezierCurveTo(p609 * 113, p609 * 21, p609 * 113, p609 * 21, p609 * 119, p609 * 26);
    v900.closePath();
    f90(v900, p611[3], p611[4], p609 * 4);
    return v899;
  }
  function f104(p612, p613, p614, p615) {
    var v901 = document.createElement("canvas");
    var v902 = v901.getContext("2d");
    v901.width = p612 * 185;
    v901.height = p612 * 240;
    v902.globalAlpha = 0.5;
    v902.translate(0, p612 * 10);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 44, p612 * 137);
    v902.bezierCurveTo(p612 * 60, p612 * 87, p612 * 68, p612 * 66, p612 * 92, p612 * 67);
    v902.bezierCurveTo(p612 * 115, p612 * 64, p612 * 129, p612 * 97, p612 * 137, p612 * 136);
    v902.closePath();
    f90(v902, p614[0]);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 53, p612 * 181);
    v902.bezierCurveTo(p612 * 30, p612 * 164, p612 * 19, p612 * 150, p612 * 11, p612 * 136);
    v902.bezierCurveTo(p612 * 28, p612 * 121, p612 * 38, p612 * 132, p612 * 48, p612 * 150);
    v902.closePath();
    f90(v902, p614[0]);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 63, p612 * 208);
    v902.bezierCurveTo(p612 * 75, p612 * 224, p612 * 86, p612 * 228, p612 * 93, p612 * 228);
    v902.bezierCurveTo(p612 * 104, p612 * 229, p612 * 116, p612 * 219, p612 * 122, p612 * 205);
    v902.closePath();
    f90(v902, p614[0]);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 130, p612 * 170);
    v902.bezierCurveTo(p612 * 146, p612 * 125, p612 * 156, p612 * 126, p612 * 173, p612 * 137);
    v902.bezierCurveTo(p612 * 167, p612 * 151, p612 * 143, p612 * 174, p612 * 131, p612 * 183);
    v902.closePath();
    f90(v902, p614[0]);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 39, p612 * 140);
    v902.bezierCurveTo(p612 * 75, p612 * 126, p612 * 113, p612 * 127, p612 * 143, p612 * 137);
    v902.bezierCurveTo(p612 * 141, p612 * 186, p612 * 130, p612 * 202, p612 * 113, p612 * 214);
    v902.bezierCurveTo(p612 * 85, p612 * 228, p612 * 56, p612 * 219, p612 * 48, p612 * 173);
    v902.bezierCurveTo(p612 * 40, p612 * 148, p612 * 43, p612 * 145, p612 * 39, p612 * 140);
    v902.closePath();
    f90(v902, p614[0]);
    v902.globalAlpha = 1;
    v902.translate(0, p612 * -10);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 44, p612 * 137);
    v902.bezierCurveTo(p612 * 60, p612 * 87, p612 * 68, p612 * 66, p612 * 92, p612 * 67);
    v902.bezierCurveTo(p612 * 115, p612 * 64, p612 * 129, p612 * 97, p612 * 137, p612 * 136);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 53, p612 * 181);
    v902.bezierCurveTo(p612 * 30, p612 * 164, p612 * 19, p612 * 150, p612 * 11, p612 * 136);
    v902.bezierCurveTo(p612 * 28, p612 * 121, p612 * 38, p612 * 132, p612 * 48, p612 * 150);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 63, p612 * 208);
    v902.bezierCurveTo(p612 * 75, p612 * 224, p612 * 86, p612 * 228, p612 * 93, p612 * 228);
    v902.bezierCurveTo(p612 * 104, p612 * 229, p612 * 116, p612 * 219, p612 * 122, p612 * 205);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 130, p612 * 170);
    v902.bezierCurveTo(p612 * 146, p612 * 125, p612 * 156, p612 * 126, p612 * 173, p612 * 137);
    v902.bezierCurveTo(p612 * 167, p612 * 151, p612 * 143, p612 * 174, p612 * 131, p612 * 183);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 39, p612 * 140);
    v902.bezierCurveTo(p612 * 75, p612 * 126, p612 * 113, p612 * 127, p612 * 143, p612 * 137);
    v902.bezierCurveTo(p612 * 141, p612 * 186, p612 * 130, p612 * 202, p612 * 113, p612 * 214);
    v902.bezierCurveTo(p612 * 85, p612 * 228, p612 * 56, p612 * 219, p612 * 48, p612 * 173);
    v902.bezierCurveTo(p612 * 40, p612 * 148, p612 * 43, p612 * 145, p612 * 39, p612 * 140);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 59, p612 * 99);
    v902.bezierCurveTo(p612 * 71, p612 * 68, p612 * 81, p612 * 68, p612 * 94, p612 * 67);
    v902.bezierCurveTo(p612 * 105, p612 * 66, p612 * 119, p612 * 75, p612 * 123, p612 * 96);
    v902.bezierCurveTo(p612 * 104, p612 * 91, p612 * 101, p612 * 94, p612 * 94, p612 * 97);
    v902.bezierCurveTo(p612 * 76, p612 * 92, p612 * 73, p612 * 93, p612 * 60, p612 * 99);
    v902.closePath();
    f90(v902, p614[3], p614[2], p612 * 4);
    if (p615 === 0) {
      v902.beginPath();
      v902.lineCap = "round";
      v902.lineJoin = "round";
      v902.moveTo(p612 * 47, p612 * 149);
      v902.bezierCurveTo(p612 * 43, p612 * 140, p612 * 48, p612 * 130, p612 * 59, p612 * 127);
      v902.bezierCurveTo(p612 * 77, p612 * 126, p612 * 90, p612 * 131, p612 * 131, p612 * 127);
      v902.bezierCurveTo(p612 * 143, p612 * 130, p612 * 144, p612 * 143, p612 * 132, p612 * 154);
      v902.bezierCurveTo(p612 * 90, p612 * 152, p612 * 90, p612 * 152, p612 * 48, p612 * 150);
      v902.closePath();
      f90(v902, p614[1]);
      v902.beginPath();
      v902.lineCap = "round";
      v902.lineJoin = "round";
      v902.moveTo(p612 * 40, p612 * 139);
      v902.bezierCurveTo(p612 * 48, p612 * 113, p612 * 76, p612 * 119, p612 * 91, p612 * 126);
      v902.bezierCurveTo(p612 * 117, p612 * 113, p612 * 135, p612 * 117, p612 * 144, p612 * 134);
      v902.bezierCurveTo(p612 * 144, p612 * 138, p612 * 144, p612 * 138, p612 * 144, p612 * 142);
      v902.bezierCurveTo(p612 * 128, p612 * 124, p612 * 108, p612 * 124, p612 * 91, p612 * 136);
      v902.bezierCurveTo(p612 * 59, p612 * 124, p612 * 50, p612 * 137, p612 * 42, p612 * 148);
      v902.closePath();
      f90(v902, p614[3], p614[2], p612 * 4);
    } else {
      v902.beginPath();
      v902.lineCap = "round";
      v902.lineJoin = "round";
      v902.moveTo(p612 * 41, p612 * 139);
      v902.bezierCurveTo(p612 * 53, p612 * 117, p612 * 69, p612 * 118, p612 * 92, p612 * 127);
      v902.bezierCurveTo(p612 * 124, p612 * 111, p612 * 136, p612 * 121, p612 * 143, p612 * 136);
      v902.bezierCurveTo(p612 * 142, p612 * 144, p612 * 142, p612 * 144, p612 * 141, p612 * 152);
      v902.bezierCurveTo(p612 * 128, p612 * 131, p612 * 113, p612 * 138, p612 * 92, p612 * 145);
      v902.bezierCurveTo(p612 * 57, p612 * 133, p612 * 57, p612 * 147, p612 * 44, p612 * 154);
      v902.closePath();
      f90(v902, p614[3], p614[2], p612 * 4);
    }
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 90, p612 * 95);
    v902.bezierCurveTo(p612 * 99, p612 * 82, p612 * 98, p612 * 58, p612 * 99, p612 * 40);
    v902.bezierCurveTo(p612 * 90, p612 * 38, p612 * 89, p612 * 34, p612 * 92, p612 * 17);
    v902.bezierCurveTo(p612 * 92, p612 * 5, p612 * 83, p612 * 16, p612 * 78, p612 * 29);
    v902.bezierCurveTo(p612 * 72, p612 * 59, p612 * 87, p612 * 81, p612 * 89, p612 * 87);
    v902.closePath();
    f90(v902, p614[1], p614[2], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 90, p612 * 86);
    v902.bezierCurveTo(p612 * 95, p612 * 74, p612 * 95, p612 * 62, p612 * 95, p612 * 43);
    v902.bezierCurveTo(p612 * 84, p612 * 37, p612 * 86, p612 * 34, p612 * 89, p612 * 16);
    v902.bezierCurveTo(p612 * 75, p612 * 29, p612 * 80, p612 * 58, p612 * 90, p612 * 85);
    v902.closePath();
    f90(v902, p614[1], p614[3], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 92, p612 * 117);
    v902.bezierCurveTo(p612 * 98, p612 * 87, p612 * 93, p612 * 78, p612 * 85, p612 * 76);
    v902.bezierCurveTo(p612 * 85.5, p612 * 79.5, p612 * 85.5, p612 * 79.5, p612 * 86, p612 * 83);
    v902.bezierCurveTo(p612 * 84, p612 * 85.5, p612 * 84, p612 * 85.5, p612 * 82, p612 * 88);
    v902.bezierCurveTo(p612 * 90, p612 * 93, p612 * 89, p612 * 100, p612 * 92, p612 * 117);
    v902.closePath();
    f90(v902, p614[1], p614[3], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 92, p612 * 175);
    v902.bezierCurveTo(p612 * 95, p612 * 135, p612 * 98, p612 * 125, p612 * 109, p612 * 121);
    v902.bezierCurveTo(p612 * 106, p612 * 114, p612 * 104, p612 * 114, p612 * 102, p612 * 113);
    v902.bezierCurveTo(p612 * 103, p612 * 106, p612 * 104, p612 * 103, p612 * 107, p612 * 96);
    v902.bezierCurveTo(p612 * 74, p612 * 108, p612 * 86, p612 * 157, p612 * 92, p612 * 174);
    v902.closePath();
    f90(v902, p614[1], p614[3], p612 * 4);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 48, p612 * 169);
    v902.bezierCurveTo(p612 * 42, p612 * 187, p612 * 50, p612 * 193, p612 * 59, p612 * 198);
    v902.closePath();
    f90(v902, vVVVUndefined13, p614[2], p612 * 5);
    v902.beginPath();
    v902.lineCap = "round";
    v902.lineJoin = "round";
    v902.moveTo(p612 * 136, p612 * 171);
    v902.bezierCurveTo(p612 * 139, p612 * 186, p612 * 138, p612 * 191, p612 * 124, p612 * 199);
    v902.closePath();
    f90(v902, undefined, p614[2], p612 * 4);
    f93(v902, p612 * 63, p612 * 180, p612 * 15.231546211727817);
    f90(v902, p614[4]);
    f93(v902, p612 * 121, p612 * 181, p612 * 15.652475842498529);
    f90(v902, p614[4]);
    f93(v902, p612 * 58, p612 * 175, p612 * 5.656854249492381);
    f90(v902, p614[2]);
    f93(v902, p612 * 116, p612 * 175, p612 * 5.656854249492381);
    f90(v902, p614[2]);
    return v901;
  }
  function f105(p616, p617) {
    var v903 = document.createElement("canvas");
    var v904 = v903.getContext("2d");
    v903.width = p616 * 191;
    v903.height = p616 * 153;
    v904.save();
    v904.translate(p616 * 96.49996948242188, p616 * 66.79510498046875);
    f87(v904, p616 * -79.5, p616 * -48.5, p616 * 159, p616 * 97, p616 * 22);
    v904.restore();
    f90(v904, p617[0], p617[0], p616 * 4);
    v904.translate(p616 * 2, 0);
    v904.beginPath();
    v904.lineCap = "round";
    v904.lineJoin = "round";
    v904.moveTo(p616 * 119, p616 * 28);
    v904.bezierCurveTo(p616 * 119, p616 * 22, p616 * 119, p616 * 20, p616 * 122, p616 * 16);
    v904.bezierCurveTo(p616 * 149, p616 * 39, p616 * 149, p616 * 39, p616 * 176, p616 * 63);
    v904.bezierCurveTo(p616 * 176, p616 * 75, p616 * 176, p616 * 75, p616 * 175, p616 * 88);
    v904.bezierCurveTo(p616 * 174, p616 * 90, p616 * 174, p616 * 90, p616 * 172, p616 * 93);
    v904.bezierCurveTo(p616 * 171, p616 * 101, p616 * 169, p616 * 109, p616 * 164, p616 * 113);
    v904.bezierCurveTo(p616 * 163, p616 * 104, p616 * 163, p616 * 104, p616 * 162, p616 * 95);
    v904.bezierCurveTo(p616 * 155, p616 * 105, p616 * 155, p616 * 105, p616 * 147, p616 * 116);
    v904.bezierCurveTo(p616 * 87, p616 * 114, p616 * 87, p616 * 114, p616 * 26, p616 * 112);
    v904.bezierCurveTo(p616 * 27, p616 * 106, p616 * 27, p616 * 106, p616 * 27, p616 * 101);
    v904.bezierCurveTo(p616 * 24, p616 * 104, p616 * 24, p616 * 104, p616 * 20, p616 * 108);
    v904.bezierCurveTo(p616 * 17, p616 * 103, p616 * 20, p616 * 86, p616 * 23, p616 * 72);
    v904.bezierCurveTo(p616 * 15, p616 * 74, p616 * 14, p616 * 78, p616 * 12, p616 * 83);
    v904.bezierCurveTo(p616 * 12, p616 * 65, p616 * 12, p616 * 54, p616 * 16, p616 * 42);
    v904.bezierCurveTo(p616 * 14, p616 * 39, p616 * 14, p616 * 39, p616 * 12, p616 * 36);
    v904.bezierCurveTo(p616 * 16, p616 * 33, p616 * 16, p616 * 33, p616 * 19, p616 * 30);
    v904.bezierCurveTo(p616 * 18, p616 * 27, p616 * 18, p616 * 27, p616 * 17, p616 * 25);
    v904.bezierCurveTo(p616 * 24, p616 * 24, p616 * 31, p616 * 21, p616 * 29, p616 * 19);
    v904.bezierCurveTo(p616 * 37, p616 * 25, p616 * 37, p616 * 25, p616 * 45, p616 * 31);
    v904.bezierCurveTo(p616 * 40, p616 * 23, p616 * 40, p616 * 21, p616 * 42, p616 * 16);
    v904.bezierCurveTo(p616 * 74, p616 * 16, p616 * 74, p616 * 16, p616 * 106, p616 * 16);
    v904.bezierCurveTo(p616 * 113, p616 * 21, p616 * 113, p616 * 21, p616 * 119, p616 * 26);
    v904.closePath();
    f90(v904, p617[0], p617[0], p616 * 4);
    v904.save();
    v904.translate(p616 * 97.49996948242188, p616 * 95.12844848632812);
    f87(v904, p616 * -62.5, p616 * -41.5, p616 * 125, p616 * 83, p616 * 20);
    v904.restore();
    f90(v904, p617[0], p617[0], p616 * 4);
    return v903;
  }
  function f106(p618, p619) {
    var v905 = document.createElement("canvas");
    var v906 = v905.getContext("2d");
    v905.width = p618 * 185;
    v905.height = p618 * 240;
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 44, p618 * 137);
    v906.bezierCurveTo(p618 * 60, p618 * 87, p618 * 68, p618 * 66, p618 * 92, p618 * 67);
    v906.bezierCurveTo(p618 * 115, p618 * 64, p618 * 129, p618 * 97, p618 * 137, p618 * 136);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 53, p618 * 181);
    v906.bezierCurveTo(p618 * 30, p618 * 164, p618 * 19, p618 * 150, p618 * 11, p618 * 136);
    v906.bezierCurveTo(p618 * 28, p618 * 121, p618 * 38, p618 * 132, p618 * 48, p618 * 150);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 63, p618 * 208);
    v906.bezierCurveTo(p618 * 75, p618 * 224, p618 * 86, p618 * 228, p618 * 93, p618 * 228);
    v906.bezierCurveTo(p618 * 104, p618 * 229, p618 * 116, p618 * 219, p618 * 122, p618 * 205);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 130, p618 * 170);
    v906.bezierCurveTo(p618 * 146, p618 * 125, p618 * 156, p618 * 126, p618 * 173, p618 * 137);
    v906.bezierCurveTo(p618 * 167, p618 * 151, p618 * 143, p618 * 174, p618 * 131, p618 * 183);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 39, p618 * 140);
    v906.bezierCurveTo(p618 * 75, p618 * 126, p618 * 113, p618 * 127, p618 * 143, p618 * 137);
    v906.bezierCurveTo(p618 * 141, p618 * 186, p618 * 130, p618 * 202, p618 * 113, p618 * 214);
    v906.bezierCurveTo(p618 * 85, p618 * 228, p618 * 56, p618 * 219, p618 * 48, p618 * 173);
    v906.bezierCurveTo(p618 * 40, p618 * 148, p618 * 43, p618 * 145, p618 * 39, p618 * 140);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 90, p618 * 95);
    v906.bezierCurveTo(p618 * 99, p618 * 82, p618 * 98, p618 * 58, p618 * 99, p618 * 40);
    v906.bezierCurveTo(p618 * 90, p618 * 38, p618 * 89, p618 * 34, p618 * 92, p618 * 17);
    v906.bezierCurveTo(p618 * 92, p618 * 5, p618 * 83, p618 * 16, p618 * 78, p618 * 29);
    v906.bezierCurveTo(p618 * 72, p618 * 59, p618 * 87, p618 * 81, p618 * 89, p618 * 87);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 90, p618 * 86);
    v906.bezierCurveTo(p618 * 95, p618 * 74, p618 * 95, p618 * 62, p618 * 95, p618 * 43);
    v906.bezierCurveTo(p618 * 84, p618 * 37, p618 * 86, p618 * 34, p618 * 89, p618 * 16);
    v906.bezierCurveTo(p618 * 75, p618 * 29, p618 * 80, p618 * 58, p618 * 90, p618 * 85);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 92, p618 * 117);
    v906.bezierCurveTo(p618 * 98, p618 * 87, p618 * 93, p618 * 78, p618 * 85, p618 * 76);
    v906.bezierCurveTo(p618 * 85.5, p618 * 79.5, p618 * 85.5, p618 * 79.5, p618 * 86, p618 * 83);
    v906.bezierCurveTo(p618 * 84, p618 * 85.5, p618 * 84, p618 * 85.5, p618 * 82, p618 * 88);
    v906.bezierCurveTo(p618 * 90, p618 * 93, p618 * 89, p618 * 100, p618 * 92, p618 * 117);
    v906.closePath();
    f90(v906, p619[0]);
    v906.beginPath();
    v906.lineCap = "round";
    v906.lineJoin = "round";
    v906.moveTo(p618 * 92, p618 * 175);
    v906.bezierCurveTo(p618 * 95, p618 * 135, p618 * 98, p618 * 125, p618 * 109, p618 * 121);
    v906.bezierCurveTo(p618 * 106, p618 * 114, p618 * 104, p618 * 114, p618 * 102, p618 * 113);
    v906.bezierCurveTo(p618 * 103, p618 * 106, p618 * 104, p618 * 103, p618 * 107, p618 * 96);
    v906.bezierCurveTo(p618 * 74, p618 * 108, p618 * 86, p618 * 157, p618 * 92, p618 * 174);
    v906.closePath();
    f90(v906, p619[0]);
    return v905;
  }
  const v907 = 13;
  const v908 = 10;
  function f107(p620, p621) {
    var v909 = document.createElement("canvas");
    var v910 = v909.getContext("2d");
    var v911 = p620 * 85;
    var v912 = p620 * 115;
    var v913 = p620 * 6;
    v909.width = v911;
    v909.height = v912;
    v910.translate(p620 * -130, p620 * -60 + v913);
    v910.globalAlpha = 0.5;
    v910.beginPath();
    v910.bezierCurveTo(p620 * 190, p620 * 87, p620 * 201, p620 * 59, p620 * 208, p620 * 64);
    v910.bezierCurveTo(p620 * 213, p620 * 68, p620 * 204, p620 * 93, p620 * 195, p620 * 109);
    v910.bezierCurveTo(p620 * 195, p620 * 109, p620 * 202, p620 * 124, p620 * 191, p620 * 141);
    v910.bezierCurveTo(p620 * 182, p620 * 151, p620 * 164, p620 * 155, p620 * 148, p620 * 144);
    v910.bezierCurveTo(p620 * 136, p620 * 135, p620 * 138, p620 * 111, p620 * 145, p620 * 104);
    v910.bezierCurveTo(p620 * 140, p620 * 92, p620 * 131, p620 * 67, p620 * 138, p620 * 63);
    v910.bezierCurveTo(p620 * 145, p620 * 61, p620 * 153, p620 * 82, p620 * 155, p620 * 96);
    v910.bezierCurveTo(p620 * 167, p620 * 91, p620 * 178, p620 * 92, p620 * 187, p620 * 98);
    v910.closePath();
    f90(v910, p621[0]);
    v910.translate(0, -v913);
    v910.globalAlpha = 1;
    v910.beginPath();
    v910.bezierCurveTo(p620 * 190, p620 * 87, p620 * 201, p620 * 59, p620 * 208, p620 * 64);
    v910.bezierCurveTo(p620 * 213, p620 * 68, p620 * 204, p620 * 93, p620 * 195, p620 * 109);
    v910.bezierCurveTo(p620 * 195, p620 * 109, p620 * 202, p620 * 124, p620 * 191, p620 * 141);
    v910.bezierCurveTo(p620 * 182, p620 * 151, p620 * 164, p620 * 155, p620 * 148, p620 * 144);
    v910.bezierCurveTo(p620 * 136, p620 * 135, p620 * 138, p620 * 111, p620 * 145, p620 * 104);
    v910.bezierCurveTo(p620 * 140, p620 * 92, p620 * 131, p620 * 67, p620 * 138, p620 * 63);
    v910.bezierCurveTo(p620 * 145, p620 * 61, p620 * 153, p620 * 82, p620 * 155, p620 * 96);
    v910.bezierCurveTo(p620 * 167, p620 * 91, p620 * 178, p620 * 92, p620 * 187, p620 * 98);
    v910.closePath();
    f90(v910, p621[1], p621[2], 4);
    var v914 = p620 * 155;
    var v915 = p620 * 133;
    var v916 = p620 * 10;
    var v917 = p620 * 3;
    var v918 = v914 + p620 * -3;
    var v919 = v915 + p620 * -5;
    v910.save();
    v910.translate(v914, v915);
    v910.globalAlpha = 1;
    f93(v910, 0, 0, v916);
    f90(v910, p621[3]);
    v910.restore();
    v910.save();
    v910.translate(v918, v919);
    v910.globalAlpha = 1;
    f93(v910, 0, 0, v917);
    f90(v910, p621[4]);
    v910.restore();
    v910.save();
    v910.translate(v914 + p620 * 27, v915);
    v910.globalAlpha = 1;
    f93(v910, 0, 0, v916);
    f90(v910, p621[3]);
    v910.restore();
    v910.save();
    v910.translate(p620 * 27 + v918, v919);
    v910.globalAlpha = 1;
    f93(v910, 0, 0, v917);
    f90(v910, p621[4]);
    return v909;
  }
  function f108(p622, p623) {
    var v920 = document.createElement("canvas");
    var v921 = v920.getContext("2d");
    var v922 = p622 * 100;
    var v923 = p622 * 100;
    var v924 = v922 / 2;
    var v925 = v923 / 2;
    v920.width = v922;
    v920.height = v923;
    var v926 = p622 * 5;
    var v927 = p622 * 28;
    var v928 = v926 / 2;
    var v929 = v927 / 2;
    v921.translate(v924, v925);
    for (var v930 = 0; v930 < 4; v930++) {
      f87(v921, -v928, -v929, v926, v927, p622 * 2);
      v921.rotate(Math.PI / 4);
      f90(v921, p623);
    }
    v921.arc(0, 0, p622 * 10, 0, Math.PI * 2);
    f90(v921, p623);
    v921.globalCompositeOperation = "destination-out";
    f93(v921, 0, 0, p622 * 4);
    v921.fill();
    return v920;
  }
  function f109(p624) {
    var v931 = document.createElement("canvas");
    var v932 = v931.getContext("2d");
    var v933 = p624 * 200;
    var v934 = p624 * 200;
    v931.width = v933;
    v931.height = v934;
    var vRu = f155(0.35, vVV314, ["#0e3022", "#0b8052", "#077b49"]);
    v932.drawImage(vRu, 10, 10);
    vRu = f172(0.9, false, ["#3d2a6e", "#8255b5"]);
    v932.drawImage(vRu, 21, 20);
    vRu = f172(0.9, false, ["#3d2a6e", "#8255b5"]);
    v932.drawImage(vRu, 38, 28);
    vRu = f172(0.9, v31, ["#3d2a6e", "#8255b5"]);
    v932.drawImage(vRu, 15, 37);
    vRu = f172(0.9, false, ["#3d2a6e", "#8255b5"]);
    v932.drawImage(vRu, 32, 45);
    return v931;
  }
  function f110(p625, p626, p627) {
    var v935 = document.createElement("canvas");
    var v936 = v935.getContext("2d");
    var v937 = p625 * 32;
    var v938 = p625 * 32;
    var v939 = v937 / 2;
    var v940 = v938 / 2;
    v935.width = v937;
    v935.height = v938;
    var v941 = p625 * 5;
    var v942 = p625 * 28;
    var v943 = v941 / 2;
    var v944 = v942 / 2;
    v936.translate(p625 * 0, p625 * 0);
    v936.translate(v939, v940);
    if (p627 == 1) {
      f93(v936, 0, 0, p625 * 10);
      f90(v936, p626[2], p626[2], p625 * 3);
      for (var v945 = 0; v945 < 4; v945++) {
        f87(v936, -v943, -v944, v941, v942, p625 * 2);
        v936.rotate(Math.PI / 4);
        f90(v936, p626[2], p626[2], p625 * 4);
      }
    }
    f93(v936, 0, 0, p625 * 10);
    f90(v936, p626[0], p626[1], p625 * 1.5);
    for (v945 = 0; v945 < 4; v945++) {
      f87(v936, -v943, -v944, v941, v942, p625 * 2);
      v936.rotate(Math.PI / 4);
      f90(v936, p626[0], p626[1], p625 * 1.5);
    }
    f93(v936, 0, 0, p625 * 10);
    f90(v936, p626[0]);
    f93(v936, 0, 0, p625 * 4);
    f90(v936, p626[2], p626[1], p625 * 1.5);
    v936.globalCompositeOperation = "destination-out";
    f93(v936, 0, 0, p625 * 4);
    f90(v936, p626[0], p626[1], p625 * 2);
    v936.globalCompositeOperation = "source-over";
    f93(v936, 0, 0, p625 * 4);
    f90(v936, vVVVUndefined82, p626[1], p625 * 2);
    return v935;
  }
  function f111(p628, p629) {
    var v946 = document.createElement("canvas");
    var v947 = v946.getContext("2d");
    v946.width = p628 * 238;
    v946.height = p628 * 230;
    v947.translate(p628 * -93, p628 * -110 + p628 * 5);
    v947.globalAlpha = 0.3;
    f93(v947, p628 * 213.5, p628 * 256.75, p628 * 75);
    f90(v947, p629[5]);
    f93(v947, p628 * 213.5, p628 * 175.75, p628 * 25);
    f90(v947, p629[5]);
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 156.5, p628 * 137.75);
    v947.bezierCurveTo(p628 * 170.5, p628 * 173.75, p628 * 195.5, p628 * 177.75, p628 * 209.5, p628 * 177.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 217.5, p628 * 178.75);
    v947.bezierCurveTo(p628 * 251.5, p628 * 177.75, p628 * 263.5, p628 * 153.75, p628 * 270.5, p628 * 140.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 130.5, p628 * 124.75);
    v947.bezierCurveTo(p628 * 153.5, p628 * 185.75, p628 * 198.5, p628 * 185.75, p628 * 213.5, p628 * 185.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 183.75);
    v947.bezierCurveTo(p628 * 265.5, p628 * 192.75, p628 * 293.5, p628 * 141.75, p628 * 297.5, p628 * 124.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 107.5, p628 * 213.75);
    v947.bezierCurveTo(p628 * 151.5, p628 * 190.75, p628 * 198.5, p628 * 184.75, p628 * 210.5, p628 * 184.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 212.5, p628 * 187.75);
    v947.bezierCurveTo(p628 * 258.5, p628 * 182.75, p628 * 286.5, p628 * 194.75, p628 * 314.5, p628 * 206.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 102.5, p628 * 258.75);
    v947.bezierCurveTo(p628 * 142.5, p628 * 200.75, p628 * 193.5, p628 * 194.75, p628 * 211.5, p628 * 185.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 192.75);
    v947.bezierCurveTo(p628 * 276.5, p628 * 194.75, p628 * 306.5, p628 * 233.75, p628 * 316.5, p628 * 246.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[5];
    v947.stroke();
    v947.translate(0, -5);
    v947.globalAlpha = 1;
    f93(v947, p628 * 213.5, p628 * 256.75, p628 * 75);
    f90(v947, p629[3]);
    f93(v947, p628 * 213.5, p628 * 175.75, p628 * 25);
    f90(v947, p629[3]);
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 219.5, p628 * 158.75);
    v947.bezierCurveTo(p628 * 226.5, p628 * 159.75, p628 * 227.5, p628 * 147.75, p628 * 219.5, p628 * 145.75);
    v947.closePath();
    v947.lineWidth = p628 * 10;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 210.5, p628 * 160.75);
    v947.bezierCurveTo(p628 * 203.5, p628 * 159.75, p628 * 199.5, p628 * 146.75, p628 * 210.5, p628 * 145.75);
    v947.closePath();
    v947.lineWidth = p628 * 10;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 219.5, p628 * 158.75);
    v947.bezierCurveTo(p628 * 226.5, p628 * 159.75, p628 * 227.5, p628 * 147.75, p628 * 219.5, p628 * 145.75);
    v947.closePath();
    v947.fillStyle = p629[0];
    v947.fill();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 210.5, p628 * 160.75);
    v947.bezierCurveTo(p628 * 203.5, p628 * 159.75, p628 * 199.5, p628 * 146.75, p628 * 210.5, p628 * 145.75);
    v947.closePath();
    v947.fillStyle = p629[0];
    v947.fill();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 156.5, p628 * 137.75);
    v947.bezierCurveTo(p628 * 170.5, p628 * 173.75, p628 * 195.5, p628 * 177.75, p628 * 209.5, p628 * 177.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 217.5, p628 * 178.75);
    v947.bezierCurveTo(p628 * 251.5, p628 * 177.75, p628 * 263.5, p628 * 153.75, p628 * 270.5, p628 * 140.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 130.5, p628 * 124.75);
    v947.bezierCurveTo(p628 * 153.5, p628 * 185.75, p628 * 198.5, p628 * 185.75, p628 * 213.5, p628 * 185.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 183.75);
    v947.bezierCurveTo(p628 * 265.5, p628 * 192.75, p628 * 293.5, p628 * 141.75, p628 * 297.5, p628 * 124.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 107.5, p628 * 213.75);
    v947.bezierCurveTo(p628 * 151.5, p628 * 190.75, p628 * 198.5, p628 * 184.75, p628 * 210.5, p628 * 184.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 212.5, p628 * 187.75);
    v947.bezierCurveTo(p628 * 258.5, p628 * 182.75, p628 * 286.5, p628 * 194.75, p628 * 314.5, p628 * 206.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 102.5, p628 * 258.75);
    v947.bezierCurveTo(p628 * 142.5, p628 * 200.75, p628 * 193.5, p628 * 194.75, p628 * 211.5, p628 * 185.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 192.75);
    v947.bezierCurveTo(p628 * 276.5, p628 * 194.75, p628 * 306.5, p628 * 233.75, p628 * 316.5, p628 * 246.75);
    v947.lineWidth = p628 * 17;
    v947.strokeStyle = p629[3];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 156.5, p628 * 137.75);
    v947.bezierCurveTo(p628 * 170.5, p628 * 173.75, p628 * 195.5, p628 * 177.75, p628 * 209.5, p628 * 177.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 217.5, p628 * 178.75);
    v947.bezierCurveTo(p628 * 251.5, p628 * 177.75, p628 * 263.5, p628 * 153.75, p628 * 270.5, p628 * 140.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 130.5, p628 * 124.75);
    v947.bezierCurveTo(p628 * 153.5, p628 * 185.75, p628 * 198.5, p628 * 185.75, p628 * 213.5, p628 * 185.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 183.75);
    v947.bezierCurveTo(p628 * 265.5, p628 * 192.75, p628 * 293.5, p628 * 141.75, p628 * 297.5, p628 * 124.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 107.5, p628 * 213.75);
    v947.bezierCurveTo(p628 * 151.5, p628 * 190.75, p628 * 198.5, p628 * 184.75, p628 * 210.5, p628 * 184.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 212.5, p628 * 187.75);
    v947.bezierCurveTo(p628 * 258.5, p628 * 182.75, p628 * 286.5, p628 * 194.75, p628 * 314.5, p628 * 206.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 102.5, p628 * 258.75);
    v947.bezierCurveTo(p628 * 142.5, p628 * 200.75, p628 * 193.5, p628 * 194.75, p628 * 211.5, p628 * 185.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    v947.beginPath();
    v947.lineCap = "round";
    v947.lineJoin = "round";
    v947.moveTo(p628 * 214.5, p628 * 192.75);
    v947.bezierCurveTo(p628 * 276.5, p628 * 194.75, p628 * 306.5, p628 * 233.75, p628 * 316.5, p628 * 246.75);
    v947.lineWidth = p628 * 8;
    v947.strokeStyle = p629[0];
    v947.stroke();
    f93(v947, p628 * 213.5, p628 * 256.75, p628 * 70);
    f90(v947, p629[0]);
    f93(v947, p628 * 213.5, p628 * 175.75, p628 * 20);
    f90(v947, p629[0]);
    f93(v947, p628 * 222, p628 * 166, p628 * 5);
    v947.fillStyle = p629[2];
    v947.fill();
    f93(v947, p628 * 205, p628 * 166, p628 * 5);
    v947.fillStyle = p629[2];
    v947.fill();
    f93(v947, p628 * 206.2, p628 * 167, p628 * 2.5);
    v947.fillStyle = p629[4];
    v947.fill();
    f93(v947, p628 * 223.2, p628 * 167, p628 * 2.5);
    v947.fillStyle = p629[4];
    v947.fill();
    v947.save();
    v947.translate(p628 * 213.5, p628 * 293.75);
    v947.rotate(0.76);
    f87(v947, p628 * -22, p628 * -21, p628 * 44, p628 * 42, p628 * 6);
    v947.restore();
    v947.fillStyle = p629[1];
    v947.fill();
    v947.save();
    v947.translate(p628 * 212.5, p628 * 258.25);
    v947.rotate(0.8);
    f87(v947, p628 * -15, p628 * -14.5, p628 * 30, p628 * 29, p628 * 6);
    v947.restore();
    v947.fillStyle = p629[1];
    v947.fill();
    return v946;
  }
  function f112(p630, p631, p632) {
    var v948 = document.createElement("canvas");
    var v949 = v948.getContext("2d");
    var v950 = (v959 = p630 * 125) / 2;
    var v951 = (v960 = p630 * 95) / 2;
    var v952 = p630 * 10;
    var v953 = p630 * 8;
    var v954 = p630 * 112;
    var v955 = p630 * 82;
    var v956 = v954 / 2;
    var v957 = v955 / 2;
    var v958 = p630 * 4;
    v948.width = v959;
    v948.height = v960;
    v949.translate(v950 - p630 * 4, v951 + p630 * 4);
    v949.globalAlpha = p631 ? 0.5 : 1;
    f87(v949, -v956, -v957, v954, v955, v952);
    f90(v949, p632[0]);
    v949.globalAlpha = 1;
    v949.translate(0, -v953);
    f87(v949, -v956, -v957, v954, v955, v952);
    f90(v949, p632[1], p632[2], v958);
    var v959 = p630 * 55;
    var v960 = p630 * 45;
    v952 = 5;
    v949.translate(p630 * -40, p630 * -30);
    f87(v949, 0, 0, v959, v960, v952);
    f90(v949, p632[3]);
    var vF108 = f108(p630 * 0.7, p632[3]);
    v949.drawImage(vF108, p630 * 45, p630 * -25);
    vF108 = f108(p630 * 0.7, p632[3]);
    v949.drawImage(vF108, p630 * 45, p630 * 15);
    vF108 = f108(p630 * 1.2, p632[3]);
    v949.drawImage(vF108, p630 * 28, p630 * -30);
    v959 = p630 * 15;
    v960 = p630 * 70;
    v952 = p630 * 5;
    v949.translate(p630 * 78, p630 * -5);
    f87(v949, 0, 0, v959, v960, v952);
    f90(v949, p632[4]);
    v959 = p630 * 9;
    v960 = p630 * 50;
    v952 = p630 * 3;
    v949.translate(p630 * -20, p630 * 20);
    v949.rotate(Math.PI / 5);
    v949.globalAlpha = 0.6;
    f87(v949, 0, 0, v959, v960, v952);
    f90(v949, p632[5]);
    v949.translate(p630 * -20, p630 * 29);
    v949.rotate(Math.PI / 5);
    v949.globalAlpha = 0.6;
    v949.beginPath();
    v949.lineJoin = "round";
    v949.moveTo(0, 0);
    v949.lineTo(0, p630 * 30);
    v949.lineTo(p630 * 30, p630 * 30);
    v949.closePath();
    f90(v949, null, p632[5], p630 * 8);
    return v948;
  }
  function f113(p633, p634) {
    var v961 = document.createElement("canvas");
    var v962 = v961.getContext("2d");
    v961.width = p633 * 188;
    v961.height = p633 * 190;
    v962.globalAlpha = 0.5;
    v962.translate(0, p633 * 5);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 33.00567626953125, p633 * 95.44320678710938);
    v962.bezierCurveTo(p633 * 42.00567626953125, p633 * 87.44320678710938, p633 * 48.00567626953125, p633 * 51.443206787109375, p633 * 74.00567626953125, p633 * 47.443206787109375);
    v962.bezierCurveTo(p633 * 100.00567626953125, p633 * 42.443206787109375, p633 * 118.00567626953125, p633 * 49.443206787109375, p633 * 131.00567626953125, p633 * 55.443206787109375);
    v962.bezierCurveTo(p633 * 140.00567626953125, p633 * 70.44320678710938, p633 * 145.00567626953125, p633 * 87.44320678710938, p633 * 152.00567626953125, p633 * 94.44320678710938);
    v962.bezierCurveTo(p633 * 149.00567626953125, p633 * 99.44320678710938, p633 * 147.00567626953125, p633 * 98.44320678710938, p633 * 141.00567626953125, p633 * 101.44320678710938);
    v962.bezierCurveTo(p633 * 147.00567626953125, p633 * 108.44320678710938, p633 * 147.00567626953125, p633 * 111.44320678710938, p633 * 147.00567626953125, p633 * 112.44320678710938);
    v962.bezierCurveTo(p633 * 143.00567626953125, p633 * 112.44320678710938, p633 * 141.00567626953125, p633 * 112.44320678710938, p633 * 137.00567626953125, p633 * 111.44320678710938);
    v962.bezierCurveTo(p633 * 138.00567626953125, p633 * 117.44320678710938, p633 * 138.00567626953125, p633 * 120.44320678710938, p633 * 138.00567626953125, p633 * 124.44320678710938);
    v962.bezierCurveTo(p633 * 125.00567626953125, p633 * 107.44320678710938, p633 * 121.00567626953125, p633 * 124.44320678710938, p633 * 110.00567626953125, p633 * 141.44320678710938);
    v962.bezierCurveTo(p633 * 102.00567626953125, p633 * 158.44320678710938, p633 * 89.00567626953125, p633 * 158.44320678710938, p633 * 80.00567626953125, p633 * 144.44320678710938);
    v962.bezierCurveTo(p633 * 61.00567626953125, p633 * 111.44320678710938, p633 * 56.00567626953125, p633 * 117.44320678710938, p633 * 48.00567626953125, p633 * 120.44320678710938);
    v962.bezierCurveTo(p633 * 46.00567626953125, p633 * 118.44320678710938, p633 * 47.00567626953125, p633 * 112.44320678710938, p633 * 48.00567626953125, p633 * 107.44320678710938);
    v962.bezierCurveTo(p633 * 43.00567626953125, p633 * 111.44320678710938, p633 * 40.00567626953125, p633 * 111.44320678710938, p633 * 37.00567626953125, p633 * 110.44320678710938);
    v962.bezierCurveTo(p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 42.00567626953125, p633 * 99.44320678710938);
    v962.bezierCurveTo(p633 * 33.00567626953125, p633 * 99.44320678710938, p633 * 33.00567626953125, p633 * 98.44320678710938, p633 * 33.00567626953125, p633 * 96.44320678710938);
    v962.closePath();
    f90(v962, p634[0], p634[0], p633 * 4);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 60.00567626953125, p633 * 99.35227966308594);
    v962.bezierCurveTo(p633 * 70.00567626953125, p633 * 82.35227966308594, p633 * 85.00567626953125, p633 * 86.35227966308594, p633 * 87.00567626953125, p633 * 97.35227966308594);
    v962.bezierCurveTo(p633 * 89.00567626953125, p633 * 101.35227966308594, p633 * 88.00567626953125, p633 * 105.35227966308594, p633 * 87.00567626953125, p633 * 110.35227966308594);
    v962.bezierCurveTo(p633 * 89.00567626953125, p633 * 111.35227966308594, p633 * 91.00567626953125, p633 * 112.35227966308594, p633 * 93.00567626953125, p633 * 115.35227966308594);
    v962.bezierCurveTo(p633 * 96.00567626953125, p633 * 111.35227966308594, p633 * 99.00567626953125, p633 * 111.35227966308594, p633 * 100.00567626953125, p633 * 110.35227966308594);
    v962.bezierCurveTo(p633 * 98.00567626953125, p633 * 92.35227966308594, p633 * 103.00567626953125, p633 * 86.35227966308594, p633 * 113.00567626953125, p633 * 89.35227966308594);
    v962.bezierCurveTo(p633 * 122.00567626953125, p633 * 92.35227966308594, p633 * 123.00567626953125, p633 * 94.35227966308594, p633 * 126.00567626953125, p633 * 98.35227966308594);
    v962.bezierCurveTo(p633 * 124.00567626953125, p633 * 102.35227966308594, p633 * 123.00567626953125, p633 * 103.35227966308594, p633 * 121.00567626953125, p633 * 104.35227966308594);
    v962.bezierCurveTo(p633 * 124.00567626953125, p633 * 105.35227966308594, p633 * 126.00567626953125, p633 * 107.35227966308594, p633 * 129.00567626953125, p633 * 111.35227966308594);
    v962.bezierCurveTo(p633 * 115.00567626953125, p633 * 122.35227966308594, p633 * 113.00567626953125, p633 * 145.35227966308594, p633 * 100.00567626953125, p633 * 152.35227966308594);
    v962.bezierCurveTo(p633 * 91.00567626953125, p633 * 158.35227966308594, p633 * 83.00567626953125, p633 * 149.35227966308594, p633 * 76.00567626953125, p633 * 138.35227966308594);
    v962.bezierCurveTo(p633 * 67.00567626953125, p633 * 114.35227966308594, p633 * 63.00567626953125, p633 * 113.35227966308594, p633 * 59.00567626953125, p633 * 111.35227966308594);
    v962.bezierCurveTo(p633 * 62.00567626953125, p633 * 107.35227966308594, p633 * 64.00567626953125, p633 * 105.35227966308594, p633 * 66.00567626953125, p633 * 104.35227966308594);
    v962.bezierCurveTo(p633 * 63.00567626953125, p633 * 100.35227966308594, p633 * 62.00567626953125, p633 * 100.35227966308594, p633 * 60.00567626953125, p633 * 99.35227966308594);
    v962.closePath();
    f90(v962, p634[0], p634[0], p633 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 51.00567626953125, p633 * 72.53409576416016);
    v962.bezierCurveTo(p633 * 48.00567626953125, p633 * 56.534095764160156, p633 * 48.00567626953125, p633 * 49.534095764160156, p633 * 54.00567626953125, p633 * 35.534095764160156);
    v962.bezierCurveTo(p633 * 58.00567626953125, p633 * 26.534095764160156, p633 * 65.00567626953125, p633 * 27.534095764160156, p633 * 73.00567626953125, p633 * 40.534095764160156);
    v962.bezierCurveTo(p633 * 81.00567626953125, p633 * 49.534095764160156, p633 * 82.00567626953125, p633 * 50.534095764160156, p633 * 83.00567626953125, p633 * 51.534095764160156);
    v962.bezierCurveTo(p633 * 77.00567626953125, p633 * 71.53409576416016, p633 * 64.00567626953125, p633 * 75.53409576416016, p633 * 51.00567626953125, p633 * 72.53409576416016);
    v962.closePath();
    f90(v962, p634[0], p634[0], p633 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 105.00567626953125, p633 * 50.53410339355469);
    v962.bezierCurveTo(p633 * 112.00567626953125, p633 * 48.53410339355469, p633 * 125.00567626953125, p633 * 21.534103393554688, p633 * 132.00567626953125, p633 * 33.53410339355469);
    v962.bezierCurveTo(p633 * 138.00567626953125, p633 * 42.53410339355469, p633 * 140.00567626953125, p633 * 64.53410339355469, p633 * 136.00567626953125, p633 * 75.53410339355469);
    v962.closePath();
    f90(v962, p634[0], p634[0], p633 * 2);
    v962.globalAlpha = 1;
    v962.translate(0, p633 * -5);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 33.00567626953125, p633 * 95.44320678710938);
    v962.bezierCurveTo(p633 * 42.00567626953125, p633 * 87.44320678710938, p633 * 48.00567626953125, p633 * 51.443206787109375, p633 * 74.00567626953125, p633 * 47.443206787109375);
    v962.bezierCurveTo(p633 * 100.00567626953125, p633 * 42.443206787109375, p633 * 118.00567626953125, p633 * 49.443206787109375, p633 * 131.00567626953125, p633 * 55.443206787109375);
    v962.bezierCurveTo(p633 * 140.00567626953125, p633 * 70.44320678710938, p633 * 145.00567626953125, p633 * 87.44320678710938, p633 * 152.00567626953125, p633 * 94.44320678710938);
    v962.bezierCurveTo(p633 * 149.00567626953125, p633 * 99.44320678710938, p633 * 147.00567626953125, p633 * 98.44320678710938, p633 * 141.00567626953125, p633 * 101.44320678710938);
    v962.bezierCurveTo(p633 * 147.00567626953125, p633 * 108.44320678710938, p633 * 147.00567626953125, p633 * 111.44320678710938, p633 * 147.00567626953125, p633 * 112.44320678710938);
    v962.bezierCurveTo(p633 * 143.00567626953125, p633 * 112.44320678710938, p633 * 141.00567626953125, p633 * 112.44320678710938, p633 * 137.00567626953125, p633 * 111.44320678710938);
    v962.bezierCurveTo(p633 * 138.00567626953125, p633 * 117.44320678710938, p633 * 138.00567626953125, p633 * 120.44320678710938, p633 * 138.00567626953125, p633 * 124.44320678710938);
    v962.bezierCurveTo(p633 * 125.00567626953125, p633 * 107.44320678710938, p633 * 121.00567626953125, p633 * 124.44320678710938, p633 * 110.00567626953125, p633 * 141.44320678710938);
    v962.bezierCurveTo(p633 * 102.00567626953125, p633 * 158.44320678710938, p633 * 89.00567626953125, p633 * 158.44320678710938, p633 * 80.00567626953125, p633 * 144.44320678710938);
    v962.bezierCurveTo(p633 * 61.00567626953125, p633 * 111.44320678710938, p633 * 56.00567626953125, p633 * 117.44320678710938, p633 * 48.00567626953125, p633 * 120.44320678710938);
    v962.bezierCurveTo(p633 * 46.00567626953125, p633 * 118.44320678710938, p633 * 47.00567626953125, p633 * 112.44320678710938, p633 * 48.00567626953125, p633 * 107.44320678710938);
    v962.bezierCurveTo(p633 * 43.00567626953125, p633 * 111.44320678710938, p633 * 40.00567626953125, p633 * 111.44320678710938, p633 * 37.00567626953125, p633 * 110.44320678710938);
    v962.bezierCurveTo(p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 42.00567626953125, p633 * 99.44320678710938);
    v962.bezierCurveTo(p633 * 33.00567626953125, p633 * 99.44320678710938, p633 * 33.00567626953125, p633 * 98.44320678710938, p633 * 33.00567626953125, p633 * 96.44320678710938);
    v962.closePath();
    f90(v962, p634[1], p634[2], p633 * 3);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 60.00567626953125, p633 * 99.35227966308594);
    v962.bezierCurveTo(p633 * 70.00567626953125, p633 * 82.35227966308594, p633 * 85.00567626953125, p633 * 86.35227966308594, p633 * 87.00567626953125, p633 * 97.35227966308594);
    v962.bezierCurveTo(p633 * 89.00567626953125, p633 * 101.35227966308594, p633 * 88.00567626953125, p633 * 105.35227966308594, p633 * 87.00567626953125, p633 * 110.35227966308594);
    v962.bezierCurveTo(p633 * 89.00567626953125, p633 * 111.35227966308594, p633 * 91.00567626953125, p633 * 112.35227966308594, p633 * 93.00567626953125, p633 * 115.35227966308594);
    v962.bezierCurveTo(p633 * 96.00567626953125, p633 * 111.35227966308594, p633 * 99.00567626953125, p633 * 111.35227966308594, p633 * 100.00567626953125, p633 * 110.35227966308594);
    v962.bezierCurveTo(p633 * 98.00567626953125, p633 * 92.35227966308594, p633 * 103.00567626953125, p633 * 86.35227966308594, p633 * 113.00567626953125, p633 * 89.35227966308594);
    v962.bezierCurveTo(p633 * 122.00567626953125, p633 * 92.35227966308594, p633 * 123.00567626953125, p633 * 94.35227966308594, p633 * 126.00567626953125, p633 * 98.35227966308594);
    v962.bezierCurveTo(p633 * 124.00567626953125, p633 * 102.35227966308594, p633 * 123.00567626953125, p633 * 103.35227966308594, p633 * 121.00567626953125, p633 * 104.35227966308594);
    v962.bezierCurveTo(p633 * 124.00567626953125, p633 * 105.35227966308594, p633 * 126.00567626953125, p633 * 107.35227966308594, p633 * 129.00567626953125, p633 * 111.35227966308594);
    v962.bezierCurveTo(p633 * 115.00567626953125, p633 * 122.35227966308594, p633 * 113.00567626953125, p633 * 145.35227966308594, p633 * 100.00567626953125, p633 * 152.35227966308594);
    v962.bezierCurveTo(p633 * 91.00567626953125, p633 * 158.35227966308594, p633 * 83.00567626953125, p633 * 149.35227966308594, p633 * 76.00567626953125, p633 * 138.35227966308594);
    v962.bezierCurveTo(p633 * 67.00567626953125, p633 * 114.35227966308594, p633 * 63.00567626953125, p633 * 113.35227966308594, p633 * 59.00567626953125, p633 * 111.35227966308594);
    v962.bezierCurveTo(p633 * 62.00567626953125, p633 * 107.35227966308594, p633 * 64.00567626953125, p633 * 105.35227966308594, p633 * 66.00567626953125, p633 * 104.35227966308594);
    v962.bezierCurveTo(p633 * 63.00567626953125, p633 * 100.35227966308594, p633 * 62.00567626953125, p633 * 100.35227966308594, p633 * 60.00567626953125, p633 * 99.35227966308594);
    v962.closePath();
    f90(v962, p634[3]);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 33.00567626953125, p633 * 95.44320678710938);
    v962.bezierCurveTo(p633 * 42.00567626953125, p633 * 87.44320678710938, p633 * 48.00567626953125, p633 * 51.443206787109375, p633 * 74.00567626953125, p633 * 47.443206787109375);
    v962.bezierCurveTo(p633 * 100.00567626953125, p633 * 42.443206787109375, p633 * 118.00567626953125, p633 * 49.443206787109375, p633 * 131.00567626953125, p633 * 55.443206787109375);
    v962.bezierCurveTo(p633 * 140.00567626953125, p633 * 70.44320678710938, p633 * 145.00567626953125, p633 * 87.44320678710938, p633 * 152.00567626953125, p633 * 94.44320678710938);
    v962.bezierCurveTo(p633 * 149.00567626953125, p633 * 99.44320678710938, p633 * 147.00567626953125, p633 * 98.44320678710938, p633 * 141.00567626953125, p633 * 101.44320678710938);
    v962.bezierCurveTo(p633 * 147.00567626953125, p633 * 108.44320678710938, p633 * 147.00567626953125, p633 * 111.44320678710938, p633 * 147.00567626953125, p633 * 112.44320678710938);
    v962.bezierCurveTo(p633 * 143.00567626953125, p633 * 112.44320678710938, p633 * 141.00567626953125, p633 * 112.44320678710938, p633 * 137.00567626953125, p633 * 111.44320678710938);
    v962.bezierCurveTo(p633 * 138.00567626953125, p633 * 117.44320678710938, p633 * 138.00567626953125, p633 * 120.44320678710938, p633 * 138.00567626953125, p633 * 124.44320678710938);
    v962.bezierCurveTo(p633 * 125.00567626953125, p633 * 107.44320678710938, p633 * 121.00567626953125, p633 * 124.44320678710938, p633 * 110.00567626953125, p633 * 141.44320678710938);
    v962.bezierCurveTo(p633 * 102.00567626953125, p633 * 158.44320678710938, p633 * 89.00567626953125, p633 * 158.44320678710938, p633 * 80.00567626953125, p633 * 144.44320678710938);
    v962.bezierCurveTo(p633 * 61.00567626953125, p633 * 111.44320678710938, p633 * 56.00567626953125, p633 * 117.44320678710938, p633 * 48.00567626953125, p633 * 120.44320678710938);
    v962.bezierCurveTo(p633 * 46.00567626953125, p633 * 118.44320678710938, p633 * 47.00567626953125, p633 * 112.44320678710938, p633 * 48.00567626953125, p633 * 107.44320678710938);
    v962.bezierCurveTo(p633 * 43.00567626953125, p633 * 111.44320678710938, p633 * 40.00567626953125, p633 * 111.44320678710938, p633 * 37.00567626953125, p633 * 110.44320678710938);
    v962.bezierCurveTo(p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 39.50567626953125, p633 * 104.94320678710938, p633 * 42.00567626953125, p633 * 99.44320678710938);
    v962.bezierCurveTo(p633 * 33.00567626953125, p633 * 99.44320678710938, p633 * 33.00567626953125, p633 * 98.44320678710938, p633 * 33.00567626953125, p633 * 96.44320678710938);
    v962.closePath();
    f90(v962, vVVVUndefined823, p634[2], p633 * 3);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 51.00567626953125, p633 * 72.53409576416016);
    v962.bezierCurveTo(p633 * 48.00567626953125, p633 * 56.534095764160156, p633 * 48.00567626953125, p633 * 49.534095764160156, p633 * 54.00567626953125, p633 * 35.534095764160156);
    v962.bezierCurveTo(p633 * 58.00567626953125, p633 * 26.534095764160156, p633 * 65.00567626953125, p633 * 27.534095764160156, p633 * 73.00567626953125, p633 * 40.534095764160156);
    v962.bezierCurveTo(p633 * 81.00567626953125, p633 * 49.534095764160156, p633 * 82.00567626953125, p633 * 50.534095764160156, p633 * 83.00567626953125, p633 * 51.534095764160156);
    f90(v962, p634[1], p634[2], p633 * 3);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 105.00567626953125, p633 * 50.53410339355469);
    v962.bezierCurveTo(p633 * 112.00567626953125, p633 * 48.53410339355469, p633 * 125.00567626953125, p633 * 21.534103393554688, p633 * 132.00567626953125, p633 * 33.53410339355469);
    v962.bezierCurveTo(p633 * 138.00567626953125, p633 * 42.53410339355469, p633 * 140.00567626953125, p633 * 64.53410339355469, p633 * 136.00567626953125, p633 * 75.53410339355469);
    f90(v962, p634[1], p634[2], p633 * 3);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 57.00567626953125, p633 * 68.53410339355469);
    v962.bezierCurveTo(p633 * 63.00567626953125, p633 * 69.53410339355469, p633 * 69.00567626953125, p633 * 66.53410339355469, p633 * 73.00567626953125, p633 * 60.53410339355469);
    v962.bezierCurveTo(p633 * 66.00567626953125, p633 * 47.53410339355469, p633 * 61.00567626953125, p633 * 42.53410339355469, p633 * 58.00567626953125, p633 * 49.53410339355469);
    v962.bezierCurveTo(p633 * 56.00567626953125, p633 * 59.53410339355469, p633 * 56.00567626953125, p633 * 64.53410339355469, p633 * 57.00567626953125, p633 * 67.53410339355469);
    v962.closePath();
    f90(v962, p634[3]);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 115.00567626953125, p633 * 59.715911865234375);
    v962.bezierCurveTo(p633 * 119.00567626953125, p633 * 48.715911865234375, p633 * 126.00567626953125, p633 * 41.715911865234375, p633 * 129.00567626953125, p633 * 48.715911865234375);
    v962.bezierCurveTo(p633 * 131.00567626953125, p633 * 56.715911865234375, p633 * 133.00567626953125, p633 * 71.71591186523438, p633 * 127.00567626953125, p633 * 68.71591186523438);
    v962.bezierCurveTo(p633 * 120.00567626953125, p633 * 67.71591186523438, p633 * 114.00567626953125, p633 * 59.715911865234375, p633 * 116.00567626953125, p633 * 58.715911865234375);
    v962.closePath();
    f90(v962, p634[3]);
    f93(v962, p633 * 77, p633 * 107, p633 * 6);
    f90(v962, p634[2]);
    f93(v962, p633 * 110, p633 * 107, p633 * 6);
    f90(v962, p634[2]);
    f93(v962, p633 * 75, p633 * 105, p633 * 3);
    f90(v962, p634[4]);
    f93(v962, p633 * 108, p633 * 105, p633 * 3);
    f90(v962, p634[4]);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p633 * 88.00567626953125, p633 * 141.4431915283203);
    v962.bezierCurveTo(p633 * 93.00567626953125, p633 * 137.4431915283203, p633 * 96.00567626953125, p633 * 138.4431915283203, p633 * 100.00567626953125, p633 * 141.4431915283203);
    v962.bezierCurveTo(p633 * 103.00567626953125, p633 * 143.4431915283203, p633 * 101.00567626953125, p633 * 149.4431915283203, p633 * 95.00567626953125, p633 * 148.4431915283203);
    v962.bezierCurveTo(p633 * 85.00567626953125, p633 * 148.4431915283203, p633 * 86.00567626953125, p633 * 145.4431915283203, p633 * 88.00567626953125, p633 * 142.4431915283203);
    v962.closePath();
    f90(v962, p634[1]);
    return v961;
  }
  function f114(p635, p636, p637) {
    var v963 = document.createElement("canvas");
    var v964 = v963.getContext("2d");
    var v965 = p635 * 55;
    var v966 = p635 * 55;
    var v967 = p635 * 8;
    v963.width = v965;
    v963.height = v966;
    v964.translate(p635 * -65, p635 * -55 + v967);
    v964.globalAlpha = 1;
    v964.beginPath();
    v964.moveTo(p635 * 95, p635 * 60);
    v964.bezierCurveTo(p635 * 107, p635 * 62, p635 * 110, p635 * 73, p635 * 107, p635 * 79);
    v964.bezierCurveTo(p635 * 104, p635 * 85, p635 * 85, p635 * 93, p635 * 81, p635 * 88);
    v964.bezierCurveTo(p635 * 74, p635 * 80, p635 * 85, p635 * 60, p635 * 95, p635 * 60);
    v964.closePath();
    f90(v964, p637[0], p637[1], 3);
    v964.globalAlpha = 1;
    v964.beginPath();
    v964.moveTo(p635 * 91, p635 * 70);
    v964.bezierCurveTo(p635 * 91, p635 * 75, p635 * 100, p635 * 76, p635 * 100, p635 * 73);
    v964.bezierCurveTo(p635 * 100, p635 * 69, p635 * 89, p635 * 65, p635 * 91, p635 * 70);
    v964.closePath();
    f90(v964, p637[2], p637[3], 3);
    return v963;
  }
  const v968 = 12066755;
  const v969 = 12066755 .ⵠᐃⲆΔΔΔⲆ;
  const v970 = `const ᐃᐃᐃᐃⵠⲆΔ = (typeof ΔⵠⵠΔᐃᐃᐃ === "${v969}") ? 1 : 0; return ᐃᐃᐃᐃⵠⲆΔ;`;
  function f115(p638, p639, p640) {
    var v971 = document.createElement("canvas");
    var v972 = v971.getContext("2d");
    v971.width = p638 * 400;
    v971.height = p638 * 400;
    v972.save();
    v972.translate(p638 * 85, p638 * 237);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 54.585977194239184, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 178, p638 * 238);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 52.53573932334064, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 270, p638 * 239);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 53.58058329516393, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 222, p638 * 312);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 52.53573932334064, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 317, p638 * 159);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 57.63465889766331, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 223.5, p638 * 139.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 51.66236541235796, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 132.5, p638 * 137.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 52.009614495783374, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 178.5, p638 * 58.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 53.16013544000805, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 177.5, p638 * 216.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 50, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 84.5, p638 * 215.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 54, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 319.5, p638 * 138.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 55.08175741568164, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 269.5, p638 * 216.0625);
    v972.rotate(1.5707963267948966);
    f88(v972, 6, p638 * 54.589376255824725, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 221.5, p638 * 293.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 49.49747468305833, p638 * 1);
    v972.restore();
    f90(v972, p640[1], p640[2], p638 * 12);
    v972.beginPath();
    v972.lineCap = "round";
    v972.lineJoin = "round";
    v972.moveTo(p638 * 221.5, p638 * 342.0625);
    v972.bezierCurveTo(p638 * 221.5, p638 * 350.5625, p638 * 221.5, p638 * 350.5625, p638 * 221.5, p638 * 359.0625);
    v972.closePath();
    f90(v972, undefined, p640[2], p638 * 12);
    v972.beginPath();
    v972.lineCap = "round";
    v972.lineJoin = "round";
    v972.moveTo(p638 * 84.5, p638 * 270.0625);
    v972.bezierCurveTo(p638 * 84.5, p638 * 277.0625, p638 * 84.5, p638 * 277.0625, p638 * 84.5, p638 * 284.0625);
    v972.closePath();
    f90(v972, undefined, p640[2], p638 * 12);
    v972.save();
    v972.translate(p638 * 84.5, p638 * 215.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 177.5, p638 * 215.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 222.5, p638 * 294.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 270.5, p638 * 216.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 320.5, p638 * 134.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 224.5, p638 * 138.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 133.5, p638 * 137.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    v972.save();
    v972.translate(p638 * 178.5, p638 * 56.0625);
    v972.rotate(0.5235987755982988);
    f88(v972, 6, p638 * 30, p638 * 15);
    v972.restore();
    f90(v972, p640[3]);
    return v971;
  }
  function f116(p641, p642, p643) {
    var v973 = document.createElement("canvas");
    var v974 = v973.getContext("2d");
    v973.width = p641 * 400;
    v973.height = p641 * 400;
    v974.save();
    v974.translate(p641 * 202.5, p641 * 147.5);
    f87(v974, p641 * -96.5, p641 * -21.5, p641 * 193, p641 * 193, p641 * 0);
    v974.restore();
    f90(v974, p642[0], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 202.5, p641 * 190.5);
    f87(v974, p641 * 96.5, p641 * -21.5, p641 * -193, p641 * 43, p641 * 0);
    v974.restore();
    f90(v974, p642[2], p642[1], p641 * 12);
    v974.save();
    v974.save();
    v974.translate(p641 * 202.5, p641 * 233.5);
    f87(v974, p641 * -96.5, p641 * -20.5, p641 * 193, p641 * 41, p641 * 0);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 202.5, p641 * 275);
    f87(v974, p641 * 96.5, p641 * -21, p641 * -193, p641 * 42, p641 * 0);
    v974.restore();
    f90(v974, p642[0], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 201, p641 * 212);
    v974.rotate(8.64);
    f87(v974, p641 * -116, p641 * -22, p641 * 232, p641 * 44, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 203.5, p641 * 121.5);
    f87(v974, p641 * -115.5, p641 * -20.5, p641 * 231, p641 * 41, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 203.5, p641 * 299);
    f87(v974, p641 * -115.5, p641 * -20, p641 * 231, p641 * 40, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 298.5, p641 * 210);
    f87(v974, p641 * -20.5, p641 * -109, p641 * 41, p641 * 218, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 108.5, p641 * 210);
    f87(v974, p641 * -20.5, p641 * -109, p641 * 41, p641 * 218, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[1], p641 * 12);
    v974.save();
    v974.translate(p641 * 204, p641 * 121.5);
    f87(v974, p641 * -92, p641 * -9.5, p641 * 184, p641 * 19, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[3], p641 * 10);
    v974.save();
    v974.translate(p641 * 197, p641 * 299);
    f87(v974, p641 * 85, p641 * -9, p641 * -170, p641 * 18, p641 * 10);
    v974.restore();
    f90(v974, p642[3], p642[3], p641 * 10);
    v974.beginPath();
    v974.lineCap = "round";
    v974.lineJoin = "round";
    v974.moveTo(p641 * 94, p641 * 317);
    v974.bezierCurveTo(p641 * 110.5, p641 * 299.5, p641 * 110.5, p641 * 299.5, p641 * 127, p641 * 282);
    v974.closePath();
    f90(v974, vVVVVUndefined82, p642[1], p641 * 12);
    v974.beginPath();
    v974.lineCap = "round";
    v974.lineJoin = "round";
    v974.moveTo(p641 * 279, p641 * 142);
    v974.bezierCurveTo(p641 * 296.5, p641 * 125.5, p641 * 296.5, p641 * 125.5, p641 * 314, p641 * 109);
    v974.closePath();
    f90(v974, undefined, p642[1], p641 * 12);
    v974.beginPath();
    v974.lineCap = "round";
    v974.lineJoin = "round";
    v974.moveTo(p641 * 93, p641 * 106);
    v974.bezierCurveTo(p641 * 110.5, p641 * 124, p641 * 110.5, p641 * 124, p641 * 128, p641 * 142);
    v974.closePath();
    f90(v974, vVVVUndefined13, p642[1], p641 * 12);
    v974.beginPath();
    v974.lineCap = "round";
    v974.lineJoin = "round";
    v974.moveTo(p641 * 281, p641 * 282);
    v974.bezierCurveTo(p641 * 296, p641 * 297.5, p641 * 296, p641 * 297.5, p641 * 311, p641 * 313);
    v974.closePath();
    f90(v974, undefined, p642[1], p641 * 12);
    if (p643 == 0) {
      v974.scale(2, 2);
      v974.translate(p641 * -7, p641 * 55);
      v974.rotate(-0.5);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 60, p641 * 47);
      v974.bezierCurveTo(p641 * 81, p641 * 46, p641 * 85, p641 * 47, p641 * 83, p641 * 63);
      v974.bezierCurveTo(p641 * 83, p641 * 72, p641 * 83, p641 * 75, p641 * 72, p641 * 73);
      v974.bezierCurveTo(p641 * 68, p641 * 80, p641 * 69, p641 * 82, p641 * 66, p641 * 73);
      v974.bezierCurveTo(p641 * 62, p641 * 81, p641 * 61, p641 * 82, p641 * 59, p641 * 73);
      v974.bezierCurveTo(p641 * 54, p641 * 81, p641 * 55, p641 * 81, p641 * 52, p641 * 74);
      v974.bezierCurveTo(p641 * 38, p641 * 76, p641 * 41, p641 * 74, p641 * 40, p641 * 66);
      v974.bezierCurveTo(p641 * 38, p641 * 45, p641 * 39, p641 * 49, p641 * 59, p641 * 47);
      v974.closePath();
      f90(v974, p642[4], p642[4], p641 * 5);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 68, p641 * 54);
      v974.bezierCurveTo(p641 * 75, p641 * 54, p641 * 77, p641 * 62, p641 * 71, p641 * 64);
      v974.bezierCurveTo(p641 * 62, p641 * 65, p641 * 63, p641 * 54, p641 * 68, p641 * 54);
      v974.closePath();
      f90(v974, p642[3]);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 50, p641 * 55);
      v974.bezierCurveTo(p641 * 57, p641 * 55, p641 * 58, p641 * 65, p641 * 52, p641 * 65);
      v974.bezierCurveTo(p641 * 44, p641 * 66, p641 * 44, p641 * 54, p641 * 50, p641 * 55);
      v974.closePath();
      f90(v974, p642[3]);
    } else if (p643 == 1) {
      v974.scale(0.6, 0.6);
      v974.translate(p641 * 185, p641 * 165);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 108, p641 * 56);
      v974.bezierCurveTo(p641 * 136, p641 * 58, p641 * 203, p641 * 69, p641 * 234, p641 * 75);
      v974.bezierCurveTo(p641 * 246, p641 * 77, p641 * 247, p641 * 78, p641 * 245, p641 * 90);
      v974.bezierCurveTo(p641 * 238, p641 * 143, p641 * 228, p641 * 197, p641 * 214, p641 * 259);
      v974.bezierCurveTo(p641 * 212, p641 * 267, p641 * 209, p641 * 270, p641 * 189, p641 * 268);
      v974.bezierCurveTo(p641 * 142, p641 * 264, p641 * 106, p641 * 260, p641 * 75, p641 * 253);
      v974.bezierCurveTo(p641 * 60, p641 * 250, p641 * 64, p641 * 250, p641 * 66, p641 * 221);
      v974.bezierCurveTo(p641 * 71, p641 * 168, p641 * 87, p641 * 95, p641 * 98, p641 * 67);
      v974.bezierCurveTo(p641 * 101, p641 * 57, p641 * 103, p641 * 56, p641 * 106, p641 * 56);
      v974.closePath();
      f90(v974, p642[4], p642[4], p641 * 20);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 112, p641 * 72);
      v974.bezierCurveTo(p641 * 132, p641 * 73, p641 * 227, p641 * 85, p641 * 226, p641 * 91);
      v974.bezierCurveTo(p641 * 231, p641 * 89, p641 * 217, p641 * 196, p641 * 200, p641 * 250);
      v974.bezierCurveTo(p641 * 196, p641 * 254, p641 * 175, p641 * 249, p641 * 166, p641 * 249);
      v974.bezierCurveTo(p641 * 91, p641 * 241, p641 * 82, p641 * 236, p641 * 83, p641 * 232);
      v974.bezierCurveTo(p641 * 90, p641 * 144, p641 * 108, p641 * 71, p641 * 111, p641 * 72);
      v974.closePath();
      f90(v974, vVVVVUndefined824, p642[0], p641 * 13);
      v974.beginPath();
      v974.lineCap = "round";
      v974.lineJoin = "round";
      v974.moveTo(p641 * 132, p641 * 117);
      v974.bezierCurveTo(p641 * 171, p641 * 86, p641 * 191, p641 * 101, p641 * 188, p641 * 134);
      v974.bezierCurveTo(p641 * 185, p641 * 154, p641 * 170, p641 * 158, p641 * 153, p641 * 158);
      v974.bezierCurveTo(p641 * 143, p641 * 172, p641 * 146, p641 * 180, p641 * 147, p641 * 193);
      f90(v974, vVVUndefined83, p642[0], p641 * 20);
      f93(v974, p641 * 142, p641 * 221, p641 * 16.1245154965971);
      f90(v974, p642[0]);
    }
    return v973;
  }
  function f117(p644, p645, p646) {
    var v975 = document.createElement("canvas");
    var v976 = v975.getContext("2d");
    var v977 = p644 * 195;
    var v978 = p644 * 190;
    var v979 = v977 / 2;
    var v980 = v978 / 2;
    v975.width = v977;
    v975.height = v978;
    var v981 = p644 * 10;
    var v982 = p644 * 35;
    var v983 = p644 * 150;
    var v984 = v982 / 2;
    var v985 = v983 / 2;
    var v986 = p644 * 4;
    v976.translate(v979 - p644 * 5, v980 - p644 * 5);
    v976.rotate(-Math.PI / 1.25);
    v976.globalAlpha = 1;
    f87(v976, -v984, -v985, v982, v983, v981);
    f90(v976, p646[0], p646[1], v986);
    v976.translate(0, 0);
    v976.rotate(Math.PI / 3);
    v976.globalAlpha = 1;
    f87(v976, -v984, -v985, v982, v983, v981);
    f90(v976, p646[0], p646[1], v986);
    v976.translate(0, 5);
    f87(v976, -v984 / 2, -v985 / 2, v982 / 2, v983 / 3, v981 - 2);
    f90(v976, p646[1]);
    return v975;
  }
  function f118(p647, p648, p649) {
    var v987 = document.createElement("canvas");
    var v988 = v987.getContext("2d");
    v987.width = p647 * 170;
    v987.height = p647 * 173;
    v988.globalAlpha = p648 ? 0.5 : 1;
    v988.translate(p647 * 5, p647 * 5);
    v988.save();
    v988.translate(p647 * 86.25, p647 * 84.953125);
    f88(v988, 7, p647 * 9.848857801796104, p647 * 5);
    v988.restore();
    f90(v988, p649[0]);
    v988.globalAlpha = 1;
    v988.translate(p647 * -5, p647 * -5);
    v988.save();
    v988.translate(p647 * 86.25, p647 * 84.953125);
    f88(v988, 7, p647 * 9.848857801796104, p647 * 5);
    v988.restore();
    f90(v988, p649[8], p649[9], p647 * 4);
    return v987;
  }
  function f119(p650, p651, p652, p653, p654) {
    var v989 = document.createElement("canvas");
    var v990 = v989.getContext("2d");
    var v991 = p650 * 70;
    var v992 = p650 * 70;
    var v993 = p650 * 10;
    var v994 = p650 * 5;
    v989.width = v991;
    v989.height = v992 + v994;
    for (var v995 = 0; v995 < p651.length; v995++) {
      var v996 = p651[v995];
      v990.globalAlpha = v996.a;
      var v997 = v996.f(p652, false, v996.c);
      v990.save();
      v990.translate(v991 / 2 + p650 * v996.x, v992 / 2 + v996.y * p650);
      v990.rotate(v996.r);
      v990.drawImage(v997, -v997.width / 2, -v997.height / 2);
      v990.restore();
    }
    var v998 = [];
    for (v995 = 0; p653.length > v995; v995++) {
      var v999 = document.createElement("canvas");
      var v1000 = v999.getContext("2d");
      v999.width = v991;
      v999.height = v992 + v994;
      v1000.globalAlpha = p654 / 2;
      if (v995 == 2) {
        f87(v1000, 0, v994, v991, v992, v993);
      } else {
        f87(v1000, 0, 0, v991, v992 + v994, v993);
      }
      f90(v1000, "#081a19");
      v1000.globalAlpha = p654;
      if (v995 == 2) {
        f87(v1000, 0, v994, v991, v992, v993);
      } else {
        f87(v1000, 0, 0, v991, v992, v993);
      }
      f90(v1000, p653[v995]);
      v1000.globalAlpha = 1;
      if (v995 == 2) {
        v1000.drawImage(v989, 0, v994);
      } else {
        v1000.drawImage(v989, 0, 0);
      }
      v998.push(f47(v999));
    }
    return v998;
  }
  function f120(p655, p656, p657) {
    var v1001 = document.createElement("canvas");
    var v1002 = v1001.getContext("2d");
    v1001.width = p655 * 170;
    v1001.height = p655 * 173;
    v1002.translate(p655 * 5, p655 * 5);
    v1002.globalAlpha = p656 ? 0.5 : 1;
    v1002.save();
    v1002.translate(p655 * 86.25, p655 * 84.953125);
    v1002.rotate(0.32);
    f88(v1002, 7, p655 * 42.15447781671598, p655 * 10);
    v1002.restore();
    f90(v1002, p657[0]);
    v1002.globalAlpha = 1;
    v1002.translate(p655 * -5, p655 * -5);
    v1002.save();
    v1002.translate(p655 * 86.25, p655 * 84.953125);
    v1002.rotate(0.32);
    f88(v1002, 7, p655 * 42.15447781671598, p655 * 10);
    v1002.restore();
    f90(v1002, p657[1], p657[2], p655 * 4);
    v1002.globalAlpha = p656 ? 0.5 : 1;
    v1002.translate(p655 * 5, p655 * 5);
    v1002.save();
    v1002.translate(p655 * 86.25, p655 * 84.953125);
    v1002.rotate(0.28);
    f88(v1002, 7, p655 * 30.463092423455635, p655 * 10);
    v1002.restore();
    f90(v1002, p657[0]);
    v1002.globalAlpha = 1;
    v1002.translate(p655 * -5, p655 * -5);
    v1002.save();
    v1002.translate(p655 * 86.25, p655 * 84.953125);
    v1002.rotate(0.28);
    f88(v1002, 7, p655 * 30.463092423455635, p655 * 10);
    v1002.restore();
    f90(v1002, p657[3], p657[4], p655 * 4);
    v1002.globalAlpha = p656 ? 0.5 : 1;
    v1002.translate(p655 * 5, p655 * 5);
    f93(v1002, p655 * 86.25, p655 * 84.953125, p655 * 18.867962264113206);
    f90(v1002, p657[0]);
    v1002.globalAlpha = 1;
    v1002.translate(p655 * -5, p655 * -5);
    f93(v1002, p655 * 86.25, p655 * 84.953125, p655 * 18.867962264113206);
    f90(v1002, p657[5], p657[6], p655 * 4);
    return v1001;
  }
  function f121(p658, p659, p660) {
    var v1003 = document.createElement("canvas");
    var v1004 = v1003.getContext("2d");
    v1003.width = p658 * 400;
    v1003.height = p658 * 400;
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 101, p658 * 255);
    v1004.bezierCurveTo(p658 * 113, p658 * 243, p658 * 179, p658 * 210, p658 * 219, p658 * 196);
    v1004.bezierCurveTo(p658 * 252, p658 * 203, p658 * 288, p658 * 215, p658 * 318, p658 * 233);
    v1004.bezierCurveTo(p658 * 304, p658 * 254, p658 * 258, p658 * 273, p658 * 215, p658 * 296);
    v1004.bezierCurveTo(p658 * 161, p658 * 287, p658 * 119, p658 * 270, p658 * 102, p658 * 257);
    v1004.closePath();
    f90(v1004, p660[0], p660[1], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 99, p658 * 258);
    v1004.bezierCurveTo(p658 * 99, p658 * 272.5, p658 * 99, p658 * 272.5, p658 * 99, p658 * 287);
    v1004.bezierCurveTo(p658 * 166, p658 * 319, p658 * 193, p658 * 320, p658 * 212, p658 * 324);
    v1004.bezierCurveTo(p658 * 292, p658 * 286, p658 * 312, p658 * 271, p658 * 319, p658 * 263);
    v1004.bezierCurveTo(p658 * 320, p658 * 249, p658 * 320, p658 * 241, p658 * 318, p658 * 234);
    v1004.bezierCurveTo(p658 * 300, p658 * 254, p658 * 254, p658 * 277, p658 * 216, p658 * 294);
    v1004.bezierCurveTo(p658 * 190, p658 * 296, p658 * 135, p658 * 276, p658 * 102, p658 * 258);
    v1004.closePath();
    f90(v1004, p660[2], p660[1], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 212, p658 * 323);
    v1004.bezierCurveTo(p658 * 211.5, p658 * 310.5, p658 * 211.5, p658 * 310.5, p658 * 211, p658 * 298);
    v1004.closePath();
    f90(v1004, undefined, p660[1], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 212, p658 * 210);
    v1004.bezierCurveTo(p658 * 286, p658 * 210, p658 * 331, p658 * 254, p658 * 212, p658 * 276);
    v1004.bezierCurveTo(p658 * 108, p658 * 276, p658 * 112, p658 * 222, p658 * 213, p658 * 208);
    v1004.closePath();
    f90(v1004, p660[3], p660[4], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 98, p658 * 200);
    v1004.bezierCurveTo(p658 * 126, p658 * 216, p658 * 177, p658 * 232, p658 * 213, p658 * 237);
    v1004.bezierCurveTo(p658 * 266, p658 * 218, p658 * 288, p658 * 209, p658 * 318, p658 * 190);
    v1004.bezierCurveTo(p658 * 269, p658 * 164, p658 * 239, p658 * 158, p658 * 214, p658 * 153);
    v1004.bezierCurveTo(p658 * 148, p658 * 172, p658 * 131, p658 * 182, p658 * 98, p658 * 200);
    v1004.closePath();
    f90(v1004, p660[0], p660[1], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 97, p658 * 204);
    v1004.bezierCurveTo(p658 * 97, p658 * 215.5, p658 * 97, p658 * 215.5, p658 * 97, p658 * 227);
    v1004.bezierCurveTo(p658 * 148, p658 * 250, p658 * 179, p658 * 256, p658 * 212, p658 * 262);
    v1004.bezierCurveTo(p658 * 268, p658 * 244, p658 * 281, p658 * 233, p658 * 318, p658 * 214);
    v1004.bezierCurveTo(p658 * 318, p658 * 203, p658 * 318, p658 * 203, p658 * 318, p658 * 192);
    v1004.bezierCurveTo(p658 * 250, p658 * 225, p658 * 236, p658 * 231, p658 * 214, p658 * 239);
    v1004.bezierCurveTo(p658 * 158, p658 * 228, p658 * 126, p658 * 215, p658 * 99, p658 * 201);
    v1004.closePath();
    f90(v1004, p660[2], p660[1], p658 * 14);
    v1004.beginPath();
    v1004.lineCap = "round";
    v1004.lineJoin = "round";
    v1004.moveTo(p658 * 212, p658 * 260);
    v1004.bezierCurveTo(p658 * 212, p658 * 251.5, p658 * 212, p658 * 251.5, p658 * 212, p658 * 243);
    v1004.closePath();
    f90(v1004, undefined, p660[1], p658 * 14);
    f93(v1004, p658 * 161, p658 * 201, p658 * 13);
    f90(v1004, p660[5]);
    f93(v1004, p658 * 216, p658 * 205, p658 * 8.06225774829855);
    f90(v1004, p660[5]);
    f93(v1004, p658 * 216, p658 * 175, p658 * 6.708203932499369);
    f90(v1004, p660[5]);
    f93(v1004, p658 * 271, p658 * 191, p658 * 5.0990195135927845);
    f90(v1004, p660[5]);
    f93(v1004, p658 * 206, p658 * 180, p658 * 11.180339887498949);
    f90(v1004, p660[5]);
    return v1003;
  }
  function f122(p661, p662, p663) {
    var v1005 = document.createElement("canvas");
    var v1006 = v1005.getContext("2d");
    v1005.width = p661 * 170;
    v1005.height = p661 * 173;
    v1006.globalAlpha = p662 ? 0.5 : 1;
    v1006.translate(p661 * 5, p661 * 5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 85.25, p661 * 82.953125);
    v1006.bezierCurveTo(p661 * 98.25, p661 * 46.453125, p661 * 98.25, p661 * 46.453125, p661 * 111.25, p661 * 9.953125);
    v1006.closePath();
    f90(v1006, undefined, p663[0], p661 * 4);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 111.25, p661 * 8.953125);
    v1006.bezierCurveTo(p661 * 117.75, p661 * 12.453125, p661 * 117.75, p661 * 12.453125, p661 * 124.25, p661 * 15.953125);
    v1006.bezierCurveTo(p661 * 113.75, p661 * 39.953125, p661 * 113.75, p661 * 39.953125, p661 * 103.25, p661 * 63.953125);
    v1006.bezierCurveTo(p661 * 97.75, p661 * 64.953125, p661 * 97.75, p661 * 64.953125, p661 * 92.25, p661 * 65.953125);
    v1006.closePath();
    f90(v1006, p663[0]);
    v1006.globalAlpha = 1;
    v1006.translate(p661 * -5, p661 * -5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 111.25, p661 * 8.953125);
    v1006.bezierCurveTo(p661 * 117.75, p661 * 12.453125, p661 * 117.75, p661 * 12.453125, p661 * 124.25, p661 * 15.953125);
    v1006.bezierCurveTo(p661 * 113.75, p661 * 39.953125, p661 * 113.75, p661 * 39.953125, p661 * 103.25, p661 * 63.953125);
    v1006.bezierCurveTo(p661 * 97.75, p661 * 64.953125, p661 * 97.75, p661 * 64.953125, p661 * 92.25, p661 * 65.953125);
    v1006.closePath();
    f90(v1006, p663[7]);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 85.25, p661 * 82.953125);
    v1006.bezierCurveTo(p661 * 98.25, p661 * 46.453125, p661 * 98.25, p661 * 46.453125, p661 * 111.25, p661 * 9.953125);
    v1006.closePath();
    f90(v1006, vVUndefined13, p663[6], p661 * 4);
    v1006.globalAlpha = p662 ? 0.5 : 1;
    v1006.translate(p661 * 5, p661 * 5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 87.25, p661 * 84.953125);
    v1006.bezierCurveTo(p661 * 123.75, p661 * 100.453125, p661 * 123.75, p661 * 100.453125, p661 * 160.25, p661 * 115.953125);
    v1006.closePath();
    f90(v1006, undefined, p663[0], p661 * 4);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 160.25, p661 * 114.953125);
    v1006.bezierCurveTo(p661 * 156.25, p661 * 122.453125, p661 * 156.25, p661 * 122.453125, p661 * 152.25, p661 * 129.953125);
    v1006.bezierCurveTo(p661 * 130.25, p661 * 117.953125, p661 * 130.25, p661 * 117.953125, p661 * 108.25, p661 * 105.953125);
    v1006.bezierCurveTo(p661 * 107.25, p661 * 98.953125, p661 * 107.25, p661 * 98.953125, p661 * 106.25, p661 * 91.953125);
    v1006.closePath();
    f90(v1006, p663[0]);
    v1006.globalAlpha = 1;
    v1006.translate(p661 * -5, p661 * -5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 160.25, p661 * 114.953125);
    v1006.bezierCurveTo(p661 * 156.25, p661 * 122.453125, p661 * 156.25, p661 * 122.453125, p661 * 152.25, p661 * 129.953125);
    v1006.bezierCurveTo(p661 * 130.25, p661 * 117.953125, p661 * 130.25, p661 * 117.953125, p661 * 108.25, p661 * 105.953125);
    v1006.bezierCurveTo(p661 * 107.25, p661 * 98.953125, p661 * 107.25, p661 * 98.953125, p661 * 106.25, p661 * 91.953125);
    v1006.closePath();
    f90(v1006, p663[7]);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 87.25, p661 * 84.953125);
    v1006.bezierCurveTo(p661 * 123.75, p661 * 100.453125, p661 * 123.75, p661 * 100.453125, p661 * 160.25, p661 * 115.953125);
    v1006.closePath();
    f90(v1006, undefined, p663[6], p661 * 4);
    v1006.globalAlpha = p662 ? 0.5 : 1;
    v1006.translate(p661 * 5, p661 * 5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 83.25, p661 * 83.953125);
    v1006.bezierCurveTo(p661 * 47.75, p661 * 68.453125, p661 * 47.75, p661 * 68.453125, p661 * 12.25, p661 * 52.953125);
    v1006.closePath();
    f90(v1006, undefined, p663[0], p661 * 4);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 13.25, p661 * 53.953125);
    v1006.bezierCurveTo(p661 * 17.25, p661 * 46.953125, p661 * 17.25, p661 * 46.953125, p661 * 21.25, p661 * 39.953125);
    v1006.bezierCurveTo(p661 * 42.75, p661 * 52.453125, p661 * 42.75, p661 * 52.453125, p661 * 64.25, p661 * 64.953125);
    v1006.bezierCurveTo(p661 * 64.25, p661 * 70.953125, p661 * 64.25, p661 * 70.953125, p661 * 64.25, p661 * 76.953125);
    v1006.closePath();
    f90(v1006, p663[0]);
    v1006.globalAlpha = 1;
    v1006.translate(p661 * -5, p661 * -5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 13.25, p661 * 53.953125);
    v1006.bezierCurveTo(p661 * 17.25, p661 * 46.953125, p661 * 17.25, p661 * 46.953125, p661 * 21.25, p661 * 39.953125);
    v1006.bezierCurveTo(p661 * 42.75, p661 * 52.453125, p661 * 42.75, p661 * 52.453125, p661 * 64.25, p661 * 64.953125);
    v1006.bezierCurveTo(p661 * 64.25, p661 * 70.953125, p661 * 64.25, p661 * 70.953125, p661 * 64.25, p661 * 76.953125);
    v1006.closePath();
    f90(v1006, p663[7]);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 83.25, p661 * 83.953125);
    v1006.bezierCurveTo(p661 * 47.75, p661 * 68.453125, p661 * 47.75, p661 * 68.453125, p661 * 12.25, p661 * 52.953125);
    v1006.closePath();
    f90(v1006, undefined, p663[6], p661 * 4);
    v1006.globalAlpha = p662 ? 0.5 : 1;
    v1006.translate(p661 * 5, p661 * 5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 84.25, p661 * 86.953125);
    v1006.bezierCurveTo(p661 * 70.25, p661 * 123.953125, p661 * 70.25, p661 * 123.953125, p661 * 56.25, p661 * 160.953125);
    v1006.closePath();
    f90(v1006, vVUndefined8, p663[0], p661 * 4);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 56.25, p661 * 159.953125);
    v1006.bezierCurveTo(p661 * 49.25, p661 * 155.453125, p661 * 49.25, p661 * 155.453125, p661 * 42.25, p661 * 150.953125);
    v1006.bezierCurveTo(p661 * 54.25, p661 * 127.953125, p661 * 54.25, p661 * 127.953125, p661 * 66.25, p661 * 104.953125);
    v1006.bezierCurveTo(p661 * 71.25, p661 * 104.953125, p661 * 71.25, p661 * 104.953125, p661 * 76.25, p661 * 104.953125);
    v1006.closePath();
    f90(v1006, p663[0]);
    v1006.globalAlpha = 1;
    v1006.translate(p661 * -5, p661 * -5);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 56.25, p661 * 159.953125);
    v1006.bezierCurveTo(p661 * 49.25, p661 * 155.453125, p661 * 49.25, p661 * 155.453125, p661 * 42.25, p661 * 150.953125);
    v1006.bezierCurveTo(p661 * 54.25, p661 * 127.953125, p661 * 54.25, p661 * 127.953125, p661 * 66.25, p661 * 104.953125);
    v1006.bezierCurveTo(p661 * 71.25, p661 * 104.953125, p661 * 71.25, p661 * 104.953125, p661 * 76.25, p661 * 104.953125);
    v1006.closePath();
    f90(v1006, p663[7]);
    v1006.beginPath();
    v1006.lineCap = "round";
    v1006.lineJoin = "round";
    v1006.moveTo(p661 * 84.25, p661 * 86.953125);
    v1006.bezierCurveTo(p661 * 70.25, p661 * 123.953125, p661 * 70.25, p661 * 123.953125, p661 * 56.25, p661 * 160.953125);
    v1006.closePath();
    f90(v1006, vVVUndefined132, p663[6], p661 * 4);
    return v1005;
  }
  function f123(p664, p665, p666) {
    var v1007 = document.createElement("canvas");
    var v1008 = v1007.getContext("2d");
    v1007.width = p664 * 52;
    v1007.height = p664 * 65;
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 9.833328247070312, p664 * 12.078125);
    v1008.bezierCurveTo(p664 * 15.333328247070312, p664 * 28.078125, p664 * 15.333328247070312, p664 * 28.078125, p664 * 20.833328247070312, p664 * 44.078125);
    v1008.closePath();
    f90(v1008, vVVVUndefined132, p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 7.8333282470703125, p664 * 20.078125);
    v1008.bezierCurveTo(p664 * 16.833328247070312, p664 * 32.578125, p664 * 16.833328247070312, p664 * 32.578125, p664 * 25.833328247070312, p664 * 45.078125);
    v1008.closePath();
    f90(v1008, vVUndefined8, p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 23.833328247070312, p664 * 26.078125);
    v1008.bezierCurveTo(p664 * 25.833328247070312, p664 * 11.078125, p664 * 16.833328247070312, p664 * 8.078125, p664 * 14.833328247070312, p664 * 7.078125);
    v1008.bezierCurveTo(p664 * 11.833328247070312, p664 * 17.078125, p664 * 13.833328247070312, p664 * 22.078125, p664 * 23.833328247070312, p664 * 27.078125);
    v1008.closePath();
    f90(v1008, p666[0], p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 35.83332824707031, p664 * 8.078125);
    v1008.bezierCurveTo(p664 * 34.83332824707031, p664 * 27.078125, p664 * 28.833328247070312, p664 * 27.078125, p664 * 23.833328247070312, p664 * 28.078125);
    v1008.bezierCurveTo(p664 * 21.833328247070312, p664 * 14.078125, p664 * 26.833328247070312, p664 * 11.078125, p664 * 35.83332824707031, p664 * 8.078125);
    v1008.closePath();
    f90(v1008, p666[0], p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 25.833328247070312, p664 * 39.078125);
    v1008.bezierCurveTo(p664 * 20.833328247070312, p664 * 29.078125, p664 * 14.833328247070312, p664 * 27.078125, p664 * 5.8333282470703125, p664 * 29.078125);
    v1008.bezierCurveTo(p664 * 9.833328247070312, p664 * 39.078125, p664 * 16.833328247070312, p664 * 42.078125, p664 * 25.833328247070312, p664 * 40.078125);
    v1008.closePath();
    f90(v1008, p666[0], p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 42.83332824707031, p664 * 23.078125);
    v1008.bezierCurveTo(p664 * 35.83332824707031, p664 * 35.078125, p664 * 31.833328247070312, p664 * 37.078125, p664 * 25.833328247070312, p664 * 36.078125);
    v1008.bezierCurveTo(p664 * 25.833328247070312, p664 * 24.078125, p664 * 33.83332824707031, p664 * 21.078125, p664 * 42.83332824707031, p664 * 23.078125);
    v1008.closePath();
    f90(v1008, p666[0], p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 23.833328247070312, p664 * 24.078125);
    v1008.bezierCurveTo(p664 * 20.833328247070312, p664 * 34.078125, p664 * 23.833328247070312, p664 * 40.078125, p664 * 27.833328247070312, p664 * 43.078125);
    v1008.bezierCurveTo(p664 * 37.33332824707031, p664 * 28.078125, p664 * 37.33332824707031, p664 * 28.078125, p664 * 46.83332824707031, p664 * 13.078125);
    f90(v1008, undefined, p666[1], p664 * 2);
    v1008.beginPath();
    v1008.lineCap = "round";
    v1008.lineJoin = "round";
    v1008.moveTo(p664 * 38.83332824707031, p664 * 14.078125);
    v1008.bezierCurveTo(p664 * 34.83332824707031, p664 * 24.078125, p664 * 34.83332824707031, p664 * 24.078125, p664 * 30.833328247070312, p664 * 34.078125);
    f90(v1008, undefined, p666[1], p664 * 2);
    return v1007;
  }
  function f124(p667, p668, p669) {
    var v1009 = document.createElement("canvas");
    var v1010 = v1009.getContext("2d");
    var v1011 = p667 * 75;
    var v1012 = p667 * 55;
    v1009.width = v1011;
    v1009.height = v1012;
    v1010.translate(p667 * -30, p667 * -40);
    v1010.globalAlpha = 1;
    v1010.beginPath();
    v1010.bezierCurveTo(p667 * 67, p667 * 56, p667 * 72, p667 * 71, p667 * 72, p667 * 71);
    v1010.bezierCurveTo(p667 * 72, p667 * 71, p667 * 84, p667 * 70, p667 * 75, p667 * 82);
    v1010.bezierCurveTo(p667 * 70, p667 * 88, p667 * 61, p667 * 89, p667 * 58, p667 * 89);
    v1010.bezierCurveTo(p667 * 55, p667 * 89, p667 * 40, p667 * 89, p667 * 46, p667 * 77);
    v1010.bezierCurveTo(p667 * 46, p667 * 77, p667 * 43, p667 * 63, p667 * 43, p667 * 63);
    v1010.bezierCurveTo(p667 * 35, p667 * 61, p667 * 35, p667 * 53, p667 * 42, p667 * 47);
    v1010.bezierCurveTo(p667 * 48, p667 * 42, p667 * 62, p667 * 41, p667 * 66, p667 * 43);
    v1010.bezierCurveTo(p667 * 70, p667 * 45, p667 * 72, p667 * 48, p667 * 67, p667 * 56);
    v1010.closePath();
    f90(v1010, p669[0]);
    v1010.beginPath();
    v1010.bezierCurveTo(p667 * 68, p667 * 61, p667 * 72, p667 * 76, p667 * 72, p667 * 76);
    v1010.bezierCurveTo(p667 * 65, p667 * 85, p667 * 61, p667 * 85, p667 * 49, p667 * 83);
    v1010.bezierCurveTo(p667 * 49, p667 * 83, p667 * 44, p667 * 63, p667 * 44, p667 * 63);
    v1010.bezierCurveTo(p667 * 54, p667 * 63, p667 * 60, p667 * 63, p667 * 67, p667 * 55);
    v1010.closePath();
    f90(v1010, p669[1]);
    v1010.beginPath();
    v1010.moveTo(p667 * 69, p667 * 65);
    v1010.bezierCurveTo(p667 * 70, p667 * 61, p667 * 81, p667 * 66, p667 * 86, p667 * 66);
    v1010.bezierCurveTo(p667 * 90, p667 * 66, p667 * 97, p667 * 63, p667 * 97, p667 * 56);
    v1010.bezierCurveTo(p667 * 97, p667 * 50, p667 * 93, p667 * 47, p667 * 88, p667 * 44);
    f90(v1010, vVV315, p669[1], 2);
    v1010.beginPath();
    v1010.moveTo(p667 * 50, p667 * 48);
    v1010.bezierCurveTo(p667 * 43, p667 * 52, p667 * 50, p667 * 54, p667 * 51, p667 * 54);
    v1010.bezierCurveTo(p667 * 54, p667 * 54, p667 * 59, p667 * 52, p667 * 59, p667 * 49);
    v1010.bezierCurveTo(p667 * 59, p667 * 48, p667 * 55, p667 * 46, p667 * 50, p667 * 48);
    f90(v1010, p669[2]);
    return v1009;
  }
  const v1013 = 12855172;
  const v1014 = 12855172 .ᐃΔⲆᐃΔΔᐃ;
  const v1015 = `const ⲆⲆⲆⵠΔᐃᐃ = (typeof ⲆⲆΔᐃⵠᐃⲆ === "${v1014}") ? 1 : 0; return ⲆⲆⲆⵠΔᐃᐃ;`;
  const v1016 = 10;
  function f125(p670, p671, p672) {
    var v1017 = document.createElement("canvas");
    var v1018 = v1017.getContext("2d");
    var v1019 = p670 * 193;
    var v1020 = p670 * 198;
    var v1021 = p670 * 140;
    var v1022 = p670 * 90;
    v1017.width = v1019;
    v1017.height = v1020;
    var v1023 = p670 * 10;
    var v1024 = p670 * 25;
    var v1025 = p670 * 180;
    var v1026 = v1024 / 2;
    var v1027 = v1025 / 2;
    var v1028 = p670 * 4;
    v1018.translate(p670 * -25, p670 * 1);
    v1018.translate(v1021, v1022);
    v1018.rotate(-Math.PI / 5);
    f87(v1018, -v1026, -v1027, v1024, v1025, v1023);
    f90(v1018, p672[0], p672[1], v1028);
    v1018.translate(p670 * -30, p670 * -25);
    v1018.rotate(Math.PI / 3);
    f87(v1018, -v1026, -v1027, v1024, v1025, v1023);
    f90(v1018, p672[0], p672[1], v1028);
    v1018.translate(p670 * 35, p670 * 30);
    v1018.rotate(Math.PI / 3);
    f87(v1018, -v1026, -v1027, v1024, v1025, v1023);
    f90(v1018, p672[0], p672[1], v1028);
    return v1017;
  }
  function f126(p673, p674, p675) {
    var v1029 = document.createElement("canvas");
    var v1030 = v1029.getContext("2d");
    var v1031 = p673 * 145;
    var v1032 = p673 * 145;
    var v1033 = v1031 / 2;
    var v1034 = v1032 / 2;
    v1029.width = v1031;
    v1029.height = v1032;
    var v1035 = p673 * 70;
    v1030.translate(v1033, v1034);
    v1030.globalAlpha = 0.4;
    f93(v1030, 0, 0, v1035);
    f90(v1030, p675[0]);
    v1035 = p673 * 50;
    v1030.translate(0, 0);
    v1030.globalAlpha = 0.8;
    f93(v1030, 0, 0, v1035);
    f90(v1030, p675[0]);
    v1035 = p673 * 35;
    v1030.translate(0, 0);
    v1030.globalAlpha = 0.8;
    f93(v1030, 0, 0, v1035);
    f90(v1030, p675[1]);
    v1035 = p673 * 20;
    v1030.translate(0, 0);
    v1030.globalAlpha = 0.8;
    f93(v1030, 0, 0, v1035);
    f90(v1030, p675[2]);
    return v1029;
  }
  function f127(p676, p677, p678, p679) {
    var v1036 = document.createElement("canvas");
    var v1037 = v1036.getContext("2d");
    v1036.width = p676 * 121;
    v1036.height = p676 * 130;
    v1037.translate(0, p676 * 20);
    if (p678 == 1) {
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 6, p676 * 23);
      v1037.bezierCurveTo(p676 * 6, p676 * 46, p676 * 6, p676 * 46, p676 * 6, p676 * 69);
      v1037.bezierCurveTo(p676 * 21, p676 * 69, p676 * 21, p676 * 69, p676 * 36, p676 * 69);
      v1037.bezierCurveTo(p676 * 45.5, p676 * 78.5, p676 * 45.5, p676 * 78.5, p676 * 55, p676 * 88);
      v1037.bezierCurveTo(p676 * 55.5, p676 * 45.5, p676 * 55.5, p676 * 45.5, p676 * 56, p676 * 3);
      v1037.bezierCurveTo(p676 * 47, p676 * 14, p676 * 47, p676 * 14, p676 * 38, p676 * 25);
      v1037.bezierCurveTo(p676 * 23, p676 * 25, p676 * 23, p676 * 25, p676 * 6, p676 * 23);
      v1037.closePath();
      f90(v1037, undefined, p677[3], p676 * 13);
    }
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p676 * 6, p676 * 23);
    v1037.bezierCurveTo(p676 * 6, p676 * 46, p676 * 6, p676 * 46, p676 * 6, p676 * 69);
    v1037.bezierCurveTo(p676 * 21, p676 * 69, p676 * 21, p676 * 69, p676 * 36, p676 * 69);
    v1037.bezierCurveTo(p676 * 45.5, p676 * 78.5, p676 * 45.5, p676 * 78.5, p676 * 55, p676 * 88);
    v1037.bezierCurveTo(p676 * 55.5, p676 * 45.5, p676 * 55.5, p676 * 45.5, p676 * 56, p676 * 3);
    v1037.bezierCurveTo(p676 * 47, p676 * 14, p676 * 47, p676 * 14, p676 * 38, p676 * 25);
    v1037.bezierCurveTo(p676 * 23, p676 * 25, p676 * 23, p676 * 25, p676 * 6, p676 * 23);
    v1037.closePath();
    f90(v1037, p677[1], p677[2], p676 * 4);
    if (p679 == 1) {
      v1037.translate(0, p676 * 5);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 67, p676 * 30);
      v1037.bezierCurveTo(p676 * 73, p676 * 47, p676 * 69, p676 * 45, p676 * 67, p676 * 58);
      f90(v1037, vVVVUndefined82, p677[0], p676 * 10);
      v1037.translate(3, p676 * 0);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 70, p676 * 17);
      v1037.bezierCurveTo(p676 * 83, p676 * 45, p676 * 76, p676 * 55, p676 * 70, p676 * 69);
      f90(v1037, undefined, p677[0], p676 * 10);
      v1037.translate(3, p676 * 0);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 76, p676 * 8);
      v1037.bezierCurveTo(p676 * 88, p676 * 31, p676 * 89, p676 * 55, p676 * 76, p676 * 79);
      f90(v1037, undefined, p677[0], p676 * 10);
      if (p678 == 1) {
        v1037.translate(p676 * -6, p676 * -5);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 67, p676 * 30);
        v1037.bezierCurveTo(p676 * 73, p676 * 47, p676 * 69, p676 * 45, p676 * 67, p676 * 58);
        f90(v1037, vVVVVVUndefined1322, p677[3], p676 * 18);
        v1037.translate(3, p676 * 0);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 70, p676 * 17);
        v1037.bezierCurveTo(p676 * 83, p676 * 45, p676 * 76, p676 * 55, p676 * 70, p676 * 69);
        f90(v1037, undefined, p677[3], p676 * 18);
        v1037.translate(3, p676 * 0);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 76, p676 * 8);
        v1037.bezierCurveTo(p676 * 88, p676 * 31, p676 * 89, p676 * 55, p676 * 76, p676 * 79);
        f90(v1037, undefined, p677[3], p676 * 18);
        v1037.translate(-6, p676 * 0);
      } else {
        v1037.translate(p676 * -6, p676 * -5);
      }
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 67, p676 * 30);
      v1037.bezierCurveTo(p676 * 73, p676 * 47, p676 * 69, p676 * 45, p676 * 67, p676 * 58);
      f90(v1037, vVVUndefined83, p677[2], p676 * 10);
      v1037.translate(3, p676 * 0);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 70, p676 * 17);
      v1037.bezierCurveTo(p676 * 83, p676 * 45, p676 * 76, p676 * 55, p676 * 70, p676 * 69);
      f90(v1037, undefined, p677[2], p676 * 10);
      v1037.translate(3, p676 * 0);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 76, p676 * 8);
      v1037.bezierCurveTo(p676 * 88, p676 * 31, p676 * 89, p676 * 55, p676 * 76, p676 * 79);
      f90(v1037, undefined, p677[2], p676 * 10);
    } else {
      if (p678 == 1) {
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 108, p676 * 27);
        v1037.bezierCurveTo(p676 * 94, p676 * 45.5, p676 * 94, p676 * 45.5, p676 * 80, p676 * 64);
        v1037.closePath();
        f90(v1037, vVVVVUndefined82, p677[3], p676 * 18);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 79, p676 * 30);
        v1037.bezierCurveTo(p676 * 93, p676 * 47, p676 * 93, p676 * 47, p676 * 107, p676 * 64);
        v1037.closePath();
        f90(v1037, vVVUndefined132, p677[3], p676 * 18);
      } else {
        v1037.translate(0, p676 * -5);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 108, p676 * 27);
        v1037.bezierCurveTo(p676 * 94, p676 * 45.5, p676 * 94, p676 * 45.5, p676 * 80, p676 * 64);
        v1037.closePath();
        f90(v1037, undefined, p677[0], p676 * 7);
        v1037.beginPath();
        v1037.lineCap = "round";
        v1037.lineJoin = "round";
        v1037.moveTo(p676 * 79, p676 * 30);
        v1037.bezierCurveTo(p676 * 93, p676 * 47, p676 * 93, p676 * 47, p676 * 107, p676 * 64);
        v1037.closePath();
        f90(v1037, undefined, p677[0], p676 * 7);
        v1037.translate(0, p676 * 5);
      }
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 108, p676 * 27);
      v1037.bezierCurveTo(p676 * 94, p676 * 45.5, p676 * 94, p676 * 45.5, p676 * 80, p676 * 64);
      v1037.closePath();
      f90(v1037, undefined, p677[2], p676 * 7);
      v1037.beginPath();
      v1037.lineCap = "round";
      v1037.lineJoin = "round";
      v1037.moveTo(p676 * 79, p676 * 30);
      v1037.bezierCurveTo(p676 * 93, p676 * 47, p676 * 93, p676 * 47, p676 * 107, p676 * 64);
      v1037.closePath();
      f90(v1037, undefined, p677[2], p676 * 7);
    }
    return v1036;
  }
  function f128(p680, p681, p682) {
    var v1038 = document.createElement("canvas");
    var v1039 = v1038.getContext("2d");
    v1038.width = p680 * 155;
    v1038.height = p680 * 127;
    v1039.globalAlpha = 0.5;
    v1039.translate(0, p680 * 8);
    v1039.translate(p680 * -7, p680 * -20);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 55, p680 * 68);
    v1039.bezierCurveTo(p680 * 86, p680 * 64, p680 * 117, p680 * 66, p680 * 134, p680 * 68);
    v1039.bezierCurveTo(p680 * 152, p680 * 69, p680 * 165, p680 * 86, p680 * 152, p680 * 104);
    v1039.bezierCurveTo(p680 * 146, p680 * 87, p680 * 122, p680 * 89, p680 * 98, p680 * 90);
    v1039.bezierCurveTo(p680 * 64, p680 * 89, p680 * 41, p680 * 91, p680 * 36, p680 * 106);
    v1039.bezierCurveTo(p680 * 19, p680 * 92, p680 * 31, p680 * 71, p680 * 54, p680 * 69);
    v1039.closePath();
    f90(v1039, p682[0]);
    v1039.globalAlpha = 1;
    v1039.translate(0, p680 * -8);
    v1039.translate(p680 * 7, p680 * 20);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 24, p680 * 28);
    v1039.bezierCurveTo(p680 * 39, p680 * 30, p680 * 37, p680 * 31, p680 * 40, p680 * 32);
    v1039.bezierCurveTo(p680 * 22, p680 * 45, p680 * 26, p680 * 58, p680 * 29, p680 * 66);
    v1039.bezierCurveTo(p680 * 86.5, p680 * 65, p680 * 86.5, p680 * 65, p680 * 144, p680 * 64);
    v1039.bezierCurveTo(p680 * 151, p680 * 42, p680 * 132, p680 * 20, p680 * 120, p680 * 16);
    v1039.bezierCurveTo(p680 * 106, p680 * 12, p680 * 89, p680 * 0, p680 * 73, p680 * 3);
    v1039.bezierCurveTo(p680 * 51, p680 * 5, p680 * 36, p680 * 20, p680 * 25, p680 * 28);
    v1039.closePath();
    f90(v1039, p682[1], p682[2], p680 * 4);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 30, p680 * 41);
    v1039.bezierCurveTo(p680 * 49, p680 * 31, p680 * 53, p680 * 29, p680 * 62, p680 * 27);
    v1039.bezierCurveTo(p680 * 59, p680 * 24, p680 * 56, p680 * 25, p680 * 53, p680 * 24);
    v1039.bezierCurveTo(p680 * 67, p680 * 15, p680 * 84, p680 * 12, p680 * 120, p680 * 16);
    v1039.bezierCurveTo(p680 * 107, p680 * 11, p680 * 96, p680 * 6, p680 * 85, p680 * 2);
    v1039.bezierCurveTo(p680 * 59, p680 * 3, p680 * 54, p680 * 7, p680 * 40, p680 * 17);
    v1039.bezierCurveTo(p680 * 32.5, p680 * 22.5, p680 * 32.5, p680 * 22.5, p680 * 25, p680 * 28);
    v1039.bezierCurveTo(p680 * 32, p680 * 30, p680 * 32, p680 * 30, p680 * 39, p680 * 32);
    v1039.closePath();
    f90(v1039, p682[3]);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 24, p680 * 28);
    v1039.bezierCurveTo(p680 * 39, p680 * 30, p680 * 37, p680 * 31, p680 * 40, p680 * 32);
    v1039.bezierCurveTo(p680 * 22, p680 * 45, p680 * 26, p680 * 58, p680 * 29, p680 * 66);
    v1039.bezierCurveTo(p680 * 86.5, p680 * 65, p680 * 86.5, p680 * 65, p680 * 144, p680 * 64);
    v1039.bezierCurveTo(p680 * 151, p680 * 42, p680 * 132, p680 * 20, p680 * 120, p680 * 16);
    v1039.bezierCurveTo(p680 * 106, p680 * 12, p680 * 89, p680 * 0, p680 * 73, p680 * 3);
    v1039.bezierCurveTo(p680 * 51, p680 * 5, p680 * 36, p680 * 20, p680 * 25, p680 * 28);
    v1039.closePath();
    f90(v1039, vVVVUndefined823, p682[2], p680 * 4);
    f93(v1039, p680 * 18, p680 * 38, p680 * 14.866068747318506);
    f90(v1039, p682[4], p682[5], p680 * 4);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 39, p680 * 30);
    v1039.bezierCurveTo(p680 * 27, p680 * 38, p680 * 25, p680 * 50, p680 * 26, p680 * 60);
    v1039.bezierCurveTo(p680 * 36.5, p680 * 58.5, p680 * 36.5, p680 * 58.5, p680 * 47, p680 * 57);
    f90(v1039, p682[1], p682[2], p680 * 4);
    v1039.translate(p680 * -7, p680 * -20);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p680 * 27, p680 * 74);
    v1039.bezierCurveTo(p680 * 38, p680 * 77.5, p680 * 38, p680 * 77.5, p680 * 49, p680 * 81);
    v1039.bezierCurveTo(p680 * 54.5, p680 * 75.5, p680 * 54.5, p680 * 75.5, p680 * 60, p680 * 70);
    v1039.bezierCurveTo(p680 * 64, p680 * 72, p680 * 64, p680 * 72, p680 * 68, p680 * 74);
    v1039.bezierCurveTo(p680 * 80.5, p680 * 67.5, p680 * 80.5, p680 * 67.5, p680 * 93, p680 * 61);
    v1039.bezierCurveTo(p680 * 104.5, p680 * 68, p680 * 104.5, p680 * 68, p680 * 116, p680 * 75);
    v1039.bezierCurveTo(p680 * 120.5, p680 * 72.5, p680 * 120.5, p680 * 72.5, p680 * 125, p680 * 70);
    v1039.bezierCurveTo(p680 * 129, p680 * 75, p680 * 129, p680 * 75, p680 * 133, p680 * 80);
    v1039.bezierCurveTo(p680 * 145.5, p680 * 76.5, p680 * 145.5, p680 * 76.5, p680 * 158, p680 * 73);
    v1039.bezierCurveTo(p680 * 158, p680 * 87, p680 * 158, p680 * 93, p680 * 155, p680 * 95);
    v1039.bezierCurveTo(p680 * 152.5, p680 * 96, p680 * 152.5, p680 * 96, p680 * 150, p680 * 97);
    v1039.bezierCurveTo(p680 * 121, p680 * 85, p680 * 108, p680 * 86, p680 * 93, p680 * 85);
    v1039.bezierCurveTo(p680 * 64, p680 * 85, p680 * 52, p680 * 95, p680 * 38, p680 * 99);
    v1039.bezierCurveTo(p680 * 36, p680 * 98.5, p680 * 36, p680 * 98.5, p680 * 34, p680 * 98);
    v1039.bezierCurveTo(p680 * 25, p680 * 98, p680 * 27, p680 * 91, p680 * 27, p680 * 76);
    v1039.closePath();
    f90(v1039, p682[6], p682[7], p680 * 6);
    return v1038;
  }
  function f129(p683, p684, p685, p686) {
    var v1040 = document.createElement("canvas");
    var v1041 = v1040.getContext("2d");
    var v1042 = p683 * 210;
    var v1043 = p683 * 205;
    var v1044 = p683 * 30;
    var v1045 = p683 * 20;
    var v1046 = p683 * 200;
    var v1047 = p683 * 180;
    var v1048 = v1046 / 2;
    var v1049 = v1047 / 2;
    v1040.width = v1042;
    v1040.height = v1043;
    v1040.width = p683 * 419;
    v1040.height = p683 * 412;
    if (p686 == 1) {
      v1041.save();
      v1041.translate(p683 * 10, p683 * 0);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 117.99996948242188, p683 * 216.40621948242188);
      v1041.bezierCurveTo(p683 * 86.99996948242188, p683 * 221.40621948242188, p683 * 74.99996948242188, p683 * 217.40621948242188, p683 * 60.999969482421875, p683 * 205.40621948242188);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 114.99996948242188, p683 * 227.40621948242188);
      v1041.bezierCurveTo(p683 * 90.99996948242188, p683 * 233.40621948242188, p683 * 66.99996948242188, p683 * 228.40621948242188, p683 * 43.999969482421875, p683 * 225.40621948242188);
      f90(v1041, vVVVVUndefined824, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 110.99996948242188, p683 * 236.40621948242188);
      v1041.bezierCurveTo(p683 * 94.99996948242188, p683 * 244.40621948242188, p683 * 79.99996948242188, p683 * 249.40621948242188, p683 * 60.999969482421875, p683 * 249.40621948242188);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 111.99996948242188, p683 * 206.29513549804688);
      v1041.bezierCurveTo(p683 * 91.99996948242188, p683 * 206.29513549804688, p683 * 87.99996948242188, p683 * 201.29513549804688, p683 * 79.99996948242188, p683 * 192.29513549804688);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 109.99996948242188, p683 * 249.18402099609375);
      v1041.bezierCurveTo(p683 * 97.99996948242188, p683 * 263.18402099609375, p683 * 85.99996948242188, p683 * 271.18402099609375, p683 * 65.99996948242188, p683 * 277.18402099609375);
      f90(v1041, vVVUndefined83, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 105.99996948242188, p683 * 192.18402099609375);
      v1041.bezierCurveTo(p683 * 99.49996948242188, p683 * 197.68402099609375, p683 * 99.49996948242188, p683 * 197.68402099609375, p683 * 92.99996948242188, p683 * 203.18402099609375);
      v1041.bezierCurveTo(p683 * 95.99996948242188, p683 * 213.18402099609375, p683 * 95.99996948242188, p683 * 215.18402099609375, p683 * 89.99996948242188, p683 * 219.18402099609375);
      v1041.bezierCurveTo(p683 * 91.99996948242188, p683 * 223.18402099609375, p683 * 91.99996948242188, p683 * 226.18402099609375, p683 * 87.99996948242188, p683 * 230.18402099609375);
      v1041.bezierCurveTo(p683 * 89.99996948242188, p683 * 234.18402099609375, p683 * 91.99996948242188, p683 * 237.18402099609375, p683 * 90.99996948242188, p683 * 244.18402099609375);
      v1041.bezierCurveTo(p683 * 96.99996948242188, p683 * 252.18402099609375, p683 * 96.99996948242188, p683 * 256.18402099609375, p683 * 95.99996948242188, p683 * 262.18402099609375);
      v1041.bezierCurveTo(p683 * 106.49996948242188, p683 * 264.18402099609375, p683 * 106.49996948242188, p683 * 264.18402099609375, p683 * 116.99996948242188, p683 * 266.18402099609375);
      f90(v1041, vVVVVUndefined823, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 104.99996948242188, p683 * 183.29513549804688);
      v1041.bezierCurveTo(p683 * 99.99996948242188, p683 * 193.29513549804688, p683 * 93.99996948242188, p683 * 195.29513549804688, p683 * 89.99996948242188, p683 * 201.29513549804688);
      v1041.bezierCurveTo(p683 * 86.99996948242188, p683 * 212.29513549804688, p683 * 85.99996948242188, p683 * 214.29513549804688, p683 * 81.99996948242188, p683 * 215.29513549804688);
      v1041.bezierCurveTo(p683 * 83.99996948242188, p683 * 223.29513549804688, p683 * 83.99996948242188, p683 * 227.29513549804688, p683 * 79.99996948242188, p683 * 230.29513549804688);
      v1041.bezierCurveTo(p683 * 83.99996948242188, p683 * 235.29513549804688, p683 * 84.99996948242188, p683 * 240.29513549804688, p683 * 79.99996948242188, p683 * 246.29513549804688);
      v1041.bezierCurveTo(p683 * 86.99996948242188, p683 * 251.29513549804688, p683 * 91.99996948242188, p683 * 256.2951354980469, p683 * 89.99996948242188, p683 * 266.2951354980469);
      v1041.bezierCurveTo(p683 * 102.99996948242188, p683 * 269.2951354980469, p683 * 102.99996948242188, p683 * 269.2951354980469, p683 * 115.99996948242188, p683 * 272.2951354980469);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 107.99996948242188, p683 * 177.85067749023438);
      v1041.bezierCurveTo(p683 * 95.99996948242188, p683 * 187.35067749023438, p683 * 95.99996948242188, p683 * 187.35067749023438, p683 * 83.99996948242188, p683 * 196.85067749023438);
      v1041.bezierCurveTo(p683 * 82.99996948242188, p683 * 203.85067749023438, p683 * 80.99996948242188, p683 * 209.85067749023438, p683 * 72.99996948242188, p683 * 210.85067749023438);
      v1041.bezierCurveTo(p683 * 73.99996948242188, p683 * 220.85067749023438, p683 * 73.99996948242188, p683 * 221.85067749023438, p683 * 66.99996948242188, p683 * 227.85067749023438);
      v1041.bezierCurveTo(p683 * 71.99996948242188, p683 * 235.85067749023438, p683 * 73.99996948242188, p683 * 239.85067749023438, p683 * 71.99996948242188, p683 * 247.85067749023438);
      v1041.bezierCurveTo(p683 * 80.99996948242188, p683 * 257.8506774902344, p683 * 81.99996948242188, p683 * 263.8506774902344, p683 * 77.99996948242188, p683 * 271.8506774902344);
      v1041.bezierCurveTo(p683 * 95.49996948242188, p683 * 272.8506774902344, p683 * 95.49996948242188, p683 * 272.8506774902344, p683 * 112.99996948242188, p683 * 273.8506774902344);
      f90(v1041, vVVUndefined83, p684[4], p683 * 3);
      v1041.restore();
    } else if (p686 == 2) {
      v1041.save();
      v1041.translate(p683 * 130, p683 * 35);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 170.99996948242188, p683 * 133.85067749023438);
      v1041.bezierCurveTo(p683 * 195.99996948242188, p683 * 129.85067749023438, p683 * 196.99996948242188, p683 * 111.85067749023438, p683 * 200.99996948242188, p683 * 88.85067749023438);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 169.99996948242188, p683 * 143.85067749023438);
      v1041.bezierCurveTo(p683 * 189.99996948242188, p683 * 145.85067749023438, p683 * 207.99996948242188, p683 * 126.85067749023438, p683 * 222.99996948242188, p683 * 100.85067749023438);
      f90(v1041, vVVVUndefined823, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 170.99996948242188, p683 * 157.85067749023438);
      v1041.bezierCurveTo(p683 * 193.99996948242188, p683 * 160.85067749023438, p683 * 210.99996948242188, p683 * 151.85067749023438, p683 * 232.99996948242188, p683 * 139.85067749023438);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 169.99996948242188, p683 * 168.85067749023438);
      v1041.bezierCurveTo(p683 * 192.99996948242188, p683 * 175.85067749023438, p683 * 203.99996948242188, p683 * 177.85067749023438, p683 * 245.99996948242188, p683 * 168.85067749023438);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 167.99996948242188, p683 * 168.85067749023438);
      v1041.bezierCurveTo(p683 * 183.99996948242188, p683 * 189.85067749023438, p683 * 191.99996948242188, p683 * 193.85067749023438, p683 * 220.99996948242188, p683 * 196.85067749023438);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 176.99996948242188, p683 * 117.85067749023438);
      v1041.bezierCurveTo(p683 * 181.99996948242188, p683 * 120.85067749023438, p683 * 181.99996948242188, p683 * 120.85067749023438, p683 * 186.99996948242188, p683 * 123.85067749023438);
      v1041.bezierCurveTo(p683 * 183.99996948242188, p683 * 137.85067749023438, p683 * 185.99996948242188, p683 * 136.85067749023438, p683 * 190.99996948242188, p683 * 136.85067749023438);
      v1041.bezierCurveTo(p683 * 186.99996948242188, p683 * 147.85067749023438, p683 * 189.99996948242188, p683 * 152.85067749023438, p683 * 193.99996948242188, p683 * 155.85067749023438);
      v1041.bezierCurveTo(p683 * 187.99996948242188, p683 * 165.85067749023438, p683 * 190.99996948242188, p683 * 169.85067749023438, p683 * 190.99996948242188, p683 * 172.85067749023438);
      v1041.bezierCurveTo(p683 * 186.99996948242188, p683 * 183.85067749023438, p683 * 186.99996948242188, p683 * 185.85067749023438, p683 * 189.99996948242188, p683 * 188.85067749023438);
      v1041.bezierCurveTo(p683 * 182.49996948242188, p683 * 195.35067749023438, p683 * 182.49996948242188, p683 * 195.35067749023438, p683 * 174.99996948242188, p683 * 201.85067749023438);
      f90(v1041, vVVUndefined82, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 176.99996948242188, p683 * 112.18402099609375);
      v1041.bezierCurveTo(p683 * 183.99996948242188, p683 * 119.18402099609375, p683 * 186.99996948242188, p683 * 117.18402099609375, p683 * 192.99996948242188, p683 * 116.18402099609375);
      v1041.bezierCurveTo(p683 * 191.99996948242188, p683 * 126.18402099609375, p683 * 193.99996948242188, p683 * 130.18402099609375, p683 * 199.99996948242188, p683 * 130.18402099609375);
      v1041.bezierCurveTo(p683 * 194.99996948242188, p683 * 145.18402099609375, p683 * 197.99996948242188, p683 * 147.18402099609375, p683 * 201.99996948242188, p683 * 153.18402099609375);
      v1041.bezierCurveTo(p683 * 196.99996948242188, p683 * 164.18402099609375, p683 * 197.99996948242188, p683 * 169.18402099609375, p683 * 201.99996948242188, p683 * 174.18402099609375);
      v1041.bezierCurveTo(p683 * 194.99996948242188, p683 * 184.18402099609375, p683 * 196.99996948242188, p683 * 187.18402099609375, p683 * 200.99996948242188, p683 * 193.18402099609375);
      v1041.bezierCurveTo(p683 * 185.99996948242188, p683 * 195.18402099609375, p683 * 181.99996948242188, p683 * 201.18402099609375, p683 * 174.99996948242188, p683 * 210.18402099609375);
      f90(v1041, vVVUndefined83, p684[4], p683 * 3);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 176.99996948242188, p683 * 101.29513549804688);
      v1041.bezierCurveTo(p683 * 181.99996948242188, p683 * 108.29513549804688, p683 * 189.99996948242188, p683 * 110.29513549804688, p683 * 195.99996948242188, p683 * 107.29513549804688);
      v1041.bezierCurveTo(p683 * 197.99996948242188, p683 * 121.29513549804688, p683 * 200.99996948242188, p683 * 122.29513549804688, p683 * 206.99996948242188, p683 * 122.29513549804688);
      v1041.bezierCurveTo(p683 * 201.99996948242188, p683 * 138.29513549804688, p683 * 204.99996948242188, p683 * 142.29513549804688, p683 * 211.99996948242188, p683 * 148.29513549804688);
      v1041.bezierCurveTo(p683 * 201.99996948242188, p683 * 156.29513549804688, p683 * 205.99996948242188, p683 * 167.29513549804688, p683 * 213.99996948242188, p683 * 173.29513549804688);
      v1041.bezierCurveTo(p683 * 204.99996948242188, p683 * 181.29513549804688, p683 * 204.99996948242188, p683 * 187.29513549804688, p683 * 205.99996948242188, p683 * 193.29513549804688);
      v1041.bezierCurveTo(p683 * 190.99996948242188, p683 * 198.29513549804688, p683 * 181.99996948242188, p683 * 205.29513549804688, p683 * 174.99996948242188, p683 * 214.29513549804688);
      f90(v1041, undefined, p684[4], p683 * 3);
      v1041.restore();
    }
    v1041.translate(v1040.width / 2, v1040.height / 2);
    if (!p686) {
      v1041.globalAlpha = 0.5;
      f87(v1041, -v1048, -v1049, v1046, v1047 + v1045, v1044);
      f90(v1041, p684[0]);
      if (p685) {
        v1041.rotate(Math.PI);
      }
      v1041.globalAlpha = 1;
      f87(v1041, -v1048, -v1049, v1046, v1047, v1044);
      f90(v1041, p684[1], p684[2], 4);
      v1041.globalAlpha = 1;
      f87(v1041, p683 * 35 - v1048, p683 * 20 - v1049, v1046 - p683 * 50, v1047 - p683 * 50, v1044 - p683 * 10);
      f90(v1041, p684[3]);
    }
    if (p686 == 3) {
      v1041.translate(-v1040.width / 2, -v1040.height / 2);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 121, p683 * 190);
      v1041.bezierCurveTo(p683 * 129, p683 * 186, p683 * 137, p683 * 183, p683 * 135, p683 * 163);
      v1041.bezierCurveTo(p683 * 131, p683 * 135, p683 * 153, p683 * 127, p683 * 177, p683 * 124);
      v1041.bezierCurveTo(p683 * 198, p683 * 120, p683 * 208, p683 * 122, p683 * 226, p683 * 128);
      v1041.bezierCurveTo(p683 * 261, p683 * 112, p683 * 271, p683 * 126, p683 * 287, p683 * 147);
      v1041.bezierCurveTo(p683 * 310, p683 * 163, p683 * 304, p683 * 183, p683 * 283, p683 * 196);
      v1041.bezierCurveTo(p683 * 296, p683 * 249, p683 * 278, p683 * 262, p683 * 253, p683 * 263);
      v1041.bezierCurveTo(p683 * 210, p683 * 264, p683 * 188, p683 * 252, p683 * 177, p683 * 234);
      v1041.bezierCurveTo(p683 * 133, p683 * 242, p683 * 123, p683 * 241, p683 * 115, p683 * 225);
      v1041.bezierCurveTo(p683 * 109, p683 * 206, p683 * 115, p683 * 193, p683 * 121, p683 * 190);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 219, p683 * 144);
      v1041.bezierCurveTo(p683 * 251, p683 * 121, p683 * 277, p683 * 136, p683 * 276, p683 * 159);
      v1041.bezierCurveTo(p683 * 276, p683 * 176, p683 * 273, p683 * 191, p683 * 242, p683 * 193);
      v1041.bezierCurveTo(p683 * 226, p683 * 228, p683 * 155, p683 * 219, p683 * 150, p683 * 183);
      v1041.bezierCurveTo(p683 * 142, p683 * 144, p683 * 174, p683 * 127, p683 * 219, p683 * 144);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 123, p683 * 214);
      v1041.bezierCurveTo(p683 * 119, p683 * 198, p683 * 129, p683 * 189, p683 * 146, p683 * 194);
      v1041.bezierCurveTo(p683 * 158, p683 * 201, p683 * 165, p683 * 218, p683 * 147, p683 * 226);
      v1041.bezierCurveTo(p683 * 135, p683 * 230, p683 * 125, p683 * 222, p683 * 123, p683 * 214);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 257, p683 * 199);
      v1041.bezierCurveTo(p683 * 264, p683 * 199, p683 * 275, p683 * 213, p683 * 261, p683 * 220);
      v1041.bezierCurveTo(p683 * 246, p683 * 225, p683 * 235, p683 * 200, p683 * 257, p683 * 199);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.translate(p683 * -5, p683 * 55);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 186, p683 * 123);
      v1041.bezierCurveTo(p683 * 198, p683 * 115, p683 * 219, p683 * 110, p683 * 219, p683 * 123);
      v1041.bezierCurveTo(p683 * 216, p683 * 135, p683 * 171, p683 * 143, p683 * 186, p683 * 123);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.translate(p683 * 5, p683 * -55);
      v1041.translate(p683 * -5, p683 * 15);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 171, p683 * 241);
      v1041.bezierCurveTo(p683 * 189, p683 * 234, p683 * 200, p683 * 248, p683 * 189, p683 * 254);
      v1041.bezierCurveTo(p683 * 179, p683 * 260, p683 * 158, p683 * 246, p683 * 171, p683 * 241);
      v1041.closePath();
      f90(v1041, p684[5]);
    } else if (p686 == 4) {
      v1041.translate(-v1040.width / 2, -v1040.height / 2);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 30, p683 * 167);
      v1041.bezierCurveTo(p683 * 47, p683 * 144, p683 * 64, p683 * 140, p683 * 80, p683 * 147);
      v1041.bezierCurveTo(p683 * 95, p683 * 154, p683 * 95, p683 * 159, p683 * 100, p683 * 179);
      v1041.bezierCurveTo(p683 * 105, p683 * 202, p683 * 95, p683 * 218, p683 * 69, p683 * 218);
      v1041.bezierCurveTo(p683 * 48, p683 * 236, p683 * 26, p683 * 223, p683 * 28, p683 * 213);
      v1041.bezierCurveTo(p683 * 28, p683 * 205, p683 * 29, p683 * 199, p683 * 32, p683 * 195);
      v1041.bezierCurveTo(p683 * 21, p683 * 183, p683 * 27, p683 * 173, p683 * 30, p683 * 167);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 26, p683 * 145);
      v1041.bezierCurveTo(p683 * 32, p683 * 138, p683 * 37, p683 * 137, p683 * 40, p683 * 139);
      v1041.bezierCurveTo(p683 * 43, p683 * 140, p683 * 41, p683 * 150, p683 * 31, p683 * 159);
      v1041.bezierCurveTo(p683 * 23, p683 * 166, p683 * 17, p683 * 158, p683 * 26, p683 * 145);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 13, p683 * 193);
      v1041.bezierCurveTo(p683 * 21, p683 * 187, p683 * 30, p683 * 190, p683 * 20, p683 * 202);
      v1041.bezierCurveTo(p683 * 13, p683 * 208, p683 * 7, p683 * 202, p683 * 13, p683 * 193);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 121, p683 * 190);
      v1041.bezierCurveTo(p683 * 129, p683 * 186, p683 * 137, p683 * 183, p683 * 135, p683 * 163);
      v1041.bezierCurveTo(p683 * 131, p683 * 135, p683 * 153, p683 * 127, p683 * 177, p683 * 124);
      v1041.bezierCurveTo(p683 * 198, p683 * 120, p683 * 208, p683 * 122, p683 * 226, p683 * 128);
      v1041.bezierCurveTo(p683 * 261, p683 * 112, p683 * 271, p683 * 126, p683 * 287, p683 * 147);
      v1041.bezierCurveTo(p683 * 310, p683 * 163, p683 * 304, p683 * 183, p683 * 283, p683 * 196);
      v1041.bezierCurveTo(p683 * 296, p683 * 249, p683 * 278, p683 * 262, p683 * 253, p683 * 263);
      v1041.bezierCurveTo(p683 * 210, p683 * 264, p683 * 188, p683 * 252, p683 * 177, p683 * 234);
      v1041.bezierCurveTo(p683 * 133, p683 * 242, p683 * 123, p683 * 241, p683 * 115, p683 * 225);
      v1041.bezierCurveTo(p683 * 109, p683 * 206, p683 * 115, p683 * 193, p683 * 121, p683 * 190);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 335, p683 * 196);
      v1041.bezierCurveTo(p683 * 312, p683 * 208, p683 * 300, p683 * 185, p683 * 309, p683 * 167);
      v1041.bezierCurveTo(p683 * 314, p683 * 141, p683 * 339, p683 * 127, p683 * 359, p683 * 144);
      v1041.bezierCurveTo(p683 * 363, p683 * 148, p683 * 364, p683 * 150, p683 * 364, p683 * 150);
      v1041.bezierCurveTo(p683 * 392, p683 * 143, p683 * 396, p683 * 183, p683 * 378, p683 * 204);
      v1041.bezierCurveTo(p683 * 367, p683 * 215, p683 * 339, p683 * 208, p683 * 335, p683 * 196);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 349, p683 * 212);
      v1041.bezierCurveTo(p683 * 339, p683 * 216, p683 * 334, p683 * 208, p683 * 341, p683 * 203);
      v1041.bezierCurveTo(p683 * 353, p683 * 198, p683 * 361, p683 * 205, p683 * 349, p683 * 212);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 46, p683 * 165);
      v1041.bezierCurveTo(p683 * 55, p683 * 148, p683 * 85, p683 * 157, p683 * 83, p683 * 175);
      v1041.bezierCurveTo(p683 * 99, p683 * 185, p683 * 89, p683 * 212, p683 * 66, p683 * 204);
      v1041.bezierCurveTo(p683 * 55, p683 * 212, p683 * 43, p683 * 212, p683 * 41, p683 * 202);
      v1041.bezierCurveTo(p683 * 39, p683 * 194, p683 * 42, p683 * 187, p683 * 49, p683 * 185);
      v1041.bezierCurveTo(p683 * 44, p683 * 175, p683 * 45, p683 * 172, p683 * 46, p683 * 165);
      v1041.closePath();
      f90(v1041, p684[4]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 219, p683 * 144);
      v1041.bezierCurveTo(p683 * 251, p683 * 121, p683 * 277, p683 * 136, p683 * 276, p683 * 159);
      v1041.bezierCurveTo(p683 * 276, p683 * 176, p683 * 273, p683 * 191, p683 * 242, p683 * 193);
      v1041.bezierCurveTo(p683 * 226, p683 * 228, p683 * 155, p683 * 219, p683 * 150, p683 * 183);
      v1041.bezierCurveTo(p683 * 142, p683 * 144, p683 * 174, p683 * 127, p683 * 219, p683 * 144);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 123, p683 * 214);
      v1041.bezierCurveTo(p683 * 119, p683 * 198, p683 * 129, p683 * 189, p683 * 146, p683 * 194);
      v1041.bezierCurveTo(p683 * 158, p683 * 201, p683 * 165, p683 * 218, p683 * 147, p683 * 226);
      v1041.bezierCurveTo(p683 * 135, p683 * 230, p683 * 125, p683 * 222, p683 * 123, p683 * 214);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 257, p683 * 199);
      v1041.bezierCurveTo(p683 * 264, p683 * 199, p683 * 275, p683 * 213, p683 * 261, p683 * 220);
      v1041.bezierCurveTo(p683 * 246, p683 * 225, p683 * 235, p683 * 200, p683 * 257, p683 * 199);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.translate(p683 * -5, p683 * 55);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 186, p683 * 123);
      v1041.bezierCurveTo(p683 * 198, p683 * 115, p683 * 219, p683 * 110, p683 * 219, p683 * 123);
      v1041.bezierCurveTo(p683 * 216, p683 * 135, p683 * 171, p683 * 143, p683 * 186, p683 * 123);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.translate(p683 * 5, p683 * -55);
      v1041.translate(p683 * -5, p683 * 15);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 171, p683 * 241);
      v1041.bezierCurveTo(p683 * 189, p683 * 234, p683 * 200, p683 * 248, p683 * 189, p683 * 254);
      v1041.bezierCurveTo(p683 * 179, p683 * 260, p683 * 158, p683 * 246, p683 * 171, p683 * 241);
      v1041.closePath();
      f90(v1041, p684[5]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p683 * 367, p683 * 164);
      v1041.bezierCurveTo(p683 * 380, p683 * 160, p683 * 391, p683 * 185, p683 * 371, p683 * 189);
      v1041.bezierCurveTo(p683 * 362, p683 * 192, p683 * 354, p683 * 191, p683 * 350, p683 * 185);
      v1041.bezierCurveTo(p683 * 326, p683 * 205, p683 * 314, p683 * 182, p683 * 316, p683 * 171);
      v1041.bezierCurveTo(p683 * 317, p683 * 150, p683 * 332, p683 * 143, p683 * 347, p683 * 147);
      v1041.bezierCurveTo(p683 * 361, p683 * 151, p683 * 366, p683 * 158, p683 * 367, p683 * 164);
      v1041.closePath();
      f90(v1041, p684[4]);
    }
    return v1040;
  }
  function f130(p687, p688, p689) {
    var v1050 = document.createElement("canvas");
    var v1051 = v1050.getContext("2d");
    v1050.width = p687 * 155;
    v1050.height = p687 * 127;
    v1051.globalAlpha = 0.5;
    v1051.translate(0, p687 * 8);
    v1051.translate(p687 * -7, p687 * -20);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 55, p687 * 68);
    v1051.bezierCurveTo(p687 * 86, p687 * 64, p687 * 117, p687 * 66, p687 * 134, p687 * 68);
    v1051.bezierCurveTo(p687 * 152, p687 * 69, p687 * 165, p687 * 86, p687 * 152, p687 * 104);
    v1051.bezierCurveTo(p687 * 146, p687 * 87, p687 * 122, p687 * 89, p687 * 98, p687 * 90);
    v1051.bezierCurveTo(p687 * 64, p687 * 89, p687 * 41, p687 * 91, p687 * 36, p687 * 106);
    v1051.bezierCurveTo(p687 * 19, p687 * 92, p687 * 31, p687 * 71, p687 * 54, p687 * 69);
    v1051.closePath();
    f90(v1051, p689[0]);
    v1051.globalAlpha = 1;
    v1051.translate(0, p687 * -8);
    v1051.translate(p687 * 7, p687 * 20);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 24, p687 * 28);
    v1051.bezierCurveTo(p687 * 39, p687 * 30, p687 * 37, p687 * 31, p687 * 40, p687 * 32);
    v1051.bezierCurveTo(p687 * 22, p687 * 45, p687 * 26, p687 * 58, p687 * 29, p687 * 66);
    v1051.bezierCurveTo(p687 * 86.5, p687 * 65, p687 * 86.5, p687 * 65, p687 * 144, p687 * 64);
    v1051.bezierCurveTo(p687 * 151, p687 * 42, p687 * 132, p687 * 20, p687 * 120, p687 * 16);
    v1051.bezierCurveTo(p687 * 106, p687 * 12, p687 * 89, p687 * 0, p687 * 73, p687 * 3);
    v1051.bezierCurveTo(p687 * 51, p687 * 5, p687 * 36, p687 * 20, p687 * 25, p687 * 28);
    v1051.closePath();
    f90(v1051, p689[1], p689[2], p687 * 4);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 30, p687 * 41);
    v1051.bezierCurveTo(p687 * 49, p687 * 31, p687 * 53, p687 * 29, p687 * 62, p687 * 27);
    v1051.bezierCurveTo(p687 * 59, p687 * 24, p687 * 56, p687 * 25, p687 * 53, p687 * 24);
    v1051.bezierCurveTo(p687 * 67, p687 * 15, p687 * 84, p687 * 12, p687 * 120, p687 * 16);
    v1051.bezierCurveTo(p687 * 107, p687 * 11, p687 * 96, p687 * 6, p687 * 85, p687 * 2);
    v1051.bezierCurveTo(p687 * 59, p687 * 3, p687 * 54, p687 * 7, p687 * 40, p687 * 17);
    v1051.bezierCurveTo(p687 * 32.5, p687 * 22.5, p687 * 32.5, p687 * 22.5, p687 * 25, p687 * 28);
    v1051.bezierCurveTo(p687 * 32, p687 * 30, p687 * 32, p687 * 30, p687 * 39, p687 * 32);
    v1051.closePath();
    f90(v1051, p689[3]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 24, p687 * 28);
    v1051.bezierCurveTo(p687 * 39, p687 * 30, p687 * 37, p687 * 31, p687 * 40, p687 * 32);
    v1051.bezierCurveTo(p687 * 22, p687 * 45, p687 * 26, p687 * 58, p687 * 29, p687 * 66);
    v1051.bezierCurveTo(p687 * 86.5, p687 * 65, p687 * 86.5, p687 * 65, p687 * 144, p687 * 64);
    v1051.bezierCurveTo(p687 * 151, p687 * 42, p687 * 132, p687 * 20, p687 * 120, p687 * 16);
    v1051.bezierCurveTo(p687 * 106, p687 * 12, p687 * 89, p687 * 0, p687 * 73, p687 * 3);
    v1051.bezierCurveTo(p687 * 51, p687 * 5, p687 * 36, p687 * 20, p687 * 25, p687 * 28);
    v1051.closePath();
    f90(v1051, vVVVUndefined823, p689[2], p687 * 4);
    f93(v1051, p687 * 18, p687 * 38, p687 * 14.866068747318506);
    f90(v1051, p689[4], p689[5], p687 * 4);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 39, p687 * 30);
    v1051.bezierCurveTo(p687 * 27, p687 * 38, p687 * 25, p687 * 50, p687 * 26, p687 * 60);
    v1051.bezierCurveTo(p687 * 36.5, p687 * 58.5, p687 * 36.5, p687 * 58.5, p687 * 47, p687 * 57);
    f90(v1051, p689[1], p689[2], p687 * 4);
    v1051.translate(p687 * -7, p687 * -20);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p687 * 55, p687 * 68);
    v1051.bezierCurveTo(p687 * 86, p687 * 64, p687 * 117, p687 * 66, p687 * 134, p687 * 68);
    v1051.bezierCurveTo(p687 * 152, p687 * 69, p687 * 165, p687 * 86, p687 * 152, p687 * 104);
    v1051.bezierCurveTo(p687 * 146, p687 * 87, p687 * 122, p687 * 89, p687 * 98, p687 * 90);
    v1051.bezierCurveTo(p687 * 64, p687 * 89, p687 * 41, p687 * 91, p687 * 36, p687 * 106);
    v1051.bezierCurveTo(p687 * 19, p687 * 92, p687 * 31, p687 * 71, p687 * 54, p687 * 69);
    v1051.closePath();
    f90(v1051, p689[4], p689[5], p687 * 4);
    return v1050;
  }
  function f131(p690, p691) {
    var v1052 = document.createElement("canvas");
    var v1053 = v1052.getContext("2d");
    var v1054 = p690 * 220;
    var v1055 = p690 * 220;
    var v1056 = p690 * 32;
    var v1057 = p690 * 4;
    v1052.width = v1054;
    v1052.height = v1055;
    v1053.translate(v1054 / 2, v1055 / 2 + p690 * 10);
    v1053.globalAlpha = 0.5;
    f93(v1053, 0, 0, v1056);
    f90(v1053, p691[0], p691[0]);
    v1053.translate(0, p690 * -8);
    v1053.globalAlpha = 1;
    f93(v1053, 0, 0, v1056);
    f90(v1053, p691[1], p691[2], v1057);
    return v1052;
  }
  function f132(p692, p693) {
    var v1058 = document.createElement("canvas");
    var v1059 = v1058.getContext("2d");
    var v1060 = p692 * 220;
    var v1061 = p692 * 220;
    var v1062 = p692 * 16;
    v1058.width = v1060;
    v1058.height = v1061;
    v1059.translate(v1060 / 2, v1061 / 2);
    v1059.globalAlpha = 0.5;
    f93(v1059, 0, 0, v1062);
    f90(v1059, p693[0]);
    v1059.globalAlpha = 1;
    return v1058;
  }
  function f133(p694, p695, p696) {
    var v1063 = document.createElement("canvas");
    var v1064 = v1063.getContext("2d");
    var v1065 = (v1072 = p694 * 450) / 2;
    var v1066 = (v1073 = p694 * 145) / 2;
    var v1067 = p694 * 10;
    var v1068 = p694 * 300;
    var v1069 = p694 * 30;
    var v1070 = v1068 / 2;
    var v1071 = v1069 / 2;
    if (p696) {
      var v1072 = p694 * 145;
      var v1073 = p694 * 450;
      v1063.width = v1072;
      v1063.height = v1073;
      v1064.rotate(Math.PI / 2);
      v1064.save();
      v1064.globalAlpha = 0.5;
      f87(v1064, p694 * 100, p694 * -110, v1068, v1069, v1067);
      f90(v1064, p695[0]);
      v1064.translate(p694 * 178, p694 * -98);
      f87(v1064, -v1070, -v1071 - p694 * 6, p694 * 100, p694 * 100, v1067);
      f90(v1064, p695[0]);
      v1064.translate(p694 * -50, p694 * 5);
      f87(v1064, p694 * 220, p694 * -15, p694 * 90, p694 * 90, v1067);
      f90(v1064, p695[0]);
      v1064.restore();
      v1064.save();
      v1064.globalAlpha = 1;
      v1064.translate(p694 * 250, p694 * -63);
      f87(v1064, -v1070 - p694 * 20, -v1071, v1068, v1069, v1067);
      f90(v1064, p695[1], p695[2], 4);
      v1064.translate(p694 * -70, p694 * -40);
      f87(v1064, -v1070 - p694 * 20, -v1071, p694 * 100, p694 * 100, v1067);
      f90(v1064, p695[3], p695[4], 4);
      v1064.translate(p694 * -70, p694 * 15);
      f87(v1064, p694 * 220, p694 * -22, p694 * 90, p694 * 90, v1067);
      f90(v1064, p695[3], p695[4], 4);
      f87(v1064, p694 * 230, p694 * -12, p694 * 55, p694 * 55, v1067);
      f90(v1064, p695[5]);
      v1064.translate(p694 * -70, 0);
      f87(v1064, p694 * -15, p694 * -2, p694 * 60, p694 * 60, v1067);
      f90(v1064, p695[5]);
      v1064.restore();
    } else {
      v1063.width = v1072;
      v1063.height = v1073;
      v1064.save();
      v1064.globalAlpha = 0.5;
      v1064.translate(v1065, v1066 + p694 * 10);
      f87(v1064, -v1070, -v1071, v1068, v1069, v1067);
      f90(v1064, p695[0]);
      v1064.translate(p694 * -65, p694 * -25);
      f87(v1064, -v1070, -v1071 - p694 * 6, p694 * 100, p694 * 100, p694 * 15);
      f90(v1064, p695[0]);
      v1064.translate(p694 * -35, p694 * -5);
      f87(v1064, p694 * 220, p694 * -15, p694 * 90, p694 * 90, p694 * 15);
      f90(v1064, p695[0]);
      v1064.restore();
      v1064.save();
      v1064.globalAlpha = 1;
      v1064.translate(p694 * 240, p694 * 70);
      f87(v1064, -v1070, -v1071, v1068, v1069, v1067);
      f90(v1064, p695[1], p695[2], 4);
      v1064.translate(p694 * -60, p694 * -40);
      f87(v1064, -v1070 - p694 * 20, -v1071, p694 * 100, p694 * 100, p694 * 15);
      f90(v1064, p695[3], p695[4], 4);
      v1064.translate(p694 * -55, p694 * 10);
      f87(v1064, p694 * 220, p694 * -22, p694 * 90, p694 * 90, p694 * 15);
      f90(v1064, p695[3], p695[4], 4);
      f87(v1064, p694 * 240, p694 * -12, p694 * 55, p694 * 55, p694 * 12);
      f90(v1064, p695[5]);
      v1064.translate(p694 * 45, p694 * 0);
      f87(v1064, p694 * -145, p694 * -2, p694 * 60, p694 * 60, p694 * 12);
      f90(v1064, p695[5]);
      v1064.restore();
    }
    return v1063;
  }
  function f134(p697, p698) {
    var v1074 = document.createElement("canvas");
    var v1075 = v1074.getContext("2d");
    var v1076 = Math.max(p698.width, p697.width);
    var v1077 = Math.max(p698.height, p697.height);
    v1074.width = v1076;
    v1074.height = v1077;
    v1075.drawImage(p697, (v1076 - p697.width) / 2, (v1077 - p697.height) / 2);
    v1075.drawImage(p698, (v1076 - p698.width) / 2, (v1077 - p698.height) / 2);
    return v1074;
  }
  function f135(p699, p700, p701) {
    var v1078 = document.createElement("canvas");
    var v1079 = v1078.getContext("2d");
    var v1080 = p699 * 135;
    var v1081 = p699 * 190;
    var v1082 = v1080 / 2;
    var v1083 = v1081 / 2;
    v1078.width = v1080;
    v1078.height = v1081;
    var v1084 = p699 * 10;
    var v1085 = p699 * 25;
    var v1086 = p699 * 180;
    var v1087 = v1085 / 2;
    var v1088 = v1086 / 2;
    var v1089 = p699 * 4;
    v1079.translate(v1082, v1083);
    v1079.rotate(-Math.PI / 5);
    v1079.globalAlpha = 1;
    f87(v1079, -v1087, -v1088, v1085, v1086, v1084);
    f90(v1079, p701[0], p701[1], v1089);
    v1079.translate(0, 0);
    v1079.rotate(Math.PI / 5);
    v1079.globalAlpha = 1;
    f87(v1079, -v1087, -v1088, v1085, v1086, v1084);
    f90(v1079, p701[0], p701[1], v1089);
    return v1078;
  }
  function f136(p702, p703, p704) {
    var v1090 = document.createElement("canvas");
    var v1091 = v1090.getContext("2d");
    var v1092 = p702 * 370;
    var v1093 = p702 * 370;
    var v1094 = v1092 / 2;
    var v1095 = v1093 / 2;
    v1090.width = v1092;
    v1090.height = v1093;
    var v1096 = p702 * 180;
    v1091.globalAlpha = 0.2;
    f93(v1091, v1094, v1095, v1096);
    f90(v1091, p704[0]);
    return v1090;
  }
  function f137(p705, p706) {
    var v1097 = document.createElement("canvas");
    var v1098 = v1097.getContext("2d");
    var v1099 = p705 * 40;
    var v1100 = p705 * 40;
    var v1101 = p705 * 16;
    var v1102 = p705 * 4;
    v1097.width = v1099;
    v1097.height = v1100;
    v1098.translate(v1099 / 2, v1100 / 2);
    v1098.globalAlpha = 1;
    f93(v1098, 0, 0, v1101);
    f90(v1098, p706[0], p706[1], v1102);
    return v1097;
  }
  function f138(p707, p708, p709) {
    var v1103 = document.createElement("canvas");
    var v1104 = v1103.getContext("2d");
    var v1105 = p707 * 205;
    var v1106 = p707 * 205;
    var v1107 = v1105 / 2;
    var v1108 = v1106 / 2;
    v1103.width = v1105;
    v1103.height = v1106;
    var v1109 = p707 * 100;
    v1104.translate(v1107, v1108);
    v1104.globalAlpha = 1;
    f93(v1104, 0, 0, v1109);
    f90(v1104, p709[0]);
    return v1103;
  }
  function f139(p710, p711, p712) {
    var v1110 = document.createElement("canvas");
    var v1111 = v1110.getContext("2d");
    var v1112 = p710 * 105;
    var v1113 = p710 * 125;
    var v1114 = p710 * 4;
    var v1115 = p710 * 10;
    var v1116 = p710 * 5;
    var v1117 = p710 * 10;
    var v1118 = p710 * 110;
    var v1119 = v1117 / 2;
    var v1120 = v1118 / 2;
    v1110.width = v1112;
    v1110.height = v1113;
    v1111.save();
    v1111.globalAlpha = p711 ? 0.5 : 1;
    v1111.translate(v1112 / 2 + p710 * 8, v1113 / 2 + v1116);
    f87(v1111, -v1119, -v1120, v1117, v1118, v1115);
    f90(v1111, p711 ? p712[0] : p712[1]);
    v1111.translate(p710 * -130 + v1116, p710 * -128 + v1116);
    v1111.beginPath();
    v1111.bezierCurveTo(p710 * 159, p710 * 93, p710 * 156, p710 * 99, p710 * 154, p710 * 102);
    v1111.bezierCurveTo(p710 * 128, p710 * 92, p710 * 90, p710 * 93, p710 * 72, p710 * 96);
    v1111.bezierCurveTo(p710 * 68, p710 * 84, p710 * 143, p710 * 73, p710 * 162, p710 * 86);
    v1111.closePath();
    f90(v1111, p712[2]);
    v1111.restore();
    v1111.translate(v1112 / 2 + 8, v1113 / 2);
    v1111.globalAlpha = 1;
    f87(v1111, -v1119, -v1120, v1117, v1118, v1115);
    f90(v1111, p712[3], p712[4], v1114);
    v1111.translate(p710 * -130, p710 * -125);
    v1111.beginPath();
    v1111.bezierCurveTo(p710 * 159, p710 * 93, p710 * 156, p710 * 99, p710 * 154, p710 * 102);
    v1111.bezierCurveTo(p710 * 128, p710 * 92, p710 * 90, p710 * 93, p710 * 72, p710 * 96);
    v1111.bezierCurveTo(p710 * 68, p710 * 84, p710 * 143, p710 * 73, p710 * 162, p710 * 86);
    v1111.closePath();
    f90(v1111, p712[5], p712[6], v1114);
    return v1110;
  }
  function f140(p713, p714, p715) {
    var v1121 = document.createElement("canvas");
    var v1122 = v1121.getContext("2d");
    v1121.width = p713 * 170;
    v1121.height = p713 * 469;
    v1122.globalAlpha = p714 ? 0.5 : 1;
    v1122.translate(p713 * 20, p713 * 20);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 88, p713 * 30);
    v1122.bezierCurveTo(p713 * 96, p713 * 49.5, p713 * 96, p713 * 49.5, p713 * 104, p713 * 69);
    v1122.bezierCurveTo(p713 * 105.5, p713 * 41.5, p713 * 105.5, p713 * 41.5, p713 * 107, p713 * 14);
    v1122.bezierCurveTo(p713 * 114, p713 * 9.5, p713 * 114, p713 * 9.5, p713 * 121, p713 * 5);
    v1122.bezierCurveTo(p713 * 135.5, p713 * 27.5, p713 * 135.5, p713 * 27.5, p713 * 150, p713 * 50);
    v1122.bezierCurveTo(p713 * 110.5, p713 * 286, p713 * 110.5, p713 * 286, p713 * 103, p713 * 331);
    v1122.bezierCurveTo(p713 * 69.5, p713 * 325, p713 * 69.5, p713 * 325, p713 * 36, p713 * 319);
    v1122.bezierCurveTo(p713 * 56.5, p713 * 180, p713 * 56.5, p713 * 180, p713 * 77, p713 * 41);
    v1122.closePath();
    f90(v1122, p715[0]);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 118, p713 * 31);
    v1122.bezierCurveTo(p713 * 125, p713 * 43, p713 * 125, p713 * 43, p713 * 132, p713 * 55);
    v1122.bezierCurveTo(p713 * 109.5, p713 * 185.5, p713 * 109.5, p713 * 185.5, p713 * 87, p713 * 316);
    v1122.bezierCurveTo(p713 * 72, p713 * 313.5, p713 * 72, p713 * 313.5, p713 * 57, p713 * 311);
    v1122.bezierCurveTo(p713 * 76.5, p713 * 181, p713 * 76.5, p713 * 181, p713 * 96, p713 * 51);
    v1122.closePath();
    f90(v1122, p715[0]);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 56, p713 * 328);
    v1122.bezierCurveTo(p713 * 47, p713 * 385.5, p713 * 47, p713 * 385.5, p713 * 38, p713 * 443);
    v1122.bezierCurveTo(p713 * 52, p713 * 446, p713 * 52, p713 * 446, p713 * 66, p713 * 449);
    v1122.bezierCurveTo(p713 * 76.5, p713 * 388.5, p713 * 76.5, p713 * 388.5, p713 * 87, p713 * 328);
    v1122.closePath();
    f90(v1122, p715[0]);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 74, p713 * 302);
    v1122.bezierCurveTo(p713 * 104, p713 * 316.5, p713 * 104, p713 * 316.5, p713 * 134, p713 * 331);
    v1122.bezierCurveTo(p713 * 133, p713 * 341, p713 * 133, p713 * 341, p713 * 132, p713 * 351);
    v1122.bezierCurveTo(p713 * 69.5, p713 * 342, p713 * 69.5, p713 * 342, p713 * 7, p713 * 333);
    v1122.bezierCurveTo(p713 * 8, p713 * 323, p713 * 8, p713 * 323, p713 * 9, p713 * 313);
    v1122.closePath();
    f90(v1122, p715[0]);
    v1122.save();
    v1122.translate(p713 * 51.5, p713 * 440.5);
    v1122.rotate(0.2);
    f87(v1122, p713 * -20.5, p713 * -18.5, p713 * 41, p713 * 37, p713 * 10);
    v1122.restore();
    f90(v1122, p715[0]);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 73, p713 * 316);
    v1122.bezierCurveTo(p713 * 90, p713 * 324.5, p713 * 90, p713 * 324.5, p713 * 107, p713 * 333);
    v1122.bezierCurveTo(p713 * 70, p713 * 327.5, p713 * 70, p713 * 327.5, p713 * 33, p713 * 322);
    v1122.closePath();
    f90(v1122, p715[0]);
    v1122.globalAlpha = 1;
    v1122.translate(p713 * -20, p713 * -20);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 88, p713 * 30);
    v1122.bezierCurveTo(p713 * 96, p713 * 49.5, p713 * 96, p713 * 49.5, p713 * 104, p713 * 69);
    v1122.bezierCurveTo(p713 * 105.5, p713 * 41.5, p713 * 105.5, p713 * 41.5, p713 * 107, p713 * 14);
    v1122.bezierCurveTo(p713 * 114, p713 * 9.5, p713 * 114, p713 * 9.5, p713 * 121, p713 * 5);
    v1122.bezierCurveTo(p713 * 135.5, p713 * 27.5, p713 * 135.5, p713 * 27.5, p713 * 150, p713 * 50);
    v1122.bezierCurveTo(p713 * 110.5, p713 * 286, p713 * 110.5, p713 * 286, p713 * 103, p713 * 331);
    v1122.bezierCurveTo(p713 * 69.5, p713 * 325, p713 * 69.5, p713 * 325, p713 * 36, p713 * 319);
    v1122.bezierCurveTo(p713 * 56.5, p713 * 180, p713 * 56.5, p713 * 180, p713 * 77, p713 * 41);
    v1122.closePath();
    f90(v1122, p715[1], p715[2], p713 * 7);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 118, p713 * 31);
    v1122.bezierCurveTo(p713 * 125, p713 * 43, p713 * 125, p713 * 43, p713 * 132, p713 * 55);
    v1122.bezierCurveTo(p713 * 109.5, p713 * 185.5, p713 * 109.5, p713 * 185.5, p713 * 87, p713 * 316);
    v1122.bezierCurveTo(p713 * 72, p713 * 313.5, p713 * 72, p713 * 313.5, p713 * 57, p713 * 311);
    v1122.bezierCurveTo(p713 * 76.5, p713 * 181, p713 * 76.5, p713 * 181, p713 * 96, p713 * 51);
    v1122.closePath();
    f90(v1122, p715[3]);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 88, p713 * 30);
    v1122.bezierCurveTo(p713 * 96, p713 * 49.5, p713 * 96, p713 * 49.5, p713 * 104, p713 * 69);
    v1122.bezierCurveTo(p713 * 105.5, p713 * 41.5, p713 * 105.5, p713 * 41.5, p713 * 107, p713 * 14);
    v1122.bezierCurveTo(p713 * 114, p713 * 9.5, p713 * 114, p713 * 9.5, p713 * 121, p713 * 5);
    v1122.bezierCurveTo(p713 * 135.5, p713 * 27.5, p713 * 135.5, p713 * 27.5, p713 * 150, p713 * 50);
    v1122.bezierCurveTo(p713 * 110.5, p713 * 286, p713 * 110.5, p713 * 286, p713 * 103, p713 * 331);
    v1122.bezierCurveTo(p713 * 69.5, p713 * 325, p713 * 69.5, p713 * 325, p713 * 36, p713 * 319);
    v1122.bezierCurveTo(p713 * 56.5, p713 * 180, p713 * 56.5, p713 * 180, p713 * 77, p713 * 41);
    v1122.closePath();
    f90(v1122, vVUndefined8, p715[2], p713 * 7);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 56, p713 * 328);
    v1122.bezierCurveTo(p713 * 47, p713 * 385.5, p713 * 47, p713 * 385.5, p713 * 38, p713 * 443);
    v1122.bezierCurveTo(p713 * 52, p713 * 446, p713 * 52, p713 * 446, p713 * 66, p713 * 449);
    v1122.bezierCurveTo(p713 * 76.5, p713 * 388.5, p713 * 76.5, p713 * 388.5, p713 * 87, p713 * 328);
    v1122.closePath();
    f90(v1122, p715[4], p715[5], p713 * 7);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 74, p713 * 302);
    v1122.bezierCurveTo(p713 * 104, p713 * 316.5, p713 * 104, p713 * 316.5, p713 * 134, p713 * 331);
    v1122.bezierCurveTo(p713 * 133, p713 * 341, p713 * 133, p713 * 341, p713 * 132, p713 * 351);
    v1122.bezierCurveTo(p713 * 69.5, p713 * 342, p713 * 69.5, p713 * 342, p713 * 7, p713 * 333);
    v1122.bezierCurveTo(p713 * 8, p713 * 323, p713 * 8, p713 * 323, p713 * 9, p713 * 313);
    v1122.closePath();
    f90(v1122, p715[4], p715[5], p713 * 7);
    v1122.save();
    v1122.translate(p713 * 51.5, p713 * 440.5);
    v1122.rotate(0.2);
    f87(v1122, p713 * -20.5, p713 * -18.5, p713 * 41, p713 * 37, p713 * 10);
    v1122.restore();
    f90(v1122, p715[4], p715[5], p713 * 7);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p713 * 73, p713 * 316);
    v1122.bezierCurveTo(p713 * 90, p713 * 324.5, p713 * 90, p713 * 324.5, p713 * 107, p713 * 333);
    v1122.bezierCurveTo(p713 * 70, p713 * 327.5, p713 * 70, p713 * 327.5, p713 * 33, p713 * 322);
    v1122.closePath();
    f90(v1122, p715[6]);
    return v1121;
  }
  function f141(p716, p717, p718, p719) {
    var v1123 = document.createElement("canvas");
    var v1124 = v1123.getContext("2d");
    v1123.width = p716 * 283;
    v1123.height = p716 * 224;
    v1124.translate(0, p716 * 15);
    v1124.globalAlpha = 0.5;
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 93, p716 * 55);
    v1124.bezierCurveTo(p716 * 127, p716 * 27, p716 * 195, p716 * 42, p716 * 213, p716 * 78);
    v1124.bezierCurveTo(p716 * 254, p716 * 134, p716 * 226, p716 * 198, p716 * 153, p716 * 197);
    v1124.bezierCurveTo(p716 * 59, p716 * 204, p716 * 56, p716 * 158, p716 * 51, p716 * 115);
    v1124.bezierCurveTo(p716 * 50, p716 * 93, p716 * 81, p716 * 62, p716 * 90, p716 * 57);
    v1124.closePath();
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 100, p716 * 33);
    v1124.bezierCurveTo(p716 * 85, p716 * 62, p716 * 102, p716 * 66, p716 * 110, p716 * 83);
    v1124.closePath();
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 181, p716 * 32);
    v1124.bezierCurveTo(p716 * 196, p716 * 62, p716 * 181, p716 * 68, p716 * 178, p716 * 69);
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 225, p716 * 52);
    v1124.bezierCurveTo(p716 * 228, p716 * 78, p716 * 207, p716 * 77, p716 * 192, p716 * 88);
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 34, p716 * 134);
    v1124.bezierCurveTo(p716 * 46, p716 * 111, p716 * 57, p716 * 111, p716 * 79, p716 * 109);
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 249, p716 * 135);
    v1124.bezierCurveTo(p716 * 233, p716 * 107, p716 * 212, p716 * 112, p716 * 202, p716 * 115);
    f90(v1124, p718[0]);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 56, p716 * 50);
    v1124.bezierCurveTo(p716 * 56, p716 * 82, p716 * 73, p716 * 82, p716 * 93, p716 * 89);
    f90(v1124, p718[0]);
    v1124.translate(0, p716 * -15);
    v1124.globalAlpha = 1;
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 100, p716 * 33);
    v1124.bezierCurveTo(p716 * 85, p716 * 62, p716 * 102, p716 * 66, p716 * 110, p716 * 83);
    f90(v1124, undefined, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 181, p716 * 32);
    v1124.bezierCurveTo(p716 * 196, p716 * 62, p716 * 181, p716 * 68, p716 * 178, p716 * 69);
    f90(v1124, undefined, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 225, p716 * 52);
    v1124.bezierCurveTo(p716 * 228, p716 * 78, p716 * 207, p716 * 77, p716 * 192, p716 * 88);
    f90(v1124, vVVVUndefined823, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 34, p716 * 134);
    v1124.bezierCurveTo(p716 * 46, p716 * 111, p716 * 57, p716 * 111, p716 * 79, p716 * 109);
    f90(v1124, vVVVVUndefined82, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 249, p716 * 135);
    v1124.bezierCurveTo(p716 * 233, p716 * 107, p716 * 212, p716 * 112, p716 * 202, p716 * 115);
    f90(v1124, vVVVVUndefined82, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 56, p716 * 50);
    v1124.bezierCurveTo(p716 * 56, p716 * 82, p716 * 73, p716 * 82, p716 * 93, p716 * 89);
    f90(v1124, undefined, p718[2], p716 * 40);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 93, p716 * 55);
    v1124.bezierCurveTo(p716 * 127, p716 * 27, p716 * 195, p716 * 42, p716 * 213, p716 * 78);
    v1124.bezierCurveTo(p716 * 254, p716 * 134, p716 * 226, p716 * 198, p716 * 153, p716 * 197);
    v1124.bezierCurveTo(p716 * 59, p716 * 204, p716 * 56, p716 * 158, p716 * 51, p716 * 115);
    v1124.bezierCurveTo(p716 * 50, p716 * 93, p716 * 81, p716 * 62, p716 * 90, p716 * 57);
    v1124.closePath();
    f90(v1124, p718[1], p718[2], p716 * 10);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 100, p716 * 33);
    v1124.bezierCurveTo(p716 * 85, p716 * 62, p716 * 102, p716 * 66, p716 * 110, p716 * 83);
    f90(v1124, vVVVVUndefined823, p718[1], p716 * 20);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 181, p716 * 32);
    v1124.bezierCurveTo(p716 * 196, p716 * 62, p716 * 181, p716 * 68, p716 * 178, p716 * 69);
    f90(v1124, vVVVUndefined82, p718[1], p716 * 20);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 225, p716 * 52);
    v1124.bezierCurveTo(p716 * 228, p716 * 78, p716 * 207, p716 * 77, p716 * 192, p716 * 88);
    f90(v1124, vVVUndefined132, p718[1], p716 * 20);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 34, p716 * 134);
    v1124.bezierCurveTo(p716 * 46, p716 * 111, p716 * 57, p716 * 111, p716 * 79, p716 * 109);
    f90(v1124, vVVVUndefined824, p718[1], p716 * 20);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 249, p716 * 135);
    v1124.bezierCurveTo(p716 * 233, p716 * 107, p716 * 212, p716 * 112, p716 * 202, p716 * 115);
    f90(v1124, vVVUndefined132, p718[1], p716 * 20);
    v1124.beginPath();
    v1124.lineCap = "round";
    v1124.lineJoin = "round";
    v1124.moveTo(p716 * 56, p716 * 50);
    v1124.bezierCurveTo(p716 * 56, p716 * 82, p716 * 73, p716 * 82, p716 * 93, p716 * 89);
    f90(v1124, vVVUndefined13, p718[1], p716 * 20);
    f93(v1124, p716 * 101, p716 * 155, p716 * 20.591260281974);
    f90(v1124, p718[3]);
    f93(v1124, p716 * 180, p716 * 155, p716 * 20.591260281974);
    f90(v1124, p718[3]);
    f93(v1124, p716 * 95, p716 * 148, p716 * 7.211102550927978);
    f90(v1124, p718[4]);
    f93(v1124, p716 * 173, p716 * 148, p716 * 7.211102550927978);
    f90(v1124, p718[4]);
    if (p719 === 1) {
      v1124.beginPath();
      v1124.lineCap = "round";
      v1124.lineJoin = "round";
      v1124.moveTo(p716 * 191, p716 * 107);
      v1124.bezierCurveTo(p716 * 180, p716 * 104, p716 * 175, p716 * 101, p716 * 180, p716 * 95);
      v1124.bezierCurveTo(p716 * 180, p716 * 95, p716 * 181, p716 * 99, p716 * 188, p716 * 103);
      v1124.bezierCurveTo(p716 * 191, p716 * 101, p716 * 191, p716 * 95, p716 * 190, p716 * 91);
      v1124.bezierCurveTo(p716 * 190, p716 * 91, p716 * 196, p716 * 89, p716 * 195, p716 * 99);
      v1124.closePath();
      f90(v1124, p718[2]);
      v1124.beginPath();
      v1124.lineCap = "round";
      v1124.lineJoin = "round";
      v1124.moveTo(p716 * 206, p716 * 98);
      v1124.bezierCurveTo(p716 * 203, p716 * 95, p716 * 200, p716 * 93, p716 * 198, p716 * 101);
      v1124.bezierCurveTo(p716 * 194, p716 * 109, p716 * 193, p716 * 109, p716 * 196, p716 * 110);
      v1124.bezierCurveTo(p716 * 206, p716 * 115, p716 * 209, p716 * 114, p716 * 211, p716 * 111);
      v1124.bezierCurveTo(p716 * 211, p716 * 106, p716 * 208, p716 * 108, p716 * 203, p716 * 108);
      v1124.bezierCurveTo(p716 * 193, p716 * 107, p716 * 204, p716 * 101, p716 * 206, p716 * 99);
      v1124.closePath();
      f90(v1124, p718[2]);
      v1124.beginPath();
      v1124.lineCap = "round";
      v1124.lineJoin = "round";
      v1124.moveTo(p716 * 172, p716 * 111);
      v1124.bezierCurveTo(p716 * 172, p716 * 106, p716 * 174, p716 * 105, p716 * 185, p716 * 109);
      v1124.bezierCurveTo(p716 * 190, p716 * 109, p716 * 189, p716 * 114, p716 * 185, p716 * 120);
      v1124.bezierCurveTo(p716 * 181, p716 * 125, p716 * 180, p716 * 126, p716 * 176, p716 * 122);
      v1124.bezierCurveTo(p716 * 182, p716 * 119, p716 * 187, p716 * 110, p716 * 182, p716 * 112);
      v1124.closePath();
      f90(v1124, p718[2]);
      v1124.beginPath();
      v1124.lineCap = "round";
      v1124.lineJoin = "round";
      v1124.moveTo(p716 * 202, p716 * 125);
      v1124.bezierCurveTo(p716 * 197, p716 * 117, p716 * 193, p716 * 116, p716 * 193, p716 * 120);
      v1124.bezierCurveTo(p716 * 192.5, p716 * 124.5, p716 * 192.5, p716 * 124.5, p716 * 192, p716 * 129);
      v1124.bezierCurveTo(p716 * 188, p716 * 129, p716 * 187, p716 * 124, p716 * 189, p716 * 120);
      v1124.bezierCurveTo(p716 * 191, p716 * 110, p716 * 192, p716 * 110, p716 * 200, p716 * 116);
      v1124.bezierCurveTo(p716 * 208, p716 * 120, p716 * 207, p716 * 123, p716 * 202, p716 * 125);
      v1124.closePath();
      f90(v1124, p718[2]);
    }
    return v1123;
  }
  function f142(p720, p721) {
    var v1125 = document.createElement("canvas");
    var v1126 = v1125.getContext("2d");
    v1125.width = p720 * 283;
    v1125.height = p720 * 224;
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 100, p720 * 33);
    v1126.bezierCurveTo(p720 * 85, p720 * 62, p720 * 102, p720 * 66, p720 * 110, p720 * 83);
    f90(v1126, undefined, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 181, p720 * 32);
    v1126.bezierCurveTo(p720 * 196, p720 * 62, p720 * 181, p720 * 68, p720 * 178, p720 * 69);
    f90(v1126, vUndefined, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 225, p720 * 52);
    v1126.bezierCurveTo(p720 * 228, p720 * 78, p720 * 207, p720 * 77, p720 * 192, p720 * 88);
    f90(v1126, vVVVUndefined13, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 34, p720 * 134);
    v1126.bezierCurveTo(p720 * 46, p720 * 111, p720 * 57, p720 * 111, p720 * 79, p720 * 109);
    f90(v1126, vVVVVUndefined823, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 249, p720 * 135);
    v1126.bezierCurveTo(p720 * 233, p720 * 107, p720 * 212, p720 * 112, p720 * 202, p720 * 115);
    f90(v1126, vVVUndefined13, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 56, p720 * 50);
    v1126.bezierCurveTo(p720 * 56, p720 * 82, p720 * 73, p720 * 82, p720 * 93, p720 * 89);
    f90(v1126, vVVVUndefined132, p721[0], p720 * 40);
    v1126.beginPath();
    v1126.lineCap = "round";
    v1126.lineJoin = "round";
    v1126.moveTo(p720 * 93, p720 * 55);
    v1126.bezierCurveTo(p720 * 124, p720 * 29, p720 * 179, p720 * 44, p720 * 188, p720 * 52);
    v1126.bezierCurveTo(p720 * 207, p720 * 64, p720 * 226, p720 * 94, p720 * 231, p720 * 118);
    v1126.bezierCurveTo(p720 * 236, p720 * 145, p720 * 222, p720 * 184, p720 * 193, p720 * 192);
    v1126.bezierCurveTo(p720 * 147, p720 * 201, p720 * 116, p720 * 200, p720 * 93, p720 * 193);
    v1126.bezierCurveTo(p720 * 61, p720 * 180, p720 * 48, p720 * 147, p720 * 50, p720 * 123);
    v1126.bezierCurveTo(p720 * 50, p720 * 93, p720 * 76, p720 * 66, p720 * 92, p720 * 56);
    v1126.closePath();
    f90(v1126, p721[0]);
    return v1125;
  }
  function f143(p722, p723, p724) {
    var v1127 = document.createElement("canvas");
    var v1128 = v1127.getContext("2d");
    v1127.width = p722 * 290;
    v1127.height = p722 * 525;
    v1128.globalAlpha = p723 ? 0.5 : 1;
    v1128.translate(p722 * 20, p722 * 20);
    v1128.beginPath();
    v1128.lineCap = "round";
    v1128.lineJoin = "round";
    v1128.moveTo(p722 * 111, p722 * 351);
    v1128.bezierCurveTo(p722 * 128.5, p722 * 218.5, p722 * 128.5, p722 * 218.5, p722 * 146, p722 * 86);
    v1128.bezierCurveTo(p722 * 166.5, p722 * 66.5, p722 * 166.5, p722 * 66.5, p722 * 187, p722 * 47);
    v1128.bezierCurveTo(p722 * 201, p722 * 71.5, p722 * 201, p722 * 71.5, p722 * 215, p722 * 96);
    v1128.bezierCurveTo(p722 * 193, p722 * 228.5, p722 * 193, p722 * 228.5, p722 * 171, p722 * 361);
    v1128.closePath();
    f90(v1128, p724[0]);
    v1128.save();
    v1128.translate(p722 * 129.5, p722 * 424);
    v1128.rotate(0.16);
    f87(v1128, p722 * -15.5, p722 * -63, p722 * 31, p722 * 126, p722 * 10);
    v1128.restore();
    f90(v1128, p724[0]);
    f93(v1128, p722 * 121, p722 * 480, p722 * 20.396078054371138);
    f90(v1128, p724[0]);
    v1128.beginPath();
    v1128.lineCap = "round";
    v1128.lineJoin = "round";
    v1128.moveTo(p722 * 90, p722 * 311);
    v1128.bezierCurveTo(p722 * 95, p722 * 324, p722 * 95, p722 * 324, p722 * 100, p722 * 337);
    v1128.bezierCurveTo(p722 * 141.5, p722 * 345.5, p722 * 141.5, p722 * 345.5, p722 * 183, p722 * 354);
    v1128.bezierCurveTo(p722 * 193.5, p722 * 342.5, p722 * 193.5, p722 * 342.5, p722 * 204, p722 * 331);
    v1128.bezierCurveTo(p722 * 202, p722 * 354, p722 * 202, p722 * 354, p722 * 200, p722 * 377);
    v1128.bezierCurveTo(p722 * 147, p722 * 388, p722 * 106, p722 * 371, p722 * 79, p722 * 356);
    v1128.closePath();
    f90(v1128, p724[0]);
    v1128.globalAlpha = 1;
    v1128.translate(p722 * -20, p722 * -20);
    v1128.beginPath();
    v1128.lineCap = "round";
    v1128.lineJoin = "round";
    v1128.moveTo(p722 * 111, p722 * 351);
    v1128.bezierCurveTo(p722 * 128.5, p722 * 218.5, p722 * 128.5, p722 * 218.5, p722 * 146, p722 * 86);
    v1128.bezierCurveTo(p722 * 166.5, p722 * 66.5, p722 * 166.5, p722 * 66.5, p722 * 187, p722 * 47);
    v1128.bezierCurveTo(p722 * 201, p722 * 71.5, p722 * 201, p722 * 71.5, p722 * 215, p722 * 96);
    v1128.bezierCurveTo(p722 * 193, p722 * 228.5, p722 * 193, p722 * 228.5, p722 * 171, p722 * 361);
    v1128.closePath();
    f90(v1128, p724[1], p724[2], p722 * 12.5);
    v1128.save();
    v1128.translate(p722 * 129.5, p722 * 424);
    v1128.rotate(0.16);
    f87(v1128, p722 * -15.5, p722 * -63, p722 * 31, p722 * 126, p722 * 10);
    v1128.restore();
    f90(v1128, p724[4], p724[5], p722 * 12.5);
    f93(v1128, p722 * 121, p722 * 480, p722 * 20.396078054371138);
    f90(v1128, p724[4], p724[5], p722 * 12.5);
    v1128.beginPath();
    v1128.lineCap = "round";
    v1128.lineJoin = "round";
    v1128.moveTo(p722 * 90, p722 * 311);
    v1128.bezierCurveTo(p722 * 95, p722 * 324, p722 * 95, p722 * 324, p722 * 100, p722 * 337);
    v1128.bezierCurveTo(p722 * 141.5, p722 * 345.5, p722 * 141.5, p722 * 345.5, p722 * 183, p722 * 354);
    v1128.bezierCurveTo(p722 * 193.5, p722 * 342.5, p722 * 193.5, p722 * 342.5, p722 * 204, p722 * 331);
    v1128.bezierCurveTo(p722 * 202, p722 * 354, p722 * 202, p722 * 354, p722 * 200, p722 * 377);
    v1128.bezierCurveTo(p722 * 147, p722 * 388, p722 * 106, p722 * 371, p722 * 79, p722 * 356);
    v1128.closePath();
    f90(v1128, p724[1], p724[2], p722 * 12.5);
    return v1127;
  }
  function f144(p725, p726) {
    var v1129 = document.createElement("canvas");
    var v1130 = v1129.getContext("2d");
    v1129.width = p725 * 372;
    v1129.height = p725 * 375;
    v1130.globalAlpha = 0.5;
    v1130.translate(p725 * 15, p725 * 15);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 313.0000305175781, p725 * 76.58523559570312);
    v1130.bezierCurveTo(p725 * 308.0000305175781, p725 * 130.58523559570312, p725 * 279.0000305175781, p725 * 158.58523559570312, p725 * 254.00003051757812, p725 * 175.58523559570312);
    v1130.bezierCurveTo(p725 * 287.0000305175781, p725 * 182.58523559570312, p725 * 274.0000305175781, p725 * 181.08523559570312, p725 * 294.0000305175781, p725 * 186.58523559570312);
    v1130.bezierCurveTo(p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.0000305175781, p725 * 205.58523559570312);
    v1130.bezierCurveTo(p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 315.0000305175781, p725 * 196.58523559570312);
    v1130.bezierCurveTo(p725 * 350.0000305175781, p725 * 219.58523559570312, p725 * 343.0000305175781, p725 * 221.58523559570312, p725 * 351.0000305175781, p725 * 230.58523559570312);
    v1130.bezierCurveTo(p725 * 296.0000305175781, p725 * 260.5852355957031, p725 * 264.0000305175781, p725 * 256.5852355957031, p725 * 220.00003051757812, p725 * 236.58523559570312);
    v1130.bezierCurveTo(p725 * 233.00003051757812, p725 * 266.5852355957031, p725 * 232.00003051757812, p725 * 279.5852355957031, p725 * 231.00003051757812, p725 * 295.5852355957031);
    v1130.bezierCurveTo(p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 213.00003051757812, p725 * 299.5852355957031);
    v1130.bezierCurveTo(p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 226.00003051757812, p725 * 316.5852355957031);
    v1130.bezierCurveTo(p725 * 223.00003051757812, p725 * 344.5852355957031, p725 * 216.00003051757812, p725 * 350.5852355957031, p725 * 209.00003051757812, p725 * 363.5852355957031);
    v1130.bezierCurveTo(p725 * 154.00003051757812, p725 * 318.5852355957031, p725 * 156.00003051757812, p725 * 268.5852355957031, p725 * 160.00003051757812, p725 * 238.58523559570312);
    v1130.bezierCurveTo(p725 * 135.00003051757812, p725 * 268.5852355957031, p725 * 125.00003051757812, p725 * 267.5852355957031, p725 * 112.00003051757812, p725 * 272.5852355957031);
    v1130.bezierCurveTo(p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 97.00003051757812, p725 * 260.5852355957031);
    v1130.bezierCurveTo(p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 89.00003051757812, p725 * 281.5852355957031);
    v1130.bezierCurveTo(p725 * 66.00003051757812, p725 * 288.5852355957031, p725 * 59.000030517578125, p725 * 288.5852355957031, p725 * 39.000030517578125, p725 * 285.5852355957031);
    v1130.bezierCurveTo(p725 * 56.000030517578125, p725 * 216.58523559570312, p725 * 91.00003051757812, p725 * 204.58523559570312, p725 * 129.00003051757812, p725 * 189.58523559570312);
    v1130.bezierCurveTo(p725 * 90.00003051757812, p725 * 176.58523559570312, p725 * 89.00003051757812, p725 * 173.58523559570312, p725 * 79.00003051757812, p725 * 166.58523559570312);
    v1130.bezierCurveTo(p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 85.00003051757812, p725 * 143.58523559570312);
    v1130.bezierCurveTo(p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 66.00003051757812, p725 * 151.58523559570312);
    v1130.bezierCurveTo(p725 * 44.000030517578125, p725 * 133.58523559570312, p725 * 41.000030517578125, p725 * 124.58523559570312, p725 * 34.000030517578125, p725 * 102.58523559570312);
    v1130.bezierCurveTo(p725 * 100.00003051757812, p725 * 81.58523559570312, p725 * 134.00003051757812, p725 * 118.58523559570312, p725 * 150.00003051757812, p725 * 128.58523559570312);
    v1130.bezierCurveTo(p725 * 144.00003051757812, p725 * 102.58523559570312, p725 * 147.00003051757812, p725 * 90.58523559570312, p725 * 150.00003051757812, p725 * 80.58523559570312);
    v1130.bezierCurveTo(p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 169.00003051757812, p725 * 77.58523559570312);
    v1130.bezierCurveTo(p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 157.00003051757812, p725 * 67.58523559570312);
    v1130.bezierCurveTo(p725 * 162.00003051757812, p725 * 42.585235595703125, p725 * 169.00003051757812, p725 * 29.585235595703125, p725 * 182.00003051757812, p725 * 14.585235595703125);
    v1130.bezierCurveTo(p725 * 219.00003051757812, p725 * 48.585235595703125, p725 * 222.00003051757812, p725 * 92.58523559570312, p725 * 218.00003051757812, p725 * 112.58523559570312);
    v1130.bezierCurveTo(p725 * 239.00003051757812, p725 * 95.58523559570312, p725 * 242.00003051757812, p725 * 97.58523559570312, p725 * 249.00003051757812, p725 * 94.58523559570312);
    v1130.bezierCurveTo(p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 261.0000305175781, p725 * 111.58523559570312);
    v1130.bezierCurveTo(p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 262.0000305175781, p725 * 87.58523559570312);
    v1130.bezierCurveTo(p725 * 282.0000305175781, p725 * 77.58523559570312, p725 * 301.0000305175781, p725 * 74.58523559570312, p725 * 314.0000305175781, p725 * 76.58523559570312);
    v1130.closePath();
    f90(v1130, p726[0]);
    v1130.globalAlpha = 1;
    v1130.translate(p725 * -15, p725 * -15);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 313.0000305175781, p725 * 76.58523559570312);
    v1130.bezierCurveTo(p725 * 308.0000305175781, p725 * 130.58523559570312, p725 * 279.0000305175781, p725 * 158.58523559570312, p725 * 254.00003051757812, p725 * 175.58523559570312);
    v1130.bezierCurveTo(p725 * 287.0000305175781, p725 * 182.58523559570312, p725 * 274.0000305175781, p725 * 181.08523559570312, p725 * 294.0000305175781, p725 * 186.58523559570312);
    v1130.bezierCurveTo(p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.0000305175781, p725 * 205.58523559570312);
    v1130.bezierCurveTo(p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 315.0000305175781, p725 * 196.58523559570312);
    v1130.bezierCurveTo(p725 * 350.0000305175781, p725 * 219.58523559570312, p725 * 343.0000305175781, p725 * 221.58523559570312, p725 * 351.0000305175781, p725 * 230.58523559570312);
    v1130.bezierCurveTo(p725 * 296.0000305175781, p725 * 260.5852355957031, p725 * 264.0000305175781, p725 * 256.5852355957031, p725 * 220.00003051757812, p725 * 236.58523559570312);
    v1130.bezierCurveTo(p725 * 233.00003051757812, p725 * 266.5852355957031, p725 * 232.00003051757812, p725 * 279.5852355957031, p725 * 231.00003051757812, p725 * 295.5852355957031);
    v1130.bezierCurveTo(p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 213.00003051757812, p725 * 299.5852355957031);
    v1130.bezierCurveTo(p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 226.00003051757812, p725 * 316.5852355957031);
    v1130.bezierCurveTo(p725 * 223.00003051757812, p725 * 344.5852355957031, p725 * 216.00003051757812, p725 * 350.5852355957031, p725 * 209.00003051757812, p725 * 363.5852355957031);
    v1130.bezierCurveTo(p725 * 154.00003051757812, p725 * 318.5852355957031, p725 * 156.00003051757812, p725 * 268.5852355957031, p725 * 160.00003051757812, p725 * 238.58523559570312);
    v1130.bezierCurveTo(p725 * 135.00003051757812, p725 * 268.5852355957031, p725 * 125.00003051757812, p725 * 267.5852355957031, p725 * 112.00003051757812, p725 * 272.5852355957031);
    v1130.bezierCurveTo(p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 97.00003051757812, p725 * 260.5852355957031);
    v1130.bezierCurveTo(p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 89.00003051757812, p725 * 281.5852355957031);
    v1130.bezierCurveTo(p725 * 66.00003051757812, p725 * 288.5852355957031, p725 * 59.000030517578125, p725 * 288.5852355957031, p725 * 39.000030517578125, p725 * 285.5852355957031);
    v1130.bezierCurveTo(p725 * 56.000030517578125, p725 * 216.58523559570312, p725 * 91.00003051757812, p725 * 204.58523559570312, p725 * 129.00003051757812, p725 * 189.58523559570312);
    v1130.bezierCurveTo(p725 * 90.00003051757812, p725 * 176.58523559570312, p725 * 89.00003051757812, p725 * 173.58523559570312, p725 * 79.00003051757812, p725 * 166.58523559570312);
    v1130.bezierCurveTo(p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 85.00003051757812, p725 * 143.58523559570312);
    v1130.bezierCurveTo(p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 66.00003051757812, p725 * 151.58523559570312);
    v1130.bezierCurveTo(p725 * 44.000030517578125, p725 * 133.58523559570312, p725 * 41.000030517578125, p725 * 124.58523559570312, p725 * 34.000030517578125, p725 * 102.58523559570312);
    v1130.bezierCurveTo(p725 * 100.00003051757812, p725 * 81.58523559570312, p725 * 134.00003051757812, p725 * 118.58523559570312, p725 * 150.00003051757812, p725 * 128.58523559570312);
    v1130.bezierCurveTo(p725 * 144.00003051757812, p725 * 102.58523559570312, p725 * 147.00003051757812, p725 * 90.58523559570312, p725 * 150.00003051757812, p725 * 80.58523559570312);
    v1130.bezierCurveTo(p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 169.00003051757812, p725 * 77.58523559570312);
    v1130.bezierCurveTo(p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 157.00003051757812, p725 * 67.58523559570312);
    v1130.bezierCurveTo(p725 * 162.00003051757812, p725 * 42.585235595703125, p725 * 169.00003051757812, p725 * 29.585235595703125, p725 * 182.00003051757812, p725 * 14.585235595703125);
    v1130.bezierCurveTo(p725 * 219.00003051757812, p725 * 48.585235595703125, p725 * 222.00003051757812, p725 * 92.58523559570312, p725 * 218.00003051757812, p725 * 112.58523559570312);
    v1130.bezierCurveTo(p725 * 239.00003051757812, p725 * 95.58523559570312, p725 * 242.00003051757812, p725 * 97.58523559570312, p725 * 249.00003051757812, p725 * 94.58523559570312);
    v1130.bezierCurveTo(p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 261.0000305175781, p725 * 111.58523559570312);
    v1130.bezierCurveTo(p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 262.0000305175781, p725 * 87.58523559570312);
    v1130.bezierCurveTo(p725 * 282.0000305175781, p725 * 77.58523559570312, p725 * 301.0000305175781, p725 * 74.58523559570312, p725 * 314.0000305175781, p725 * 76.58523559570312);
    v1130.closePath();
    f90(v1130, p726[1], p726[2], p725 * 4);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 186.00003051757812, p725 * 192.94886779785156);
    v1130.bezierCurveTo(p725 * 185.00003051757812, p725 * 66.94886779785156, p725 * 184.50003051757812, p725 * 104.94886779785156, p725 * 183.00003051757812, p725 * 16.948867797851562);
    v1130.bezierCurveTo(p725 * 216.00003051757812, p725 * 47.94886779785156, p725 * 219.00003051757812, p725 * 80.94886779785156, p725 * 218.00003051757812, p725 * 113.94886779785156);
    v1130.bezierCurveTo(p725 * 209.00003051757812, p725 * 165.94886779785156, p725 * 200.00003051757812, p725 * 176.94886779785156, p725 * 189.00003051757812, p725 * 192.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 190.00003051757812, p725 * 191.94886779785156);
    v1130.bezierCurveTo(p725 * 207.00003051757812, p725 * 348.94886779785156, p725 * 205.00003051757812, p725 * 323.94886779785156, p725 * 209.00003051757812, p725 * 358.94886779785156);
    v1130.bezierCurveTo(p725 * 171.00003051757812, p725 * 334.94886779785156, p725 * 167.00003051757812, p725 * 302.94886779785156, p725 * 161.00003051757812, p725 * 268.94886779785156);
    v1130.bezierCurveTo(p725 * 160.00003051757812, p725 * 218.94886779785156, p725 * 181.00003051757812, p725 * 191.94886779785156, p725 * 189.00003051757812, p725 * 186.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 194.00003051757812, p725 * 195.94886779785156);
    v1130.bezierCurveTo(p725 * 116.00003051757812, p725 * 150.94886779785156, p725 * 116.00003051757812, p725 * 150.94886779785156, p725 * 38.000030517578125, p725 * 105.94886779785156);
    v1130.bezierCurveTo(p725 * 67.00003051757812, p725 * 90.94886779785156, p725 * 96.00003051757812, p725 * 99.94886779785156, p725 * 123.00003051757812, p725 * 111.94886779785156);
    v1130.bezierCurveTo(p725 * 183.00003051757812, p725 * 152.94886779785156, p725 * 179.00003051757812, p725 * 180.94886779785156, p725 * 193.00003051757812, p725 * 194.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 189.00003051757812, p725 * 190.94886779785156);
    v1130.bezierCurveTo(p725 * 250.00003051757812, p725 * 133.94886779785156, p725 * 311.0000305175781, p725 * 78.94886779785156, p725 * 311.0000305175781, p725 * 76.94886779785156);
    v1130.bezierCurveTo(p725 * 306.0000305175781, p725 * 127.94886779785156, p725 * 283.0000305175781, p725 * 148.94886779785156, p725 * 261.0000305175781, p725 * 166.94886779785156);
    v1130.bezierCurveTo(p725 * 220.00003051757812, p725 * 197.94886779785156, p725 * 191.00003051757812, p725 * 194.94886779785156, p725 * 189.00003051757812, p725 * 195.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 189.00003051757812, p725 * 194.94886779785156);
    v1130.bezierCurveTo(p725 * 268.5000305175781, p725 * 211.94886779785156, p725 * 268.5000305175781, p725 * 211.94886779785156, p725 * 348.0000305175781, p725 * 228.94886779785156);
    v1130.bezierCurveTo(p725 * 316.0000305175781, p725 * 247.94886779785156, p725 * 298.0000305175781, p725 * 256.94886779785156, p725 * 250.00003051757812, p725 * 246.94886779785156);
    v1130.bezierCurveTo(p725 * 197.00003051757812, p725 * 229.94886779785156, p725 * 189.00003051757812, p725 * 202.94886779785156, p725 * 188.00003051757812, p725 * 199.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 192.00003051757812, p725 * 191.94886779785156);
    v1130.bezierCurveTo(p725 * 116.50003051757812, p725 * 238.44886779785156, p725 * 116.50003051757812, p725 * 238.44886779785156, p725 * 41.000030517578125, p725 * 284.94886779785156);
    v1130.bezierCurveTo(p725 * 49.000030517578125, p725 * 252.94886779785156, p725 * 56.000030517578125, p725 * 242.94886779785156, p725 * 80.00003051757812, p725 * 215.94886779785156);
    v1130.bezierCurveTo(p725 * 125.00003051757812, p725 * 181.94886779785156, p725 * 174.00003051757812, p725 * 183.94886779785156, p725 * 192.00003051757812, p725 * 191.94886779785156);
    v1130.closePath();
    f90(v1130, p726[3], p726[3], p725 * 2);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p725 * 313.0000305175781, p725 * 76.58523559570312);
    v1130.bezierCurveTo(p725 * 308.0000305175781, p725 * 130.58523559570312, p725 * 279.0000305175781, p725 * 158.58523559570312, p725 * 254.00003051757812, p725 * 175.58523559570312);
    v1130.bezierCurveTo(p725 * 287.0000305175781, p725 * 182.58523559570312, p725 * 274.0000305175781, p725 * 181.08523559570312, p725 * 294.0000305175781, p725 * 186.58523559570312);
    v1130.bezierCurveTo(p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.5000305175781, p725 * 196.08523559570312, p725 * 293.0000305175781, p725 * 205.58523559570312);
    v1130.bezierCurveTo(p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 304.0000305175781, p725 * 201.08523559570312, p725 * 315.0000305175781, p725 * 196.58523559570312);
    v1130.bezierCurveTo(p725 * 350.0000305175781, p725 * 219.58523559570312, p725 * 343.0000305175781, p725 * 221.58523559570312, p725 * 351.0000305175781, p725 * 230.58523559570312);
    v1130.bezierCurveTo(p725 * 296.0000305175781, p725 * 260.5852355957031, p725 * 264.0000305175781, p725 * 256.5852355957031, p725 * 220.00003051757812, p725 * 236.58523559570312);
    v1130.bezierCurveTo(p725 * 233.00003051757812, p725 * 266.5852355957031, p725 * 232.00003051757812, p725 * 279.5852355957031, p725 * 231.00003051757812, p725 * 295.5852355957031);
    v1130.bezierCurveTo(p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 222.00003051757812, p725 * 297.5852355957031, p725 * 213.00003051757812, p725 * 299.5852355957031);
    v1130.bezierCurveTo(p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 219.50003051757812, p725 * 308.0852355957031, p725 * 226.00003051757812, p725 * 316.5852355957031);
    v1130.bezierCurveTo(p725 * 223.00003051757812, p725 * 344.5852355957031, p725 * 216.00003051757812, p725 * 350.5852355957031, p725 * 209.00003051757812, p725 * 363.5852355957031);
    v1130.bezierCurveTo(p725 * 154.00003051757812, p725 * 318.5852355957031, p725 * 156.00003051757812, p725 * 268.5852355957031, p725 * 160.00003051757812, p725 * 238.58523559570312);
    v1130.bezierCurveTo(p725 * 135.00003051757812, p725 * 268.5852355957031, p725 * 125.00003051757812, p725 * 267.5852355957031, p725 * 112.00003051757812, p725 * 272.5852355957031);
    v1130.bezierCurveTo(p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 104.50003051757812, p725 * 266.5852355957031, p725 * 97.00003051757812, p725 * 260.5852355957031);
    v1130.bezierCurveTo(p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 93.00003051757812, p725 * 271.0852355957031, p725 * 89.00003051757812, p725 * 281.5852355957031);
    v1130.bezierCurveTo(p725 * 66.00003051757812, p725 * 288.5852355957031, p725 * 59.000030517578125, p725 * 288.5852355957031, p725 * 39.000030517578125, p725 * 285.5852355957031);
    v1130.bezierCurveTo(p725 * 56.000030517578125, p725 * 216.58523559570312, p725 * 91.00003051757812, p725 * 204.58523559570312, p725 * 129.00003051757812, p725 * 189.58523559570312);
    v1130.bezierCurveTo(p725 * 90.00003051757812, p725 * 176.58523559570312, p725 * 89.00003051757812, p725 * 173.58523559570312, p725 * 79.00003051757812, p725 * 166.58523559570312);
    v1130.bezierCurveTo(p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 82.00003051757812, p725 * 155.08523559570312, p725 * 85.00003051757812, p725 * 143.58523559570312);
    v1130.bezierCurveTo(p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 75.50003051757812, p725 * 147.58523559570312, p725 * 66.00003051757812, p725 * 151.58523559570312);
    v1130.bezierCurveTo(p725 * 44.000030517578125, p725 * 133.58523559570312, p725 * 41.000030517578125, p725 * 124.58523559570312, p725 * 34.000030517578125, p725 * 102.58523559570312);
    v1130.bezierCurveTo(p725 * 100.00003051757812, p725 * 81.58523559570312, p725 * 134.00003051757812, p725 * 118.58523559570312, p725 * 150.00003051757812, p725 * 128.58523559570312);
    v1130.bezierCurveTo(p725 * 144.00003051757812, p725 * 102.58523559570312, p725 * 147.00003051757812, p725 * 90.58523559570312, p725 * 150.00003051757812, p725 * 80.58523559570312);
    v1130.bezierCurveTo(p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 159.50003051757812, p725 * 79.08523559570312, p725 * 169.00003051757812, p725 * 77.58523559570312);
    v1130.bezierCurveTo(p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 163.00003051757812, p725 * 72.58523559570312, p725 * 157.00003051757812, p725 * 67.58523559570312);
    v1130.bezierCurveTo(p725 * 162.00003051757812, p725 * 42.585235595703125, p725 * 169.00003051757812, p725 * 29.585235595703125, p725 * 182.00003051757812, p725 * 14.585235595703125);
    v1130.bezierCurveTo(p725 * 219.00003051757812, p725 * 48.585235595703125, p725 * 222.00003051757812, p725 * 92.58523559570312, p725 * 218.00003051757812, p725 * 112.58523559570312);
    v1130.bezierCurveTo(p725 * 239.00003051757812, p725 * 95.58523559570312, p725 * 242.00003051757812, p725 * 97.58523559570312, p725 * 249.00003051757812, p725 * 94.58523559570312);
    v1130.bezierCurveTo(p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 255.00003051757812, p725 * 103.08523559570312, p725 * 261.0000305175781, p725 * 111.58523559570312);
    v1130.bezierCurveTo(p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 261.5000305175781, p725 * 99.58523559570312, p725 * 262.0000305175781, p725 * 87.58523559570312);
    v1130.bezierCurveTo(p725 * 282.0000305175781, p725 * 77.58523559570312, p725 * 301.0000305175781, p725 * 74.58523559570312, p725 * 314.0000305175781, p725 * 76.58523559570312);
    v1130.closePath();
    f90(v1130, vVVUndefined82, p726[2], p725 * 4);
    return v1129;
  }
  function f145(p727, p728, p729) {
    var v1131 = document.createElement("canvas");
    var v1132 = v1131.getContext("2d");
    v1131.width = p727 * 154;
    v1131.height = p727 * 261;
    v1132.globalAlpha = p728 ? 0.5 : 1;
    v1132.translate(0, p727 * 10);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 125, p727 * 69);
    v1132.bezierCurveTo(p727 * 123.5, p727 * 141.5, p727 * 123.5, p727 * 141.5, p727 * 122, p727 * 214);
    v1132.bezierCurveTo(p727 * 123, p727 * 228, p727 * 119, p727 * 239, p727 * 102, p727 * 239);
    v1132.bezierCurveTo(p727 * 90, p727 * 238, p727 * 86, p727 * 225, p727 * 89, p727 * 197);
    v1132.bezierCurveTo(p727 * 92, p727 * 159, p727 * 92, p727 * 141, p727 * 94, p727 * 84);
    v1132.bezierCurveTo(p727 * 94, p727 * 58, p727 * 87, p727 * 50, p727 * 73, p727 * 52);
    v1132.bezierCurveTo(p727 * 53, p727 * 54, p727 * 54, p727 * 92, p727 * 34, p727 * 87);
    v1132.bezierCurveTo(p727 * 13, p727 * 85, p727 * 22, p727 * 58, p727 * 34, p727 * 40);
    v1132.bezierCurveTo(p727 * 44, p727 * 24, p727 * 68, p727 * 17, p727 * 86, p727 * 21);
    v1132.bezierCurveTo(p727 * 111, p727 * 23, p727 * 123, p727 * 39, p727 * 125, p727 * 67);
    v1132.closePath();
    f90(v1132, p729[0]);
    v1132.globalAlpha = 1;
    v1132.translate(0, p727 * -10);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 125, p727 * 69);
    v1132.bezierCurveTo(p727 * 123.5, p727 * 141.5, p727 * 123.5, p727 * 141.5, p727 * 122, p727 * 214);
    v1132.bezierCurveTo(p727 * 123, p727 * 228, p727 * 119, p727 * 239, p727 * 102, p727 * 239);
    v1132.bezierCurveTo(p727 * 90, p727 * 238, p727 * 86, p727 * 225, p727 * 89, p727 * 197);
    v1132.bezierCurveTo(p727 * 92, p727 * 159, p727 * 92, p727 * 141, p727 * 94, p727 * 84);
    v1132.bezierCurveTo(p727 * 94, p727 * 58, p727 * 87, p727 * 50, p727 * 73, p727 * 52);
    v1132.bezierCurveTo(p727 * 53, p727 * 54, p727 * 54, p727 * 92, p727 * 34, p727 * 87);
    v1132.bezierCurveTo(p727 * 13, p727 * 85, p727 * 22, p727 * 58, p727 * 34, p727 * 40);
    v1132.bezierCurveTo(p727 * 44, p727 * 24, p727 * 68, p727 * 17, p727 * 86, p727 * 21);
    v1132.bezierCurveTo(p727 * 111, p727 * 23, p727 * 123, p727 * 39, p727 * 125, p727 * 67);
    v1132.closePath();
    f90(v1132, p729[1], p729[2], p727 * 4);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 31, p727 * 43);
    v1132.bezierCurveTo(p727 * 31, p727 * 61, p727 * 43, p727 * 70, p727 * 51, p727 * 75);
    v1132.bezierCurveTo(p727 * 48, p727 * 84, p727 * 41, p727 * 89, p727 * 33, p727 * 86);
    v1132.bezierCurveTo(p727 * 23, p727 * 88, p727 * 20, p727 * 76, p727 * 23, p727 * 62);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 45, p727 * 29);
    v1132.bezierCurveTo(p727 * 49, p727 * 45, p727 * 61, p727 * 54, p727 * 64, p727 * 55);
    v1132.bezierCurveTo(p727 * 67.5, p727 * 53, p727 * 67.5, p727 * 53, p727 * 71, p727 * 51);
    v1132.bezierCurveTo(p727 * 80, p727 * 44, p727 * 83, p727 * 33, p727 * 82, p727 * 20);
    v1132.bezierCurveTo(p727 * 59, p727 * 17, p727 * 51, p727 * 23, p727 * 45, p727 * 30);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 86, p727 * 56);
    v1132.bezierCurveTo(p727 * 90, p727 * 33, p727 * 103, p727 * 25, p727 * 105, p727 * 27);
    v1132.bezierCurveTo(p727 * 116, p727 * 31, p727 * 121, p727 * 45, p727 * 122, p727 * 50);
    v1132.bezierCurveTo(p727 * 112, p727 * 62, p727 * 103, p727 * 63, p727 * 91, p727 * 62);
    v1132.bezierCurveTo(p727 * 89, p727 * 59.5, p727 * 89, p727 * 59.5, p727 * 87, p727 * 57);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 93, p727 * 81);
    v1132.bezierCurveTo(p727 * 109, p727 * 82, p727 * 123, p727 * 70, p727 * 124, p727 * 63);
    v1132.bezierCurveTo(p727 * 124, p727 * 75.5, p727 * 124, p727 * 75.5, p727 * 124, p727 * 88);
    v1132.bezierCurveTo(p727 * 119, p727 * 99, p727 * 103, p727 * 103, p727 * 94, p727 * 103);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 93, p727 * 124);
    v1132.bezierCurveTo(p727 * 108, p727 * 125, p727 * 122, p727 * 113, p727 * 124, p727 * 106);
    v1132.bezierCurveTo(p727 * 124, p727 * 119, p727 * 124, p727 * 129, p727 * 124, p727 * 132);
    v1132.bezierCurveTo(p727 * 110, p727 * 147, p727 * 94, p727 * 148, p727 * 90, p727 * 147);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 90, p727 * 170);
    v1132.bezierCurveTo(p727 * 104, p727 * 166, p727 * 122, p727 * 158, p727 * 122, p727 * 151);
    v1132.bezierCurveTo(p727 * 122, p727 * 162.5, p727 * 122, p727 * 162.5, p727 * 122, p727 * 174);
    v1132.bezierCurveTo(p727 * 111, p727 * 191, p727 * 97, p727 * 191, p727 * 89, p727 * 191);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 88, p727 * 208);
    v1132.bezierCurveTo(p727 * 100, p727 * 209, p727 * 115, p727 * 205, p727 * 122, p727 * 193);
    v1132.bezierCurveTo(p727 * 122, p727 * 205.5, p727 * 122, p727 * 205.5, p727 * 122, p727 * 218);
    v1132.bezierCurveTo(p727 * 115, p727 * 229, p727 * 103, p727 * 235, p727 * 90, p727 * 228);
    v1132.bezierCurveTo(p727 * 88, p727 * 224, p727 * 88, p727 * 217, p727 * 88, p727 * 211);
    v1132.closePath();
    f90(v1132, p729[3]);
    v1132.globalAlpha = 0.4;
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 22, p727 * 81);
    v1132.bezierCurveTo(p727 * 32, p727 * 84, p727 * 41, p727 * 81, p727 * 45, p727 * 68);
    v1132.bezierCurveTo(p727 * 50, p727 * 50, p727 * 62, p727 * 40, p727 * 79, p727 * 43);
    v1132.bezierCurveTo(p727 * 95, p727 * 45, p727 * 102, p727 * 58, p727 * 101, p727 * 81);
    v1132.bezierCurveTo(p727 * 99.5, p727 * 120.5, p727 * 99.5, p727 * 120.5, p727 * 98, p727 * 160);
    v1132.bezierCurveTo(p727 * 96.5, p727 * 191.5, p727 * 96.5, p727 * 191.5, p727 * 95, p727 * 223);
    v1132.bezierCurveTo(p727 * 93, p727 * 232, p727 * 101, p727 * 235, p727 * 108, p727 * 238);
    v1132.bezierCurveTo(p727 * 100, p727 * 240, p727 * 90, p727 * 233, p727 * 90, p727 * 224);
    v1132.bezierCurveTo(p727 * 92, p727 * 157, p727 * 92, p727 * 157, p727 * 94, p727 * 90);
    v1132.bezierCurveTo(p727 * 94, p727 * 56, p727 * 89, p727 * 53, p727 * 77, p727 * 51);
    v1132.bezierCurveTo(p727 * 58, p727 * 50, p727 * 54, p727 * 59, p727 * 49, p727 * 75);
    v1132.bezierCurveTo(p727 * 44, p727 * 91, p727 * 28, p727 * 90, p727 * 23, p727 * 81);
    v1132.closePath();
    f90(v1132, p729[0]);
    v1132.globalAlpha = 1;
    v1132.beginPath();
    v1132.lineCap = "round";
    v1132.lineJoin = "round";
    v1132.moveTo(p727 * 82, p727 * 123);
    v1132.bezierCurveTo(p727 * 88, p727 * 130, p727 * 88, p727 * 127, p727 * 94, p727 * 128);
    v1132.bezierCurveTo(p727 * 91, p727 * 136, p727 * 94, p727 * 137, p727 * 99, p727 * 142);
    v1132.bezierCurveTo(p727 * 97, p727 * 149, p727 * 99, p727 * 152, p727 * 105, p727 * 155);
    v1132.bezierCurveTo(p727 * 107, p727 * 159, p727 * 113, p727 * 159, p727 * 120, p727 * 158);
    v1132.bezierCurveTo(p727 * 121, p727 * 160, p727 * 125, p727 * 163, p727 * 132, p727 * 163);
    v1132.bezierCurveTo(p727 * 133, p727 * 166, p727 * 136, p727 * 169, p727 * 138, p727 * 170);
    v1132.bezierCurveTo(p727 * 133, p727 * 171, p727 * 132, p727 * 172, p727 * 129, p727 * 174);
    v1132.bezierCurveTo(p727 * 122, p727 * 170, p727 * 120, p727 * 170, p727 * 116, p727 * 174);
    v1132.bezierCurveTo(p727 * 108, p727 * 170.5, p727 * 108, p727 * 170.5, p727 * 100, p727 * 167);
    v1132.bezierCurveTo(p727 * 95, p727 * 172, p727 * 94, p727 * 179, p727 * 95, p727 * 184);
    v1132.bezierCurveTo(p727 * 87, p727 * 185, p727 * 87, p727 * 189, p727 * 88, p727 * 194);
    v1132.bezierCurveTo(p727 * 82, p727 * 194, p727 * 81, p727 * 195, p727 * 79, p727 * 197);
    v1132.bezierCurveTo(p727 * 78, p727 * 192, p727 * 78, p727 * 191, p727 * 77, p727 * 189);
    v1132.bezierCurveTo(p727 * 81, p727 * 185, p727 * 82, p727 * 183, p727 * 80, p727 * 176);
    v1132.bezierCurveTo(p727 * 89, p727 * 170, p727 * 92, p727 * 168, p727 * 95, p727 * 163);
    v1132.bezierCurveTo(p727 * 91, p727 * 151, p727 * 88, p727 * 151, p727 * 82, p727 * 147);
    v1132.bezierCurveTo(p727 * 85, p727 * 142, p727 * 85, p727 * 137, p727 * 81, p727 * 133);
    v1132.bezierCurveTo(p727 * 84, p727 * 127, p727 * 84, p727 * 125, p727 * 82, p727 * 124);
    v1132.closePath();
    f90(v1132, p729[4], p729[5], p727 * 4);
    f93(v1132, p727 * 107, p727 * 152, p727 * 9);
    f90(v1132, p729[6]);
    f93(v1132, p727 * 105, p727 * 173, p727 * 9);
    f90(v1132, p729[6]);
    f93(v1132, p727 * 87, p727 * 161, p727 * 9);
    f90(v1132, p729[6]);
    f93(v1132, p727 * 106, p727 * 147, p727 * 4);
    f90(v1132, p729[7]);
    f93(v1132, p727 * 104, p727 * 167, p727 * 4);
    f90(v1132, p729[7]);
    f93(v1132, p727 * 86, p727 * 154, p727 * 4);
    f90(v1132, p729[7]);
    return v1131;
  }
  function f146(p730, p731, p732) {
    var v1133 = document.createElement("canvas");
    var v1134 = v1133.getContext("2d");
    v1133.width = p730 * 248;
    v1133.height = p730 * 128;
    v1134.beginPath();
    v1134.lineCap = "round";
    v1134.lineJoin = "round";
    v1134.moveTo(p730 * 137, p730 * 7);
    v1134.bezierCurveTo(p730 * 169, p730 * 14, p730 * 212, p730 * 9, p730 * 241, p730 * 5);
    v1134.bezierCurveTo(p730 * 211, p730 * 63, p730 * 158, p730 * 92, p730 * 103, p730 * 109);
    v1134.bezierCurveTo(p730 * 73, p730 * 126, p730 * 54, p730 * 124, p730 * 6, p730 * 99);
    v1134.bezierCurveTo(p730 * 82, p730 * 63, p730 * 113, p730 * 35, p730 * 137, p730 * 8);
    v1134.closePath();
    f90(v1134, p732[0], p732[1], p730 * 14);
    v1134.beginPath();
    v1134.lineCap = "round";
    v1134.lineJoin = "round";
    v1134.moveTo(p730 * 73, p730 * 124);
    v1134.bezierCurveTo(p730 * 111, p730 * 126, p730 * 162, p730 * 97, p730 * 203, p730 * 61);
    v1134.bezierCurveTo(p730 * 156, p730 * 98, p730 * 131, p730 * 106, p730 * 105, p730 * 109);
    v1134.bezierCurveTo(p730 * 99, p730 * 121, p730 * 87, p730 * 124, p730 * 72, p730 * 124);
    v1134.closePath();
    f90(v1134, p732[2], p732[3], p730 * 1);
    return v1133;
  }
  function f147(p733, p734, p735) {
    var v1135 = document.createElement("canvas");
    var v1136 = v1135.getContext("2d");
    v1135.width = p733 * 350;
    v1135.height = p733 * 140;
    v1136.translate(p733 * -50, p733 * -150);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 184.5, p733 * 222.0625);
    v1136.bezierCurveTo(p733 * 185.5, p733 * 184.0625, p733 * 302.5, p733 * 171.0625, p733 * 313.5, p733 * 222.0625);
    v1136.bezierCurveTo(p733 * 330.5, p733 * 263.0625, p733 * 181.5, p733 * 274.0625, p733 * 184.5, p733 * 223.0625);
    v1136.closePath();
    f90(v1136, p735[0], p735[1], p733 * 8);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 131.5, p733 * 241.0625);
    v1136.bezierCurveTo(p733 * 144.5, p733 * 278.0625, p733 * 270.5, p733 * 209.0625, p733 * 228.5, p733 * 174.0625);
    v1136.bezierCurveTo(p733 * 196.5, p733 * 147.0625, p733 * 117.5, p733 * 196.0625, p733 * 131.5, p733 * 240.0625);
    v1136.closePath();
    f90(v1136, p735[0], p735[1], p733 * 8);
    f93(v1136, p733 * 270.5, p733 * 225.0625, p733 * 15.811388300841896);
    f90(v1136, p735[2]);
    f93(v1136, p733 * 243.5, p733 * 225.0625, p733 * 6.082762530298219);
    f90(v1136, p735[2]);
    f93(v1136, p733 * 255.5, p733 * 210.0625, p733 * 10.816653826391969);
    f90(v1136, p735[2]);
    f93(v1136, p733 * 167.5, p733 * 215.0625, p733 * 15.297058540778355);
    f90(v1136, p735[2]);
    f93(v1136, p733 * 176.5, p733 * 204.0625, p733 * 7.280109889280518);
    f90(v1136, p735[2]);
    f93(v1136, p733 * 206.5, p733 * 189.0625, p733 * 7.280109889280518);
    f90(v1136, p735[2]);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 151.5, p733 * 212.0625);
    v1136.bezierCurveTo(p733 * 161.5, p733 * 204.0625, p733 * 173.5, p733 * 214.0625, p733 * 158.5, p733 * 221.0625);
    v1136.bezierCurveTo(p733 * 145.5, p733 * 228.0625, p733 * 144.5, p733 * 216.0625, p733 * 151.5, p733 * 212.0625);
    v1136.closePath();
    f90(v1136, p735[3], p735[4], p733 * 4);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 194.5, p733 * 209.0625);
    v1136.bezierCurveTo(p733 * 205.5, p733 * 202.0625, p733 * 215.5, p733 * 207.0625, p733 * 199.5, p733 * 217.0625);
    v1136.bezierCurveTo(p733 * 187.5, p733 * 224.0625, p733 * 182.5, p733 * 217.0625, p733 * 194.5, p733 * 209.0625);
    v1136.closePath();
    f90(v1136, p735[3], p735[4], p733 * 4);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 188.5, p733 * 183.0625);
    v1136.bezierCurveTo(p733 * 201.5, p733 * 176.0625, p733 * 213.5, p733 * 187.0625, p733 * 193.5, p733 * 193.0625);
    v1136.bezierCurveTo(p733 * 185.5, p733 * 194.0625, p733 * 175.5, p733 * 189.0625, p733 * 188.5, p733 * 183.0625);
    v1136.closePath();
    f90(v1136, p735[3], p735[4], p733 * 4);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 261.5, p733 * 202.0625);
    v1136.bezierCurveTo(p733 * 274.5, p733 * 201.0625, p733 * 282.5, p733 * 214.0625, p733 * 261.5, p733 * 215.0625);
    v1136.bezierCurveTo(p733 * 246.5, p733 * 214.0625, p733 * 248.5, p733 * 203.0625, p733 * 261.5, p733 * 202.0625);
    v1136.closePath();
    f90(v1136, p735[3], p735[4], p733 * 4);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p733 * 240.5, p733 * 231.0625);
    v1136.bezierCurveTo(p733 * 255.5, p733 * 231.0625, p733 * 254.5, p733 * 243.0625, p733 * 240.5, p733 * 242.0625);
    v1136.bezierCurveTo(p733 * 225.5, p733 * 239.0625, p733 * 225.5, p733 * 232.0625, p733 * 240.5, p733 * 231.0625);
    v1136.closePath();
    f90(v1136, p735[3], p735[4], p733 * 4);
    return v1135;
  }
  function f148(p736, p737, p738) {
    var v1137 = document.createElement("canvas");
    var v1138 = v1137.getContext("2d");
    var v1139 = p736 * 130;
    var v1140 = p736 * 142;
    var v1141 = v1139 / 2;
    var v1142 = v1140 / 2;
    v1137.width = v1139;
    v1137.height = v1140;
    v1138.translate(v1141, v1142 + p736 * 7);
    v1138.globalAlpha = p737 ? 0.5 : 1;
    f93(v1138, 0, 0, p736 * 60);
    f90(v1138, p738[0]);
    v1138.translate(0, p736 * -7);
    v1138.globalAlpha = 1;
    f93(v1138, 0, 0, p736 * 60);
    f90(v1138, p738[1], p738[2], p736 * 4);
    f93(v1138, 0, 0, p736 * 40);
    f90(v1138, p738[3]);
    f93(v1138, 0, 0, p736 * 25);
    f90(v1138, p738[4], p738[5], p736 * 8);
    return v1137;
  }
  function f149(p739, p740, p741) {
    var v1143 = document.createElement("canvas");
    var v1144 = v1143.getContext("2d");
    v1143.width = p739 * 321;
    v1143.height = p739 * 284;
    v1144.translate(p739 * 100, p739 * 30);
    v1144.translate(p739 * 5, p739 * 10);
    v1144.globalAlpha = p740 ? 0.5 : 1;
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[0]);
    v1144.globalAlpha = 1;
    v1144.translate(p739 * -5, p739 * -10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[1], p741[2], p739 * 10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 167, p739 * 120);
    v1144.bezierCurveTo(p739 * 196, p739 * 106, p739 * 207, p739 * 111, p739 * 199, p739 * 135);
    v1144.bezierCurveTo(p739 * 185, p739 * 172, p739 * 166, p739 * 187, p739 * 145, p739 * 179);
    v1144.bezierCurveTo(p739 * 118, p739 * 166, p739 * 127, p739 * 139, p739 * 166, p739 * 121);
    v1144.closePath();
    f90(v1144, p741[3]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 25, p739 * 64);
    v1144.bezierCurveTo(p739 * 59, p739 * 96, p739 * 97, p739 * 128, p739 * 129, p739 * 151);
    v1144.bezierCurveTo(p739 * 126, p739 * 163, p739 * 134, p739 * 174, p739 * 142, p739 * 180);
    v1144.bezierCurveTo(p739 * 114, p739 * 170, p739 * 68, p739 * 134, p739 * 31, p739 * 85);
    v1144.bezierCurveTo(p739 * 24, p739 * 71, p739 * 24, p739 * 70, p739 * 25, p739 * 65);
    v1144.closePath();
    f90(v1144, p741[2]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 161, p739 * 141);
    v1144.bezierCurveTo(p739 * 181, p739 * 131, p739 * 186, p739 * 135, p739 * 173, p739 * 152);
    v1144.bezierCurveTo(p739 * 163, p739 * 163, p739 * 155, p739 * 161, p739 * 151, p739 * 150);
    v1144.bezierCurveTo(p739 * 147, p739 * 140, p739 * 155, p739 * 131, p739 * 175, p739 * 125);
    v1144.bezierCurveTo(p739 * 190, p739 * 120, p739 * 196, p739 * 121, p739 * 189, p739 * 143);
    v1144.bezierCurveTo(p739 * 182, p739 * 167, p739 * 169, p739 * 174, p739 * 157, p739 * 174);
    v1144.bezierCurveTo(p739 * 138, p739 * 172, p739 * 139, p739 * 162, p739 * 140, p739 * 156);
    f90(v1144, vVVVUndefined822, p741[4], p739 * 4);
    v1144.translate(p739 * -100, p739 * -30);
    v1144.translate(p739 * 10, p739 * 70);
    v1144.translate(p739 * 5, p739 * 10);
    v1144.globalAlpha = p740 ? 0.5 : 1;
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[0]);
    v1144.globalAlpha = 1;
    v1144.translate(p739 * -5, p739 * -10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[1], p741[2], p739 * 10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 167, p739 * 120);
    v1144.bezierCurveTo(p739 * 196, p739 * 106, p739 * 207, p739 * 111, p739 * 199, p739 * 135);
    v1144.bezierCurveTo(p739 * 185, p739 * 172, p739 * 166, p739 * 187, p739 * 145, p739 * 179);
    v1144.bezierCurveTo(p739 * 118, p739 * 166, p739 * 127, p739 * 139, p739 * 166, p739 * 121);
    v1144.closePath();
    f90(v1144, p741[3]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 25, p739 * 64);
    v1144.bezierCurveTo(p739 * 59, p739 * 96, p739 * 97, p739 * 128, p739 * 129, p739 * 151);
    v1144.bezierCurveTo(p739 * 126, p739 * 163, p739 * 134, p739 * 174, p739 * 142, p739 * 180);
    v1144.bezierCurveTo(p739 * 114, p739 * 170, p739 * 68, p739 * 134, p739 * 31, p739 * 85);
    v1144.bezierCurveTo(p739 * 24, p739 * 71, p739 * 24, p739 * 70, p739 * 25, p739 * 65);
    v1144.closePath();
    f90(v1144, p741[2]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 161, p739 * 141);
    v1144.bezierCurveTo(p739 * 181, p739 * 131, p739 * 186, p739 * 135, p739 * 173, p739 * 152);
    v1144.bezierCurveTo(p739 * 163, p739 * 163, p739 * 155, p739 * 161, p739 * 151, p739 * 150);
    v1144.bezierCurveTo(p739 * 147, p739 * 140, p739 * 155, p739 * 131, p739 * 175, p739 * 125);
    v1144.bezierCurveTo(p739 * 190, p739 * 120, p739 * 196, p739 * 121, p739 * 189, p739 * 143);
    v1144.bezierCurveTo(p739 * 182, p739 * 167, p739 * 169, p739 * 174, p739 * 157, p739 * 174);
    v1144.bezierCurveTo(p739 * 138, p739 * 172, p739 * 139, p739 * 162, p739 * 140, p739 * 156);
    f90(v1144, vUndefined, p741[4], p739 * 4);
    v1144.translate(p739 * 20, p739 * -80);
    v1144.translate(p739 * 5, p739 * 10);
    v1144.globalAlpha = p740 ? 0.5 : 1;
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[0]);
    v1144.globalAlpha = 1;
    v1144.translate(p739 * -5, p739 * -10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 58, p739 * 33);
    v1144.bezierCurveTo(p739 * 81, p739 * 22, p739 * 93, p739 * 26, p739 * 123, p739 * 47);
    v1144.bezierCurveTo(p739 * 160, p739 * 73, p739 * 169, p739 * 80, p739 * 191, p739 * 99);
    v1144.bezierCurveTo(p739 * 202, p739 * 107, p739 * 211, p739 * 118, p739 * 195, p739 * 151);
    v1144.bezierCurveTo(p739 * 181, p739 * 183, p739 * 157, p739 * 192, p739 * 129, p739 * 174);
    v1144.bezierCurveTo(p739 * 78, p739 * 140, p739 * 68, p739 * 129, p739 * 37, p739 * 94);
    v1144.bezierCurveTo(p739 * 15, p739 * 68, p739 * 25, p739 * 52, p739 * 56, p739 * 34);
    v1144.closePath();
    f90(v1144, p741[1], p741[2], p739 * 10);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 167, p739 * 120);
    v1144.bezierCurveTo(p739 * 196, p739 * 106, p739 * 207, p739 * 111, p739 * 199, p739 * 135);
    v1144.bezierCurveTo(p739 * 185, p739 * 172, p739 * 166, p739 * 187, p739 * 145, p739 * 179);
    v1144.bezierCurveTo(p739 * 118, p739 * 166, p739 * 127, p739 * 139, p739 * 166, p739 * 121);
    v1144.closePath();
    f90(v1144, p741[3]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 25, p739 * 64);
    v1144.bezierCurveTo(p739 * 59, p739 * 96, p739 * 97, p739 * 128, p739 * 129, p739 * 151);
    v1144.bezierCurveTo(p739 * 126, p739 * 163, p739 * 134, p739 * 174, p739 * 142, p739 * 180);
    v1144.bezierCurveTo(p739 * 114, p739 * 170, p739 * 68, p739 * 134, p739 * 31, p739 * 85);
    v1144.bezierCurveTo(p739 * 24, p739 * 71, p739 * 24, p739 * 70, p739 * 25, p739 * 65);
    v1144.closePath();
    f90(v1144, p741[2]);
    v1144.beginPath();
    v1144.lineCap = "round";
    v1144.lineJoin = "round";
    v1144.moveTo(p739 * 161, p739 * 141);
    v1144.bezierCurveTo(p739 * 181, p739 * 131, p739 * 186, p739 * 135, p739 * 173, p739 * 152);
    v1144.bezierCurveTo(p739 * 163, p739 * 163, p739 * 155, p739 * 161, p739 * 151, p739 * 150);
    v1144.bezierCurveTo(p739 * 147, p739 * 140, p739 * 155, p739 * 131, p739 * 175, p739 * 125);
    v1144.bezierCurveTo(p739 * 190, p739 * 120, p739 * 196, p739 * 121, p739 * 189, p739 * 143);
    v1144.bezierCurveTo(p739 * 182, p739 * 167, p739 * 169, p739 * 174, p739 * 157, p739 * 174);
    v1144.bezierCurveTo(p739 * 138, p739 * 172, p739 * 139, p739 * 162, p739 * 140, p739 * 156);
    f90(v1144, vVVVVVUndefined1322, p741[4], p739 * 4);
    return v1143;
  }
  function f150(p742, p743, p744) {
    var v1145 = document.createElement("canvas");
    var v1146 = v1145.getContext("2d");
    v1145.width = p742 * 104;
    v1145.height = p742 * 112;
    v1146.translate(0, p742 * 15);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p742 * 16, p742 * 44);
    v1146.bezierCurveTo(p742 * 30.5, p742 * 48, p742 * 30.5, p742 * 48, p742 * 45, p742 * 52);
    v1146.bezierCurveTo(p742 * 36.5, p742 * 63, p742 * 36.5, p742 * 63, p742 * 28, p742 * 74);
    v1146.bezierCurveTo(p742 * 32, p742 * 86, p742 * 61, p742 * 92, p742 * 78, p742 * 76);
    v1146.bezierCurveTo(p742 * 93, p742 * 62, p742 * 92, p742 * 40, p742 * 80, p742 * 26);
    v1146.bezierCurveTo(p742 * 65, p742 * 11, p742 * 42, p742 * 16, p742 * 34, p742 * 21);
    v1146.bezierCurveTo(p742 * 22, p742 * 27, p742 * 16, p742 * 39, p742 * 16, p742 * 44);
    v1146.closePath();
    f90(v1146, p744[0]);
    v1146.globalAlpha = 1;
    v1146.translate(0, p742 * -15);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p742 * 16, p742 * 44);
    v1146.bezierCurveTo(p742 * 30.5, p742 * 48, p742 * 30.5, p742 * 48, p742 * 45, p742 * 52);
    v1146.bezierCurveTo(p742 * 36.5, p742 * 63, p742 * 36.5, p742 * 63, p742 * 28, p742 * 74);
    v1146.bezierCurveTo(p742 * 32, p742 * 86, p742 * 61, p742 * 92, p742 * 78, p742 * 76);
    v1146.bezierCurveTo(p742 * 93, p742 * 62, p742 * 92, p742 * 40, p742 * 80, p742 * 26);
    v1146.bezierCurveTo(p742 * 65, p742 * 11, p742 * 42, p742 * 16, p742 * 34, p742 * 21);
    v1146.bezierCurveTo(p742 * 22, p742 * 27, p742 * 16, p742 * 39, p742 * 16, p742 * 44);
    v1146.closePath();
    f90(v1146, p744[1], p744[2], p742 * 8);
    return v1145;
  }
  function f151(p745, p746, p747) {
    var v1147 = document.createElement("canvas");
    var v1148 = v1147.getContext("2d");
    v1147.width = p745 * 373;
    v1147.height = p745 * 314;
    v1148.globalAlpha = p746 ? 0.5 : 1;
    v1148.translate(p745 * 5, p745 * 5);
    v1148.save();
    v1148.translate(p745 * 184.048583984375, p745 * 69.1805419921875);
    f87(v1148, p745 * -40, p745 * -28.5, p745 * 80, p745 * 57, p745 * 10);
    v1148.restore();
    f90(v1148, p747[1], p747[2], p745 * 4);
    v1148.beginPath();
    v1148.lineCap = "round";
    v1148.lineJoin = "round";
    v1148.moveTo(p745 * 185.048583984375, p745 * 61.6805419921875);
    v1148.bezierCurveTo(p745 * 145.048583984375, p745 * 59.6805419921875, p745 * 138.048583984375, p745 * 41.6805419921875, p745 * 148.048583984375, p745 * 33.6805419921875);
    v1148.bezierCurveTo(p745 * 169.048583984375, p745 * 17.6805419921875, p745 * 194.048583984375, p745 * 20.6805419921875, p745 * 210.048583984375, p745 * 27.6805419921875);
    v1148.bezierCurveTo(p745 * 234.048583984375, p745 * 40.6805419921875, p745 * 225.048583984375, p745 * 57.6805419921875, p745 * 186.048583984375, p745 * 61.6805419921875);
    v1148.closePath();
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.beginPath();
    v1148.lineCap = "round";
    v1148.lineJoin = "round";
    v1148.moveTo(p745 * 224.048583984375, p745 * 56.6805419921875);
    v1148.bezierCurveTo(p745 * 326.048583984375, p745 * 69.6805419921875, p745 * 363.048583984375, p745 * 148.6805419921875, p745 * 349.048583984375, p745 * 206.6805419921875);
    v1148.bezierCurveTo(p745 * 329.048583984375, p745 * 278.6805419921875, p745 * 252.048583984375, p745 * 283.6805419921875, p745 * 206.048583984375, p745 * 275.6805419921875);
    v1148.bezierCurveTo(p745 * 206.548583984375, p745 * 266.6805419921875, p745 * 206.548583984375, p745 * 266.6805419921875, p745 * 207.048583984375, p745 * 257.6805419921875);
    v1148.bezierCurveTo(p745 * 276.048583984375, p745 * 268.6805419921875, p745 * 308.048583984375, p745 * 239.6805419921875, p745 * 323.048583984375, p745 * 208.6805419921875);
    v1148.bezierCurveTo(p745 * 352.048583984375, p745 * 145.6805419921875, p745 * 292.048583984375, p745 * 86.6805419921875, p745 * 223.048583984375, p745 * 74.6805419921875);
    v1148.closePath();
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.548583984375, p745 * 119.6805419921875);
    f87(v1148, p745 * -121.5, p745 * -45, p745 * 243, p745 * 90, p745 * 40);
    v1148.restore();
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.048583984375, p745 * 155.6805419921875);
    f87(v1148, p745 * -121, p745 * -52, p745 * 242, p745 * 104, p745 * 40);
    v1148.restore();
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.048583984375, p745 * 205.1805419921875);
    f87(v1148, p745 * -121, p745 * -50.5, p745 * 242, p745 * 101, p745 * 40);
    v1148.restore();
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 185.048583984375, p745 * 204.1805419921875);
    f87(v1148, p745 * -100, p745 * -34.5, p745 * 200, p745 * 69, p745 * 40);
    v1148.restore();
    f90(v1148, p747[0], p747[0], p745 * 6);
    f93(v1148, p745 * 185.048583984375, p745 * 257.6805419921875, p745 * 27.018512172212592);
    f90(v1148, p747[0], p747[0], p745 * 6);
    v1148.globalAlpha = 1;
    v1148.translate(p745 * -5, p745 * -5);
    v1148.beginPath();
    v1148.lineCap = "round";
    v1148.lineJoin = "round";
    v1148.moveTo(p745 * 224.048583984375, p745 * 56.6805419921875);
    v1148.bezierCurveTo(p745 * 326.048583984375, p745 * 69.6805419921875, p745 * 363.048583984375, p745 * 148.6805419921875, p745 * 349.048583984375, p745 * 206.6805419921875);
    v1148.bezierCurveTo(p745 * 329.048583984375, p745 * 278.6805419921875, p745 * 252.048583984375, p745 * 283.6805419921875, p745 * 206.048583984375, p745 * 275.6805419921875);
    v1148.bezierCurveTo(p745 * 206.548583984375, p745 * 266.6805419921875, p745 * 206.548583984375, p745 * 266.6805419921875, p745 * 207.048583984375, p745 * 257.6805419921875);
    v1148.bezierCurveTo(p745 * 276.048583984375, p745 * 268.6805419921875, p745 * 308.048583984375, p745 * 239.6805419921875, p745 * 323.048583984375, p745 * 208.6805419921875);
    v1148.bezierCurveTo(p745 * 352.048583984375, p745 * 145.6805419921875, p745 * 292.048583984375, p745 * 86.6805419921875, p745 * 223.048583984375, p745 * 74.6805419921875);
    v1148.closePath();
    f90(v1148, p747[3], p747[4], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 184.048583984375, p745 * 69.1805419921875);
    f87(v1148, p745 * -40, p745 * -28.5, p745 * 80, p745 * 57, p745 * 10);
    v1148.restore();
    f90(v1148, p747[1], p747[2], p745 * 4);
    v1148.beginPath();
    v1148.lineCap = "round";
    v1148.lineJoin = "round";
    v1148.moveTo(p745 * 185.048583984375, p745 * 61.6805419921875);
    v1148.bezierCurveTo(p745 * 145.048583984375, p745 * 59.6805419921875, p745 * 138.048583984375, p745 * 41.6805419921875, p745 * 148.048583984375, p745 * 33.6805419921875);
    v1148.bezierCurveTo(p745 * 169.048583984375, p745 * 17.6805419921875, p745 * 194.048583984375, p745 * 20.6805419921875, p745 * 210.048583984375, p745 * 27.6805419921875);
    v1148.bezierCurveTo(p745 * 234.048583984375, p745 * 40.6805419921875, p745 * 225.048583984375, p745 * 57.6805419921875, p745 * 186.048583984375, p745 * 61.6805419921875);
    v1148.closePath();
    f90(v1148, p747[1], p747[2], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.548583984375, p745 * 119.6805419921875);
    f87(v1148, p745 * -121.5, p745 * -45, p745 * 243, p745 * 90, p745 * 40);
    v1148.restore();
    f90(v1148, p747[5], p747[4], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.048583984375, p745 * 155.6805419921875);
    f87(v1148, p745 * -121, p745 * -52, p745 * 242, p745 * 104, p745 * 40);
    v1148.restore();
    f90(v1148, p747[3], p747[4], p745 * 6);
    v1148.save();
    v1148.translate(p745 * 183.048583984375, p745 * 205.1805419921875);
    f87(v1148, p745 * -121, p745 * -50.5, p745 * 242, p745 * 101, p745 * 40);
    v1148.restore();
    f90(v1148, p747[6], p747[4], p745 * 6);
    v1148.globalCompositeOperation = "destination-out";
    v1148.save();
    v1148.translate(p745 * 185.048583984375, p745 * 204.1805419921875);
    f87(v1148, p745 * -100, p745 * -34.5, p745 * 200, p745 * 69, p745 * 40);
    v1148.restore();
    f90(v1148, p747[7], p747[8], p745 * 6);
    v1148.globalCompositeOperation = "source-over";
    v1148.globalAlpha = 0.5;
    v1148.save();
    v1148.translate(p745 * 185.048583984375, p745 * 204.1805419921875);
    f87(v1148, p745 * -100, p745 * -34.5, p745 * 200, p745 * 69, p745 * 40);
    v1148.restore();
    f90(v1148, p747[7], p747[8], p745 * 6);
    v1148.globalAlpha = 1;
    v1148.save();
    f93(v1148, p745 * 185.048583984375, p745 * 257.6805419921875, p745 * 27.018512172212592);
    f90(v1148, p747[3], p747[4], p745 * 6);
    v1148.restore();
    return v1147;
  }
  function f152(p748, p749, p750) {
    var v1149 = document.createElement("canvas");
    var v1150 = v1149.getContext("2d");
    v1149.width = p748 * 290;
    v1149.height = p748 * 525;
    v1150.globalAlpha = p749 ? 0.5 : 1;
    v1150.translate(p748 * 20, p748 * 20);
    v1150.translate(p748 * -20, p748 * -20);
    v1150.save();
    v1150.translate(p748 * 132, p748 * 423);
    v1150.rotate(0.16);
    f87(v1150, p748 * -14, p748 * -61, p748 * 28, p748 * 122, p748 * 10);
    v1150.restore();
    f90(v1150, p750[0]);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 100, p748 * 344);
    v1150.bezierCurveTo(p748 * 123, p748 * 214, p748 * 123, p748 * 214, p748 * 146, p748 * 84);
    v1150.bezierCurveTo(p748 * 166.5, p748 * 65, p748 * 166.5, p748 * 65, p748 * 187, p748 * 46);
    v1150.bezierCurveTo(p748 * 201, p748 * 71, p748 * 201, p748 * 71, p748 * 215, p748 * 96);
    v1150.bezierCurveTo(p748 * 199.5, p748 * 226.5, p748 * 199.5, p748 * 226.5, p748 * 184, p748 * 357);
    v1150.bezierCurveTo(p748 * 162.5, p748 * 362.5, p748 * 162.5, p748 * 362.5, p748 * 141, p748 * 368);
    v1150.closePath();
    f90(v1150, p750[0]);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 75, p748 * 328);
    v1150.bezierCurveTo(p748 * 88, p748 * 336.5, p748 * 88, p748 * 336.5, p748 * 101, p748 * 345);
    v1150.bezierCurveTo(p748 * 123.5, p748 * 337.5, p748 * 123.5, p748 * 337.5, p748 * 146, p748 * 330);
    v1150.bezierCurveTo(p748 * 165, p748 * 343.5, p748 * 165, p748 * 343.5, p748 * 184, p748 * 357);
    v1150.bezierCurveTo(p748 * 198.5, p748 * 353, p748 * 198.5, p748 * 353, p748 * 213, p748 * 349);
    v1150.bezierCurveTo(p748 * 200.5, p748 * 364.5, p748 * 200.5, p748 * 364.5, p748 * 188, p748 * 380);
    v1150.bezierCurveTo(p748 * 163, p748 * 380.5, p748 * 163, p748 * 380.5, p748 * 138, p748 * 381);
    v1150.bezierCurveTo(p748 * 112, p748 * 373.5, p748 * 112, p748 * 373.5, p748 * 86, p748 * 366);
    v1150.closePath();
    f90(v1150, p750[0]);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 121, p748 * 332);
    v1150.bezierCurveTo(p748 * 133.5, p748 * 327.5, p748 * 133.5, p748 * 327.5, p748 * 146, p748 * 323);
    v1150.bezierCurveTo(p748 * 157, p748 * 330.5, p748 * 157, p748 * 330.5, p748 * 168, p748 * 338);
    v1150.bezierCurveTo(p748 * 182.5, p748 * 219.5, p748 * 182.5, p748 * 219.5, p748 * 197, p748 * 101);
    v1150.bezierCurveTo(p748 * 190, p748 * 84.5, p748 * 190, p748 * 84.5, p748 * 183, p748 * 68);
    v1150.bezierCurveTo(p748 * 172.5, p748 * 81, p748 * 172.5, p748 * 81, p748 * 162, p748 * 94);
    v1150.closePath();
    f90(v1150, p750[0]);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 105, p748 * 463);
    v1150.bezierCurveTo(p748 * 124.5, p748 * 466, p748 * 124.5, p748 * 466, p748 * 144, p748 * 469);
    v1150.bezierCurveTo(p748 * 145.5, p748 * 478.5, p748 * 145.5, p748 * 478.5, p748 * 147, p748 * 488);
    v1150.bezierCurveTo(p748 * 133.5, p748 * 495.5, p748 * 133.5, p748 * 495.5, p748 * 120, p748 * 503);
    v1150.bezierCurveTo(p748 * 108.5, p748 * 492, p748 * 108.5, p748 * 492, p748 * 97, p748 * 481);
    v1150.closePath();
    f90(v1150, p750[0]);
    v1150.globalAlpha = 1;
    v1150.translate(p748 * -20, p748 * -20);
    v1150.save();
    v1150.translate(p748 * 132, p748 * 423);
    v1150.rotate(0.16);
    f87(v1150, p748 * -14, p748 * -61, p748 * 28, p748 * 122, p748 * 10);
    v1150.restore();
    f90(v1150, p750[4], p750[5], p748 * 12.5);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 100, p748 * 344);
    v1150.bezierCurveTo(p748 * 123, p748 * 214, p748 * 123, p748 * 214, p748 * 146, p748 * 84);
    v1150.bezierCurveTo(p748 * 166.5, p748 * 65, p748 * 166.5, p748 * 65, p748 * 187, p748 * 46);
    v1150.bezierCurveTo(p748 * 201, p748 * 71, p748 * 201, p748 * 71, p748 * 215, p748 * 96);
    v1150.bezierCurveTo(p748 * 199.5, p748 * 226.5, p748 * 199.5, p748 * 226.5, p748 * 184, p748 * 357);
    v1150.bezierCurveTo(p748 * 162.5, p748 * 362.5, p748 * 162.5, p748 * 362.5, p748 * 141, p748 * 368);
    v1150.closePath();
    f90(v1150, p750[1], p750[2], p748 * 12.5);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 75, p748 * 328);
    v1150.bezierCurveTo(p748 * 88, p748 * 336.5, p748 * 88, p748 * 336.5, p748 * 101, p748 * 345);
    v1150.bezierCurveTo(p748 * 123.5, p748 * 337.5, p748 * 123.5, p748 * 337.5, p748 * 146, p748 * 330);
    v1150.bezierCurveTo(p748 * 165, p748 * 343.5, p748 * 165, p748 * 343.5, p748 * 184, p748 * 357);
    v1150.bezierCurveTo(p748 * 198.5, p748 * 353, p748 * 198.5, p748 * 353, p748 * 213, p748 * 349);
    v1150.bezierCurveTo(p748 * 200.5, p748 * 364.5, p748 * 200.5, p748 * 364.5, p748 * 188, p748 * 380);
    v1150.bezierCurveTo(p748 * 163, p748 * 380.5, p748 * 163, p748 * 380.5, p748 * 138, p748 * 381);
    v1150.bezierCurveTo(p748 * 112, p748 * 373.5, p748 * 112, p748 * 373.5, p748 * 86, p748 * 366);
    v1150.closePath();
    f90(v1150, p750[1], p750[2], p748 * 12.5);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 121, p748 * 332);
    v1150.bezierCurveTo(p748 * 133.5, p748 * 327.5, p748 * 133.5, p748 * 327.5, p748 * 146, p748 * 323);
    v1150.bezierCurveTo(p748 * 157, p748 * 330.5, p748 * 157, p748 * 330.5, p748 * 168, p748 * 338);
    v1150.bezierCurveTo(p748 * 182.5, p748 * 219.5, p748 * 182.5, p748 * 219.5, p748 * 197, p748 * 101);
    v1150.bezierCurveTo(p748 * 190, p748 * 84.5, p748 * 190, p748 * 84.5, p748 * 183, p748 * 68);
    v1150.bezierCurveTo(p748 * 172.5, p748 * 81, p748 * 172.5, p748 * 81, p748 * 162, p748 * 94);
    v1150.closePath();
    f90(v1150, p750[3]);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 105, p748 * 463);
    v1150.bezierCurveTo(p748 * 124.5, p748 * 466, p748 * 124.5, p748 * 466, p748 * 144, p748 * 469);
    v1150.bezierCurveTo(p748 * 145.5, p748 * 478.5, p748 * 145.5, p748 * 478.5, p748 * 147, p748 * 488);
    v1150.bezierCurveTo(p748 * 133.5, p748 * 495.5, p748 * 133.5, p748 * 495.5, p748 * 120, p748 * 503);
    v1150.bezierCurveTo(p748 * 108.5, p748 * 492, p748 * 108.5, p748 * 492, p748 * 97, p748 * 481);
    v1150.closePath();
    f90(v1150, p750[1], p750[2], p748 * 12.5);
    v1150.globalAlpha = 1;
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p748 * 143, p748 * 346);
    v1150.bezierCurveTo(p748 * 125, p748 * 352, p748 * 125, p748 * 352, p748 * 107, p748 * 358);
    v1150.bezierCurveTo(p748 * 124, p748 * 363, p748 * 140, p748 * 368, p748 * 141, p748 * 368);
    v1150.bezierCurveTo(p748 * 156.5, p748 * 367, p748 * 156.5, p748 * 367, p748 * 172, p748 * 366);
    v1150.closePath();
    f90(v1150, p750[3]);
    return v1149;
  }
  function f153(p751, p752, p753, p754) {
    var v1151 = document.createElement("canvas");
    var v1152 = v1151.getContext("2d");
    var v1153 = p751 * 220;
    var v1154 = p751 * 220;
    var v1155 = p751 * 100;
    var v1156 = v1155 / 4;
    v1151.width = v1153;
    v1151.height = v1154;
    v1152.translate(v1153 / 2, v1154 / 2);
    v1152.globalAlpha = p752 ? 0.5 : 1;
    if (!p752) {
      v1152.translate(p751 * 0, p751 * -8);
    }
    f88(v1152, 7, v1155, v1156);
    f90(v1152, p752 ? p753[0] : p753[1]);
    v1152.globalAlpha = 1;
    if (p754 == 0) {
      f88(v1152, 6, v1155 * 0.65, v1156 * 0.65);
      f90(v1152, p753[2]);
    } else if (p754 == 1) {
      v1152.translate(p751 * 20, p751 * 20);
      f88(v1152, 6, v1155 * 0.45, v1156 * 0.4);
      f90(v1152, p753[2]);
    }
    return v1151;
  }
  function f171(p755, p756) {
    var v1157 = document.createElement("canvas");
    var v1158 = v1157.getContext("2d");
    v1157.width = p755 * 234;
    v1157.height = p755 * 183;
    v1158.beginPath();
    v1158.lineCap = "round";
    v1158.lineJoin = "round";
    v1158.moveTo(p755 * 76, p755 * 25);
    v1158.bezierCurveTo(p755 * 150, p755 * 3, p755 * 181, p755 * 22, p755 * 203, p755 * 41);
    v1158.bezierCurveTo(p755 * 225, p755 * 63, p755 * 225, p755 * 105, p755 * 198, p755 * 133);
    v1158.bezierCurveTo(p755 * 179, p755 * 157, p755 * 134, p755 * 178, p755 * 81, p755 * 164);
    v1158.bezierCurveTo(p755 * 19, p755 * 148, p755 * 6, p755 * 95, p755 * 21, p755 * 66);
    v1158.bezierCurveTo(p755 * 34, p755 * 39, p755 * 52, p755 * 33, p755 * 75, p755 * 25);
    v1158.closePath();
    f90(v1158, p756[0], p756[0], p755 * 4);
    return v1157;
  }
  function f155(p757, p758, p759) {
    var v1159 = document.createElement("canvas");
    var v1160 = v1159.getContext("2d");
    var v1161 = p757 * 140;
    var v1162 = p757 * 150;
    var v1163 = p757 * 10;
    var v1164 = p757 * 4;
    v1159.width = v1161;
    v1159.height = v1162;
    v1160.translate(p757 * -50, p757 * -38 + v1163);
    v1160.globalAlpha = p758 ? 0.5 : 1;
    v1160.beginPath();
    v1160.bezierCurveTo(p757 * 160, p757 * 65, p757 * 160, p757 * 85, p757 * 152, p757 * 95);
    v1160.bezierCurveTo(p757 * 152, p757 * 95, p757 * 173, p757 * 94, p757 * 187, p757 * 102);
    v1160.bezierCurveTo(p757 * 187, p757 * 102, p757 * 180, p757 * 120, p757 * 155, p757 * 126);
    v1160.bezierCurveTo(p757 * 154, p757 * 126, p757 * 166, p757 * 138, p757 * 169, p757 * 148);
    v1160.bezierCurveTo(p757 * 169, p757 * 148, p757 * 148, p757 * 152, p757 * 133, p757 * 140);
    v1160.bezierCurveTo(p757 * 133, p757 * 140, p757 * 134, p757 * 160, p757 * 122, p757 * 175);
    v1160.bezierCurveTo(p757 * 122, p757 * 175, p757 * 107, p757 * 162, p757 * 107, p757 * 144);
    v1160.bezierCurveTo(p757 * 107, p757 * 144, p757 * 98, p757 * 164, p757 * 73, p757 * 167);
    v1160.bezierCurveTo(p757 * 73, p757 * 167, p757 * 72, p757 * 134, p757 * 90, p757 * 127);
    v1160.bezierCurveTo(p757 * 90, p757 * 127, p757 * 70, p757 * 134, p757 * 55, p757 * 123);
    v1160.bezierCurveTo(p757 * 55, p757 * 123, p757 * 58, p757 * 115, p757 * 75, p757 * 104);
    v1160.bezierCurveTo(p757 * 75, p757 * 104, p757 * 66, p757 * 96, p757 * 61, p757 * 77);
    v1160.bezierCurveTo(p757 * 61, p757 * 77, p757 * 83, p757 * 74, p757 * 102, p757 * 89);
    v1160.bezierCurveTo(p757 * 102, p757 * 89, p757 * 92, p757 * 66, p757 * 110, p757 * 41);
    v1160.bezierCurveTo(p757 * 111, p757 * 40, p757 * 130, p757 * 54, p757 * 130, p757 * 82);
    v1160.bezierCurveTo(p757 * 130, p757 * 82, p757 * 143, p757 * 67, p757 * 159, p757 * 65);
    v1160.closePath();
    f90(v1160, p759[0]);
    v1160.translate(0, 0 - v1163);
    v1160.globalAlpha = 1;
    v1160.beginPath();
    v1160.bezierCurveTo(p757 * 160, p757 * 65, p757 * 160, p757 * 85, p757 * 152, p757 * 95);
    v1160.bezierCurveTo(p757 * 152, p757 * 95, p757 * 173, p757 * 94, p757 * 187, p757 * 102);
    v1160.bezierCurveTo(p757 * 187, p757 * 102, p757 * 180, p757 * 120, p757 * 155, p757 * 126);
    v1160.bezierCurveTo(p757 * 154, p757 * 126, p757 * 166, p757 * 138, p757 * 169, p757 * 148);
    v1160.bezierCurveTo(p757 * 169, p757 * 148, p757 * 148, p757 * 152, p757 * 133, p757 * 140);
    v1160.bezierCurveTo(p757 * 133, p757 * 140, p757 * 134, p757 * 160, p757 * 122, p757 * 175);
    v1160.bezierCurveTo(p757 * 122, p757 * 175, p757 * 107, p757 * 162, p757 * 107, p757 * 144);
    v1160.bezierCurveTo(p757 * 107, p757 * 144, p757 * 98, p757 * 164, p757 * 73, p757 * 167);
    v1160.bezierCurveTo(p757 * 73, p757 * 167, p757 * 72, p757 * 134, p757 * 90, p757 * 127);
    v1160.bezierCurveTo(p757 * 90, p757 * 127, p757 * 70, p757 * 134, p757 * 55, p757 * 123);
    v1160.bezierCurveTo(p757 * 55, p757 * 123, p757 * 58, p757 * 115, p757 * 75, p757 * 104);
    v1160.bezierCurveTo(p757 * 75, p757 * 104, p757 * 66, p757 * 96, p757 * 61, p757 * 77);
    v1160.bezierCurveTo(p757 * 61, p757 * 77, p757 * 83, p757 * 74, p757 * 102, p757 * 89);
    v1160.bezierCurveTo(p757 * 102, p757 * 89, p757 * 92, p757 * 66, p757 * 110, p757 * 41);
    v1160.bezierCurveTo(p757 * 111, p757 * 40, p757 * 130, p757 * 54, p757 * 130, p757 * 82);
    v1160.bezierCurveTo(p757 * 130, p757 * 82, p757 * 143, p757 * 67, p757 * 159, p757 * 65);
    v1160.closePath();
    f90(v1160, p759[1], p759[2], v1164);
    return v1159;
  }
  function f156(p760, p761, p762) {
    var v1165 = document.createElement("canvas");
    var v1166 = v1165.getContext("2d");
    v1165.width = p760 * 131;
    v1165.height = p760 * 121;
    v1166.translate(0, p760 * 20);
    v1166.beginPath();
    v1166.lineCap = "round";
    v1166.lineJoin = "round";
    v1166.moveTo(p760 * 110, p760 * 59);
    v1166.bezierCurveTo(p760 * 93, p760 * 61.5, p760 * 93, p760 * 61.5, p760 * 76, p760 * 64);
    v1166.bezierCurveTo(p760 * 84.5, p760 * 78.5, p760 * 84.5, p760 * 78.5, p760 * 93, p760 * 93);
    v1166.bezierCurveTo(p760 * 70, p760 * 111, p760 * 43, p760 * 103, p760 * 30, p760 * 82);
    v1166.bezierCurveTo(p760 * 17, p760 * 61, p760 * 25, p760 * 30, p760 * 51, p760 * 21);
    v1166.bezierCurveTo(p760 * 66, p760 * 15, p760 * 83, p760 * 18, p760 * 96, p760 * 29);
    v1166.bezierCurveTo(p760 * 104, p760 * 35, p760 * 109, p760 * 47, p760 * 110, p760 * 58);
    v1166.closePath();
    f90(v1166, p762[0]);
    v1166.globalAlpha = 1;
    v1166.translate(0, p760 * -20);
    v1166.beginPath();
    v1166.lineCap = "round";
    v1166.lineJoin = "round";
    v1166.moveTo(p760 * 110, p760 * 59);
    v1166.bezierCurveTo(p760 * 93, p760 * 61.5, p760 * 93, p760 * 61.5, p760 * 76, p760 * 64);
    v1166.bezierCurveTo(p760 * 84.5, p760 * 78.5, p760 * 84.5, p760 * 78.5, p760 * 93, p760 * 93);
    v1166.bezierCurveTo(p760 * 70, p760 * 111, p760 * 43, p760 * 103, p760 * 30, p760 * 82);
    v1166.bezierCurveTo(p760 * 17, p760 * 61, p760 * 25, p760 * 30, p760 * 51, p760 * 21);
    v1166.bezierCurveTo(p760 * 66, p760 * 15, p760 * 83, p760 * 18, p760 * 96, p760 * 29);
    v1166.bezierCurveTo(p760 * 104, p760 * 35, p760 * 109, p760 * 47, p760 * 110, p760 * 58);
    v1166.closePath();
    f90(v1166, p762[1], p762[2], p760 * 10);
    return v1165;
  }
  function f157(p763, p764, p765) {
    var v1167 = document.createElement("canvas");
    var v1168 = v1167.getContext("2d");
    v1167.width = p763 * 118;
    v1167.height = p763 * 114;
    v1168.translate(0, p763 * 10);
    f93(v1168, p763 * 42, p763 * 43, p763 * 24.758836806279895);
    f90(v1168, p765[0]);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 65, p763 * 90);
    v1168.bezierCurveTo(p763 * 72, p763 * 91, p763 * 75, p763 * 92, p763 * 71, p763 * 96);
    v1168.bezierCurveTo(p763 * 65, p763 * 98, p763 * 65, p763 * 94, p763 * 65, p763 * 91);
    v1168.closePath();
    f90(v1168, p765[0]);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 87, p763 * 45);
    v1168.bezierCurveTo(p763 * 108, p763 * 59, p763 * 100, p763 * 86, p763 * 85, p763 * 91);
    v1168.bezierCurveTo(p763 * 80, p763 * 96, p763 * 68, p763 * 95, p763 * 58, p763 * 87);
    v1168.bezierCurveTo(p763 * 53, p763 * 80, p763 * 61, p763 * 64, p763 * 66, p763 * 58);
    v1168.bezierCurveTo(p763 * 73, p763 * 48, p763 * 78, p763 * 44, p763 * 87, p763 * 45);
    v1168.closePath();
    f90(v1168, p765[0]);
    v1168.translate(0, p763 * -10);
    f93(v1168, p763 * 42, p763 * 43, p763 * 24.758836806279895);
    f90(v1168, p765[1], p765[2], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 65, p763 * 90);
    v1168.bezierCurveTo(p763 * 72, p763 * 91, p763 * 75, p763 * 92, p763 * 71, p763 * 96);
    v1168.bezierCurveTo(p763 * 65, p763 * 98, p763 * 65, p763 * 94, p763 * 65, p763 * 91);
    v1168.closePath();
    f90(v1168, p765[1], p765[2], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 87, p763 * 45);
    v1168.bezierCurveTo(p763 * 108, p763 * 59, p763 * 100, p763 * 86, p763 * 85, p763 * 91);
    v1168.bezierCurveTo(p763 * 80, p763 * 96, p763 * 68, p763 * 95, p763 * 58, p763 * 87);
    v1168.bezierCurveTo(p763 * 53, p763 * 80, p763 * 61, p763 * 64, p763 * 66, p763 * 58);
    v1168.bezierCurveTo(p763 * 73, p763 * 48, p763 * 78, p763 * 44, p763 * 87, p763 * 45);
    v1168.closePath();
    f90(v1168, p765[1], p765[2], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 52, p763 * 16);
    v1168.bezierCurveTo(p763 * 55, p763 * 19, p763 * 54, p763 * 20, p763 * 55, p763 * 22);
    v1168.bezierCurveTo(p763 * 52, p763 * 24.5, p763 * 52, p763 * 24.5, p763 * 49, p763 * 27);
    v1168.bezierCurveTo(p763 * 45, p763 * 25, p763 * 45, p763 * 25, p763 * 41, p763 * 23);
    v1168.bezierCurveTo(p763 * 45, p763 * 19, p763 * 48, p763 * 16, p763 * 52, p763 * 16);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 62, p763 * 30);
    v1168.bezierCurveTo(p763 * 66, p763 * 29, p763 * 64, p763 * 30, p763 * 66, p763 * 30);
    v1168.bezierCurveTo(p763 * 67, p763 * 31, p763 * 67, p763 * 31, p763 * 68, p763 * 32);
    v1168.bezierCurveTo(p763 * 66.5, p763 * 33.5, p763 * 66.5, p763 * 33.5, p763 * 65, p763 * 35);
    v1168.bezierCurveTo(p763 * 63.5, p763 * 32.5, p763 * 63.5, p763 * 32.5, p763 * 62, p763 * 30);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 29, p763 * 21);
    v1168.bezierCurveTo(p763 * 31, p763 * 22, p763 * 31, p763 * 26, p763 * 29, p763 * 29);
    v1168.bezierCurveTo(p763 * 26, p763 * 28.5, p763 * 26, p763 * 28.5, p763 * 23, p763 * 28);
    v1168.bezierCurveTo(p763 * 23, p763 * 26.5, p763 * 23, p763 * 26.5, p763 * 23, p763 * 25);
    v1168.bezierCurveTo(p763 * 25, p763 * 23, p763 * 25, p763 * 23, p763 * 27, p763 * 21);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 18, p763 * 36);
    v1168.bezierCurveTo(p763 * 23, p763 * 36, p763 * 24, p763 * 42, p763 * 19, p763 * 46);
    v1168.bezierCurveTo(p763 * 12, p763 * 39, p763 * 15, p763 * 38, p763 * 18, p763 * 37);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 30, p763 * 34);
    v1168.bezierCurveTo(p763 * 35, p763 * 36, p763 * 36, p763 * 39, p763 * 32, p763 * 45);
    v1168.bezierCurveTo(p763 * 25, p763 * 46, p763 * 25, p763 * 44, p763 * 30, p763 * 34);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 59, p763 * 35);
    v1168.bezierCurveTo(p763 * 58, p763 * 27, p763 * 57, p763 * 27, p763 * 52, p763 * 31);
    v1168.bezierCurveTo(p763 * 50, p763 * 36, p763 * 53, p763 * 38, p763 * 58, p763 * 36);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 63, p763 * 46);
    v1168.bezierCurveTo(p763 * 64.5, p763 * 46.5, p763 * 64.5, p763 * 46.5, p763 * 66, p763 * 47);
    v1168.bezierCurveTo(p763 * 70, p763 * 50, p763 * 70, p763 * 53, p763 * 61, p763 * 55);
    v1168.bezierCurveTo(p763 * 62, p763 * 50.5, p763 * 62, p763 * 50.5, p763 * 63, p763 * 46);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 41, p763 * 42);
    v1168.bezierCurveTo(p763 * 47, p763 * 41, p763 * 53, p763 * 47, p763 * 46, p763 * 51);
    v1168.bezierCurveTo(p763 * 38, p763 * 49, p763 * 39, p763 * 46, p763 * 41, p763 * 43);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 44, p763 * 57);
    v1168.bezierCurveTo(p763 * 54, p763 * 57, p763 * 54, p763 * 58, p763 * 55, p763 * 61);
    v1168.bezierCurveTo(p763 * 54, p763 * 63, p763 * 52, p763 * 64, p763 * 48, p763 * 65);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 20, p763 * 52);
    v1168.bezierCurveTo(p763 * 25, p763 * 51, p763 * 27, p763 * 50, p763 * 28, p763 * 54);
    v1168.bezierCurveTo(p763 * 27, p763 * 58, p763 * 24, p763 * 58, p763 * 22, p763 * 58);
    v1168.bezierCurveTo(p763 * 21, p763 * 55.5, p763 * 21, p763 * 55.5, p763 * 20, p763 * 53);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 30, p763 * 61);
    v1168.bezierCurveTo(p763 * 37, p763 * 61, p763 * 39, p763 * 63, p763 * 39, p763 * 68);
    v1168.bezierCurveTo(p763 * 36, p763 * 68.5, p763 * 36, p763 * 68.5, p763 * 33, p763 * 69);
    v1168.bezierCurveTo(p763 * 30.5, p763 * 67.5, p763 * 30.5, p763 * 67.5, p763 * 28, p763 * 66);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 88, p763 * 45);
    v1168.bezierCurveTo(p763 * 90, p763 * 46.5, p763 * 90, p763 * 46.5, p763 * 92, p763 * 48);
    v1168.bezierCurveTo(p763 * 92, p763 * 50, p763 * 92, p763 * 50, p763 * 92, p763 * 52);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 96, p763 * 53);
    v1168.bezierCurveTo(p763 * 97.5, p763 * 55, p763 * 97.5, p763 * 55, p763 * 99, p763 * 57);
    v1168.bezierCurveTo(p763 * 97.5, p763 * 59.5, p763 * 97.5, p763 * 59.5, p763 * 96, p763 * 62);
    v1168.bezierCurveTo(p763 * 93.5, p763 * 60.5, p763 * 93.5, p763 * 60.5, p763 * 91, p763 * 59);
    v1168.bezierCurveTo(p763 * 91.5, p763 * 57, p763 * 91.5, p763 * 57, p763 * 92, p763 * 55);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 92, p763 * 71);
    v1168.bezierCurveTo(p763 * 94.5, p763 * 70.5, p763 * 94.5, p763 * 70.5, p763 * 97, p763 * 70);
    v1168.bezierCurveTo(p763 * 98.5, p763 * 72.5, p763 * 98.5, p763 * 72.5, p763 * 100, p763 * 75);
    v1168.bezierCurveTo(p763 * 97, p763 * 76.5, p763 * 97, p763 * 76.5, p763 * 94, p763 * 78);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 95, p763 * 82);
    v1168.bezierCurveTo(p763 * 96, p763 * 83, p763 * 96, p763 * 83, p763 * 97, p763 * 84);
    v1168.bezierCurveTo(p763 * 97, p763 * 85.5, p763 * 97, p763 * 85.5, p763 * 97, p763 * 87);
    v1168.bezierCurveTo(p763 * 93.5, p763 * 87.5, p763 * 93.5, p763 * 87.5, p763 * 90, p763 * 88);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 86, p763 * 72);
    v1168.bezierCurveTo(p763 * 89, p763 * 76, p763 * 88, p763 * 81, p763 * 85, p763 * 82);
    v1168.bezierCurveTo(p763 * 80, p763 * 80, p763 * 82, p763 * 78, p763 * 85, p763 * 72);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 80, p763 * 86);
    v1168.bezierCurveTo(p763 * 84, p763 * 88, p763 * 86, p763 * 88, p763 * 85, p763 * 93);
    v1168.bezierCurveTo(p763 * 80, p763 * 96, p763 * 79, p763 * 96, p763 * 76, p763 * 91);
    v1168.closePath();
    f90(v1168, p765[3], p765[4], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 84, p763 * 46);
    v1168.bezierCurveTo(p763 * 93, p763 * 51, p763 * 91, p763 * 62, p763 * 80, p763 * 78);
    v1168.bezierCurveTo(p763 * 74, p763 * 86, p763 * 66, p763 * 90, p763 * 60, p763 * 86);
    v1168.bezierCurveTo(p763 * 55, p763 * 79, p763 * 57, p763 * 73, p763 * 67, p763 * 57);
    v1168.bezierCurveTo(p763 * 71, p763 * 51, p763 * 79, p763 * 44, p763 * 84, p763 * 46);
    v1168.closePath();
    f90(v1168, p765[5], p765[6], p763 * 5);
    v1168.beginPath();
    v1168.lineCap = "round";
    v1168.lineJoin = "round";
    v1168.moveTo(p763 * 76, p763 * 60);
    v1168.bezierCurveTo(p763 * 80, p763 * 66, p763 * 75, p763 * 74, p763 * 68, p763 * 74);
    v1168.bezierCurveTo(p763 * 60, p763 * 64, p763 * 68, p763 * 59, p763 * 76, p763 * 59);
    v1168.closePath();
    f90(v1168, p765[7], p765[8], p763 * 5);
    return v1167;
  }
  function f158(p766, p767, p768) {
    var v1169 = document.createElement("canvas");
    var v1170 = v1169.getContext("2d");
    v1169.width = p766 * 424;
    v1169.height = p766 * 788;
    v1170.translate(p766 * 25, p766 * 25);
    v1170.globalAlpha = p767 ? 0.5 : 1;
    v1170.save();
    v1170.translate(p766 * 193.5, p766 * 602.5);
    v1170.rotate(-0.12);
    f87(v1170, p766 * -26.5, p766 * -97.5, p766 * 53, p766 * 195, p766 * 25);
    v1170.restore();
    f90(v1170, p768[0]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 137, p766 * 519);
    v1170.bezierCurveTo(p766 * 182, p766 * 513, p766 * 182, p766 * 513, p766 * 227, p766 * 507);
    v1170.bezierCurveTo(p766 * 214, p766 * 417, p766 * 189, p766 * 304, p766 * 221, p766 * 180);
    v1170.bezierCurveTo(p766 * 191, p766 * 126, p766 * 192, p766 * 105, p766 * 198, p766 * 64);
    v1170.bezierCurveTo(p766 * 123, p766 * 102, p766 * 99, p766 * 285, p766 * 137, p766 * 517);
    v1170.closePath();
    f90(v1170, p768[0]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 175, p766 * 119);
    v1170.bezierCurveTo(p766 * 176, p766 * 142, p766 * 184, p766 * 165, p766 * 197, p766 * 183);
    v1170.bezierCurveTo(p766 * 167, p766 * 325, p766 * 191, p766 * 405, p766 * 202, p766 * 502);
    v1170.bezierCurveTo(p766 * 180, p766 * 503, p766 * 180, p766 * 503, p766 * 158, p766 * 504);
    v1170.bezierCurveTo(p766 * 135, p766 * 396, p766 * 134, p766 * 185, p766 * 175, p766 * 119);
    v1170.closePath();
    f90(v1170, p768[0]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 110, p766 * 518);
    v1170.bezierCurveTo(p766 * 111.5, p766 * 533, p766 * 111.5, p766 * 533, p766 * 113, p766 * 548);
    v1170.bezierCurveTo(p766 * 162.5, p766 * 544, p766 * 162.5, p766 * 544, p766 * 212, p766 * 540);
    v1170.bezierCurveTo(p766 * 312, p766 * 535, p766 * 281, p766 * 665, p766 * 225, p766 * 665);
    v1170.bezierCurveTo(p766 * 227, p766 * 686.5, p766 * 227, p766 * 686.5, p766 * 229, p766 * 708);
    v1170.bezierCurveTo(p766 * 343, p766 * 684, p766 * 354, p766 * 496, p766 * 222, p766 * 498);
    v1170.bezierCurveTo(p766 * 165.5, p766 * 503, p766 * 165.5, p766 * 503, p766 * 109, p766 * 508);
    v1170.closePath();
    f90(v1170, p768[0]);
    f93(v1170, p766 * 204, p766 * 693, p766 * 36.013886210738214);
    f90(v1170, p768[0]);
    f93(v1170, p766 * 105, p766 * 518, p766 * 30);
    f90(v1170, p768[0]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 171, p766 * 535);
    v1170.bezierCurveTo(p766 * 139.5, p766 * 537.5, p766 * 139.5, p766 * 537.5, p766 * 108, p766 * 540);
    v1170.bezierCurveTo(p766 * 110, p766 * 527.5, p766 * 110, p766 * 527.5, p766 * 112, p766 * 515);
    v1170.bezierCurveTo(p766 * 148, p766 * 513, p766 * 148, p766 * 513, p766 * 184, p766 * 511);
    v1170.closePath();
    f90(v1170, p768[0]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 244, p766 * 669);
    v1170.bezierCurveTo(p766 * 248.5, p766 * 680, p766 * 248.5, p766 * 680, p766 * 253, p766 * 691);
    v1170.bezierCurveTo(p766 * 239.5, p766 * 697, p766 * 239.5, p766 * 697, p766 * 226, p766 * 703);
    v1170.bezierCurveTo(p766 * 223, p766 * 691.5, p766 * 223, p766 * 691.5, p766 * 220, p766 * 680);
    v1170.closePath();
    f90(v1170, p768[0]);
    v1170.translate(p766 * -25, p766 * -25);
    v1170.globalAlpha = 1;
    v1170.save();
    v1170.translate(p766 * 193.5, p766 * 602.5);
    v1170.rotate(-0.12);
    f87(v1170, p766 * -26.5, p766 * -97.5, p766 * 53, p766 * 195, p766 * 25);
    v1170.restore();
    f90(v1170, p768[1], p768[2], p766 * 16);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 137, p766 * 519);
    v1170.bezierCurveTo(p766 * 182, p766 * 513, p766 * 182, p766 * 513, p766 * 227, p766 * 507);
    v1170.bezierCurveTo(p766 * 214, p766 * 417, p766 * 189, p766 * 304, p766 * 221, p766 * 180);
    v1170.bezierCurveTo(p766 * 191, p766 * 126, p766 * 192, p766 * 105, p766 * 198, p766 * 64);
    v1170.bezierCurveTo(p766 * 123, p766 * 102, p766 * 99, p766 * 285, p766 * 137, p766 * 517);
    v1170.closePath();
    f90(v1170, p768[3], p768[4], p766 * 16);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 175, p766 * 119);
    v1170.bezierCurveTo(p766 * 176, p766 * 142, p766 * 184, p766 * 165, p766 * 197, p766 * 183);
    v1170.bezierCurveTo(p766 * 167, p766 * 325, p766 * 191, p766 * 405, p766 * 202, p766 * 502);
    v1170.bezierCurveTo(p766 * 180, p766 * 503, p766 * 180, p766 * 503, p766 * 158, p766 * 504);
    v1170.bezierCurveTo(p766 * 135, p766 * 396, p766 * 134, p766 * 185, p766 * 175, p766 * 119);
    v1170.closePath();
    f90(v1170, p768[5]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 110, p766 * 518);
    v1170.bezierCurveTo(p766 * 111.5, p766 * 533, p766 * 111.5, p766 * 533, p766 * 113, p766 * 548);
    v1170.bezierCurveTo(p766 * 162.5, p766 * 544, p766 * 162.5, p766 * 544, p766 * 212, p766 * 540);
    v1170.bezierCurveTo(p766 * 312, p766 * 535, p766 * 281, p766 * 665, p766 * 225, p766 * 665);
    v1170.bezierCurveTo(p766 * 227, p766 * 686.5, p766 * 227, p766 * 686.5, p766 * 229, p766 * 708);
    v1170.bezierCurveTo(p766 * 343, p766 * 684, p766 * 354, p766 * 496, p766 * 222, p766 * 498);
    v1170.bezierCurveTo(p766 * 165.5, p766 * 503, p766 * 165.5, p766 * 503, p766 * 109, p766 * 508);
    v1170.closePath();
    f90(v1170, p768[6], p768[4], p766 * 16);
    f93(v1170, p766 * 204, p766 * 693, p766 * 36.013886210738214);
    f90(v1170, p768[6], p768[4], p766 * 16);
    f93(v1170, p766 * 105, p766 * 518, p766 * 30);
    f90(v1170, p768[6], p768[4], p766 * 16);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 171, p766 * 535);
    v1170.bezierCurveTo(p766 * 139.5, p766 * 537.5, p766 * 139.5, p766 * 537.5, p766 * 108, p766 * 540);
    v1170.bezierCurveTo(p766 * 110, p766 * 527.5, p766 * 110, p766 * 527.5, p766 * 112, p766 * 515);
    v1170.bezierCurveTo(p766 * 148, p766 * 513, p766 * 148, p766 * 513, p766 * 184, p766 * 511);
    v1170.closePath();
    f90(v1170, p768[6]);
    v1170.beginPath();
    v1170.lineCap = "round";
    v1170.lineJoin = "round";
    v1170.moveTo(p766 * 244, p766 * 669);
    v1170.bezierCurveTo(p766 * 248.5, p766 * 680, p766 * 248.5, p766 * 680, p766 * 253, p766 * 691);
    v1170.bezierCurveTo(p766 * 239.5, p766 * 697, p766 * 239.5, p766 * 697, p766 * 226, p766 * 703);
    v1170.bezierCurveTo(p766 * 223, p766 * 691.5, p766 * 223, p766 * 691.5, p766 * 220, p766 * 680);
    v1170.closePath();
    f90(v1170, p768[6]);
    f93(v1170, p766 * 204, p766 * 693, p766 * 17.029386365926403);
    f90(v1170, p768[7]);
    f93(v1170, p766 * 106, p766 * 518, p766 * 12);
    f90(v1170, p768[7]);
    return v1169;
  }
  function f159(p769, p770, p771, p772, p773) {
    var v1171 = document.createElement("canvas");
    var v1172 = v1171.getContext("2d");
    if (p772 == 0) {
      var v1173 = p769 * 270;
      var v1174 = p769 * 250;
      v1171.width = v1173;
      v1171.height = v1174;
      v1172.beginPath();
      v1172.moveTo(p769 * 140, p769 * 3);
      v1172.translate(p769 * -25, p769 * -20);
      v1172.bezierCurveTo(p769 * 218, p769 * 31, p769 * 251, p769 * 61, p769 * 265, p769 * 85);
      v1172.bezierCurveTo(p769 * 278, p769 * 108, p769 * 295, p769 * 160, p769 * 285, p769 * 195);
      v1172.bezierCurveTo(p769 * 271, p769 * 242, p769 * 213, p769 * 268, p769 * 188, p769 * 266);
      v1172.bezierCurveTo(p769 * 139, p769 * 262, p769 * 70, p769 * 244, p769 * 47, p769 * 204);
      v1172.bezierCurveTo(p769 * 20, p769 * 158, p769 * 35, p769 * 78, p769 * 59, p769 * 56);
      v1172.bezierCurveTo(p769 * 90, p769 * 28, p769 * 124, p769 * 23, p769 * 140, p769 * 23);
      v1172.closePath();
      f90(v1172, p771[0]);
    } else if (p772 == 1) {
      v1173 = p769 * 430;
      v1174 = p769 * 350;
      v1171.width = v1173;
      v1171.height = v1174;
      v1172.beginPath();
      v1172.moveTo(p769 * 180, p769 * 5);
      v1172.translate(p769 * -30, p769 * -60);
      v1172.bezierCurveTo(p769 * 283, p769 * 60, p769 * 265, p769 * 163, p769 * 335, p769 * 206);
      v1172.bezierCurveTo(p769 * 376, p769 * 231, p769 * 492, p769 * 299, p769 * 434, p769 * 357);
      v1172.bezierCurveTo(p769 * 371, p769 * 421, p769 * 289, p769 * 394, p769 * 255, p769 * 386);
      v1172.bezierCurveTo(p769 * 218, p769 * 377, p769 * 91, p769 * 359, p769 * 50, p769 * 272);
      v1172.bezierCurveTo(p769 * 12, p769 * 192, p769 * 107, p769 * 75, p769 * 178, p769 * 69);
      v1172.closePath();
      f90(v1172, p771[0]);
    } else if (p772 == 2) {
      v1173 = p769 * 400;
      v1174 = p769 * 300;
      v1171.width = v1173;
      v1171.height = v1174;
      v1172.beginPath();
      v1172.moveTo(p769 * 80, p769 * 52);
      v1172.translate(p769 * -40, p769 * -30);
      v1172.bezierCurveTo(p769 * 124, p769 * 77, p769 * 241, p769 * 22, p769 * 311, p769 * 65);
      v1172.bezierCurveTo(p769 * 352, p769 * 90, p769 * 404, p769 * 176, p769 * 346, p769 * 234);
      v1172.bezierCurveTo(p769 * 283, p769 * 298, p769 * 179, p769 * 299, p769 * 145, p769 * 291);
      v1172.bezierCurveTo(p769 * 108, p769 * 282, p769 * 100, p769 * 239, p769 * 63, p769 * 205);
      v1172.bezierCurveTo(p769 * 37, p769 * 181, p769 * 45, p769 * 131, p769 * 80, p769 * 107);
      v1172.closePath();
      f90(v1172, p771[0]);
    }
    return v1171;
  }
  function f160(p774, p775, p776) {
    var v1175 = document.createElement("canvas");
    var v1176 = v1175.getContext("2d");
    v1175.width = p774 * 290;
    v1175.height = p774 * 525;
    v1176.globalAlpha = p775 ? 0.5 : 1;
    v1176.translate(p774 * 20, p774 * 20);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 112, p774 * 356);
    v1176.bezierCurveTo(p774 * 124, p774 * 220.5, p774 * 124, p774 * 220.5, p774 * 136, p774 * 85);
    v1176.bezierCurveTo(p774 * 162.5, p774 * 65.5, p774 * 162.5, p774 * 65.5, p774 * 189, p774 * 46);
    v1176.bezierCurveTo(p774 * 208.5, p774 * 72.5, p774 * 208.5, p774 * 72.5, p774 * 228, p774 * 99);
    v1176.bezierCurveTo(p774 * 200, p774 * 232, p774 * 200, p774 * 232, p774 * 172, p774 * 365);
    v1176.closePath();
    f90(v1176, p776[0]);
    v1176.save();
    v1176.translate(p774 * 131, p774 * 423);
    v1176.rotate(0.16);
    f87(v1176, p774 * -14, p774 * -53, p774 * 28, p774 * 106, p774 * 10);
    v1176.restore();
    f90(v1176, p776[0]);
    v1176.save();
    v1176.translate(p774 * 122, p774 * 480);
    v1176.rotate(1.72);
    f88(v1176, 4, p774 * 26.476404589747453, p774 * 10);
    v1176.restore();
    f90(v1176, p776[0]);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 210, p774 * 387);
    v1176.bezierCurveTo(p774 * 138, p774 * 376, p774 * 138, p774 * 376, p774 * 66, p774 * 365);
    v1176.bezierCurveTo(p774 * 76, p774 * 355, p774 * 76, p774 * 355, p774 * 86, p774 * 345);
    v1176.bezierCurveTo(p774 * 99, p774 * 346.5, p774 * 99, p774 * 346.5, p774 * 112, p774 * 348);
    v1176.bezierCurveTo(p774 * 128.5, p774 * 344, p774 * 128.5, p774 * 344, p774 * 145, p774 * 340);
    v1176.bezierCurveTo(p774 * 158, p774 * 348, p774 * 158, p774 * 348, p774 * 171, p774 * 356);
    v1176.bezierCurveTo(p774 * 184, p774 * 358, p774 * 184, p774 * 358, p774 * 197, p774 * 360);
    v1176.closePath();
    f90(v1176, p776[0]);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 129, p774 * 338);
    v1176.bezierCurveTo(p774 * 137, p774 * 336, p774 * 137, p774 * 336, p774 * 145, p774 * 334);
    v1176.bezierCurveTo(p774 * 152.5, p774 * 338, p774 * 152.5, p774 * 338, p774 * 160, p774 * 342);
    v1176.bezierCurveTo(p774 * 184, p774 * 224, p774 * 184, p774 * 224, p774 * 208, p774 * 106);
    v1176.bezierCurveTo(p774 * 197, p774 * 88, p774 * 187, p774 * 70, p774 * 186, p774 * 70);
    v1176.bezierCurveTo(p774 * 169.5, p774 * 83, p774 * 169.5, p774 * 83, p774 * 153, p774 * 96);
    v1176.closePath();
    f90(v1176, p776[0]);
    v1176.globalAlpha = 1;
    v1176.translate(p774 * -20, p774 * -20);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 112, p774 * 356);
    v1176.bezierCurveTo(p774 * 124, p774 * 220.5, p774 * 124, p774 * 220.5, p774 * 136, p774 * 85);
    v1176.bezierCurveTo(p774 * 162.5, p774 * 65.5, p774 * 162.5, p774 * 65.5, p774 * 189, p774 * 46);
    v1176.bezierCurveTo(p774 * 208.5, p774 * 72.5, p774 * 208.5, p774 * 72.5, p774 * 228, p774 * 99);
    v1176.bezierCurveTo(p774 * 200, p774 * 232, p774 * 200, p774 * 232, p774 * 172, p774 * 365);
    v1176.closePath();
    f90(v1176, p776[1], p776[2], p774 * 12.5);
    v1176.save();
    v1176.translate(p774 * 131, p774 * 423);
    v1176.rotate(0.16);
    f87(v1176, p774 * -14, p774 * -53, p774 * 28, p774 * 106, p774 * 10);
    v1176.restore();
    f90(v1176, p776[4], p776[5], p774 * 12.5);
    v1176.save();
    v1176.translate(p774 * 122, p774 * 480);
    v1176.rotate(1.72);
    f88(v1176, 4, p774 * 26.476404589747453, p774 * 10);
    v1176.restore();
    f90(v1176, p776[1], p776[2], p774 * 12.5);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 210, p774 * 387);
    v1176.bezierCurveTo(p774 * 138, p774 * 376, p774 * 138, p774 * 376, p774 * 66, p774 * 365);
    v1176.bezierCurveTo(p774 * 76, p774 * 355, p774 * 76, p774 * 355, p774 * 86, p774 * 345);
    v1176.bezierCurveTo(p774 * 99, p774 * 346.5, p774 * 99, p774 * 346.5, p774 * 112, p774 * 348);
    v1176.bezierCurveTo(p774 * 128.5, p774 * 344, p774 * 128.5, p774 * 344, p774 * 145, p774 * 340);
    v1176.bezierCurveTo(p774 * 158, p774 * 348, p774 * 158, p774 * 348, p774 * 171, p774 * 356);
    v1176.bezierCurveTo(p774 * 184, p774 * 358, p774 * 184, p774 * 358, p774 * 197, p774 * 360);
    v1176.closePath();
    f90(v1176, p776[1], p776[2], p774 * 12.5);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p774 * 129, p774 * 338);
    v1176.bezierCurveTo(p774 * 137, p774 * 336, p774 * 137, p774 * 336, p774 * 145, p774 * 334);
    v1176.bezierCurveTo(p774 * 152.5, p774 * 338, p774 * 152.5, p774 * 338, p774 * 160, p774 * 342);
    v1176.bezierCurveTo(p774 * 184, p774 * 224, p774 * 184, p774 * 224, p774 * 208, p774 * 106);
    v1176.bezierCurveTo(p774 * 197, p774 * 88, p774 * 187, p774 * 70, p774 * 186, p774 * 70);
    v1176.bezierCurveTo(p774 * 169.5, p774 * 83, p774 * 169.5, p774 * 83, p774 * 153, p774 * 96);
    v1176.closePath();
    f90(v1176, p776[3]);
    return v1175;
  }
  function f161(p777, p778, p779) {
    var v1177 = document.createElement("canvas");
    var v1178 = v1177.getContext("2d");
    var v1179 = p777 * 220;
    var v1180 = p777 * 230;
    var v1181 = p777 * 100;
    var v1182 = v1181 / 4;
    var v1183 = p777 * 20;
    v1177.width = v1179;
    v1177.height = v1180;
    v1178.translate(v1179 / 2, v1180 / 2 + v1183);
    v1178.globalAlpha = 0.5;
    f88(v1178, 7, v1181, v1182);
    f90(v1178, p779[0]);
    v1178.globalAlpha = 1;
    v1178.translate(0, -v1183);
    f88(v1178, 7, v1181, v1182);
    f90(v1178, p779[1]);
    f88(v1178, 6, v1181 * 0.65, v1182 * 0.65);
    f90(v1178, p779[2]);
    return v1177;
  }
  function f162(p780, p781, p782) {
    var v1184 = document.createElement("canvas");
    var v1185 = v1184.getContext("2d");
    v1184.width = p780 * 130;
    v1184.height = p780 * 148;
    v1185.globalAlpha = p781 ? 0.5 : 1;
    v1185.save();
    v1185.translate(p780 * 65, p780 * 85);
    v1185.rotate(1.4);
    f88(v1185, 7, p780 * 60, p780 * 10);
    v1185.restore();
    f90(v1185, p782[0]);
    v1185.globalAlpha = 1;
    v1185.save();
    v1185.translate(p780 * 65, p780 * 74);
    v1185.rotate(1.4);
    f88(v1185, 7, p780 * 60, p780 * 10);
    f90(v1185, p782[1], p782[2], 4);
    v1185.rotate(0.64);
    f88(v1185, 7, p780 * 40, p780 * 10);
    f90(v1185, p782[3], p782[4], 4);
    v1185.rotate(0.12);
    f88(v1185, 7, p780 * 23, p780 * 5);
    v1185.restore();
    f90(v1185, p782[5]);
    return v1184;
  }
  function f163(p783, p784, p785) {
    var v1186 = document.createElement("canvas");
    var v1187 = v1186.getContext("2d");
    var v1188 = p783 * p784 * 2;
    var v1189 = p784 * p783 * 2;
    var v1190 = v1188 / 2;
    var v1191 = v1189 / 2;
    v1186.width = v1188;
    v1186.height = v1189;
    v1187.translate(v1190, v1191);
    f93(v1187, 0, 0, p783 * p784);
    f90(v1187, p785);
    return v1186;
  }
  function f164(p786, p787, p788) {
    var v1192 = document.createElement("canvas");
    var v1193 = v1192.getContext("2d");
    v1192.width = p786 * 400;
    v1192.height = p786 * 400;
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p786 * 96.5, p786 * 277.34375);
    v1193.bezierCurveTo(p786 * 197.5, p786 * 259.84375, p786 * 197.5, p786 * 259.84375, p786 * 298.5, p786 * 242.34375);
    v1193.bezierCurveTo(p786 * 311.5, p786 * 231.34375, p786 * 307.5, p786 * 168.34375, p786 * 298.5, p786 * 150.34375);
    v1193.bezierCurveTo(p786 * 198, p786 * 170.34375, p786 * 198, p786 * 170.34375, p786 * 97.5, p786 * 190.34375);
    v1193.closePath();
    f90(v1193, p788[1], p788[2], p786 * 12);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p786 * 98.5, p786 * 214.34375);
    v1193.bezierCurveTo(p786 * 199, p786 * 196.34375, p786 * 199, p786 * 196.34375, p786 * 299.5, p786 * 178.34375);
    v1193.closePath();
    f90(v1193, undefined, p788[2], p786 * 12);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p786 * 98.5, p786 * 247.34375);
    v1193.bezierCurveTo(p786 * 201.5, p786 * 229.34375, p786 * 201.5, p786 * 229.34375, p786 * 304.5, p786 * 211.34375);
    v1193.closePath();
    f90(v1193, vVVVVUndefined132, p788[2], p786 * 12);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p786 * 97.5, p786 * 189.34375);
    v1193.bezierCurveTo(p786 * 97, p786 * 199.84375, p786 * 97, p786 * 199.84375, p786 * 96.5, p786 * 210.34375);
    v1193.bezierCurveTo(p786 * 110.5, p786 * 204.34375, p786 * 110.5, p786 * 204.34375, p786 * 124.5, p786 * 198.34375);
    v1193.bezierCurveTo(p786 * 137.5, p786 * 203.84375, p786 * 137.5, p786 * 203.84375, p786 * 150.5, p786 * 209.34375);
    v1193.bezierCurveTo(p786 * 172, p786 * 197.84375, p786 * 172, p786 * 197.84375, p786 * 193.5, p786 * 186.34375);
    v1193.bezierCurveTo(p786 * 211.5, p786 * 189.84375, p786 * 211.5, p786 * 189.84375, p786 * 229.5, p786 * 193.34375);
    v1193.bezierCurveTo(p786 * 240.5, p786 * 193.34375, p786 * 240.5, p786 * 193.34375, p786 * 251.5, p786 * 193.34375);
    v1193.bezierCurveTo(p786 * 261, p786 * 182.84375, p786 * 261, p786 * 182.84375, p786 * 270.5, p786 * 172.34375);
    v1193.bezierCurveTo(p786 * 287.5, p786 * 169.34375, p786 * 287.5, p786 * 169.34375, p786 * 304.5, p786 * 166.34375);
    v1193.bezierCurveTo(p786 * 304.5, p786 * 156.34375, p786 * 300.5, p786 * 145.34375, p786 * 298.5, p786 * 147.34375);
    v1193.closePath();
    f90(v1193, p788[3], p788[4], p786 * 12);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p786 * 300.5, p786 * 147.34375);
    v1193.bezierCurveTo(p786 * 293.5, p786 * 121.34375, p786 * 278.5, p786 * 106.34375, p786 * 256.5, p786 * 101.34375);
    v1193.bezierCurveTo(p786 * 176.5, p786 * 145.34375, p786 * 176.5, p786 * 145.34375, p786 * 96.5, p786 * 189.34375);
    v1193.closePath();
    f90(v1193, p788[5], p788[6], p786 * 12);
    f93(v1193, p786 * 252.5, p786 * 129.34375, p786 * 18.027756377319946);
    f90(v1193, p788[7]);
    f93(v1193, p786 * 248.5, p786 * 121.34375, p786 * 8.246211251235321);
    f90(v1193, p788[8]);
    return v1192;
  }
  function f165(p789, p790, p791) {
    var v1194 = document.createElement("canvas");
    var v1195 = v1194.getContext("2d");
    var v1196 = p789 * 180;
    var v1197 = p789 * 210;
    var v1198 = (v1200 = p789 * 60) / 4;
    var v1199 = p789 * 20;
    v1194.width = v1196;
    v1194.height = v1197;
    v1195.save();
    v1195.translate(v1196 / 2 - p789 * 0, v1197 / 2 - p789 * 35 + v1199);
    v1195.rotate(Math.PI / -1.8);
    v1195.globalAlpha = 0.5;
    v1195.translate(p789 * 0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[0]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 + p789 * 10, v1197 / 2 + p789 * 15 + v1199);
    v1195.rotate(Math.PI / 2);
    v1195.globalAlpha = 0.5;
    v1195.translate(p789 * 0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[0]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 - p789 * 50, v1197 / 2 + p789 * 40 + v1199);
    v1195.rotate(Math.PI / 3);
    v1195.globalAlpha = 0.5;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[0]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 - p789 * 0, v1197 / 2 - p789 * 35);
    v1195.rotate(Math.PI / -1.8);
    v1195.globalAlpha = 1;
    v1195.translate(p789 * 0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[1]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 + p789 * 10, v1197 / 2 + p789 * 15);
    v1195.rotate(Math.PI / 2);
    v1195.globalAlpha = 1;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[1]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 - p789 * 50, v1197 / 2 + p789 * 40);
    v1195.rotate(Math.PI / 3);
    v1195.globalAlpha = 1;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[1]);
    v1195.restore();
    var v1200;
    v1198 = (v1200 = p789 * 30) / 4;
    v1195.save();
    v1195.translate(v1196 / 2 + p789 * 5, v1197 / 2 - p789 * 20);
    v1195.rotate(Math.PI / -1.8);
    v1195.globalAlpha = 1;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[2]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 + p789 * 0, v1197 / 2 + p789 * 10);
    v1195.rotate(Math.PI / 2);
    v1195.globalAlpha = 1;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[2]);
    v1195.restore();
    v1195.save();
    v1195.translate(v1196 / 2 - p789 * 45, v1197 / 2 + p789 * 35);
    v1195.rotate(Math.PI / 3);
    v1195.globalAlpha = 1;
    v1195.translate(0, p789 * -20);
    f88(v1195, 5, v1200, v1198);
    f90(v1195, p791[2]);
    v1195.restore();
    f93(v1195, v1196 / 2 - p789 * 7, v1197 / 2 + p789 * 7, 5);
    f90(v1195, p791[2]);
    return v1194;
  }
  function f166(p792, p793, p794, p795, p796, p797, p798, p799, p800, p801, p802 = 0) {
    var v1201 = document.createElement("canvas");
    var v1202 = v1201.getContext("2d");
    p797 = p797 ? p792 * p797 : 0;
    var v1203 = Math.floor(p794 * p792);
    v1202.font = v1203 + "px Baloo Paaji";
    v1202.lineJoin = "round";
    p799 *= p792;
    var v1204 = p798 ? p799 * 2 : 0;
    if (p800) {
      var v1205 = Math.min(v1202.measureText(p793).width + p792 * 2 + v1204, p800);
    } else {
      v1205 = v1202.measureText(p793).width + p792 * 2 + v1204 + p802 * p792 * 2;
    }
    v1203 = p792 * (v1203 + p797 + p802) + v1204;
    v1201.width = v1205;
    v1201.height = v1203;
    if (p798) {
      v1202.fillStyle = p798;
      f87(v1202, 0, 0, v1205, v1203, p799 * 2);
      v1202.fill();
      v1202.translate(p799, p799);
    }
    v1202.textBaseline = "middle";
    v1202.font = p794 + "px Baloo Paaji";
    v1202.lineJoin = "round";
    if (p796) {
      v1202.beginPath();
      v1202.fillStyle = p796;
      v1202.fillText(p793, 0, v1203 / 2 + p797 - v1204 / 2, v1205);
    }
    v1202.beginPath();
    if (p801) {
      v1202.strokeStyle = p801;
      v1202.lineWidth = p802;
      v1202.strokeText(p793, p802, (v1203 - v1204) / 2, v1205);
    }
    v1202.fillStyle = p795;
    v1202.fillText(p793, p802, (v1203 - v1204) / 2, v1205);
    return v1201;
  }
  function f167(p803, p804, p805) {
    var v1206 = document.createElement("canvas");
    var v1207 = v1206.getContext("2d");
    v1206.width = p803 * 100;
    v1206.height = p803 * 250;
    v1207.translate(p803 * -135, p803 * -75);
    v1207.globalAlpha = p804 ? 0.8 : 1;
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 178.5, p803 * 238.03125);
    v1207.bezierCurveTo(p803 * 177, p803 * 175.03125, p803 * 177, p803 * 175.03125, p803 * 175.5, p803 * 112.03125);
    v1207.bezierCurveTo(p803 * 184.5, p803 * 100.53125, p803 * 184.5, p803 * 100.53125, p803 * 193.5, p803 * 89.03125);
    v1207.bezierCurveTo(p803 * 202, p803 * 100.03125, p803 * 202, p803 * 100.03125, p803 * 210.5, p803 * 111.03125);
    v1207.bezierCurveTo(p803 * 209.5, p803 * 174.03125, p803 * 209.5, p803 * 174.03125, p803 * 208.5, p803 * 237.03125);
    v1207.closePath();
    f90(v1207, p805[0]);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 155.5, p803 * 239.03125);
    v1207.bezierCurveTo(p803 * 194, p803 * 238.53125, p803 * 194, p803 * 238.53125, p803 * 232.5, p803 * 238.03125);
    v1207.bezierCurveTo(p803 * 232.5, p803 * 243.03125, p803 * 232.5, p803 * 243.03125, p803 * 232.5, p803 * 248.03125);
    v1207.bezierCurveTo(p803 * 194, p803 * 248.53125, p803 * 194, p803 * 248.53125, p803 * 155.5, p803 * 249.03125);
    v1207.closePath();
    f90(v1207, p805[0]);
    f93(v1207, p803 * 160.5, p803 * 243.03125, p803 * 7);
    f90(v1207, p805[0]);
    f93(v1207, p803 * 227.5, p803 * 242.03125, p803 * 7);
    f90(v1207, p805[0]);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 185.5, p803 * 253.03125);
    v1207.bezierCurveTo(p803 * 193.5, p803 * 253.03125, p803 * 193.5, p803 * 253.03125, p803 * 201.5, p803 * 253.03125);
    v1207.bezierCurveTo(p803 * 201.5, p803 * 276.03125, p803 * 201.5, p803 * 276.03125, p803 * 201.5, p803 * 299.03125);
    v1207.bezierCurveTo(p803 * 194.5, p803 * 299.03125, p803 * 194.5, p803 * 299.03125, p803 * 187.5, p803 * 299.03125);
    v1207.closePath();
    f90(v1207, p805[0], p805[0], p803 * 5);
    f93(v1207, p803 * 194, p803 * 298, p803 * 9);
    f90(v1207, p805[0], p805[0], p803 * 5);
    v1207.globalAlpha = 1;
    v1207.translate(p803 * -10, p803 * 10);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 178.5, p803 * 238.03125);
    v1207.bezierCurveTo(p803 * 177, p803 * 175.03125, p803 * 177, p803 * 175.03125, p803 * 175.5, p803 * 112.03125);
    v1207.bezierCurveTo(p803 * 184.5, p803 * 100.53125, p803 * 184.5, p803 * 100.53125, p803 * 193.5, p803 * 89.03125);
    v1207.bezierCurveTo(p803 * 202, p803 * 100.03125, p803 * 202, p803 * 100.03125, p803 * 210.5, p803 * 111.03125);
    v1207.bezierCurveTo(p803 * 209.5, p803 * 174.03125, p803 * 209.5, p803 * 174.03125, p803 * 208.5, p803 * 237.03125);
    v1207.closePath();
    f90(v1207, p805[3], p805[4], p803 * 5);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 155.5, p803 * 239.03125);
    v1207.bezierCurveTo(p803 * 194, p803 * 238.53125, p803 * 194, p803 * 238.53125, p803 * 232.5, p803 * 238.03125);
    v1207.bezierCurveTo(p803 * 232.5, p803 * 243.03125, p803 * 232.5, p803 * 243.03125, p803 * 232.5, p803 * 248.03125);
    v1207.bezierCurveTo(p803 * 194, p803 * 248.53125, p803 * 194, p803 * 248.53125, p803 * 155.5, p803 * 249.03125);
    v1207.closePath();
    f90(v1207, p805[1], p805[2], p803 * 5);
    f93(v1207, p803 * 160.5, p803 * 243.03125, p803 * 7);
    f90(v1207, p805[1], p805[2], p803 * 5);
    f93(v1207, p803 * 227.5, p803 * 242.03125, p803 * 7);
    f90(v1207, p805[1], p805[2], p803 * 5);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p803 * 185.5, p803 * 253.03125);
    v1207.bezierCurveTo(p803 * 193.5, p803 * 253.03125, p803 * 193.5, p803 * 253.03125, p803 * 201.5, p803 * 253.03125);
    v1207.bezierCurveTo(p803 * 201.5, p803 * 276.03125, p803 * 201.5, p803 * 276.03125, p803 * 201.5, p803 * 299.03125);
    v1207.bezierCurveTo(p803 * 194.5, p803 * 299.03125, p803 * 194.5, p803 * 299.03125, p803 * 187.5, p803 * 299.03125);
    v1207.closePath();
    f90(v1207, p805[1], p805[2], p803 * 7);
    f93(v1207, p803 * 194, p803 * 298, p803 * 9);
    f90(v1207, p805[1], p805[2], p803 * 7);
    return v1206;
  }
  function f168(p806, p807, p808) {
    var v1208 = document.createElement("canvas");
    var v1209 = v1208.getContext("2d");
    v1208.width = p806 * 290;
    v1208.height = p806 * 525;
    v1209.globalAlpha = p807 ? 0.5 : 1;
    v1209.translate(p806 * 20, p806 * 20);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p806 * 111, p806 * 351);
    v1209.bezierCurveTo(p806 * 129, p806 * 218, p806 * 129, p806 * 218, p806 * 147, p806 * 85);
    v1209.bezierCurveTo(p806 * 167, p806 * 65.5, p806 * 167, p806 * 65.5, p806 * 187, p806 * 46);
    v1209.bezierCurveTo(p806 * 201.5, p806 * 70.5, p806 * 201.5, p806 * 70.5, p806 * 216, p806 * 95);
    v1209.bezierCurveTo(p806 * 194.5, p806 * 227.5, p806 * 194.5, p806 * 227.5, p806 * 173, p806 * 360);
    v1209.closePath();
    f90(v1209, p808[0]);
    v1209.save();
    v1209.translate(p806 * 131, p806 * 425.5);
    v1209.rotate(0.16);
    f87(v1209, p806 * -14, p806 * -56.5, p806 * 28, p806 * 113, p806 * 8);
    v1209.restore();
    f90(v1209, p808[0]);
    f93(v1209, p806 * 122, p806 * 480, p806 * 18.439088914585774);
    f90(v1209, p808[0]);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p806 * 79, p806 * 371);
    v1209.bezierCurveTo(p806 * 131, p806 * 373, p806 * 145, p806 * 378, p806 * 197, p806 * 388);
    v1209.bezierCurveTo(p806 * 205, p806 * 382.5, p806 * 205, p806 * 382.5, p806 * 213, p806 * 377);
    v1209.bezierCurveTo(p806 * 167, p806 * 352, p806 * 117, p806 * 345, p806 * 69, p806 * 355);
    v1209.closePath();
    f90(v1209, p808[0]);
    v1209.globalAlpha = 1;
    v1209.translate(p806 * -20, p806 * -20);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p806 * 111, p806 * 351);
    v1209.bezierCurveTo(p806 * 129, p806 * 218, p806 * 129, p806 * 218, p806 * 147, p806 * 85);
    v1209.bezierCurveTo(p806 * 167, p806 * 65.5, p806 * 167, p806 * 65.5, p806 * 187, p806 * 46);
    v1209.bezierCurveTo(p806 * 201.5, p806 * 70.5, p806 * 201.5, p806 * 70.5, p806 * 216, p806 * 95);
    v1209.bezierCurveTo(p806 * 194.5, p806 * 227.5, p806 * 194.5, p806 * 227.5, p806 * 173, p806 * 360);
    v1209.closePath();
    f90(v1209, p808[1], p808[2], p806 * 12.5);
    v1209.save();
    v1209.translate(p806 * 131, p806 * 425.5);
    v1209.rotate(0.16);
    f87(v1209, p806 * -14, p806 * -56.5, p806 * 28, p806 * 113, p806 * 8);
    v1209.restore();
    f90(v1209, p808[4], p808[5], p806 * 12.5);
    f93(v1209, p806 * 122, p806 * 480, p806 * 18.439088914585774);
    f90(v1209, p808[4], p808[5], p806 * 12.5);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p806 * 79, p806 * 371);
    v1209.bezierCurveTo(p806 * 131, p806 * 373, p806 * 145, p806 * 378, p806 * 197, p806 * 388);
    v1209.bezierCurveTo(p806 * 205, p806 * 382.5, p806 * 205, p806 * 382.5, p806 * 213, p806 * 377);
    v1209.bezierCurveTo(p806 * 167, p806 * 352, p806 * 117, p806 * 345, p806 * 69, p806 * 355);
    v1209.closePath();
    f90(v1209, p808[4], p808[5], p806 * 12.5);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p806 * 128, p806 * 345);
    v1209.bezierCurveTo(p806 * 142, p806 * 345, p806 * 147, p806 * 346, p806 * 158, p806 * 349);
    v1209.bezierCurveTo(p806 * 177.5, p806 * 224.5, p806 * 177.5, p806 * 224.5, p806 * 197, p806 * 100);
    v1209.bezierCurveTo(p806 * 190.5, p806 * 84.5, p806 * 190.5, p806 * 84.5, p806 * 184, p806 * 69);
    v1209.bezierCurveTo(p806 * 173.5, p806 * 82, p806 * 173.5, p806 * 82, p806 * 163, p806 * 95);
    v1209.closePath();
    f90(v1209, p808[3]);
    return v1208;
  }
  function f169(p809, p810, p811) {
    var v1210 = document.createElement("canvas");
    var v1211 = v1210.getContext("2d");
    var v1212 = p809 * 70;
    var v1213 = p809 * 90;
    var v1214 = p809 * 4;
    var v1215 = p809 * 5;
    v1210.width = v1212;
    v1210.height = v1213;
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70 + v1215);
    v1211.globalAlpha = 0.5;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 130, p809 * 79, p809 * 132, p809 * 86, p809 * 130, p809 * 93);
    v1211.bezierCurveTo(p809 * 128, p809 * 100, p809 * 121, p809 * 107, p809 * 120, p809 * 107);
    v1211.bezierCurveTo(p809 * 120, p809 * 107, p809 * 115, p809 * 98, p809 * 115, p809 * 92);
    v1211.bezierCurveTo(p809 * 115, p809 * 86, p809 * 119, p809 * 76, p809 * 127, p809 * 73);
    v1211.closePath();
    f90(v1211, "#0d1b1c");
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70 + v1215);
    v1211.globalAlpha = 0.5;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 112, p809 * 109, p809 * 111, p809 * 100, p809 * 106, p809 * 93);
    v1211.bezierCurveTo(p809 * 104, p809 * 90, p809 * 91, p809 * 87, p809 * 91, p809 * 87);
    v1211.bezierCurveTo(p809 * 91, p809 * 88, p809 * 91, p809 * 96, p809 * 94, p809 * 102);
    v1211.bezierCurveTo(p809 * 97, p809 * 108, p809 * 106, p809 * 112, p809 * 113, p809 * 112);
    v1211.closePath();
    f90(v1211, "#0d1b1c");
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70 + v1215);
    v1211.globalAlpha = 0.5;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 108, p809 * 120, p809 * 100, p809 * 119, p809 * 91, p809 * 127);
    v1211.bezierCurveTo(p809 * 83, p809 * 134, p809 * 82, p809 * 146, p809 * 83, p809 * 146);
    v1211.bezierCurveTo(p809 * 84, p809 * 146, p809 * 98, p809 * 142, p809 * 103, p809 * 138);
    v1211.bezierCurveTo(p809 * 107, p809 * 135, p809 * 110, p809 * 130, p809 * 112, p809 * 121);
    v1211.closePath();
    f90(v1211, "#0d1b1c");
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * 3, p809 * -93 + v1215);
    v1211.rotate(Math.PI / 5);
    v1211.globalAlpha = 0.5;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 130, p809 * 79, p809 * 132, p809 * 86, p809 * 130, p809 * 93);
    v1211.bezierCurveTo(p809 * 128, p809 * 100, p809 * 121, p809 * 107, p809 * 120, p809 * 107);
    v1211.bezierCurveTo(p809 * 120, p809 * 107, p809 * 115, p809 * 98, p809 * 115, p809 * 92);
    v1211.bezierCurveTo(p809 * 115, p809 * 86, p809 * 119, p809 * 76, p809 * 127, p809 * 73);
    v1211.closePath();
    f90(v1211, "#0d1b1c");
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70);
    v1211.globalAlpha = 1;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 130, p809 * 79, p809 * 132, p809 * 86, p809 * 130, p809 * 93);
    v1211.bezierCurveTo(p809 * 128, p809 * 100, p809 * 121, p809 * 107, p809 * 120, p809 * 107);
    v1211.bezierCurveTo(p809 * 120, p809 * 107, p809 * 115, p809 * 98, p809 * 115, p809 * 92);
    v1211.bezierCurveTo(p809 * 115, p809 * 86, p809 * 119, p809 * 76, p809 * 127, p809 * 73);
    v1211.closePath();
    f90(v1211, p811[0], p811[1], v1214);
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70);
    v1211.globalAlpha = 1;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 112, p809 * 109, p809 * 111, p809 * 100, p809 * 106, p809 * 93);
    v1211.bezierCurveTo(p809 * 104, p809 * 90, p809 * 91, p809 * 87, p809 * 91, p809 * 87);
    v1211.bezierCurveTo(p809 * 91, p809 * 88, p809 * 91, p809 * 96, p809 * 94, p809 * 102);
    v1211.bezierCurveTo(p809 * 97, p809 * 108, p809 * 106, p809 * 112, p809 * 113, p809 * 112);
    v1211.closePath();
    f90(v1211, p811[0], p811[1], v1214);
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * -80, p809 * -70);
    v1211.globalAlpha = 1;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 108, p809 * 120, p809 * 100, p809 * 119, p809 * 91, p809 * 127);
    v1211.bezierCurveTo(p809 * 83, p809 * 134, p809 * 82, p809 * 146, p809 * 83, p809 * 146);
    v1211.bezierCurveTo(p809 * 84, p809 * 146, p809 * 98, p809 * 142, p809 * 103, p809 * 138);
    v1211.bezierCurveTo(p809 * 107, p809 * 135, p809 * 110, p809 * 130, p809 * 112, p809 * 121);
    v1211.closePath();
    f90(v1211, p811[0], p811[1], v1214);
    v1211.restore();
    v1211.save();
    v1211.translate(p809 * 3, p809 * -93);
    v1211.rotate(Math.PI / 5);
    v1211.globalAlpha = 1;
    v1211.beginPath();
    v1211.bezierCurveTo(p809 * 130, p809 * 79, p809 * 132, p809 * 86, p809 * 130, p809 * 93);
    v1211.bezierCurveTo(p809 * 128, p809 * 100, p809 * 121, p809 * 107, p809 * 120, p809 * 107);
    v1211.bezierCurveTo(p809 * 120, p809 * 107, p809 * 115, p809 * 98, p809 * 115, p809 * 92);
    v1211.bezierCurveTo(p809 * 115, p809 * 86, p809 * 119, p809 * 76, p809 * 127, p809 * 73);
    v1211.closePath();
    f90(v1211, p811[0], p811[1], v1214);
    v1211.restore();
    return v1210;
  }
  function f170(p812, p813, p814) {
    var v1216 = document.createElement("canvas");
    var v1217 = v1216.getContext("2d");
    v1216.width = p812 * 130;
    v1216.height = p812 * 142;
    v1217.globalAlpha = p813 ? 0.5 : 1;
    v1217.save();
    v1217.translate(p812 * 65, p812 * 80);
    v1217.rotate(0.2);
    f88(v1217, 9, p812 * 60, p812 * 10);
    v1217.restore();
    f90(v1217, p814[0]);
    v1217.globalAlpha = 1;
    v1217.save();
    v1217.translate(p812 * 65, p812 * 71);
    v1217.rotate(0.2);
    f88(v1217, 9, p812 * 60, p812 * 10);
    f90(v1217, p814[1], p814[2], 4);
    v1217.rotate(-0.32);
    f88(v1217, 9, p812 * 38, p812 * 10);
    f90(v1217, p814[3], p814[4], 4);
    v1217.rotate(0.68);
    f88(v1217, 9, p812 * 20, p812 * 8);
    f90(v1217, p814[5], p814[6], 6);
    v1217.restore();
    return v1216;
  }
  function f171(p815, p816) {
    var v1218 = document.createElement("canvas");
    var v1219 = v1218.getContext("2d");
    v1218.width = p815 * 80;
    v1218.height = p815 * 100;
    v1219.scale(0.5, 0.5);
    v1219.translate(10, 15);
    v1219.globalAlpha = 0.5;
    v1219.beginPath();
    v1219.lineCap = "round";
    v1219.lineJoin = "round";
    v1219.moveTo(p815 * 47, p815 * 5);
    v1219.bezierCurveTo(p815 * 19, p815 * 30, p815 * 12, p815 * 42, p815 * 10, p815 * 55);
    v1219.bezierCurveTo(p815 * 11, p815 * 75, p815 * 27, p815 * 76, p815 * 36, p815 * 72);
    v1219.bezierCurveTo(p815 * 52, p815 * 60, p815 * 53, p815 * 46, p815 * 54, p815 * 31);
    v1219.bezierCurveTo(p815 * 53, p815 * 14, p815 * 50, p815 * 9, p815 * 48, p815 * 6);
    v1219.closePath();
    f90(v1219, p816[0]);
    v1219.beginPath();
    v1219.lineCap = "round";
    v1219.lineJoin = "round";
    v1219.moveTo(p815 * 17, p815 * 70);
    v1219.bezierCurveTo(p815 * 18, p815 * 77, p815 * 10, p815 * 83, p815 * 4, p815 * 87);
    f90(v1219, vVVVUndefined824, p816[0], p815 * 10);
    v1219.translate(0, -10);
    v1219.globalAlpha = 1;
    v1219.beginPath();
    v1219.lineCap = "round";
    v1219.lineJoin = "round";
    v1219.moveTo(p815 * 47, p815 * 5);
    v1219.bezierCurveTo(p815 * 19, p815 * 30, p815 * 12, p815 * 42, p815 * 10, p815 * 55);
    v1219.bezierCurveTo(p815 * 11, p815 * 75, p815 * 27, p815 * 76, p815 * 36, p815 * 72);
    v1219.bezierCurveTo(p815 * 52, p815 * 60, p815 * 53, p815 * 46, p815 * 54, p815 * 31);
    v1219.bezierCurveTo(p815 * 53, p815 * 14, p815 * 50, p815 * 9, p815 * 48, p815 * 6);
    v1219.closePath();
    f90(v1219, p816[1], p816[2], p815 * 8);
    v1219.beginPath();
    v1219.lineCap = "round";
    v1219.lineJoin = "round";
    v1219.moveTo(p815 * 17, p815 * 70);
    v1219.bezierCurveTo(p815 * 18, p815 * 77, p815 * 10, p815 * 83, p815 * 4, p815 * 87);
    f90(v1219, vVVUndefined82, p816[2], p815 * 8);
    v1219.globalAlpha = 0.5;
    v1219.beginPath();
    v1219.lineCap = "round";
    v1219.lineJoin = "round";
    v1219.moveTo(p815 * 17, p815 * 70);
    v1219.bezierCurveTo(p815 * 33, p815 * 52, p815 * 39, p815 * 33, p815 * 48, p815 * 7);
    f90(v1219, vVVVVUndefined824, p816[2], p815 * 8);
    return v1218;
  }
  function f172(p817, p818, p819) {
    var v1220 = document.createElement("canvas");
    var v1221 = v1220.getContext("2d");
    var v1222 = p817 * 18;
    var v1223 = p817 * 18;
    v1220.width = v1222;
    v1220.height = v1223;
    var v1224 = p817 * 9;
    var v1225 = p817 * 9;
    var v1226 = p817 * 8;
    v1221.save();
    v1221.translate(v1224, v1225);
    v1221.globalAlpha = 1;
    f93(v1221, 0, 0, v1226);
    f90(v1221, p819[0]);
    v1226 = p817 * 3;
    v1224 = 0;
    v1225 = p817 * -3;
    v1221.translate(v1224, v1225);
    v1221.globalAlpha = 1;
    f93(v1221, 0, 0, v1226);
    f90(v1221, p819[1]);
    v1221.restore();
    return v1220;
  }
  function f173(p820, p821, p822) {
    var v1227 = document.createElement("canvas");
    var v1228 = v1227.getContext("2d");
    v1227.width = p820 * 309;
    v1227.height = p820 * 287;
    v1228.globalAlpha = p821 ? 0.5 : 1;
    v1228.translate(p820 * 10, p820 * 5);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 34.5, p820 * 38.53125);
    v1228.bezierCurveTo(p820 * 91.5, p820 * 30.53125, p820 * 138.5, p820 * 68.53125, p820 * 169.5, p820 * 93.53125);
    v1228.bezierCurveTo(p820 * 208.5, p820 * 128.53125, p820 * 226.5, p820 * 157.53125, p820 * 233.5, p820 * 209.53125);
    v1228.bezierCurveTo(p820 * 195.5, p820 * 218.53125, p820 * 138.5, p820 * 191.53125, p820 * 105.5, p820 * 157.53125);
    v1228.bezierCurveTo(p820 * 54.5, p820 * 112.53125, p820 * 41.5, p820 * 80.53125, p820 * 33.5, p820 * 38.53125);
    v1228.closePath();
    f90(v1228, p822[0], p822[0], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 143.5, p820 * 74.53125);
    v1228.bezierCurveTo(p820 * 164.5, p820 * 73.53125, p820 * 159, p820 * 74.53125, p820 * 174.5, p820 * 74.53125);
    v1228.bezierCurveTo(p820 * 186, p820 * 86.53125, p820 * 186, p820 * 86.53125, p820 * 197.5, p820 * 98.53125);
    v1228.bezierCurveTo(p820 * 186, p820 * 97.03125, p820 * 186, p820 * 97.03125, p820 * 174.5, p820 * 95.53125);
    v1228.closePath();
    f90(v1228, p822[0], p822[0], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 87.5, p820 * 142.53125);
    v1228.bezierCurveTo(p820 * 92, p820 * 160.03125, p820 * 92, p820 * 160.03125, p820 * 96.5, p820 * 177.53125);
    v1228.bezierCurveTo(p820 * 108, p820 * 181.53125, p820 * 108, p820 * 181.53125, p820 * 119.5, p820 * 185.53125);
    v1228.bezierCurveTo(p820 * 116.5, p820 * 175.53125, p820 * 116.5, p820 * 175.53125, p820 * 113.5, p820 * 165.53125);
    v1228.closePath();
    f90(v1228, p822[0], p822[0], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 236.5, p820 * 189.53125);
    v1228.bezierCurveTo(p820 * 274.5, p820 * 197.53125, p820 * 255.5, p820 * 194.03125, p820 * 274.5, p820 * 198.53125);
    v1228.bezierCurveTo(p820 * 272.5, p820 * 236.53125, p820 * 261.5, p820 * 237.53125, p820 * 242.5, p820 * 248.53125);
    v1228.bezierCurveTo(p820 * 230.5, p820 * 231.03125, p820 * 230.5, p820 * 231.03125, p820 * 218.5, p820 * 213.53125);
    v1228.closePath();
    f90(v1228, p822[0], p822[0], p820 * 10);
    v1228.globalAlpha = 1;
    v1228.translate(p820 * -10, p820 * -5);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 34.5, p820 * 38.53125);
    v1228.bezierCurveTo(p820 * 91.5, p820 * 30.53125, p820 * 138.5, p820 * 68.53125, p820 * 169.5, p820 * 93.53125);
    v1228.bezierCurveTo(p820 * 208.5, p820 * 128.53125, p820 * 226.5, p820 * 157.53125, p820 * 233.5, p820 * 209.53125);
    v1228.bezierCurveTo(p820 * 195.5, p820 * 218.53125, p820 * 138.5, p820 * 191.53125, p820 * 105.5, p820 * 157.53125);
    v1228.bezierCurveTo(p820 * 54.5, p820 * 112.53125, p820 * 41.5, p820 * 80.53125, p820 * 33.5, p820 * 38.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 143.5, p820 * 74.53125);
    v1228.bezierCurveTo(p820 * 164.5, p820 * 73.53125, p820 * 159, p820 * 74.53125, p820 * 174.5, p820 * 74.53125);
    v1228.bezierCurveTo(p820 * 186, p820 * 86.53125, p820 * 186, p820 * 86.53125, p820 * 197.5, p820 * 98.53125);
    v1228.bezierCurveTo(p820 * 186, p820 * 97.03125, p820 * 186, p820 * 97.03125, p820 * 174.5, p820 * 95.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 87.5, p820 * 142.53125);
    v1228.bezierCurveTo(p820 * 92, p820 * 160.03125, p820 * 92, p820 * 160.03125, p820 * 96.5, p820 * 177.53125);
    v1228.bezierCurveTo(p820 * 108, p820 * 181.53125, p820 * 108, p820 * 181.53125, p820 * 119.5, p820 * 185.53125);
    v1228.bezierCurveTo(p820 * 116.5, p820 * 175.53125, p820 * 116.5, p820 * 175.53125, p820 * 113.5, p820 * 165.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 236.5, p820 * 189.53125);
    v1228.bezierCurveTo(p820 * 274.5, p820 * 197.53125, p820 * 255.5, p820 * 194.03125, p820 * 274.5, p820 * 198.53125);
    v1228.bezierCurveTo(p820 * 272.5, p820 * 236.53125, p820 * 261.5, p820 * 237.53125, p820 * 242.5, p820 * 248.53125);
    v1228.bezierCurveTo(p820 * 230.5, p820 * 231.03125, p820 * 230.5, p820 * 231.03125, p820 * 218.5, p820 * 213.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 10);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 109.5, p820 * 51.53125);
    v1228.bezierCurveTo(p820 * 107.5, p820 * 92.53125, p820 * 91.5, p820 * 95.53125, p820 * 59.5, p820 * 101.53125);
    f90(v1228, p822[1], p822[2], p820 * 7);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 72.5, p820 * 51.53125);
    v1228.bezierCurveTo(p820 * 71, p820 * 64.53125, p820 * 69.5, p820 * 76.53125, p820 * 69.5, p820 * 77.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 7);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 84.5, p820 * 63.53125);
    v1228.bezierCurveTo(p820 * 70.5, p820 * 65.03125, p820 * 70.5, p820 * 65.03125, p820 * 56.5, p820 * 66.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 7);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 125.5, p820 * 84.53125);
    v1228.bezierCurveTo(p820 * 125.5, p820 * 110.03125, p820 * 125.5, p820 * 110.03125, p820 * 125.5, p820 * 135.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 7);
    v1228.beginPath();
    v1228.lineCap = "round";
    v1228.lineJoin = "round";
    v1228.moveTo(p820 * 149.5, p820 * 108.53125);
    v1228.bezierCurveTo(p820 * 150, p820 * 137.03125, p820 * 150, p820 * 137.03125, p820 * 150.5, p820 * 165.53125);
    v1228.closePath();
    f90(v1228, p822[1], p822[2], p820 * 7);
    return v1227;
  }
  function f174(p823, p824, p825) {
    var v1229 = document.createElement("canvas");
    var v1230 = v1229.getContext("2d");
    v1229.width = p823 * 217;
    v1229.height = p823 * 215;
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 79, p823 * 113);
    v1230.bezierCurveTo(p823 * 135, p823 * 98, p823 * 136, p823 * 96, p823 * 142, p823 * 97);
    v1230.bezierCurveTo(p823 * 167, p823 * 106, p823 * 167, p823 * 106, p823 * 171, p823 * 109);
    v1230.bezierCurveTo(p823 * 173, p823 * 120, p823 * 173, p823 * 134, p823 * 169, p823 * 141);
    v1230.bezierCurveTo(p823 * 140, p823 * 149.5, p823 * 140, p823 * 149.5, p823 * 111, p823 * 158);
    v1230.closePath();
    f90(v1230, p825[1], p825[2], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 154, p823 * 103);
    v1230.bezierCurveTo(p823 * 167, p823 * 91, p823 * 175, p823 * 87, p823 * 176, p823 * 94);
    v1230.bezierCurveTo(p823 * 175, p823 * 102, p823 * 176, p823 * 102, p823 * 186, p823 * 103);
    v1230.bezierCurveTo(p823 * 191, p823 * 104, p823 * 192, p823 * 105, p823 * 185, p823 * 116);
    v1230.bezierCurveTo(p823 * 183, p823 * 120, p823 * 191, p823 * 124, p823 * 189, p823 * 129);
    v1230.bezierCurveTo(p823 * 185, p823 * 139, p823 * 178, p823 * 134, p823 * 166, p823 * 131);
    v1230.closePath();
    f90(v1230, p825[1], p825[2], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 60, p823 * 46);
    v1230.bezierCurveTo(p823 * 60, p823 * 34, p823 * 60, p823 * 29, p823 * 56, p823 * 19);
    v1230.bezierCurveTo(p823 * 52, p823 * 12, p823 * 52, p823 * 16, p823 * 49, p823 * 24);
    v1230.bezierCurveTo(p823 * 48, p823 * 27, p823 * 46, p823 * 28, p823 * 39, p823 * 27);
    v1230.bezierCurveTo(p823 * 33, p823 * 26, p823 * 34, p823 * 31, p823 * 35, p823 * 37);
    v1230.bezierCurveTo(p823 * 36, p823 * 41, p823 * 27, p823 * 46, p823 * 29, p823 * 52);
    v1230.bezierCurveTo(p823 * 36, p823 * 55, p823 * 35, p823 * 56, p823 * 31, p823 * 59);
    v1230.bezierCurveTo(p823 * 27, p823 * 65, p823 * 32, p823 * 64, p823 * 35, p823 * 62);
    v1230.closePath();
    f90(v1230, p825[4], p825[5], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 46, p823 * 50);
    v1230.bezierCurveTo(p823 * 51, p823 * 35, p823 * 70, p823 * 32, p823 * 78, p823 * 29);
    v1230.bezierCurveTo(p823 * 84, p823 * 27, p823 * 113, p823 * 36, p823 * 127, p823 * 41);
    v1230.bezierCurveTo(p823 * 140, p823 * 47, p823 * 147, p823 * 69, p823 * 137, p823 * 73);
    v1230.bezierCurveTo(p823 * 124, p823 * 92, p823 * 117, p823 * 92, p823 * 109, p823 * 94);
    v1230.bezierCurveTo(p823 * 101, p823 * 96, p823 * 89, p823 * 92, p823 * 65, p823 * 83);
    v1230.bezierCurveTo(p823 * 54, p823 * 80, p823 * 46, p823 * 58, p823 * 46, p823 * 51);
    v1230.closePath();
    f90(v1230, p825[4], p825[5], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 51, p823 * 40);
    v1230.bezierCurveTo(p823 * 49, p823 * 34, p823 * 49, p823 * 34, p823 * 47, p823 * 28);
    v1230.bezierCurveTo(p823 * 38, p823 * 28, p823 * 34, p823 * 27, p823 * 37, p823 * 37);
    v1230.bezierCurveTo(p823 * 43, p823 * 40.5, p823 * 43, p823 * 40.5, p823 * 49, p823 * 44);
    v1230.closePath();
    f90(v1230, p825[7]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 29, p823 * 48);
    v1230.bezierCurveTo(p823 * 38, p823 * 49, p823 * 38, p823 * 49, p823 * 47, p823 * 50);
    v1230.bezierCurveTo(p823 * 46.5, p823 * 51.5, p823 * 46.5, p823 * 51.5, p823 * 46, p823 * 53);
    v1230.bezierCurveTo(p823 * 40, p823 * 53.5, p823 * 40, p823 * 53.5, p823 * 34, p823 * 54);
    v1230.bezierCurveTo(p823 * 29, p823 * 51, p823 * 32, p823 * 51.5, p823 * 30, p823 * 49);
    v1230.closePath();
    f90(v1230, p825[7]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 89, p823 * 61);
    v1230.bezierCurveTo(p823 * 101, p823 * 70, p823 * 109, p823 * 90, p823 * 102, p823 * 90);
    v1230.bezierCurveTo(p823 * 97, p823 * 91, p823 * 87, p823 * 91, p823 * 60, p823 * 80);
    v1230.bezierCurveTo(p823 * 48, p823 * 65, p823 * 46, p823 * 56, p823 * 48, p823 * 53);
    v1230.bezierCurveTo(p823 * 50, p823 * 52, p823 * 66, p823 * 56, p823 * 89, p823 * 61);
    v1230.closePath();
    f90(v1230, p825[7]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 99, p823 * 59);
    v1230.bezierCurveTo(p823 * 115, p823 * 45, p823 * 125, p823 * 42, p823 * 129, p823 * 47);
    v1230.bezierCurveTo(p823 * 138, p823 * 56, p823 * 140, p823 * 63, p823 * 138, p823 * 67);
    v1230.bezierCurveTo(p823 * 131, p823 * 80, p823 * 122, p823 * 87, p823 * 114, p823 * 90);
    v1230.bezierCurveTo(p823 * 105, p823 * 80, p823 * 95, p823 * 62, p823 * 98, p823 * 61);
    v1230.closePath();
    f90(v1230, p825[7]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 118, p823 * 62);
    v1230.bezierCurveTo(p823 * 139, p823 * 45, p823 * 153, p823 * 40, p823 * 150, p823 * 48);
    v1230.bezierCurveTo(p823 * 145, p823 * 57, p823 * 157, p823 * 63, p823 * 157, p823 * 70);
    v1230.bezierCurveTo(p823 * 157, p823 * 74, p823 * 142, p823 * 77, p823 * 142, p823 * 85);
    v1230.bezierCurveTo(p823 * 143, p823 * 91, p823 * 141, p823 * 92, p823 * 135, p823 * 90);
    v1230.bezierCurveTo(p823 * 132, p823 * 90, p823 * 132, p823 * 96, p823 * 124, p823 * 99);
    v1230.bezierCurveTo(p823 * 118, p823 * 93, p823 * 116, p823 * 77, p823 * 116, p823 * 64);
    v1230.closePath();
    f90(v1230, p825[4], p825[5], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 90, p823 * 130);
    v1230.bezierCurveTo(p823 * 157, p823 * 115, p823 * 165, p823 * 111, p823 * 167, p823 * 115);
    v1230.bezierCurveTo(p823 * 170, p823 * 117, p823 * 171, p823 * 135, p823 * 167, p823 * 141);
    v1230.bezierCurveTo(p823 * 135.5, p823 * 149.5, p823 * 135.5, p823 * 149.5, p823 * 104, p823 * 158);
    v1230.closePath();
    f90(v1230, p825[8]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 53, p823 * 119);
    v1230.bezierCurveTo(p823 * 46, p823 * 120, p823 * 40, p823 * 118, p823 * 34, p823 * 116);
    v1230.bezierCurveTo(p823 * 28, p823 * 111, p823 * 41, p823 * 112, p823 * 39, p823 * 108);
    v1230.bezierCurveTo(p823 * 36, p823 * 100, p823 * 49, p823 * 102, p823 * 53, p823 * 95);
    v1230.bezierCurveTo(p823 * 57, p823 * 84, p823 * 58, p823 * 85, p823 * 63, p823 * 93);
    v1230.bezierCurveTo(p823 * 68, p823 * 96, p823 * 72, p823 * 94, p823 * 80, p823 * 88);
    v1230.bezierCurveTo(p823 * 80, p823 * 96, p823 * 78, p823 * 107, p823 * 66, p823 * 115);
    v1230.closePath();
    f90(v1230, p825[9], p825[10], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 118, p823 * 64);
    v1230.bezierCurveTo(p823 * 133.5, p823 * 57, p823 * 133.5, p823 * 57, p823 * 149, p823 * 50);
    v1230.bezierCurveTo(p823 * 145, p823 * 54, p823 * 154, p823 * 65, p823 * 157, p823 * 68);
    v1230.bezierCurveTo(p823 * 138.5, p823 * 66.5, p823 * 138.5, p823 * 66.5, p823 * 120, p823 * 65);
    v1230.closePath();
    f90(v1230, p825[8]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 118, p823 * 65);
    v1230.bezierCurveTo(p823 * 129, p823 * 77, p823 * 129, p823 * 77, p823 * 140, p823 * 89);
    v1230.bezierCurveTo(p823 * 131, p823 * 89, p823 * 130, p823 * 92, p823 * 128, p823 * 96);
    v1230.bezierCurveTo(p823 * 123.5, p823 * 82, p823 * 123.5, p823 * 82, p823 * 119, p823 * 68);
    v1230.closePath();
    f90(v1230, p825[8]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 51, p823 * 112);
    v1230.bezierCurveTo(p823 * 63, p823 * 108, p823 * 78, p823 * 111, p823 * 88, p823 * 112);
    v1230.bezierCurveTo(p823 * 98, p823 * 122, p823 * 117, p823 * 136, p823 * 125, p823 * 157);
    v1230.bezierCurveTo(p823 * 123, p823 * 180, p823 * 123, p823 * 185, p823 * 118, p823 * 186);
    v1230.bezierCurveTo(p823 * 101, p823 * 190, p823 * 89, p823 * 191, p823 * 79, p823 * 187);
    v1230.bezierCurveTo(p823 * 53, p823 * 165, p823 * 50, p823 * 153, p823 * 47, p823 * 144);
    v1230.bezierCurveTo(p823 * 46, p823 * 128, p823 * 46, p823 * 124, p823 * 50, p823 * 112);
    v1230.closePath();
    f90(v1230, p825[9], p825[10], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 50, p823 * 114);
    v1230.bezierCurveTo(p823 * 81, p823 * 149, p823 * 80, p823 * 147, p823 * 80, p823 * 149);
    v1230.bezierCurveTo(p823 * 82, p823 * 155, p823 * 80, p823 * 182, p823 * 74, p823 * 182);
    v1230.bezierCurveTo(p823 * 60, p823 * 172, p823 * 52, p823 * 157, p823 * 47, p823 * 144);
    v1230.closePath();
    f90(v1230, p825[11], p825[11], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 85, p823 * 152);
    v1230.bezierCurveTo(p823 * 99, p823 * 150, p823 * 109, p823 * 152, p823 * 119, p823 * 156);
    v1230.bezierCurveTo(p823 * 122, p823 * 163, p823 * 122, p823 * 174, p823 * 117, p823 * 182);
    v1230.closePath();
    v1230.bezierCurveTo(p823 * 93, p823 * 188, p823 * 82, p823 * 187, p823 * 83, p823 * 179);
    f90(v1230, p825[11], p825[11], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 104, p823 * 166);
    v1230.bezierCurveTo(p823 * 133, p823 * 165, p823 * 142, p823 * 168, p823 * 137, p823 * 173);
    v1230.bezierCurveTo(p823 * 127, p823 * 177, p823 * 137, p823 * 195, p823 * 126, p823 * 196);
    v1230.bezierCurveTo(p823 * 112, p823 * 195, p823 * 112, p823 * 194, p823 * 109, p823 * 199);
    v1230.bezierCurveTo(p823 * 105, p823 * 205, p823 * 102, p823 * 195, p823 * 96, p823 * 197);
    v1230.bezierCurveTo(p823 * 84, p823 * 201, p823 * 88, p823 * 198, p823 * 90, p823 * 187);
    v1230.bezierCurveTo(p823 * 96, p823 * 171, p823 * 97, p823 * 170, p823 * 103, p823 * 167);
    v1230.closePath();
    f90(v1230, p825[9], p825[10], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 105, p823 * 168);
    v1230.bezierCurveTo(p823 * 118, p823 * 172.5, p823 * 118, p823 * 172.5, p823 * 131, p823 * 177);
    v1230.bezierCurveTo(p823 * 133, p823 * 190, p823 * 132, p823 * 199, p823 * 116, p823 * 194);
    v1230.bezierCurveTo(p823 * 110, p823 * 182, p823 * 110, p823 * 182, p823 * 104, p823 * 170);
    v1230.closePath();
    f90(v1230, p825[10]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 102, p823 * 169);
    v1230.bezierCurveTo(p823 * 100.5, p823 * 182, p823 * 100.5, p823 * 182, p823 * 99, p823 * 195);
    v1230.bezierCurveTo(p823 * 93.5, p823 * 196.5, p823 * 93.5, p823 * 196.5, p823 * 88, p823 * 198);
    v1230.bezierCurveTo(p823 * 94, p823 * 176, p823 * 96, p823 * 174, p823 * 101, p823 * 168);
    v1230.closePath();
    f90(v1230, p825[9], p825[9], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 64, p823 * 107);
    v1230.bezierCurveTo(p823 * 64, p823 * 101, p823 * 64, p823 * 101, p823 * 64, p823 * 95);
    v1230.bezierCurveTo(p823 * 57, p823 * 86, p823 * 57, p823 * 84, p823 * 53, p823 * 97);
    v1230.bezierCurveTo(p823 * 55, p823 * 103.5, p823 * 55, p823 * 103.5, p823 * 57, p823 * 110);
    v1230.closePath();
    f90(v1230, p825[11], p825[11], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 40, p823 * 108);
    v1230.bezierCurveTo(p823 * 46.5, p823 * 111, p823 * 46.5, p823 * 111, p823 * 53, p823 * 114);
    v1230.bezierCurveTo(p823 * 50.5, p823 * 117, p823 * 50.5, p823 * 117, p823 * 48, p823 * 120);
    v1230.bezierCurveTo(p823 * 40.5, p823 * 117.5, p823 * 40.5, p823 * 117.5, p823 * 33, p823 * 115);
    v1230.bezierCurveTo(p823 * 36, p823 * 112, p823 * 36, p823 * 112, p823 * 39, p823 * 109);
    v1230.closePath();
    f90(v1230, p825[11], p825[11], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 189, p823 * 106);
    v1230.bezierCurveTo(p823 * 178.5, p823 * 110.5, p823 * 178.5, p823 * 110.5, p823 * 168, p823 * 115);
    v1230.bezierCurveTo(p823 * 168.5, p823 * 119, p823 * 168.5, p823 * 119, p823 * 169, p823 * 123);
    v1230.bezierCurveTo(p823 * 179, p823 * 124.5, p823 * 179, p823 * 124.5, p823 * 189, p823 * 126);
    v1230.bezierCurveTo(p823 * 182, p823 * 118, p823 * 183, p823 * 115, p823 * 188, p823 * 106);
    v1230.closePath();
    f90(v1230, p825[8]);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 69, p823 * 178);
    v1230.bezierCurveTo(p823 * 69, p823 * 141, p823 * 70, p823 * 136, p823 * 77, p823 * 137);
    v1230.bezierCurveTo(p823 * 88, p823 * 133, p823 * 101, p823 * 134, p823 * 108, p823 * 137);
    f90(v1230, vVUndefined13, p825[3], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 55, p823 * 161);
    v1230.bezierCurveTo(p823 * 54, p823 * 124, p823 * 55, p823 * 119, p823 * 62, p823 * 119);
    v1230.bezierCurveTo(p823 * 74, p823 * 117, p823 * 85, p823 * 117, p823 * 93, p823 * 119);
    f90(v1230, vVUndefined, p825[3], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 91, p823 * 29);
    v1230.bezierCurveTo(p823 * 74, p823 * 33, p823 * 62, p823 * 46, p823 * 57, p823 * 54);
    v1230.bezierCurveTo(p823 * 57, p823 * 63, p823 * 68, p823 * 76, p823 * 77, p823 * 87);
    f90(v1230, vVVVUndefined824, p825[6], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 107, p823 * 33);
    v1230.bezierCurveTo(p823 * 82, p823 * 51, p823 * 80, p823 * 52, p823 * 79, p823 * 59);
    v1230.bezierCurveTo(p823 * 78, p823 * 65, p823 * 93, p823 * 86, p823 * 101, p823 * 93);
    f90(v1230, undefined, p825[6], p823 * 4);
    v1230.beginPath();
    v1230.lineCap = "round";
    v1230.lineJoin = "round";
    v1230.moveTo(p823 * 130, p823 * 98);
    v1230.bezierCurveTo(p823 * 126.5, p823 * 103, p823 * 126.5, p823 * 103, p823 * 123, p823 * 108);
    v1230.bezierCurveTo(p823 * 133.5, p823 * 107, p823 * 133.5, p823 * 107, p823 * 144, p823 * 106);
    v1230.bezierCurveTo(p823 * 138.5, p823 * 110, p823 * 138.5, p823 * 110, p823 * 133, p823 * 114);
    v1230.bezierCurveTo(p823 * 142, p823 * 114, p823 * 142, p823 * 114, p823 * 151, p823 * 114);
    v1230.bezierCurveTo(p823 * 146.5, p823 * 119.5, p823 * 146.5, p823 * 119.5, p823 * 142, p823 * 125);
    v1230.bezierCurveTo(p823 * 146.5, p823 * 127, p823 * 146.5, p823 * 127, p823 * 151, p823 * 129);
    v1230.bezierCurveTo(p823 * 147.5, p823 * 132, p823 * 147.5, p823 * 132, p823 * 144, p823 * 135);
    v1230.bezierCurveTo(p823 * 148, p823 * 137, p823 * 148, p823 * 137, p823 * 152, p823 * 139);
    v1230.bezierCurveTo(p823 * 149, p823 * 142.5, p823 * 149, p823 * 142.5, p823 * 146, p823 * 146);
    f90(v1230, vUndefined, p825[3], p823 * 4);
    return v1229;
  }
  function f175(p826, p827, p828) {
    var v1231 = document.createElement("canvas");
    var v1232 = v1231.getContext("2d");
    v1231.width = p826 * 220;
    v1231.height = p826 * 180;
    v1232.globalAlpha = p827 ? 0.5 : 1;
    v1232.translate(p826 * -90, p826 * -150);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 104, p826 * 237.8000030517578);
    v1232.bezierCurveTo(p826 * 110, p826 * 237.8000030517578, p826 * 110, p826 * 237.8000030517578, p826 * 116, p826 * 237.8000030517578);
    v1232.bezierCurveTo(p826 * 116, p826 * 241.8000030517578, p826 * 116, p826 * 241.8000030517578, p826 * 116, p826 * 245.8000030517578);
    v1232.bezierCurveTo(p826 * 115, p826 * 245.3000030517578, p826 * 115, p826 * 245.3000030517578, p826 * 114, p826 * 244.8000030517578);
    v1232.bezierCurveTo(p826 * 109.5, p826 * 244.8000030517578, p826 * 109.5, p826 * 244.8000030517578, p826 * 105, p826 * 244.8000030517578);
    v1232.closePath();
    f90(v1232, p828[5], p828[5], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 115, p826 * 211.20000457763672);
    v1232.bezierCurveTo(p826 * 106, p826 * 216.20000457763672, p826 * 101, p826 * 234.20000457763672, p826 * 102, p826 * 241.20000457763672);
    v1232.bezierCurveTo(p826 * 102, p826 * 260.2000045776367, p826 * 115, p826 * 269.2000045776367, p826 * 115, p826 * 269.2000045776367);
    v1232.bezierCurveTo(p826 * 116, p826 * 265.2000045776367, p826 * 115.5, p826 * 265.2000045776367, p826 * 116, p826 * 261.2000045776367);
    v1232.bezierCurveTo(p826 * 112, p826 * 264, p826 * 108, p826 * 254, p826 * 106, p826 * 242);
    v1232.bezierCurveTo(p826 * 105, p826 * 232, p826 * 110, p826 * 222, p826 * 115, p826 * 218);
    v1232.bezierCurveTo(p826 * 116, p826 * 216.75, p826 * 115.5, p826 * 217.375, p826 * 116, p826 * 216.75);
    v1232.closePath();
    f90(v1232, p828[5], p828[5], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 120, p826 * 207);
    v1232.bezierCurveTo(p826 * 115, p826 * 206, p826 * 114, p826 * 209, p826 * 114, p826 * 211);
    v1232.bezierCurveTo(p826 * 114, p826 * 268, p826 * 114, p826 * 241, p826 * 114, p826 * 271);
    v1232.bezierCurveTo(p826 * 115, p826 * 276, p826 * 118, p826 * 276, p826 * 120, p826 * 276);
    v1232.bezierCurveTo(p826 * 122, p826 * 273, p826 * 120.5, p826 * 274.5, p826 * 121, p826 * 273);
    v1232.bezierCurveTo(p826 * 121, p826 * 241, p826 * 121, p826 * 241, p826 * 121, p826 * 209);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 284, p826 * 238);
    v1232.bezierCurveTo(p826 * 289.5, p826 * 238, p826 * 289.5, p826 * 238, p826 * 295, p826 * 238);
    v1232.bezierCurveTo(p826 * 295, p826 * 241.5, p826 * 295, p826 * 241.5, p826 * 295, p826 * 245);
    v1232.bezierCurveTo(p826 * 289.5, p826 * 245, p826 * 289.5, p826 * 245, p826 * 284, p826 * 245);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 283, p826 * 211);
    v1232.bezierCurveTo(p826 * 293, p826 * 216, p826 * 297, p826 * 231, p826 * 297, p826 * 241);
    v1232.bezierCurveTo(p826 * 298, p826 * 254, p826 * 290, p826 * 265, p826 * 284, p826 * 269);
    v1232.bezierCurveTo(p826 * 283, p826 * 266, p826 * 283.5, p826 * 266, p826 * 283, p826 * 263);
    v1232.bezierCurveTo(p826 * 290, p826 * 260, p826 * 292, p826 * 251, p826 * 293, p826 * 242);
    v1232.bezierCurveTo(p826 * 292, p826 * 223, p826 * 289, p826 * 224, p826 * 284, p826 * 218);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 280, p826 * 206);
    v1232.bezierCurveTo(p826 * 284, p826 * 206, p826 * 285, p826 * 208, p826 * 285, p826 * 211);
    v1232.bezierCurveTo(p826 * 285, p826 * 241.5, p826 * 285, p826 * 241.5, p826 * 285, p826 * 272);
    v1232.bezierCurveTo(p826 * 284, p826 * 275, p826 * 284, p826 * 275, p826 * 280, p826 * 275);
    v1232.bezierCurveTo(p826 * 279, p826 * 273.5, p826 * 279, p826 * 273.5, p826 * 278, p826 * 272);
    v1232.bezierCurveTo(p826 * 278, p826 * 240.5, p826 * 278, p826 * 240.5, p826 * 278, p826 * 209);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 138, p826 * 298.40000915527344);
    v1232.bezierCurveTo(p826 * 141, p826 * 311.40000915527344, p826 * 151, p826 * 314.40000915527344, p826 * 162, p826 * 316.40000915527344);
    v1232.bezierCurveTo(p826 * 224, p826 * 316.40000915527344, p826 * 200, p826 * 315.90000915527344, p826 * 238, p826 * 315.40000915527344);
    v1232.bezierCurveTo(p826 * 254, p826 * 316.40000915527344, p826 * 261, p826 * 306.40000915527344, p826 * 264, p826 * 298.40000915527344);
    v1232.bezierCurveTo(p826 * 255, p826 * 304.40000915527344, p826 * 250, p826 * 306.40000915527344, p826 * 244, p826 * 306.40000915527344);
    v1232.bezierCurveTo(p826 * 201, p826 * 306.90000915527344, p826 * 201, p826 * 306.90000915527344, p826 * 158, p826 * 307.40000915527344);
    v1232.bezierCurveTo(p826 * 150, p826 * 306.40000915527344, p826 * 148, p826 * 306.40000915527344, p826 * 139, p826 * 300.40000915527344);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 161, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 130, p826 * 175.5999984741211, p826 * 123, p826 * 190.5999984741211, p826 * 122, p826 * 205.5999984741211);
    v1232.bezierCurveTo(p826 * 121, p826 * 277.5999984741211, p826 * 122, p826 * 242.5999984741211, p826 * 122, p826 * 279.5999984741211);
    v1232.bezierCurveTo(p826 * 128, p826 * 297.5999984741211, p826 * 137, p826 * 299.5999984741211, p826 * 143, p826 * 300.5999984741211);
    v1232.bezierCurveTo(p826 * 163, p826 * 301.0999984741211, p826 * 163, p826 * 301.0999984741211, p826 * 183, p826 * 301.5999984741211);
    v1232.bezierCurveTo(p826 * 150, p826 * 300.5999984741211, p826 * 135, p826 * 290.5999984741211, p826 * 134, p826 * 267.5999984741211);
    v1232.bezierCurveTo(p826 * 133, p826 * 245.5999984741211, p826 * 146, p826 * 235.5999984741211, p826 * 164, p826 * 235.5999984741211);
    v1232.bezierCurveTo(p826 * 206, p826 * 236.0999984741211, p826 * 206, p826 * 236.0999984741211, p826 * 248, p826 * 236.5999984741211);
    v1232.bezierCurveTo(p826 * 266, p826 * 243.5999984741211, p826 * 268, p826 * 259.5999984741211, p826 * 267, p826 * 266.5999984741211);
    v1232.bezierCurveTo(p826 * 266, p826 * 288.5999984741211, p826 * 251, p826 * 294.5999984741211, p826 * 244, p826 * 297.5999984741211);
    v1232.bezierCurveTo(p826 * 228.5, p826 * 299.5999984741211, p826 * 228.5, p826 * 299.5999984741211, p826 * 213, p826 * 301.5999984741211);
    v1232.bezierCurveTo(p826 * 236, p826 * 301.0999984741211, p826 * 236, p826 * 301.0999984741211, p826 * 259, p826 * 300.5999984741211);
    v1232.bezierCurveTo(p826 * 272, p826 * 295.5999984741211, p826 * 277, p826 * 288.5999984741211, p826 * 278, p826 * 271.5999984741211);
    v1232.bezierCurveTo(p826 * 277.5, p826 * 236.5999984741211, p826 * 277.5, p826 * 236.5999984741211, p826 * 277, p826 * 201.5999984741211);
    v1232.bezierCurveTo(p826 * 276, p826 * 186.5999984741211, p826 * 265, p826 * 178.5999984741211, p826 * 254, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 247.5, p826 * 177.5999984741211, p826 * 247.5, p826 * 177.5999984741211, p826 * 241, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 255, p826 * 202.5999984741211, p826 * 214, p826 * 217.5999984741211, p826 * 201, p826 * 215.5999984741211);
    v1232.bezierCurveTo(p826 * 170, p826 * 215.5999984741211, p826 * 152, p826 * 197.5999984741211, p826 * 161, p826 * 178.5999984741211);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 162, p826 * 175.5999984741211);
    v1232.bezierCurveTo(p826 * 153, p826 * 176.0999984741211, p826 * 153, p826 * 176.0999984741211, p826 * 144, p826 * 176.5999984741211);
    v1232.bezierCurveTo(p826 * 125, p826 * 178.5999984741211, p826 * 121, p826 * 196.5999984741211, p826 * 121, p826 * 207.5999984741211);
    v1232.bezierCurveTo(p826 * 121, p826 * 243.20000076293945, p826 * 121, p826 * 243.20000076293945, p826 * 121, p826 * 278.8000030517578);
    v1232.bezierCurveTo(p826 * 126, p826 * 298.8000030517578, p826 * 137, p826 * 300.8000030517578, p826 * 146, p826 * 302.8000030517578);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 302.8000030517578, p826 * 200.5, p826 * 302.8000030517578, p826 * 255, p826 * 302.8000030517578);
    v1232.bezierCurveTo(p826 * 271, p826 * 301.8000030517578, p826 * 279, p826 * 288.8000030517578, p826 * 279, p826 * 273.8000030517578);
    v1232.bezierCurveTo(p826 * 279, p826 * 236.8000030517578, p826 * 279, p826 * 236.8000030517578, p826 * 279, p826 * 199.8000030517578);
    v1232.bezierCurveTo(p826 * 274, p826 * 178.8000030517578, p826 * 263, p826 * 177.8000030517578, p826 * 255, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 248, p826 * 175.8000030517578, p826 * 248, p826 * 175.8000030517578, p826 * 241, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 240, p826 * 175.8000030517578, p826 * 240, p826 * 175.8000030517578, p826 * 239, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 254, p826 * 200.8000030517578, p826 * 222, p826 * 211.8000030517578, p826 * 202, p826 * 212.8000030517578);
    v1232.bezierCurveTo(p826 * 168, p826 * 213.8000030517578, p826 * 151, p826 * 190.8000030517578, p826 * 163, p826 * 176.8000030517578);
    v1232.closePath();
    f90(v1232, undefined, p828[4], p826 * 6);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 198, p826 * 161.4000015258789);
    v1232.bezierCurveTo(p826 * 198, p826 * 186.9000015258789, p826 * 198, p826 * 186.9000015258789, p826 * 198, p826 * 212.4000015258789);
    v1232.bezierCurveTo(p826 * 201, p826 * 212.4000015258789, p826 * 201, p826 * 212.4000015258789, p826 * 204, p826 * 212.4000015258789);
    v1232.bezierCurveTo(p826 * 204, p826 * 186.9000015258789, p826 * 204, p826 * 186.9000015258789, p826 * 204, p826 * 161.4000015258789);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 161, p826 * 194);
    v1232.bezierCurveTo(p826 * 188, p826 * 169, p826 * 231, p826 * 179, p826 * 241, p826 * 194);
    v1232.bezierCurveTo(p826 * 239.5, p826 * 196, p826 * 239.5, p826 * 196, p826 * 238, p826 * 198);
    v1232.bezierCurveTo(p826 * 221, p826 * 179, p826 * 182, p826 * 182, p826 * 165, p826 * 198);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 157, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 162, p826 * 150.80000019073486, p826 * 241, p826 * 150.80000019073486, p826 * 245, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 242, p826 * 224.80000019073486, p826 * 162, p826 * 228.80000019073486, p826 * 157, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 159, p826 * 188.80000019073486, p826 * 159, p826 * 188.80000019073486, p826 * 161, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 168, p826 * 216.80000019073486, p826 * 231, p826 * 218.80000019073486, p826 * 241, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 236, p826 * 156.80000019073486, p826 * 169, p826 * 152.80000019073486, p826 * 161, p826 * 188.80000019073486);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 156, p826 * 188);
    v1232.bezierCurveTo(p826 * 160, p826 * 164, p826 * 183, p826 * 159, p826 * 201, p826 * 158);
    v1232.bezierCurveTo(p826 * 232, p826 * 159, p826 * 244, p826 * 174, p826 * 246, p826 * 188);
    v1232.bezierCurveTo(p826 * 245, p826 * 212, p826 * 213, p826 * 219, p826 * 201, p826 * 218);
    v1232.bezierCurveTo(p826 * 181, p826 * 221, p826 * 158, p826 * 207, p826 * 156, p826 * 190);
    v1232.closePath();
    f90(v1232, undefined, p828[4], p826 * 6);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 162, p826 * 189);
    v1232.bezierCurveTo(p826 * 166, p826 * 170, p826 * 185, p826 * 165, p826 * 201, p826 * 164);
    v1232.bezierCurveTo(p826 * 227, p826 * 165, p826 * 240, p826 * 178, p826 * 239, p826 * 188);
    v1232.bezierCurveTo(p826 * 239, p826 * 204, p826 * 210, p826 * 210, p826 * 201, p826 * 210);
    v1232.bezierCurveTo(p826 * 182, p826 * 211, p826 * 166, p826 * 200, p826 * 162, p826 * 190);
    v1232.closePath();
    f90(v1232, vVVVUndefined824, p828[4], p826 * 6);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 131, p826 * 262);
    v1232.bezierCurveTo(p826 * 136, p826 * 241, p826 * 144, p826 * 236, p826 * 158, p826 * 233);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 233, p826 * 229, p826 * 232, p826 * 243, p826 * 233);
    v1232.bezierCurveTo(p826 * 259, p826 * 235, p826 * 267, p826 * 248, p826 * 269, p826 * 260);
    v1232.bezierCurveTo(p826 * 269, p826 * 266.5, p826 * 269, p826 * 266.5, p826 * 269, p826 * 273);
    v1232.bezierCurveTo(p826 * 265, p826 * 290, p826 * 251, p826 * 297, p826 * 242, p826 * 298);
    v1232.bezierCurveTo(p826 * 202, p826 * 298, p826 * 202, p826 * 298, p826 * 162, p826 * 298);
    v1232.bezierCurveTo(p826 * 148, p826 * 298, p826 * 136, p826 * 289, p826 * 132, p826 * 273);
    v1232.bezierCurveTo(p826 * 131.5, p826 * 268, p826 * 131.5, p826 * 268, p826 * 131, p826 * 263);
    v1232.bezierCurveTo(p826 * 135, p826 * 263, p826 * 135, p826 * 263, p826 * 139, p826 * 263);
    v1232.bezierCurveTo(p826 * 139, p826 * 281, p826 * 151, p826 * 287, p826 * 160, p826 * 290);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 290, p826 * 200.5, p826 * 290, p826 * 241, p826 * 290);
    v1232.bezierCurveTo(p826 * 252, p826 * 290, p826 * 257, p826 * 281, p826 * 262, p826 * 271);
    v1232.bezierCurveTo(p826 * 261.5, p826 * 267, p826 * 261.5, p826 * 267, p826 * 261, p826 * 263);
    v1232.bezierCurveTo(p826 * 260, p826 * 249, p826 * 251, p826 * 242, p826 * 241, p826 * 241);
    v1232.bezierCurveTo(p826 * 240.5, p826 * 240.5, p826 * 240.5, p826 * 240.5, p826 * 240, p826 * 240);
    v1232.bezierCurveTo(p826 * 200, p826 * 240, p826 * 200, p826 * 240, p826 * 160, p826 * 240);
    v1232.bezierCurveTo(p826 * 145, p826 * 244, p826 * 142, p826 * 250, p826 * 139, p826 * 264);
    v1232.closePath();
    f90(v1232, p828[4], p828[4], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 130, p826 * 264);
    v1232.bezierCurveTo(p826 * 132, p826 * 244, p826 * 144, p826 * 235, p826 * 157, p826 * 232);
    v1232.bezierCurveTo(p826 * 245, p826 * 232, p826 * 201, p826 * 232, p826 * 245, p826 * 232);
    v1232.bezierCurveTo(p826 * 264, p826 * 235, p826 * 269, p826 * 251, p826 * 270, p826 * 264);
    v1232.bezierCurveTo(p826 * 272, p826 * 291, p826 * 248, p826 * 299, p826 * 242, p826 * 299);
    v1232.bezierCurveTo(p826 * 200, p826 * 299, p826 * 200, p826 * 299, p826 * 158, p826 * 299);
    v1232.bezierCurveTo(p826 * 139, p826 * 298, p826 * 130, p826 * 276, p826 * 130, p826 * 265);
    v1232.closePath();
    f90(v1232, vVVVUndefined13, p828[4], p826 * 6);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 140, p826 * 265.33333587646484);
    v1232.bezierCurveTo(p826 * 141, p826 * 250.33333587646484, p826 * 148, p826 * 244.33333587646484, p826 * 160, p826 * 241.33333587646484);
    v1232.bezierCurveTo(p826 * 200, p826 * 241.33333587646484, p826 * 200, p826 * 241.33333587646484, p826 * 240, p826 * 241.33333587646484);
    v1232.bezierCurveTo(p826 * 256, p826 * 243.33333587646484, p826 * 260, p826 * 255.33333587646484, p826 * 260, p826 * 265.33333587646484);
    v1232.bezierCurveTo(p826 * 261, p826 * 281.33333587646484, p826 * 247, p826 * 289.33333587646484, p826 * 240, p826 * 289.33333587646484);
    v1232.bezierCurveTo(p826 * 161, p826 * 289.33333587646484, p826 * 200.5, p826 * 289.33333587646484, p826 * 161, p826 * 289.33333587646484);
    v1232.bezierCurveTo(p826 * 149, p826 * 288.33333587646484, p826 * 142, p826 * 278.33333587646484, p826 * 140, p826 * 266.33333587646484);
    v1232.closePath();
    f90(v1232, undefined, p828[4], p826 * 6);
    v1232.globalAlpha = 0.5;
    v1232.scale(1, 1);
    v1232.translate(p826 * 105, p826 * 155);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 59.27557373046875, p826 * 20.406280517578125);
    v1232.bezierCurveTo(p826 * 74.27557373046875, p826 * 5.406280517578125, p826 * 90.27557373046875, p826 * 6.406280517578125, p826 * 99.27557373046875, p826 * 5.406280517578125);
    v1232.bezierCurveTo(p826 * 120.27557373046875, p826 * 5.406280517578125, p826 * 126.27557373046875, p826 * 10.406280517578125, p826 * 136.27557373046875, p826 * 20.406280517578125);
    v1232.bezierCurveTo(p826 * 157.77557373046875, p826 * 37.906280517578125, p826 * 157.77557373046875, p826 * 37.906280517578125, p826 * 179.27557373046875, p826 * 55.406280517578125);
    v1232.bezierCurveTo(p826 * 190.27557373046875, p826 * 63.406280517578125, p826 * 192.27557373046875, p826 * 77.40628051757812, p826 * 189.27557373046875, p826 * 91.40628051757812);
    v1232.bezierCurveTo(p826 * 183.27557373046875, p826 * 108.40628051757812, p826 * 176.27557373046875, p826 * 110.40628051757812, p826 * 169.27557373046875, p826 * 118.40628051757812);
    v1232.bezierCurveTo(p826 * 152.27557373046875, p826 * 133.40628051757812, p826 * 152.27557373046875, p826 * 133.40628051757812, p826 * 135.27557373046875, p826 * 148.40628051757812);
    v1232.bezierCurveTo(p826 * 87.27557373046875, p826 * 143.40628051757812, p826 * 87.27557373046875, p826 * 143.40628051757812, p826 * 39.27557373046875, p826 * 138.40628051757812);
    v1232.bezierCurveTo(p826 * 26.77557373046875, p826 * 123.40628051757812, p826 * 26.77557373046875, p826 * 123.40628051757812, p826 * 14.27557373046875, p826 * 108.40628051757812);
    v1232.bezierCurveTo(p826 * 2.27557373046875, p826 * 95.40628051757812, p826 * 2.27557373046875, p826 * 92.40628051757812, p826 * 3.27557373046875, p826 * 83.40628051757812);
    v1232.bezierCurveTo(p826 * 4.27557373046875, p826 * 63.406280517578125, p826 * 12.27557373046875, p826 * 60.406280517578125, p826 * 24.27557373046875, p826 * 40.406280517578125);
    v1232.closePath();
    f90(v1232, p828[5], p828[5], p826 * 4);
    v1232.globalAlpha = 1;
    v1232.translate(p826 * -110, p826 * -155);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 104, p826 * 237.8000030517578);
    v1232.bezierCurveTo(p826 * 110, p826 * 237.8000030517578, p826 * 110, p826 * 237.8000030517578, p826 * 116, p826 * 237.8000030517578);
    v1232.bezierCurveTo(p826 * 116, p826 * 241.8000030517578, p826 * 116, p826 * 241.8000030517578, p826 * 116, p826 * 245.8000030517578);
    v1232.bezierCurveTo(p826 * 115, p826 * 245.3000030517578, p826 * 115, p826 * 245.3000030517578, p826 * 114, p826 * 244.8000030517578);
    v1232.bezierCurveTo(p826 * 109.5, p826 * 244.8000030517578, p826 * 109.5, p826 * 244.8000030517578, p826 * 105, p826 * 244.8000030517578);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 115, p826 * 211.20000457763672);
    v1232.bezierCurveTo(p826 * 106, p826 * 216.20000457763672, p826 * 101, p826 * 234.20000457763672, p826 * 102, p826 * 241.20000457763672);
    v1232.bezierCurveTo(p826 * 102, p826 * 260.2000045776367, p826 * 115, p826 * 269.2000045776367, p826 * 115, p826 * 269.2000045776367);
    v1232.bezierCurveTo(p826 * 116, p826 * 265.2000045776367, p826 * 115.5, p826 * 265.2000045776367, p826 * 116, p826 * 261.2000045776367);
    v1232.bezierCurveTo(p826 * 112, p826 * 264, p826 * 108, p826 * 254, p826 * 106, p826 * 242);
    v1232.bezierCurveTo(p826 * 105, p826 * 232, p826 * 110, p826 * 222, p826 * 115, p826 * 218);
    v1232.bezierCurveTo(p826 * 116, p826 * 216.75, p826 * 115.5, p826 * 217.375, p826 * 116, p826 * 216.75);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 120, p826 * 207);
    v1232.bezierCurveTo(p826 * 115, p826 * 206, p826 * 114, p826 * 209, p826 * 114, p826 * 211);
    v1232.bezierCurveTo(p826 * 114, p826 * 268, p826 * 114, p826 * 241, p826 * 114, p826 * 271);
    v1232.bezierCurveTo(p826 * 115, p826 * 276, p826 * 118, p826 * 276, p826 * 120, p826 * 276);
    v1232.bezierCurveTo(p826 * 122, p826 * 273, p826 * 120.5, p826 * 274.5, p826 * 121, p826 * 273);
    v1232.bezierCurveTo(p826 * 121, p826 * 241, p826 * 121, p826 * 241, p826 * 121, p826 * 209);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 284, p826 * 238);
    v1232.bezierCurveTo(p826 * 289.5, p826 * 238, p826 * 289.5, p826 * 238, p826 * 295, p826 * 238);
    v1232.bezierCurveTo(p826 * 295, p826 * 241.5, p826 * 295, p826 * 241.5, p826 * 295, p826 * 245);
    v1232.bezierCurveTo(p826 * 289.5, p826 * 245, p826 * 289.5, p826 * 245, p826 * 284, p826 * 245);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 283, p826 * 211);
    v1232.bezierCurveTo(p826 * 293, p826 * 216, p826 * 297, p826 * 231, p826 * 297, p826 * 241);
    v1232.bezierCurveTo(p826 * 298, p826 * 254, p826 * 290, p826 * 265, p826 * 284, p826 * 269);
    v1232.bezierCurveTo(p826 * 283, p826 * 266, p826 * 283.5, p826 * 266, p826 * 283, p826 * 263);
    v1232.bezierCurveTo(p826 * 290, p826 * 260, p826 * 292, p826 * 251, p826 * 293, p826 * 242);
    v1232.bezierCurveTo(p826 * 292, p826 * 223, p826 * 289, p826 * 224, p826 * 284, p826 * 218);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 280, p826 * 206);
    v1232.bezierCurveTo(p826 * 284, p826 * 206, p826 * 285, p826 * 208, p826 * 285, p826 * 211);
    v1232.bezierCurveTo(p826 * 285, p826 * 241.5, p826 * 285, p826 * 241.5, p826 * 285, p826 * 272);
    v1232.bezierCurveTo(p826 * 284, p826 * 275, p826 * 284, p826 * 275, p826 * 280, p826 * 275);
    v1232.bezierCurveTo(p826 * 279, p826 * 273.5, p826 * 279, p826 * 273.5, p826 * 278, p826 * 272);
    v1232.bezierCurveTo(p826 * 278, p826 * 240.5, p826 * 278, p826 * 240.5, p826 * 278, p826 * 209);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 138, p826 * 298.40000915527344);
    v1232.bezierCurveTo(p826 * 141, p826 * 311.40000915527344, p826 * 151, p826 * 314.40000915527344, p826 * 162, p826 * 316.40000915527344);
    v1232.bezierCurveTo(p826 * 224, p826 * 316.40000915527344, p826 * 200, p826 * 315.90000915527344, p826 * 238, p826 * 315.40000915527344);
    v1232.bezierCurveTo(p826 * 254, p826 * 316.40000915527344, p826 * 261, p826 * 306.40000915527344, p826 * 264, p826 * 298.40000915527344);
    v1232.bezierCurveTo(p826 * 255, p826 * 304.40000915527344, p826 * 250, p826 * 306.40000915527344, p826 * 244, p826 * 306.40000915527344);
    v1232.bezierCurveTo(p826 * 201, p826 * 306.90000915527344, p826 * 201, p826 * 306.90000915527344, p826 * 158, p826 * 307.40000915527344);
    v1232.bezierCurveTo(p826 * 150, p826 * 306.40000915527344, p826 * 148, p826 * 306.40000915527344, p826 * 139, p826 * 300.40000915527344);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 161, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 130, p826 * 175.5999984741211, p826 * 123, p826 * 190.5999984741211, p826 * 122, p826 * 205.5999984741211);
    v1232.bezierCurveTo(p826 * 121, p826 * 277.5999984741211, p826 * 122, p826 * 242.5999984741211, p826 * 122, p826 * 279.5999984741211);
    v1232.bezierCurveTo(p826 * 128, p826 * 297.5999984741211, p826 * 137, p826 * 299.5999984741211, p826 * 143, p826 * 300.5999984741211);
    v1232.bezierCurveTo(p826 * 163, p826 * 301.0999984741211, p826 * 163, p826 * 301.0999984741211, p826 * 183, p826 * 301.5999984741211);
    v1232.bezierCurveTo(p826 * 150, p826 * 300.5999984741211, p826 * 135, p826 * 290.5999984741211, p826 * 134, p826 * 267.5999984741211);
    v1232.bezierCurveTo(p826 * 133, p826 * 245.5999984741211, p826 * 146, p826 * 235.5999984741211, p826 * 164, p826 * 235.5999984741211);
    v1232.bezierCurveTo(p826 * 206, p826 * 236.0999984741211, p826 * 206, p826 * 236.0999984741211, p826 * 248, p826 * 236.5999984741211);
    v1232.bezierCurveTo(p826 * 266, p826 * 243.5999984741211, p826 * 268, p826 * 259.5999984741211, p826 * 267, p826 * 266.5999984741211);
    v1232.bezierCurveTo(p826 * 266, p826 * 288.5999984741211, p826 * 251, p826 * 294.5999984741211, p826 * 244, p826 * 297.5999984741211);
    v1232.bezierCurveTo(p826 * 228.5, p826 * 299.5999984741211, p826 * 228.5, p826 * 299.5999984741211, p826 * 213, p826 * 301.5999984741211);
    v1232.bezierCurveTo(p826 * 236, p826 * 301.0999984741211, p826 * 236, p826 * 301.0999984741211, p826 * 259, p826 * 300.5999984741211);
    v1232.bezierCurveTo(p826 * 272, p826 * 295.5999984741211, p826 * 277, p826 * 288.5999984741211, p826 * 278, p826 * 271.5999984741211);
    v1232.bezierCurveTo(p826 * 277.5, p826 * 236.5999984741211, p826 * 277.5, p826 * 236.5999984741211, p826 * 277, p826 * 201.5999984741211);
    v1232.bezierCurveTo(p826 * 276, p826 * 186.5999984741211, p826 * 265, p826 * 178.5999984741211, p826 * 254, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 247.5, p826 * 177.5999984741211, p826 * 247.5, p826 * 177.5999984741211, p826 * 241, p826 * 177.5999984741211);
    v1232.bezierCurveTo(p826 * 255, p826 * 202.5999984741211, p826 * 214, p826 * 217.5999984741211, p826 * 201, p826 * 215.5999984741211);
    v1232.bezierCurveTo(p826 * 170, p826 * 215.5999984741211, p826 * 152, p826 * 197.5999984741211, p826 * 161, p826 * 178.5999984741211);
    v1232.closePath();
    f90(v1232, p828[2], p828[2], p826 * 4);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 162, p826 * 175.5999984741211);
    v1232.bezierCurveTo(p826 * 153, p826 * 176.0999984741211, p826 * 153, p826 * 176.0999984741211, p826 * 144, p826 * 176.5999984741211);
    v1232.bezierCurveTo(p826 * 125, p826 * 178.5999984741211, p826 * 121, p826 * 196.5999984741211, p826 * 121, p826 * 207.5999984741211);
    v1232.bezierCurveTo(p826 * 121, p826 * 243.20000076293945, p826 * 121, p826 * 243.20000076293945, p826 * 121, p826 * 278.8000030517578);
    v1232.bezierCurveTo(p826 * 126, p826 * 298.8000030517578, p826 * 137, p826 * 300.8000030517578, p826 * 146, p826 * 302.8000030517578);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 302.8000030517578, p826 * 200.5, p826 * 302.8000030517578, p826 * 255, p826 * 302.8000030517578);
    v1232.bezierCurveTo(p826 * 271, p826 * 301.8000030517578, p826 * 279, p826 * 288.8000030517578, p826 * 279, p826 * 273.8000030517578);
    v1232.bezierCurveTo(p826 * 279, p826 * 236.8000030517578, p826 * 279, p826 * 236.8000030517578, p826 * 279, p826 * 199.8000030517578);
    v1232.bezierCurveTo(p826 * 274, p826 * 178.8000030517578, p826 * 263, p826 * 177.8000030517578, p826 * 255, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 248, p826 * 175.8000030517578, p826 * 248, p826 * 175.8000030517578, p826 * 241, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 240, p826 * 175.8000030517578, p826 * 240, p826 * 175.8000030517578, p826 * 239, p826 * 175.8000030517578);
    v1232.bezierCurveTo(p826 * 254, p826 * 200.8000030517578, p826 * 222, p826 * 211.8000030517578, p826 * 202, p826 * 212.8000030517578);
    v1232.bezierCurveTo(p826 * 168, p826 * 213.8000030517578, p826 * 151, p826 * 190.8000030517578, p826 * 163, p826 * 176.8000030517578);
    v1232.closePath();
    f90(v1232, vVVVVUndefined132, p828[3], p826 * 6);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 198, p826 * 161.4000015258789);
    v1232.bezierCurveTo(p826 * 198, p826 * 186.9000015258789, p826 * 198, p826 * 186.9000015258789, p826 * 198, p826 * 212.4000015258789);
    v1232.bezierCurveTo(p826 * 201, p826 * 212.4000015258789, p826 * 201, p826 * 212.4000015258789, p826 * 204, p826 * 212.4000015258789);
    v1232.bezierCurveTo(p826 * 204, p826 * 186.9000015258789, p826 * 204, p826 * 186.9000015258789, p826 * 204, p826 * 161.4000015258789);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 161, p826 * 194);
    v1232.bezierCurveTo(p826 * 188, p826 * 169, p826 * 231, p826 * 179, p826 * 241, p826 * 194);
    v1232.bezierCurveTo(p826 * 239.5, p826 * 196, p826 * 239.5, p826 * 196, p826 * 238, p826 * 198);
    v1232.bezierCurveTo(p826 * 221, p826 * 179, p826 * 182, p826 * 182, p826 * 165, p826 * 198);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 157, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 162, p826 * 150.80000019073486, p826 * 241, p826 * 150.80000019073486, p826 * 245, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 242, p826 * 224.80000019073486, p826 * 162, p826 * 228.80000019073486, p826 * 157, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 159, p826 * 188.80000019073486, p826 * 159, p826 * 188.80000019073486, p826 * 161, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 168, p826 * 216.80000019073486, p826 * 231, p826 * 218.80000019073486, p826 * 241, p826 * 188.80000019073486);
    v1232.bezierCurveTo(p826 * 236, p826 * 156.80000019073486, p826 * 169, p826 * 152.80000019073486, p826 * 161, p826 * 188.80000019073486);
    v1232.closePath();
    f90(v1232, p828[0], p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 156, p826 * 188);
    v1232.bezierCurveTo(p826 * 160, p826 * 164, p826 * 183, p826 * 159, p826 * 201, p826 * 158);
    v1232.bezierCurveTo(p826 * 232, p826 * 159, p826 * 244, p826 * 174, p826 * 246, p826 * 188);
    v1232.bezierCurveTo(p826 * 245, p826 * 212, p826 * 213, p826 * 219, p826 * 201, p826 * 218);
    v1232.bezierCurveTo(p826 * 181, p826 * 221, p826 * 158, p826 * 207, p826 * 156, p826 * 190);
    v1232.closePath();
    f90(v1232, vVVVUndefined82, p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 162, p826 * 189);
    v1232.bezierCurveTo(p826 * 166, p826 * 170, p826 * 185, p826 * 165, p826 * 201, p826 * 164);
    v1232.bezierCurveTo(p826 * 227, p826 * 165, p826 * 240, p826 * 178, p826 * 239, p826 * 188);
    v1232.bezierCurveTo(p826 * 239, p826 * 204, p826 * 210, p826 * 210, p826 * 201, p826 * 210);
    v1232.bezierCurveTo(p826 * 182, p826 * 211, p826 * 166, p826 * 200, p826 * 162, p826 * 190);
    v1232.closePath();
    f90(v1232, vVVVVUndefined824, p828[1], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 131, p826 * 262);
    v1232.bezierCurveTo(p826 * 136, p826 * 241, p826 * 144, p826 * 236, p826 * 158, p826 * 233);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 233, p826 * 229, p826 * 232, p826 * 243, p826 * 233);
    v1232.bezierCurveTo(p826 * 259, p826 * 235, p826 * 267, p826 * 248, p826 * 269, p826 * 260);
    v1232.bezierCurveTo(p826 * 269, p826 * 266.5, p826 * 269, p826 * 266.5, p826 * 269, p826 * 273);
    v1232.bezierCurveTo(p826 * 265, p826 * 290, p826 * 251, p826 * 297, p826 * 242, p826 * 298);
    v1232.bezierCurveTo(p826 * 202, p826 * 298, p826 * 202, p826 * 298, p826 * 162, p826 * 298);
    v1232.bezierCurveTo(p826 * 148, p826 * 298, p826 * 136, p826 * 289, p826 * 132, p826 * 273);
    v1232.bezierCurveTo(p826 * 131.5, p826 * 268, p826 * 131.5, p826 * 268, p826 * 131, p826 * 263);
    v1232.bezierCurveTo(p826 * 135, p826 * 263, p826 * 135, p826 * 263, p826 * 139, p826 * 263);
    v1232.bezierCurveTo(p826 * 139, p826 * 281, p826 * 151, p826 * 287, p826 * 160, p826 * 290);
    v1232.bezierCurveTo(p826 * 200.5, p826 * 290, p826 * 200.5, p826 * 290, p826 * 241, p826 * 290);
    v1232.bezierCurveTo(p826 * 252, p826 * 290, p826 * 257, p826 * 281, p826 * 262, p826 * 271);
    v1232.bezierCurveTo(p826 * 261.5, p826 * 267, p826 * 261.5, p826 * 267, p826 * 261, p826 * 263);
    v1232.bezierCurveTo(p826 * 260, p826 * 249, p826 * 251, p826 * 242, p826 * 241, p826 * 241);
    v1232.bezierCurveTo(p826 * 240.5, p826 * 240.5, p826 * 240.5, p826 * 240.5, p826 * 240, p826 * 240);
    v1232.bezierCurveTo(p826 * 200, p826 * 240, p826 * 200, p826 * 240, p826 * 160, p826 * 240);
    v1232.bezierCurveTo(p826 * 145, p826 * 244, p826 * 142, p826 * 250, p826 * 139, p826 * 264);
    v1232.closePath();
    f90(v1232, p828[0], p828[0], p826 * 2);
    v1232.beginPath();
    v1232.lineCap = "round";
    v1232.lineJoin = "round";
    v1232.moveTo(p826 * 130, p826 * 264);
    v1232.bezierCurveTo(p826 * 132, p826 * 244, p826 * 144, p826 * 235, p826 * 157, p826 * 232);
    v1232.bezierCurveTo(p826 * 245, p826 * 232, p826 * 201, p826 * 232, p826 * 245, p826 * 232);
    v1232.bezierCurveTo(p826 * 264, p826 * 235, p826 * 269, p826 * 251, p826 * 270, p826 * 264);
    v1232.bezierCurveTo(p826 * 272, p826 * 291, p826 * 248, p826 * 299, p826 * 242, p826 * 299);
    v1232.bezierCurveTo(p826 * 200, p826 * 299, p826 * 200, p826 * 299, p826 * 158, p826 * 299);
    v1232.bezierCurveTo(p826 * 139, p826 * 298, p826 * 130, p826 * 276, p826 * 130, p826 * 265);
    v1232.closePath();
    f90(v1232, undefined, p828[1], p826 * 2);
    return v1231;
  }
  function f176(p829, p830, p831) {
    var v1233 = document.createElement("canvas");
    var v1234 = v1233.getContext("2d");
    var v1235 = p829 * 120;
    var v1236 = p829 * 150;
    var v1237 = p829 * 60;
    var v1238 = v1237 / 4;
    var v1239 = p829 * 15;
    v1233.width = v1235;
    v1233.height = v1236;
    v1234.save();
    v1234.translate(v1235 / 2 + p829 * 0, v1236 / 2 + p829 * 0 + v1239);
    v1234.rotate(Math.PI / 3);
    v1234.globalAlpha = 0.5;
    f88(v1234, 8, v1237, v1238);
    f90(v1234, p831[0]);
    v1234.restore();
    v1234.save();
    v1234.translate(v1235 / 2 - p829 * 11, v1236 / 2 + p829 * 12);
    v1234.globalAlpha = 1;
    v1234.rotate(Math.PI / 3);
    v1234.translate(0, -v1239);
    f88(v1234, 8, v1237, v1238);
    f90(v1234, p831[1]);
    v1234.restore();
    v1234.save();
    v1234.translate(v1235 / 2 - p829 * 9, v1236 / 2 - p829 * 12);
    v1234.rotate(Math.PI / 2.8);
    f88(v1234, 5, v1237 * 0.5, v1238 * 0.4);
    f90(v1234, p831[2]);
    v1234.restore();
    v1234.save();
    v1234.translate(v1235 / 2 + p829 * 19, v1236 / 2 + p829 * 5);
    v1234.rotate(Math.PI / 1);
    f88(v1234, 5, v1237 * 0.5, v1238 * 0.4);
    f90(v1234, p831[2]);
    v1234.restore();
    v1234.save();
    v1234.translate(v1235 / 2 - p829 * 8, v1236 / 2 + p829 * 20);
    v1234.rotate(Math.PI / 2.25);
    f88(v1234, 5, v1237 * 0.5, v1238 * 0.4);
    f90(v1234, p831[2]);
    v1234.restore();
    return v1233;
  }
  function f177(p832, p833, p834) {
    var v1240 = document.createElement("canvas");
    var v1241 = v1240.getContext("2d");
    v1240.width = p832 * 400;
    v1240.height = p832 * 400;
    v1241.globalAlpha = p833 ? 0.5 : 1;
    v1241.translate(p832 * 10, p832 * 5);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 100.5, p832 * 126.34375);
    v1241.bezierCurveTo(p832 * 151.5, p832 * 104.34375, p832 * 279.5, p832 * 188.34375, p832 * 297.5, p832 * 292.34375);
    v1241.bezierCurveTo(p832 * 222.5, p832 * 307.34375, p832 * 106.5, p832 * 196.34375, p832 * 100.5, p832 * 127.34375);
    v1241.closePath();
    f90(v1241, p834[0], p834[0], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 106.5, p832 * 131.34375);
    v1241.bezierCurveTo(p832 * 140.5, p832 * 142.34375, p832 * 225.5, p832 * 184.34375, p832 * 290.5, p832 * 287.34375);
    v1241.bezierCurveTo(p832 * 270.5, p832 * 188.34375, p832 * 152.5, p832 * 118.34375, p832 * 107.5, p832 * 131.34375);
    v1241.closePath();
    f90(v1241, p834[0]);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 157.5, p832 * 137.34375);
    v1241.bezierCurveTo(p832 * 161.5, p832 * 138.34375, p832 * 164.5, p832 * 140.34375, p832 * 168.5, p832 * 142.34375);
    v1241.bezierCurveTo(p832 * 165.5, p832 * 156.34375, p832 * 141.5, p832 * 176.34375, p832 * 126.5, p832 * 179.34375);
    v1241.bezierCurveTo(p832 * 123.5, p832 * 173.34375, p832 * 120.5, p832 * 169.34375, p832 * 120.5, p832 * 169.34375);
    v1241.bezierCurveTo(p832 * 141.5, p832 * 161.34375, p832 * 156.5, p832 * 145.34375, p832 * 155.5, p832 * 136.34375);
    v1241.closePath();
    f90(v1241, p834[0]);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 196.5, p832 * 151.34375);
    v1241.bezierCurveTo(p832 * 211.5, p832 * 158.34375, p832 * 224.5, p832 * 171.34375, p832 * 229.5, p832 * 176.34375);
    v1241.bezierCurveTo(p832 * 246.5, p832 * 163.34375, p832 * 259.5, p832 * 166.34375, p832 * 272.5, p832 * 168.34375);
    v1241.bezierCurveTo(p832 * 254.5, p832 * 146.34375, p832 * 214.5, p832 * 145.34375, p832 * 198.5, p832 * 151.34375);
    v1241.closePath();
    f90(v1241, p834[0], p834[0], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 154.5, p832 * 222.34375);
    v1241.bezierCurveTo(p832 * 164.5, p832 * 234.34375, p832 * 173.5, p832 * 242.34375, p832 * 178.5, p832 * 245.34375);
    v1241.bezierCurveTo(p832 * 174.5, p832 * 265.34375, p832 * 180.5, p832 * 274.34375, p832 * 186.5, p832 * 283.34375);
    v1241.bezierCurveTo(p832 * 165.5, p832 * 277.34375, p832 * 151.5, p832 * 245.34375, p832 * 155.5, p832 * 224.34375);
    v1241.closePath();
    f90(v1241, p834[0], p834[0], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 279.5, p832 * 294.34375);
    v1241.bezierCurveTo(p832 * 286.5, p832 * 285.84375, p832 * 286.5, p832 * 285.84375, p832 * 293.5, p832 * 277.34375);
    v1241.bezierCurveTo(p832 * 315.5, p832 * 280.34375, p832 * 315.5, p832 * 280.34375, p832 * 337.5, p832 * 283.34375);
    v1241.bezierCurveTo(p832 * 340.5, p832 * 311.34375, p832 * 317.5, p832 * 326.34375, p832 * 307.5, p832 * 331.34375);
    v1241.closePath();
    f90(v1241, p834[0], p834[0], p832 * 12);
    v1241.globalAlpha = 1;
    v1241.translate(p832 * -10, p832 * -5);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 100.5, p832 * 126.34375);
    v1241.bezierCurveTo(p832 * 151.5, p832 * 104.34375, p832 * 279.5, p832 * 188.34375, p832 * 297.5, p832 * 292.34375);
    v1241.bezierCurveTo(p832 * 222.5, p832 * 307.34375, p832 * 106.5, p832 * 196.34375, p832 * 100.5, p832 * 127.34375);
    v1241.closePath();
    f90(v1241, p834[1], p834[2], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 106.5, p832 * 131.34375);
    v1241.bezierCurveTo(p832 * 140.5, p832 * 142.34375, p832 * 225.5, p832 * 184.34375, p832 * 290.5, p832 * 287.34375);
    v1241.bezierCurveTo(p832 * 270.5, p832 * 188.34375, p832 * 152.5, p832 * 118.34375, p832 * 107.5, p832 * 131.34375);
    v1241.closePath();
    f90(v1241, p834[3]);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 157.5, p832 * 137.34375);
    v1241.bezierCurveTo(p832 * 161.5, p832 * 138.34375, p832 * 164.5, p832 * 140.34375, p832 * 168.5, p832 * 142.34375);
    v1241.bezierCurveTo(p832 * 165.5, p832 * 156.34375, p832 * 141.5, p832 * 176.34375, p832 * 126.5, p832 * 179.34375);
    v1241.bezierCurveTo(p832 * 123.5, p832 * 173.34375, p832 * 120.5, p832 * 169.34375, p832 * 120.5, p832 * 169.34375);
    v1241.bezierCurveTo(p832 * 141.5, p832 * 161.34375, p832 * 156.5, p832 * 145.34375, p832 * 155.5, p832 * 136.34375);
    v1241.closePath();
    f90(v1241, p834[4]);
    f93(v1241, p832 * 125.5, p832 * 140.34375, p832 * 11.180339887498949);
    f90(v1241, p834[5]);
    f93(v1241, p832 * 122.5, p832 * 135.34375, p832 * 5.0990195135927845);
    f90(v1241, p834[6]);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 196.5, p832 * 151.34375);
    v1241.bezierCurveTo(p832 * 211.5, p832 * 158.34375, p832 * 224.5, p832 * 171.34375, p832 * 229.5, p832 * 176.34375);
    v1241.bezierCurveTo(p832 * 246.5, p832 * 163.34375, p832 * 259.5, p832 * 166.34375, p832 * 272.5, p832 * 168.34375);
    v1241.bezierCurveTo(p832 * 254.5, p832 * 146.34375, p832 * 214.5, p832 * 145.34375, p832 * 198.5, p832 * 151.34375);
    v1241.closePath();
    f90(v1241, p834[7], p834[8], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 154.5, p832 * 222.34375);
    v1241.bezierCurveTo(p832 * 164.5, p832 * 234.34375, p832 * 173.5, p832 * 242.34375, p832 * 178.5, p832 * 245.34375);
    v1241.bezierCurveTo(p832 * 174.5, p832 * 265.34375, p832 * 180.5, p832 * 274.34375, p832 * 186.5, p832 * 283.34375);
    v1241.bezierCurveTo(p832 * 165.5, p832 * 277.34375, p832 * 151.5, p832 * 245.34375, p832 * 155.5, p832 * 224.34375);
    v1241.closePath();
    f90(v1241, p834[7], p834[8], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 279.5, p832 * 294.34375);
    v1241.bezierCurveTo(p832 * 286.5, p832 * 285.84375, p832 * 286.5, p832 * 285.84375, p832 * 293.5, p832 * 277.34375);
    v1241.bezierCurveTo(p832 * 315.5, p832 * 280.34375, p832 * 315.5, p832 * 280.34375, p832 * 337.5, p832 * 283.34375);
    v1241.bezierCurveTo(p832 * 340.5, p832 * 311.34375, p832 * 317.5, p832 * 326.34375, p832 * 307.5, p832 * 331.34375);
    v1241.closePath();
    f90(v1241, p834[7], p834[8], p832 * 12);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 296.5, p832 * 287.34375);
    v1241.bezierCurveTo(p832 * 311.5, p832 * 291.34375, p832 * 311.5, p832 * 291.34375, p832 * 326.5, p832 * 295.34375);
    v1241.closePath();
    f90(v1241, vVVVUndefined132, p834[9], p832 * 6);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 294.5, p832 * 289.34375);
    v1241.bezierCurveTo(p832 * 308.5, p832 * 297.34375, p832 * 308.5, p832 * 297.34375, p832 * 322.5, p832 * 305.34375);
    v1241.closePath();
    f90(v1241, vVVVVUndefined823, p834[9], p832 * 6);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 294.5, p832 * 291.34375);
    v1241.bezierCurveTo(p832 * 304, p832 * 303.34375, p832 * 304, p832 * 303.34375, p832 * 313.5, p832 * 315.34375);
    v1241.closePath();
    f90(v1241, vVVVUndefined82, p834[9], p832 * 6);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 226.5, p832 * 161.34375);
    v1241.bezierCurveTo(p832 * 230.5, p832 * 160.34375, p832 * 236.5, p832 * 158.34375, p832 * 238.5, p832 * 161.34375);
    v1241.bezierCurveTo(p832 * 238.5, p832 * 157.34375, p832 * 228.5, p832 * 159.34375, p832 * 227.5, p832 * 161.34375);
    v1241.closePath();
    f90(v1241, vVVVUndefined824, p834[9], p832 * 4);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p832 * 167.5, p832 * 248.34375);
    v1241.bezierCurveTo(p832 * 165.5, p832 * 251.34375, p832 * 168.5, p832 * 256.34375, p832 * 168.5, p832 * 253.34375);
    v1241.bezierCurveTo(p832 * 166.5, p832 * 252.34375, p832 * 168.5, p832 * 246.34375, p832 * 166.5, p832 * 247.34375);
    v1241.closePath();
    f90(v1241, undefined, p834[9], p832 * 3);
    return v1240;
  }
  function f178(p835, p836, p837) {
    var v1242 = document.createElement("canvas");
    var v1243 = v1242.getContext("2d");
    v1242.width = p835 * 125;
    v1242.height = p835 * 139;
    v1243.globalAlpha = p836 ? 0.5 : 1;
    v1243.save();
    v1243.translate(p835 * 63, p835 * 79);
    v1243.rotate(1);
    f88(v1243, 8, p835 * 60, p835 * 10);
    f90(v1243, p837[0]);
    v1243.restore();
    v1243.globalAlpha = 1;
    v1243.save();
    v1243.translate(p835 * 63, p835 * 69);
    v1243.rotate(1);
    f88(v1243, 8, p835 * 60, p835 * 10);
    f90(v1243, p837[1], p837[2], 4);
    v1243.rotate(0.56);
    f88(v1243, 8, p835 * 40, p835 * 10);
    f90(v1243, p837[3], p837[4], 4);
    v1243.rotate(0.28);
    f88(v1243, 8, p835 * 28, p835 * 8);
    f90(v1243, p837[5]);
    v1243.restore();
    return v1242;
  }
  const v1244 = 3;
  function f179(p838, p839, p840) {
    var v1245 = document.createElement("canvas");
    var v1246 = v1245.getContext("2d");
    v1245.width = p838 * 89;
    v1245.height = p838 * 89;
    v1246.save();
    v1246.translate(p838 * 44.5, p838 * 44.5);
    f88(v1246, 6, p838 * 40, p838 * 10);
    v1246.restore();
    f90(v1246, p840[0], p840[1], p838 * 5);
    v1246.save();
    v1246.translate(p838 * 44.5, p838 * 44.5);
    f88(v1246, 6, p838 * 25.11521001172521, p838 * 10);
    v1246.restore();
    f90(v1246, p840[2], p840[3], p838 * 5);
    return v1245;
  }
  function f180(p841, p842, p843) {
    var v1247 = (v1248 = document.createElement("canvas")).getContext("2d");
    if (p843 == 0) {
      v1248.width = p841 * 566;
      v1248.height = p841 * 429;
      v1247.beginPath();
      v1247.lineCap = "round";
      v1247.lineJoin = "round";
      v1247.moveTo(p841 * 312.625, p841 * 39.046875);
      v1247.bezierCurveTo(p841 * 456.625, p841 * 60.046875, p841 * 521.625, p841 * 134.046875, p841 * 528.625, p841 * 199.046875);
      v1247.bezierCurveTo(p841 * 540.625, p841 * 298.046875, p841 * 491.625, p841 * 364.046875, p841 * 405.625, p841 * 394.046875);
      v1247.bezierCurveTo(p841 * 270.625, p841 * 429.046875, p841 * 182.625, p841 * 395.046875, p841 * 100.625, p841 * 344.046875);
      v1247.bezierCurveTo(p841 * 15.625, p841 * 283.046875, p841 * 20.625, p841 * 195.046875, p841 * 33.625, p841 * 158.046875);
      v1247.bezierCurveTo(p841 * 56.625, p841 * 80.046875, p841 * 102.625, p841 * 46.046875, p841 * 183.625, p841 * 33.046875);
      v1247.bezierCurveTo(p841 * 225.625, p841 * 25.046875, p841 * 270.625, p841 * 30.046875, p841 * 312.625, p841 * 39.046875);
      v1247.closePath();
      f90(v1247, p842[0]);
    } else if (p843 == 1) {
      v1247 = (v1248 = document.createElement("canvas")).getContext("2d");
      v1248.width = p841 * 511;
      v1248.height = p841 * 408;
      v1247.beginPath();
      v1247.lineCap = "round";
      v1247.lineJoin = "round";
      v1247.moveTo(p841 * 141.625, p841 * 49.296875);
      v1247.bezierCurveTo(p841 * 225.625, p841 * 10.296875, p841 * 320.625, p841 * 16.296875, p841 * 390.625, p841 * 39.296875);
      v1247.bezierCurveTo(p841 * 476.625, p841 * 71.296875, p841 * 483.625, p841 * 142.296875, p841 * 486.625, p841 * 197.296875);
      v1247.bezierCurveTo(p841 * 491.625, p841 * 289.296875, p841 * 462.625, p841 * 317.296875, p841 * 417.625, p841 * 351.296875);
      v1247.bezierCurveTo(p841 * 367.625, p841 * 385.296875, p841 * 313.625, p841 * 404.296875, p841 * 218.625, p841 * 395.296875);
      v1247.bezierCurveTo(p841 * 108.625, p841 * 381.296875, p841 * 81.625, p841 * 350.296875, p841 * 52.625, p841 * 305.296875);
      v1247.bezierCurveTo(p841 * 16.625, p841 * 244.296875, p841 * 23.625, p841 * 171.296875, p841 * 37.625, p841 * 145.296875);
      v1247.bezierCurveTo(p841 * 65.625, p841 * 84.296875, p841 * 97.625, p841 * 74.296875, p841 * 141.625, p841 * 49.296875);
      v1247.closePath();
      f90(v1247, p842[0]);
    } else if (p843 == 2) {
      var v1248;
      v1247 = (v1248 = document.createElement("canvas")).getContext("2d");
      v1248.width = p841 * 504;
      v1248.height = p841 * 408;
      v1247.beginPath();
      v1247.lineCap = "round";
      v1247.lineJoin = "round";
      v1247.moveTo(p841 * 153.625, p841 * 46.296875);
      v1247.bezierCurveTo(p841 * 271.625, p841 * 17.296875, p841 * 345.625, p841 * 35.296875, p841 * 410.625, p841 * 71.296875);
      v1247.bezierCurveTo(p841 * 473.625, p841 * 109.296875, p841 * 478.625, p841 * 167.296875, p841 * 473.625, p841 * 205.296875);
      v1247.bezierCurveTo(p841 * 462.625, p841 * 295.296875, p841 * 438.625, p841 * 316.296875, p841 * 388.625, p841 * 345.296875);
      v1247.bezierCurveTo(p841 * 331.625, p841 * 374.296875, p841 * 273.625, p841 * 392.296875, p841 * 180.625, p841 * 387.296875);
      v1247.bezierCurveTo(p841 * 111.625, p841 * 380.296875, p841 * 86.625, p841 * 360.296875, p841 * 51.625, p841 * 309.296875);
      v1247.bezierCurveTo(p841 * 23.625, p841 * 267.296875, p841 * 25.625, p841 * 226.296875, p841 * 27.625, p841 * 175.296875);
      v1247.bezierCurveTo(p841 * 37.625, p841 * 99.296875, p841 * 88.625, p841 * 57.296875, p841 * 153.625, p841 * 46.296875);
      v1247.closePath();
      f90(v1247, p842[0]);
    }
    return v1248;
  }
  function f181(p844, p845, p846) {
    var v1249 = document.createElement("canvas");
    var v1250 = v1249.getContext("2d");
    v1249.width = p844 * 142;
    v1249.height = p844 * 118;
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 111, p844 * 27.3671875);
    v1250.bezierCurveTo(p844 * 128, p844 * 9.3671875, p844 * 125, p844 * 13.3671875, p844 * 126, p844 * 21.3671875);
    v1250.bezierCurveTo(p844 * 126, p844 * 33.3671875, p844 * 119, p844 * 43.3671875, p844 * 118, p844 * 42.3671875);
    v1250.closePath();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 31, p844 * 23.3671875);
    v1250.bezierCurveTo(p844 * 17, p844 * 15.3671875, p844 * 16, p844 * 14.3671875, p844 * 17, p844 * 20.3671875);
    v1250.bezierCurveTo(p844 * 22, p844 * 33.3671875, p844 * 20, p844 * 27.3671875, p844 * 24, p844 * 34.3671875);
    v1250.closePath();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.save();
    v1250.translate(p844 * 70.5, p844 * 34.8671875);
    v1250.rotate(0);
    f87(v1250, p844 * -49.5, p844 * -21.5, p844 * 99, p844 * 43, p844 * 15);
    v1250.restore();
    f90(v1250, p846[0], p846[1], p844 * 4);
    v1250.save();
    v1250.translate(p844 * 71, p844 * 40.8671875);
    v1250.rotate(0);
    f87(v1250, p844 * -49, p844 * -12.5, p844 * 98, p844 * 25, p844 * 15);
    v1250.restore();
    f90(v1250, p846[2], p846[1], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 19.800003051757812, p844 * 75.95625305175781);
    v1250.bezierCurveTo(p844 * 19.300003051757812, p844 * 82.95625305175781, p844 * 19.300003051757812, p844 * 82.95625305175781, p844 * 18.800003051757812, p844 * 89.95625305175781);
    v1250.bezierCurveTo(p844 * 38.80000305175781, p844 * 115.95625305175781, p844 * 37.80000305175781, p844 * 104.95625305175781, p844 * 31.800003051757812, p844 * 91.95625305175781);
    v1250.closePath();
    f90(v1250, p846[2], p846[1], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 119.80000305175781, p844 * 75.95625305175781);
    v1250.bezierCurveTo(p844 * 120.80000305175781, p844 * 82.95625305175781, p844 * 120.80000305175781, p844 * 82.95625305175781, p844 * 121.80000305175781, p844 * 89.95625305175781);
    v1250.bezierCurveTo(p844 * 101.80000305175781, p844 * 111.95625305175781, p844 * 99.80000305175781, p844 * 111.95625305175781, p844 * 112.80000305175781, p844 * 81.95625305175781);
    v1250.closePath();
    f90(v1250, p846[2], p846[1], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 17.800003051757812, p844 * 49.15625);
    v1250.bezierCurveTo(p844 * 17.800003051757812, p844 * 64.15625, p844 * 17.800003051757812, p844 * 64.15625, p844 * 17.800003051757812, p844 * 79.15625);
    v1250.bezierCurveTo(p844 * 23.300003051757812, p844 * 85.15625, p844 * 23.300003051757812, p844 * 85.15625, p844 * 28.800003051757812, p844 * 91.15625);
    v1250.bezierCurveTo(p844 * 36.80000305175781, p844 * 96.15625, p844 * 32.80000305175781, p844 * 91.15625, p844 * 28.800003051757812, p844 * 77.15625);
    v1250.bezierCurveTo(p844 * 33.80000305175781, p844 * 65.15625, p844 * 33.80000305175781, p844 * 65.15625, p844 * 38.80000305175781, p844 * 53.15625);
    v1250.closePath();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 123.80000305175781, p844 * 53.95625305175781);
    v1250.bezierCurveTo(p844 * 121.80000305175781, p844 * 77.95625305175781, p844 * 121.80000305175781, p844 * 74.95625305175781, p844 * 121.80000305175781, p844 * 78.95625305175781);
    v1250.bezierCurveTo(p844 * 115.80000305175781, p844 * 84.95625305175781, p844 * 115.80000305175781, p844 * 84.95625305175781, p844 * 109.80000305175781, p844 * 90.95625305175781);
    v1250.bezierCurveTo(p844 * 102.80000305175781, p844 * 93.95625305175781, p844 * 105.80000305175781, p844 * 86.95625305175781, p844 * 110.80000305175781, p844 * 76.95625305175781);
    v1250.bezierCurveTo(p844 * 107.30000305175781, p844 * 65.45625305175781, p844 * 103.80000305175781, p844 * 53.95625305175781, p844 * 103.80000305175781, p844 * 53.95625305175781);
    v1250.closePath();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.beginPath();
    v1250.lineCap = "round";
    v1250.lineJoin = "round";
    v1250.moveTo(p844 * 18, p844 * 56.3671875);
    v1250.bezierCurveTo(p844 * 70, p844 * 56.8671875, p844 * 70, p844 * 56.8671875, p844 * 122, p844 * 57.3671875);
    v1250.bezierCurveTo(p844 * 137, p844 * 20.3671875, p844 * 137, p844 * 16.3671875, p844 * 126, p844 * 22.3671875);
    v1250.bezierCurveTo(p844 * 115.5, p844 * 34.3671875, p844 * 115.5, p844 * 34.3671875, p844 * 105, p844 * 46.3671875);
    v1250.bezierCurveTo(p844 * 70.5, p844 * 46.3671875, p844 * 70.5, p844 * 46.3671875, p844 * 36, p844 * 46.3671875);
    v1250.bezierCurveTo(p844 * 4, p844 * 14.3671875, p844 * 7, p844 * 18.3671875, p844 * 8, p844 * 27.3671875);
    v1250.bezierCurveTo(p844 * 12.5, p844 * 41.8671875, p844 * 12.5, p844 * 41.8671875, p844 * 17, p844 * 56.3671875);
    v1250.closePath();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.save();
    v1250.translate(p844 * 68.30000305175781, p844 * 41.45625305175781);
    v1250.rotate(0.76);
    f87(v1250, p844 * -20.5, p844 * -20.5, p844 * 41, p844 * 41, p844 * 10);
    v1250.restore();
    f90(v1250, undefined, p846[5], p844 * 4);
    v1250.save();
    v1250.translate(p844 * 68.80000305175781, p844 * 44.45625305175781);
    v1250.rotate(0.76);
    f87(v1250, p844 * -21, p844 * -20.5, p844 * 42, p844 * 41, p844 * 10);
    v1250.restore();
    f90(v1250, p846[3], p846[4], p844 * 4);
    v1250.save();
    v1250.translate(p844 * 69.80000305175781, p844 * 44.556243896484375);
    v1250.rotate(0.76);
    f87(v1250, p844 * -10, p844 * -10, p844 * 20, p844 * 20, p844 * 5);
    v1250.restore();
    f90(v1250, p846[6], p846[7], p844 * 4);
    return v1249;
  }
  function f182(p847, p848, p849) {
    var v1251 = document.createElement("canvas");
    var v1252 = v1251.getContext("2d");
    v1251.width = p847 * 102;
    v1251.height = p847 * 102;
    v1252.globalAlpha = p848 ? 0.5 : 1;
    v1252.translate(3, 3);
    f87(v1252, p847 * 24, p847 * 26, p847 * 70, p847 * 9, p847 * 10);
    f90(v1252, p849[0]);
    f87(v1252, p847 * 26, p847 * 70, p847 * 70, p847 * 9, p847 * 10);
    f90(v1252, p849[0]);
    f87(v1252, p847 * 5, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[0]);
    f87(v1252, p847 * 40, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[0]);
    f87(v1252, p847 * 75, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[0]);
    v1252.globalAlpha = 1;
    v1252.translate(-3, -3);
    f87(v1252, p847 * 24, p847 * 26, p847 * 70, p847 * 9, p847 * 10);
    f90(v1252, p849[1]);
    f87(v1252, p847 * 26, p847 * 70, p847 * 70, p847 * 9, p847 * 10);
    f90(v1252, p849[1]);
    f87(v1252, p847 * 5, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[2], p849[3], p847 * 4);
    f87(v1252, p847 * 40, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[2], p849[3], p847 * 4);
    f87(v1252, p847 * 75, p847 * 3, p847 * 22, p847 * 94, p847 * 5);
    f90(v1252, p849[2], p849[3], p847 * 4);
    return v1251;
  }
  function f183(p850, p851, p852) {
    var v1253 = document.createElement("canvas");
    var v1254 = v1253.getContext("2d");
    v1253.width = p850 * 46;
    v1253.height = p850 * 140;
    v1254.scale(p850 * -1, p850 * 1);
    v1254.translate(p850 * -50, p850 * 40);
    v1254.translate(p850 * -20, 0);
    v1254.globalAlpha = p851 ? 0.5 : 1;
    v1254.translate(p850 * 10, 0);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.moveTo(p850 * 22.599990844726562, p850 * 85.94999694824219);
    v1254.bezierCurveTo(p850 * 17.599990844726562, p850 * 83.94999694824219, p850 * 17.599990844726562, p850 * 83.94999694824219, p850 * 12.599990844726562, p850 * 81.94999694824219);
    v1254.bezierCurveTo(p850 * 19.599990844726562, p850 * 73.94999694824219, p850 * 2.5999908447265625, p850 * 22.949996948242188, p850 * 33.59999084472656, p850 * 7.9499969482421875);
    v1254.bezierCurveTo(p850 * 27.599990844726562, p850 * 28.949996948242188, p850 * 33.59999084472656, p850 * 26.949996948242188, p850 * 35.59999084472656, p850 * 32.94999694824219);
    v1254.bezierCurveTo(p850 * 25.599990844726562, p850 * 59.94999694824219, p850 * 26.599990844726562, p850 * 69.94999694824219, p850 * 29.599990844726562, p850 * 82.94999694824219);
    v1254.closePath();
    f90(v1254, p852[0]);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.translate(p850 * -1, 0);
    v1254.moveTo(p850 * 17.599990844726562, p850 * 89.75);
    v1254.bezierCurveTo(p850 * 24.599990844726562, p850 * 99.75, p850 * 24.599990844726562, p850 * 101.75, p850 * 20.599990844726562, p850 * 111.75);
    v1254.bezierCurveTo(p850 * 28.599990844726562, p850 * 110.75, p850 * 26.599990844726562, p850 * 112.75, p850 * 28.599990844726562, p850 * 111.75);
    v1254.bezierCurveTo(p850 * 30.599990844726562, p850 * 96.75, p850 * 32.59999084472656, p850 * 96.75, p850 * 30.599990844726562, p850 * 87.75);
    v1254.closePath();
    f90(v1254, p852[0]);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.translate(p850 * 1, 0);
    v1254.moveTo(p850 * 7.5999908447265625, p850 * 86.34999084472656);
    v1254.bezierCurveTo(p850 * 12.599990844726562, p850 * 85.34999084472656, p850 * 14.599990844726562, p850 * 84.34999084472656, p850 * 13.599990844726562, p850 * 84.34999084472656);
    v1254.bezierCurveTo(p850 * 21.599990844726562, p850 * 83.34999084472656, p850 * 21.599990844726562, p850 * 83.34999084472656, p850 * 29.599990844726562, p850 * 82.34999084472656);
    v1254.bezierCurveTo(p850 * 33.59999084472656, p850 * 85.84999084472656, p850 * 33.59999084472656, p850 * 85.84999084472656, p850 * 37.59999084472656, p850 * 89.34999084472656);
    v1254.bezierCurveTo(p850 * 34.09999084472656, p850 * 91.84999084472656, p850 * 34.09999084472656, p850 * 91.84999084472656, p850 * 30.599990844726562, p850 * 94.34999084472656);
    v1254.bezierCurveTo(p850 * 21.099990844726562, p850 * 93.34999084472656, p850 * 21.099990844726562, p850 * 93.34999084472656, p850 * 11.599990844726562, p850 * 92.34999084472656);
    v1254.closePath();
    f90(v1254, p852[0]);
    v1254.save();
    v1254.translate(p850 * 23.599990844726562, p850 * 110.94999694824219);
    v1254.rotate(0);
    f87(v1254, p850 * -7, p850 * -4, p850 * 14, p850 * 8, p850 * 10);
    v1254.restore();
    f90(v1254, p852[0]);
    v1254.translate(p850 * 0, 0);
    v1254.globalAlpha = 1;
    v1254.translate(p850 * 10, 0);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.moveTo(p850 * 22.599990844726562, p850 * 85.94999694824219);
    v1254.bezierCurveTo(p850 * 17.599990844726562, p850 * 83.94999694824219, p850 * 17.599990844726562, p850 * 83.94999694824219, p850 * 12.599990844726562, p850 * 81.94999694824219);
    v1254.bezierCurveTo(p850 * 19.599990844726562, p850 * 73.94999694824219, p850 * 2.5999908447265625, p850 * 22.949996948242188, p850 * 33.59999084472656, p850 * 7.9499969482421875);
    v1254.bezierCurveTo(p850 * 27.599990844726562, p850 * 28.949996948242188, p850 * 33.59999084472656, p850 * 26.949996948242188, p850 * 35.59999084472656, p850 * 32.94999694824219);
    v1254.bezierCurveTo(p850 * 25.599990844726562, p850 * 59.94999694824219, p850 * 26.599990844726562, p850 * 69.94999694824219, p850 * 29.599990844726562, p850 * 82.94999694824219);
    v1254.closePath();
    f90(v1254, p852[3], p852[4], p850 * 3);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.translate(p850 * -1, 0);
    v1254.moveTo(p850 * 17.599990844726562, p850 * 89.75);
    v1254.bezierCurveTo(p850 * 24.599990844726562, p850 * 99.75, p850 * 24.599990844726562, p850 * 101.75, p850 * 20.599990844726562, p850 * 111.75);
    v1254.bezierCurveTo(p850 * 28.599990844726562, p850 * 110.75, p850 * 26.599990844726562, p850 * 112.75, p850 * 28.599990844726562, p850 * 111.75);
    v1254.bezierCurveTo(p850 * 30.599990844726562, p850 * 96.75, p850 * 32.59999084472656, p850 * 96.75, p850 * 30.599990844726562, p850 * 87.75);
    v1254.closePath();
    f90(v1254, p852[1], p852[2], p850 * 3);
    v1254.beginPath();
    v1254.lineCap = "round";
    v1254.lineJoin = "round";
    v1254.translate(p850 * 1, 0);
    v1254.moveTo(p850 * 7.5999908447265625, p850 * 86.34999084472656);
    v1254.bezierCurveTo(p850 * 12.599990844726562, p850 * 85.34999084472656, p850 * 14.599990844726562, p850 * 84.34999084472656, p850 * 13.599990844726562, p850 * 84.34999084472656);
    v1254.bezierCurveTo(p850 * 21.599990844726562, p850 * 83.34999084472656, p850 * 21.599990844726562, p850 * 83.34999084472656, p850 * 29.599990844726562, p850 * 82.34999084472656);
    v1254.bezierCurveTo(p850 * 33.59999084472656, p850 * 85.84999084472656, p850 * 33.59999084472656, p850 * 85.84999084472656, p850 * 37.59999084472656, p850 * 89.34999084472656);
    v1254.bezierCurveTo(p850 * 34.09999084472656, p850 * 91.84999084472656, p850 * 34.09999084472656, p850 * 91.84999084472656, p850 * 30.599990844726562, p850 * 94.34999084472656);
    v1254.bezierCurveTo(p850 * 21.099990844726562, p850 * 93.34999084472656, p850 * 21.099990844726562, p850 * 93.34999084472656, p850 * 11.599990844726562, p850 * 92.34999084472656);
    v1254.closePath();
    f90(v1254, p852[1], p852[2], p850 * 3);
    v1254.save();
    v1254.translate(p850 * 23.599990844726562, p850 * 110.94999694824219);
    v1254.rotate(0);
    f87(v1254, p850 * -7, p850 * -4, p850 * 14, p850 * 8, p850 * 10);
    v1254.restore();
    f90(v1254, p852[1], p852[2], p850 * 3);
    return v1253;
  }
  function f184(p853, p854, p855) {
    var v1255 = document.createElement("canvas");
    var v1256 = v1255.getContext("2d");
    v1255.width = p853 * 168;
    v1255.height = p853 * 100;
    v1256.globalAlpha = p854 ? 0.5 : 1;
    v1256.translate(p853 * 10, p853 * 5);
    v1256.save();
    v1256.translate(p853 * 24.5, p853 * 44.30000305175781);
    f87(v1256, p853 * -19.5, p853 * -8.5, p853 * 39, p853 * 17, p853 * 10);
    v1256.restore();
    f90(v1256, p855[0]);
    v1256.beginPath();
    v1256.lineCap = "round";
    v1256.lineJoin = "round";
    v1256.moveTo(p853 * 115, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 142, p853 * 37.80000305175781, p853 * 140, p853 * 37.80000305175781, p853 * 141, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 147, p853 * 28.800003051757812, p853 * 149, p853 * 26.800003051757812, p853 * 153, p853 * 32.80000305175781);
    v1256.bezierCurveTo(p853 * 160, p853 * 42.80000305175781, p853 * 157, p853 * 50.80000305175781, p853 * 153, p853 * 58.80000305175781);
    v1256.bezierCurveTo(p853 * 148, p853 * 62.80000305175781, p853 * 147, p853 * 59.80000305175781, p853 * 143, p853 * 52.80000305175781);
    v1256.bezierCurveTo(p853 * 129, p853 * 52.80000305175781, p853 * 129, p853 * 52.80000305175781, p853 * 115, p853 * 52.80000305175781);
    v1256.closePath();
    f90(v1256, p855[0]);
    f93(v1256, p853 * 78, p853 * 44.80000305175781, p853 * 39.44616584663204);
    f90(v1256, p855[0]);
    v1256.globalAlpha = 1;
    v1256.translate(p853 * -10, p853 * -5);
    v1256.save();
    v1256.translate(p853 * 24.5, p853 * 44.30000305175781);
    f87(v1256, p853 * -19.5, p853 * -8.5, p853 * 39, p853 * 17, p853 * 10);
    v1256.restore();
    f90(v1256, undefined, p855[3], p853 * 6);
    v1256.beginPath();
    v1256.lineCap = "round";
    v1256.lineJoin = "round";
    v1256.moveTo(p853 * 115, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 142, p853 * 37.80000305175781, p853 * 140, p853 * 37.80000305175781, p853 * 141, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 147, p853 * 28.800003051757812, p853 * 149, p853 * 26.800003051757812, p853 * 153, p853 * 32.80000305175781);
    v1256.bezierCurveTo(p853 * 160, p853 * 42.80000305175781, p853 * 157, p853 * 50.80000305175781, p853 * 153, p853 * 58.80000305175781);
    v1256.bezierCurveTo(p853 * 148, p853 * 62.80000305175781, p853 * 147, p853 * 59.80000305175781, p853 * 143, p853 * 52.80000305175781);
    v1256.bezierCurveTo(p853 * 129, p853 * 52.80000305175781, p853 * 129, p853 * 52.80000305175781, p853 * 115, p853 * 52.80000305175781);
    v1256.closePath();
    f90(v1256, vVVUndefined13, p855[3], p853 * 6);
    f93(v1256, p853 * 78, p853 * 44.80000305175781, p853 * 42.44616584663204);
    f90(v1256, undefined, p855[3], p853 * 6);
    v1256.save();
    v1256.translate(p853 * 24.5, p853 * 44.30000305175781);
    f87(v1256, p853 * -19.5, p853 * -8.5, p853 * 39, p853 * 17, p853 * 10);
    v1256.restore();
    f90(v1256, p855[1]);
    v1256.beginPath();
    v1256.lineCap = "round";
    v1256.lineJoin = "round";
    v1256.moveTo(p853 * 115, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 142, p853 * 37.80000305175781, p853 * 140, p853 * 37.80000305175781, p853 * 141, p853 * 37.80000305175781);
    v1256.bezierCurveTo(p853 * 147, p853 * 28.800003051757812, p853 * 149, p853 * 26.800003051757812, p853 * 153, p853 * 32.80000305175781);
    v1256.bezierCurveTo(p853 * 160, p853 * 42.80000305175781, p853 * 157, p853 * 50.80000305175781, p853 * 153, p853 * 58.80000305175781);
    v1256.bezierCurveTo(p853 * 148, p853 * 62.80000305175781, p853 * 147, p853 * 59.80000305175781, p853 * 143, p853 * 52.80000305175781);
    v1256.bezierCurveTo(p853 * 129, p853 * 52.80000305175781, p853 * 129, p853 * 52.80000305175781, p853 * 115, p853 * 52.80000305175781);
    v1256.closePath();
    f90(v1256, p855[1]);
    f93(v1256, p853 * 78, p853 * 44.80000305175781, p853 * 39.44616584663204);
    f90(v1256, p855[2], p855[1], p853 * 4);
    f93(v1256, p853 * 78, p853 * 44.80000305175781, p853 * 29.68164415931166);
    f90(v1256, p855[3], p855[1], p853 * 4);
    f93(v1256, p853 * 78, p853 * 44, p853 * 20);
    f90(v1256, p855[4]);
    return v1255;
  }
  function f185(p856, p857, p858) {
    var v1257 = document.createElement("canvas");
    var v1258 = v1257.getContext("2d");
    v1257.width = p856 * 151;
    v1257.height = p856 * 80;
    v1258.beginPath();
    v1258.lineCap = "round";
    v1258.lineJoin = "round";
    v1258.moveTo(p856 * 133, p856 * 54);
    v1258.bezierCurveTo(p856 * 136, p856 * 18, p856 * 129, p856 * 18, p856 * 114, p856 * 13);
    v1258.bezierCurveTo(p856 * 51, p856 * 0, p856 * 36, p856 * 16, p856 * 34, p856 * 16);
    v1258.bezierCurveTo(p856 * 8, p856 * 28, p856 * 22, p856 * 56, p856 * 21, p856 * 57);
    v1258.closePath();
    f90(v1258, p858[2], p858[3], 4);
    v1258.beginPath();
    v1258.lineCap = "round";
    v1258.lineJoin = "round";
    v1258.moveTo(p856 * 130, p856 * 40);
    v1258.bezierCurveTo(p856 * 132, p856 * 35, p856 * 132, p856 * 30, p856 * 132, p856 * 29);
    v1258.bezierCurveTo(p856 * 145, p856 * 38, p856 * 144, p856 * 43, p856 * 137, p856 * 54);
    v1258.closePath();
    f90(v1258, p858[0], p858[1], 4);
    v1258.beginPath();
    v1258.lineCap = "round";
    v1258.lineJoin = "round";
    v1258.moveTo(p856 * 20, p856 * 33);
    v1258.bezierCurveTo(p856 * 24, p856 * 44, p856 * 215, p856 * 39, p856 * 23, p856 * 44);
    v1258.bezierCurveTo(p856 * 19, p856 * 49, p856 * 19, p856 * 49, p856 * 15, p856 * 54);
    v1258.bezierCurveTo(p856 * 4, p856 * 43, p856 * 10, p856 * 35, p856 * 20, p856 * 32);
    v1258.closePath();
    f90(v1258, p858[0], p858[1], 4);
    v1258.beginPath();
    v1258.lineCap = "round";
    v1258.lineJoin = "round";
    v1258.moveTo(p856 * 18, p856 * 52);
    v1258.bezierCurveTo(p856 * 24, p856 * 31, p856 * 34, p856 * 25, p856 * 75, p856 * 23);
    v1258.bezierCurveTo(p856 * 130, p856 * 24, p856 * 129, p856 * 32, p856 * 134, p856 * 51);
    v1258.bezierCurveTo(p856 * 138, p856 * 70, p856 * 126, p856 * 72, p856 * 90, p856 * 73);
    v1258.bezierCurveTo(p856 * 18, p856 * 72, p856 * 15, p856 * 68, p856 * 18, p856 * 54);
    v1258.closePath();
    f90(v1258, p858[0], p858[1], 4);
    return v1257;
  }
  function f186(p859, p860, p861) {
    var v1259 = document.createElement("canvas");
    var v1260 = v1259.getContext("2d");
    v1259.width = p859 * 105;
    v1259.height = p859 * 144;
    v1260.globalAlpha = p860 ? 0.5 : 1;
    v1260.translate(p859 * -5, p859 * 0);
    v1260.save();
    v1260.translate(p859 * 52.5, p859 * 91.5);
    f87(v1260, p859 * -4.5, p859 * -39, p859 * 9, p859 * 78, p859 * 5);
    v1260.restore();
    f90(v1260, p861[0], p861[0], p859 * 3);
    v1260.save();
    v1260.translate(p859 * 53, p859 * 36);
    f87(v1260, p859 * -29, p859 * -17.5, p859 * 58, p859 * 35, p859 * 5);
    v1260.restore();
    f90(v1260, p861[0], p861[0], p859 * 4);
    v1260.save();
    v1260.translate(p859 * 53.5, p859 * 35.5);
    f87(v1260, p859 * -26.5, p859 * -15, p859 * 53, p859 * 30, p859 * 5);
    v1260.restore();
    f90(v1260, p861[0], p861[0], p859 * 4);
    v1260.translate(p859 * 5, p859 * 0);
    v1260.globalAlpha = 1;
    v1260.save();
    v1260.translate(p859 * 52.5, p859 * 91.5);
    f87(v1260, p859 * -4.5, p859 * -39, p859 * 9, p859 * 78, p859 * 5);
    v1260.restore();
    f90(v1260, p861[1], p861[2], p859 * 3);
    v1260.save();
    v1260.translate(p859 * 53, p859 * 36);
    f87(v1260, p859 * -29, p859 * -17.5, p859 * 58, p859 * 35, p859 * 5);
    v1260.restore();
    f90(v1260, p861[3], p861[4], p859 * 4);
    v1260.save();
    v1260.translate(p859 * 53.5, p859 * 35.5);
    f87(v1260, p859 * -26.5, p859 * -15, p859 * 53, p859 * 30, p859 * 5);
    v1260.restore();
    f90(v1260, p861[5], p861[6], p859 * 4);
    v1260.beginPath();
    v1260.lineCap = "round";
    v1260.lineJoin = "round";
    v1260.moveTo(p859 * 49, p859 * 60.5);
    v1260.bezierCurveTo(p859 * 44, p859 * 56.5, p859 * 44, p859 * 56.5, p859 * 39, p859 * 52.5);
    v1260.bezierCurveTo(p859 * 39, p859 * 46.5, p859 * 39, p859 * 46.5, p859 * 39, p859 * 40.5);
    v1260.bezierCurveTo(p859 * 44, p859 * 44, p859 * 44, p859 * 44, p859 * 49, p859 * 47.5);
    v1260.bezierCurveTo(p859 * 49, p859 * 54, p859 * 49, p859 * 54, p859 * 49, p859 * 60.5);
    v1260.closePath();
    f90(v1260, p861[7], p861[6], p859 * 3);
    v1260.beginPath();
    v1260.lineCap = "round";
    v1260.lineJoin = "round";
    v1260.moveTo(p859 * 66, p859 * 40.5);
    v1260.bezierCurveTo(p859 * 66, p859 * 46.5, p859 * 66, p859 * 46.5, p859 * 66, p859 * 52.5);
    v1260.bezierCurveTo(p859 * 60.5, p859 * 56.5, p859 * 60.5, p859 * 56.5, p859 * 55, p859 * 60.5);
    v1260.bezierCurveTo(p859 * 56, p859 * 53, p859 * 56, p859 * 53, p859 * 57, p859 * 45.5);
    v1260.bezierCurveTo(p859 * 61.5, p859 * 43, p859 * 61.5, p859 * 43, p859 * 66, p859 * 40.5);
    v1260.closePath();
    f90(v1260, p861[7], p861[6], p859 * 3);
    v1260.beginPath();
    v1260.lineCap = "round";
    v1260.lineJoin = "round";
    v1260.moveTo(p859 * 52, p859 * 33.5);
    v1260.bezierCurveTo(p859 * 55.5, p859 * 41, p859 * 55.5, p859 * 41, p859 * 59, p859 * 48.5);
    v1260.bezierCurveTo(p859 * 56, p859 * 58, p859 * 56, p859 * 58, p859 * 53, p859 * 67.5);
    v1260.bezierCurveTo(p859 * 49, p859 * 58, p859 * 49, p859 * 58, p859 * 45, p859 * 48.5);
    v1260.bezierCurveTo(p859 * 48.5, p859 * 41, p859 * 48.5, p859 * 41, p859 * 52, p859 * 33.5);
    v1260.closePath();
    f90(v1260, p861[9], p861[8], p859 * 3);
    v1260.beginPath();
    v1260.lineCap = "round";
    v1260.lineJoin = "round";
    v1260.moveTo(p859 * 52, p859 * 47.5);
    v1260.bezierCurveTo(p859 * 54.5, p859 * 50.5, p859 * 54.5, p859 * 50.5, p859 * 57, p859 * 53.5);
    v1260.bezierCurveTo(p859 * 55, p859 * 60, p859 * 55, p859 * 60, p859 * 53, p859 * 66.5);
    v1260.bezierCurveTo(p859 * 50.5, p859 * 61, p859 * 50.5, p859 * 61, p859 * 48, p859 * 55.5);
    v1260.bezierCurveTo(p859 * 50, p859 * 52, p859 * 50, p859 * 52, p859 * 52, p859 * 48.5);
    v1260.closePath();
    f90(v1260, p861[11], p861[10], p859 * 3);
    return v1259;
  }
  function f187(p862, p863, p864) {
    var v1261 = document.createElement("canvas");
    var v1262 = v1261.getContext("2d");
    v1261.width = p862 * 400;
    v1261.height = p862 * 170;
    v1262.translate(0, p862 * -170);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 159.5, p862 * 322.0625);
    v1262.bezierCurveTo(p862 * 240.5, p862 * 293.0625, p862 * 240.5, p862 * 293.0625, p862 * 321.5, p862 * 264.0625);
    v1262.bezierCurveTo(p862 * 276.5, p862 * 230.0625, p862 * 276.5, p862 * 230.0625, p862 * 231.5, p862 * 196.0625);
    v1262.bezierCurveTo(p862 * 158.5, p862 * 221.5625, p862 * 158.5, p862 * 221.5625, p862 * 85.5, p862 * 247.0625);
    v1262.closePath();
    f90(v1262, p864[0], p864[1], p862 * 12);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 212.5, p862 * 270.0625);
    v1262.bezierCurveTo(p862 * 235, p862 * 261.5625, p862 * 235, p862 * 261.5625, p862 * 257.5, p862 * 253.0625);
    v1262.closePath();
    f90(v1262, vVVVVUndefined82, p864[0], p862 * 12);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 193.5, p862 * 226.0625);
    v1262.bezierCurveTo(p862 * 204.5, p862 * 242.0625, p862 * 242.5, p862 * 237.0625, p862 * 251.5, p862 * 225.0625);
    v1262.bezierCurveTo(p862 * 246.5, p862 * 195.0625, p862 * 205.5, p862 * 190.0625, p862 * 193.5, p862 * 227.0625);
    v1262.closePath();
    f90(v1262, p864[2], p864[3], p862 * 12);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 164.5, p862 * 245.0625);
    v1262.bezierCurveTo(p862 * 182.5, p862 * 264.0625, p862 * 252.5, p862 * 258.0625, p862 * 276.5, p862 * 244.0625);
    v1262.bezierCurveTo(p862 * 265.5, p862 * 226.0625, p862 * 244.5, p862 * 231.0625, p862 * 229.5, p862 * 230.0625);
    v1262.bezierCurveTo(p862 * 205.5, p862 * 227.0625, p862 * 175.5, p862 * 202.0625, p862 * 162.5, p862 * 244.0625);
    v1262.closePath();
    f90(v1262, p864[2], p864[3], p862 * 12);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 115.5, p862 * 260.0625);
    v1262.bezierCurveTo(p862 * 134.5, p862 * 279.0625, p862 * 170.5, p862 * 275.0625, p862 * 191.5, p862 * 257.0625);
    v1262.bezierCurveTo(p862 * 174.5, p862 * 208.0625, p862 * 142.5, p862 * 197.0625, p862 * 116.5, p862 * 259.0625);
    v1262.closePath();
    f90(v1262, p864[2], p864[3], p862 * 12);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p862 * 152.5, p862 * 278.0625);
    v1262.bezierCurveTo(p862 * 165.5, p862 * 294.0625, p862 * 200.5, p862 * 287.0625, p862 * 216.5, p862 * 278.0625);
    v1262.bezierCurveTo(p862 * 206.5, p862 * 247.0625, p862 * 173.5, p862 * 233.0625, p862 * 153.5, p862 * 276.0625);
    v1262.closePath();
    f90(v1262, p864[2], p864[3], p862 * 12);
    return v1261;
  }
  function f188(p865, p866, p867) {
    var v1263 = document.createElement("canvas");
    var v1264 = v1263.getContext("2d");
    v1263.width = p865 * 450;
    v1263.height = p865 * 260;
    v1264.translate(p865 * 10, p865 * 10);
    v1264.globalAlpha = p866 ? 0.5 : 1;
    v1264.translate(p865 * 20, p865 * 20);
    f87(v1264, 0, 0, p865 * 400, p865 * 220, p865 * 30);
    f90(v1264, p867[0]);
    v1264.globalAlpha = 1;
    v1264.translate(p865 * -20, p865 * -20);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p865 * 9, p865 * 5);
    v1264.bezierCurveTo(p865 * 381, p865 * 2, p865 * 197, p865 * 4.5, p865 * 385, p865 * 4);
    v1264.bezierCurveTo(p865 * 397, p865 * 4, p865 * 401, p865 * 4, p865 * 399, p865 * 23);
    v1264.bezierCurveTo(p865 * 367, p865 * 27, p865 * 367, p865 * 27, p865 * 335, p865 * 31);
    v1264.bezierCurveTo(p865 * 366.5, p865 * 33.5, p865 * 366.5, p865 * 33.5, p865 * 398, p865 * 36);
    v1264.bezierCurveTo(p865 * 398, p865 * 41.5, p865 * 398, p865 * 41.5, p865 * 398, p865 * 47);
    v1264.bezierCurveTo(p865 * 398, p865 * 56, p865 * 399, p865 * 56, p865 * 386, p865 * 56);
    v1264.bezierCurveTo(p865 * 200.5, p865 * 56.5, p865 * 200.5, p865 * 56.5, p865 * 15, p865 * 57);
    v1264.bezierCurveTo(p865 * 2, p865 * 55, p865 * 4, p865 * 52, p865 * 4, p865 * 43);
    v1264.bezierCurveTo(p865 * 4, p865 * 30.5, p865 * 4, p865 * 30.5, p865 * 4, p865 * 18);
    v1264.bezierCurveTo(p865 * 16, p865 * 18.5, p865 * 16, p865 * 18.5, p865 * 28, p865 * 19);
    v1264.bezierCurveTo(p865 * 18.5, p865 * 12, p865 * 18.5, p865 * 12, p865 * 9, p865 * 5);
    v1264.closePath();
    f90(v1264, p867[2], p867[1], p865 * 12);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p865 * 5, p865 * 70);
    v1264.bezierCurveTo(p865 * 5, p865 * 58, p865 * 5, p865 * 55, p865 * 17, p865 * 57);
    v1264.bezierCurveTo(p865 * 203, p865 * 57, p865 * 203, p865 * 57, p865 * 389, p865 * 57);
    v1264.bezierCurveTo(p865 * 400, p865 * 57, p865 * 400, p865 * 59, p865 * 400, p865 * 69);
    v1264.bezierCurveTo(p865 * 400.5, p865 * 83.5, p865 * 400.5, p865 * 83.5, p865 * 401, p865 * 98);
    v1264.bezierCurveTo(p865 * 402, p865 * 108, p865 * 401, p865 * 108, p865 * 388, p865 * 108);
    v1264.bezierCurveTo(p865 * 201.5, p865 * 108, p865 * 201.5, p865 * 108, p865 * 15, p865 * 108);
    v1264.bezierCurveTo(p865 * 1, p865 * 106, p865 * 5, p865 * 106, p865 * 5, p865 * 87);
    v1264.bezierCurveTo(p865 * 33, p865 * 84.5, p865 * 33, p865 * 84.5, p865 * 61, p865 * 82);
    v1264.bezierCurveTo(p865 * 33.5, p865 * 76.5, p865 * 33.5, p865 * 76.5, p865 * 6, p865 * 71);
    v1264.closePath();
    f90(v1264, p867[3], p867[1], p865 * 12);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p865 * 19, p865 * 158);
    v1264.bezierCurveTo(p865 * 2, p865 * 159, p865 * 4, p865 * 156, p865 * 5, p865 * 118);
    v1264.bezierCurveTo(p865 * 4, p865 * 110, p865 * 6, p865 * 107, p865 * 26, p865 * 109);
    v1264.bezierCurveTo(p865 * 206.5, p865 * 109, p865 * 206.5, p865 * 109, p865 * 387, p865 * 109);
    v1264.bezierCurveTo(p865 * 400, p865 * 108, p865 * 400, p865 * 108, p865 * 398, p865 * 127);
    v1264.bezierCurveTo(p865 * 384.5, p865 * 130, p865 * 384.5, p865 * 130, p865 * 371, p865 * 133);
    v1264.bezierCurveTo(p865 * 385.5, p865 * 138, p865 * 385.5, p865 * 138, p865 * 400, p865 * 143);
    v1264.bezierCurveTo(p865 * 402, p865 * 156, p865 * 402, p865 * 162, p865 * 385, p865 * 160);
    v1264.closePath();
    f90(v1264, p867[2], p867[1], p865 * 12);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p865 * 4, p865 * 183);
    v1264.bezierCurveTo(p865 * 1, p865 * 163, p865 * 4, p865 * 158, p865 * 28, p865 * 161);
    v1264.bezierCurveTo(p865 * 207.5, p865 * 161, p865 * 207.5, p865 * 161, p865 * 387, p865 * 161);
    v1264.bezierCurveTo(p865 * 401, p865 * 159, p865 * 400, p865 * 164, p865 * 400, p865 * 177);
    v1264.bezierCurveTo(p865 * 364.5, p865 * 184, p865 * 364.5, p865 * 184, p865 * 329, p865 * 191);
    v1264.bezierCurveTo(p865 * 364.5, p865 * 192.5, p865 * 364.5, p865 * 192.5, p865 * 400, p865 * 194);
    v1264.bezierCurveTo(p865 * 403, p865 * 209, p865 * 401, p865 * 214, p865 * 385, p865 * 213);
    v1264.bezierCurveTo(p865 * 201.5, p865 * 213, p865 * 201.5, p865 * 213, p865 * 18, p865 * 213);
    v1264.bezierCurveTo(p865 * 3, p865 * 213, p865 * 2, p865 * 213, p865 * 4, p865 * 198);
    v1264.bezierCurveTo(p865 * 12.5, p865 * 193, p865 * 12.5, p865 * 193, p865 * 21, p865 * 188);
    v1264.closePath();
    f90(v1264, p867[3], p867[1], p865 * 12);
    f93(v1264, p865 * 41, p865 * 30, p865 * 14.7648230602334);
    f90(v1264, p867[3], p867[1], p865 * 12);
    f93(v1264, p865 * 369, p865 * 30, p865 * 15.556349186104045);
    f90(v1264, p867[3], p867[1], p865 * 12);
    f93(v1264, p865 * 364, p865 * 190, p865 * 15.620499351813308);
    f90(v1264, p867[3], p867[1], p865 * 12);
    f93(v1264, p865 * 41, p865 * 186, p865 * 15.556349186104045);
    f90(v1264, p867[3], p867[1], p865 * 12);
    return v1263;
  }
  function f189(p868, p869) {
    var v1265 = document.createElement("canvas");
    var v1266 = v1265.getContext("2d");
    v1265.width = p868 * 120;
    v1265.height = p868 * 330;
    v1266.translate(p868 * -60, p868 * -10);
    v1266.beginPath();
    v1266.lineCap = "round";
    v1266.lineJoin = "round";
    v1266.moveTo(p868 * 188.5, p868 * 7.953125);
    v1266.bezierCurveTo(p868 * 188.5, p868 * 334.953125, p868 * 188.5, p868 * 332.953125, p868 * 188.5, p868 * 339.953125);
    v1266.bezierCurveTo(p868 * 166.5, p868 * 295.953125, p868 * 145.5, p868 * 295.953125, p868 * 139.5, p868 * 282.953125);
    v1266.bezierCurveTo(p868 * 124.5, p868 * 244.953125, p868 * 139.5, p868 * 243.953125, p868 * 131.5, p868 * 212.953125);
    v1266.bezierCurveTo(p868 * 118.5, p868 * 161.953125, p868 * 69.5, p868 * 156.953125, p868 * 74.5, p868 * 92.953125);
    v1266.bezierCurveTo(p868 * 85.5, p868 * 41.953125, p868 * 158.5, p868 * 49.953125, p868 * 188.5, p868 * 7.953125);
    v1266.closePath();
    f90(v1266, p869[0]);
    return v1265;
  }
  function f190(p870, p871, p872) {
    var v1267 = document.createElement("canvas");
    var v1268 = v1267.getContext("2d");
    v1267.width = p870 * 185;
    v1267.height = p870 * 164;
    v1268.translate(0, 0);
    var vF42 = function (p873, p874, p875) {
      var v1269 = document.createElement("canvas");
      var v1270 = v1269.getContext("2d");
      v1269.width = p873 * 201;
      v1269.height = p873 * 164;
      v1270.translate(0, p873 * 5);
      v1270.globalAlpha = p874 ? 0.5 : 1;
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 74.92746655359852);
      f90(v1270, p875[0], p875[0], p873 * 4);
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 65.9417374971317);
      f90(v1270, p875[0], p875[0], p873 * 4);
      v1270.translate(0, -5);
      v1270.globalAlpha = 1;
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 74.92746655359852);
      f90(v1270, p875[1], p875[3], p873 * 4);
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 65.9417374971317);
      f90(v1270, p875[1], p875[2], p873 * 4);
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 35.9417374971317);
      f90(v1270, p875[1], p875[2], p873 * 20);
      f93(v1270, p873 * 100.5, p873 * 82, p873 * 15.9417374971317);
      f90(v1270, p875[1], p875[2], p873 * 6);
      return v1269;
    }(p870, p871, p872);
    v1268.drawImage(vF42, p870 * -10, p870 * 0);
    vF42 = f230(p870, p871, p872, 0);
    v1268.drawImage(vF42, p870 * -83, p870 * -40);
    vF42 = f230(p870, p871, p872, Math.PI / 1.4);
    v1268.drawImage(vF42, p870 * -15, p870 * -88);
    vF42 = f230(p870, p871, p872, Math.PI / -1.4);
    v1268.drawImage(vF42, p870 * 15, p870 * -8);
    return v1267;
  }
  function f191(p876, p877, p878) {
    var v1271 = document.createElement("canvas");
    var v1272 = v1271.getContext("2d");
    v1271.width = p876 * 300;
    v1271.height = p876 * 300;
    v1272.globalAlpha = p877 ? 0.5 : 1;
    v1272.save();
    v1272.translate(p876 * 150, p876 * 160);
    v1272.rotate(6.28);
    f88(v1272, 6, p876 * 146, p876 * 30);
    v1272.restore();
    f90(v1272, p878[0]);
    v1272.globalAlpha = 1;
    v1272.save();
    v1272.translate(p876 * 150, p876 * 150);
    v1272.rotate(6.28);
    f88(v1272, 6, p876 * 146, p876 * 30);
    v1272.restore();
    f90(v1272, p878[1], p878[2], p876 * 8);
    v1272.save();
    v1272.translate(p876 * 150, p876 * 150);
    v1272.rotate(0);
    f88(v1272, 6, p876 * 105, p876 * 30);
    v1272.restore();
    f90(v1272, p878[3], p878[3], p876 * 8);
    v1272.save();
    v1272.translate(p876 * 150, p876 * 150);
    v1272.rotate(0);
    f88(v1272, 6, p876 * 66, p876 * 30);
    v1272.restore();
    f90(v1272, p878[4], p878[2], p876 * 8);
    v1272.save();
    v1272.translate(p876 * 131, p876 * 116);
    f88(v1272, 7, p876 * 17, p876 * 8);
    v1272.restore();
    f90(v1272, p878[6]);
    v1272.save();
    v1272.translate(p876 * 163, p876 * 168);
    f88(v1272, 7, p876 * 25, p876 * 8);
    v1272.restore();
    f90(v1272, p878[6]);
    v1272.save();
    v1272.translate(p876 * 117, p876 * 151);
    f88(v1272, 7, p876 * 11, p876 * 8);
    v1272.restore();
    f90(v1272, p878[6]);
    v1272.save();
    v1272.translate(p876 * 167, p876 * 122);
    f88(v1272, 7, p876 * 12, p876 * 8);
    v1272.restore();
    f90(v1272, p878[6]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p876 * 150, p876 * 207);
    v1272.bezierCurveTo(p876 * 150, p876 * 151, p876 * 150, p876 * 101, p876 * 150, p876 * 94);
    v1272.closePath();
    f90(v1272, undefined, p878[2], p876 * 8);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p876 * 118, p876 * 100);
    v1272.bezierCurveTo(p876 * 118, p876 * 205, p876 * 118, p876 * 207, p876 * 118, p876 * 200);
    v1272.closePath();
    f90(v1272, vVVVUndefined823, p878[2], p876 * 8);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p876 * 183, p876 * 100);
    v1272.bezierCurveTo(p876 * 183, p876 * 203, p876 * 183, p876 * 203, p876 * 183, p876 * 200);
    v1272.closePath();
    f90(v1272, vVVUndefined13, p878[2], p876 * 8);
    return v1271;
  }
  function f192(p879, p880) {
    var v1273 = document.createElement("canvas");
    var v1274 = v1273.getContext("2d");
    v1273.width = p879 * 110;
    v1273.height = p879 * 110;
    v1274.globalAlpha = 0.2;
    f93(v1274, p879 * 55, p879 * 55, p879 * 55);
    f90(v1274, p880[0]);
    return v1273;
  }
  function f193(p881, p882, p883) {
    var v1275 = document.createElement("canvas");
    var v1276 = v1275.getContext("2d");
    v1275.width = p881 * 88;
    v1275.height = p881 * 647;
    v1276.translate(p881 * 20, p881 * 20);
    v1276.globalAlpha = p882 ? 0.5 : 1;
    v1276.save();
    v1276.translate(p881 * 45, p881 * 384.5);
    f87(v1276, p881 * -15, p881 * -216.5, p881 * 30, p881 * 433, p881 * 10);
    v1276.restore();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 27, p881 * 572);
    v1276.bezierCurveTo(p881 * 44, p881 * 580, p881 * 55, p881 * 576, p881 * 62, p881 * 572);
    v1276.bezierCurveTo(p881 * 65, p881 * 585.5, p881 * 65, p881 * 585.5, p881 * 68, p881 * 599);
    v1276.bezierCurveTo(p881 * 71, p881 * 612, p881 * 68, p881 * 618, p881 * 34, p881 * 616);
    v1276.bezierCurveTo(p881 * 14, p881 * 615, p881 * 19, p881 * 607, p881 * 27, p881 * 573);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 32, p881 * 587);
    v1276.bezierCurveTo(p881 * 39, p881 * 590, p881 * 48, p881 * 588, p881 * 54, p881 * 587);
    v1276.bezierCurveTo(p881 * 57, p881 * 604, p881 * 59, p881 * 609, p881 * 46, p881 * 609);
    v1276.bezierCurveTo(p881 * 27, p881 * 609, p881 * 28, p881 * 605, p881 * 33, p881 * 588);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 31, p881 * 113);
    v1276.bezierCurveTo(p881 * 27, p881 * 139, p881 * 27, p881 * 139, p881 * 23, p881 * 165);
    v1276.bezierCurveTo(p881 * 18, p881 * 187, p881 * 39, p881 * 195, p881 * 57, p881 * 186);
    v1276.bezierCurveTo(p881 * 68, p881 * 180, p881 * 65, p881 * 171, p881 * 62, p881 * 153);
    v1276.bezierCurveTo(p881 * 58.5, p881 * 131, p881 * 58.5, p881 * 131, p881 * 55, p881 * 109);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 39, p881 * 139);
    v1276.bezierCurveTo(p881 * 43, p881 * 139, p881 * 43, p881 * 139, p881 * 47, p881 * 139);
    v1276.bezierCurveTo(p881 * 51, p881 * 158, p881 * 56, p881 * 176, p881 * 44, p881 * 175);
    v1276.bezierCurveTo(p881 * 33, p881 * 177, p881 * 34, p881 * 167, p881 * 39, p881 * 140);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 44, p881 * 29);
    v1276.bezierCurveTo(p881 * 57, p881 * 63, p881 * 57, p881 * 63, p881 * 70, p881 * 97);
    v1276.bezierCurveTo(p881 * 60, p881 * 111, p881 * 60, p881 * 111, p881 * 50, p881 * 125);
    v1276.bezierCurveTo(p881 * 45, p881 * 128, p881 * 41, p881 * 128, p881 * 35, p881 * 124);
    v1276.bezierCurveTo(p881 * 26.5, p881 * 110, p881 * 26.5, p881 * 110, p881 * 18, p881 * 96);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 44, p881 * 54);
    v1276.bezierCurveTo(p881 * 50, p881 * 72, p881 * 50, p881 * 72, p881 * 56, p881 * 90);
    v1276.bezierCurveTo(p881 * 58, p881 * 94, p881 * 59, p881 * 98, p881 * 53, p881 * 105);
    v1276.bezierCurveTo(p881 * 47, p881 * 113, p881 * 43, p881 * 113, p881 * 36, p881 * 103);
    v1276.bezierCurveTo(p881 * 29, p881 * 96, p881 * 31, p881 * 94, p881 * 35, p881 * 83);
    v1276.closePath();
    f90(v1276, p883[0]);
    v1276.translate(p881 * -20, p881 * -20);
    v1276.globalAlpha = 1;
    v1276.save();
    v1276.translate(p881 * 45, p881 * 384.5);
    f87(v1276, p881 * -15, p881 * -216.5, p881 * 30, p881 * 433, p881 * 10);
    v1276.restore();
    f90(v1276, p883[1], p883[2], p881 * 8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 27, p881 * 572);
    v1276.bezierCurveTo(p881 * 44, p881 * 580, p881 * 55, p881 * 576, p881 * 62, p881 * 572);
    v1276.bezierCurveTo(p881 * 65, p881 * 585.5, p881 * 65, p881 * 585.5, p881 * 68, p881 * 599);
    v1276.bezierCurveTo(p881 * 71, p881 * 612, p881 * 68, p881 * 618, p881 * 34, p881 * 616);
    v1276.bezierCurveTo(p881 * 14, p881 * 615, p881 * 19, p881 * 607, p881 * 27, p881 * 573);
    v1276.closePath();
    f90(v1276, p883[3], p883[4], p881 * 8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 32, p881 * 587);
    v1276.bezierCurveTo(p881 * 39, p881 * 590, p881 * 48, p881 * 588, p881 * 54, p881 * 587);
    v1276.bezierCurveTo(p881 * 57, p881 * 604, p881 * 59, p881 * 609, p881 * 46, p881 * 609);
    v1276.bezierCurveTo(p881 * 27, p881 * 609, p881 * 28, p881 * 605, p881 * 33, p881 * 588);
    v1276.closePath();
    f90(v1276, p883[5]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 31, p881 * 113);
    v1276.bezierCurveTo(p881 * 27, p881 * 139, p881 * 27, p881 * 139, p881 * 23, p881 * 165);
    v1276.bezierCurveTo(p881 * 18, p881 * 187, p881 * 39, p881 * 195, p881 * 57, p881 * 186);
    v1276.bezierCurveTo(p881 * 68, p881 * 180, p881 * 65, p881 * 171, p881 * 62, p881 * 153);
    v1276.bezierCurveTo(p881 * 58.5, p881 * 131, p881 * 58.5, p881 * 131, p881 * 55, p881 * 109);
    v1276.closePath();
    f90(v1276, p883[3], p883[4], p881 * 8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 39, p881 * 139);
    v1276.bezierCurveTo(p881 * 43, p881 * 139, p881 * 43, p881 * 139, p881 * 47, p881 * 139);
    v1276.bezierCurveTo(p881 * 51, p881 * 158, p881 * 56, p881 * 176, p881 * 44, p881 * 175);
    v1276.bezierCurveTo(p881 * 33, p881 * 177, p881 * 34, p881 * 167, p881 * 39, p881 * 140);
    v1276.closePath();
    f90(v1276, p883[5]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 44, p881 * 29);
    v1276.bezierCurveTo(p881 * 57, p881 * 63, p881 * 57, p881 * 63, p881 * 70, p881 * 97);
    v1276.bezierCurveTo(p881 * 60, p881 * 111, p881 * 60, p881 * 111, p881 * 50, p881 * 125);
    v1276.bezierCurveTo(p881 * 45, p881 * 128, p881 * 41, p881 * 128, p881 * 35, p881 * 124);
    v1276.bezierCurveTo(p881 * 26.5, p881 * 110, p881 * 26.5, p881 * 110, p881 * 18, p881 * 96);
    v1276.closePath();
    f90(v1276, p883[6], p883[7], p881 * 8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p881 * 44, p881 * 54);
    v1276.bezierCurveTo(p881 * 50, p881 * 72, p881 * 50, p881 * 72, p881 * 56, p881 * 90);
    v1276.bezierCurveTo(p881 * 58, p881 * 94, p881 * 59, p881 * 98, p881 * 53, p881 * 105);
    v1276.bezierCurveTo(p881 * 47, p881 * 113, p881 * 43, p881 * 113, p881 * 36, p881 * 103);
    v1276.bezierCurveTo(p881 * 29, p881 * 96, p881 * 31, p881 * 94, p881 * 35, p881 * 83);
    v1276.closePath();
    f90(v1276, p883[8]);
    return v1275;
  }
  function f194(p884, p885, p886) {
    var v1277 = document.createElement("canvas");
    var v1278 = v1277.getContext("2d");
    v1277.width = p884 * 43;
    v1277.height = p884 * 209;
    v1278.globalAlpha = p885 ? 0.5 : 1;
    v1278.translate(0, p884 * 10);
    v1278.translate(p884 * 5, p884 * 5);
    v1278.save();
    v1278.translate(p884 * 21, p884 * 102.5);
    f87(v1278, p884 * -4, p884 * -76.5, p884 * 8, p884 * 163, p884 * 10);
    v1278.restore();
    f90(v1278, p886[0]);
    v1278.translate(0, p884 * 10);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 20, p884 * 10);
    v1278.bezierCurveTo(p884 * 25, p884 * 25.5, p884 * 25, p884 * 25.5, p884 * 30, p884 * 41);
    v1278.bezierCurveTo(p884 * 25.5, p884 * 38.5, p884 * 25.5, p884 * 38.5, p884 * 21, p884 * 36);
    v1278.bezierCurveTo(p884 * 16, p884 * 38.5, p884 * 16, p884 * 38.5, p884 * 11, p884 * 41);
    v1278.closePath();
    f90(v1278, p886[0]);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 21, p884 * 1);
    v1278.bezierCurveTo(p884 * 28, p884 * 18, p884 * 28, p884 * 18, p884 * 35, p884 * 35);
    v1278.bezierCurveTo(p884 * 28.5, p884 * 32, p884 * 28.5, p884 * 32, p884 * 22, p884 * 29);
    v1278.bezierCurveTo(p884 * 14.5, p884 * 32.5, p884 * 14.5, p884 * 32.5, p884 * 7, p884 * 36);
    v1278.closePath();
    f90(v1278, p886[0]);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 14, p884 * 146);
    v1278.bezierCurveTo(p884 * 21, p884 * 146, p884 * 21, p884 * 146, p884 * 28, p884 * 146);
    v1278.bezierCurveTo(p884 * 27.5, p884 * 147.5, p884 * 27.5, p884 * 147.5, p884 * 27, p884 * 149);
    v1278.bezierCurveTo(p884 * 27, p884 * 160, p884 * 27, p884 * 160, p884 * 27, p884 * 171);
    v1278.bezierCurveTo(p884 * 27.5, p884 * 171.5, p884 * 27.5, p884 * 171.5, p884 * 28, p884 * 172);
    v1278.bezierCurveTo(p884 * 21, p884 * 172, p884 * 21, p884 * 172, p884 * 14, p884 * 172);
    v1278.bezierCurveTo(p884 * 14, p884 * 171.5, p884 * 14, p884 * 171.5, p884 * 14, p884 * 171);
    v1278.bezierCurveTo(p884 * 14.5, p884 * 171.5, p884 * 14.5, p884 * 171.5, p884 * 15, p884 * 172);
    v1278.bezierCurveTo(p884 * 15, p884 * 160.5, p884 * 15, p884 * 160.5, p884 * 15, p884 * 149);
    v1278.closePath();
    f90(v1278, p886[0]);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 21, p884 * 6);
    v1278.bezierCurveTo(p884 * 26.5, p884 * 18.5, p884 * 26.5, p884 * 18.5, p884 * 32, p884 * 31);
    v1278.bezierCurveTo(p884 * 27, p884 * 29, p884 * 27, p884 * 29, p884 * 22, p884 * 27);
    v1278.closePath();
    f90(v1278, p886[0]);
    v1278.translate(0, p884 * -20);
    v1278.globalAlpha = 1;
    v1278.translate(0, p884 * 10);
    v1278.translate(p884 * -5, p884 * -5);
    v1278.save();
    v1278.translate(p884 * 21, p884 * 102.5);
    f87(v1278, p884 * -4, p884 * -76.5, p884 * 8, p884 * 163, p884 * 10);
    v1278.restore();
    f90(v1278, p886[1], p886[2], p884 * 4);
    v1278.translate(0, p884 * 10);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 20, p884 * 10);
    v1278.bezierCurveTo(p884 * 25, p884 * 25.5, p884 * 25, p884 * 25.5, p884 * 30, p884 * 41);
    v1278.bezierCurveTo(p884 * 25.5, p884 * 38.5, p884 * 25.5, p884 * 38.5, p884 * 21, p884 * 36);
    v1278.bezierCurveTo(p884 * 16, p884 * 38.5, p884 * 16, p884 * 38.5, p884 * 11, p884 * 41);
    v1278.closePath();
    f90(v1278, p886[3], p886[4], p884 * 4);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 21, p884 * 1);
    v1278.bezierCurveTo(p884 * 28, p884 * 18, p884 * 28, p884 * 18, p884 * 35, p884 * 35);
    v1278.bezierCurveTo(p884 * 28.5, p884 * 32, p884 * 28.5, p884 * 32, p884 * 22, p884 * 29);
    v1278.bezierCurveTo(p884 * 14.5, p884 * 32.5, p884 * 14.5, p884 * 32.5, p884 * 7, p884 * 36);
    v1278.closePath();
    f90(v1278, p886[5], p886[6], p884 * 4);
    v1278.translate(0, p884 * 0);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 14, p884 * 146);
    v1278.bezierCurveTo(p884 * 21, p884 * 146, p884 * 21, p884 * 146, p884 * 28, p884 * 146);
    v1278.bezierCurveTo(p884 * 27.5, p884 * 147.5, p884 * 27.5, p884 * 147.5, p884 * 27, p884 * 149);
    v1278.bezierCurveTo(p884 * 27, p884 * 160, p884 * 27, p884 * 160, p884 * 27, p884 * 171);
    v1278.bezierCurveTo(p884 * 27.5, p884 * 171.5, p884 * 27.5, p884 * 171.5, p884 * 28, p884 * 172);
    v1278.bezierCurveTo(p884 * 21, p884 * 172, p884 * 21, p884 * 172, p884 * 14, p884 * 172);
    v1278.bezierCurveTo(p884 * 14, p884 * 171.5, p884 * 14, p884 * 171.5, p884 * 14, p884 * 171);
    v1278.bezierCurveTo(p884 * 14.5, p884 * 171.5, p884 * 14.5, p884 * 171.5, p884 * 15, p884 * 172);
    v1278.bezierCurveTo(p884 * 15, p884 * 160.5, p884 * 15, p884 * 160.5, p884 * 15, p884 * 149);
    v1278.closePath();
    f90(v1278, p886[1], p886[2], p884 * 4);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p884 * 21, p884 * 6);
    v1278.bezierCurveTo(p884 * 26.5, p884 * 18.5, p884 * 26.5, p884 * 18.5, p884 * 32, p884 * 31);
    v1278.bezierCurveTo(p884 * 27, p884 * 29, p884 * 27, p884 * 29, p884 * 22, p884 * 27);
    v1278.closePath();
    f90(v1278, p886[8]);
    return v1277;
  }
  function f195(p887, p888, p889) {
    var v1279 = document.createElement("canvas");
    var v1280 = v1279.getContext("2d");
    v1279.width = p887 * 80;
    v1279.height = p887 * 160;
    v1280.globalAlpha = p888 ? 0.5 : 1;
    v1280.translate(p887 * 5, p887 * 5);
    v1280.save();
    f87(v1280, p887 * 33, p887 * 53, p887 * 10, p887 * 98, p887 * 10);
    f90(v1280, p889[0]);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.translate(p887 * -150, p887 * -100);
    v1280.moveTo(p887 * 167.5, p887 * 171.0625);
    v1280.bezierCurveTo(p887 * 188, p887 * 171.0625, p887 * 188, p887 * 171.0625, p887 * 208.5, p887 * 171.0625);
    v1280.bezierCurveTo(p887 * 208.5, p887 * 156.0625, p887 * 208.5, p887 * 156.0625, p887 * 208.5, p887 * 141.0625);
    v1280.bezierCurveTo(p887 * 203.5, p887 * 113.0625, p887 * 179.5, p887 * 96.0625, p887 * 167.5, p887 * 141.0625);
    v1280.closePath();
    f90(v1280, p889[0]);
    v1280.restore();
    v1280.globalAlpha = 1;
    v1280.translate(p887 * -5, p887 * -5);
    v1280.save();
    f87(v1280, p887 * 33, p887 * 53, p887 * 10, p887 * 98, p887 * 10);
    f90(v1280, p889[1], p889[2], p887 * 4);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.translate(p887 * -150, p887 * -100);
    v1280.moveTo(p887 * 167.5, p887 * 171.0625);
    v1280.bezierCurveTo(p887 * 188, p887 * 171.0625, p887 * 188, p887 * 171.0625, p887 * 208.5, p887 * 171.0625);
    v1280.bezierCurveTo(p887 * 208.5, p887 * 156.0625, p887 * 208.5, p887 * 156.0625, p887 * 208.5, p887 * 141.0625);
    v1280.bezierCurveTo(p887 * 203.5, p887 * 113.0625, p887 * 179.5, p887 * 96.0625, p887 * 167.5, p887 * 141.0625);
    v1280.closePath();
    f90(v1280, p889[3], p889[4], p887 * 4);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.translate(p887 * 0, p887 * 1);
    v1280.moveTo(p887 * 180.5, p887 * 169.0625);
    v1280.bezierCurveTo(p887 * 180.5, p887 * 157.5625, p887 * 180.5, p887 * 157.5625, p887 * 180.5, p887 * 146.0625);
    v1280.bezierCurveTo(p887 * 181.5, p887 * 134.0625, p887 * 193.5, p887 * 129.0625, p887 * 196.5, p887 * 146.0625);
    v1280.bezierCurveTo(p887 * 196.5, p887 * 157.5625, p887 * 196.5, p887 * 157.5625, p887 * 196.5, p887 * 169.0625);
    v1280.closePath();
    f90(v1280, p889[5]);
    v1280.restore();
    return v1279;
  }
  function f196(p890, p891, p892) {
    var v1281 = document.createElement("canvas");
    var v1282 = v1281.getContext("2d");
    v1281.width = p890 * 450;
    v1281.height = p890 * 790;
    v1282.translate(p890 * 5, p890 * 5);
    v1282.globalAlpha = p891 ? 0 : 0;
    f93(v1282, p890 * 178.5, p890 * 172.828125, p890 * 150);
    f90(v1282, vUndefined, p892[0], p890 * 65);
    f93(v1282, p890 * 178.5, p890 * 172.828125, p890 * 150);
    f90(v1282, vVVVVVUndefined1322, p892[0], p890 * 55);
    v1282.closePath();
    v1282.save();
    v1282.translate(p890 * 177, p890 * 512.328125);
    f87(v1282, p890 * -25, p890 * -202.5, p890 * 65, p890 * 405, p890 * 25);
    v1282.restore();
    f90(v1282, p892[0]);
    v1282.save();
    v1282.translate(p890 * 136, p890 * 581.828125);
    f87(v1282, p890 * -39, p890 * -23, p890 * 78, p890 * 46, p890 * 25);
    v1282.restore();
    f90(v1282, p892[0]);
    v1282.save();
    v1282.translate(p890 * 135.5, p890 * 663.828125);
    f87(v1282, p890 * -39.5, p890 * -22, p890 * 79, p890 * 44, p890 * 25);
    v1282.restore();
    f90(v1282, p892[0]);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 114, p890 * 594.828125);
    v1282.bezierCurveTo(p890 * 175, p890 * 596.828125, p890 * 163, p890 * 596.828125, p890 * 172, p890 * 594.828125);
    v1282.bezierCurveTo(p890 * 171.5, p890 * 633.828125, p890 * 171.5, p890 * 633.828125, p890 * 171, p890 * 672.828125);
    v1282.bezierCurveTo(p890 * 110, p890 * 673.828125, p890 * 140.5, p890 * 673.328125, p890 * 110, p890 * 673.828125);
    v1282.bezierCurveTo(p890 * 110.5, p890 * 661.828125, p890 * 110.5, p890 * 661.828125, p890 * 111, p890 * 649.828125);
    v1282.bezierCurveTo(p890 * 157, p890 * 633.828125, p890 * 134, p890 * 607.828125, p890 * 114, p890 * 594.828125);
    v1282.closePath();
    f90(v1282, p892[0]);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.translate(0, p890 * 5);
    v1282.moveTo(p890 * 140, p890 * 294.828125);
    v1282.bezierCurveTo(p890 * 212, p890 * 295.828125, p890 * 176.5, p890 * 295.328125, p890 * 213, p890 * 295.828125);
    v1282.bezierCurveTo(p890 * 201.5, p890 * 325.328125, p890 * 201.5, p890 * 325.328125, p890 * 190, p890 * 354.828125);
    v1282.bezierCurveTo(p890 * 175.5, p890 * 355.828125, p890 * 175.5, p890 * 355.828125, p890 * 161, p890 * 356.828125);
    v1282.bezierCurveTo(p890 * 154.5, p890 * 328.828125, p890 * 154.5, p890 * 328.828125, p890 * 148, p890 * 300.828125);
    v1282.closePath();
    f90(v1282, p892[0]);
    v1282.translate(3, p890 * -5);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 159, p890 * 679.828125);
    v1282.bezierCurveTo(p890 * 180, p890 * 665.828125, p890 * 155, p890 * 675.828125, p890 * 151, p890 * 671.828125);
    v1282.bezierCurveTo(p890 * 154.5, p890 * 685.328125, p890 * 154.5, p890 * 685.328125, p890 * 158, p890 * 698.828125);
    v1282.bezierCurveTo(p890 * 171, p890 * 699.828125, p890 * 171, p890 * 699.828125, p890 * 184, p890 * 700.828125);
    v1282.closePath();
    f90(v1282, p892[0]);
    v1282.save();
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 157, p890 * 548.828125);
    v1282.bezierCurveTo(p890 * 157, p890 * 561.828125, p890 * 157, p890 * 561.828125, p890 * 157, p890 * 574.828125);
    v1282.bezierCurveTo(p890 * 132.5, p890 * 580.828125, p890 * 132.5, p890 * 580.828125, p890 * 108, p890 * 586.828125);
    v1282.bezierCurveTo(p890 * 112, p890 * 599.828125, p890 * 111, p890 * 593.828125, p890 * 112, p890 * 599.828125);
    v1282.bezierCurveTo(p890 * 159, p890 * 603.828125, p890 * 126.5, p890 * 601.328125, p890 * 141, p890 * 602.828125);
    v1282.bezierCurveTo(p890 * 145, p890 * 641.828125, p890 * 143.5, p890 * 623.828125, p890 * 146, p890 * 644.828125);
    v1282.bezierCurveTo(p890 * 129.5, p890 * 645.328125, p890 * 129.5, p890 * 645.328125, p890 * 113, p890 * 645.828125);
    v1282.bezierCurveTo(p890 * 107.5, p890 * 652.828125, p890 * 107.5, p890 * 652.828125, p890 * 102, p890 * 659.828125);
    v1282.bezierCurveTo(p890 * 104, p890 * 669.328125, p890 * 104, p890 * 669.328125, p890 * 106, p890 * 678.828125);
    v1282.bezierCurveTo(p890 * 145, p890 * 679.328125, p890 * 145, p890 * 679.328125, p890 * 184, p890 * 679.828125);
    v1282.bezierCurveTo(p890 * 185, p890 * 615.828125, p890 * 185, p890 * 615.828125, p890 * 186, p890 * 551.828125);
    v1282.bezierCurveTo(p890 * 172.5, p890 * 551.328125, p890 * 172.5, p890 * 551.328125, p890 * 159, p890 * 550.828125);
    v1282.closePath();
    f90(v1282, p892[0], p892[0], p890 * 7);
    v1282.restore();
    v1282.globalAlpha = 1;
    v1282.translate(p890 * 15, p890 * 35);
    f93(v1282, p890 * 178.5, p890 * 172.828125, p890 * 150);
    f90(v1282, undefined, p892[2], p890 * 95);
    f93(v1282, p890 * 178.5, p890 * 172.828125, p890 * 150);
    f90(v1282, vVVUndefined83, p892[1], p890 * 55);
    v1282.closePath();
    v1282.save();
    v1282.translate(p890 * 177, p890 * 512.328125);
    f87(v1282, p890 * -25, p890 * -202.5, p890 * 65, p890 * 405, p890 * 25);
    v1282.restore();
    f90(v1282, p892[1], p892[2], p890 * 20);
    v1282.save();
    v1282.translate(p890 * 136, p890 * 581.828125);
    f87(v1282, p890 * -39, p890 * -23, p890 * 78, p890 * 46, p890 * 25);
    v1282.restore();
    f90(v1282, p892[1], p892[2], p890 * 20);
    v1282.save();
    v1282.translate(p890 * 135.5, p890 * 663.828125);
    f87(v1282, p890 * -39.5, p890 * -22, p890 * 79, p890 * 44, p890 * 25);
    v1282.restore();
    f90(v1282, p892[1], p892[2], p890 * 20);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 114, p890 * 594.828125);
    v1282.bezierCurveTo(p890 * 175, p890 * 596.828125, p890 * 163, p890 * 596.828125, p890 * 172, p890 * 594.828125);
    v1282.bezierCurveTo(p890 * 171.5, p890 * 633.828125, p890 * 171.5, p890 * 633.828125, p890 * 171, p890 * 672.828125);
    v1282.bezierCurveTo(p890 * 110, p890 * 673.828125, p890 * 140.5, p890 * 673.328125, p890 * 110, p890 * 673.828125);
    v1282.bezierCurveTo(p890 * 110.5, p890 * 661.828125, p890 * 110.5, p890 * 661.828125, p890 * 111, p890 * 649.828125);
    v1282.bezierCurveTo(p890 * 157, p890 * 633.828125, p890 * 134, p890 * 607.828125, p890 * 114, p890 * 594.828125);
    v1282.closePath();
    f90(v1282, p892[1]);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.translate(0, p890 * 5);
    v1282.moveTo(p890 * 123, p890 * 294.828125);
    v1282.bezierCurveTo(p890 * 212, p890 * 295.828125, p890 * 190.5, p890 * 295.328125, p890 * 250, p890 * 295.828125);
    v1282.bezierCurveTo(p890 * 231.5, p890 * 325.328125, p890 * 231.5, p890 * 325.328125, p890 * 220, p890 * 354.828125);
    v1282.bezierCurveTo(p890 * 175.5, p890 * 355.828125, p890 * 175.5, p890 * 355.828125, p890 * 140, p890 * 356.828125);
    v1282.bezierCurveTo(p890 * 123.5, p890 * 328.828125, p890 * 123.5, p890 * 328.828125, p890 * 123, p890 * 294.828125);
    v1282.closePath();
    f90(v1282, p892[1]);
    v1282.translate(0, p890 * -5);
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 159, p890 * 679.828125);
    v1282.bezierCurveTo(p890 * 180, p890 * 665.828125, p890 * 155, p890 * 675.828125, p890 * 151, p890 * 671.828125);
    v1282.bezierCurveTo(p890 * 154.5, p890 * 685.328125, p890 * 154.5, p890 * 685.328125, p890 * 158, p890 * 698.828125);
    v1282.bezierCurveTo(p890 * 171, p890 * 699.828125, p890 * 171, p890 * 699.828125, p890 * 184, p890 * 700.828125);
    v1282.closePath();
    f90(v1282, p892[1]);
    v1282.save();
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p890 * 157, p890 * 548.828125);
    v1282.bezierCurveTo(p890 * 157, p890 * 561.828125, p890 * 157, p890 * 561.828125, p890 * 157, p890 * 574.828125);
    v1282.bezierCurveTo(p890 * 132.5, p890 * 580.828125, p890 * 132.5, p890 * 580.828125, p890 * 108, p890 * 586.828125);
    v1282.bezierCurveTo(p890 * 112, p890 * 599.828125, p890 * 111, p890 * 593.828125, p890 * 112, p890 * 599.828125);
    v1282.bezierCurveTo(p890 * 159, p890 * 603.828125, p890 * 126.5, p890 * 601.328125, p890 * 141, p890 * 602.828125);
    v1282.bezierCurveTo(p890 * 145, p890 * 641.828125, p890 * 143.5, p890 * 623.828125, p890 * 146, p890 * 644.828125);
    v1282.bezierCurveTo(p890 * 129.5, p890 * 645.328125, p890 * 129.5, p890 * 645.328125, p890 * 113, p890 * 645.828125);
    v1282.bezierCurveTo(p890 * 107.5, p890 * 652.828125, p890 * 107.5, p890 * 652.828125, p890 * 102, p890 * 659.828125);
    v1282.bezierCurveTo(p890 * 104, p890 * 669.328125, p890 * 104, p890 * 669.328125, p890 * 106, p890 * 678.828125);
    v1282.bezierCurveTo(p890 * 145, p890 * 679.328125, p890 * 145, p890 * 679.328125, p890 * 184, p890 * 679.828125);
    v1282.bezierCurveTo(p890 * 185, p890 * 615.828125, p890 * 185, p890 * 615.828125, p890 * 186, p890 * 551.828125);
    v1282.bezierCurveTo(p890 * 172.5, p890 * 551.328125, p890 * 172.5, p890 * 551.328125, p890 * 159, p890 * 550.828125);
    v1282.closePath();
    f90(v1282, p892[1], p892[1], p890 * 7);
    v1282.restore();
    return v1281;
  }
  function f197(p893, p894, p895) {
    var v1283 = document.createElement("canvas");
    var v1284 = v1283.getContext("2d");
    v1283.width = p893 * 142;
    v1283.height = p893 * 118;
    v1284.save();
    v1284.translate(p893 * 70.16665649414062, p893 * 38.20831298828125);
    f87(v1284, p893 * -58.5, p893 * -27.5, p893 * 117, p893 * 55, p893 * 20);
    v1284.restore();
    f90(v1284, p895[0], p895[1], p893 * 4);
    v1284.save();
    v1284.translate(p893 * 70, p893 * 42.70831298828125);
    f87(v1284, p893 * -61, p893 * -20, p893 * 122, p893 * 40, p893 * 20);
    v1284.restore();
    f90(v1284, p895[2], p895[1], p893 * 4);
    v1284.beginPath();
    v1284.lineCap = "round";
    v1284.lineJoin = "round";
    v1284.moveTo(p893 * 123, p893 * 70.375);
    v1284.bezierCurveTo(p893 * 115, p893 * 99.375, p893 * 119, p893 * 85.375, p893 * 115, p893 * 100.375);
    v1284.bezierCurveTo(p893 * 112, p893 * 116.375, p893 * 117, p893 * 109.375, p893 * 131, p893 * 100.375);
    v1284.bezierCurveTo(p893 * 131, p893 * 83.375, p893 * 131, p893 * 83.375, p893 * 131, p893 * 66.375);
    v1284.closePath();
    f90(v1284, p895[2], p895[1], p893 * 4);
    v1284.beginPath();
    v1284.lineCap = "round";
    v1284.lineJoin = "round";
    v1284.moveTo(p893 * 11, p893 * 68.375);
    v1284.bezierCurveTo(p893 * 11.166656494140625, p893 * 84.375, p893 * 9, p893 * 99.375, p893 * 10, p893 * 100.375);
    v1284.bezierCurveTo(p893 * 35, p893 * 113.375, p893 * 27, p893 * 110.375, p893 * 25, p893 * 95.375);
    v1284.bezierCurveTo(p893 * 16, p893 * 68.375, p893 * 17, p893 * 69.375, p893 * 17, p893 * 68.375);
    v1284.closePath();
    f90(v1284, p895[2], p895[1], p893 * 4);
    v1284.beginPath();
    v1284.lineCap = "round";
    v1284.lineJoin = "round";
    v1284.moveTo(p893 * 46, p893 * 32.375);
    v1284.bezierCurveTo(p893 * 43, p893 * 8.375, p893 * 45, p893 * 7.375, p893 * 56, p893 * 6.375);
    v1284.bezierCurveTo(p893 * 105, p893 * 4.375, p893 * 102, p893 * 6.375, p893 * 97, p893 * 32.375);
    v1284.bezierCurveTo(p893 * 138, p893 * 43.375, p893 * 133, p893 * 45.375, p893 * 133, p893 * 58.375);
    v1284.bezierCurveTo(p893 * 133, p893 * 85.375, p893 * 125, p893 * 74.375, p893 * 111, p893 * 70.375);
    v1284.bezierCurveTo(p893 * 70, p893 * 69.875, p893 * 29, p893 * 69.375, p893 * 29, p893 * 69.375);
    v1284.bezierCurveTo(p893 * 7, p893 * 84.375, p893 * 7, p893 * 70.375, p893 * 7, p893 * 59.375);
    v1284.bezierCurveTo(p893 * 6, p893 * 28.375, p893 * 32, p893 * 39.375, p893 * 44, p893 * 32.375);
    v1284.closePath();
    f90(v1284, p895[2], p895[1], p893 * 4);
    f93(v1284, p893 * 71, p893 * 44.375, p893 * 16.55294535724685);
    f90(v1284, p895[2], p895[1], p893 * 4);
    f93(v1284, p893 * 71, p893 * 43.70831298828125, p893 * 8.94427190999916);
    f90(v1284, p895[2], p895[1], p893 * 4);
    return v1283;
  }
  function f198(p896, p897, p898) {
    var v1285 = document.createElement("canvas");
    var v1286 = v1285.getContext("2d");
    v1285.width = p896 * 218;
    v1285.height = p896 * 185;
    v1286.beginPath();
    v1286.lineCap = "round";
    v1286.lineJoin = "round";
    v1286.moveTo(p896 * 64, p896 * 53.135406494140625);
    v1286.bezierCurveTo(p896 * 92, p896 * 17.135406494140625, p896 * 116, p896 * 11.135406494140625, p896 * 158, p896 * 53.135406494140625);
    v1286.bezierCurveTo(p896 * 178, p896 * 74.13540649414062, p896 * 181, p896 * 81.13540649414062, p896 * 196, p896 * 101.13540649414062);
    v1286.bezierCurveTo(p896 * 214, p896 * 127.13540649414062, p896 * 192, p896 * 138.13540649414062, p896 * 173, p896 * 149.13540649414062);
    v1286.bezierCurveTo(p896 * 137, p896 * 166.13540649414062, p896 * 74, p896 * 170.13540649414062, p896 * 36, p896 * 141.13540649414062);
    v1286.bezierCurveTo(p896 * 13, p896 * 127.13540649414062, p896 * 20, p896 * 119.13540649414062, p896 * 30, p896 * 103.13540649414062);
    v1286.bezierCurveTo(p896 * 48, p896 * 71.13540649414062, p896 * 54, p896 * 67.13540649414062, p896 * 63, p896 * 54.135406494140625);
    v1286.closePath();
    f90(v1286, p898[0], p898[1], p896 * 10);
    v1286.beginPath();
    v1286.lineCap = "round";
    v1286.lineJoin = "round";
    v1286.moveTo(p896 * 107, p896 * 25.135406494140625);
    v1286.bezierCurveTo(p896 * 62, p896 * 90.13540649414062, p896 * 54, p896 * 129.13540649414062, p896 * 53, p896 * 151.13540649414062);
    v1286.bezierCurveTo(p896 * 39.5, p896 * 142.13540649414062, p896 * 39.5, p896 * 142.13540649414062, p896 * 26, p896 * 133.13540649414062);
    v1286.bezierCurveTo(p896 * 23.5, p896 * 128.63540649414062, p896 * 23.5, p896 * 128.63540649414062, p896 * 21, p896 * 124.13540649414062);
    v1286.bezierCurveTo(p896 * 22, p896 * 113.13540649414062, p896 * 31, p896 * 99.13540649414062, p896 * 40, p896 * 88.13540649414062);
    v1286.bezierCurveTo(p896 * 54.5, p896 * 67.13540649414062, p896 * 54.5, p896 * 67.13540649414062, p896 * 69, p896 * 46.135406494140625);
    v1286.bezierCurveTo(p896 * 80.5, p896 * 36.635406494140625, p896 * 80.5, p896 * 36.635406494140625, p896 * 92, p896 * 27.135406494140625);
    v1286.closePath();
    f90(v1286, p898[1]);
    return v1285;
  }
  function f199(p899) {
    return vWindow.String.fromCharCode(p899);
  }
  function f200(p900, p901, p902) {
    var v1287 = document.createElement("canvas");
    var v1288 = v1287.getContext("2d");
    v1287.width = p900 * 175;
    v1287.height = p900 * 169;
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p900 * 17, p900 * 112);
    v1288.bezierCurveTo(p900 * 14, p900 * 146, p900 * 27, p900 * 152, p900 * 37, p900 * 149);
    v1288.bezierCurveTo(p900 * 78, p900 * 155, p900 * 128, p900 * 150, p900 * 146, p900 * 150);
    v1288.bezierCurveTo(p900 * 158, p900 * 144, p900 * 158, p900 * 121, p900 * 153, p900 * 114);
    v1288.closePath();
    f90(v1288, p902[8], p902[9], p900 * 5);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p900 * 127, p900 * 111);
    v1288.bezierCurveTo(p900 * 133, p900 * 136, p900 * 115, p900 * 149, p900 * 88, p900 * 150);
    v1288.bezierCurveTo(p900 * 119.5, p900 * 151, p900 * 119.5, p900 * 151, p900 * 151, p900 * 152);
    v1288.bezierCurveTo(p900 * 159, p900 * 136, p900 * 155, p900 * 126, p900 * 154, p900 * 113);
    v1288.closePath();
    f90(v1288, p902[9]);
    v1288.globalAlpha = 0.5;
    v1288.translate(0, p900 * 3);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p900 * 15, p900 * 117);
    v1288.bezierCurveTo(p900 * 34, p900 * 109, p900 * 61, p900 * 106, p900 * 94, p900 * 109);
    v1288.bezierCurveTo(p900 * 126, p900 * 110, p900 * 142, p900 * 113, p900 * 154, p900 * 119);
    v1288.bezierCurveTo(p900 * 154, p900 * 123, p900 * 154, p900 * 123, p900 * 154, p900 * 127);
    v1288.bezierCurveTo(p900 * 127, p900 * 118, p900 * 15, p900 * 122, p900 * 18, p900 * 129);
    v1288.closePath();
    f90(v1288, p902[0]);
    v1288.globalAlpha = 1;
    v1288.translate(0, p900 * -3);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p900 * 14, p900 * 127);
    v1288.bezierCurveTo(p900 * 13, p900 * 117, p900 * 12, p900 * 109, p900 * 15, p900 * 103);
    v1288.bezierCurveTo(p900 * 16, p900 * 95, p900 * 21, p900 * 92, p900 * 60, p900 * 93);
    v1288.bezierCurveTo(p900 * 91, p900 * 93, p900 * 118, p900 * 93, p900 * 143, p900 * 96);
    v1288.bezierCurveTo(p900 * 151, p900 * 96, p900 * 155, p900 * 99, p900 * 156, p900 * 112);
    v1288.bezierCurveTo(p900 * 157, p900 * 124, p900 * 157, p900 * 127, p900 * 156, p900 * 128);
    v1288.bezierCurveTo(p900 * 138, p900 * 112, p900 * 100, p900 * 118, p900 * 84, p900 * 118);
    v1288.bezierCurveTo(p900 * 28, p900 * 118, p900 * 20, p900 * 120, p900 * 16, p900 * 127);
    v1288.closePath();
    f90(v1288, p902[4], p902[5], p900 * 5);
    v1288.save();
    v1288.translate(p900 * 27.5, p900 * 138.5);
    f87(v1288, p900 * -13.5, p900 * -14.5, p900 * 27, p900 * 29, p900 * 4);
    v1288.restore();
    f90(v1288, p902[1], p902[2], p900 * 5);
    v1288.save();
    v1288.translate(p900 * 143.5, p900 * 137);
    f87(v1288, p900 * -13.5, p900 * -14, p900 * 27, p900 * 28, p900 * 4);
    v1288.restore();
    f90(v1288, p902[1], p902[2], p900 * 5);
    return v1287;
  }
  function f201(p903, p904, p905) {
    var v1289 = document.createElement("canvas");
    var v1290 = v1289.getContext("2d");
    v1289.width = p903 * 160;
    v1289.height = p903 * 161;
    v1290.globalAlpha = p904 ? 0.5 : 1;
    v1290.translate(0, p903 * 10);
    v1290.save();
    v1290.translate(p903 * 80.5, p903 * 78);
    f87(v1290, p903 * -71.5, p903 * -71, p903 * 143, p903 * 143, p903 * 10);
    v1290.restore();
    f90(v1290, p905[0]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p903 * -10);
    v1290.save();
    v1290.translate(p903 * 80.5, p903 * 78);
    f87(v1290, p903 * -71.5, p903 * -71, p903 * 143, p903 * 143, p903 * 10);
    v1290.restore();
    f90(v1290, p905[1], p905[2], p903 * 6);
    v1290.save();
    v1290.translate(p903 * 80, p903 * 78.5);
    f87(v1290, p903 * -17, p903 * -72.5, p903 * 34, p903 * 145, p903 * 10);
    v1290.restore();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.globalAlpha = p904 ? 0.5 : 1;
    v1290.translate(0, p903 * 10);
    v1290.save();
    v1290.translate(p903 * 80, p903 * 79.5);
    f87(v1290, p903 * -73, p903 * -16.5, p903 * 145, p903 * 34, p903 * 10);
    v1290.restore();
    f90(v1290, p905[0]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p903 * -10);
    v1290.save();
    v1290.translate(p903 * 80, p903 * 79.5);
    f87(v1290, p903 * -73, p903 * -16.5, p903 * 145, p903 * 34, p903 * 10);
    v1290.restore();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.globalAlpha = p904 ? 0.5 : 1;
    v1290.translate(0, p903 * 10);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 79, p903 * 71);
    v1290.bezierCurveTo(p903 * 90, p903 * 42, p903 * 98, p903 * 36, p903 * 109, p903 * 43);
    v1290.bezierCurveTo(p903 * 119, p903 * 47, p903 * 128, p903 * 62, p903 * 107, p903 * 72);
    v1290.bezierCurveTo(p903 * 96, p903 * 78.5, p903 * 96, p903 * 78.5, p903 * 85, p903 * 85);
    v1290.closePath();
    f90(v1290, p905[0]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 84, p903 * 78);
    v1290.bezierCurveTo(p903 * 113, p903 * 82, p903 * 123, p903 * 97, p903 * 115, p903 * 108);
    v1290.bezierCurveTo(p903 * 110, p903 * 119, p903 * 98, p903 * 124, p903 * 87, p903 * 107);
    v1290.bezierCurveTo(p903 * 81.5, p903 * 94.5, p903 * 81.5, p903 * 94.5, p903 * 76, p903 * 82);
    v1290.closePath();
    f90(v1290, p905[0]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 80, p903 * 73);
    v1290.bezierCurveTo(p903 * 64, p903 * 37, p903 * 55, p903 * 34, p903 * 45, p903 * 42);
    v1290.bezierCurveTo(p903 * 30, p903 * 54, p903 * 36, p903 * 65, p903 * 51, p903 * 72);
    v1290.bezierCurveTo(p903 * 62.5, p903 * 77, p903 * 62.5, p903 * 77, p903 * 74, p903 * 82);
    v1290.closePath();
    f90(v1290, p905[0]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 82, p903 * 83);
    v1290.bezierCurveTo(p903 * 73, p903 * 107, p903 * 60, p903 * 123, p903 * 47, p903 * 113);
    v1290.bezierCurveTo(p903 * 33, p903 * 105, p903 * 33, p903 * 92, p903 * 52, p903 * 85);
    v1290.bezierCurveTo(p903 * 74, p903 * 73, p903 * 77, p903 * 76, p903 * 76, p903 * 75);
    v1290.closePath();
    f90(v1290, p905[0]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p903 * -10);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 79, p903 * 71);
    v1290.bezierCurveTo(p903 * 90, p903 * 42, p903 * 98, p903 * 36, p903 * 109, p903 * 43);
    v1290.bezierCurveTo(p903 * 119, p903 * 47, p903 * 128, p903 * 62, p903 * 107, p903 * 72);
    v1290.bezierCurveTo(p903 * 96, p903 * 78.5, p903 * 96, p903 * 78.5, p903 * 85, p903 * 85);
    v1290.closePath();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 84, p903 * 78);
    v1290.bezierCurveTo(p903 * 113, p903 * 82, p903 * 123, p903 * 97, p903 * 115, p903 * 108);
    v1290.bezierCurveTo(p903 * 110, p903 * 119, p903 * 98, p903 * 124, p903 * 87, p903 * 107);
    v1290.bezierCurveTo(p903 * 81.5, p903 * 94.5, p903 * 81.5, p903 * 94.5, p903 * 76, p903 * 82);
    v1290.closePath();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 80, p903 * 73);
    v1290.bezierCurveTo(p903 * 64, p903 * 37, p903 * 55, p903 * 34, p903 * 45, p903 * 42);
    v1290.bezierCurveTo(p903 * 30, p903 * 54, p903 * 36, p903 * 65, p903 * 51, p903 * 72);
    v1290.bezierCurveTo(p903 * 62.5, p903 * 77, p903 * 62.5, p903 * 77, p903 * 74, p903 * 82);
    v1290.closePath();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p903 * 82, p903 * 83);
    v1290.bezierCurveTo(p903 * 73, p903 * 107, p903 * 60, p903 * 123, p903 * 47, p903 * 113);
    v1290.bezierCurveTo(p903 * 33, p903 * 105, p903 * 33, p903 * 92, p903 * 52, p903 * 85);
    v1290.bezierCurveTo(p903 * 74, p903 * 73, p903 * 77, p903 * 76, p903 * 76, p903 * 75);
    v1290.closePath();
    f90(v1290, p905[3], p905[4], p903 * 6);
    v1290.globalAlpha = p904 ? 0.5 : 1;
    v1290.translate(0, p903 * 10);
    v1290.save();
    v1290.translate(p903 * 78.5, p903 * 78);
    f87(v1290, p903 * -13.5, p903 * -14, p903 * 27, p903 * 27, p903 * 6);
    v1290.restore();
    f90(v1290, p905[0]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p903 * -10);
    v1290.save();
    v1290.translate(p903 * 78.5, p903 * 78);
    f87(v1290, p903 * -13.5, p903 * -14, p903 * 27, p903 * 27, p903 * 6);
    v1290.restore();
    f90(v1290, p905[3], p905[4], p903 * 6);
    return v1289;
  }
  (function () {
    const v1291 = {
      ⵠΔΔⲆⵠᐃΔ: 1856044,
      ⲆᐃΔΔΔⲆⵠ: 7806441,
      ΔⲆⲆΔᐃᐃΔ: 14035746,
      ⵠᐃᐃᐃᐃⵠΔ: 12523435
    };
  })();
  function f202(p906) {
    const vF43 = function () {
      for (let v1292 = 0; v1292 < 5; v1292++) {
        vWindow.addEventListener("click", function () {
          vF43();
        });
      }
    };
    vF43();
  }
  function f203() {
    new Date().getTime();
    function e(p907) {
      var v1293 = 0;
      var v1294 = 0;
      for (var v1295 = 0; v1295 < p907.length; v1295++) {
        var v1296 = p907.charAt(v1295);
        if (v1296 !== "_" && v1295 !== 5) {
          if (v1296 === "1") {
            v1293 += Math.pow(2, v1294);
          }
          v1294++;
        }
      }
      return v1293;
    }
    ΔⲆᐃᐃᐃⲆᐃⲆᐃ();
    ΔΔ[1334] = [ⵠᐃ.ᐃΔⵠΔⵠᐃⵠ, ⵠᐃ.ΔΔⲆΔΔᐃᐃ];
    ΔΔ[1333] = [];
    ΔΔ[1333][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_010_000")] = [ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ⲆⵠⲆΔⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_010_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_010_000")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_011_000")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_010_000")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_011_010")] = [ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_011_011")] = [ⵠᐃ.ΔᐃᐃⲆⵠⲆⲆ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_110_000")] = [ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_110_010")] = [ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ⵠΔⲆᐃⲆⵠⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_110_110")] = [ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ⲆᐃΔᐃᐃⵠᐃΔⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ⵠΔⲆᐃⲆⵠⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_111_000")] = [ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_111_111")] = [ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ΔᐃᐃⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_010_000")] = [ⵠᐃ.ⲆⵠⲆΔⵠ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_010_010")] = [ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_011_000")] = [ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ᐃΔⵠᐃⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_000")] = [ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")] = [ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_011_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_011_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_111_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_111_000")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_111_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_111_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_111_110")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_111_111")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_111_110")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("000_111_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("010_110_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_011_000")] = [ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ᐃΔⵠᐃⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_011_010")] = [ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_011_011")] = [ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ΔᐃᐃⲆⵠⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_000")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_011_010")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_010")] = [ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_010")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_110")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_010")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("011_111_111")] = [ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔᐃᐃⲆⵠⲆⲆ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_110_000")] = [ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ΔⲆΔⵠⵠᐃⲆ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_110_010")] = [ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_110_110")] = [ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_000")] = [ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ΔⲆΔⵠⵠᐃⲆ, ⵠᐃ.ⵠΔΔΔΔⲆΔ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_110")] = [ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.ⵠΔΔΔΔⲆΔ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_111")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("110_111_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_110")] = [ⵠᐃ.ᐃΔⲆⵠⲆ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ⵠΔΔΔΔⲆΔ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ΔΔⵠΔᐃⲆΔ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_011")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_110")];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_000")] = [ⵠᐃ.ΔⲆΔⵠⵠᐃⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ⵠΔΔΔΔⲆΔ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_111")] = [ⵠᐃ.ΔΔⵠΔᐃⲆΔ, ⵠᐃ.ΔⲆᐃⲆⲆ, ⵠᐃ.ᐃⲆⲆⵠⵠ, ⵠᐃ.ΔᐃᐃⲆⵠⲆⲆ, ⵠᐃ.ΔⲆᐃⲆΔΔⲆ, ⵠᐃ.ⵠⲆΔⵠᐃⲆⵠ, ⵠᐃ.ⵠⲆⵠⲆⲆ, ⵠᐃ.ᐃⵠⲆΔΔⲆᐃ, ⵠᐃ.ᐃΔΔⵠΔⲆⲆ, ⵠᐃ.Ⲇⵠᐃⵠⵠ, ⵠᐃ.ᐃⵠⲆⲆⵠⲆⵠ, ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆ, ⵠᐃ.ᐃⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⵠΔ, ⵠᐃ.ⲆⵠⲆΔⵠ, ⵠᐃ.ᐃⲆⲆΔΔ, ⵠᐃ.ΔΔΔΔΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔΔⲆⲆⲆ, ⵠᐃ.ΔΔⵠΔⵠ, ⵠᐃ.ᐃΔⵠᐃⲆ, ⵠᐃ.ᐃΔⲆⵠⲆ];
    ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_010")] = ΔΔ[1333][v624.Ⲇⵠᐃ][e("111_111_110")];
    ΔΔ[1333][v624.Δⵠⵠ] = [];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_010_000")] = [ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔᐃⲆΔⲆ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_010_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("000_010_000")];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_011_000")] = ΔΔ[1333][v624.Δⵠⵠ][e("000_010_000")];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_011_010")] = [ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_011_011")] = [ⵠᐃ.ᐃᐃⵠⲆⲆⵠΔ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_110_000")] = [ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔᐃⲆΔⲆ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_110_010")] = [ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔⲆⲆᐃⵠΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_110_110")] = [ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ᐃⲆᐃΔⵠΔⵠᐃⵠ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔⲆⲆᐃⵠΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_111_000")] = [ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_111_111")] = [ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ᐃᐃⵠⲆⲆⵠΔ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_010_000")] = [ⵠᐃ.ΔᐃⲆΔⲆ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_010_010")] = [ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_011_000")] = [ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔⵠⲆⵠΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_110_000")] = [ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")] = [ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_011_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_011_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_111_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_110_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_111_000")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_111_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_111_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_111_110")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("010_111_111")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_111_110")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("000_111_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("010_110_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_011_000")] = [ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔⵠⲆⵠΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_011_010")] = [ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_011_011")] = [ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ᐃᐃⵠⲆⲆⵠΔ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_111_000")] = ΔΔ[1333][v624.Δⵠⵠ][e("011_011_010")];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_111_010")] = [ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_111_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("011_111_010")];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_111_110")] = ΔΔ[1333][v624.Δⵠⵠ][e("011_111_010")];
    ΔΔ[1333][v624.Δⵠⵠ][e("011_111_111")] = [ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⵠⲆⲆⵠΔ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_110_000")] = [ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⵠᐃⵠⲆΔΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_110_010")] = [ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_110_110")] = [ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_111_000")] = [ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ⵠᐃⵠⲆΔΔⲆ, ⵠᐃ.ⵠΔⲆΔᐃᐃΔ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_111_110")] = [ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⵠΔⲆΔᐃᐃΔ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_111_111")] = ΔΔ[1333][v624.Δⵠⵠ][e("110_111_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_111_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("110_111_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("110_111_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("110_111_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("111_111_110")] = [ⵠᐃ.ΔΔᐃᐃΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ⵠΔⲆΔᐃᐃΔ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("111_111_011")] = ΔΔ[1333][v624.Δⵠⵠ][e("111_111_110")];
    ΔΔ[1333][v624.Δⵠⵠ][e("111_111_000")] = [ⵠᐃ.ⵠᐃⵠⲆΔΔⲆ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ⵠΔⲆΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("111_111_111")] = [ⵠᐃ.ᐃΔⵠᐃᐃᐃΔ, ⵠᐃ.ᐃΔⲆⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⵠⲆⲆⵠΔ, ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆ, ⵠᐃ.ⲆⲆⵠⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔᐃΔ, ⵠᐃ.ⵠⲆΔⵠΔΔΔ, ⵠᐃ.ᐃᐃΔⲆⲆⵠᐃ, ⵠᐃ.ⵠᐃⵠⲆᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⲆⲆᐃⵠⲆⵠⵠ, ⵠᐃ.ΔⲆⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔᐃᐃⵠ, ⵠᐃ.ᐃᐃⲆⵠᐃⲆⵠ, ⵠᐃ.ⲆⲆΔⲆⲆⵠⲆ, ⵠᐃ.ΔᐃⲆΔⲆ, ⵠᐃ.ⵠΔⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆΔᐃⵠᐃ, ⵠᐃ.ᐃΔᐃᐃⲆΔᐃ, ⵠᐃ.ᐃⵠᐃΔⵠⲆⲆ, ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ΔⵠⲆⵠΔ, ⵠᐃ.ΔΔᐃᐃΔ];
    ΔΔ[1333][v624.Δⵠⵠ][e("111_111_010")] = ΔΔ[1333][v624.Δⵠⵠ][e("111_111_110")];
    ΔΔ[1332] = [];
    ΔΔ[1332][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_010_000")] = ⵠᐃ.ᐃⵠⲆᐃΔΔΔᐃⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_010_010")] = ⵠᐃ.ΔⲆᐃⲆⲆⵠΔᐃⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_011_000")] = ⵠᐃ.ⵠⵠΔΔⲆⲆᐃᐃⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_011_010")] = ⵠᐃ.ᐃⵠΔΔⲆⲆⲆΔΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_011_011")] = ⵠᐃ.ⵠⲆⲆⲆΔⵠᐃⲆᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_110_000")] = ⵠᐃ.ᐃⵠⲆᐃⵠⵠΔⲆⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_110_010")] = ⵠᐃ.ᐃΔΔΔⲆⲆᐃⵠΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_110_110")] = ⵠᐃ.ΔⲆᐃⲆⵠᐃΔⵠᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_111_000")] = ⵠᐃ.ᐃᐃΔⵠΔⲆᐃΔⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_111_010")] = ⵠᐃ.ⲆⲆΔΔᐃⵠΔᐃᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_111_011")] = ⵠᐃ.ⲆⲆᐃΔⲆⲆΔⲆⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_111_110")] = ⵠᐃ.ⵠⵠⵠᐃⵠΔᐃᐃⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("000_111_111")] = ⵠᐃ.ᐃⲆⵠᐃⵠⲆⲆⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_010_000")] = ⵠᐃ.ⵠΔΔⲆⲆΔᐃᐃΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_010_010")] = ⵠᐃ.ⵠⲆⵠⵠᐃⵠⲆΔⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_011_000")] = ⵠᐃ.ⵠΔⵠⲆΔⲆᐃⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_011_010")] = ⵠᐃ.ⲆᐃΔⲆⲆⵠᐃΔΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_011_011")] = ⵠᐃ.ΔⲆⵠΔⲆᐃⲆⲆᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_110_000")] = ⵠᐃ.ⲆᐃΔⲆⲆⵠᐃᐃⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_110_010")] = ⵠᐃ.ⵠΔᐃⵠⵠᐃⲆΔⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_110_110")] = ⵠᐃ.ⵠⵠᐃⵠΔⲆΔⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_111_000")] = ⵠᐃ.ΔΔⵠⵠⵠⵠᐃΔⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_111_010")] = ⵠᐃ.ᐃΔΔᐃΔΔΔⵠⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_111_011")] = ⵠᐃ.ⲆⲆᐃⲆⵠⲆΔⵠⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_111_110")] = ⵠᐃ.ΔΔΔⲆᐃΔΔⵠⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("010_111_111")] = ⵠᐃ.ᐃⲆⲆΔⵠⲆⵠΔⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_011_000")] = ⵠᐃ.ᐃΔᐃΔΔΔΔⲆᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_011_010")] = ⵠᐃ.ᐃΔΔΔᐃⵠΔᐃΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_011_011")] = ⵠᐃ.ⲆⲆΔᐃᐃΔⲆΔⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_111_000")] = ⵠᐃ.ⵠⲆᐃⵠⲆⵠΔᐃᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_111_010")] = ⵠᐃ.ᐃᐃᐃⵠⵠⲆΔⵠⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_111_011")] = ⵠᐃ.ⵠⵠᐃᐃΔᐃᐃⵠⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_111_110")] = ⵠᐃ.ⲆᐃⵠΔΔΔΔⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("011_111_111")] = ⵠᐃ.ⵠΔⵠⲆΔΔⲆᐃᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_110_000")] = ⵠᐃ.ᐃⲆΔⲆⲆⵠⵠᐃᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_110_010")] = ⵠᐃ.ΔⲆⲆⵠⲆⵠⲆᐃⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_110_110")] = ⵠᐃ.ⵠᐃᐃᐃΔΔᐃᐃⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_111_000")] = ⵠᐃ.ᐃΔΔᐃᐃᐃⲆⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_111_010")] = ⵠᐃ.ⲆⵠⵠᐃΔΔⵠⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_111_011")] = ⵠᐃ.ⵠⲆΔⲆⲆΔⲆᐃⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_111_110")] = ⵠᐃ.ᐃⵠΔΔⲆⵠΔⲆΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("110_111_111")] = ⵠᐃ.ⵠΔⵠᐃⲆⲆⵠⲆⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_011")] = ⵠᐃ.ⵠΔᐃᐃⲆⲆᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_110")] = ⵠᐃ.ⲆⲆⵠᐃᐃⲆᐃⵠⵠ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_011")] = ⵠᐃ.ⵠΔᐃᐃⲆⲆᐃ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_000")] = ⵠᐃ.ⲆᐃⵠΔⲆⵠⵠⵠⲆ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_111")] = ⵠᐃ.ⵠⲆᐃᐃⵠΔΔᐃΔ;
    ΔΔ[1332][v624.Ⲇⵠᐃ][e("111_111_010")] = ⵠᐃ.ᐃᐃⲆⲆᐃⵠᐃⲆΔ;
    ΔΔ[1332][v624.Δⵠⵠ] = [];
    ΔΔ[1332][v624.Δⵠⵠ][e("000_010_000")] = ⵠᐃ.ΔⵠᐃΔΔΔᐃΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_010_010")] = ⵠᐃ.ᐃⲆᐃΔⵠΔⲆⲆⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_011_000")] = ⵠᐃ.ᐃΔᐃᐃΔᐃᐃⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_011_010")] = ⵠᐃ.ᐃⵠⵠΔⲆᐃⲆᐃⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_011_011")] = ⵠᐃ.ᐃⵠΔΔⵠⲆⵠᐃⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_110_000")] = ⵠᐃ.ᐃⲆᐃⲆⵠⵠⵠΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_110_010")] = ⵠᐃ.ΔΔᐃⲆⵠΔΔⵠᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_110_110")] = ⵠᐃ.ΔΔⲆⵠⲆⵠⲆᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_111_000")] = ⵠᐃ.ΔΔⲆᐃᐃΔΔΔᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_111_010")] = ⵠᐃ.ΔΔΔᐃⵠᐃⲆⲆⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_111_011")] = ⵠᐃ.ΔⵠⲆΔᐃⵠΔΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_111_110")] = ⵠᐃ.ⵠⲆⵠᐃΔⲆᐃⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("000_111_111")] = ⵠᐃ.ⲆⵠⲆΔᐃᐃⵠΔᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_010_000")] = ⵠᐃ.ΔⲆⵠΔΔΔᐃΔⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_010_010")] = ⵠᐃ.ᐃΔᐃⵠᐃΔⵠⵠᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_011_000")] = ⵠᐃ.ⵠⵠⲆΔⲆᐃⲆΔⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_011_010")] = ⵠᐃ.ⲆΔⵠⵠᐃⵠΔⵠᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_011_011")] = ⵠᐃ.ⵠⲆᐃᐃⵠⵠᐃⲆΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_110_000")] = ⵠᐃ.ΔᐃⵠⵠⵠᐃΔⲆⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_110_010")] = ⵠᐃ.ⲆⵠᐃⲆⲆΔᐃⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_110_110")] = ⵠᐃ.ⲆⲆᐃⵠᐃⲆⲆΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_111_000")] = ⵠᐃ.ⲆⵠⵠⵠᐃⵠΔⵠⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_111_010")] = ⵠᐃ.ⵠⵠⲆⲆᐃΔΔⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_111_011")] = ⵠᐃ.ⲆΔΔⵠΔᐃⵠᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_111_110")] = ⵠᐃ.ⵠΔᐃᐃᐃⵠⵠΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("010_111_111")] = ⵠᐃ.ᐃᐃⵠⵠⵠᐃⵠᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_011_000")] = ⵠᐃ.ΔᐃⲆΔΔⲆᐃⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_011_010")] = ⵠᐃ.ⲆᐃᐃⵠᐃⲆΔΔⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_011_011")] = ⵠᐃ.ᐃⲆⲆΔΔⵠⲆᐃⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_111_000")] = ⵠᐃ.ⲆⵠⲆⲆⵠᐃΔⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_111_010")] = ⵠᐃ.ⲆⵠⲆⲆᐃᐃΔΔᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_111_011")] = ⵠᐃ.ΔⵠⲆΔⲆⵠᐃᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_111_110")] = ⵠᐃ.ᐃⵠΔΔⲆΔΔΔΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("011_111_111")] = ⵠᐃ.ΔⲆⵠⵠⲆⵠⵠΔᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_110_000")] = ⵠᐃ.ⲆΔΔᐃΔⲆΔΔⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_110_010")] = ⵠᐃ.ⲆⵠΔⲆⲆΔⲆΔⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_110_110")] = ⵠᐃ.ⵠⵠⲆⵠⵠⲆⲆⲆⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_111_000")] = ⵠᐃ.ΔⵠⵠⲆⵠⲆⲆⲆⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_111_010")] = ⵠᐃ.ⲆΔΔⵠⲆΔⵠⵠⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_111_011")] = ⵠᐃ.ᐃᐃᐃΔᐃⵠⵠⲆᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_111_110")] = ⵠᐃ.ᐃΔᐃⵠΔⲆΔⲆΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("110_111_111")] = ⵠᐃ.ΔⲆΔⵠᐃᐃΔΔᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_011")] = ⵠᐃ.ⲆΔᐃⲆᐃᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_110")] = ⵠᐃ.ᐃⲆⲆⲆΔⲆΔⵠⲆ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_011")] = ⵠᐃ.ⲆΔᐃⲆᐃᐃΔ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_000")] = ⵠᐃ.ΔⵠⲆΔⵠⲆΔⲆᐃ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_111")] = ⵠᐃ.ᐃᐃⵠⲆᐃᐃΔⲆⵠ;
    ΔΔ[1332][v624.Δⵠⵠ][e("111_111_010")] = ⵠᐃ.ⵠⲆⵠΔΔᐃΔΔⵠ;
    ΔΔ[315] = [];
    ΔΔ[315][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔᐃⵠΔᐃⵠ;
    ΔΔ[315][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆΔᐃΔΔ;
    ΔΔ[1233] = [];
    ΔΔ[1233][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠΔⲆᐃΔⲆ;
    ΔΔ[1233][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔᐃⵠΔᐃΔ;
    ΔΔ[317] = [];
    ΔΔ[317][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⵠⵠᐃⵠⲆ;
    ΔΔ[317][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠᐃⲆᐃΔ;
    ΔΔ[1230] = [];
    ΔΔ[1230][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔΔᐃΔΔ;
    ΔΔ[1230][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠΔⵠΔΔᐃ;
    ΔΔ[1746] = [];
    ΔΔ[1746][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⲆⵠᐃⲆⵠ;
    ΔΔ[1746][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠⲆᐃΔⲆ;
    ΔΔ[1234] = [];
    ΔΔ[1234][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠᐃΔⲆΔᐃ;
    ΔΔ[1234][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠᐃⲆⵠⲆⵠ;
    ΔΔ[319] = [];
    ΔΔ[319][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠΔⵠⲆΔ;
    ΔΔ[319][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⲆⲆⲆᐃⲆ;
    ΔΔ[1247] = [];
    ΔΔ[1247][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔΔⵠⲆⲆᐃ;
    ΔΔ[1247][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆΔⲆⵠΔ;
    ΔΔ[321] = [];
    ΔΔ[321][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠⵠᐃⲆⲆ;
    ΔΔ[321][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆᐃΔᐃⲆ;
    ΔΔ[1262] = [];
    ΔΔ[1262][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔΔⲆΔⵠᐃ;
    ΔΔ[1262][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⲆΔⵠΔΔ;
    ΔΔ[1265] = [];
    ΔΔ[1265][v624.Ⲇⵠᐃ] = [ⵠᐃ.ⲆΔⵠΔⵠΔⲆ];
    ΔΔ[1265][v624.Δⵠⵠ] = [ⵠᐃ.ᐃⲆⲆⵠⲆᐃᐃ];
    ΔΔ[327] = [];
    ΔΔ[327][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠᐃⲆᐃⲆ;
    ΔΔ[327][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔΔᐃᐃⲆⲆ;
    ΔΔ[329] = [];
    ΔΔ[329][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆΔⵠⲆⵠᐃ;
    ΔΔ[329][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⲆⵠⲆⲆⵠ;
    ΔΔ[328] = [];
    ΔΔ[328][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆⲆΔᐃⲆ;
    ΔΔ[328][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃⲆⲆᐃⵠ;
    ΔΔ[322] = [];
    ΔΔ[322][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠⲆⲆᐃᐃ;
    ΔΔ[322][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆᐃᐃᐃᐃᐃ;
    ΔΔ[323] = [];
    ΔΔ[323][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠΔᐃⲆΔⲆ;
    ΔΔ[323][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔΔⵠⵠᐃΔ;
    ΔΔ[324] = [];
    ΔΔ[324][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⲆⲆⲆⵠⵠ;
    ΔΔ[324][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆⲆⵠⲆⲆ;
    ΔΔ[325] = [];
    ΔΔ[325][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔΔᐃⲆⵠ;
    ΔΔ[325][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔᐃᐃⵠⲆⲆ;
    ΔΔ[326] = [];
    ΔΔ[326][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⵠⲆᐃⵠΔ;
    ΔΔ[326][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃⵠᐃⵠΔ;
    ΔΔ[330] = [];
    ΔΔ[330][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃΔΔᐃ;
    ΔΔ[330][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠᐃⲆⲆᐃΔ;
    ΔΔ[1323] = [];
    ΔΔ[1323][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔᐃΔⲆᐃ;
    ΔΔ[1323][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆᐃⵠΔⵠ;
    ΔΔ[1324] = [];
    ΔΔ[1324][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⲆⵠΔⲆⵠ;
    ΔΔ[1324][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔᐃΔⵠⲆᐃ;
    ΔΔ[1325] = ⵠᐃ.ΔΔⲆᐃⵠⲆΔ;
    ΔΔ[1326] = ⵠᐃ.ᐃΔΔⵠΔⲆᐃ;
    ΔΔ[1327] = [];
    ΔΔ[1327][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠⵠⵠⵠⲆ;
    ΔΔ[1327][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔΔⲆⵠΔ;
    ΔΔ[1331] = [];
    ΔΔ[1331][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃᐃⵠΔᐃⲆ;
    ΔΔ[1331][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⵠⲆᐃΔⲆ;
    ΔΔ[1349] = [];
    ΔΔ[1349][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1349][v624.Δⵠⵠ] = [];
    ΔΔ[1349][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔΔΔΔⵠᐃᐃ);
    ΔΔ[1349][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⲆⵠⲆⲆᐃⵠ);
    ΔΔ[1349][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃᐃⲆⵠⲆⵠΔ);
    ΔΔ[1349][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⲆⲆΔⲆᐃΔ);
    ΔΔ[1349][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃᐃⵠⲆⲆΔ);
    ΔΔ[1349][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃⲆΔᐃⲆᐃ);
    ΔΔ[354] = [];
    ΔΔ[354][v624.Ⲇⵠᐃ] = [];
    ΔΔ[354][v624.Δⵠⵠ] = [];
    ΔΔ[354][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃⲆᐃΔᐃⲆ);
    ΔΔ[354][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃᐃᐃⲆᐃᐃ);
    ΔΔ[354][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠᐃⲆᐃⵠΔ);
    ΔΔ[354][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠⲆᐃΔⵠΔ);
    ΔΔ[354][v624.Δⵠⵠ].push(ⵠᐃ.ΔⲆΔⵠᐃⲆⲆ);
    ΔΔ[354][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃᐃⵠⲆᐃΔ);
    ΔΔ[1360] = [];
    ΔΔ[1360][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1360][v624.Δⵠⵠ] = [];
    ΔΔ[1360][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃⵠⲆⲆⵠⵠ);
    ΔΔ[1360][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⲆᐃΔᐃⵠⲆ);
    ΔΔ[1360][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃᐃΔⵠΔᐃⵠ);
    ΔΔ[1360][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆΔᐃⵠᐃᐃΔ);
    ΔΔ[1360][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃᐃΔⲆΔΔ);
    ΔΔ[1360][v624.Δⵠⵠ].push(ⵠᐃ.ⵠᐃΔᐃᐃⵠᐃ);
    ΔΔ[1360][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆⲆΔᐃΔ);
    ΔΔ[1360][v624.Δⵠⵠ].push(ⵠᐃ.ⵠΔΔⵠᐃⲆⲆ);
    ΔΔ[1360][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃΔΔⵠⵠΔ);
    ΔΔ[1360][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⲆⲆⲆΔᐃᐃ);
    ΔΔ[588] = [];
    ΔΔ[588][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃⲆᐃⲆⵠ;
    ΔΔ[588][v624.Δⵠⵠ] = ⵠᐃ.ΔΔΔΔⲆⵠΔ;
    ΔΔ[591] = [];
    ΔΔ[591][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⲆᐃⵠⲆⲆ;
    ΔΔ[591][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⲆᐃⲆⵠⵠ;
    ΔΔ[592] = [];
    ΔΔ[592][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠᐃⵠⲆⵠⲆ;
    ΔΔ[592][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆᐃᐃⵠᐃ;
    ΔΔ[602] = ⵠᐃ.ⲆⵠΔᐃᐃⲆⲆ;
    ΔΔ[606] = ⵠᐃ.ⵠᐃⵠⲆΔⵠΔ;
    ΔΔ[607] = ⵠᐃ.ⲆᐃᐃᐃᐃᐃΔ;
    ΔΔ[29] = [];
    ΔΔ[29][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆΔᐃΔⵠᐃ;
    ΔΔ[29][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆᐃᐃᐃΔᐃ;
    ΔΔ[1196] = [];
    ΔΔ[1196][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠᐃΔⵠᐃⵠ;
    ΔΔ[1196][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔᐃᐃΔⵠ;
    ΔΔ[30] = [];
    ΔΔ[30][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃΔΔⵠΔΔ;
    ΔΔ[30][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆᐃΔⲆⵠ;
    ΔΔ[1200] = [];
    ΔΔ[1200][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠᐃΔⵠᐃⵠ;
    ΔΔ[1200][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔᐃᐃΔⵠ;
    ΔΔ[71] = [];
    ΔΔ[71][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃⵠⵠⵠⵠ;
    ΔΔ[71][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆᐃΔⵠᐃ;
    ΔΔ[106] = [];
    ΔΔ[106][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆⵠΔⲆⵠⲆ;
    ΔΔ[106][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃΔΔⵠΔ;
    ΔΔ[306] = [];
    ΔΔ[306][v624.Ⲇⵠᐃ] = [];
    ΔΔ[306][v624.Δⵠⵠ] = [];
    ΔΔ[306][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃΔⲆⲆΔᐃ);
    ΔΔ[306][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠᐃᐃᐃᐃΔ);
    ΔΔ[306][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃᐃⲆⵠⵠᐃ);
    ΔΔ[306][v624.Δⵠⵠ].push(ⵠᐃ.ⲆΔΔᐃⲆΔⲆ);
    ΔΔ[306][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⵠΔⲆᐃᐃⵠ);
    ΔΔ[306][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃᐃΔΔⲆᐃ);
    ΔΔ[307] = [];
    ΔΔ[307][v624.Ⲇⵠᐃ] = [];
    ΔΔ[307][v624.Δⵠⵠ] = [];
    ΔΔ[307][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠⵠⵠΔᐃᐃ);
    ΔΔ[307][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃⵠⵠⵠⲆᐃ);
    ΔΔ[307][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃⵠⲆⲆⵠⲆ);
    ΔΔ[307][v624.Δⵠⵠ].push(ⵠᐃ.ⵠᐃⵠΔΔᐃⵠ);
    ΔΔ[307][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⵠⵠᐃⲆⵠⵠ);
    ΔΔ[307][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠΔΔΔⵠⲆ);
    ΔΔ[308] = [];
    ΔΔ[308][v624.Ⲇⵠᐃ] = [];
    ΔΔ[308][v624.Δⵠⵠ] = [];
    ΔΔ[308][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠⵠⲆⲆΔΔ);
    ΔΔ[308][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔΔᐃⲆⵠᐃ);
    ΔΔ[308][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆⵠΔⲆΔΔ);
    ΔΔ[308][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠⵠΔΔⲆᐃ);
    ΔΔ[308][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆΔΔᐃⵠ);
    ΔΔ[308][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠⵠΔΔΔⲆ);
    ΔΔ[309] = [];
    ΔΔ[309][v624.Ⲇⵠᐃ] = [];
    ΔΔ[309][v624.Δⵠⵠ] = [];
    ΔΔ[309][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠᐃΔⵠΔΔ);
    ΔΔ[309][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔᐃᐃⲆᐃΔ);
    ΔΔ[309][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔΔΔⲆᐃⲆ);
    ΔΔ[309][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃᐃᐃⲆⲆΔ);
    ΔΔ[309][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⲆᐃⲆᐃⵠⲆ);
    ΔΔ[309][v624.Δⵠⵠ].push(ⵠᐃ.ⵠᐃΔⲆᐃⵠᐃ);
    ΔΔ[310] = [];
    ΔΔ[310][v624.Ⲇⵠᐃ] = [];
    ΔΔ[310][v624.Δⵠⵠ] = [];
    ΔΔ[310][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⲆⲆⲆⲆΔⵠ);
    ΔΔ[310][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⵠⲆᐃⵠⵠΔ);
    ΔΔ[310][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⵠⲆᐃΔᐃⲆ);
    ΔΔ[310][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⲆΔⲆⲆⲆⲆ);
    ΔΔ[310][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆᐃⵠⲆⵠ);
    ΔΔ[310][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠΔΔⲆⵠΔ);
    ΔΔ[311] = [];
    ΔΔ[311][v624.Ⲇⵠᐃ] = [];
    ΔΔ[311][v624.Δⵠⵠ] = [];
    ΔΔ[311][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔΔⵠᐃⵠΔ);
    ΔΔ[311][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⲆΔᐃⵠΔᐃ);
    ΔΔ[311][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃΔⵠⵠⲆⲆ);
    ΔΔ[311][v624.Δⵠⵠ].push(ⵠᐃ.ΔⲆⵠⵠᐃⲆᐃ);
    ΔΔ[311][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆᐃᐃⲆⲆ);
    ΔΔ[311][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠΔⲆᐃᐃᐃ);
    ΔΔ[313] = [];
    ΔΔ[313][v624.Ⲇⵠᐃ] = [];
    ΔΔ[313][v624.Δⵠⵠ] = [];
    ΔΔ[313][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠΔⲆⲆⵠⲆ);
    ΔΔ[313][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔⲆᐃⲆᐃⵠ);
    ΔΔ[313][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠΔⵠΔΔⵠ);
    ΔΔ[313][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆⵠⲆⵠⵠ);
    ΔΔ[313][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃᐃΔⵠΔⵠ);
    ΔΔ[313][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃΔΔᐃⲆⲆ);
    ΔΔ[312] = [];
    ΔΔ[312][v624.Ⲇⵠᐃ] = [];
    ΔΔ[312][v624.Δⵠⵠ] = [];
    ΔΔ[312][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃᐃΔΔⵠΔ);
    ΔΔ[312][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⲆᐃΔᐃΔⲆ);
    ΔΔ[312][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔΔⲆⲆⲆⵠ);
    ΔΔ[312][v624.Δⵠⵠ].push(ⵠᐃ.ⵠᐃΔⲆⲆⵠΔ);
    ΔΔ[312][v624.Δⵠⵠ].push(ⵠᐃ.ΔⵠΔⲆΔⵠⵠ);
    ΔΔ[312][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⲆΔⲆΔⲆⲆ);
    ΔΔ[1739] = [];
    ΔΔ[1739][v624.Ⲇⵠᐃ] = [ⵠᐃ.ⵠⵠΔΔⲆΔᐃ];
    ΔΔ[1739][v624.Δⵠⵠ] = [ⵠᐃ.ⲆⵠᐃΔⲆΔᐃ];
    ΔΔ[1759] = [];
    ΔΔ[1759][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔΔᐃⵠⵠᐃ;
    ΔΔ[1759][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃᐃⲆᐃΔⲆ;
    ΔΔ[37] = [];
    ΔΔ[37][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔⵠᐃᐃⵠ;
    ΔΔ[37][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔᐃⵠΔⵠⵠ;
    ΔΔ[38] = [];
    ΔΔ[38][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠⲆᐃᐃᐃ;
    ΔΔ[38][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔΔⲆⲆΔ;
    ΔΔ[39] = [];
    ΔΔ[39][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠᐃⵠΔⵠ;
    ΔΔ[39][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⵠⲆᐃⲆΔ;
    ΔΔ[40] = [];
    ΔΔ[40][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠᐃΔⲆΔ;
    ΔΔ[40][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔΔᐃΔⵠ;
    ΔΔ[41] = [];
    ΔΔ[41][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠΔᐃΔⲆⲆ;
    ΔΔ[41][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⲆΔΔΔⲆ;
    ΔΔ[42] = [];
    ΔΔ[42][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⲆΔΔⵠΔ;
    ΔΔ[42][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃΔⲆᐃΔΔ;
    ΔΔ[43] = [];
    ΔΔ[43][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆΔΔⲆⲆᐃ;
    ΔΔ[43][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⵠⵠⲆⲆⵠ;
    ΔΔ[44] = [];
    ΔΔ[44][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠΔⲆᐃᐃΔ;
    ΔΔ[44][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⲆᐃⲆⵠ;
    ΔΔ[45] = [];
    ΔΔ[45][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠΔΔᐃⵠ;
    ΔΔ[45][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆΔⵠⲆⵠ;
    ΔΔ[50] = [];
    ΔΔ[50][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⵠⲆᐃⲆΔ;
    ΔΔ[50][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔᐃᐃᐃᐃⲆ;
    ΔΔ[52] = [];
    ΔΔ[52][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠΔⲆⵠᐃⲆ;
    ΔΔ[52][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆΔⲆⵠΔⵠ;
    ΔΔ[53] = [];
    ΔΔ[53][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔΔΔⵠΔ;
    ΔΔ[53][v624.Δⵠⵠ] = ⵠᐃ.ΔΔᐃΔᐃⵠΔ;
    ΔΔ[54] = [];
    ΔΔ[54][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⲆⵠΔᐃΔ;
    ΔΔ[54][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆΔⲆⲆⵠ;
    ΔΔ[55] = [];
    ΔΔ[55][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⵠᐃⵠⵠ;
    ΔΔ[55][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔΔⲆⲆᐃ;
    ΔΔ[56] = [];
    ΔΔ[56][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⲆⲆⵠΔⵠ;
    ΔΔ[56][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔⵠᐃⵠⵠⵠ;
    ΔΔ[57] = [];
    ΔΔ[57][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⲆⲆⵠⲆᐃ;
    ΔΔ[57][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆⵠᐃⵠΔ;
    ΔΔ[51] = [];
    ΔΔ[51][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔΔⲆⲆᐃ;
    ΔΔ[51][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⵠⲆΔⵠⲆ;
    ΔΔ[58] = [];
    ΔΔ[58][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆΔᐃⵠⵠ;
    ΔΔ[58][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⲆΔΔⵠᐃ;
    ΔΔ[59] = [];
    ΔΔ[59][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃᐃΔⲆᐃ;
    ΔΔ[59][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆΔᐃⲆⲆⵠ;
    ΔΔ[66] = [];
    ΔΔ[66][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠΔⵠⵠᐃ;
    ΔΔ[66][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃᐃᐃⵠⲆᐃ;
    ΔΔ[75] = [];
    ΔΔ[75][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⵠⲆⵠᐃᐃ;
    ΔΔ[75][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔⲆⵠᐃⵠ;
    ΔΔ[74] = [];
    ΔΔ[74][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⵠΔΔⲆᐃ;
    ΔΔ[74][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆΔᐃᐃΔ;
    ΔΔ[76] = [];
    ΔΔ[76][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆᐃΔⲆᐃ;
    ΔΔ[76][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⲆΔⵠⵠΔ;
    ΔΔ[77] = [];
    ΔΔ[77][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠᐃᐃⵠᐃ;
    ΔΔ[77][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃᐃΔⵠⵠⲆ;
    ΔΔ[78] = [];
    ΔΔ[78][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⲆΔᐃᐃⲆ;
    ΔΔ[78][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠᐃᐃΔⵠ;
    ΔΔ[79] = [];
    ΔΔ[79][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⵠᐃⵠΔΔ;
    ΔΔ[79][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠᐃᐃΔΔ;
    ΔΔ[73] = [];
    ΔΔ[73][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⵠᐃΔⲆᐃ;
    ΔΔ[73][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠᐃΔΔᐃⵠ;
    ΔΔ[80] = [];
    ΔΔ[80][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⲆᐃΔΔⲆ;
    ΔΔ[80][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⵠΔΔΔ;
    ΔΔ[81] = [];
    ΔΔ[81][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⵠΔⲆᐃᐃ;
    ΔΔ[81][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠΔΔᐃⲆ;
    ΔΔ[89] = [];
    ΔΔ[89][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠⵠⲆΔᐃ;
    ΔΔ[89][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔᐃᐃⵠⵠ;
    ΔΔ[92] = [];
    ΔΔ[92][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆᐃⵠⲆΔ;
    ΔΔ[92][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔᐃⵠᐃΔ;
    ΔΔ[91] = [];
    ΔΔ[91][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔᐃⵠΔⵠⲆ;
    ΔΔ[91][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⵠⲆⵠΔⲆ;
    ΔΔ[93] = [];
    ΔΔ[93][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃΔⲆΔΔ;
    ΔΔ[93][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃΔⲆⲆⵠⵠ;
    ΔΔ[94] = [];
    ΔΔ[94][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⲆⲆⲆΔ;
    ΔΔ[94][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠⵠΔⲆⲆ;
    ΔΔ[95] = [];
    ΔΔ[95][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃᐃⲆᐃⲆΔ;
    ΔΔ[95][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠΔΔᐃᐃ;
    ΔΔ[96] = [];
    ΔΔ[96][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃᐃⵠΔΔ;
    ΔΔ[96][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔΔᐃⲆΔ;
    ΔΔ[90] = [];
    ΔΔ[90][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⵠΔΔᐃ;
    ΔΔ[90][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔⵠΔᐃⲆ;
    ΔΔ[89] = [];
    ΔΔ[89][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠⵠⲆΔᐃ;
    ΔΔ[89][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔᐃᐃⵠⵠ;
    ΔΔ[97] = [];
    ΔΔ[97][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠⵠⲆΔⲆ;
    ΔΔ[97][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆΔΔΔⲆ;
    ΔΔ[98] = [];
    ΔΔ[98][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠᐃΔⲆⵠ;
    ΔΔ[98][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⲆᐃⲆⲆⲆ;
    ΔΔ[28] = [];
    ΔΔ[28][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⲆᐃⲆΔⲆ;
    ΔΔ[28][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔΔⲆⲆᐃ;
    ΔΔ[109] = [];
    ΔΔ[109][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆΔΔᐃⲆᐃ;
    ΔΔ[109][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠΔᐃⵠⲆ;
    ΔΔ[111] = [];
    ΔΔ[111][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃᐃⵠⵠⲆᐃ;
    ΔΔ[111][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔᐃΔⵠⲆ;
    ΔΔ[112] = [];
    ΔΔ[112][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆΔᐃΔⲆΔ;
    ΔΔ[112][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃΔΔᐃΔΔ;
    ΔΔ[113] = [];
    ΔΔ[113][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃⲆⲆⵠᐃ;
    ΔΔ[113][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⲆΔᐃᐃΔ;
    ΔΔ[114] = [];
    ΔΔ[114][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔΔⲆᐃΔ;
    ΔΔ[114][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆⵠᐃⵠᐃ;
    ΔΔ[115] = [];
    ΔΔ[115][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠᐃⵠΔⲆ;
    ΔΔ[115][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⲆΔᐃⵠⵠ;
    ΔΔ[116] = [];
    ΔΔ[116][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃΔΔΔΔⵠ;
    ΔΔ[116][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃᐃᐃΔᐃ;
    ΔΔ[110] = [];
    ΔΔ[110][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⵠⵠᐃΔᐃ;
    ΔΔ[110][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆⲆΔᐃⲆ;
    ΔΔ[117] = [];
    ΔΔ[117][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆΔⲆⲆⵠⲆ;
    ΔΔ[117][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⲆⵠⵠⵠΔ;
    ΔΔ[118] = [];
    ΔΔ[118][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆᐃΔⵠΔΔ;
    ΔΔ[118][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆᐃⲆⲆᐃΔ;
    ΔΔ[61] = [];
    ΔΔ[61][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃᐃⵠᐃⲆᐃ;
    ΔΔ[61][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆΔⵠⵠΔⲆ;
    ΔΔ[17] = [];
    ΔΔ[17][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠⲆᐃΔⵠ;
    ΔΔ[17][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃⲆⲆⵠᐃ;
    ΔΔ[20] = [];
    ΔΔ[20][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔΔⵠⲆᐃ;
    ΔΔ[20][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠⲆᐃᐃΔ;
    ΔΔ[21] = [];
    ΔΔ[21][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⵠⵠⵠᐃᐃ;
    ΔΔ[21][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃΔⵠΔⵠⵠ;
    ΔΔ[22] = [];
    ΔΔ[22][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃᐃⵠᐃⲆᐃ;
    ΔΔ[22][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔᐃⵠⲆᐃ;
    ΔΔ[23] = [];
    ΔΔ[23][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠᐃⵠⵠΔ;
    ΔΔ[23][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆⵠⵠⲆⲆ;
    ΔΔ[24] = [];
    ΔΔ[24][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ;
    ΔΔ[24][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠΔΔΔΔ;
    ΔΔ[25] = [];
    ΔΔ[25][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠⲆᐃᐃΔ;
    ΔΔ[25][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⵠΔΔΔⵠ;
    ΔΔ[19] = [];
    ΔΔ[19][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔᐃᐃⵠⲆ;
    ΔΔ[19][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠΔⵠᐃⵠⵠ;
    ΔΔ[27] = [];
    ΔΔ[27][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔⲆⵠⲆᐃ;
    ΔΔ[27][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⵠᐃⵠΔⵠ;
    ΔΔ[26] = [];
    ΔΔ[26][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⵠⵠΔⲆ;
    ΔΔ[26][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⲆΔⲆᐃᐃ;
    ΔΔ[167] = [];
    ΔΔ[167][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆᐃᐃᐃᐃⵠⵠΔ;
    ΔΔ[167][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆᐃⵠΔⲆᐃΔⵠ;
    ΔΔ[168] = [];
    ΔΔ[168][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃⲆⵠⵠᐃⵠᐃ;
    ΔΔ[168][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠᐃⵠⲆⵠⲆᐃⲆ;
    ΔΔ[169] = [];
    ΔΔ[169][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⲆᐃⵠⵠᐃⲆΔ;
    ΔΔ[169][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆᐃⵠⵠΔΔᐃ;
    ΔΔ[170] = [];
    ΔΔ[170][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠΔⵠⵠΔΔΔΔ;
    ΔΔ[170][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⲆΔⲆⲆᐃᐃⲆ;
    ΔΔ[171] = [];
    ΔΔ[171][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⵠΔᐃⲆⵠⲆΔ;
    ΔΔ[171][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⵠⵠⵠΔⲆⲆ;
    ΔΔ[172] = [];
    ΔΔ[172][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⲆΔⲆΔⵠᐃ;
    ΔΔ[172][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠⲆⲆᐃᐃΔΔ;
    ΔΔ[173] = [];
    ΔΔ[173][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⵠⲆΔᐃⵠⵠΔ;
    ΔΔ[173][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔᐃⵠⲆⵠⲆⵠ;
    ΔΔ[174] = [];
    ΔΔ[174][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠΔⵠⲆᐃⵠΔ;
    ΔΔ[174][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠΔⵠᐃᐃΔⵠ;
    ΔΔ[175] = [];
    ΔΔ[175][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔᐃⵠᐃⵠⵠⵠΔ;
    ΔΔ[175][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃΔⲆⵠⲆⵠΔ;
    ΔΔ[176] = [];
    ΔΔ[176][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔⲆᐃⵠⲆⲆΔ;
    ΔΔ[176][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆᐃⲆᐃΔⲆᐃ;
    ΔΔ[177] = [];
    ΔΔ[177][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔΔᐃΔⵠⵠⲆ;
    ΔΔ[177][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔᐃᐃⲆⲆⵠΔΔ;
    ΔΔ[178] = [];
    ΔΔ[178][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔΔΔⵠᐃⲆΔΔ;
    ΔΔ[178][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆΔⲆⵠᐃⲆᐃ;
    ΔΔ[179] = [];
    ΔΔ[179][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⲆΔΔⵠᐃΔⵠ;
    ΔΔ[179][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔᐃΔⵠⲆⵠⵠⵠ;
    ΔΔ[180] = [];
    ΔΔ[180][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⵠⵠᐃΔⲆⲆ;
    ΔΔ[180][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⵠⵠΔⵠⲆⲆⲆ;
    ΔΔ[181] = [];
    ΔΔ[181][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠΔⵠⵠΔⲆⵠ;
    ΔΔ[181][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠΔΔⵠΔΔΔ;
    ΔΔ[163] = [];
    ΔΔ[163][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⵠⲆΔᐃⲆ;
    ΔΔ[163][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆᐃⲆΔⲆᐃ;
    ΔΔ[164] = [];
    ΔΔ[164][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃⲆⵠⵠ;
    ΔΔ[164][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆᐃⵠⵠⲆⲆ;
    ΔΔ[135] = [];
    ΔΔ[135][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠᐃⲆΔᐃⲆΔⲆ;
    ΔΔ[135][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⲆΔᐃⲆⵠⵠ;
    ΔΔ[136] = [];
    ΔΔ[136][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃⲆⵠⲆⵠⲆᐃ;
    ΔΔ[136][v624.Δⵠⵠ] = ⵠᐃ.ΔΔΔⲆᐃⵠᐃΔᐃ;
    ΔΔ[137] = [];
    ΔΔ[137][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⲆⲆⲆⲆᐃⵠⵠ;
    ΔΔ[137][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆΔᐃᐃΔᐃⵠΔ;
    ΔΔ[138] = [];
    ΔΔ[138][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠΔⲆⵠⲆⲆᐃᐃ;
    ΔΔ[138][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⵠⵠᐃᐃⲆⵠⵠ;
    ΔΔ[139] = [];
    ΔΔ[139][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆΔⵠᐃⵠᐃⵠΔ;
    ΔΔ[139][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⵠᐃΔᐃⵠⲆ;
    ΔΔ[140] = [];
    ΔΔ[140][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⲆΔΔᐃΔⲆⵠ;
    ΔΔ[140][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠⵠΔΔⲆᐃᐃ;
    ΔΔ[148] = [];
    ΔΔ[148][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆⲆⵠᐃⵠΔⲆ;
    ΔΔ[148][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⵠⲆⲆᐃᐃⵠⵠ;
    ΔΔ[149] = [];
    ΔΔ[149][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⲆⲆⲆⵠⲆⲆⵠ;
    ΔΔ[149][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃᐃᐃⵠᐃᐃᐃΔ;
    ΔΔ[183] = [];
    ΔΔ[183][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆᐃΔΔΔ;
    ΔΔ[183][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔΔᐃΔⲆ;
    ΔΔ[119] = [];
    ΔΔ[119][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔᐃΔΔⲆⵠⲆᐃ;
    ΔΔ[119][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔΔⲆΔⵠΔᐃΔ;
    ΔΔ[184] = [];
    ΔΔ[184][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⲆᐃΔⵠᐃ;
    ΔΔ[184][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃΔⵠⲆⲆⵠ;
    ΔΔ[120] = [];
    ΔΔ[120][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠᐃⲆΔᐃⵠΔ;
    ΔΔ[120][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⲆᐃⵠⵠΔⲆⵠ;
    ΔΔ[185] = [];
    ΔΔ[185][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠΔⵠⵠⲆ;
    ΔΔ[185][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔΔⲆᐃⲆΔ;
    ΔΔ[121] = [];
    ΔΔ[121][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔᐃΔⲆᐃᐃᐃ;
    ΔΔ[121][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⲆᐃΔΔⲆⵠᐃ;
    ΔΔ[186] = [];
    ΔΔ[186][v624.Ⲇⵠᐃ] = ⵠᐃ.Ⲇᐃⵠᐃⵠᐃᐃ;
    ΔΔ[186][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠΔⲆΔⵠΔ;
    ΔΔ[122] = [];
    ΔΔ[122][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⲆⲆⵠᐃⲆΔᐃ;
    ΔΔ[122][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⲆⵠΔⵠᐃᐃⵠ;
    ΔΔ[187] = [];
    ΔΔ[187][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔᐃⵠΔᐃⲆ;
    ΔΔ[187][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔΔⲆⵠΔ;
    ΔΔ[123] = [];
    ΔΔ[123][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⲆΔⵠᐃⲆΔⵠ;
    ΔΔ[123][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⵠΔᐃΔⵠᐃⲆ;
    ΔΔ[188] = [];
    ΔΔ[188][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⲆⵠⵠⲆⵠ;
    ΔΔ[188][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⵠᐃⵠᐃΔΔᐃ;
    ΔΔ[124] = [];
    ΔΔ[124][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃΔⲆⲆᐃⵠⵠΔ;
    ΔΔ[124][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⲆⲆΔⲆⲆΔᐃ;
    ΔΔ[189] = [];
    ΔΔ[189][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⲆΔΔᐃⲆ;
    ΔΔ[189][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆΔⲆΔᐃ;
    ΔΔ[125] = [];
    ΔΔ[125][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔᐃⵠᐃⲆᐃΔ;
    ΔΔ[125][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔⲆᐃⲆΔΔΔⵠ;
    ΔΔ[191] = [];
    ΔΔ[191][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠΔⵠᐃⲆ;
    ΔΔ[191][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆᐃᐃⲆΔ;
    ΔΔ[127] = [];
    ΔΔ[127][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔΔⲆⲆΔΔ;
    ΔΔ[127][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆΔΔᐃⲆ;
    ΔΔ[192] = [];
    ΔΔ[192][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⲆⲆⵠᐃᐃ;
    ΔΔ[192][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆⲆΔᐃⵠ;
    ΔΔ[128] = [];
    ΔΔ[128][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆΔΔᐃᐃⵠ;
    ΔΔ[128][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⵠΔⵠⵠⲆ;
    ΔΔ[193] = [];
    ΔΔ[193][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠᐃΔΔᐃ;
    ΔΔ[193][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆΔΔΔⲆⲆ;
    ΔΔ[129] = [];
    ΔΔ[129][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆΔⵠⵠⲆΔ;
    ΔΔ[129][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃΔⲆΔᐃΔ;
    ΔΔ[194] = [];
    ΔΔ[194][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⵠᐃᐃᐃᐃ;
    ΔΔ[194][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠᐃΔᐃᐃ;
    ΔΔ[130] = [];
    ΔΔ[130][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆᐃΔᐃⲆᐃ;
    ΔΔ[130][v624.Δⵠⵠ] = ⵠᐃ.ΔΔᐃᐃᐃⲆⵠ;
    ΔΔ[196] = [];
    ΔΔ[196][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆⵠⵠΔᐃ;
    ΔΔ[196][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔⲆⵠⲆⵠ;
    ΔΔ[132] = [];
    ΔΔ[132][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃⵠᐃᐃⵠ;
    ΔΔ[132][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⲆⵠᐃⵠ;
    ΔΔ[195] = [];
    ΔΔ[195][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃᐃᐃⲆ;
    ΔΔ[195][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⵠⲆⵠⵠΔ;
    ΔΔ[131] = [];
    ΔΔ[131][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔⲆⵠᐃⲆ;
    ΔΔ[131][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃΔⵠᐃΔΔ;
    ΔΔ[190] = [];
    ΔΔ[190][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⵠᐃⲆⲆⲆ;
    ΔΔ[190][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠΔᐃⲆⲆᐃ;
    ΔΔ[126] = [];
    ΔΔ[126][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⲆᐃᐃΔⲆ;
    ΔΔ[126][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⵠΔⵠⲆᐃ;
    ΔΔ[198] = [];
    ΔΔ[198][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⵠⵠᐃⲆⲆ;
    ΔΔ[198][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔⵠΔᐃΔ;
    ΔΔ[134] = [];
    ΔΔ[134][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃᐃᐃⲆⵠⵠ;
    ΔΔ[134][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⲆⲆᐃⲆ;
    ΔΔ[197] = [];
    ΔΔ[197][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔΔⲆᐃΔⵠ;
    ΔΔ[197][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔᐃⲆⲆⵠᐃ;
    ΔΔ[133] = [];
    ΔΔ[133][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⲆⲆᐃᐃᐃ;
    ΔΔ[133][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆⵠⵠⲆⵠ;
    ΔΔ[153] = [];
    ΔΔ[153][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆΔⵠᐃⵠⵠ;
    ΔΔ[153][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠᐃΔᐃⵠ;
    ΔΔ[154] = [];
    ΔΔ[154][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔᐃᐃΔⵠ;
    ΔΔ[154][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⵠᐃᐃΔⲆ;
    ΔΔ[31] = [];
    ΔΔ[31][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆᐃⵠⲆᐃⵠ;
    ΔΔ[31][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⲆⵠᐃᐃⲆ;
    ΔΔ[1204] = [];
    ΔΔ[1204][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆⵠΔⲆΔΔ;
    ΔΔ[1204][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⲆᐃΔΔᐃ;
    ΔΔ[1211] = [];
    ΔΔ[1211][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1211][v624.Δⵠⵠ] = [];
    ΔΔ[1211][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔΔⲆⵠᐃⵠΔⵠΔ);
    ΔΔ[1211][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃⵠΔᐃⵠΔΔᐃ);
    ΔΔ[1211][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃⵠΔᐃⵠΔΔᐃ);
    ΔΔ[1211][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⲆΔⵠⲆΔⵠⲆⵠ);
    ΔΔ[1217] = [];
    ΔΔ[1217][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1217][v624.Δⵠⵠ] = [];
    ΔΔ[1217][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⲆᐃⵠⲆΔΔ);
    ΔΔ[1217][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⲆΔⵠⵠⵠⵠ);
    ΔΔ[1217][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠⲆⲆΔᐃᐃ);
    ΔΔ[1217][v624.Δⵠⵠ].push(ⵠᐃ.ⲆΔᐃᐃΔⲆᐃ);
    ΔΔ[1217][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔⵠⵠΔⵠᐃ);
    ΔΔ[1217][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⲆᐃΔΔΔⲆ);
    ΔΔ[99] = [];
    ΔΔ[99][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆΔΔᐃΔⲆ;
    ΔΔ[99][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⵠΔⵠⵠΔ;
    ΔΔ[100] = [];
    ΔΔ[100][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⵠⲆᐃⵠⵠ;
    ΔΔ[100][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⲆⲆⲆⲆⲆ;
    ΔΔ[351] = [];
    ΔΔ[351][v624.Ⲇⵠᐃ] = [];
    ΔΔ[351][v624.Δⵠⵠ] = [];
    ΔΔ[351][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆΔΔⵠΔΔ);
    ΔΔ[351][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔΔΔⲆⵠᐃⲆ);
    ΔΔ[351][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⵠΔⲆⵠⵠᐃ);
    ΔΔ[351][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⲆᐃΔⲆΔᐃ);
    ΔΔ[351][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃΔⵠⵠⲆⲆ);
    ΔΔ[351][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃⲆΔΔᐃᐃ);
    ΔΔ[304] = [];
    ΔΔ[304][v624.Ⲇⵠᐃ] = [];
    ΔΔ[304][v624.Δⵠⵠ] = [];
    ΔΔ[304][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠΔΔⵠᐃΔ);
    ΔΔ[304][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⲆΔΔⵠΔⵠ);
    ΔΔ[304][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆΔΔⲆΔⵠᐃ);
    ΔΔ[304][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⵠᐃΔⲆⵠᐃ);
    ΔΔ[304][v624.Δⵠⵠ].push(ⵠᐃ.ⲆΔⵠⵠⵠΔᐃ);
    ΔΔ[304][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⲆᐃΔⲆΔΔ);
    ΔΔ[305] = [];
    ΔΔ[305][v624.Ⲇⵠᐃ] = [];
    ΔΔ[305][v624.Δⵠⵠ] = [];
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠᐃⵠΔⲆΔ);
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃᐃⲆⲆᐃⵠ);
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃⵠⵠᐃΔⵠ);
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆᐃΔⵠⵠᐃ);
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⲆΔΔᐃⵠᐃ);
    ΔΔ[305][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆⵠⵠΔᐃⵠ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⲆᐃᐃΔⲆΔ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔⲆΔΔⵠΔ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ⵠᐃⲆᐃΔᐃᐃ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆᐃⲆΔⵠ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠΔⲆᐃⲆᐃ);
    ΔΔ[305][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⲆᐃⵠⵠΔΔ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ] = [];
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ] = [];
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ] = [];
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃⲆΔΔΔΔ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⲆΔᐃⲆᐃⵠ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆΔᐃᐃⵠᐃΔ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔⵠᐃΔᐃΔ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆΔΔΔⲆΔⵠ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⵠΔΔΔⲆⲆ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ΔⲆⲆⲆⵠⵠᐃ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⵠΔⵠⲆΔⲆⵠ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃⵠⲆᐃⵠⲆ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠΔⵠⲆᐃⲆ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔΔΔᐃᐃⵠ);
    ΔΔ[v624.ᐃⵠⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠⲆⲆⲆᐃⵠ);
    ΔΔ[1194] = [];
    ΔΔ[1194][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔᐃΔᐃⵠ;
    ΔΔ[1194][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃᐃΔᐃⵠᐃ;
    ΔΔ[1195] = ⵠᐃ.ⵠⵠⵠⵠᐃΔᐃ;
    ΔΔ[102] = [];
    ΔΔ[102][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠⵠⲆΔΔΔⵠ;
    ΔΔ[102][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔⲆᐃᐃⵠⵠⵠ;
    ΔΔ[333] = [];
    ΔΔ[333][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⲆᐃⵠᐃⲆ;
    ΔΔ[333][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔΔⲆΔⲆⵠ;
    ΔΔ[334] = [];
    ΔΔ[334][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⲆⵠΔⵠⲆ;
    ΔΔ[334][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠᐃⵠΔΔ;
    ΔΔ[346] = [];
    ΔΔ[346][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠΔⲆⵠΔ;
    ΔΔ[346][v624.Δⵠⵠ] = ⵠᐃ.Ⲇⵠᐃᐃᐃᐃᐃ;
    ΔΔ[1341] = [];
    ΔΔ[1341][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔᐃⲆΔᐃᐃ;
    ΔΔ[1341][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⵠΔⲆᐃⲆ;
    ΔΔ[1342] = ⵠᐃ.ᐃΔᐃᐃⲆⵠᐃ;
    ΔΔ[1751] = [];
    ΔΔ[1751][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠᐃΔᐃⲆⲆ;
    ΔΔ[1751][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃΔⲆΔⵠᐃ;
    ΔΔ[1752] = ⵠᐃ.ᐃⵠᐃΔΔΔⲆ;
    ΔΔ[1747] = [];
    ΔΔ[1747][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⲆⲆⵠⵠⲆ;
    ΔΔ[1747][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔΔⲆΔᐃ;
    ΔΔ[1748] = ⵠᐃ.ΔΔⲆᐃΔᐃⲆ;
    ΔΔ[1478] = [];
    ΔΔ[1478][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⵠΔᐃΔⲆ;
    ΔΔ[1478][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆᐃⵠⲆΔ;
    ΔΔ[1480] = [];
    ΔΔ[1480][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⵠⵠᐃⲆⲆ;
    ΔΔ[1480][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔΔⲆΔΔ;
    ΔΔ[1477] = ⵠᐃ.ᐃΔᐃΔΔⲆΔ;
    ΔΔ[1479] = ⵠᐃ.ᐃⵠⵠⲆⲆⵠⲆ;
    ΔΔ[1481] = ⵠᐃ.ⲆΔᐃΔΔΔⲆ;
    ΔΔ[1471] = [];
    ΔΔ[1471][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠΔⲆΔⵠⲆ;
    ΔΔ[1471][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⵠⵠΔᐃⲆ;
    ΔΔ[1473] = [];
    ΔΔ[1473][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⲆΔⵠⲆᐃ;
    ΔΔ[1473][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⵠⵠΔⲆᐃ;
    ΔΔ[1474] = [];
    ΔΔ[1474][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆᐃΔⵠⵠⵠ;
    ΔΔ[1474][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠΔⲆΔᐃ;
    ΔΔ[1472] = ⵠᐃ.ⵠⵠⵠⲆΔⵠΔ;
    ΔΔ[1476] = ⵠᐃ.ᐃⲆᐃⵠⲆⲆΔ;
    ΔΔ[1475] = ⵠᐃ.ΔΔΔΔⲆΔⲆ;
    ΔΔ[1361] = [];
    ΔΔ[1361][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔᐃᐃⲆⵠⵠ;
    ΔΔ[1361][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆⲆⵠᐃⲆ;
    ΔΔ[1363] = [];
    ΔΔ[1363][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔⵠⲆⲆⲆⲆ;
    ΔΔ[1363][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔⵠⲆⲆⲆⵠ;
    ΔΔ[341] = [];
    ΔΔ[341][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃᐃⲆⵠᐃⵠ;
    ΔΔ[341][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠᐃⵠⲆᐃᐃ;
    ΔΔ[1368] = [];
    ΔΔ[1368][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⲆⵠⲆⲆᐃ;
    ΔΔ[1368][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⵠΔᐃⵠⲆ;
    ΔΔ[1371] = [];
    ΔΔ[1371][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⲆᐃΔⲆⲆ;
    ΔΔ[1371][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔⵠΔⲆⲆΔ;
    ΔΔ[1367] = [];
    ΔΔ[1367][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃᐃᐃⵠ;
    ΔΔ[1367][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔⵠᐃⲆⲆ;
    ΔΔ[1370] = [];
    ΔΔ[1370][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⲆΔΔⲆ;
    ΔΔ[1370][v624.Δⵠⵠ] = ⵠᐃ.Ⲇⵠⵠⵠᐃⵠᐃ;
    ΔΔ[1364] = ⵠᐃ.ⵠᐃⲆᐃⵠⵠⵠ;
    ΔΔ[1365] = ⵠᐃ.ⵠΔᐃΔᐃΔᐃ;
    ΔΔ[1366] = ⵠᐃ.ᐃⲆΔΔⵠΔⵠ;
    ΔΔ[1373] = ⵠᐃ.ⲆⵠᐃⲆᐃᐃΔ;
    ΔΔ[1374] = ⵠᐃ.ⵠΔⲆᐃᐃΔⵠ;
    ΔΔ[1375] = ⵠᐃ.ᐃⵠⵠᐃⵠⵠⲆ;
    ΔΔ[1613] = [];
    ΔΔ[1613][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃΔⵠⲆᐃᐃΔΔ;
    ΔΔ[1613][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆⲆⲆΔⵠᐃⵠ;
    ΔΔ[358] = [];
    ΔΔ[358][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃᐃⲆⲆᐃⲆΔΔ;
    ΔΔ[358][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆⲆΔΔⲆΔⵠ;
    ΔΔ[1609] = [];
    ΔΔ[1609][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⲆΔⲆⵠⲆⵠⵠ;
    ΔΔ[1609][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⲆΔⵠⲆⲆⵠ;
    ΔΔ[1612] = [];
    ΔΔ[1612][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⲆΔᐃᐃᐃⲆΔ;
    ΔΔ[1612][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔᐃᐃᐃⲆⲆΔ;
    ΔΔ[1614] = ⵠᐃ.ΔⲆⵠⵠⲆⲆⲆ;
    ΔΔ[1610] = ⵠᐃ.ⲆⵠᐃΔᐃⲆⵠ;
    ΔΔ[1376] = [];
    ΔΔ[1376][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆⲆᐃΔⲆ;
    ΔΔ[1376][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆᐃᐃⲆⵠ;
    ΔΔ[342] = [];
    ΔΔ[342][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆⲆⵠⲆΔᐃ;
    ΔΔ[342][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔⵠⲆΔⵠ;
    ΔΔ[1378] = [];
    ΔΔ[1378][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆΔΔⵠⲆΔ;
    ΔΔ[1378][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠΔᐃΔΔ;
    ΔΔ[1380] = [];
    ΔΔ[1380][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃΔΔⵠⲆ;
    ΔΔ[1380][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⵠⵠᐃⲆⵠ;
    ΔΔ[1383] = [];
    ΔΔ[1383][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔΔΔⲆᐃ;
    ΔΔ[1383][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⲆⲆΔΔᐃ;
    ΔΔ[1379] = [];
    ΔΔ[1379][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃᐃᐃⵠⲆⲆ;
    ΔΔ[1379][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⵠⲆⲆⵠΔ;
    ΔΔ[1382] = [];
    ΔΔ[1382][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆᐃΔΔⲆⵠ;
    ΔΔ[1382][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃΔΔᐃΔⵠ;
    ΔΔ[1381] = [];
    ΔΔ[1381][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆⵠᐃⵠⵠⲆ;
    ΔΔ[1381][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃΔΔⵠⵠⵠ;
    ΔΔ[1384] = [];
    ΔΔ[1384][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃᐃⲆⵠΔ;
    ΔΔ[1384][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⵠΔⵠΔⲆ;
    ΔΔ[1385] = ⵠᐃ.ⵠⲆᐃⵠⲆⲆᐃ;
    ΔΔ[1386] = ⵠᐃ.ⵠⲆΔᐃᐃⵠⵠ;
    ΔΔ[1387] = ⵠᐃ.ᐃⲆᐃⵠΔᐃⵠ;
    ΔΔ[1391] = [];
    ΔΔ[1391][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⲆⲆΔⵠ;
    ΔΔ[1391][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠᐃΔⲆⲆ;
    ΔΔ[343] = [];
    ΔΔ[343][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃᐃⵠⲆⵠⵠ;
    ΔΔ[343][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃⵠⵠⵠΔ;
    ΔΔ[1393] = [];
    ΔΔ[1393][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆⲆΔΔⲆ;
    ΔΔ[1393][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆᐃⲆⲆⵠ;
    ΔΔ[1395] = [];
    ΔΔ[1395][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⵠᐃⲆⵠᐃ;
    ΔΔ[1395][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆⵠᐃⲆⵠΔ;
    ΔΔ[1398] = [];
    ΔΔ[1398][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃⲆⲆⵠⵠ;
    ΔΔ[1398][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⵠΔⲆᐃ;
    ΔΔ[1394] = [];
    ΔΔ[1394][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃΔΔⲆᐃᐃ;
    ΔΔ[1394][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆᐃΔΔⵠⵠ;
    ΔΔ[1397] = [];
    ΔΔ[1397][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆᐃⲆⵠⲆᐃ;
    ΔΔ[1397][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔⲆΔᐃⲆ;
    ΔΔ[1396] = [];
    ΔΔ[1396][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⵠᐃΔΔ;
    ΔΔ[1396][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠΔⵠⵠΔ;
    ΔΔ[1399] = [];
    ΔΔ[1399][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔΔᐃᐃᐃ;
    ΔΔ[1399][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠᐃΔΔΔᐃ;
    ΔΔ[1400] = ⵠᐃ.ⵠΔᐃⵠⲆⲆⵠ;
    ΔΔ[1401] = ⵠᐃ.ΔᐃΔᐃⲆᐃᐃ;
    ΔΔ[1402] = ⵠᐃ.ⵠⲆΔᐃᐃⵠΔ;
    ΔΔ[1406] = [];
    ΔΔ[1406][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⲆᐃᐃᐃⲆ;
    ΔΔ[1406][v624.Δⵠⵠ] = ⵠᐃ.ΔΔΔⵠⵠᐃⵠ;
    ΔΔ[345] = [];
    ΔΔ[345][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⵠΔΔᐃⲆ;
    ΔΔ[345][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔⵠᐃΔΔ;
    ΔΔ[1423] = ⵠᐃ.ⲆⲆⲆᐃⲆᐃᐃ;
    ΔΔ[1421] = [];
    ΔΔ[1421][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⵠⲆⲆⵠΔ;
    ΔΔ[1421][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠⵠⲆⵠⲆ;
    ΔΔ[1422] = [];
    ΔΔ[1422][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⵠⵠⵠⵠᐃ;
    ΔΔ[1422][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆⵠⵠᐃⵠΔ;
    ΔΔ[1408] = [];
    ΔΔ[1408][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃΔⵠⲆΔⲆ;
    ΔΔ[1408][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⵠⲆᐃⲆᐃ;
    ΔΔ[1410] = [];
    ΔΔ[1410][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔⲆⵠᐃΔ;
    ΔΔ[1410][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔᐃⲆᐃᐃ;
    ΔΔ[1413] = [];
    ΔΔ[1413][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃᐃΔⵠΔ;
    ΔΔ[1413][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔᐃⲆⵠⲆ;
    ΔΔ[1409] = [];
    ΔΔ[1409][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃᐃΔΔᐃ;
    ΔΔ[1409][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠΔᐃΔⵠᐃ;
    ΔΔ[1412] = [];
    ΔΔ[1412][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠΔΔΔⲆ;
    ΔΔ[1412][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⵠⲆᐃΔᐃ;
    ΔΔ[1411] = [];
    ΔΔ[1411][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⲆᐃⲆᐃⵠ;
    ΔΔ[1411][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⵠⲆⵠⵠⵠ;
    ΔΔ[1414] = [];
    ΔΔ[1414][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠΔᐃⲆᐃⵠ;
    ΔΔ[1414][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠⲆΔⵠⵠ;
    ΔΔ[1415] = ⵠᐃ.ᐃⲆΔⵠΔᐃⵠ;
    ΔΔ[1416] = ⵠᐃ.ΔᐃΔΔᐃⲆⲆ;
    ΔΔ[1417] = ⵠᐃ.ΔⵠⲆᐃⵠᐃΔ;
    ΔΔ[1427] = [];
    ΔΔ[1427][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃΔⵠΔ;
    ΔΔ[1427][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆΔⲆⵠⵠ;
    ΔΔ[348] = [];
    ΔΔ[348][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆΔΔⲆΔᐃ;
    ΔΔ[348][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃⲆⲆΔⵠ;
    ΔΔ[1444] = ⵠᐃ.ⵠᐃΔᐃⵠⲆᐃ;
    ΔΔ[1442] = [];
    ΔΔ[1442][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⲆᐃⲆⵠⵠ;
    ΔΔ[1442][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⲆΔⵠⵠⲆ;
    ΔΔ[1443] = [];
    ΔΔ[1443][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆΔⲆⵠⵠⵠ;
    ΔΔ[1443][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⵠᐃⵠΔΔ;
    ΔΔ[1429] = [];
    ΔΔ[1429][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠᐃᐃⲆⵠΔ;
    ΔΔ[1429][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⵠⲆⵠᐃΔ;
    ΔΔ[1431] = [];
    ΔΔ[1431][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⲆΔΔⵠΔ;
    ΔΔ[1431][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆᐃⵠΔⵠⵠ;
    ΔΔ[1434] = [];
    ΔΔ[1434][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠᐃᐃᐃᐃⲆ;
    ΔΔ[1434][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃΔⵠⲆΔᐃ;
    ΔΔ[1430] = [];
    ΔΔ[1430][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠⵠΔΔⵠᐃ;
    ΔΔ[1430][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⲆⵠΔⲆⵠ;
    ΔΔ[1433] = [];
    ΔΔ[1433][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔⵠⲆΔⲆ;
    ΔΔ[1433][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⵠⵠⵠⵠⲆ;
    ΔΔ[1432] = [];
    ΔΔ[1432][v624.Ⲇⵠᐃ] = ⵠᐃ.Ⲇⵠⵠⵠᐃᐃⵠ;
    ΔΔ[1432][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔΔⵠΔⵠⲆ;
    ΔΔ[1435] = [];
    ΔΔ[1435][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆᐃᐃⵠΔΔ;
    ΔΔ[1435][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠᐃⲆⲆⲆⲆ;
    ΔΔ[1436] = ⵠᐃ.ⲆΔⵠᐃⲆⵠΔ;
    ΔΔ[1437] = ⵠᐃ.ΔⲆⵠᐃΔᐃΔ;
    ΔΔ[1438] = ⵠᐃ.ⵠΔΔᐃⵠⲆΔ;
    ΔΔ[1445] = [];
    ΔΔ[1445][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆⵠⲆΔⵠΔ;
    ΔΔ[1445][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠⲆΔⵠΔⵠ;
    ΔΔ[1446] = [];
    ΔΔ[1446][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⲆΔⲆᐃ;
    ΔΔ[1446][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃⵠⲆᐃⲆⵠ;
    ΔΔ[1462] = ⵠᐃ.ᐃᐃⵠⵠⲆⵠⵠ;
    ΔΔ[1460] = [];
    ΔΔ[1460][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔⲆⵠⵠⵠ;
    ΔΔ[1460][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔᐃΔΔᐃ;
    ΔΔ[1461] = [];
    ΔΔ[1461][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔⵠⲆⲆⵠᐃ;
    ΔΔ[1461][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⵠⵠⲆᐃᐃ;
    ΔΔ[1447] = [];
    ΔΔ[1447][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠΔΔΔⵠ;
    ΔΔ[1447][v624.Δⵠⵠ] = ⵠᐃ.ΔΔⲆⵠⲆⵠⲆ;
    ΔΔ[1449] = [];
    ΔΔ[1449][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃΔΔⵠᐃⵠ;
    ΔΔ[1449][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔᐃΔΔⲆ;
    ΔΔ[1452] = [];
    ΔΔ[1452][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠⲆΔᐃⲆ;
    ΔΔ[1452][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃᐃᐃⵠΔⲆ;
    ΔΔ[1448] = [];
    ΔΔ[1448][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⲆᐃΔΔΔ;
    ΔΔ[1448][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔⵠⵠᐃⲆ;
    ΔΔ[1451] = [];
    ΔΔ[1451][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔΔΔᐃⲆᐃ;
    ΔΔ[1451][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃⵠⲆᐃᐃ;
    ΔΔ[1450] = [];
    ΔΔ[1450][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⲆᐃΔⲆⲆ;
    ΔΔ[1450][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠᐃⲆᐃⲆ;
    ΔΔ[1453] = [];
    ΔΔ[1453][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃⲆΔᐃΔ;
    ΔΔ[1453][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃⲆΔⵠⵠΔ;
    ΔΔ[1454] = ⵠᐃ.ⲆᐃΔΔⵠᐃᐃ;
    ΔΔ[1455] = ⵠᐃ.ⲆᐃΔⵠᐃΔᐃ;
    ΔΔ[1456] = ⵠᐃ.ΔⵠⵠⲆΔⵠᐃ;
    ΔΔ[1350] = [];
    ΔΔ[1350][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆᐃⵠᐃΔⲆ;
    ΔΔ[1350][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃᐃⲆⵠΔᐃ;
    ΔΔ[1351] = [];
    ΔΔ[1351][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⵠⲆⵠΔⵠ;
    ΔΔ[1351][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃⲆΔᐃᐃᐃ;
    ΔΔ[1352] = [];
    ΔΔ[1352][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠⲆΔΔᐃ;
    ΔΔ[1352][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔᐃⲆᐃⲆⵠ;
    ΔΔ[338] = [];
    ΔΔ[338][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔⲆⲆⵠⲆ;
    ΔΔ[338][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔⲆⲆⵠⲆ;
    ΔΔ[344] = [];
    ΔΔ[344][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆΔⵠᐃⵠΔ;
    ΔΔ[344][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆΔⵠᐃⵠΔ;
    ΔΔ[359] = [];
    ΔΔ[359][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆΔⵠⵠΔ;
    ΔΔ[359][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔⲆΔⵠⵠΔ;
    ΔΔ[1353] = ⵠᐃ.ⲆⵠⵠⲆⲆⵠⲆ;
    ΔΔ[162] = [];
    ΔΔ[162][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⲆⲆᐃΔⲆᐃ;
    ΔΔ[162][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃΔΔΔΔⲆ;
    ΔΔ[165] = [];
    ΔΔ[165][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠΔⵠᐃΔΔ;
    ΔΔ[165][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠΔⵠᐃΔΔ;
    ΔΔ[357] = [];
    ΔΔ[357][v624.Ⲇⵠᐃ] = [ⵠᐃ.ΔⵠⵠⵠⵠⲆⵠ, ⵠᐃ.ᐃᐃⵠΔᐃᐃΔ, ⵠᐃ.ⲆΔⲆᐃΔΔΔ, ⵠᐃ.ⲆᐃⲆᐃΔⵠᐃ, ⵠᐃ.ⲆⵠⵠΔⵠⵠⲆ, ⵠᐃ.Ⲇᐃⵠᐃⵠᐃᐃ, ⵠᐃ.ⵠΔᐃⵠΔᐃⲆ, ⵠᐃ.ⲆⲆⲆⵠⵠⲆⵠ, ⵠᐃ.ⵠᐃⲆΔΔᐃⲆ, ⵠᐃ.ⲆΔⵠᐃⲆⲆⲆ, ⵠᐃ.ⲆᐃⵠΔⵠᐃⲆ, ⵠᐃ.ΔΔⲆⲆⵠᐃᐃ, ⵠᐃ.ⵠⵠⵠᐃΔΔᐃ, ⵠᐃ.ᐃⵠⵠᐃᐃᐃᐃ, ⵠᐃ.ⲆⲆⵠᐃᐃᐃⲆ, ⵠᐃ.ⲆΔⲆⵠⵠΔᐃ, ⵠᐃ.ᐃΔΔⲆᐃΔⵠ, ⵠᐃ.ΔⵠⵠⵠᐃⲆⲆ];
    ΔΔ[357][v624.Δⵠⵠ] = [ⵠᐃ.ⵠᐃⵠᐃΔΔΔ, ⵠᐃ.ΔΔⲆᐃᐃⵠⵠ, ⵠᐃ.ⲆΔΔΔᐃΔⲆ, ⵠᐃ.ΔᐃΔⵠⲆⲆⵠ, ⵠᐃ.ⵠΔΔⲆᐃⲆΔ, ⵠᐃ.ⲆⵠΔⲆΔⵠΔ, ⵠᐃ.ΔⵠΔΔⲆⵠΔ, ⵠᐃ.ⲆⲆⲆⵠⵠⲆⵠ, ⵠᐃ.ⲆⵠⲆΔⲆΔᐃ, ⵠᐃ.ⵠⵠΔᐃⲆⲆᐃ, ⵠᐃ.ᐃᐃⲆᐃᐃⲆΔ, ⵠᐃ.ⲆᐃⲆⲆΔᐃⵠ, ⵠᐃ.ⵠⲆΔΔΔⲆⲆ, ⵠᐃ.ⲆᐃⵠᐃΔᐃᐃ, ⵠᐃ.ᐃⵠⵠⲆⵠⵠΔ, ⵠᐃ.ᐃⵠΔⲆⵠⲆⵠ, ⵠᐃ.ⲆΔᐃⲆⲆⵠᐃ, ⵠᐃ.ᐃⲆΔⵠΔᐃΔ];
    ΔΔ[166] = [];
    ΔΔ[166][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠΔⲆΔⲆᐃ;
    ΔΔ[166][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⲆⲆΔⵠⵠ;
    ΔΔ[335] = [];
    ΔΔ[335][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠΔᐃΔΔΔ;
    ΔΔ[335][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔⵠⵠⵠᐃ;
    ΔΔ[336] = [];
    ΔΔ[336][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠᐃⲆᐃΔⵠ;
    ΔΔ[336][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆᐃⲆⲆΔⵠ;
    ΔΔ[33] = [];
    ΔΔ[33][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔᐃΔⲆⵠ;
    ΔΔ[33][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃⲆΔⲆⵠ;
    ΔΔ[161] = [];
    ΔΔ[161][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠⲆΔⲆΔⲆᐃ;
    ΔΔ[161][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆΔΔᐃⵠΔᐃ;
    ΔΔ[160] = [];
    ΔΔ[160][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃᐃⲆⵠΔⵠⵠⵠ;
    ΔΔ[160][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠΔᐃⲆᐃⵠⵠⵠ;
    ΔΔ[155] = [];
    ΔΔ[155][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔᐃᐃΔΔΔ;
    ΔΔ[155][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠᐃⵠⵠⲆⵠ;
    ΔΔ[840] = [];
    ΔΔ[840][v624.Ⲇⵠᐃ] = [];
    ΔΔ[840][v624.Δⵠⵠ] = [];
    ΔΔ[840][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔⲆⲆⵠⲆᐃΔᐃ);
    ΔΔ[840][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⵠΔⲆΔⲆⲆΔᐃ);
    ΔΔ[840][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃᐃⲆᐃⲆⵠⲆᐃ);
    ΔΔ[840][v624.Δⵠⵠ].push(ⵠᐃ.ΔⲆⵠᐃΔⲆΔᐃΔ);
    ΔΔ[840][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔᐃᐃᐃⵠⲆⵠⵠ);
    ΔΔ[840][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔΔⲆⵠⲆⲆⵠⲆ);
    ΔΔ[838] = [];
    ΔΔ[838][v624.Ⲇⵠᐃ] = [];
    ΔΔ[838][v624.Δⵠⵠ] = [];
    ΔΔ[838][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠΔⵠΔΔⲆΔΔᐃ);
    ΔΔ[838][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔΔⲆⵠⵠΔⲆⵠΔ);
    ΔΔ[838][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃᐃᐃΔΔᐃⵠⵠ);
    ΔΔ[838][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔⵠⲆⲆⵠⵠᐃΔ);
    ΔΔ[838][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔΔᐃΔⵠⲆΔΔ);
    ΔΔ[838][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠⵠⲆᐃⲆⲆⲆΔ);
    ΔΔ[839] = [];
    ΔΔ[839][v624.Ⲇⵠᐃ] = [];
    ΔΔ[839][v624.Δⵠⵠ] = [];
    ΔΔ[839][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⲆΔΔΔᐃⵠⵠⵠ);
    ΔΔ[839][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠⵠⲆⵠᐃΔⲆⵠ);
    ΔΔ[839][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃΔΔⵠᐃΔⵠⲆ);
    ΔΔ[839][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔⵠⲆᐃᐃⲆΔᐃ);
    ΔΔ[839][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⵠΔⲆΔΔΔΔⵠ);
    ΔΔ[839][v624.Δⵠⵠ].push(ⵠᐃ.ⵠΔᐃⲆⵠᐃΔⲆΔ);
    ΔᐃΔΔ.cop = [];
    ΔᐃΔΔ.cop[0] = [ⵠᐃ.ⵠΔⲆᐃⲆⵠᐃ, ⵠᐃ.ΔⲆⵠᐃⲆᐃⵠ];
    ΔᐃΔΔ.cop[1] = ΔᐃΔΔ.cop[0];
    ΔᐃΔΔ.cop[2] = [ⵠᐃ.ΔⵠⵠⲆΔⲆⲆ, ⵠᐃ.ΔΔⲆᐃΔⵠⵠ];
    ΔᐃΔΔ.iro = [];
    ΔᐃΔΔ.iro[0] = [ⵠᐃ.ΔⵠⵠΔⵠᐃⵠ, ⵠᐃ.ΔΔᐃⲆⲆΔⲆ];
    ΔᐃΔΔ.iro[1] = ΔᐃΔΔ.iro[0];
    ΔᐃΔΔ.iro[2] = [ⵠᐃ.ⵠⲆⲆⲆⲆΔᐃ, ⵠᐃ.ᐃΔᐃΔⵠᐃΔ];
    ΔᐃΔΔ.top = [];
    ΔᐃΔΔ.top[0] = [ⵠᐃ.ᐃᐃΔⵠΔⵠⵠ, ⵠᐃ.ᐃᐃΔⵠⲆᐃΔ];
    ΔᐃΔΔ.top[1] = ΔᐃΔΔ.top[0];
    ΔᐃΔΔ.top[2] = [ⵠᐃ.ⵠⵠΔⵠⲆⲆΔ, ⵠᐃ.ⵠΔΔᐃΔⲆⵠ];
    ΔᐃΔΔ.sap = [];
    ΔᐃΔΔ.sap[0] = [ⵠᐃ.ΔⵠᐃᐃⲆⵠᐃ, ⵠᐃ.ᐃΔᐃⲆᐃᐃΔ];
    ΔᐃΔΔ.sap[1] = ΔᐃΔΔ.sap[0];
    ΔᐃΔΔ.sap[2] = [ⵠᐃ.ⲆΔᐃⵠⲆⵠΔ, ⵠᐃ.ⲆⲆΔⵠΔⲆⵠ];
    ΔᐃΔΔ.jad = [];
    ΔᐃΔΔ.jad[0] = [ⵠᐃ.ΔⲆⲆΔⵠⵠⵠ, ⵠᐃ.ᐃᐃⲆΔΔᐃⵠ];
    ΔᐃΔΔ.jad[1] = ΔᐃΔΔ.jad[0];
    ΔᐃΔΔ.jad[2] = [ⵠᐃ.ⵠⲆⲆᐃᐃⵠΔ, ⵠᐃ.ⲆⵠⲆⲆΔᐃⵠ];
    ΔᐃΔΔ.rub = [];
    ΔᐃΔΔ.rub[0] = [ⵠᐃ.ⲆⵠⲆᐃⵠΔᐃ, ⵠᐃ.ᐃⲆΔᐃΔᐃⵠ];
    ΔᐃΔΔ.rub[1] = ΔᐃΔΔ.rub[0];
    ΔᐃΔΔ.rub[2] = [ⵠᐃ.ᐃᐃᐃᐃΔⵠⵠ, ⵠᐃ.ΔΔΔΔⲆⵠᐃ];
    ΔᐃΔΔ.aqu = [];
    ΔᐃΔΔ.aqu[0] = [ⵠᐃ.ⵠⵠⵠⵠⵠⵠⲆ, ⵠᐃ.ⲆᐃᐃᐃⲆⵠⵠ];
    ΔᐃΔΔ.aqu[1] = ΔᐃΔΔ.aqu[0];
    ΔᐃΔΔ.aqu[2] = [ⵠᐃ.ᐃⵠⵠᐃΔⲆΔ, ⵠᐃ.ⵠⵠⵠⵠⵠᐃΔ];
    ΔᐃΔΔ.coa = [];
    ΔᐃΔΔ.coa[0] = [ⵠᐃ.ΔΔᐃᐃᐃΔΔ, ⵠᐃ.ᐃⲆⲆⲆΔᐃⲆ];
    ΔᐃΔΔ.coa[1] = ΔᐃΔΔ.coa[0];
    ΔᐃΔΔ.coa[2] = [ⵠᐃ.ⵠⵠⲆᐃⲆⵠⵠ, ⵠᐃ.ΔⲆΔⵠⵠⵠⲆ];
    ΔᐃΔΔ.jut = [];
    ΔᐃΔΔ.jut[0] = [ⵠᐃ.ᐃᐃᐃΔᐃⲆⵠ, ⵠᐃ.ΔⵠᐃⲆⵠΔⲆ];
    ΔᐃΔΔ.jut[1] = ΔᐃΔΔ.jut[0];
    ΔᐃΔΔ.jut[2] = ΔᐃΔΔ.jut[0];
    ΔᐃΔΔ.jus = [];
    ΔᐃΔΔ.jus[0] = [ⵠᐃ.ⲆᐃΔΔⵠⵠΔ, ⵠᐃ.ⲆⲆΔⵠᐃΔΔ];
    ΔᐃΔΔ.jus[1] = ΔᐃΔΔ.jus[0];
    ΔᐃΔΔ.jus[2] = [ⵠᐃ.ΔΔᐃΔⵠⵠΔ, ⵠᐃ.ΔΔΔⲆⵠΔⵠ];
    ΔᐃΔΔ.jub = [];
    ΔᐃΔΔ.jub[0] = [ⵠᐃ.ΔΔΔⲆΔⵠⵠ, ⵠᐃ.ⲆΔΔⲆⵠⵠⲆ];
    ΔᐃΔΔ.jub[1] = ΔᐃΔΔ.jub[0];
    ΔᐃΔΔ.bap = [];
    ΔᐃΔΔ.bap[0] = [ⵠᐃ.ᐃⵠΔⵠΔᐃΔ, ⵠᐃ.ⵠᐃⵠⵠᐃᐃⵠ];
    ΔᐃΔΔ.g = [];
    ΔᐃΔΔ.g[0] = [ⵠᐃ.ⵠⲆⲆⲆΔⲆΔ, ⵠᐃ.ΔΔᐃⵠᐃⲆⲆ];
    ΔᐃΔΔ.g[1] = ΔᐃΔΔ.g[0];
    ΔᐃΔΔ.g[2] = [ⵠᐃ.ⲆΔᐃⲆⲆⲆᐃ, ⵠᐃ.ⲆⵠⵠⲆⲆⵠᐃ];
    ΔᐃΔΔ.m = [];
    ΔᐃΔΔ.m[0] = [ⵠᐃ.ⲆⲆᐃᐃⵠⵠⲆ, ⵠᐃ.ⵠᐃⲆᐃᐃⲆⵠ];
    ΔᐃΔΔ.m[1] = ΔᐃΔΔ.m[0];
    ΔᐃΔΔ.m[2] = [ⵠᐃ.ⲆⵠᐃⲆⵠⵠᐃ, ⵠᐃ.ⲆᐃᐃⲆⲆᐃΔ];
    ΔᐃΔΔ.la = [];
    ΔᐃΔΔ.la[0] = [ⵠᐃ.ΔⵠⵠΔⲆΔⵠ, ⵠᐃ.ᐃΔᐃᐃΔⵠⵠ];
    ΔᐃΔΔ.la[1] = ΔᐃΔΔ.la[0];
    ΔᐃΔΔ.la[2] = ΔᐃΔΔ.la[0];
    ΔᐃΔΔ.la[3] = ΔᐃΔΔ.la[0];
    ΔᐃΔΔ.la[4] = ΔᐃΔΔ.la[0];
    ΔᐃΔΔ.la[5] = ΔᐃΔΔ.la[0];
    ΔᐃΔΔ.s = [];
    ΔᐃΔΔ.s[0] = [ⵠᐃ.ᐃⵠⲆᐃΔᐃⵠ, ⵠᐃ.ᐃⵠᐃᐃⵠΔⲆ];
    ΔᐃΔΔ.s[1] = ΔᐃΔΔ.s[0];
    ΔᐃΔΔ.s[2] = [ⵠᐃ.ΔⲆⲆⵠΔⲆᐃ, ⵠᐃ.ⲆⵠΔⵠⲆᐃⲆ];
    ΔᐃΔΔ.p = [];
    ΔᐃΔΔ.p[0] = [ⵠᐃ.ᐃΔᐃΔⵠΔⵠ, ⵠᐃ.ᐃΔᐃΔⵠΔⵠ];
    ΔᐃΔΔ.a = [];
    ΔᐃΔΔ.a[0] = [ⵠᐃ.ⵠⲆᐃⲆᐃⲆΔ, ⵠᐃ.ᐃⵠΔⵠᐃⵠⵠ];
    ΔᐃΔΔ.a[1] = ΔᐃΔΔ.a[0];
    ΔᐃΔΔ.a[2] = ΔᐃΔΔ.a[0];
    ΔᐃΔΔ.d = [];
    ΔᐃΔΔ.d[0] = [ⵠᐃ.ΔᐃⲆⵠΔⵠΔ, ⵠᐃ.ᐃⲆΔⲆΔᐃⲆ];
    ΔᐃΔΔ.d[1] = ΔᐃΔΔ.d[0];
    ΔᐃΔΔ.d[2] = ΔᐃΔΔ.d[0];
    ΔᐃΔΔ.re = [];
    ΔᐃΔΔ.re[0] = [ⵠᐃ.ⵠⲆᐃΔⲆᐃᐃ, ⵠᐃ.ⵠⵠⲆⲆⵠᐃⲆ];
    ΔᐃΔΔ.re[1] = ΔᐃΔΔ.re[0];
    ΔᐃΔΔ.re[2] = ΔᐃΔΔ.re[0];
    ΔᐃΔΔ.f = [];
    ΔᐃΔΔ.f[0] = [ⵠᐃ.ᐃᐃⲆⵠⵠⲆΔ, ⵠᐃ.ⵠᐃᐃⵠⲆⲆΔ];
    ΔᐃΔΔ.f[1] = ΔᐃΔΔ.f[0];
    ΔᐃΔΔ.f[2] = ΔᐃΔΔ.f[0];
    ΔᐃΔΔ.isl = [];
    ΔᐃΔΔ.isl[0] = [ⵠᐃ.ᐃΔⵠᐃΔⲆⵠ, ⵠᐃ.ⲆⵠᐃⵠⲆᐃΔ];
    ΔᐃΔΔ.isl[1] = ΔᐃΔΔ.isl[0];
    ΔᐃΔΔ.isl[2] = ΔᐃΔΔ.isl[0];
    ΔᐃΔΔ.c = [];
    ΔᐃΔΔ.c[0] = [ⵠᐃ.ⲆΔΔᐃⵠΔⲆ, ⵠᐃ.ΔⵠⲆΔⲆⲆΔ];
    ΔᐃΔΔ.c[1] = ΔᐃΔΔ.c[0];
    ΔᐃΔΔ.c[2] = ΔᐃΔΔ.c[0];
    ΔᐃΔΔ.wtb = [];
    ΔᐃΔΔ.wtb[0] = [ⵠᐃ.ⵠᐃⲆⵠᐃᐃⵠ, ⵠᐃ.ⲆⵠⲆΔᐃⲆⵠ];
    ΔᐃΔΔ.PIRANHA = [ⵠᐃ.ΔⵠΔᐃⲆⵠⵠ, ⵠᐃ.ⲆᐃΔⲆⲆᐃⲆ];
    ΔᐃΔΔ.KRAKEN = [ⵠᐃ.ᐃᐃⲆΔΔΔΔ, ⵠᐃ.ⵠⲆΔΔᐃΔΔ];
    ΔᐃΔΔ.FOX = [ⵠᐃ.ⲆⲆⲆᐃⲆΔⵠ, ⵠᐃ.ⲆΔΔⵠⲆⵠⲆ];
    ΔᐃΔΔ.WOLF = [ⵠᐃ.ΔⵠᐃⵠΔΔΔ, ⵠᐃ.ᐃⲆⲆᐃΔⵠΔ];
    ΔᐃΔΔ.SPIDER = [ⵠᐃ.ᐃⲆⲆⲆᐃⲆⲆ, ⵠᐃ.ᐃⵠⵠᐃⲆⲆᐃ];
    ΔᐃΔΔ.BEAR = [ⵠᐃ.ΔΔⵠᐃⲆΔⵠ, ⵠᐃ.ΔⵠⲆΔᐃΔᐃ];
    ΔᐃΔΔ.CAVE = [ⵠᐃ.ⵠΔᐃⲆⵠΔΔ, ⵠᐃ.ΔⲆΔΔⲆⵠΔ];
    ΔᐃΔΔ.MAP = [ⵠᐃ.ᐃᐃΔⵠᐃΔᐃ, ⵠᐃ.ⵠᐃΔᐃⲆᐃⵠ];
    ΔᐃΔΔ.FOREST = [ⵠᐃ.ⲆΔᐃᐃᐃⲆΔ, ⵠᐃ.ᐃⲆⲆⲆᐃΔⲆ];
    ΔᐃΔΔ.JUNGLE = [ⵠᐃ.ΔⲆⵠᐃᐃⲆᐃ, ⵠᐃ.ΔⵠⵠⲆⵠΔΔ];
    ΔᐃΔΔ.WINTER = [ⵠᐃ.ᐃΔⲆⲆΔΔΔ, ⵠᐃ.ᐃΔⵠⵠΔᐃΔ];
    ΔᐃΔΔ.DESERT = [ⵠᐃ.ⵠⵠⵠΔⲆᐃⲆ, ⵠᐃ.ΔΔᐃΔΔᐃᐃ];
    ΔᐃΔΔ.LAVA = [ⵠᐃ.ⵠᐃᐃⵠᐃΔⵠ, ⵠᐃ.ⵠᐃⵠⲆⲆⲆⲆ];
    for (var v1297 in ΔᐃΔΔ) {
      for (var v1298 = ΔᐃΔΔ[v1297], v1299 = 0; v1299 < v1298.length; v1299++) {
        var v1300 = v1298[v1299];
        if (v1300.ᐃⲆᐃⵠⲆⲆⲆ !== vVVVVUndefined824) {
          v1300.ᐃⲆᐃⵠⲆⲆⲆ();
        } else if (v1300.length > 0) {
          for (var v1301 = 0; v1301 < v1300.length; v1301++) {
            if (v1300[v1301].ᐃⲆᐃⵠⲆⲆⲆ !== undefined) {
              v1300[v1301].ᐃⲆᐃⵠⲆⲆⲆ();
            }
          }
        }
      }
    }
    console.log(vVUndefined13, vVVVUndefined822);
  }
  function f205(p908, p909, p910) {
    var v1302 = document.createElement("canvas");
    var v1303 = v1302.getContext("2d");
    v1302.width = p908 * 165;
    v1302.height = p908 * 123;
    v1303.save();
    v1303.translate(p908 * 81, p908 * 65);
    f87(v1303, p908 * -78, p908 * -54.5, p908 * 156, p908 * 109, p908 * 20);
    v1303.restore();
    f90(v1303, p910[0]);
    v1303.save();
    v1303.translate(p908 * 81, p908 * 58);
    f87(v1303, p908 * -78, p908 * -54.5, p908 * 156, p908 * 109, p908 * 20);
    v1303.restore();
    f90(v1303, p910[1], p910[2], 4);
    v1303.save();
    v1303.translate(p908 * 81, p908 * 58);
    f87(v1303, p908 * -69, p908 * -47, p908 * 138, p908 * 93, p908 * 15);
    v1303.restore();
    f90(v1303, p910[3], p910[4], 4);
    v1303.save();
    v1303.translate(p908 * 79, p908 * 54);
    f87(v1303, p908 * -34, p908 * -40, p908 * 68, p908 * 88, p908 * 13);
    v1303.restore();
    f90(v1303, vVVVUndefined82, p910[5], 4);
    v1303.beginPath();
    v1303.lineCap = "round";
    v1303.lineJoin = "round";
    v1303.moveTo(p908 * 44, p908 * 13);
    v1303.bezierCurveTo(p908 * 43.5, p908 * 55, p908 * 43.5, p908 * 55, p908 * 43, p908 * 101);
    v1303.closePath();
    f90(v1303, vVVUndefined82, p910[6], 4);
    v1303.beginPath();
    v1303.lineCap = "round";
    v1303.lineJoin = "round";
    v1303.moveTo(p908 * 115, p908 * 13);
    v1303.bezierCurveTo(p908 * 115, p908 * 56, p908 * 115, p908 * 56, p908 * 115, p908 * 101);
    v1303.closePath();
    f90(v1303, vVVUndefined82, p910[6], 4);
    v1303.beginPath();
    v1303.lineCap = "round";
    v1303.lineJoin = "round";
    v1303.moveTo(p908 * 35, p908 * 6);
    v1303.bezierCurveTo(p908 * 35, p908 * 56, p908 * 36, p908 * 109, p908 * 35, p908 * 110);
    v1303.closePath();
    f90(v1303, undefined, p910[7], 4);
    v1303.beginPath();
    v1303.lineCap = "round";
    v1303.lineJoin = "round";
    v1303.moveTo(p908 * 123, p908 * 6);
    v1303.bezierCurveTo(p908 * 123, p908 * 56, p908 * 123, p908 * 56, p908 * 123, p908 * 110);
    v1303.closePath();
    f90(v1303, undefined, p910[7], 4);
    v1303.save();
    v1303.translate(p908 * 79, p908 * 113);
    f87(v1303, p908 * -18, p908 * -2, p908 * 36, p908 * 4, p908 * 20);
    v1303.restore();
    f90(v1303, vVVVVUndefined824, p910[8], 4);
    v1303.save();
    v1303.translate(p908 * 75, p908 * 118);
    f87(v1303, p908 * -6, p908 * -2.5, p908 * 20, p908 * 5, p908 * 20);
    v1303.restore();
    f90(v1303, p910[8]);
    return v1302;
  }
  function f206(p911, p912, p913, p914) {
    var v1304 = document.createElement("canvas");
    var v1305 = v1304.getContext("2d");
    v1304.width = p911 * 450;
    v1304.height = p911 * 260;
    var vF188 = f188(p911 * 1, vV304, p913);
    v1305.drawImage(vF188, p911 * 0, p911 * 0);
    if (p914 == 1) {
      v1305.translate(p911 * 100, p911 * 0);
      f93(v1305, p911 * 113, p911 * 120, p911 * 66);
      f90(v1305, vVVVUndefined824, p913[4], p911 * 13);
      vF188 = f167(p911 * 0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]);
      v1305.rotate(0.7);
      v1305.drawImage(vF188, p911 * 133, p911 * -64);
      v1305.rotate(-0.7);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 70, p911 * 70);
      v1305.bezierCurveTo(p911 * 113, p911 * 120.5, p911 * 113, p911 * 120.5, p911 * 156, p911 * 171);
      v1305.closePath();
      f90(v1305, vVVVVUndefined823, p913[4], p911 * 13);
    } else if (p914 == 2) {
      v1305.translate(p911 * 100, p911 * 0);
      f93(v1305, p911 * 113, p911 * 120, p911 * 66);
      f90(v1305, undefined, p913[4], p911 * 13);
      v1305.translate(p911 * 30, p911 * 40);
      v1305.save();
      v1305.translate(p911 * 83.5, p911 * 66.5);
      f87(v1305, p911 * -40.5, p911 * -29.5, p911 * 81, p911 * 59, p911 * 15);
      v1305.restore();
      f90(v1305, "#dff2f7", "#187484", p911 * 7);
      f93(v1305, p911 * 22, p911 * 82, p911 * 12);
      f90(v1305, "#dff2f7", "#187484", p911 * 7);
      f93(v1305, p911 * 145, p911 * 82, p911 * 12);
      f90(v1305, "#dff2f7", "#187484", p911 * 7);
      vF188 = f155(p911 * 0.5, vVV304, ["#80500b", "#7c4908"]);
      v1305.drawImage(vF188, p911 * 10, p911 * 85);
      vF188 = f155(p911 * 0.5, v30, ["#80500b", "#7c4908"]);
      v1305.drawImage(vF188, p911 * 50, p911 * 85);
      vF188 = f155(p911 * 0.5, true, ["#80500b", "#7c4908"]);
      v1305.drawImage(vF188, p911 * 90, p911 * 85);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 90, p911 * 105);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 90, p911 * 105);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 30, p911 * 125);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 50, p911 * 115);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 30, p911 * 100);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 80, p911 * 120);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 110, p911 * 125);
      vF188 = f172(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1305.drawImage(vF188, p911 * 120, p911 * 105);
    } else if (p914 == 3) {
      v1305.translate(p911 * 100, p911 * 0);
      f93(v1305, p911 * 113, p911 * 120, p911 * 66);
      f90(v1305, vVVUndefined83, p913[4], p911 * 13);
      v1305.translate(p911 * 40, p911 * 50);
      v1305.save();
      v1305.translate(p911 * 71, p911 * 69);
      f87(v1305, p911 * -30, p911 * -42, p911 * 60, p911 * 84, p911 * 10);
      v1305.restore();
      f90(v1305, undefined, p913[5], p911 * 4);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 42, p911 * 28);
      v1305.bezierCurveTo(p911 * 60, p911 * 31, p911 * 60, p911 * 31, p911 * 78, p911 * 34);
      v1305.bezierCurveTo(p911 * 82, p911 * 34, p911 * 84, p911 * 37, p911 * 83, p911 * 45);
      v1305.bezierCurveTo(p911 * 83, p911 * 80, p911 * 83, p911 * 80, p911 * 83, p911 * 115);
      v1305.bezierCurveTo(p911 * 83, p911 * 120, p911 * 80, p911 * 122, p911 * 73, p911 * 120);
      v1305.bezierCurveTo(p911 * 42, p911 * 111, p911 * 43, p911 * 109, p911 * 41, p911 * 102);
      v1305.bezierCurveTo(p911 * 41, p911 * 71, p911 * 41, p911 * 71, p911 * 41, p911 * 40);
      v1305.closePath();
      f90(v1305, p913[5], p913[5], p911 * 4);
      v1305.translate(p911 * -40, p911 * -50);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 70, p911 * 70);
      v1305.bezierCurveTo(p911 * 113, p911 * 120.5, p911 * 113, p911 * 120.5, p911 * 156, p911 * 171);
      v1305.closePath();
      f90(v1305, vVVUndefined132, p913[4], p911 * 13);
    } else if (p914 == 4) {
      v1305.scale(1, 1);
      v1305.translate(p911 * 70, p911 * 50);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 23, p911 * 6);
      v1305.bezierCurveTo(p911 * 25.5, p911 * 56, p911 * 25.5, p911 * 56, p911 * 28, p911 * 106);
      f90(v1305, undefined, p913[5], p911 * 14);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 59, p911 * 10);
      v1305.bezierCurveTo(p911 * 61, p911 * 51.5, p911 * 61, p911 * 51.5, p911 * 63, p911 * 93);
      f90(v1305, undefined, p913[5], p911 * 14);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 7, p911 * 55);
      v1305.bezierCurveTo(p911 * 33.5, p911 * 55, p911 * 33.5, p911 * 55, p911 * 60, p911 * 55);
      f90(v1305, vVVUndefined83, p913[5], p911 * 14);
      v1305.translate(p911 * 10, p911 * 0);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 123, p911 * 16);
      v1305.bezierCurveTo(p911 * 103, p911 * 16.5, p911 * 103, p911 * 16.5, p911 * 83, p911 * 17);
      v1305.bezierCurveTo(p911 * 83.5, p911 * 61, p911 * 83.5, p911 * 61, p911 * 84, p911 * 105);
      v1305.bezierCurveTo(p911 * 106, p911 * 105, p911 * 106, p911 * 105, p911 * 128, p911 * 105);
      f90(v1305, vVVVUndefined823, p913[5], p911 * 14);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 72, p911 * 63);
      v1305.bezierCurveTo(p911 * 88.5, p911 * 62.5, p911 * 88.5, p911 * 62.5, p911 * 105, p911 * 62);
      f90(v1305, undefined, p913[5], p911 * 14);
      v1305.translate(p911 * 10, p911 * 10);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 141, p911 * 8);
      v1305.bezierCurveTo(p911 * 143, p911 * 50, p911 * 143, p911 * 50, p911 * 145, p911 * 92);
      v1305.bezierCurveTo(p911 * 169, p911 * 88.5, p911 * 169, p911 * 88.5, p911 * 193, p911 * 85);
      f90(v1305, undefined, p913[5], p911 * 14);
      v1305.translate(p911 * 10, p911 * -10);
      v1305.beginPath();
      v1305.lineCap = "round";
      v1305.lineJoin = "round";
      v1305.moveTo(p911 * 205, p911 * 124);
      v1305.bezierCurveTo(p911 * 205, p911 * 69, p911 * 205, p911 * 69, p911 * 205, p911 * 14);
      v1305.bezierCurveTo(p911 * 239, p911 * 15, p911 * 250, p911 * 37, p911 * 249, p911 * 49);
      v1305.bezierCurveTo(p911 * 251, p911 * 65, p911 * 242, p911 * 76, p911 * 206, p911 * 75);
      f90(v1305, undefined, p913[5], p911 * 14);
    }
    return v1304;
  }
  function f207(p915, p916) {
    var v1306 = document.createElement("canvas");
    var v1307 = v1306.getContext("2d");
    v1306.width = p915 * 120;
    v1306.height = p915 * 300;
    v1307.translate(p915 * -80, -20);
    v1307.beginPath();
    v1307.lineCap = "round";
    v1307.lineJoin = "round";
    v1307.moveTo(p915 * 200.5, p915 * 14.953125);
    v1307.bezierCurveTo(p915 * 203, p915 * 171.953125, p915 * 203, p915 * 171.953125, p915 * 205.5, p915 * 328.953125);
    v1307.bezierCurveTo(p915 * 188.5, p915 * 257.953125, p915 * 164.5, p915 * 216.953125, p915 * 166.5, p915 * 176.953125);
    v1307.bezierCurveTo(p915 * 168.5, p915 * 133.953125, p915 * 198.5, p915 * 98.953125, p915 * 200.5, p915 * 14.953125);
    v1307.closePath();
    f90(v1307, p916[0]);
    return v1306;
  }
  function f208(p917, p918, p919) {
    var v1308 = document.createElement("canvas");
    var v1309 = v1308.getContext("2d");
    v1308.width = p917 * 90;
    v1308.height = p917 * 98;
    v1309.translate(0, p917 * 4);
    if (v817 === 0) {
      v1309.globalAlpha = p918 ? 0.5 : 1;
      v1309.save();
      v1309.translate(p917 * 44, p917 * 50);
      v1309.rotate(1);
      f88(v1309, 8, p917 * 41, p917 * 10);
      f90(v1309, p919[0]);
      v1309.restore();
    }
    v1309.globalAlpha = 1;
    v1309.save();
    v1309.translate(p917 * 44, p917 * 44);
    v1309.rotate(1);
    f88(v1309, 8, p917 * 41, p917 * 10);
    f90(v1309, p919[1], p919[2], p917 * 4);
    v1309.rotate(0.56);
    f88(v1309, 8, p917 * 33, p917 * 10);
    f90(v1309, p919[3], p919[4], p917 * 4);
    v1309.rotate(0.28);
    f88(v1309, 8, p917 * 24, p917 * 8);
    f90(v1309, p919[5]);
    v1309.restore();
    v1309.save();
    v1309.translate(p917 * 45, p917 * 45);
    v1309.rotate(0);
    f87(v1309, p917 * -9, p917 * -25.5, p917 * 18, p917 * 51, p917 * 30);
    v1309.restore();
    f90(v1309, p919[4], p919[4], p917 * 2);
    v1309.save();
    v1309.translate(p917 * 45, p917 * 45);
    v1309.rotate(0);
    f87(v1309, p917 * -26, p917 * -9, p917 * 52, p917 * 18, p917 * 30);
    v1309.restore();
    f90(v1309, p919[4], p919[4], p917 * 2);
    f93(v1309, p917 * 45, p917 * 29, p917 * 7);
    f90(v1309, p919[5]);
    f93(v1309, p917 * 45, p917 * 61, p917 * 7);
    f90(v1309, p919[5]);
    f93(v1309, p917 * 28, p917 * 45, p917 * 7);
    f90(v1309, p919[5]);
    f93(v1309, p917 * 62, p917 * 45, p917 * 7);
    f90(v1309, p919[5]);
    return v1308;
  }
  function f209(p920, p921, p922) {
    var v1310 = document.createElement("canvas");
    var v1311 = v1310.getContext("2d");
    v1310.width = p920 * 170;
    v1310.height = p920 * 170;
    v1311.globalAlpha = p921 ? 0.5 : 1;
    v1311.translate(0, p920 * 3);
    v1311.save();
    v1311.translate(p920 * 85, p920 * 95);
    v1311.rotate(1.4);
    f88(v1311, 7, p920 * 60, p920 * 10);
    v1311.restore();
    f90(v1311, p922[0]);
    v1311.globalAlpha = 1;
    v1311.translate(p920 * 85, p920 * 82);
    for (var v1312 = 0; v1312 < 10; v1312++) {
      v1311.rotate(Math.PI / 5);
      v1311.save();
      v1311.translate(p920 * 65, 0);
      f88(v1311, 3, p920 * 21, p920 * 4);
      f90(v1311, p922[1], p922[2], p920 * 4);
      v1311.restore();
    }
    v1311.save();
    v1311.translate(p920 * 0, p920 * 0);
    v1311.rotate(1);
    f88(v1311, 8, p920 * 60, p920 * 10);
    f90(v1311, p922[3], p922[4], p920 * 4);
    v1311.rotate(0.56);
    f88(v1311, 8, p920 * 40, p920 * 10);
    f90(v1311, p922[5], p922[6], p920 * 4);
    v1311.rotate(0.28);
    f88(v1311, 8, p920 * 28, p920 * 8);
    f90(v1311, p922[7]);
    v1311.restore();
    return v1310;
  }
  function f210(p923, p924, p925) {
    var v1313 = document.createElement("canvas");
    var v1314 = v1313.getContext("2d");
    v1313.width = p923 * 158;
    v1313.height = p923 * 201;
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 96.5, p923 * 76.421875);
    v1314.bezierCurveTo(p923 * 100.5, p923 * 64.421875, p923 * 103.5, p923 * 62.421875, p923 * 110.5, p923 * 65.421875);
    v1314.bezierCurveTo(p923 * 116.5, p923 * 66.421875, p923 * 117.5, p923 * 67.421875, p923 * 112.5, p923 * 73.421875);
    v1314.bezierCurveTo(p923 * 107, p923 * 79.921875, p923 * 107, p923 * 79.921875, p923 * 101.5, p923 * 86.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 61.5, p923 * 78.421875);
    v1314.bezierCurveTo(p923 * 57.5, p923 * 73.421875, p923 * 51.5, p923 * 66.421875, p923 * 45.5, p923 * 68.421875);
    v1314.bezierCurveTo(p923 * 32.5, p923 * 73.421875, p923 * 38.5, p923 * 75.421875, p923 * 46.5, p923 * 81.421875);
    v1314.bezierCurveTo(p923 * 51.5, p923 * 84.921875, p923 * 51.5, p923 * 84.921875, p923 * 56.5, p923 * 88.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 116.5, p923 * 127.421875);
    v1314.bezierCurveTo(p923 * 124.5, p923 * 108.421875, p923 * 129.5, p923 * 104.421875, p923 * 141.5, p923 * 107.421875);
    v1314.bezierCurveTo(p923 * 156.5, p923 * 112.421875, p923 * 153.5, p923 * 113.421875, p923 * 132.5, p923 * 134.421875);
    v1314.bezierCurveTo(p923 * 123.5, p923 * 141.921875, p923 * 123.5, p923 * 141.921875, p923 * 114.5, p923 * 149.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 41.5, p923 * 134.421875);
    v1314.bezierCurveTo(p923 * 30.5, p923 * 119.421875, p923 * 25.5, p923 * 111.421875, p923 * 12.5, p923 * 115.421875);
    v1314.bezierCurveTo(p923 * 4.5, p923 * 120.421875, p923 * 4.5, p923 * 121.421875, p923 * 26.5, p923 * 142.421875);
    v1314.bezierCurveTo(p923 * 35, p923 * 149.921875, p923 * 35, p923 * 149.921875, p923 * 43.5, p923 * 157.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 78.5, p923 * 51.921875);
    v1314.bezierCurveTo(p923 * 99.5, p923 * 75.921875, p923 * 110.5, p923 * 96.921875, p923 * 118.5, p923 * 120.921875);
    v1314.bezierCurveTo(p923 * 121.5, p923 * 140.921875, p923 * 107.5, p923 * 179.921875, p923 * 75.5, p923 * 183.921875);
    v1314.bezierCurveTo(p923 * 30.5, p923 * 169.921875, p923 * 37.5, p923 * 131.921875, p923 * 34.5, p923 * 120.921875);
    v1314.bezierCurveTo(p923 * 41.5, p923 * 89.921875, p923 * 61.5, p923 * 67.921875, p923 * 78.5, p923 * 51.921875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 72.5, p923 * 72.421875);
    v1314.bezierCurveTo(p923 * 76.5, p923 * 79.421875, p923 * 79.5, p923 * 80.421875, p923 * 83.5, p923 * 73.421875);
    v1314.bezierCurveTo(p923 * 80.5, p923 * 96.921875, p923 * 79.5, p923 * 114.421875, p923 * 77.5, p923 * 120.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 42.5, p923 * 163.421875);
    v1314.bezierCurveTo(p923 * 62.5, p923 * 185.421875, p923 * 86.5, p923 * 186.421875, p923 * 111.5, p923 * 165.421875);
    v1314.bezierCurveTo(p923 * 107.5, p923 * 176.421875, p923 * 95.5, p923 * 187.421875, p923 * 75.5, p923 * 188.421875);
    v1314.bezierCurveTo(p923 * 53.5, p923 * 188.421875, p923 * 43.5, p923 * 171.421875, p923 * 42.5, p923 * 164.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 8);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 79.5, p923 * 61.421875);
    v1314.bezierCurveTo(p923 * 88.5, p923 * 31.421875, p923 * 81.5, p923 * 16.421875, p923 * 75.5, p923 * 7.421875);
    v1314.bezierCurveTo(p923 * 77.5, p923 * 28.421875, p923 * 77.5, p923 * 37.421875, p923 * 68.5, p923 * 42.421875);
    v1314.bezierCurveTo(p923 * 79.5, p923 * 57.421875, p923 * 79.5, p923 * 58.421875, p923 * 80.5, p923 * 61.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 72.5, p923 * 72.421875);
    v1314.bezierCurveTo(p923 * 76.5, p923 * 79.421875, p923 * 79.5, p923 * 80.421875, p923 * 83.5, p923 * 73.421875);
    v1314.bezierCurveTo(p923 * 80.5, p923 * 96.921875, p923 * 79.5, p923 * 114.421875, p923 * 77.5, p923 * 120.421875);
    v1314.closePath();
    f90(v1314, p925[8], p925[8], p923 * 10);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 96.5, p923 * 76.421875);
    v1314.bezierCurveTo(p923 * 100.5, p923 * 64.421875, p923 * 103.5, p923 * 62.421875, p923 * 110.5, p923 * 65.421875);
    v1314.bezierCurveTo(p923 * 116.5, p923 * 66.421875, p923 * 117.5, p923 * 67.421875, p923 * 112.5, p923 * 73.421875);
    v1314.bezierCurveTo(p923 * 107, p923 * 79.921875, p923 * 107, p923 * 79.921875, p923 * 101.5, p923 * 86.421875);
    v1314.closePath();
    f90(v1314, p925[1], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 61.5, p923 * 78.421875);
    v1314.bezierCurveTo(p923 * 57.5, p923 * 73.421875, p923 * 51.5, p923 * 66.421875, p923 * 45.5, p923 * 68.421875);
    v1314.bezierCurveTo(p923 * 32.5, p923 * 73.421875, p923 * 38.5, p923 * 75.421875, p923 * 46.5, p923 * 81.421875);
    v1314.bezierCurveTo(p923 * 51.5, p923 * 84.921875, p923 * 51.5, p923 * 84.921875, p923 * 56.5, p923 * 88.421875);
    v1314.closePath();
    f90(v1314, p925[1], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 116.5, p923 * 127.421875);
    v1314.bezierCurveTo(p923 * 124.5, p923 * 108.421875, p923 * 129.5, p923 * 104.421875, p923 * 141.5, p923 * 107.421875);
    v1314.bezierCurveTo(p923 * 156.5, p923 * 112.421875, p923 * 153.5, p923 * 113.421875, p923 * 132.5, p923 * 134.421875);
    v1314.bezierCurveTo(p923 * 123.5, p923 * 141.921875, p923 * 123.5, p923 * 141.921875, p923 * 114.5, p923 * 149.421875);
    v1314.closePath();
    f90(v1314, p925[1], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 41.5, p923 * 134.421875);
    v1314.bezierCurveTo(p923 * 30.5, p923 * 119.421875, p923 * 25.5, p923 * 111.421875, p923 * 12.5, p923 * 115.421875);
    v1314.bezierCurveTo(p923 * 4.5, p923 * 120.421875, p923 * 4.5, p923 * 121.421875, p923 * 26.5, p923 * 142.421875);
    v1314.bezierCurveTo(p923 * 35, p923 * 149.921875, p923 * 35, p923 * 149.921875, p923 * 43.5, p923 * 157.421875);
    v1314.closePath();
    f90(v1314, p925[1], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 78.5, p923 * 51.921875);
    v1314.bezierCurveTo(p923 * 99.5, p923 * 75.921875, p923 * 110.5, p923 * 96.921875, p923 * 118.5, p923 * 120.921875);
    v1314.bezierCurveTo(p923 * 121.5, p923 * 140.921875, p923 * 107.5, p923 * 179.921875, p923 * 75.5, p923 * 183.921875);
    v1314.bezierCurveTo(p923 * 30.5, p923 * 169.921875, p923 * 37.5, p923 * 131.921875, p923 * 34.5, p923 * 120.921875);
    v1314.bezierCurveTo(p923 * 41.5, p923 * 89.921875, p923 * 61.5, p923 * 67.921875, p923 * 78.5, p923 * 51.921875);
    v1314.closePath();
    f90(v1314, p925[3], p925[2], p923 * 4);
    f93(v1314, p923 * 108.5, p923 * 148.421875, p923 * 9);
    f90(v1314, p925[5]);
    f93(v1314, p923 * 106.5, p923 * 144.421875, p923 * 3);
    f90(v1314, p925[6]);
    f93(v1314, p923 * 46.5, p923 * 148.421875, p923 * 9);
    f90(v1314, p925[5]);
    f93(v1314, p923 * 44.5, p923 * 144.421875, p923 * 3);
    f90(v1314, p925[6]);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 116.5, p923 * 114.421875);
    v1314.bezierCurveTo(p923 * 121.5, p923 * 137.421875, p923 * 118.5, p923 * 133.421875, p923 * 108.5, p923 * 139.421875);
    v1314.bezierCurveTo(p923 * 94.5, p923 * 146.421875, p923 * 96.5, p923 * 148.421875, p923 * 95.5, p923 * 152.421875);
    f90(v1314, p925[3], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.translate(0, p923 * -2);
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 35.5, p923 * 131.421875);
    v1314.bezierCurveTo(p923 * 36.5, p923 * 140.421875, p923 * 39.5, p923 * 140.421875, p923 * 49.5, p923 * 143.421875);
    v1314.bezierCurveTo(p923 * 59.5, p923 * 149.421875, p923 * 57.5, p923 * 151.421875, p923 * 59.5, p923 * 155.421875);
    f90(v1314, p925[3], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 84.5, p923 * 57.421875);
    v1314.bezierCurveTo(p923 * 101.5, p923 * 120.421875, p923 * 92.5, p923 * 127.421875, p923 * 78.5, p923 * 134.421875);
    v1314.bezierCurveTo(p923 * 51.5, p923 * 131.421875, p923 * 63.5, p923 * 102.421875, p923 * 70.5, p923 * 59.421875);
    v1314.bezierCurveTo(p923 * 75, p923 * 55.421875, p923 * 78.5, p923 * 52.421875, p923 * 79.5, p923 * 51.421875);
    v1314.closePath();
    f90(v1314, p925[4]);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 79.5, p923 * 61.421875);
    v1314.bezierCurveTo(p923 * 88.5, p923 * 31.421875, p923 * 81.5, p923 * 16.421875, p923 * 75.5, p923 * 7.421875);
    v1314.bezierCurveTo(p923 * 77.5, p923 * 28.421875, p923 * 77.5, p923 * 37.421875, p923 * 68.5, p923 * 42.421875);
    v1314.bezierCurveTo(p923 * 79.5, p923 * 57.421875, p923 * 79.5, p923 * 58.421875, p923 * 80.5, p923 * 61.421875);
    v1314.closePath();
    f90(v1314, p925[3], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 72.5, p923 * 72.421875);
    v1314.bezierCurveTo(p923 * 76.5, p923 * 79.421875, p923 * 79.5, p923 * 80.421875, p923 * 83.5, p923 * 73.421875);
    v1314.bezierCurveTo(p923 * 80.5, p923 * 96.921875, p923 * 79.5, p923 * 114.421875, p923 * 77.5, p923 * 120.421875);
    v1314.closePath();
    f90(v1314, p925[3], p925[2], p923 * 4);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 87.5, p923 * 154.421875);
    v1314.bezierCurveTo(p923 * 93.5, p923 * 163.921875, p923 * 93.5, p923 * 163.921875, p923 * 99.5, p923 * 173.421875);
    v1314.bezierCurveTo(p923 * 95, p923 * 177.421875, p923 * 95, p923 * 177.421875, p923 * 90.5, p923 * 181.421875);
    v1314.bezierCurveTo(p923 * 89, p923 * 167.921875, p923 * 89, p923 * 167.921875, p923 * 87.5, p923 * 154.421875);
    v1314.closePath();
    f90(v1314, p925[6], p925[7], p923 * 2);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 81.5, p923 * 164.421875);
    v1314.bezierCurveTo(p923 * 84, p923 * 172.921875, p923 * 84, p923 * 172.921875, p923 * 86.5, p923 * 181.421875);
    v1314.bezierCurveTo(p923 * 82.5, p923 * 182.421875, p923 * 82.5, p923 * 182.421875, p923 * 78.5, p923 * 183.421875);
    v1314.closePath();
    f90(v1314, p925[6], p925[7], p923 * 2);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 72.5, p923 * 164.421875);
    v1314.bezierCurveTo(p923 * 73.5, p923 * 173.921875, p923 * 73.5, p923 * 173.921875, p923 * 74.5, p923 * 183.421875);
    v1314.bezierCurveTo(p923 * 70.5, p923 * 182.921875, p923 * 70.5, p923 * 182.921875, p923 * 66.5, p923 * 182.421875);
    v1314.closePath();
    f90(v1314, p925[6], p925[7], p923 * 2);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 65.5, p923 * 156.421875);
    v1314.bezierCurveTo(p923 * 65, p923 * 168.421875, p923 * 65, p923 * 168.421875, p923 * 64.5, p923 * 180.421875);
    v1314.bezierCurveTo(p923 * 58.5, p923 * 177.421875, p923 * 58.5, p923 * 177.421875, p923 * 52.5, p923 * 174.421875);
    v1314.closePath();
    f90(v1314, p925[6], p925[7], p923 * 2);
    v1314.beginPath();
    v1314.lineCap = "round";
    v1314.lineJoin = "round";
    v1314.moveTo(p923 * 42.5, p923 * 163.421875);
    v1314.bezierCurveTo(p923 * 62.5, p923 * 185.421875, p923 * 86.5, p923 * 186.421875, p923 * 111.5, p923 * 165.421875);
    v1314.bezierCurveTo(p923 * 107.5, p923 * 176.421875, p923 * 95.5, p923 * 187.421875, p923 * 75.5, p923 * 188.421875);
    v1314.bezierCurveTo(p923 * 53.5, p923 * 188.421875, p923 * 43.5, p923 * 171.421875, p923 * 42.5, p923 * 164.421875);
    v1314.closePath();
    f90(v1314, p925[3], p925[2], p923 * 4);
    return v1313;
  }
  function f211(p926, p927, p928) {
    var v1315 = document.createElement("canvas");
    var v1316 = v1315.getContext("2d");
    v1315.width = p926 * 120;
    v1315.height = p926 * 100;
    f87(v1316, p926 * 10, p926 * 10, p926 * 95, p926 * 80, p926 * 10);
    f90(v1316, p927[2]);
    f87(v1316, p926 * 10, p926 * 5, p926 * 95, p926 * 80, p926 * 10);
    f90(v1316, p927[3], p927[4], p926 * 4);
    if (p928 == 0) {
      var vRm = f263(p926 * 0.75, p927, 0);
      v1316.drawImage(vRm, p926 * 22, p926 * 18);
    } else if (p928 == 1) {
      vRm = f263(p926 * 0.75, p927, 1);
      v1316.drawImage(vRm, p926 * 22, p926 * 18);
    }
    return v1315;
  }
  function f212(p929, p930, p931) {
    var v1317 = document.createElement("canvas");
    var v1318 = v1317.getContext("2d");
    v1317.width = p929 * 450;
    v1317.height = p929 * 260;
    v1318.translate(p929 * 10, p929 * 10);
    if (p931 == 1) {
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 9, p929 * 5);
      v1318.bezierCurveTo(p929 * 381, p929 * 2, p929 * 197, p929 * 4.5, p929 * 385, p929 * 4);
      v1318.bezierCurveTo(p929 * 397, p929 * 4, p929 * 401, p929 * 4, p929 * 399, p929 * 23);
      v1318.bezierCurveTo(p929 * 367, p929 * 27, p929 * 367, p929 * 27, p929 * 335, p929 * 31);
      v1318.bezierCurveTo(p929 * 366.5, p929 * 33.5, p929 * 366.5, p929 * 33.5, p929 * 398, p929 * 36);
      v1318.bezierCurveTo(p929 * 398, p929 * 41.5, p929 * 398, p929 * 41.5, p929 * 398, p929 * 47);
      v1318.bezierCurveTo(p929 * 398, p929 * 56, p929 * 399, p929 * 56, p929 * 386, p929 * 56);
      v1318.bezierCurveTo(p929 * 200.5, p929 * 56.5, p929 * 200.5, p929 * 56.5, p929 * 15, p929 * 57);
      v1318.bezierCurveTo(p929 * 2, p929 * 55, p929 * 4, p929 * 52, p929 * 4, p929 * 43);
      v1318.bezierCurveTo(p929 * 4, p929 * 30.5, p929 * 4, p929 * 30.5, p929 * 4, p929 * 18);
      v1318.bezierCurveTo(p929 * 16, p929 * 18.5, p929 * 16, p929 * 18.5, p929 * 28, p929 * 19);
      v1318.bezierCurveTo(p929 * 18.5, p929 * 12, p929 * 18.5, p929 * 12, p929 * 9, p929 * 5);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 5, p929 * 70);
      v1318.bezierCurveTo(p929 * 5, p929 * 58, p929 * 5, p929 * 55, p929 * 17, p929 * 57);
      v1318.bezierCurveTo(p929 * 203, p929 * 57, p929 * 203, p929 * 57, p929 * 389, p929 * 57);
      v1318.bezierCurveTo(p929 * 400, p929 * 57, p929 * 400, p929 * 59, p929 * 400, p929 * 69);
      v1318.bezierCurveTo(p929 * 400.5, p929 * 83.5, p929 * 400.5, p929 * 83.5, p929 * 401, p929 * 98);
      v1318.bezierCurveTo(p929 * 402, p929 * 108, p929 * 401, p929 * 108, p929 * 388, p929 * 108);
      v1318.bezierCurveTo(p929 * 201.5, p929 * 108, p929 * 201.5, p929 * 108, p929 * 15, p929 * 108);
      v1318.bezierCurveTo(p929 * 1, p929 * 106, p929 * 5, p929 * 106, p929 * 5, p929 * 87);
      v1318.bezierCurveTo(p929 * 33, p929 * 84.5, p929 * 33, p929 * 84.5, p929 * 61, p929 * 82);
      v1318.bezierCurveTo(p929 * 33.5, p929 * 76.5, p929 * 33.5, p929 * 76.5, p929 * 6, p929 * 71);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 19, p929 * 158);
      v1318.bezierCurveTo(p929 * 2, p929 * 159, p929 * 4, p929 * 156, p929 * 5, p929 * 118);
      v1318.bezierCurveTo(p929 * 4, p929 * 110, p929 * 6, p929 * 107, p929 * 26, p929 * 109);
      v1318.bezierCurveTo(p929 * 206.5, p929 * 109, p929 * 206.5, p929 * 109, p929 * 387, p929 * 109);
      v1318.bezierCurveTo(p929 * 400, p929 * 108, p929 * 400, p929 * 108, p929 * 398, p929 * 127);
      v1318.bezierCurveTo(p929 * 384.5, p929 * 130, p929 * 384.5, p929 * 130, p929 * 371, p929 * 133);
      v1318.bezierCurveTo(p929 * 385.5, p929 * 138, p929 * 385.5, p929 * 138, p929 * 400, p929 * 143);
      v1318.bezierCurveTo(p929 * 402, p929 * 156, p929 * 402, p929 * 162, p929 * 385, p929 * 160);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 4, p929 * 183);
      v1318.bezierCurveTo(p929 * 1, p929 * 163, p929 * 4, p929 * 158, p929 * 28, p929 * 161);
      v1318.bezierCurveTo(p929 * 207.5, p929 * 161, p929 * 207.5, p929 * 161, p929 * 387, p929 * 161);
      v1318.bezierCurveTo(p929 * 401, p929 * 159, p929 * 400, p929 * 164, p929 * 400, p929 * 177);
      v1318.bezierCurveTo(p929 * 364.5, p929 * 184, p929 * 364.5, p929 * 184, p929 * 329, p929 * 191);
      v1318.bezierCurveTo(p929 * 364.5, p929 * 192.5, p929 * 364.5, p929 * 192.5, p929 * 400, p929 * 194);
      v1318.bezierCurveTo(p929 * 403, p929 * 209, p929 * 401, p929 * 214, p929 * 385, p929 * 213);
      v1318.bezierCurveTo(p929 * 201.5, p929 * 213, p929 * 201.5, p929 * 213, p929 * 18, p929 * 213);
      v1318.bezierCurveTo(p929 * 3, p929 * 213, p929 * 2, p929 * 213, p929 * 4, p929 * 198);
      v1318.bezierCurveTo(p929 * 12.5, p929 * 193, p929 * 12.5, p929 * 193, p929 * 21, p929 * 188);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 41, p929 * 30, p929 * 14.7648230602334);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 369, p929 * 30, p929 * 15.556349186104045);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 364, p929 * 190, p929 * 15.620499351813308);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 41, p929 * 186, p929 * 15.556349186104045);
      f90(v1318, p930[3], p930[3], p929 * 32);
    } else if (p931 == 2) {
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 9, p929 * 5);
      v1318.bezierCurveTo(p929 * 381, p929 * 2, p929 * 197, p929 * 4.5, p929 * 385, p929 * 4);
      v1318.bezierCurveTo(p929 * 397, p929 * 4, p929 * 401, p929 * 4, p929 * 399, p929 * 23);
      v1318.bezierCurveTo(p929 * 367, p929 * 27, p929 * 367, p929 * 27, p929 * 335, p929 * 31);
      v1318.bezierCurveTo(p929 * 366.5, p929 * 33.5, p929 * 366.5, p929 * 33.5, p929 * 398, p929 * 36);
      v1318.bezierCurveTo(p929 * 398, p929 * 41.5, p929 * 398, p929 * 41.5, p929 * 398, p929 * 47);
      v1318.bezierCurveTo(p929 * 398, p929 * 56, p929 * 399, p929 * 56, p929 * 386, p929 * 56);
      v1318.bezierCurveTo(p929 * 200.5, p929 * 56.5, p929 * 200.5, p929 * 56.5, p929 * 15, p929 * 57);
      v1318.bezierCurveTo(p929 * 2, p929 * 55, p929 * 4, p929 * 52, p929 * 4, p929 * 43);
      v1318.bezierCurveTo(p929 * 4, p929 * 30.5, p929 * 4, p929 * 30.5, p929 * 4, p929 * 18);
      v1318.bezierCurveTo(p929 * 16, p929 * 18.5, p929 * 16, p929 * 18.5, p929 * 28, p929 * 19);
      v1318.bezierCurveTo(p929 * 18.5, p929 * 12, p929 * 18.5, p929 * 12, p929 * 9, p929 * 5);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 5, p929 * 70);
      v1318.bezierCurveTo(p929 * 5, p929 * 58, p929 * 5, p929 * 55, p929 * 17, p929 * 57);
      v1318.bezierCurveTo(p929 * 203, p929 * 57, p929 * 203, p929 * 57, p929 * 389, p929 * 57);
      v1318.bezierCurveTo(p929 * 400, p929 * 57, p929 * 400, p929 * 59, p929 * 400, p929 * 69);
      v1318.bezierCurveTo(p929 * 400.5, p929 * 83.5, p929 * 400.5, p929 * 83.5, p929 * 401, p929 * 98);
      v1318.bezierCurveTo(p929 * 402, p929 * 108, p929 * 401, p929 * 108, p929 * 388, p929 * 108);
      v1318.bezierCurveTo(p929 * 201.5, p929 * 108, p929 * 201.5, p929 * 108, p929 * 15, p929 * 108);
      v1318.bezierCurveTo(p929 * 1, p929 * 106, p929 * 5, p929 * 106, p929 * 5, p929 * 87);
      v1318.bezierCurveTo(p929 * 33, p929 * 84.5, p929 * 33, p929 * 84.5, p929 * 61, p929 * 82);
      v1318.bezierCurveTo(p929 * 33.5, p929 * 76.5, p929 * 33.5, p929 * 76.5, p929 * 6, p929 * 71);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 19, p929 * 158);
      v1318.bezierCurveTo(p929 * 2, p929 * 159, p929 * 4, p929 * 156, p929 * 5, p929 * 118);
      v1318.bezierCurveTo(p929 * 4, p929 * 110, p929 * 6, p929 * 107, p929 * 26, p929 * 109);
      v1318.bezierCurveTo(p929 * 206.5, p929 * 109, p929 * 206.5, p929 * 109, p929 * 387, p929 * 109);
      v1318.bezierCurveTo(p929 * 400, p929 * 108, p929 * 400, p929 * 108, p929 * 398, p929 * 127);
      v1318.bezierCurveTo(p929 * 384.5, p929 * 130, p929 * 384.5, p929 * 130, p929 * 371, p929 * 133);
      v1318.bezierCurveTo(p929 * 385.5, p929 * 138, p929 * 385.5, p929 * 138, p929 * 400, p929 * 143);
      v1318.bezierCurveTo(p929 * 402, p929 * 156, p929 * 402, p929 * 162, p929 * 385, p929 * 160);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p929 * 4, p929 * 183);
      v1318.bezierCurveTo(p929 * 1, p929 * 163, p929 * 4, p929 * 158, p929 * 28, p929 * 161);
      v1318.bezierCurveTo(p929 * 207.5, p929 * 161, p929 * 207.5, p929 * 161, p929 * 387, p929 * 161);
      v1318.bezierCurveTo(p929 * 401, p929 * 159, p929 * 400, p929 * 164, p929 * 400, p929 * 177);
      v1318.bezierCurveTo(p929 * 364.5, p929 * 184, p929 * 364.5, p929 * 184, p929 * 329, p929 * 191);
      v1318.bezierCurveTo(p929 * 364.5, p929 * 192.5, p929 * 364.5, p929 * 192.5, p929 * 400, p929 * 194);
      v1318.bezierCurveTo(p929 * 403, p929 * 209, p929 * 401, p929 * 214, p929 * 385, p929 * 213);
      v1318.bezierCurveTo(p929 * 201.5, p929 * 213, p929 * 201.5, p929 * 213, p929 * 18, p929 * 213);
      v1318.bezierCurveTo(p929 * 3, p929 * 213, p929 * 2, p929 * 213, p929 * 4, p929 * 198);
      v1318.bezierCurveTo(p929 * 12.5, p929 * 193, p929 * 12.5, p929 * 193, p929 * 21, p929 * 188);
      v1318.closePath();
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 41, p929 * 30, p929 * 14.7648230602334);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 369, p929 * 30, p929 * 15.556349186104045);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 364, p929 * 190, p929 * 15.620499351813308);
      f90(v1318, p930[3], p930[3], p929 * 32);
      f93(v1318, p929 * 41, p929 * 186, p929 * 15.556349186104045);
      f90(v1318, p930[3], p930[3], p929 * 32);
    }
    v1318.beginPath();
    v1318.lineCap = "round";
    v1318.lineJoin = "round";
    v1318.moveTo(p929 * 9, p929 * 5);
    v1318.bezierCurveTo(p929 * 381, p929 * 2, p929 * 197, p929 * 4.5, p929 * 385, p929 * 4);
    v1318.bezierCurveTo(p929 * 397, p929 * 4, p929 * 401, p929 * 4, p929 * 399, p929 * 23);
    v1318.bezierCurveTo(p929 * 367, p929 * 27, p929 * 367, p929 * 27, p929 * 335, p929 * 31);
    v1318.bezierCurveTo(p929 * 366.5, p929 * 33.5, p929 * 366.5, p929 * 33.5, p929 * 398, p929 * 36);
    v1318.bezierCurveTo(p929 * 398, p929 * 41.5, p929 * 398, p929 * 41.5, p929 * 398, p929 * 47);
    v1318.bezierCurveTo(p929 * 398, p929 * 56, p929 * 399, p929 * 56, p929 * 386, p929 * 56);
    v1318.bezierCurveTo(p929 * 200.5, p929 * 56.5, p929 * 200.5, p929 * 56.5, p929 * 15, p929 * 57);
    v1318.bezierCurveTo(p929 * 2, p929 * 55, p929 * 4, p929 * 52, p929 * 4, p929 * 43);
    v1318.bezierCurveTo(p929 * 4, p929 * 30.5, p929 * 4, p929 * 30.5, p929 * 4, p929 * 18);
    v1318.bezierCurveTo(p929 * 16, p929 * 18.5, p929 * 16, p929 * 18.5, p929 * 28, p929 * 19);
    v1318.bezierCurveTo(p929 * 18.5, p929 * 12, p929 * 18.5, p929 * 12, p929 * 9, p929 * 5);
    v1318.closePath();
    f90(v1318, p930[1], p930[0], p929 * 12);
    v1318.beginPath();
    v1318.lineCap = "round";
    v1318.lineJoin = "round";
    v1318.moveTo(p929 * 5, p929 * 70);
    v1318.bezierCurveTo(p929 * 5, p929 * 58, p929 * 5, p929 * 55, p929 * 17, p929 * 57);
    v1318.bezierCurveTo(p929 * 203, p929 * 57, p929 * 203, p929 * 57, p929 * 389, p929 * 57);
    v1318.bezierCurveTo(p929 * 400, p929 * 57, p929 * 400, p929 * 59, p929 * 400, p929 * 69);
    v1318.bezierCurveTo(p929 * 400.5, p929 * 83.5, p929 * 400.5, p929 * 83.5, p929 * 401, p929 * 98);
    v1318.bezierCurveTo(p929 * 402, p929 * 108, p929 * 401, p929 * 108, p929 * 388, p929 * 108);
    v1318.bezierCurveTo(p929 * 201.5, p929 * 108, p929 * 201.5, p929 * 108, p929 * 15, p929 * 108);
    v1318.bezierCurveTo(p929 * 1, p929 * 106, p929 * 5, p929 * 106, p929 * 5, p929 * 87);
    v1318.bezierCurveTo(p929 * 33, p929 * 84.5, p929 * 33, p929 * 84.5, p929 * 61, p929 * 82);
    v1318.bezierCurveTo(p929 * 33.5, p929 * 76.5, p929 * 33.5, p929 * 76.5, p929 * 6, p929 * 71);
    v1318.closePath();
    f90(v1318, p930[2], p930[0], p929 * 12);
    v1318.beginPath();
    v1318.lineCap = "round";
    v1318.lineJoin = "round";
    v1318.moveTo(p929 * 19, p929 * 158);
    v1318.bezierCurveTo(p929 * 2, p929 * 159, p929 * 4, p929 * 156, p929 * 5, p929 * 118);
    v1318.bezierCurveTo(p929 * 4, p929 * 110, p929 * 6, p929 * 107, p929 * 26, p929 * 109);
    v1318.bezierCurveTo(p929 * 206.5, p929 * 109, p929 * 206.5, p929 * 109, p929 * 387, p929 * 109);
    v1318.bezierCurveTo(p929 * 400, p929 * 108, p929 * 400, p929 * 108, p929 * 398, p929 * 127);
    v1318.bezierCurveTo(p929 * 384.5, p929 * 130, p929 * 384.5, p929 * 130, p929 * 371, p929 * 133);
    v1318.bezierCurveTo(p929 * 385.5, p929 * 138, p929 * 385.5, p929 * 138, p929 * 400, p929 * 143);
    v1318.bezierCurveTo(p929 * 402, p929 * 156, p929 * 402, p929 * 162, p929 * 385, p929 * 160);
    v1318.closePath();
    f90(v1318, p930[1], p930[0], p929 * 12);
    v1318.beginPath();
    v1318.lineCap = "round";
    v1318.lineJoin = "round";
    v1318.moveTo(p929 * 4, p929 * 183);
    v1318.bezierCurveTo(p929 * 1, p929 * 163, p929 * 4, p929 * 158, p929 * 28, p929 * 161);
    v1318.bezierCurveTo(p929 * 207.5, p929 * 161, p929 * 207.5, p929 * 161, p929 * 387, p929 * 161);
    v1318.bezierCurveTo(p929 * 401, p929 * 159, p929 * 400, p929 * 164, p929 * 400, p929 * 177);
    v1318.bezierCurveTo(p929 * 364.5, p929 * 184, p929 * 364.5, p929 * 184, p929 * 329, p929 * 191);
    v1318.bezierCurveTo(p929 * 364.5, p929 * 192.5, p929 * 364.5, p929 * 192.5, p929 * 400, p929 * 194);
    v1318.bezierCurveTo(p929 * 403, p929 * 209, p929 * 401, p929 * 214, p929 * 385, p929 * 213);
    v1318.bezierCurveTo(p929 * 201.5, p929 * 213, p929 * 201.5, p929 * 213, p929 * 18, p929 * 213);
    v1318.bezierCurveTo(p929 * 3, p929 * 213, p929 * 2, p929 * 213, p929 * 4, p929 * 198);
    v1318.bezierCurveTo(p929 * 12.5, p929 * 193, p929 * 12.5, p929 * 193, p929 * 21, p929 * 188);
    v1318.closePath();
    f90(v1318, p930[2], p930[0], p929 * 12);
    f93(v1318, p929 * 41, p929 * 30, p929 * 14.7648230602334);
    f90(v1318, p930[2], p930[0], p929 * 12);
    f93(v1318, p929 * 369, p929 * 30, p929 * 15.556349186104045);
    f90(v1318, p930[2], p930[0], p929 * 12);
    f93(v1318, p929 * 364, p929 * 190, p929 * 15.620499351813308);
    f90(v1318, p930[2], p930[0], p929 * 12);
    f93(v1318, p929 * 41, p929 * 186, p929 * 15.556349186104045);
    f90(v1318, p930[2], p930[0], p929 * 12);
    return v1317;
  }
  function f213(p932, p933, p934) {
    var v1319 = document.createElement("canvas");
    var v1320 = v1319.getContext("2d");
    v1319.width = p932 * 145;
    v1319.height = p932 * 120;
    v1320.beginPath();
    v1320.scale(0.6, 0.6);
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.translate(p932 * 18, p932 * -8);
    v1320.moveTo(p932 * 101, p932 * 72);
    v1320.bezierCurveTo(p932 * 144, p932 * 69, p932 * 149, p932 * 58, p932 * 162, p932 * 49);
    v1320.bezierCurveTo(p932 * 174, p932 * 31, p932 * 173, p932 * 38, p932 * 172, p932 * 45);
    v1320.bezierCurveTo(p932 * 168, p932 * 73, p932 * 158, p932 * 75, p932 * 152, p932 * 78);
    v1320.bezierCurveTo(p932 * 106, p932 * 89, p932 * 107, p932 * 91, p932 * 107, p932 * 94);
    v1320.bezierCurveTo(p932 * 107, p932 * 100, p932 * 107, p932 * 107, p932 * 107, p932 * 107);
    v1320.bezierCurveTo(p932 * 99, p932 * 112, p932 * 98, p932 * 110, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 94, p932 * 107, p932 * 93, p932 * 107, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 93, p932 * 100, p932 * 93, p932 * 100, p932 * 92, p932 * 94);
    v1320.bezierCurveTo(p932 * 92, p932 * 89, p932 * 90, p932 * 90, p932 * 73, p932 * 86);
    v1320.bezierCurveTo(p932 * 45, p932 * 81, p932 * 40, p932 * 77, p932 * 35, p932 * 68);
    v1320.bezierCurveTo(p932 * 23, p932 * 36, p932 * 28, p932 * 34, p932 * 36, p932 * 46);
    v1320.bezierCurveTo(p932 * 45, p932 * 58, p932 * 83, p932 * 72, p932 * 98, p932 * 72);
    v1320.closePath();
    f90(v1320, p934[4], p934[5], p932 * 4);
    v1320.beginPath();
    v1320.scale(1.1, 1.1);
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.translate(p932 * -9, p932 * 4);
    v1320.moveTo(p932 * 101, p932 * 72);
    v1320.bezierCurveTo(p932 * 144, p932 * 69, p932 * 149, p932 * 58, p932 * 162, p932 * 49);
    v1320.bezierCurveTo(p932 * 174, p932 * 31, p932 * 173, p932 * 38, p932 * 172, p932 * 45);
    v1320.bezierCurveTo(p932 * 168, p932 * 73, p932 * 158, p932 * 75, p932 * 152, p932 * 78);
    v1320.bezierCurveTo(p932 * 106, p932 * 89, p932 * 107, p932 * 91, p932 * 107, p932 * 94);
    v1320.bezierCurveTo(p932 * 107, p932 * 100, p932 * 107, p932 * 107, p932 * 107, p932 * 107);
    v1320.bezierCurveTo(p932 * 99, p932 * 112, p932 * 98, p932 * 110, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 94, p932 * 107, p932 * 93, p932 * 107, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 93, p932 * 100, p932 * 93, p932 * 100, p932 * 92, p932 * 94);
    v1320.bezierCurveTo(p932 * 92, p932 * 89, p932 * 90, p932 * 90, p932 * 73, p932 * 86);
    v1320.bezierCurveTo(p932 * 45, p932 * 81, p932 * 40, p932 * 77, p932 * 35, p932 * 68);
    v1320.bezierCurveTo(p932 * 23, p932 * 36, p932 * 28, p932 * 34, p932 * 36, p932 * 46);
    v1320.bezierCurveTo(p932 * 45, p932 * 58, p932 * 83, p932 * 72, p932 * 98, p932 * 72);
    v1320.closePath();
    f90(v1320, p934[4], p934[5], p932 * 4);
    v1320.scale(1.1, 1.1);
    v1320.translate(p932 * -9, p932 * 4);
    v1320.save();
    v1320.translate(p932 * 100, p932 * 73.06874084472656);
    v1320.rotate(0);
    f87(v1320, p932 * -61, p932 * -38.5, p932 * 122, p932 * 40, p932 * 20);
    v1320.restore();
    f90(v1320, p934[1], p934[2], p932 * 4);
    v1320.save();
    v1320.translate(p932 * 100, p932 * 71.36874389648438);
    v1320.rotate(0);
    f87(v1320, p932 * -60.5, p932 * -18, p932 * 121, p932 * 30, p932 * 20);
    v1320.restore();
    f90(v1320, p934[3], p934[2], p932 * 4);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 144, p932 * 80);
    v1320.bezierCurveTo(p932 * 152, p932 * 100, p932 * 152, p932 * 101, p932 * 153, p932 * 102);
    v1320.bezierCurveTo(p932 * 159, p932 * 100, p932 * 159, p932 * 100, p932 * 160, p932 * 100);
    v1320.bezierCurveTo(p932 * 161, p932 * 84, p932 * 161, p932 * 84, p932 * 162, p932 * 68);
    v1320.closePath();
    f90(v1320, p934[2]);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 57, p932 * 75);
    v1320.bezierCurveTo(p932 * 48, p932 * 101, p932 * 53, p932 * 89, p932 * 48, p932 * 102);
    v1320.bezierCurveTo(p932 * 44, p932 * 100, p932 * 44, p932 * 100, p932 * 39, p932 * 97);
    v1320.bezierCurveTo(p932 * 39, p932 * 83, p932 * 39, p932 * 83, p932 * 39, p932 * 69);
    v1320.closePath();
    f90(v1320, p934[2]);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 101, p932 * 72);
    v1320.bezierCurveTo(p932 * 144, p932 * 69, p932 * 149, p932 * 58, p932 * 162, p932 * 49);
    v1320.bezierCurveTo(p932 * 174, p932 * 31, p932 * 173, p932 * 38, p932 * 172, p932 * 45);
    v1320.bezierCurveTo(p932 * 168, p932 * 73, p932 * 158, p932 * 75, p932 * 152, p932 * 78);
    v1320.bezierCurveTo(p932 * 106, p932 * 89, p932 * 107, p932 * 91, p932 * 107, p932 * 94);
    v1320.bezierCurveTo(p932 * 107, p932 * 100, p932 * 107, p932 * 107, p932 * 107, p932 * 107);
    v1320.bezierCurveTo(p932 * 99, p932 * 112, p932 * 98, p932 * 110, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 94, p932 * 107, p932 * 93, p932 * 107, p932 * 93, p932 * 107);
    v1320.bezierCurveTo(p932 * 93, p932 * 100, p932 * 93, p932 * 100, p932 * 92, p932 * 94);
    v1320.bezierCurveTo(p932 * 92, p932 * 89, p932 * 90, p932 * 90, p932 * 73, p932 * 86);
    v1320.bezierCurveTo(p932 * 45, p932 * 81, p932 * 40, p932 * 77, p932 * 35, p932 * 68);
    v1320.bezierCurveTo(p932 * 23, p932 * 36, p932 * 28, p932 * 34, p932 * 36, p932 * 46);
    v1320.bezierCurveTo(p932 * 45, p932 * 58, p932 * 83, p932 * 72, p932 * 98, p932 * 72);
    v1320.closePath();
    f90(v1320, p934[4], p934[5], p932 * 4);
    v1320.translate(0, 0);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 115.5, p932 * 116.07290649414062);
    v1320.bezierCurveTo(p932 * 159.5, p932 * 99.07290649414062, p932 * 159.5, p932 * 98.07290649414062, p932 * 159.5, p932 * 98.07290649414062);
    v1320.bezierCurveTo(p932 * 155.5, p932 * 116.07290649414062, p932 * 159.5, p932 * 116.07290649414062, p932 * 159.5, p932 * 118.07290649414062);
    v1320.bezierCurveTo(p932 * 147.5, p932 * 130.07290649414062, p932 * 136.5, p932 * 132.07290649414062, p932 * 115.5, p932 * 138.07290649414062);
    v1320.closePath();
    f90(v1320, p934[3], p934[2], p932 * 4);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 39.5, p932 * 96.07290649414062);
    v1320.bezierCurveTo(p932 * 85.5, p932 * 114.07290649414062, p932 * 62.5, p932 * 105.57290649414062, p932 * 85.5, p932 * 115.07290649414062);
    v1320.bezierCurveTo(p932 * 85.5, p932 * 125.57290649414062, p932 * 85.5, p932 * 125.57290649414062, p932 * 85.5, p932 * 136.07290649414062);
    v1320.bezierCurveTo(p932 * 51.5, p932 * 129.07290649414062, p932 * 51.5, p932 * 125.07290649414062, p932 * 41.5, p932 * 118.07290649414062);
    v1320.bezierCurveTo(p932 * 44.5, p932 * 106.07290649414062, p932 * 42.5, p932 * 103.07290649414062, p932 * 40.5, p932 * 96.07290649414062);
    v1320.closePath();
    f90(v1320, p934[3], p934[2], p932 * 4);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 86, p932 * 80);
    v1320.bezierCurveTo(p932 * 97, p932 * 88, p932 * 106, p932 * 84, p932 * 112, p932 * 80);
    v1320.bezierCurveTo(p932 * 112, p932 * 62, p932 * 106, p932 * 59, p932 * 99, p932 * 54);
    v1320.bezierCurveTo(p932 * 86, p932 * 62, p932 * 86, p932 * 73, p932 * 86, p932 * 80);
    v1320.closePath();
    f90(v1320, p934[3], p934[2], p932 * 4);
    v1320.scale(0.5, 0.5);
    v1320.translate(p932 * 100, p932 * 71);
    v1320.beginPath();
    v1320.lineCap = "round";
    v1320.lineJoin = "round";
    v1320.moveTo(p932 * 86, p932 * 80);
    v1320.bezierCurveTo(p932 * 97, p932 * 88, p932 * 106, p932 * 84, p932 * 112, p932 * 80);
    v1320.bezierCurveTo(p932 * 112, p932 * 62, p932 * 106, p932 * 59, p932 * 99, p932 * 54);
    v1320.bezierCurveTo(p932 * 86, p932 * 62, p932 * 86, p932 * 73, p932 * 86, p932 * 80);
    v1320.closePath();
    f90(v1320, p934[6], p934[2], p932 * 4);
    return v1319;
  }
  function f214(p935, p936, p937) {
    var v1321 = document.createElement("canvas");
    var v1322 = v1321.getContext("2d");
    v1321.width = p935 * 90;
    v1321.height = p935 * 101;
    v1322.translate(p935 * 0, p935 * 5);
    if (v817 === 0) {
      v1322.globalAlpha = p936 ? 0.5 : 1;
      f93(v1322, p935 * 44, p935 * 55, p935 * 41);
      f90(v1322, p937[0]);
    }
    v1322.globalAlpha = 1;
    f93(v1322, p935 * 44, p935 * 45, p935 * 41);
    f90(v1322, p937[1], p937[2], p935 * 4);
    f93(v1322, p935 * 44, p935 * 45, p935 * 31);
    f90(v1322, p937[3]);
    v1322.save();
    v1322.translate(p935 * 45, p935 * 45);
    f87(v1322, p935 * -9, p935 * -25.5, p935 * 18, p935 * 51, p935 * 30);
    v1322.restore();
    f90(v1322, p937[4], p937[4], p935 * 2);
    v1322.save();
    v1322.translate(p935 * 45, p935 * 45);
    f87(v1322, p935 * -26, p935 * -9, p935 * 52, p935 * 18, p935 * 30);
    v1322.restore();
    f90(v1322, p937[4], p937[4], p935 * 2);
    f93(v1322, p935 * 45, p935 * 29, p935 * 7);
    f90(v1322, p937[5]);
    f93(v1322, p935 * 45, p935 * 61, p935 * 7);
    f90(v1322, p937[5]);
    f93(v1322, p935 * 28, p935 * 45, p935 * 7);
    f90(v1322, p937[5]);
    f93(v1322, p935 * 62, p935 * 45, p935 * 7);
    f90(v1322, p937[5]);
    return v1321;
  }
  function f215(p938, p939, p940) {
    var v1323 = document.createElement("canvas");
    var v1324 = v1323.getContext("2d");
    v1323.width = p938 * 100;
    v1323.height = p938 * 648;
    v1324.translate(p938 * 20, p938 * 20);
    v1324.globalAlpha = p939 ? 0.5 : 1;
    v1324.save();
    v1324.translate(p938 * 50.5, p938 * 349.5);
    f87(v1324, p938 * -13.5, p938 * -249.5, p938 * 27, p938 * 499, p938 * 10);
    v1324.restore();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 36, p938 * 538);
    v1324.bezierCurveTo(p938 * 49.5, p938 * 538, p938 * 49.5, p938 * 538, p938 * 63, p938 * 538);
    v1324.bezierCurveTo(p938 * 63.5, p938 * 568, p938 * 63.5, p938 * 568, p938 * 64, p938 * 598);
    v1324.bezierCurveTo(p938 * 50, p938 * 598, p938 * 50, p938 * 598, p938 * 36, p938 * 598);
    v1324.bezierCurveTo(p938 * 36, p938 * 568.5, p938 * 36, p938 * 568.5, p938 * 36, p938 * 539);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 36, p938 * 554);
    v1324.bezierCurveTo(p938 * 45, p938 * 561, p938 * 56, p938 * 558, p938 * 63, p938 * 554);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 32, p938 * 569);
    v1324.bezierCurveTo(p938 * 44, p938 * 576, p938 * 58, p938 * 574, p938 * 68, p938 * 569);
    v1324.bezierCurveTo(p938 * 68, p938 * 584, p938 * 68, p938 * 584, p938 * 68, p938 * 599);
    v1324.bezierCurveTo(p938 * 68, p938 * 608, p938 * 65, p938 * 618, p938 * 49, p938 * 617);
    v1324.bezierCurveTo(p938 * 34, p938 * 617, p938 * 32, p938 * 610, p938 * 32, p938 * 598);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 41, p938 * 581);
    v1324.bezierCurveTo(p938 * 48, p938 * 584, p938 * 55, p938 * 583, p938 * 60, p938 * 581);
    v1324.bezierCurveTo(p938 * 60, p938 * 589.5, p938 * 60, p938 * 589.5, p938 * 60, p938 * 598);
    v1324.bezierCurveTo(p938 * 60, p938 * 604, p938 * 59, p938 * 609, p938 * 48, p938 * 608);
    v1324.bezierCurveTo(p938 * 40, p938 * 607, p938 * 40, p938 * 606, p938 * 41, p938 * 581);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 31, p938 * 106);
    v1324.bezierCurveTo(p938 * 31, p938 * 124.5, p938 * 31, p938 * 124.5, p938 * 31, p938 * 143);
    v1324.bezierCurveTo(p938 * 31, p938 * 163, p938 * 38, p938 * 169, p938 * 48, p938 * 168);
    v1324.bezierCurveTo(p938 * 57, p938 * 168, p938 * 67, p938 * 165, p938 * 67, p938 * 148);
    v1324.bezierCurveTo(p938 * 67, p938 * 123.5, p938 * 67, p938 * 123.5, p938 * 67, p938 * 99);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 49, p938 * 27);
    v1324.bezierCurveTo(p938 * 64, p938 * 62.5, p938 * 64, p938 * 62.5, p938 * 79, p938 * 98);
    v1324.bezierCurveTo(p938 * 74, p938 * 113, p938 * 63, p938 * 121, p938 * 50, p938 * 122);
    v1324.bezierCurveTo(p938 * 35, p938 * 123, p938 * 22, p938 * 109, p938 * 20, p938 * 98);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 49, p938 * 43);
    v1324.bezierCurveTo(p938 * 61, p938 * 70, p938 * 61, p938 * 70, p938 * 73, p938 * 97);
    v1324.bezierCurveTo(p938 * 66, p938 * 116, p938 * 43, p938 * 122, p938 * 26, p938 * 99);
    v1324.closePath();
    f90(v1324, p940[0]);
    v1324.translate(p938 * -20, p938 * -20);
    v1324.globalAlpha = 1;
    v1324.save();
    v1324.translate(p938 * 50.5, p938 * 349.5);
    f87(v1324, p938 * -13.5, p938 * -249.5, p938 * 27, p938 * 499, p938 * 10);
    v1324.restore();
    f90(v1324, p940[1], p940[2], p938 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 36, p938 * 538);
    v1324.bezierCurveTo(p938 * 49.5, p938 * 538, p938 * 49.5, p938 * 538, p938 * 63, p938 * 538);
    v1324.bezierCurveTo(p938 * 63.5, p938 * 568, p938 * 63.5, p938 * 568, p938 * 64, p938 * 598);
    v1324.bezierCurveTo(p938 * 50, p938 * 598, p938 * 50, p938 * 598, p938 * 36, p938 * 598);
    v1324.bezierCurveTo(p938 * 36, p938 * 568.5, p938 * 36, p938 * 568.5, p938 * 36, p938 * 539);
    v1324.closePath();
    f90(v1324, p940[3], p940[4], p938 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 36, p938 * 554);
    v1324.bezierCurveTo(p938 * 45, p938 * 561, p938 * 56, p938 * 558, p938 * 63, p938 * 554);
    v1324.closePath();
    f90(v1324, undefined, p940[4], p938 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 32, p938 * 569);
    v1324.bezierCurveTo(p938 * 44, p938 * 576, p938 * 58, p938 * 574, p938 * 68, p938 * 569);
    v1324.bezierCurveTo(p938 * 68, p938 * 584, p938 * 68, p938 * 584, p938 * 68, p938 * 599);
    v1324.bezierCurveTo(p938 * 68, p938 * 608, p938 * 65, p938 * 618, p938 * 49, p938 * 617);
    v1324.bezierCurveTo(p938 * 34, p938 * 617, p938 * 32, p938 * 610, p938 * 32, p938 * 598);
    v1324.closePath();
    f90(v1324, p940[5], p940[6], p938 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 41, p938 * 581);
    v1324.bezierCurveTo(p938 * 48, p938 * 584, p938 * 55, p938 * 583, p938 * 60, p938 * 581);
    v1324.bezierCurveTo(p938 * 60, p938 * 589.5, p938 * 60, p938 * 589.5, p938 * 60, p938 * 598);
    v1324.bezierCurveTo(p938 * 60, p938 * 604, p938 * 59, p938 * 609, p938 * 48, p938 * 608);
    v1324.bezierCurveTo(p938 * 40, p938 * 607, p938 * 40, p938 * 606, p938 * 41, p938 * 581);
    v1324.closePath();
    f90(v1324, p940[7]);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 31, p938 * 106);
    v1324.bezierCurveTo(p938 * 31, p938 * 124.5, p938 * 31, p938 * 124.5, p938 * 31, p938 * 143);
    v1324.bezierCurveTo(p938 * 31, p938 * 163, p938 * 38, p938 * 169, p938 * 48, p938 * 168);
    v1324.bezierCurveTo(p938 * 57, p938 * 168, p938 * 67, p938 * 165, p938 * 67, p938 * 148);
    v1324.bezierCurveTo(p938 * 67, p938 * 123.5, p938 * 67, p938 * 123.5, p938 * 67, p938 * 99);
    v1324.closePath();
    f90(v1324, p940[5], p940[6], p938 * 8);
    v1324.save();
    v1324.translate(p938 * -46, p938 * -50);
    v1324.scale(2, 2);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 51, p938 * 80);
    v1324.bezierCurveTo(p938 * 51, p938 * 89.5, p938 * 51, p938 * 89.5, p938 * 51, p938 * 99);
    v1324.bezierCurveTo(p938 * 49, p938 * 103, p938 * 46, p938 * 105, p938 * 44, p938 * 99);
    v1324.bezierCurveTo(p938 * 44, p938 * 88.5, p938 * 44, p938 * 88.5, p938 * 44, p938 * 78);
    v1324.closePath();
    f90(v1324, p940[8]);
    v1324.restore();
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 49, p938 * 27);
    v1324.bezierCurveTo(p938 * 64, p938 * 62.5, p938 * 64, p938 * 62.5, p938 * 79, p938 * 98);
    v1324.bezierCurveTo(p938 * 74, p938 * 113, p938 * 63, p938 * 121, p938 * 50, p938 * 122);
    v1324.bezierCurveTo(p938 * 35, p938 * 123, p938 * 22, p938 * 109, p938 * 20, p938 * 98);
    v1324.closePath();
    f90(v1324, p940[8], p940[9], p938 * 8);
    v1324.scale(2, 2);
    v1324.translate(p938 * -23, p938 * -20);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p938 * 57, p938 * 69);
    v1324.bezierCurveTo(p938 * 50, p938 * 76, p938 * 43, p938 * 75, p938 * 38, p938 * 69);
    v1324.bezierCurveTo(p938 * 43, p938 * 57, p938 * 43, p938 * 57, p938 * 48, p938 * 45);
    v1324.closePath();
    f90(v1324, p940[10]);
    return v1323;
  }
  function f216(p941, p942, p943) {
    var v1325 = document.createElement("canvas");
    var v1326 = v1325.getContext("2d");
    v1325.width = p941 * 90;
    v1325.height = p941 * 98;
    v1326.translate(0, p941 * 4);
    if (v817 === 0) {
      v1326.globalAlpha = p942 ? 0.5 : 1;
      v1326.save();
      v1326.translate(p941 * 44, p941 * 50);
      v1326.rotate(0.2);
      f88(v1326, 9, p941 * 41, p941 * 10);
      v1326.restore();
      f90(v1326, p943[0]);
    }
    v1326.globalAlpha = 1;
    v1326.save();
    v1326.translate(p941 * 44, p941 * 44);
    v1326.rotate(0.2);
    f88(v1326, 9, p941 * 41, p941 * 10);
    f90(v1326, p943[1], p943[2], p941 * 4);
    v1326.rotate(-0.32);
    f88(v1326, 9, p941 * 32, p941 * 10);
    f90(v1326, p943[3], p943[4], p941 * 4);
    v1326.rotate(0.68);
    f88(v1326, 9, p941 * 23, p941 * 8);
    f90(v1326, p943[5], p943[6], p941 * 6);
    v1326.restore();
    v1326.save();
    v1326.translate(p941 * 45, p941 * 45);
    v1326.rotate(0);
    f87(v1326, p941 * -9, p941 * -25.5, p941 * 18, p941 * 51, p941 * 30);
    v1326.restore();
    f90(v1326, p943[4], p943[4], p941 * 2);
    v1326.save();
    v1326.translate(p941 * 45, p941 * 45);
    v1326.rotate(0);
    f87(v1326, p941 * -26, p941 * -9, p941 * 52, p941 * 18, p941 * 30);
    v1326.restore();
    f90(v1326, p943[4], p943[4], p941 * 2);
    f93(v1326, p941 * 45, p941 * 29, p941 * 7);
    f90(v1326, p943[5]);
    f93(v1326, p941 * 45, p941 * 61, p941 * 7);
    f90(v1326, p943[5]);
    f93(v1326, p941 * 28, p941 * 45, p941 * 7);
    f90(v1326, p943[5]);
    f93(v1326, p941 * 62, p941 * 45, p941 * 7);
    f90(v1326, p943[5]);
    return v1325;
  }
  function f217(p944, p945) {
    var v1327 = document.createElement("canvas");
    var v1328 = v1327.getContext("2d");
    v1327.width = p944 * 376;
    v1327.height = p944 * 371;
    v1328.globalAlpha = 0.5;
    v1328.translate(p944 * 5, p944 * 5);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 191.633544921875, p944 * 123.98580932617188);
    v1328.bezierCurveTo(p944 * 215.633544921875, p944 * 85.98580932617188, p944 * 187.633544921875, p944 * 71.98580932617188, p944 * 202.633544921875, p944 * 19.985809326171875);
    v1328.bezierCurveTo(p944 * 231.633544921875, p944 * 68.98580932617188, p944 * 253.633544921875, p944 * 71.98580932617188, p944 * 256.633544921875, p944 * 93.98580932617188);
    v1328.bezierCurveTo(p944 * 306.633544921875, p944 * 64.98580932617188, p944 * 319.633544921875, p944 * 61.985809326171875, p944 * 350.633544921875, p944 * 58.985809326171875);
    v1328.bezierCurveTo(p944 * 280.633544921875, p944 * 86.98580932617188, p944 * 281.633544921875, p944 * 106.98580932617188, p944 * 268.633544921875, p944 * 130.98580932617188);
    v1328.bezierCurveTo(p944 * 295.633544921875, p944 * 158.98580932617188, p944 * 328.633544921875, p944 * 155.98580932617188, p944 * 353.633544921875, p944 * 90.98580932617188);
    v1328.bezierCurveTo(p944 * 371.633544921875, p944 * 158.98580932617188, p944 * 337.633544921875, p944 * 210.98580932617188, p944 * 286.633544921875, p944 * 209.98580932617188);
    v1328.bezierCurveTo(p944 * 323.633544921875, p944 * 230.98580932617188, p944 * 317.633544921875, p944 * 274.9858093261719, p944 * 356.633544921875, p944 * 305.9858093261719);
    v1328.bezierCurveTo(p944 * 288.633544921875, p944 * 297.9858093261719, p944 * 288.633544921875, p944 * 265.9858093261719, p944 * 275.633544921875, p944 * 266.9858093261719);
    v1328.bezierCurveTo(p944 * 280.633544921875, p944 * 294.9858093261719, p944 * 315.633544921875, p944 * 306.9858093261719, p944 * 336.633544921875, p944 * 316.9858093261719);
    v1328.bezierCurveTo(p944 * 295.633544921875, p944 * 318.9858093261719, p944 * 264.633544921875, p944 * 302.9858093261719, p944 * 254.633544921875, p944 * 289.9858093261719);
    v1328.bezierCurveTo(p944 * 252.633544921875, p944 * 301.9858093261719, p944 * 224.633544921875, p944 * 315.9858093261719, p944 * 201.633544921875, p944 * 356.9858093261719);
    v1328.bezierCurveTo(p944 * 195.633544921875, p944 * 313.9858093261719, p944 * 195.633544921875, p944 * 308.9858093261719, p944 * 196.633544921875, p944 * 307.9858093261719);
    v1328.bezierCurveTo(p944 * 197.633544921875, p944 * 289.9858093261719, p944 * 207.633544921875, p944 * 283.9858093261719, p944 * 195.633544921875, p944 * 258.9858093261719);
    v1328.bezierCurveTo(p944 * 182.633544921875, p944 * 282.9858093261719, p944 * 190.633544921875, p944 * 287.9858093261719, p944 * 193.633544921875, p944 * 297.9858093261719);
    v1328.bezierCurveTo(p944 * 195.633544921875, p944 * 306.9858093261719, p944 * 191.633544921875, p944 * 334.9858093261719, p944 * 187.633544921875, p944 * 354.9858093261719);
    v1328.bezierCurveTo(p944 * 165.633544921875, p944 * 320.9858093261719, p944 * 138.633544921875, p944 * 307.9858093261719, p944 * 135.633544921875, p944 * 288.9858093261719);
    v1328.bezierCurveTo(p944 * 110.633544921875, p944 * 318.9858093261719, p944 * 68.633544921875, p944 * 323.9858093261719, p944 * 49.633544921875, p944 * 320.9858093261719);
    v1328.bezierCurveTo(p944 * 88.633544921875, p944 * 308.9858093261719, p944 * 108.633544921875, p944 * 284.9858093261719, p944 * 118.633544921875, p944 * 258.9858093261719);
    v1328.bezierCurveTo(p944 * 86.633544921875, p944 * 264.9858093261719, p944 * 75.633544921875, p944 * 310.9858093261719, p944 * 19.633544921875, p944 * 304.9858093261719);
    v1328.bezierCurveTo(p944 * 54.633544921875, p944 * 276.9858093261719, p944 * 59.633544921875, p944 * 214.98580932617188, p944 * 105.633544921875, p944 * 205.98580932617188);
    v1328.bezierCurveTo(p944 * 14.633544921875, p944 * 201.98580932617188, p944 * 24.633544921875, p944 * 141.98580932617188, p944 * 25.633544921875, p944 * 82.98580932617188);
    v1328.bezierCurveTo(p944 * 49.633544921875, p944 * 168.98580932617188, p944 * 87.633544921875, p944 * 141.98580932617188, p944 * 112.633544921875, p944 * 123.98580932617188);
    v1328.bezierCurveTo(p944 * 95.633544921875, p944 * 75.98580932617188, p944 * 70.633544921875, p944 * 68.98580932617188, p944 * 35.633544921875, p944 * 50.985809326171875);
    v1328.bezierCurveTo(p944 * 70.633544921875, p944 * 53.985809326171875, p944 * 102.633544921875, p944 * 65.98580932617188, p944 * 125.633544921875, p944 * 84.98580932617188);
    v1328.bezierCurveTo(p944 * 133.633544921875, p944 * 69.98580932617188, p944 * 166.633544921875, p944 * 42.985809326171875, p944 * 176.633544921875, p944 * 21.985809326171875);
    v1328.bezierCurveTo(p944 * 185.633544921875, p944 * 49.985809326171875, p944 * 168.633544921875, p944 * 95.98580932617188, p944 * 191.633544921875, p944 * 121.98580932617188);
    v1328.closePath();
    f90(v1328, p945[0]);
    v1328.globalAlpha = 1;
    v1328.translate(p944 * -4, p944 * -5);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 191.633544921875, p944 * 123.98580932617188);
    v1328.bezierCurveTo(p944 * 215.633544921875, p944 * 85.98580932617188, p944 * 187.633544921875, p944 * 71.98580932617188, p944 * 202.633544921875, p944 * 19.985809326171875);
    v1328.bezierCurveTo(p944 * 231.633544921875, p944 * 68.98580932617188, p944 * 253.633544921875, p944 * 71.98580932617188, p944 * 256.633544921875, p944 * 93.98580932617188);
    v1328.bezierCurveTo(p944 * 306.633544921875, p944 * 64.98580932617188, p944 * 319.633544921875, p944 * 61.985809326171875, p944 * 350.633544921875, p944 * 58.985809326171875);
    v1328.bezierCurveTo(p944 * 280.633544921875, p944 * 86.98580932617188, p944 * 281.633544921875, p944 * 106.98580932617188, p944 * 268.633544921875, p944 * 130.98580932617188);
    v1328.bezierCurveTo(p944 * 295.633544921875, p944 * 158.98580932617188, p944 * 328.633544921875, p944 * 155.98580932617188, p944 * 353.633544921875, p944 * 90.98580932617188);
    v1328.bezierCurveTo(p944 * 371.633544921875, p944 * 158.98580932617188, p944 * 337.633544921875, p944 * 210.98580932617188, p944 * 286.633544921875, p944 * 209.98580932617188);
    v1328.bezierCurveTo(p944 * 323.633544921875, p944 * 230.98580932617188, p944 * 317.633544921875, p944 * 274.9858093261719, p944 * 356.633544921875, p944 * 305.9858093261719);
    v1328.bezierCurveTo(p944 * 288.633544921875, p944 * 297.9858093261719, p944 * 288.633544921875, p944 * 265.9858093261719, p944 * 275.633544921875, p944 * 266.9858093261719);
    v1328.bezierCurveTo(p944 * 280.633544921875, p944 * 294.9858093261719, p944 * 315.633544921875, p944 * 306.9858093261719, p944 * 336.633544921875, p944 * 316.9858093261719);
    v1328.bezierCurveTo(p944 * 295.633544921875, p944 * 318.9858093261719, p944 * 264.633544921875, p944 * 302.9858093261719, p944 * 254.633544921875, p944 * 289.9858093261719);
    v1328.bezierCurveTo(p944 * 252.633544921875, p944 * 301.9858093261719, p944 * 224.633544921875, p944 * 315.9858093261719, p944 * 201.633544921875, p944 * 356.9858093261719);
    v1328.bezierCurveTo(p944 * 195.633544921875, p944 * 313.9858093261719, p944 * 195.633544921875, p944 * 308.9858093261719, p944 * 196.633544921875, p944 * 307.9858093261719);
    v1328.bezierCurveTo(p944 * 197.633544921875, p944 * 289.9858093261719, p944 * 207.633544921875, p944 * 283.9858093261719, p944 * 195.633544921875, p944 * 258.9858093261719);
    v1328.bezierCurveTo(p944 * 182.633544921875, p944 * 282.9858093261719, p944 * 190.633544921875, p944 * 287.9858093261719, p944 * 193.633544921875, p944 * 297.9858093261719);
    v1328.bezierCurveTo(p944 * 195.633544921875, p944 * 306.9858093261719, p944 * 191.633544921875, p944 * 334.9858093261719, p944 * 187.633544921875, p944 * 354.9858093261719);
    v1328.bezierCurveTo(p944 * 165.633544921875, p944 * 320.9858093261719, p944 * 138.633544921875, p944 * 307.9858093261719, p944 * 135.633544921875, p944 * 288.9858093261719);
    v1328.bezierCurveTo(p944 * 110.633544921875, p944 * 318.9858093261719, p944 * 68.633544921875, p944 * 323.9858093261719, p944 * 49.633544921875, p944 * 320.9858093261719);
    v1328.bezierCurveTo(p944 * 88.633544921875, p944 * 308.9858093261719, p944 * 108.633544921875, p944 * 284.9858093261719, p944 * 118.633544921875, p944 * 258.9858093261719);
    v1328.bezierCurveTo(p944 * 86.633544921875, p944 * 264.9858093261719, p944 * 75.633544921875, p944 * 310.9858093261719, p944 * 19.633544921875, p944 * 304.9858093261719);
    v1328.bezierCurveTo(p944 * 54.633544921875, p944 * 276.9858093261719, p944 * 59.633544921875, p944 * 214.98580932617188, p944 * 105.633544921875, p944 * 205.98580932617188);
    v1328.bezierCurveTo(p944 * 14.633544921875, p944 * 201.98580932617188, p944 * 24.633544921875, p944 * 141.98580932617188, p944 * 25.633544921875, p944 * 82.98580932617188);
    v1328.bezierCurveTo(p944 * 49.633544921875, p944 * 168.98580932617188, p944 * 87.633544921875, p944 * 141.98580932617188, p944 * 112.633544921875, p944 * 123.98580932617188);
    v1328.bezierCurveTo(p944 * 95.633544921875, p944 * 75.98580932617188, p944 * 70.633544921875, p944 * 68.98580932617188, p944 * 35.633544921875, p944 * 50.985809326171875);
    v1328.bezierCurveTo(p944 * 70.633544921875, p944 * 53.985809326171875, p944 * 102.633544921875, p944 * 65.98580932617188, p944 * 125.633544921875, p944 * 84.98580932617188);
    v1328.bezierCurveTo(p944 * 133.633544921875, p944 * 69.98580932617188, p944 * 166.633544921875, p944 * 42.985809326171875, p944 * 176.633544921875, p944 * 21.985809326171875);
    v1328.bezierCurveTo(p944 * 185.633544921875, p944 * 49.985809326171875, p944 * 168.633544921875, p944 * 95.98580932617188, p944 * 191.633544921875, p944 * 121.98580932617188);
    v1328.closePath();
    f90(v1328, undefined, p945[1], p944 * 12);
    v1328.translate(p944 * -1, p944 * 0);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 270.633544921875, p944 * 88.98580932617188);
    v1328.bezierCurveTo(p944 * 296.633544921875, p944 * 65.98580932617188, p944 * 318.633544921875, p944 * 62.985809326171875, p944 * 348.633544921875, p944 * 57.985809326171875);
    v1328.bezierCurveTo(p944 * 309.633544921875, p944 * 76.98580932617188, p944 * 291.633544921875, p944 * 88.98580932617188, p944 * 280.633544921875, p944 * 99.98580932617188);
    v1328.closePath();
    f90(v1328, p945[4], p945[5], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 275.633544921875, p944 * 281.9858093261719);
    v1328.bezierCurveTo(p944 * 303.633544921875, p944 * 308.9858093261719, p944 * 321.633544921875, p944 * 308.9858093261719, p944 * 335.633544921875, p944 * 315.9858093261719);
    v1328.bezierCurveTo(p944 * 305.633544921875, p944 * 320.9858093261719, p944 * 278.633544921875, p944 * 307.9858093261719, p944 * 264.633544921875, p944 * 293.9858093261719);
    v1328.closePath();
    f90(v1328, p945[4], p945[5], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 124.633544921875, p944 * 291.9858093261719);
    v1328.bezierCurveTo(p944 * 106.633544921875, p944 * 316.9858093261719, p944 * 72.633544921875, p944 * 325.9858093261719, p944 * 53.633544921875, p944 * 319.9858093261719);
    v1328.bezierCurveTo(p944 * 83.633544921875, p944 * 308.9858093261719, p944 * 97.633544921875, p944 * 298.9858093261719, p944 * 112.633544921875, p944 * 284.9858093261719);
    v1328.closePath();
    f90(v1328, p945[4], p945[5], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 113.633544921875, p944 * 80.98580932617188);
    v1328.bezierCurveTo(p944 * 91.633544921875, p944 * 54.985809326171875, p944 * 72.633544921875, p944 * 56.985809326171875, p944 * 36.633544921875, p944 * 49.985809326171875);
    v1328.bezierCurveTo(p944 * 87.633544921875, p944 * 72.98580932617188, p944 * 95.633544921875, p944 * 82.98580932617188, p944 * 106.633544921875, p944 * 96.98580932617188);
    v1328.closePath();
    f90(v1328, p945[4], p945[5], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 202.633544921875, p944 * 20.985809326171875);
    v1328.bezierCurveTo(p944 * 219.633544921875, p944 * 49.985809326171875, p944 * 259.633544921875, p944 * 80.98580932617188, p944 * 255.633544921875, p944 * 92.98580932617188);
    v1328.bezierCurveTo(p944 * 268.633544921875, p944 * 86.98580932617188, p944 * 265.633544921875, p944 * 87.98580932617188, p944 * 275.633544921875, p944 * 82.98580932617188);
    v1328.bezierCurveTo(p944 * 283.633544921875, p944 * 87.98580932617188, p944 * 283.633544921875, p944 * 87.98580932617188, p944 * 291.633544921875, p944 * 92.98580932617188);
    v1328.bezierCurveTo(p944 * 269.633544921875, p944 * 116.98580932617188, p944 * 270.633544921875, p944 * 124.98580932617188, p944 * 267.633544921875, p944 * 130.98580932617188);
    v1328.bezierCurveTo(p944 * 307.633544921875, p944 * 168.98580932617188, p944 * 339.633544921875, p944 * 132.98580932617188, p944 * 352.633544921875, p944 * 93.98580932617188);
    v1328.bezierCurveTo(p944 * 366.633544921875, p944 * 145.98580932617188, p944 * 345.633544921875, p944 * 207.98580932617188, p944 * 286.633544921875, p944 * 208.98580932617188);
    v1328.bezierCurveTo(p944 * 315.633544921875, p944 * 223.98580932617188, p944 * 327.633544921875, p944 * 287.9858093261719, p944 * 355.633544921875, p944 * 305.9858093261719);
    v1328.bezierCurveTo(p944 * 293.633544921875, p944 * 298.9858093261719, p944 * 293.633544921875, p944 * 275.9858093261719, p944 * 276.633544921875, p944 * 266.9858093261719);
    v1328.bezierCurveTo(p944 * 274.633544921875, p944 * 282.9858093261719, p944 * 287.633544921875, p944 * 288.9858093261719, p944 * 295.633544921875, p944 * 296.9858093261719);
    v1328.bezierCurveTo(p944 * 287.133544921875, p944 * 302.4858093261719, p944 * 287.133544921875, p944 * 302.4858093261719, p944 * 278.633544921875, p944 * 307.9858093261719);
    v1328.bezierCurveTo(p944 * 261.633544921875, p944 * 297.9858093261719, p944 * 258.633544921875, p944 * 293.9858093261719, p944 * 255.633544921875, p944 * 290.9858093261719);
    v1328.bezierCurveTo(p944 * 249.633544921875, p944 * 301.9858093261719, p944 * 225.633544921875, p944 * 320.9858093261719, p944 * 202.633544921875, p944 * 354.9858093261719);
    v1328.bezierCurveTo(p944 * 195.633544921875, p944 * 318.9858093261719, p944 * 196.633544921875, p944 * 306.9858093261719, p944 * 198.633544921875, p944 * 300.9858093261719);
    v1328.bezierCurveTo(p944 * 209.633544921875, p944 * 268.9858093261719, p944 * 199.633544921875, p944 * 266.9858093261719, p944 * 195.633544921875, p944 * 256.9858093261719);
    v1328.bezierCurveTo(p944 * 183.633544921875, p944 * 274.9858093261719, p944 * 182.633544921875, p944 * 281.9858093261719, p944 * 192.633544921875, p944 * 305.9858093261719);
    v1328.bezierCurveTo(p944 * 194.633544921875, p944 * 317.9858093261719, p944 * 191.633544921875, p944 * 336.9858093261719, p944 * 186.633544921875, p944 * 351.9858093261719);
    v1328.bezierCurveTo(p944 * 166.633544921875, p944 * 318.9858093261719, p944 * 141.633544921875, p944 * 303.9858093261719, p944 * 136.633544921875, p944 * 286.9858093261719);
    v1328.bezierCurveTo(p944 * 122.633544921875, p944 * 303.9858093261719, p944 * 115.633544921875, p944 * 305.9858093261719, p944 * 109.633544921875, p944 * 306.9858093261719);
    v1328.bezierCurveTo(p944 * 101.133544921875, p944 * 301.9858093261719, p944 * 94.633544921875, p944 * 297.9858093261719, p944 * 92.633544921875, p944 * 296.9858093261719);
    v1328.bezierCurveTo(p944 * 116.633544921875, p944 * 277.9858093261719, p944 * 116.633544921875, p944 * 266.9858093261719, p944 * 119.633544921875, p944 * 257.9858093261719);
    v1328.bezierCurveTo(p944 * 107.633544921875, p944 * 257.9858093261719, p944 * 65.633544921875, p944 * 308.9858093261719, p944 * 24.633544921875, p944 * 303.9858093261719);
    v1328.bezierCurveTo(p944 * 51.633544921875, p944 * 275.9858093261719, p944 * 64.633544921875, p944 * 220.98580932617188, p944 * 108.633544921875, p944 * 205.98580932617188);
    v1328.bezierCurveTo(p944 * 14.633544921875, p944 * 198.98580932617188, p944 * 26.633544921875, p944 * 142.98580932617188, p944 * 25.633544921875, p944 * 86.98580932617188);
    v1328.bezierCurveTo(p944 * 41.633544921875, p944 * 155.98580932617188, p944 * 81.633544921875, p944 * 148.98580932617188, p944 * 113.633544921875, p944 * 124.98580932617188);
    v1328.bezierCurveTo(p944 * 102.633544921875, p944 * 93.98580932617188, p944 * 95.633544921875, p944 * 88.98580932617188, p944 * 89.633544921875, p944 * 81.98580932617188);
    v1328.bezierCurveTo(p944 * 97.633544921875, p944 * 76.48580932617188, p944 * 97.633544921875, p944 * 76.48580932617188, p944 * 105.633544921875, p944 * 70.98580932617188);
    v1328.bezierCurveTo(p944 * 120.633544921875, p944 * 78.98580932617188, p944 * 121.633544921875, p944 * 81.98580932617188, p944 * 124.633544921875, p944 * 86.98580932617188);
    v1328.bezierCurveTo(p944 * 132.633544921875, p944 * 71.98580932617188, p944 * 160.633544921875, p944 * 56.985809326171875, p944 * 175.633544921875, p944 * 23.985809326171875);
    v1328.bezierCurveTo(p944 * 182.633544921875, p944 * 53.985809326171875, p944 * 170.633544921875, p944 * 102.98580932617188, p944 * 191.633544921875, p944 * 125.98580932617188);
    v1328.bezierCurveTo(p944 * 214.633544921875, p944 * 89.98580932617188, p944 * 192.633544921875, p944 * 58.985809326171875, p944 * 202.633544921875, p944 * 20.985809326171875);
    v1328.closePath();
    f90(v1328, p945[2], p945[3], p944 * 5);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 203.633544921875, p944 * 21.985809326171875);
    v1328.bezierCurveTo(p944 * 223.633544921875, p944 * 63.985809326171875, p944 * 227.633544921875, p944 * 72.98580932617188, p944 * 235.633544921875, p944 * 98.98580932617188);
    v1328.bezierCurveTo(p944 * 241.633544921875, p944 * 123.98580932617188, p944 * 225.633544921875, p944 * 138.98580932617188, p944 * 196.633544921875, p944 * 122.98580932617188);
    v1328.bezierCurveTo(p944 * 213.633544921875, p944 * 93.98580932617188, p944 * 199.633544921875, p944 * 49.985809326171875, p944 * 203.633544921875, p944 * 26.985809326171875);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 175.633544921875, p944 * 25.985809326171875);
    v1328.bezierCurveTo(p944 * 176.633544921875, p944 * 51.985809326171875, p944 * 171.633544921875, p944 * 88.98580932617188, p944 * 186.633544921875, p944 * 121.98580932617188);
    v1328.bezierCurveTo(p944 * 156.633544921875, p944 * 144.98580932617188, p944 * 139.633544921875, p944 * 120.98580932617188, p944 * 147.633544921875, p944 * 97.98580932617188);
    v1328.bezierCurveTo(p944 * 152.633544921875, p944 * 77.98580932617188, p944 * 162.633544921875, p944 * 60.985809326171875, p944 * 176.633544921875, p944 * 25.985809326171875);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 26.633544921875, p944 * 96.98580932617188);
    v1328.bezierCurveTo(p944 * 38.633544921875, p944 * 151.98580932617188, p944 * 61.633544921875, p944 * 161.98580932617188, p944 * 88.633544921875, p944 * 168.98580932617188);
    v1328.bezierCurveTo(p944 * 117.633544921875, p944 * 177.98580932617188, p944 * 113.633544921875, p944 * 185.98580932617188, p944 * 106.633544921875, p944 * 204.98580932617188);
    v1328.bezierCurveTo(p944 * 32.633544921875, p944 * 204.98580932617188, p944 * 25.633544921875, p944 * 149.98580932617188, p944 * 25.633544921875, p944 * 97.98580932617188);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 351.633544921875, p944 * 99.98580932617188);
    v1328.bezierCurveTo(p944 * 365.633544921875, p944 * 161.98580932617188, p944 * 333.633544921875, p944 * 203.98580932617188, p944 * 287.633544921875, p944 * 207.98580932617188);
    v1328.bezierCurveTo(p944 * 255.633544921875, p944 * 208.98580932617188, p944 * 266.633544921875, p944 * 174.98580932617188, p944 * 285.633544921875, p944 * 176.98580932617188);
    v1328.bezierCurveTo(p944 * 313.633544921875, p944 * 178.98580932617188, p944 * 348.633544921875, p944 * 135.98580932617188, p944 * 353.633544921875, p944 * 99.98580932617188);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 350.633544921875, p944 * 302.9858093261719);
    v1328.bezierCurveTo(p944 * 310.633544921875, p944 * 280.9858093261719, p944 * 314.633544921875, p944 * 244.98580932617188, p944 * 292.633544921875, p944 * 230.98580932617188);
    v1328.bezierCurveTo(p944 * 272.633544921875, p944 * 215.98580932617188, p944 * 263.633544921875, p944 * 222.98580932617188, p944 * 256.633544921875, p944 * 236.98580932617188);
    v1328.bezierCurveTo(p944 * 251.633544921875, p944 * 249.98580932617188, p944 * 264.633544921875, p944 * 255.98580932617188, p944 * 279.633544921875, p944 * 268.9858093261719);
    v1328.bezierCurveTo(p944 * 306.633544921875, p944 * 295.9858093261719, p944 * 325.633544921875, p944 * 299.9858093261719, p944 * 349.633544921875, p944 * 302.9858093261719);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 95.633544921875, p944 * 224.98580932617188);
    v1328.bezierCurveTo(p944 * 64.633544921875, p944 * 245.98580932617188, p944 * 62.633544921875, p944 * 280.9858093261719, p944 * 32.633544921875, p944 * 303.9858093261719);
    v1328.bezierCurveTo(p944 * 59.633544921875, p944 * 301.9858093261719, p944 * 102.633544921875, p944 * 260.9858093261719, p944 * 116.633544921875, p944 * 255.98580932617188);
    v1328.bezierCurveTo(p944 * 139.633544921875, p944 * 229.98580932617188, p944 * 108.633544921875, p944 * 209.98580932617188, p944 * 97.633544921875, p944 * 224.98580932617188);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 195.633544921875, p944 * 253.98580932617188);
    v1328.bezierCurveTo(p944 * 209.633544921875, p944 * 282.9858093261719, p944 * 205.633544921875, p944 * 278.9858093261719, p944 * 199.633544921875, p944 * 307.9858093261719);
    v1328.bezierCurveTo(p944 * 198.633544921875, p944 * 332.9858093261719, p944 * 201.633544921875, p944 * 340.9858093261719, p944 * 202.633544921875, p944 * 348.9858093261719);
    v1328.bezierCurveTo(p944 * 215.633544921875, p944 * 313.9858093261719, p944 * 226.633544921875, p944 * 291.9858093261719, p944 * 235.633544921875, p944 * 270.9858093261719);
    v1328.bezierCurveTo(p944 * 243.633544921875, p944 * 247.98580932617188, p944 * 219.633544921875, p944 * 235.98580932617188, p944 * 196.633544921875, p944 * 252.98580932617188);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 195.633544921875, p944 * 251.98580932617188);
    v1328.bezierCurveTo(p944 * 176.633544921875, p944 * 275.9858093261719, p944 * 182.633544921875, p944 * 285.9858093261719, p944 * 191.633544921875, p944 * 308.9858093261719);
    v1328.bezierCurveTo(p944 * 194.633544921875, p944 * 318.9858093261719, p944 * 190.633544921875, p944 * 334.9858093261719, p944 * 186.633544921875, p944 * 348.9858093261719);
    v1328.bezierCurveTo(p944 * 175.633544921875, p944 * 307.9858093261719, p944 * 157.633544921875, p944 * 291.9858093261719, p944 * 155.633544921875, p944 * 272.9858093261719);
    v1328.bezierCurveTo(p944 * 150.633544921875, p944 * 243.98580932617188, p944 * 170.633544921875, p944 * 236.98580932617188, p944 * 195.633544921875, p944 * 251.98580932617188);
    v1328.closePath();
    f90(v1328, p945[3]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 316, p944 * 186.8020782470703);
    v1328.bezierCurveTo(p944 * 315, p944 * 173.8020782470703, p944 * 298, p944 * 177.8020782470703, p944 * 293, p944 * 183.8020782470703);
    v1328.bezierCurveTo(p944 * 285, p944 * 195.8020782470703, p944 * 314, p944 * 197.8020782470703, p944 * 315, p944 * 187.8020782470703);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 340, p944 * 157.8020782470703);
    v1328.bezierCurveTo(p944 * 327, p944 * 153.8020782470703, p944 * 321, p944 * 168.8020782470703, p944 * 330, p944 * 174.8020782470703);
    v1328.bezierCurveTo(p944 * 341, p944 * 178.8020782470703, p944 * 347, p944 * 161.8020782470703, p944 * 341, p944 * 157.8020782470703);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 349, p944 * 136.8020782470703);
    v1328.bezierCurveTo(p944 * 343, p944 * 135.8020782470703, p944 * 342, p944 * 139.8020782470703, p944 * 341, p944 * 147.8020782470703);
    v1328.bezierCurveTo(p944 * 343, p944 * 155.8020782470703, p944 * 353, p944 * 143.8020782470703, p944 * 349, p944 * 137.8020782470703);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 278.75, p944 * 246.4375);
    v1328.bezierCurveTo(p944 * 288.75, p944 * 242.4375, p944 * 301.75, p944 * 248.4375, p944 * 298.75, p944 * 262.4375);
    v1328.bezierCurveTo(p944 * 293.75, p944 * 271.4375, p944 * 287.75, p944 * 271.4375, p944 * 278.75, p944 * 262.4375);
    v1328.bezierCurveTo(p944 * 271.75, p944 * 255.4375, p944 * 274.75, p944 * 250.4375, p944 * 277.75, p944 * 247.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 310.75, p944 * 277.4375);
    v1328.bezierCurveTo(p944 * 319.75, p944 * 280.4375, p944 * 322.75, p944 * 283.4375, p944 * 321.75, p944 * 289.4375);
    v1328.bezierCurveTo(p944 * 319.75, p944 * 295.4375, p944 * 313.75, p944 * 291.4375, p944 * 308.75, p944 * 288.4375);
    v1328.bezierCurveTo(p944 * 301.75, p944 * 281.4375, p944 * 306.75, p944 * 277.4375, p944 * 309.75, p944 * 277.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 217.75, p944 * 257.4375);
    v1328.bezierCurveTo(p944 * 227.75, p944 * 269.4375, p944 * 220.75, p944 * 281.4375, p944 * 212.75, p944 * 280.4375);
    v1328.bezierCurveTo(p944 * 206.75, p944 * 279.4375, p944 * 206.75, p944 * 269.4375, p944 * 204.75, p944 * 260.4375);
    v1328.bezierCurveTo(p944 * 204.75, p944 * 254.4375, p944 * 211.75, p944 * 253.4375, p944 * 216.75, p944 * 256.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 211.75, p944 * 289.4375);
    v1328.bezierCurveTo(p944 * 219.75, p944 * 292.4375, p944 * 213.75, p944 * 306.4375, p944 * 206.75, p944 * 307.4375);
    v1328.bezierCurveTo(p944 * 199.75, p944 * 303.4375, p944 * 209.75, p944 * 287.4375, p944 * 210.75, p944 * 289.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 171.75, p944 * 256.4375);
    v1328.bezierCurveTo(p944 * 162.75, p944 * 273.4375, p944 * 166.75, p944 * 278.4375, p944 * 175.75, p944 * 280.4375);
    v1328.bezierCurveTo(p944 * 183.75, p944 * 278.4375, p944 * 185.75, p944 * 257.4375, p944 * 182.75, p944 * 255.4375);
    v1328.bezierCurveTo(p944 * 176.75, p944 * 251.4375, p944 * 172.75, p944 * 253.4375, p944 * 172.75, p944 * 256.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 175.75, p944 * 289.9375);
    v1328.bezierCurveTo(p944 * 183.75, p944 * 287.9375, p944 * 186.75, p944 * 301.9375, p944 * 182.75, p944 * 305.9375);
    v1328.bezierCurveTo(p944 * 176.75, p944 * 307.9375, p944 * 171.75, p944 * 292.9375, p944 * 174.75, p944 * 290.9375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 205.75, p944 * 314.4375);
    v1328.bezierCurveTo(p944 * 209.75, p944 * 316.4375, p944 * 210.75, p944 * 320.4375, p944 * 206.75, p944 * 323.4375);
    v1328.bezierCurveTo(p944 * 201.75, p944 * 324.4375, p944 * 201.75, p944 * 314.4375, p944 * 204.75, p944 * 314.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 186.75, p944 * 313.4375);
    v1328.bezierCurveTo(p944 * 181.75, p944 * 315.4375, p944 * 180.75, p944 * 321.4375, p944 * 185.75, p944 * 326.4375);
    v1328.bezierCurveTo(p944 * 190.75, p944 * 327.4375, p944 * 190.75, p944 * 313.4375, p944 * 187.75, p944 * 314.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 103.75, p944 * 244.4375);
    v1328.bezierCurveTo(p944 * 96.75, p944 * 239.4375, p944 * 83.75, p944 * 240.4375, p944 * 81.75, p944 * 255.4375);
    v1328.bezierCurveTo(p944 * 80.75, p944 * 264.4375, p944 * 89.75, p944 * 269.4375, p944 * 99.75, p944 * 260.4375);
    v1328.bezierCurveTo(p944 * 106.75, p944 * 254.4375, p944 * 106.75, p944 * 250.4375, p944 * 104.75, p944 * 245.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 86.75, p944 * 182.4375);
    v1328.bezierCurveTo(p944 * 82.75, p944 * 170.4375, p944 * 66.75, p944 * 169.4375, p944 * 61.75, p944 * 181.4375);
    v1328.bezierCurveTo(p944 * 58.75, p944 * 187.4375, p944 * 68.75, p944 * 194.4375, p944 * 75.75, p944 * 192.4375);
    v1328.bezierCurveTo(p944 * 83.75, p944 * 192.4375, p944 * 86.75, p944 * 187.4375, p944 * 86.75, p944 * 183.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 44.75, p944 * 152.4375);
    v1328.bezierCurveTo(p944 * 55.75, p944 * 159.4375, p944 * 54.75, p944 * 170.4375, p944 * 46.75, p944 * 171.4375);
    v1328.bezierCurveTo(p944 * 39.75, p944 * 170.4375, p944 * 34.75, p944 * 151.4375, p944 * 43.75, p944 * 152.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 31.75, p944 * 130.4375);
    v1328.bezierCurveTo(p944 * 35.75, p944 * 132.4375, p944 * 35.75, p944 * 131.4375, p944 * 37.75, p944 * 137.4375);
    v1328.bezierCurveTo(p944 * 36.75, p944 * 144.4375, p944 * 36.75, p944 * 145.4375, p944 * 33.75, p944 * 144.4375);
    v1328.bezierCurveTo(p944 * 26.75, p944 * 137.4375, p944 * 29.75, p944 * 131.4375, p944 * 31.75, p944 * 130.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 69.75, p944 * 274.4375);
    v1328.bezierCurveTo(p944 * 62.75, p944 * 272.4375, p944 * 59.75, p944 * 277.4375, p944 * 57.75, p944 * 284.4375);
    v1328.bezierCurveTo(p944 * 56.75, p944 * 290.4375, p944 * 63.75, p944 * 289.4375, p944 * 71.75, p944 * 282.4375);
    v1328.bezierCurveTo(p944 * 75.75, p944 * 277.4375, p944 * 72.75, p944 * 275.4375, p944 * 69.75, p944 * 274.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 165.75, p944 * 95.4375);
    v1328.bezierCurveTo(p944 * 177.75, p944 * 97.4375, p944 * 182.75, p944 * 115.4375, p944 * 173.75, p944 * 121.4375);
    v1328.bezierCurveTo(p944 * 164.75, p944 * 126.4375, p944 * 149.75, p944 * 102.4375, p944 * 164.75, p944 * 96.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 216.75, p944 * 94.4375);
    v1328.bezierCurveTo(p944 * 227.75, p944 * 99.4375, p944 * 223.75, p944 * 122.4375, p944 * 210.75, p944 * 119.4375);
    v1328.bezierCurveTo(p944 * 203.75, p944 * 115.4375, p944 * 207.75, p944 * 93.4375, p944 * 216.75, p944 * 94.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 211.75, p944 * 68.4375);
    v1328.bezierCurveTo(p944 * 218.75, p944 * 69.4375, p944 * 220.75, p944 * 77.4375, p944 * 216.75, p944 * 83.4375);
    v1328.bezierCurveTo(p944 * 208.75, p944 * 89.4375, p944 * 205.75, p944 * 68.4375, p944 * 210.75, p944 * 68.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 169.75, p944 * 71.4375);
    v1328.bezierCurveTo(p944 * 162.75, p944 * 72.4375, p944 * 159.75, p944 * 83.4375, p944 * 167.75, p944 * 88.4375);
    v1328.bezierCurveTo(p944 * 174.75, p944 * 90.4375, p944 * 174.75, p944 * 72.4375, p944 * 170.75, p944 * 71.4375);
    v1328.closePath();
    f90(v1328, p945[6], p945[7], p944 * 4);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 193.75, p944 * 160.4375);
    v1328.bezierCurveTo(p944 * 215.75, p944 * 168.4375, p944 * 224.75, p944 * 180.4375, p944 * 229.75, p944 * 193.4375);
    v1328.bezierCurveTo(p944 * 223.75, p944 * 211.4375, p944 * 205.75, p944 * 225.4375, p944 * 193.75, p944 * 229.4375);
    v1328.bezierCurveTo(p944 * 167.75, p944 * 217.4375, p944 * 161.75, p944 * 205.4375, p944 * 156.75, p944 * 192.4375);
    v1328.bezierCurveTo(p944 * 164.75, p944 * 175.4375, p944 * 176.75, p944 * 166.4375, p944 * 192.75, p944 * 160.4375);
    v1328.closePath();
    f90(v1328, p945[8], p945[9], p944 * 3);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 189.1999969482422, p944 * 182.61249923706055);
    v1328.bezierCurveTo(p944 * 190.1999969482422, p944 * 184.11249923706055, p944 * 190.1999969482422, p944 * 184.11249923706055, p944 * 191.1999969482422, p944 * 185.61249923706055);
    v1328.bezierCurveTo(p944 * 192.1999969482422, p944 * 180.61249923706055, p944 * 192.1999969482422, p944 * 180.61249923706055, p944 * 193.1999969482422, p944 * 175.61249923706055);
    v1328.bezierCurveTo(p944 * 195.6999969482422, p944 * 177.11249923706055, p944 * 195.6999969482422, p944 * 177.11249923706055, p944 * 198.1999969482422, p944 * 178.61249923706055);
    v1328.bezierCurveTo(p944 * 198.1999969482422, p944 * 181.11249923706055, p944 * 198.1999969482422, p944 * 181.11249923706055, p944 * 198.1999969482422, p944 * 183.61249923706055);
    v1328.bezierCurveTo(p944 * 201.6999969482422, p944 * 181.11249923706055, p944 * 201.6999969482422, p944 * 181.11249923706055, p944 * 205.1999969482422, p944 * 178.61249923706055);
    v1328.bezierCurveTo(p944 * 206.6999969482422, p944 * 180.61249923706055, p944 * 206.6999969482422, p944 * 180.61249923706055, p944 * 208.1999969482422, p944 * 182.61249923706055);
    v1328.bezierCurveTo(p944 * 206.1999969482422, p944 * 185.61249923706055, p944 * 206.1999969482422, p944 * 185.61249923706055, p944 * 204.1999969482422, p944 * 188.61249923706055);
    v1328.bezierCurveTo(p944 * 208.6999969482422, p944 * 188.61249923706055, p944 * 208.6999969482422, p944 * 188.61249923706055, p944 * 213.1999969482422, p944 * 188.61249923706055);
    v1328.bezierCurveTo(p944 * 213.1999969482422, p944 * 191.11249923706055, p944 * 213.1999969482422, p944 * 191.11249923706055, p944 * 213.1999969482422, p944 * 193.61249923706055);
    v1328.bezierCurveTo(p944 * 209.6999969482422, p944 * 194.61249923706055, p944 * 209.6999969482422, p944 * 194.61249923706055, p944 * 206.1999969482422, p944 * 195.61249923706055);
    v1328.bezierCurveTo(p944 * 210.1999969482422, p944 * 198.61249923706055, p944 * 210.1999969482422, p944 * 198.61249923706055, p944 * 214.1999969482422, p944 * 201.61249923706055);
    v1328.bezierCurveTo(p944 * 212.1999969482422, p944 * 203.61249923706055, p944 * 212.1999969482422, p944 * 203.61249923706055, p944 * 210.1999969482422, p944 * 205.61249923706055);
    v1328.bezierCurveTo(p944 * 207.1999969482422, p944 * 204.11249923706055, p944 * 207.1999969482422, p944 * 204.11249923706055, p944 * 204.1999969482422, p944 * 202.61249923706055);
    v1328.bezierCurveTo(p944 * 205.6999969482422, p944 * 207.61249923706055, p944 * 205.6999969482422, p944 * 207.61249923706055, p944 * 207.1999969482422, p944 * 212.61249923706055);
    v1328.bezierCurveTo(p944 * 204.6999969482422, p944 * 213.61249923706055, p944 * 204.6999969482422, p944 * 213.61249923706055, p944 * 202.1999969482422, p944 * 214.61249923706055);
    v1328.bezierCurveTo(p944 * 200.1999969482422, p944 * 210.61249923706055, p944 * 200.1999969482422, p944 * 210.61249923706055, p944 * 198.1999969482422, p944 * 206.61249923706055);
    v1328.bezierCurveTo(p944 * 196.6999969482422, p944 * 211.61249923706055, p944 * 196.6999969482422, p944 * 211.61249923706055, p944 * 195.1999969482422, p944 * 216.61249923706055);
    v1328.bezierCurveTo(p944 * 192.6999969482422, p944 * 216.11249923706055, p944 * 192.6999969482422, p944 * 216.11249923706055, p944 * 190.1999969482422, p944 * 215.61249923706055);
    v1328.bezierCurveTo(p944 * 190.1999969482422, p944 * 211.61249923706055, p944 * 190.1999969482422, p944 * 211.61249923706055, p944 * 190.1999969482422, p944 * 207.61249923706055);
    v1328.bezierCurveTo(p944 * 186.1999969482422, p944 * 210.61249923706055, p944 * 186.1999969482422, p944 * 210.61249923706055, p944 * 182.1999969482422, p944 * 213.61249923706055);
    v1328.bezierCurveTo(p944 * 181.1999969482422, p944 * 211.11249923706055, p944 * 181.1999969482422, p944 * 211.11249923706055, p944 * 180.1999969482422, p944 * 208.61249923706055);
    v1328.bezierCurveTo(p944 * 183.1999969482422, p944 * 205.61249923706055, p944 * 183.1999969482422, p944 * 205.61249923706055, p944 * 186.1999969482422, p944 * 202.61249923706055);
    v1328.bezierCurveTo(p944 * 180.6999969482422, p944 * 203.11249923706055, p944 * 180.6999969482422, p944 * 203.11249923706055, p944 * 175.1999969482422, p944 * 203.61249923706055);
    v1328.bezierCurveTo(p944 * 174.6999969482422, p944 * 200.11249923706055, p944 * 174.6999969482422, p944 * 200.11249923706055, p944 * 174.1999969482422, p944 * 196.61249923706055);
    v1328.bezierCurveTo(p944 * 177.1999969482422, p944 * 195.61249923706055, p944 * 177.1999969482422, p944 * 195.61249923706055, p944 * 180.1999969482422, p944 * 194.61249923706055);
    v1328.bezierCurveTo(p944 * 177.1999969482422, p944 * 191.61249923706055, p944 * 177.1999969482422, p944 * 191.61249923706055, p944 * 174.1999969482422, p944 * 188.61249923706055);
    v1328.bezierCurveTo(p944 * 175.6999969482422, p944 * 187.11249923706055, p944 * 175.6999969482422, p944 * 187.11249923706055, p944 * 177.1999969482422, p944 * 185.61249923706055);
    v1328.bezierCurveTo(p944 * 180.6999969482422, p944 * 187.11249923706055, p944 * 180.6999969482422, p944 * 187.11249923706055, p944 * 184.1999969482422, p944 * 188.61249923706055);
    v1328.bezierCurveTo(p944 * 182.6999969482422, p944 * 183.61249923706055, p944 * 182.6999969482422, p944 * 183.61249923706055, p944 * 181.1999969482422, p944 * 178.61249923706055);
    v1328.bezierCurveTo(p944 * 183.1999969482422, p944 * 177.11249923706055, p944 * 183.1999969482422, p944 * 177.11249923706055, p944 * 185.1999969482422, p944 * 175.61249923706055);
    v1328.closePath();
    f90(v1328, p945[10]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 185.1999969482422, p944 * 173.8125);
    v1328.bezierCurveTo(p944 * 187.1999969482422, p944 * 179.3125, p944 * 187.1999969482422, p944 * 179.3125, p944 * 189.1999969482422, p944 * 184.8125);
    v1328.bezierCurveTo(p944 * 184.1999969482422, p944 * 181.8125, p944 * 184.1999969482422, p944 * 181.8125, p944 * 179.1999969482422, p944 * 178.8125);
    v1328.bezierCurveTo(p944 * 181.1999969482422, p944 * 175.8125, p944 * 182.1999969482422, p944 * 174.8125, p944 * 185.1999969482422, p944 * 173.8125);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 192.1999969482422, p944 * 173.61249542236328);
    v1328.bezierCurveTo(p944 * 194.1999969482422, p944 * 172.61249542236328, p944 * 196.1999969482422, p944 * 171.61249542236328, p944 * 199.1999969482422, p944 * 173.61249542236328);
    v1328.bezierCurveTo(p944 * 197.6999969482422, p944 * 179.61249542236328, p944 * 197.6999969482422, p944 * 179.61249542236328, p944 * 196.1999969482422, p944 * 185.61249542236328);
    v1328.bezierCurveTo(p944 * 194.1999969482422, p944 * 179.61249542236328, p944 * 194.1999969482422, p944 * 179.61249542236328, p944 * 192.1999969482422, p944 * 173.61249542236328);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 205.1999969482422, p944 * 176.2125015258789);
    v1328.bezierCurveTo(p944 * 210.1999969482422, p944 * 178.2125015258789, p944 * 211.1999969482422, p944 * 179.2125015258789, p944 * 211.1999969482422, p944 * 181.2125015258789);
    v1328.bezierCurveTo(p944 * 206.6999969482422, p944 * 184.7125015258789, p944 * 206.6999969482422, p944 * 184.7125015258789, p944 * 202.1999969482422, p944 * 188.2125015258789);
    v1328.bezierCurveTo(p944 * 203.6999969482422, p944 * 182.2125015258789, p944 * 203.6999969482422, p944 * 182.2125015258789, p944 * 205.1999969482422, p944 * 176.2125015258789);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 214.1999969482422, p944 * 187.21249985694885);
    v1328.bezierCurveTo(p944 * 216.1999969482422, p944 * 191.21249985694885, p944 * 216.1999969482422, p944 * 192.21249985694885, p944 * 215.1999969482422, p944 * 195.21249985694885);
    v1328.bezierCurveTo(p944 * 206.1999969482422, p944 * 194.21249985694885, p944 * 205.1999969482422, p944 * 194.21249985694885, p944 * 205.1999969482422, p944 * 194.21249985694885);
    v1328.bezierCurveTo(p944 * 209.6999969482422, p944 * 190.71249985694885, p944 * 209.6999969482422, p944 * 190.71249985694885, p944 * 214.1999969482422, p944 * 187.21249985694885);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 204.1999969482422, p944 * 201.8125);
    v1328.bezierCurveTo(p944 * 209.1999969482422, p944 * 201.3125, p944 * 209.1999969482422, p944 * 201.3125, p944 * 214.1999969482422, p944 * 200.8125);
    v1328.bezierCurveTo(p944 * 215.1999969482422, p944 * 204.8125, p944 * 214.1999969482422, p944 * 205.8125, p944 * 213.1999969482422, p944 * 208.8125);
    v1328.bezierCurveTo(p944 * 208.6999969482422, p944 * 205.3125, p944 * 208.6999969482422, p944 * 205.3125, p944 * 204.1999969482422, p944 * 201.8125);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 199.1999969482422, p944 * 205.61249923706055);
    v1328.bezierCurveTo(p944 * 207.1999969482422, p944 * 212.61249923706055, p944 * 203.6999969482422, p944 * 209.11249923706055, p944 * 208.1999969482422, p944 * 212.61249923706055);
    v1328.bezierCurveTo(p944 * 206.1999969482422, p944 * 215.61249923706055, p944 * 204.1999969482422, p944 * 217.61249923706055, p944 * 203.1999969482422, p944 * 216.61249923706055);
    v1328.bezierCurveTo(p944 * 201.1999969482422, p944 * 211.11249923706055, p944 * 201.1999969482422, p944 * 211.11249923706055, p944 * 199.1999969482422, p944 * 205.61249923706055);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 191.1999969482422, p944 * 207.01250076293945);
    v1328.bezierCurveTo(p944 * 194.1999969482422, p944 * 213.01250076293945, p944 * 194.1999969482422, p944 * 216.01250076293945, p944 * 196.1999969482422, p944 * 218.01250076293945);
    v1328.bezierCurveTo(p944 * 193.1999969482422, p944 * 220.01250076293945, p944 * 190.1999969482422, p944 * 220.01250076293945, p944 * 188.1999969482422, p944 * 218.01250076293945);
    v1328.bezierCurveTo(p944 * 189.6999969482422, p944 * 213.01250076293945, p944 * 189.6999969482422, p944 * 213.01250076293945, p944 * 191.1999969482422, p944 * 208.01250076293945);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 186.1999969482422, p944 * 203.21249961853027);
    v1328.bezierCurveTo(p944 * 184.1999969482422, p944 * 209.21249961853027, p944 * 184.1999969482422, p944 * 209.21249961853027, p944 * 182.1999969482422, p944 * 215.21249961853027);
    v1328.bezierCurveTo(p944 * 177.1999969482422, p944 * 212.21249961853027, p944 * 176.1999969482422, p944 * 211.21249961853027, p944 * 177.1999969482422, p944 * 210.21249961853027);
    v1328.bezierCurveTo(p944 * 181.6999969482422, p944 * 206.71249961853027, p944 * 181.6999969482422, p944 * 206.71249961853027, p944 * 186.1999969482422, p944 * 203.21249961853027);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 183.1999969482422, p944 * 196.8125);
    v1328.bezierCurveTo(p944 * 177.1999969482422, p944 * 196.3125, p944 * 177.1999969482422, p944 * 196.3125, p944 * 171.1999969482422, p944 * 195.8125);
    v1328.bezierCurveTo(p944 * 171.1999969482422, p944 * 199.8125, p944 * 171.1999969482422, p944 * 202.8125, p944 * 174.1999969482422, p944 * 204.8125);
    v1328.bezierCurveTo(p944 * 178.6999969482422, p944 * 200.8125, p944 * 178.6999969482422, p944 * 200.8125, p944 * 183.1999969482422, p944 * 196.8125);
    v1328.closePath();
    f90(v1328, p945[11]);
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p944 * 185.1999969482422, p944 * 190.21249771118164);
    v1328.bezierCurveTo(p944 * 179.6999969482422, p944 * 186.71249771118164, p944 * 179.6999969482422, p944 * 186.71249771118164, p944 * 174.1999969482422, p944 * 183.21249771118164);
    v1328.bezierCurveTo(p944 * 172.1999969482422, p944 * 186.21249771118164, p944 * 172.1999969482422, p944 * 187.21249771118164, p944 * 172.1999969482422, p944 * 190.21249771118164);
    v1328.bezierCurveTo(p944 * 178.1999969482422, p944 * 190.21249771118164, p944 * 178.1999969482422, p944 * 190.21249771118164, p944 * 184.1999969482422, p944 * 190.21249771118164);
    v1328.closePath();
    f90(v1328, p945[11]);
    f93(v1328, p944 * 126.19999694824219, p944 * 169.8125, p944 * 8.94427190999916);
    f90(v1328, p945[12]);
    f93(v1328, p944 * 123.19999694824219, p944 * 164.8125, p944 * 2.8284271247461903);
    f90(v1328, p945[13]);
    f93(v1328, p944 * 253.1999969482422, p944 * 169.8125, p944 * 8.94427190999916);
    f90(v1328, p945[12]);
    f93(v1328, p944 * 255.1999969482422, p944 * 164.8125, p944 * 2.23606797749979);
    f90(v1328, p945[13]);
    return v1327;
  }
  function f218(p946, p947, p948) {
    var v1329 = document.createElement("canvas");
    var v1330 = v1329.getContext("2d");
    v1329.width = p946 * 247;
    v1329.height = p946 * 247;
    v1330.translate(0, p946 * 10);
    v1330.globalAlpha = p947 ? 0.5 : 1;
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 150, p946 * 62);
    v1330.bezierCurveTo(p946 * 151.5, p946 * 71.5, p946 * 149, p946 * 70, p946 * 153, p946 * 81);
    v1330.bezierCurveTo(p946 * 158, p946 * 73.5, p946 * 158, p946 * 73.5, p946 * 163, p946 * 66);
    v1330.closePath();
    f90(v1330, p948[0]);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 164, p946 * 171);
    v1330.bezierCurveTo(p946 * 149, p946 * 159, p946 * 156.5, p946 * 165, p946 * 149, p946 * 159);
    v1330.bezierCurveTo(p946 * 149, p946 * 167, p946 * 149, p946 * 170, p946 * 152, p946 * 178);
    v1330.closePath();
    f90(v1330, p948[0]);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 132, p946 * 95);
    v1330.bezierCurveTo(p946 * 154, p946 * 102, p946 * 154, p946 * 126, p946 * 137, p946 * 139);
    v1330.bezierCurveTo(p946 * 113, p946 * 152, p946 * 89, p946 * 136, p946 * 80, p946 * 121);
    v1330.bezierCurveTo(p946 * 57, p946 * 89, p946 * 69, p946 * 63, p946 * 79, p946 * 52);
    v1330.bezierCurveTo(p946 * 110, p946 * 20, p946 * 139, p946 * 21, p946 * 150, p946 * 25);
    v1330.bezierCurveTo(p946 * 197, p946 * 36, p946 * 221, p946 * 67, p946 * 226, p946 * 90);
    v1330.bezierCurveTo(p946 * 234, p946 * 134, p946 * 214, p946 * 177, p946 * 195, p946 * 197);
    v1330.bezierCurveTo(p946 * 144, p946 * 242, p946 * 79, p946 * 216, p946 * 58, p946 * 206);
    v1330.bezierCurveTo(p946 * 13, p946 * 174, p946 * 20, p946 * 134, p946 * 23, p946 * 107);
    v1330.bezierCurveTo(p946 * 26, p946 * 78, p946 * 33, p946 * 60, p946 * 38, p946 * 43);
    v1330.bezierCurveTo(p946 * 42, p946 * 32, p946 * 47, p946 * 32, p946 * 50, p946 * 36);
    v1330.bezierCurveTo(p946 * 54, p946 * 37, p946 * 50, p946 * 52, p946 * 44, p946 * 87);
    v1330.bezierCurveTo(p946 * 40, p946 * 115, p946 * 46, p946 * 142, p946 * 57, p946 * 158);
    v1330.bezierCurveTo(p946 * 76, p946 * 189, p946 * 129, p946 * 182, p946 * 152, p946 * 173);
    v1330.bezierCurveTo(p946 * 186, p946 * 156, p946 * 191, p946 * 106, p946 * 176, p946 * 85);
    v1330.bezierCurveTo(p946 * 159, p946 * 61, p946 * 132, p946 * 62, p946 * 122, p946 * 66);
    v1330.bezierCurveTo(p946 * 108, p946 * 74, p946 * 108, p946 * 89, p946 * 116, p946 * 90);
    v1330.bezierCurveTo(p946 * 123, p946 * 92, p946 * 130, p946 * 93, p946 * 131, p946 * 94);
    v1330.closePath();
    f90(v1330, p948[0]);
    v1330.translate(0, p946 * -10);
    v1330.globalAlpha = 1;
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 150, p946 * 62);
    v1330.bezierCurveTo(p946 * 151.5, p946 * 71.5, p946 * 149, p946 * 70, p946 * 153, p946 * 81);
    v1330.bezierCurveTo(p946 * 158, p946 * 73.5, p946 * 158, p946 * 73.5, p946 * 163, p946 * 66);
    v1330.closePath();
    f90(v1330, p948[5]);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 164, p946 * 171);
    v1330.bezierCurveTo(p946 * 149, p946 * 159, p946 * 156.5, p946 * 165, p946 * 149, p946 * 159);
    v1330.bezierCurveTo(p946 * 149, p946 * 167, p946 * 149, p946 * 170, p946 * 152, p946 * 178);
    v1330.closePath();
    f90(v1330, p948[5]);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 132, p946 * 95);
    v1330.bezierCurveTo(p946 * 154, p946 * 102, p946 * 154, p946 * 126, p946 * 137, p946 * 139);
    v1330.bezierCurveTo(p946 * 113, p946 * 152, p946 * 89, p946 * 136, p946 * 80, p946 * 121);
    v1330.bezierCurveTo(p946 * 57, p946 * 89, p946 * 69, p946 * 63, p946 * 79, p946 * 52);
    v1330.bezierCurveTo(p946 * 110, p946 * 20, p946 * 139, p946 * 21, p946 * 150, p946 * 25);
    v1330.bezierCurveTo(p946 * 197, p946 * 36, p946 * 221, p946 * 67, p946 * 226, p946 * 90);
    v1330.bezierCurveTo(p946 * 234, p946 * 134, p946 * 214, p946 * 177, p946 * 195, p946 * 197);
    v1330.bezierCurveTo(p946 * 144, p946 * 242, p946 * 79, p946 * 216, p946 * 58, p946 * 206);
    v1330.bezierCurveTo(p946 * 13, p946 * 174, p946 * 20, p946 * 134, p946 * 23, p946 * 107);
    v1330.bezierCurveTo(p946 * 26, p946 * 78, p946 * 33, p946 * 60, p946 * 38, p946 * 43);
    v1330.bezierCurveTo(p946 * 42, p946 * 32, p946 * 47, p946 * 32, p946 * 50, p946 * 36);
    v1330.bezierCurveTo(p946 * 54, p946 * 37, p946 * 50, p946 * 52, p946 * 44, p946 * 87);
    v1330.bezierCurveTo(p946 * 40, p946 * 115, p946 * 46, p946 * 142, p946 * 57, p946 * 158);
    v1330.bezierCurveTo(p946 * 76, p946 * 189, p946 * 129, p946 * 182, p946 * 152, p946 * 173);
    v1330.bezierCurveTo(p946 * 186, p946 * 156, p946 * 191, p946 * 106, p946 * 176, p946 * 85);
    v1330.bezierCurveTo(p946 * 159, p946 * 61, p946 * 132, p946 * 62, p946 * 122, p946 * 66);
    v1330.bezierCurveTo(p946 * 108, p946 * 74, p946 * 108, p946 * 89, p946 * 116, p946 * 90);
    v1330.bezierCurveTo(p946 * 123, p946 * 92, p946 * 130, p946 * 93, p946 * 131, p946 * 94);
    v1330.closePath();
    f90(v1330, p948[1], p948[2], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 137, p946 * 137);
    v1330.bezierCurveTo(p946 * 145, p946 * 125, p946 * 138, p946 * 108, p946 * 123, p946 * 104);
    v1330.bezierCurveTo(p946 * 81, p946 * 101, p946 * 88, p946 * 77, p946 * 98, p946 * 65);
    v1330.bezierCurveTo(p946 * 117, p946 * 38, p946 * 138, p946 * 39, p946 * 165, p946 * 52);
    v1330.bezierCurveTo(p946 * 197, p946 * 72, p946 * 207, p946 * 111, p946 * 197, p946 * 140);
    v1330.bezierCurveTo(p946 * 182, p946 * 180, p946 * 161, p946 * 197, p946 * 112, p946 * 194);
    v1330.bezierCurveTo(p946 * 58, p946 * 194, p946 * 37, p946 * 170, p946 * 34, p946 * 142);
    v1330.bezierCurveTo(p946 * 29, p946 * 102, p946 * 40, p946 * 63, p946 * 51, p946 * 45);
    v1330.bezierCurveTo(p946 * 43, p946 * 78, p946 * 41, p946 * 103, p946 * 43, p946 * 122);
    v1330.bezierCurveTo(p946 * 51, p946 * 158, p946 * 63, p946 * 174, p946 * 95, p946 * 179);
    v1330.bezierCurveTo(p946 * 129, p946 * 186, p946 * 169, p946 * 172, p946 * 177, p946 * 144);
    v1330.bezierCurveTo(p946 * 197, p946 * 105, p946 * 172, p946 * 76, p946 * 160, p946 * 71);
    v1330.bezierCurveTo(p946 * 125, p946 * 52, p946 * 111, p946 * 73, p946 * 111, p946 * 81);
    v1330.bezierCurveTo(p946 * 106, p946 * 93, p946 * 140, p946 * 92, p946 * 147, p946 * 107);
    v1330.bezierCurveTo(p946 * 153, p946 * 128, p946 * 140, p946 * 135, p946 * 137, p946 * 139);
    v1330.closePath();
    f90(v1330, p948[3]);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 132, p946 * 95);
    v1330.bezierCurveTo(p946 * 154, p946 * 102, p946 * 154, p946 * 126, p946 * 137, p946 * 139);
    v1330.bezierCurveTo(p946 * 113, p946 * 152, p946 * 89, p946 * 136, p946 * 80, p946 * 121);
    v1330.bezierCurveTo(p946 * 57, p946 * 89, p946 * 69, p946 * 63, p946 * 79, p946 * 52);
    v1330.bezierCurveTo(p946 * 110, p946 * 20, p946 * 139, p946 * 21, p946 * 150, p946 * 25);
    v1330.bezierCurveTo(p946 * 197, p946 * 36, p946 * 221, p946 * 67, p946 * 226, p946 * 90);
    v1330.bezierCurveTo(p946 * 234, p946 * 134, p946 * 214, p946 * 177, p946 * 195, p946 * 197);
    v1330.bezierCurveTo(p946 * 144, p946 * 242, p946 * 79, p946 * 216, p946 * 58, p946 * 206);
    v1330.bezierCurveTo(p946 * 13, p946 * 174, p946 * 20, p946 * 134, p946 * 23, p946 * 107);
    v1330.bezierCurveTo(p946 * 26, p946 * 78, p946 * 33, p946 * 60, p946 * 38, p946 * 43);
    v1330.bezierCurveTo(p946 * 42, p946 * 32, p946 * 47, p946 * 32, p946 * 50, p946 * 36);
    v1330.bezierCurveTo(p946 * 54, p946 * 37, p946 * 50, p946 * 52, p946 * 44, p946 * 87);
    v1330.bezierCurveTo(p946 * 40, p946 * 115, p946 * 46, p946 * 142, p946 * 57, p946 * 158);
    v1330.bezierCurveTo(p946 * 76, p946 * 189, p946 * 129, p946 * 182, p946 * 152, p946 * 173);
    v1330.bezierCurveTo(p946 * 186, p946 * 156, p946 * 191, p946 * 106, p946 * 176, p946 * 85);
    v1330.bezierCurveTo(p946 * 159, p946 * 61, p946 * 132, p946 * 62, p946 * 122, p946 * 66);
    v1330.bezierCurveTo(p946 * 108, p946 * 74, p946 * 108, p946 * 89, p946 * 116, p946 * 90);
    v1330.bezierCurveTo(p946 * 123, p946 * 92, p946 * 130, p946 * 93, p946 * 131, p946 * 94);
    v1330.closePath();
    f90(v1330, undefined, p948[2], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 82, p946 * 63);
    v1330.bezierCurveTo(p946 * 91, p946 * 64, p946 * 96, p946 * 62, p946 * 98, p946 * 53);
    v1330.bezierCurveTo(p946 * 91, p946 * 45, p946 * 85, p946 * 42, p946 * 78, p946 * 41);
    v1330.bezierCurveTo(p946 * 81, p946 * 51, p946 * 82, p946 * 57, p946 * 82, p946 * 63);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 148, p946 * 40);
    v1330.bezierCurveTo(p946 * 140, p946 * 52, p946 * 131, p946 * 51, p946 * 123, p946 * 43);
    v1330.bezierCurveTo(p946 * 123, p946 * 25, p946 * 129, p946 * 17, p946 * 134, p946 * 12);
    v1330.bezierCurveTo(p946 * 138, p946 * 35, p946 * 142, p946 * 31, p946 * 148, p946 * 40);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 189, p946 * 43);
    v1330.bezierCurveTo(p946 * 191, p946 * 54, p946 * 196, p946 * 58, p946 * 205, p946 * 59);
    v1330.bezierCurveTo(p946 * 211, p946 * 42, p946 * 214, p946 * 37, p946 * 216, p946 * 31);
    v1330.bezierCurveTo(p946 * 202, p946 * 34, p946 * 195, p946 * 39, p946 * 190, p946 * 43);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 216, p946 * 98);
    v1330.bezierCurveTo(p946 * 219, p946 * 105, p946 * 225, p946 * 107, p946 * 230, p946 * 109);
    v1330.bezierCurveTo(p946 * 227, p946 * 113, p946 * 221, p946 * 115, p946 * 215, p946 * 115);
    v1330.bezierCurveTo(p946 * 208, p946 * 109, p946 * 211, p946 * 101, p946 * 216, p946 * 98);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 180, p946 * 85);
    v1330.bezierCurveTo(p946 * 193, p946 * 86, p946 * 196, p946 * 98, p946 * 191, p946 * 108);
    v1330.bezierCurveTo(p946 * 179, p946 * 112, p946 * 167, p946 * 113, p946 * 155, p946 * 111);
    v1330.bezierCurveTo(p946 * 169, p946 * 100, p946 * 176, p946 * 96, p946 * 180, p946 * 85);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 96, p946 * 114);
    v1330.bezierCurveTo(p946 * 102, p946 * 109, p946 * 112, p946 * 110, p946 * 114, p946 * 118);
    v1330.bezierCurveTo(p946 * 111, p946 * 134, p946 * 102, p946 * 143, p946 * 95, p946 * 147);
    v1330.bezierCurveTo(p946 * 98, p946 * 123, p946 * 97, p946 * 119, p946 * 96, p946 * 115);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 79, p946 * 92);
    v1330.bezierCurveTo(p946 * 86, p946 * 95, p946 * 89, p946 * 102, p946 * 83, p946 * 111);
    v1330.bezierCurveTo(p946 * 70, p946 * 110, p946 * 61, p946 * 107, p946 * 54, p946 * 100);
    v1330.bezierCurveTo(p946 * 70, p946 * 97, p946 * 70, p946 * 95, p946 * 78, p946 * 92);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 39, p946 * 130);
    v1330.bezierCurveTo(p946 * 37, p946 * 141, p946 * 41, p946 * 143, p946 * 48, p946 * 144);
    v1330.bezierCurveTo(p946 * 54, p946 * 134, p946 * 55, p946 * 131, p946 * 56, p946 * 123);
    v1330.bezierCurveTo(p946 * 47, p946 * 129, p946 * 43, p946 * 129, p946 * 39, p946 * 129);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 113, p946 * 189);
    v1330.bezierCurveTo(p946 * 119, p946 * 201, p946 * 127, p946 * 198, p946 * 134, p946 * 192);
    v1330.bezierCurveTo(p946 * 128, p946 * 175, p946 * 128, p946 * 173, p946 * 128, p946 * 165);
    v1330.bezierCurveTo(p946 * 117, p946 * 176, p946 * 116, p946 * 182, p946 * 113, p946 * 187);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 74, p946 * 154);
    v1330.bezierCurveTo(p946 * 76, p946 * 163, p946 * 76, p946 * 170, p946 * 75, p946 * 177);
    v1330.bezierCurveTo(p946 * 68, p946 * 179, p946 * 66, p946 * 176, p946 * 63, p946 * 171);
    v1330.bezierCurveTo(p946 * 69, p946 * 164, p946 * 72, p946 * 159, p946 * 74, p946 * 154);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 206, p946 * 152);
    v1330.bezierCurveTo(p946 * 198, p946 * 158, p946 * 198, p946 * 166, p946 * 201, p946 * 171);
    v1330.bezierCurveTo(p946 * 209, p946 * 170, p946 * 221, p946 * 170, p946 * 226, p946 * 172);
    v1330.bezierCurveTo(p946 * 219, p946 * 159, p946 * 210, p946 * 155, p946 * 207, p946 * 153);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 181, p946 * 184);
    v1330.bezierCurveTo(p946 * 170, p946 * 184, p946 * 167, p946 * 187, p946 * 163, p946 * 195);
    v1330.bezierCurveTo(p946 * 171, p946 * 207, p946 * 183, p946 * 214, p946 * 191, p946 * 217);
    v1330.bezierCurveTo(p946 * 183, p946 * 204, p946 * 184, p946 * 196, p946 * 181, p946 * 184);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 66, p946 * 199);
    v1330.bezierCurveTo(p946 * 73, p946 * 197, p946 * 78, p946 * 199, p946 * 79, p946 * 206);
    v1330.bezierCurveTo(p946 * 71, p946 * 216, p946 * 67, p946 * 221, p946 * 57, p946 * 223);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 182, p946 * 143);
    v1330.bezierCurveTo(p946 * 183, p946 * 146, p946 * 183, p946 * 149, p946 * 179, p946 * 152);
    v1330.bezierCurveTo(p946 * 174, p946 * 146, p946 * 174, p946 * 146, p946 * 169, p946 * 140);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 32, p946 * 159);
    v1330.bezierCurveTo(p946 * 45, p946 * 160, p946 * 48, p946 * 164, p946 * 45, p946 * 175);
    v1330.bezierCurveTo(p946 * 28, p946 * 183, p946 * 25, p946 * 184, p946 * 19, p946 * 184);
    v1330.bezierCurveTo(p946 * 30, p946 * 170, p946 * 29, p946 * 164, p946 * 31, p946 * 160);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 110, p946 * 214);
    v1330.bezierCurveTo(p946 * 106, p946 * 212, p946 * 104, p946 * 213, p946 * 102, p946 * 218);
    v1330.bezierCurveTo(p946 * 104, p946 * 220, p946 * 107, p946 * 222, p946 * 110, p946 * 224);
    v1330.bezierCurveTo(p946 * 110.5, p946 * 219, p946 * 110.5, p946 * 219, p946 * 111, p946 * 214);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 40, p946 * 52);
    v1330.bezierCurveTo(p946 * 41, p946 * 57, p946 * 40, p946 * 61, p946 * 34, p946 * 60);
    v1330.bezierCurveTo(p946 * 31.5, p946 * 55, p946 * 31.5, p946 * 55, p946 * 29, p946 * 50);
    v1330.bezierCurveTo(p946 * 34, p946 * 50.5, p946 * 34, p946 * 50.5, p946 * 39, p946 * 51);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    v1330.beginPath();
    v1330.lineCap = "round";
    v1330.lineJoin = "round";
    v1330.moveTo(p946 * 31, p946 * 81);
    v1330.bezierCurveTo(p946 * 37, p946 * 84, p946 * 38, p946 * 90, p946 * 34, p946 * 99);
    v1330.bezierCurveTo(p946 * 23, p946 * 97, p946 * 19, p946 * 96, p946 * 16, p946 * 93);
    v1330.bezierCurveTo(p946 * 24, p946 * 88, p946 * 28, p946 * 85, p946 * 30, p946 * 81);
    v1330.closePath();
    f90(v1330, p948[4], p948[5], p946 * 5);
    return v1329;
  }
  function f219(p949, p950, p951) {
    var v1331 = document.createElement("canvas");
    var v1332 = v1331.getContext("2d");
    v1331.width = p949 * 300;
    v1331.height = p949 * 300;
    v1332.globalAlpha = p950 ? 0.5 : 1;
    v1332.save();
    v1332.translate(p949 * 150, p949 * 160);
    v1332.rotate(6.28);
    f88(v1332, 6, p949 * 146, p949 * 30);
    v1332.restore();
    f90(v1332, p951[0]);
    v1332.globalAlpha = 1;
    v1332.save();
    v1332.translate(p949 * 150, p949 * 150);
    v1332.rotate(6.28);
    f88(v1332, 6, p949 * 146, p949 * 30);
    v1332.restore();
    f90(v1332, p951[1], p951[2], p949 * 8);
    v1332.save();
    v1332.translate(p949 * 150, p949 * 150);
    v1332.rotate(0);
    f88(v1332, 6, p949 * 105, p949 * 30);
    v1332.restore();
    f90(v1332, p951[3], p951[3], p949 * 8);
    v1332.save();
    v1332.translate(p949 * 150, p949 * 150);
    v1332.rotate(0);
    f88(v1332, 6, p949 * 66, p949 * 30);
    v1332.restore();
    f90(v1332, p951[4], p951[2], p949 * 8);
    v1332.save();
    v1332.translate(p949 * 150, p949 * 150);
    v1332.rotate(0);
    f88(v1332, 6, p949 * 31, p949 * 30);
    v1332.restore();
    f90(v1332, p951[5], p951[6], p949 * 8);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p949 * 150, p949 * 207);
    v1332.bezierCurveTo(p949 * 150, p949 * 151, p949 * 150, p949 * 101, p949 * 150, p949 * 94);
    v1332.closePath();
    f90(v1332, undefined, p951[2], p949 * 8);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p949 * 118, p949 * 100);
    v1332.bezierCurveTo(p949 * 118, p949 * 205, p949 * 118, p949 * 207, p949 * 118, p949 * 200);
    v1332.closePath();
    f90(v1332, undefined, p951[2], p949 * 8);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p949 * 183, p949 * 100);
    v1332.bezierCurveTo(p949 * 183, p949 * 203, p949 * 183, p949 * 203, p949 * 183, p949 * 200);
    v1332.closePath();
    f90(v1332, undefined, p951[2], p949 * 8);
    return v1331;
  }
  function f220(p952, p953, p954) {
    var v1333 = document.createElement("canvas");
    var v1334 = v1333.getContext("2d");
    v1333.width = p952 * 104;
    v1333.height = p952 * 117;
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 4, p952 * 90);
    v1334.bezierCurveTo(p952 * 20, p952 * 99.5, p952 * 20, p952 * 99.5, p952 * 36, p952 * 109);
    v1334.bezierCurveTo(p952 * 67, p952 * 92, p952 * 67, p952 * 92, p952 * 98, p952 * 75);
    v1334.bezierCurveTo(p952 * 91, p952 * 27, p952 * 91, p952 * 27, p952 * 91, p952 * 28);
    v1334.bezierCurveTo(p952 * 72.5, p952 * 16, p952 * 72.5, p952 * 16, p952 * 54, p952 * 4);
    v1334.bezierCurveTo(p952 * 33.5, p952 * 10, p952 * 33.5, p952 * 10, p952 * 13, p952 * 16);
    v1334.closePath();
    f90(v1334, p954[0]);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 6, p952 * 76);
    v1334.bezierCurveTo(p952 * 13.5, p952 * 51.5, p952 * 13.5, p952 * 51.5, p952 * 21, p952 * 27);
    v1334.bezierCurveTo(p952 * 37.5, p952 * 17, p952 * 37.5, p952 * 17, p952 * 54, p952 * 7);
    v1334.bezierCurveTo(p952 * 33.5, p952 * 12.5, p952 * 33.5, p952 * 12.5, p952 * 13, p952 * 18);
    v1334.closePath();
    f90(v1334, p954[1]);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 24, p952 * 62);
    v1334.bezierCurveTo(p952 * 28.5, p952 * 53, p952 * 28.5, p952 * 53, p952 * 33, p952 * 44);
    v1334.bezierCurveTo(p952 * 41.5, p952 * 41, p952 * 41.5, p952 * 41, p952 * 50, p952 * 38);
    v1334.bezierCurveTo(p952 * 52.5, p952 * 35, p952 * 52.5, p952 * 35, p952 * 55, p952 * 32);
    v1334.bezierCurveTo(p952 * 52, p952 * 30, p952 * 52, p952 * 30, p952 * 49, p952 * 28);
    v1334.bezierCurveTo(p952 * 38, p952 * 31.5, p952 * 38, p952 * 31.5, p952 * 27, p952 * 35);
    v1334.closePath();
    f90(v1334, p954[1]);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 36, p952 * 107);
    v1334.bezierCurveTo(p952 * 66, p952 * 90.5, p952 * 66, p952 * 90.5, p952 * 96, p952 * 74);
    v1334.bezierCurveTo(p952 * 93, p952 * 52.5, p952 * 93, p952 * 52.5, p952 * 90, p952 * 31);
    v1334.bezierCurveTo(p952 * 87, p952 * 48, p952 * 87, p952 * 48, p952 * 84, p952 * 65);
    v1334.closePath();
    f90(v1334, p954[2]);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 1, p952 * 89);
    v1334.bezierCurveTo(p952 * 18, p952 * 100, p952 * 34, p952 * 110, p952 * 35, p952 * 111);
    v1334.bezierCurveTo(p952 * 67, p952 * 93, p952 * 67, p952 * 93, p952 * 99, p952 * 75);
    v1334.bezierCurveTo(p952 * 100, p952 * 78.5, p952 * 100, p952 * 78.5, p952 * 101, p952 * 82);
    v1334.bezierCurveTo(p952 * 68, p952 * 99, p952 * 68, p952 * 99, p952 * 35, p952 * 116);
    v1334.bezierCurveTo(p952 * 18, p952 * 106.5, p952 * 18, p952 * 106.5, p952 * 1, p952 * 97);
    v1334.closePath();
    f90(v1334, p954[3]);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 36, p952 * 107);
    v1334.bezierCurveTo(p952 * 66.5, p952 * 91.5, p952 * 66.5, p952 * 91.5, p952 * 97, p952 * 76);
    v1334.bezierCurveTo(p952 * 94.5, p952 * 52, p952 * 94.5, p952 * 52, p952 * 92, p952 * 28);
    v1334.bezierCurveTo(p952 * 73, p952 * 15.5, p952 * 73, p952 * 15.5, p952 * 54, p952 * 3);
    v1334.bezierCurveTo(p952 * 33, p952 * 9.5, p952 * 33, p952 * 9.5, p952 * 12, p952 * 16);
    v1334.bezierCurveTo(p952 * 8, p952 * 53, p952 * 8, p952 * 53, p952 * 4, p952 * 90);
    v1334.bezierCurveTo(p952 * 18.5, p952 * 99, p952 * 18.5, p952 * 99, p952 * 33, p952 * 108);
    v1334.closePath();
    f90(v1334, vVVVUndefined824, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 22, p952 * 71);
    v1334.bezierCurveTo(p952 * 30, p952 * 76.5, p952 * 30, p952 * 76.5, p952 * 38, p952 * 82);
    v1334.bezierCurveTo(p952 * 53, p952 * 72, p952 * 53, p952 * 72, p952 * 68, p952 * 62);
    v1334.bezierCurveTo(p952 * 68, p952 * 52, p952 * 68, p952 * 52, p952 * 68, p952 * 42);
    v1334.bezierCurveTo(p952 * 59.5, p952 * 35.5, p952 * 59.5, p952 * 35.5, p952 * 51, p952 * 29);
    v1334.bezierCurveTo(p952 * 39.5, p952 * 32, p952 * 39.5, p952 * 32, p952 * 28, p952 * 35);
    v1334.bezierCurveTo(p952 * 25, p952 * 52, p952 * 25, p952 * 52, p952 * 22, p952 * 69);
    v1334.closePath();
    f90(v1334, undefined, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 5, p952 * 89);
    v1334.bezierCurveTo(p952 * 20, p952 * 73, p952 * 12.5, p952 * 80.5, p952 * 20, p952 * 72);
    v1334.closePath();
    f90(v1334, vVVVVUndefined823, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 35, p952 * 102);
    v1334.bezierCurveTo(p952 * 36, p952 * 92.5, p952 * 36, p952 * 92.5, p952 * 37, p952 * 83);
    v1334.closePath();
    f90(v1334, vVVUndefined82, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 68, p952 * 62);
    v1334.bezierCurveTo(p952 * 81, p952 * 67.5, p952 * 81, p952 * 67.5, p952 * 94, p952 * 73);
    v1334.closePath();
    f90(v1334, vVVUndefined132, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 70, p952 * 41);
    v1334.bezierCurveTo(p952 * 80, p952 * 35.5, p952 * 80, p952 * 35.5, p952 * 90, p952 * 30);
    v1334.closePath();
    f90(v1334, undefined, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 28, p952 * 33);
    v1334.bezierCurveTo(p952 * 21.5, p952 * 26.5, p952 * 21.5, p952 * 26.5, p952 * 15, p952 * 20);
    v1334.closePath();
    f90(v1334, undefined, p954[4], p952 * 6);
    v1334.beginPath();
    v1334.lineCap = "round";
    v1334.lineJoin = "round";
    v1334.moveTo(p952 * 51, p952 * 28);
    v1334.bezierCurveTo(p952 * 53, p952 * 17, p952 * 53, p952 * 17, p952 * 55, p952 * 6);
    v1334.closePath();
    f90(v1334, undefined, p954[4], p952 * 6);
    return v1333;
  }
  function f221(p955, p956, p957) {
    var v1335 = document.createElement("canvas");
    var v1336 = v1335.getContext("2d");
    v1335.width = p955 * 465;
    v1335.height = p955 * 405;
    v1336.globalAlpha = 1;
    v1336.translate(p955 * 6, p955 * 0);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 39.000030517578125, p955 * 162.03977966308594);
    v1336.bezierCurveTo(p955 * 125.00003051757812, p955 * 84.03977966308594, p955 * 108.50003051757812, p955 * 115.03977966308594, p955 * 178.00003051757812, p955 * 68.03977966308594);
    v1336.bezierCurveTo(p955 * 299.0000305175781, p955 * 146.53977966308594, p955 * 299.0000305175781, p955 * 146.53977966308594, p955 * 420.0000305175781, p955 * 225.03977966308594);
    v1336.bezierCurveTo(p955 * 400.0000305175781, p955 * 288.53977966308594, p955 * 400.0000305175781, p955 * 288.53977966308594, p955 * 380.0000305175781, p955 * 352.03977966308594);
    v1336.bezierCurveTo(p955 * 216.50003051757812, p955 * 345.53977966308594, p955 * 216.50003051757812, p955 * 345.53977966308594, p955 * 53.000030517578125, p955 * 339.03977966308594);
    v1336.closePath();
    f90(v1336, p957[3]);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 23.000030517578125, p955 * 306.94886779785156);
    v1336.bezierCurveTo(p955 * 5.000030517578125, p955 * 275.94886779785156, p955 * 6.000030517578125, p955 * 201.94886779785156, p955 * 14.000030517578125, p955 * 150.94886779785156);
    v1336.bezierCurveTo(p955 * 40.000030517578125, p955 * 34.94886779785156, p955 * 157.00003051757812, p955 * 14.948867797851562, p955 * 199.00003051757812, p955 * 11.948867797851562);
    v1336.bezierCurveTo(p955 * 331.0000305175781, p955 * 0.9488677978515625, p955 * 409.0000305175781, p955 * 61.94886779785156, p955 * 428.0000305175781, p955 * 133.94886779785156);
    v1336.bezierCurveTo(p955 * 445.0000305175781, p955 * 207.94886779785156, p955 * 439.0000305175781, p955 * 274.94886779785156, p955 * 426.0000305175781, p955 * 342.94886779785156);
    v1336.bezierCurveTo(p955 * 355.0000305175781, p955 * 207.94886779785156, p955 * 345.0000305175781, p955 * 208.94886779785156, p955 * 333.0000305175781, p955 * 202.94886779785156);
    v1336.bezierCurveTo(p955 * 262.0000305175781, p955 * 143.94886779785156, p955 * 236.00003051757812, p955 * 148.94886779785156, p955 * 189.00003051757812, p955 * 162.94886779785156);
    v1336.bezierCurveTo(p955 * 82.00003051757812, p955 * 190.94886779785156, p955 * 78.00003051757812, p955 * 235.94886779785156, p955 * 62.000030517578125, p955 * 279.94886779785156);
    v1336.closePath();
    f90(v1336, p957[0], p957[1], p955 * 20);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 17.000030517578125, p955 * 149.94886779785156);
    v1336.bezierCurveTo(p955 * 76.00003051757812, p955 * 67.94886779785156, p955 * 177.00003051757812, p955 * 40.94886779785156, p955 * 232.00003051757812, p955 * 45.94886779785156);
    v1336.bezierCurveTo(p955 * 316.0000305175781, p955 * 46.94886779785156, p955 * 359.0000305175781, p955 * 74.94886779785156, p955 * 428.0000305175781, p955 * 145.94886779785156);
    v1336.bezierCurveTo(p955 * 414.0000305175781, p955 * 73.94886779785156, p955 * 386.0000305175781, p955 * 68.94886779785156, p955 * 359.0000305175781, p955 * 43.94886779785156);
    v1336.bezierCurveTo(p955 * 295.0000305175781, p955 * 5.9488677978515625, p955 * 239.00003051757812, p955 * 10.948867797851562, p955 * 207.00003051757812, p955 * 10.948867797851562);
    v1336.bezierCurveTo(p955 * 121.00003051757812, p955 * 20.948867797851562, p955 * 104.00003051757812, p955 * 34.94886779785156, p955 * 45.000030517578125, p955 * 84.94886779785156);
    v1336.bezierCurveTo(p955 * 14.000030517578125, p955 * 128.94886779785156, p955 * 18.000030517578125, p955 * 142.94886779785156, p955 * 16.000030517578125, p955 * 151.94886779785156);
    v1336.closePath();
    f90(v1336, p957[2]);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 23.000030517578125, p955 * 306.94886779785156);
    v1336.bezierCurveTo(p955 * 5.000030517578125, p955 * 275.94886779785156, p955 * 6.000030517578125, p955 * 201.94886779785156, p955 * 14.000030517578125, p955 * 150.94886779785156);
    v1336.bezierCurveTo(p955 * 40.000030517578125, p955 * 34.94886779785156, p955 * 157.00003051757812, p955 * 14.948867797851562, p955 * 199.00003051757812, p955 * 11.948867797851562);
    v1336.bezierCurveTo(p955 * 331.0000305175781, p955 * 0.9488677978515625, p955 * 409.0000305175781, p955 * 61.94886779785156, p955 * 428.0000305175781, p955 * 133.94886779785156);
    v1336.bezierCurveTo(p955 * 445.0000305175781, p955 * 207.94886779785156, p955 * 439.0000305175781, p955 * 274.94886779785156, p955 * 426.0000305175781, p955 * 342.94886779785156);
    v1336.bezierCurveTo(p955 * 355.0000305175781, p955 * 207.94886779785156, p955 * 345.0000305175781, p955 * 208.94886779785156, p955 * 333.0000305175781, p955 * 202.94886779785156);
    v1336.bezierCurveTo(p955 * 262.0000305175781, p955 * 143.94886779785156, p955 * 236.00003051757812, p955 * 148.94886779785156, p955 * 189.00003051757812, p955 * 162.94886779785156);
    v1336.bezierCurveTo(p955 * 82.00003051757812, p955 * 190.94886779785156, p955 * 78.00003051757812, p955 * 235.94886779785156, p955 * 62.000030517578125, p955 * 279.94886779785156);
    v1336.closePath();
    f90(v1336, undefined, p957[1], p955 * 16);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 60.000030517578125, p955 * 288.03977966308594);
    v1336.bezierCurveTo(p955 * 183.00003051757812, p955 * 320.03977966308594, p955 * 342.0000305175781, p955 * 306.03977966308594, p955 * 399.0000305175781, p955 * 286.03977966308594);
    v1336.bezierCurveTo(p955 * 420.0000305175781, p955 * 345.03977966308594, p955 * 410.0000305175781, p955 * 335.03977966308594, p955 * 415.0000305175781, p955 * 362.03977966308594);
    v1336.bezierCurveTo(p955 * 351.0000305175781, p955 * 384.03977966308594, p955 * 299.0000305175781, p955 * 389.03977966308594, p955 * 215.00003051757812, p955 * 391.03977966308594);
    v1336.bezierCurveTo(p955 * 128.00003051757812, p955 * 388.03977966308594, p955 * 69.00003051757812, p955 * 373.03977966308594, p955 * 39.000030517578125, p955 * 359.03977966308594);
    v1336.closePath();
    f90(v1336, p957[0], p957[1], p955 * 13);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 47.000030517578125, p955 * 327.03977966308594);
    v1336.bezierCurveTo(p955 * 203.00003051757812, p955 * 377.03977966308594, p955 * 331.0000305175781, p955 * 349.03977966308594, p955 * 410.0000305175781, p955 * 330.03977966308594);
    v1336.closePath();
    f90(v1336, p957[0], p957[1], p955 * 20);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 9.000030517578125, p955 * 339.1306915283203);
    v1336.bezierCurveTo(p955 * 2.000030517578125, p955 * 280.1306915283203, p955 * 30.000030517578125, p955 * 219.1306915283203, p955 * 85.00003051757812, p955 * 167.1306915283203);
    v1336.bezierCurveTo(p955 * 174.00003051757812, p955 * 82.13069152832031, p955 * 241.00003051757812, p955 * 101.13069152832031, p955 * 284.0000305175781, p955 * 115.13069152832031);
    v1336.bezierCurveTo(p955 * 333.0000305175781, p955 * 134.1306915283203, p955 * 376.0000305175781, p955 * 177.1306915283203, p955 * 410.0000305175781, p955 * 247.1306915283203);
    v1336.bezierCurveTo(p955 * 439.0000305175781, p955 * 300.1306915283203, p955 * 442.0000305175781, p955 * 346.1306915283203, p955 * 430.0000305175781, p955 * 363.1306915283203);
    v1336.bezierCurveTo(p955 * 418.0000305175781, p955 * 366.1306915283203, p955 * 395.0000305175781, p955 * 295.1306915283203, p955 * 355.0000305175781, p955 * 223.1306915283203);
    v1336.bezierCurveTo(p955 * 299.0000305175781, p955 * 156.1306915283203, p955 * 262.0000305175781, p955 * 155.1306915283203, p955 * 215.00003051757812, p955 * 159.1306915283203);
    v1336.bezierCurveTo(p955 * 133.00003051757812, p955 * 171.1306915283203, p955 * 120.00003051757812, p955 * 193.1306915283203, p955 * 96.00003051757812, p955 * 221.1306915283203);
    v1336.bezierCurveTo(p955 * 49.000030517578125, p955 * 262.1306915283203, p955 * 47.000030517578125, p955 * 306.1306915283203, p955 * 38.000030517578125, p955 * 336.1306915283203);
    v1336.bezierCurveTo(p955 * 30.000030517578125, p955 * 349.1306915283203, p955 * 30.000030517578125, p955 * 349.1306915283203, p955 * 22.000030517578125, p955 * 362.1306915283203);
    v1336.closePath();
    f90(v1336, p957[2], p957[1], p955 * 20);
    v1336.beginPath();
    v1336.lineCap = "round";
    v1336.lineJoin = "round";
    v1336.moveTo(p955 * 228.00003051757812, p955 * 128.03977966308594);
    v1336.bezierCurveTo(p955 * 315.0000305175781, p955 * 131.03977966308594, p955 * 349.0000305175781, p955 * 178.03977966308594, p955 * 386.0000305175781, p955 * 234.03977966308594);
    v1336.bezierCurveTo(p955 * 444.0000305175781, p955 * 329.03977966308594, p955 * 446.0000305175781, p955 * 354.03977966308594, p955 * 427.0000305175781, p955 * 373.03977966308594);
    v1336.bezierCurveTo(p955 * 389.0000305175781, p955 * 389.03977966308594, p955 * 399.0000305175781, p955 * 329.03977966308594, p955 * 361.0000305175781, p955 * 277.03977966308594);
    v1336.bezierCurveTo(p955 * 306.0000305175781, p955 * 191.03977966308594, p955 * 266.0000305175781, p955 * 183.03977966308594, p955 * 220.00003051757812, p955 * 181.03977966308594);
    v1336.bezierCurveTo(p955 * 138.00003051757812, p955 * 184.03977966308594, p955 * 123.00003051757812, p955 * 212.03977966308594, p955 * 89.00003051757812, p955 * 271.03977966308594);
    v1336.bezierCurveTo(p955 * 52.000030517578125, p955 * 349.03977966308594, p955 * 68.00003051757812, p955 * 364.03977966308594, p955 * 33.000030517578125, p955 * 369.03977966308594);
    v1336.bezierCurveTo(p955 * 6.000030517578125, p955 * 366.03977966308594, p955 * 5.000030517578125, p955 * 341.03977966308594, p955 * 26.000030517578125, p955 * 288.03977966308594);
    v1336.bezierCurveTo(p955 * 60.000030517578125, p955 * 207.03977966308594, p955 * 100.00003051757812, p955 * 180.03977966308594, p955 * 113.00003051757812, p955 * 170.03977966308594);
    v1336.bezierCurveTo(p955 * 159.00003051757812, p955 * 132.03977966308594, p955 * 196.00003051757812, p955 * 133.03977966308594, p955 * 226.00003051757812, p955 * 129.03977966308594);
    v1336.closePath();
    f90(v1336, p957[0], p957[1], p955 * 20);
    return v1335;
  }
  function f222(p958, p959) {
    var v1337 = document.createElement("canvas");
    var v1338 = v1337.getContext("2d");
    v1337.width = p958 * 120;
    v1337.height = p958 * 300;
    v1338.translate(p958 * -200, p958 * -40);
    v1338.beginPath();
    v1338.lineCap = "round";
    v1338.lineJoin = "round";
    v1338.moveTo(p958 * 344, p958 * 18.40625);
    v1338.bezierCurveTo(p958 * 345, p958 * 361.40625, p958 * 344, p958 * 191.40625, p958 * 344, p958 * 364.40625);
    v1338.bezierCurveTo(p958 * 261, p958 * 275.40625, p958 * 274, p958 * 259.40625, p958 * 229, p958 * 213.40625);
    v1338.bezierCurveTo(p958 * 199, p958 * 187.40625, p958 * 222, p958 * 133.40625, p958 * 273, p958 * 100.40625);
    v1338.bezierCurveTo(p958 * 321, p958 * 71.40625, p958 * 327, p958 * 34.40625, p958 * 344, p958 * 18.40625);
    v1338.closePath();
    f90(v1338, p959[0]);
    v1338.beginPath();
    v1338.lineCap = "round";
    v1338.lineJoin = "round";
    v1338.moveTo(p958 * 335, p958 * 38.072906494140625);
    v1338.bezierCurveTo(p958 * 307, p958 * 62.072906494140625, p958 * 291, p958 * 60.072906494140625, p958 * 262, p958 * 68.07290649414062);
    v1338.bezierCurveTo(p958 * 223, p958 * 80.07290649414062, p958 * 225, p958 * 111.07290649414062, p958 * 264, p958 * 139.07290649414062);
    v1338.closePath();
    f90(v1338, p959[0]);
    return v1337;
  }
  function f223(p960, p961) {
    var v1339 = document.createElement("canvas");
    var v1340 = v1339.getContext("2d");
    v1339.width = p960 * 120;
    v1339.height = p960 * 320;
    v1340.translate(p960 * -60, p960 * -15);
    v1340.beginPath();
    v1340.lineCap = "round";
    v1340.lineJoin = "round";
    v1340.moveTo(p960 * 188.5, p960 * 3.953125);
    v1340.bezierCurveTo(p960 * 188.5, p960 * 171.453125, p960 * 188.5, p960 * 171.453125, p960 * 188.5, p960 * 338.953125);
    v1340.bezierCurveTo(p960 * 162.5, p960 * 268.953125, p960 * 145.5, p960 * 265.953125, p960 * 116.5, p960 * 244.953125);
    v1340.bezierCurveTo(p960 * 67.5, p960 * 204.953125, p960 * 87.5, p960 * 160.953125, p960 * 113.5, p960 * 125.953125);
    v1340.bezierCurveTo(p960 * 141.5, p960 * 90.953125, p960 * 176.5, p960 * 56.953125, p960 * 188.5, p960 * 3.953125);
    v1340.closePath();
    f90(v1340, p961[0]);
    return v1339;
  }
  function f224(p962, p963, p964, p965) {
    var v1341 = document.createElement("canvas");
    var v1342 = v1341.getContext("2d");
    v1341.width = p962 * 170;
    v1341.height = p962 * 200;
    v1342.translate(p962 * 5, p962 * 15);
    if (p965 == 1) {
      v1342.translate(0, p962 * -5);
      f93(v1342, p962 * 77.00003051757812, p962 * 104.49432373046875, p962 * 71.84010022264724);
      f90(v1342, p964[1], p964[5], p962 * 20);
      f93(v1342, p962 * 77.00003051757812, p962 * 104.22160339355469, p962 * 61.554853586049575);
      f90(v1342, p964[1], p964[5], p962 * 20);
      v1342.save();
      v1342.translate(p962 * 77.00003051757812, p962 * 31.267044067382812);
      f87(v1342, p962 * -6, p962 * -12.5, p962 * 12, p962 * 25, p962 * 10);
      v1342.restore();
      f90(v1342, p964[1], p964[5], p962 * 20);
      v1342.save();
      v1342.translate(p962 * 77.00003051757812, p962 * 13.267044067382812);
      f87(v1342, p962 * -15, p962 * -10.5, p962 * 30, p962 * 21, p962 * 10);
      v1342.restore();
      f90(v1342, p964[1], p964[5], p962 * 20);
    }
    f93(v1342, p962 * 77.00003051757812, p962 * 104.49432373046875, p962 * 71.84010022264724);
    f90(v1342, p964[1], p964[2], p962 * 7);
    f93(v1342, p962 * 77.00003051757812, p962 * 104.22160339355469, p962 * 61.554853586049575);
    f90(v1342, p964[1], p964[2], p962 * 7);
    v1342.beginPath();
    v1342.lineCap = "round";
    v1342.lineJoin = "round";
    v1342.moveTo(p962 * 18.000030517578125, p962 * 105.85795593261719);
    v1342.bezierCurveTo(p962 * 134.00003051757812, p962 * 104.85795593261719, p962 * 77.00003051757812, p962 * 104.85795593261719, p962 * 136.00003051757812, p962 * 103.85795593261719);
    v1342.closePath();
    f90(v1342, p964[1], p964[2], p962 * 8);
    f93(v1342, p962 * 77.00003051757812, p962 * 104.6761474609375, p962 * 32.55764119219941);
    f90(v1342, p964[1], p964[2], p962 * 8);
    v1342.beginPath();
    v1342.lineCap = "round";
    v1342.lineJoin = "round";
    v1342.moveTo(p962 * 78.00003051757812, p962 * 112.03977966308594);
    v1342.bezierCurveTo(p962 * 78.00003051757812, p962 * 87.03977966308594, p962 * 78.00003051757812, p962 * 87.03977966308594, p962 * 78.00003051757812, p962 * 62.03977966308594);
    v1342.closePath();
    f90(v1342, p964[3], p964[2], p962 * 8);
    v1342.beginPath();
    v1342.lineCap = "round";
    v1342.lineJoin = "round";
    v1342.moveTo(p962 * 78.00003051757812, p962 * 48.03977966308594);
    v1342.bezierCurveTo(p962 * 82.00003051757812, p962 * 55.53977966308594, p962 * 82.00003051757812, p962 * 55.53977966308594, p962 * 86.00003051757812, p962 * 63.03977966308594);
    v1342.bezierCurveTo(p962 * 78.00003051757812, p962 * 63.03977966308594, p962 * 78.00003051757812, p962 * 63.03977966308594, p962 * 70.00003051757812, p962 * 63.03977966308594);
    v1342.closePath();
    f90(v1342, p964[3], p964[2], p962 * 4);
    v1342.beginPath();
    v1342.lineCap = "round";
    v1342.lineJoin = "round";
    v1342.moveTo(p962 * 80.00003051757812, p962 * 111.6761474609375);
    v1342.bezierCurveTo(p962 * 95.00003051757812, p962 * 97.1761474609375, p962 * 95.00003051757812, p962 * 97.1761474609375, p962 * 110.00003051757812, p962 * 82.6761474609375);
    v1342.closePath();
    f90(v1342, p964[3], p964[2], p962 * 8);
    v1342.beginPath();
    v1342.lineCap = "round";
    v1342.lineJoin = "round";
    v1342.moveTo(p962 * 107.00003051757812, p962 * 76.6761474609375);
    v1342.bezierCurveTo(p962 * 111.50003051757812, p962 * 82.6761474609375, p962 * 111.50003051757812, p962 * 82.6761474609375, p962 * 116.00003051757812, p962 * 88.6761474609375);
    v1342.bezierCurveTo(p962 * 118.50003051757812, p962 * 81.6761474609375, p962 * 118.50003051757812, p962 * 81.6761474609375, p962 * 121.00003051757812, p962 * 74.6761474609375);
    v1342.closePath();
    f90(v1342, p964[3], p964[2], p962 * 4);
    f93(v1342, p962 * 77.00003051757812, p962 * 105.03977966308594, p962 * 15.556349186104045);
    f90(v1342, p964[3], p964[2], p962 * 4);
    v1342.save();
    v1342.translate(p962 * 77.00003051757812, p962 * 31.267044067382812);
    v1342.rotate(0);
    f87(v1342, p962 * -6, p962 * -12.5, p962 * 12, p962 * 25, p962 * 10);
    v1342.restore();
    f90(v1342, p964[1], p964[2], p962 * 7);
    v1342.save();
    v1342.translate(p962 * 77.00003051757812, p962 * 13.267044067382812);
    v1342.rotate(0);
    f87(v1342, p962 * -15, p962 * -10.5, p962 * 30, p962 * 21, p962 * 10);
    v1342.restore();
    f90(v1342, p964[1], p964[2], p962 * 7);
    return v1341;
  }
  function f225(p966, p967, p968) {
    var v1343 = document.createElement("canvas");
    var v1344 = v1343.getContext("2d");
    v1343.width = p966 * 88;
    v1343.height = p966 * 88;
    v1344.save();
    v1344.translate(p966 * 44, p966 * 44);
    v1344.rotate(0.52);
    f88(v1344, 6, p966 * 43, p966 * 10);
    v1344.restore();
    f90(v1344, p968[0], p968[1], p966 * 3);
    return v1343;
  }
  function f226(p969, p970, p971) {
    var v1345 = document.createElement("canvas");
    var v1346 = v1345.getContext("2d");
    v1345.width = p969 * 372;
    v1345.height = p969 * 358;
    v1346.translate(p969 * 0, p969 * 10);
    v1346.globalAlpha = p970 ? 0.2 : 1;
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 247.00003051757812, p969 * 115.76704406738281);
    v1346.bezierCurveTo(p969 * 305.0000305175781, p969 * 124.76704406738281, p969 * 335.0000305175781, p969 * 112.76704406738281, p969 * 359.0000305175781, p969 * 93.76704406738281);
    v1346.bezierCurveTo(p969 * 359.5000305175781, p969 * 113.26704406738281, p969 * 359.5000305175781, p969 * 113.26704406738281, p969 * 360.0000305175781, p969 * 132.7670440673828);
    v1346.bezierCurveTo(p969 * 339.0000305175781, p969 * 177.7670440673828, p969 * 281.0000305175781, p969 * 178.7670440673828, p969 * 243.00003051757812, p969 * 183.7670440673828);
    v1346.bezierCurveTo(p969 * 214.50003051757812, p969 * 214.2670440673828, p969 * 214.50003051757812, p969 * 214.2670440673828, p969 * 186.00003051757812, p969 * 244.7670440673828);
    v1346.bezierCurveTo(p969 * 155.00003051757812, p969 * 214.2670440673828, p969 * 155.00003051757812, p969 * 214.2670440673828, p969 * 124.00003051757812, p969 * 183.7670440673828);
    v1346.bezierCurveTo(p969 * 51.000030517578125, p969 * 180.7670440673828, p969 * 21.000030517578125, p969 * 161.7670440673828, p969 * 9.000030517578125, p969 * 129.7670440673828);
    v1346.bezierCurveTo(p969 * 8.500030517578125, p969 * 110.76704406738281, p969 * 8.500030517578125, p969 * 110.76704406738281, p969 * 8.000030517578125, p969 * 91.76704406738281);
    v1346.bezierCurveTo(p969 * 31.000030517578125, p969 * 112.76704406738281, p969 * 87.00003051757812, p969 * 119.76704406738281, p969 * 116.00003051757812, p969 * 117.76704406738281);
    v1346.bezierCurveTo(p969 * 175.00003051757812, p969 * 18.767044067382812, p969 * 170.00003051757812, p969 * 23.767044067382812, p969 * 181.00003051757812, p969 * 14.767044067382812);
    v1346.bezierCurveTo(p969 * 199.00003051757812, p969 * 34.76704406738281, p969 * 203.00003051757812, p969 * 54.76704406738281, p969 * 247.00003051757812, p969 * 115.76704406738281);
    v1346.closePath();
    f90(v1346, p971[0], p971[0], p969 * 10);
    v1346.translate(p969 * 0, p969 * -10);
    v1346.globalAlpha = 1;
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 107.00003051757812, p969 * 54.13069152832031);
    v1346.bezierCurveTo(p969 * 106.50003051757812, p969 * 38.63069152832031, p969 * 106.50003051757812, p969 * 38.63069152832031, p969 * 106.00003051757812, p969 * 23.130691528320312);
    v1346.bezierCurveTo(p969 * 121.50003051757812, p969 * 38.13069152832031, p969 * 121.50003051757812, p969 * 38.13069152832031, p969 * 137.00003051757812, p969 * 53.13069152832031);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 233.00003051757812, p969 * 53.6761474609375);
    v1346.bezierCurveTo(p969 * 247.00003051757812, p969 * 37.1761474609375, p969 * 247.00003051757812, p969 * 37.1761474609375, p969 * 261.0000305175781, p969 * 20.6761474609375);
    v1346.bezierCurveTo(p969 * 261.0000305175781, p969 * 36.1761474609375, p969 * 261.0000305175781, p969 * 36.1761474609375, p969 * 261.0000305175781, p969 * 51.6761474609375);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 293.0000305175781, p969 * 54.403411865234375);
    v1346.bezierCurveTo(p969 * 300.0000305175781, p969 * 49.903411865234375, p969 * 300.0000305175781, p969 * 49.903411865234375, p969 * 307.0000305175781, p969 * 45.403411865234375);
    v1346.bezierCurveTo(p969 * 307.0000305175781, p969 * 49.903411865234375, p969 * 307.0000305175781, p969 * 49.903411865234375, p969 * 307.0000305175781, p969 * 54.403411865234375);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 77.00003051757812, p969 * 54.403411865234375);
    v1346.bezierCurveTo(p969 * 70.00003051757812, p969 * 50.403411865234375, p969 * 70.00003051757812, p969 * 50.403411865234375, p969 * 63.000030517578125, p969 * 46.403411865234375);
    v1346.bezierCurveTo(p969 * 62.500030517578125, p969 * 50.903411865234375, p969 * 62.500030517578125, p969 * 50.903411865234375, p969 * 62.000030517578125, p969 * 55.403411865234375);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 58.000030517578125, p969 * 122.3125);
    v1346.bezierCurveTo(p969 * 59.500030517578125, p969 * 97.3125, p969 * 59.500030517578125, p969 * 97.3125, p969 * 61.000030517578125, p969 * 72.3125);
    v1346.bezierCurveTo(p969 * 91.00003051757812, p969 * 89.3125, p969 * 91.00003051757812, p969 * 89.3125, p969 * 121.00003051757812, p969 * 106.3125);
    v1346.closePath();
    f90(v1346, p971[1], p971[1], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 310.0000305175781, p969 * 127.3125);
    v1346.bezierCurveTo(p969 * 308.0000305175781, p969 * 98.3125, p969 * 308.0000305175781, p969 * 98.3125, p969 * 306.0000305175781, p969 * 69.3125);
    v1346.bezierCurveTo(p969 * 274.5000305175781, p969 * 88.8125, p969 * 274.5000305175781, p969 * 88.8125, p969 * 243.00003051757812, p969 * 108.3125);
    v1346.closePath();
    f90(v1346, p971[1], p971[1], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 226.00003051757812, p969 * 87.85795593261719);
    v1346.bezierCurveTo(p969 * 243.50003051757812, p969 * 66.85795593261719, p969 * 243.50003051757812, p969 * 66.85795593261719, p969 * 261.0000305175781, p969 * 45.85795593261719);
    v1346.bezierCurveTo(p969 * 265.0000305175781, p969 * 83.85795593261719, p969 * 265.0000305175781, p969 * 83.85795593261719, p969 * 269.0000305175781, p969 * 121.85795593261719);
    v1346.bezierCurveTo(p969 * 235.00003051757812, p969 * 122.85795593261719, p969 * 233.00003051757812, p969 * 107.85795593261719, p969 * 228.00003051757812, p969 * 90.85795593261719);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 105.00003051757812, p969 * 128.8579559326172);
    v1346.bezierCurveTo(p969 * 104.50003051757812, p969 * 87.85795593261719, p969 * 104.50003051757812, p969 * 87.85795593261719, p969 * 104.00003051757812, p969 * 46.85795593261719);
    v1346.bezierCurveTo(p969 * 126.50003051757812, p969 * 69.35795593261719, p969 * 126.50003051757812, p969 * 69.35795593261719, p969 * 149.00003051757812, p969 * 91.85795593261719);
    v1346.bezierCurveTo(p969 * 130.00003051757812, p969 * 123.85795593261719, p969 * 123.00003051757812, p969 * 132.8579559326172, p969 * 107.00003051757812, p969 * 130.8579559326172);
    v1346.closePath();
    f90(v1346, p971[1], p971[1], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 59.000030517578125, p969 * 121.85795593261719);
    v1346.bezierCurveTo(p969 * 59.500030517578125, p969 * 99.35795593261719, p969 * 59.500030517578125, p969 * 99.35795593261719, p969 * 60.000030517578125, p969 * 76.85795593261719);
    v1346.bezierCurveTo(p969 * 84.00003051757812, p969 * 92.35795593261719, p969 * 84.00003051757812, p969 * 92.35795593261719, p969 * 108.00003051757812, p969 * 107.85795593261719);
    v1346.bezierCurveTo(p969 * 106.00003051757812, p969 * 148.8579559326172, p969 * 86.00003051757812, p969 * 148.8579559326172, p969 * 62.000030517578125, p969 * 123.85795593261719);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 105.00003051757812, p969 * 132.8579559326172);
    v1346.bezierCurveTo(p969 * 104.50003051757812, p969 * 93.35795593261719, p969 * 104.50003051757812, p969 * 93.35795593261719, p969 * 104.00003051757812, p969 * 53.85795593261719);
    v1346.bezierCurveTo(p969 * 126.50003051757812, p969 * 75.85795593261719, p969 * 126.50003051757812, p969 * 75.85795593261719, p969 * 149.00003051757812, p969 * 97.85795593261719);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 311.0000305175781, p969 * 126.85795593261719);
    v1346.bezierCurveTo(p969 * 309.0000305175781, p969 * 101.35795593261719, p969 * 309.0000305175781, p969 * 101.35795593261719, p969 * 307.0000305175781, p969 * 75.85795593261719);
    v1346.bezierCurveTo(p969 * 271.0000305175781, p969 * 96.85795593261719, p969 * 271.0000305175781, p969 * 96.85795593261719, p969 * 235.00003051757812, p969 * 117.85795593261719);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 228.00003051757812, p969 * 96.85795593261719);
    v1346.bezierCurveTo(p969 * 244.50003051757812, p969 * 74.85795593261719, p969 * 244.50003051757812, p969 * 74.85795593261719, p969 * 261.0000305175781, p969 * 52.85795593261719);
    v1346.bezierCurveTo(p969 * 265.5000305175781, p969 * 89.85795593261719, p969 * 265.5000305175781, p969 * 89.85795593261719, p969 * 270.0000305175781, p969 * 126.85795593261719);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 12.000030517578125, p969 * 86.13069152832031);
    v1346.bezierCurveTo(p969 * 36.000030517578125, p969 * 113.13069152832031, p969 * 84.00003051757812, p969 * 111.13069152832031, p969 * 116.00003051757812, p969 * 113.13069152832031);
    v1346.bezierCurveTo(p969 * 164.00003051757812, p969 * 23.130691528320312, p969 * 172.00003051757812, p969 * 18.130691528320312, p969 * 181.00003051757812, p969 * 9.130691528320312);
    v1346.bezierCurveTo(p969 * 199.00003051757812, p969 * 29.130691528320312, p969 * 221.00003051757812, p969 * 78.13069152832031, p969 * 247.00003051757812, p969 * 112.13069152832031);
    v1346.bezierCurveTo(p969 * 301.0000305175781, p969 * 122.13069152832031, p969 * 338.0000305175781, p969 * 111.13069152832031, p969 * 359.0000305175781, p969 * 94.13069152832031);
    v1346.bezierCurveTo(p969 * 359.0000305175781, p969 * 113.13069152832031, p969 * 358.5000305175781, p969 * 105.13069152832031, p969 * 358.0000305175781, p969 * 116.13069152832031);
    v1346.bezierCurveTo(p969 * 270.5000305175781, p969 * 130.1306915283203, p969 * 270.5000305175781, p969 * 130.1306915283203, p969 * 183.00003051757812, p969 * 144.1306915283203);
    v1346.bezierCurveTo(p969 * 98.00003051757812, p969 * 128.6306915283203, p969 * 98.00003051757812, p969 * 128.6306915283203, p969 * 13.000030517578125, p969 * 113.13069152832031);
    v1346.closePath();
    f90(v1346, p971[1], p971[1], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 247.00003051757812, p969 * 115.76704406738281);
    v1346.bezierCurveTo(p969 * 305.0000305175781, p969 * 124.76704406738281, p969 * 335.0000305175781, p969 * 112.76704406738281, p969 * 359.0000305175781, p969 * 93.76704406738281);
    v1346.bezierCurveTo(p969 * 359.5000305175781, p969 * 113.26704406738281, p969 * 359.5000305175781, p969 * 113.26704406738281, p969 * 360.0000305175781, p969 * 132.7670440673828);
    v1346.bezierCurveTo(p969 * 339.0000305175781, p969 * 177.7670440673828, p969 * 281.0000305175781, p969 * 178.7670440673828, p969 * 243.00003051757812, p969 * 183.7670440673828);
    v1346.bezierCurveTo(p969 * 214.50003051757812, p969 * 214.2670440673828, p969 * 214.50003051757812, p969 * 214.2670440673828, p969 * 186.00003051757812, p969 * 244.7670440673828);
    v1346.bezierCurveTo(p969 * 155.00003051757812, p969 * 214.2670440673828, p969 * 155.00003051757812, p969 * 214.2670440673828, p969 * 124.00003051757812, p969 * 183.7670440673828);
    v1346.bezierCurveTo(p969 * 51.000030517578125, p969 * 180.7670440673828, p969 * 21.000030517578125, p969 * 161.7670440673828, p969 * 9.000030517578125, p969 * 129.7670440673828);
    v1346.bezierCurveTo(p969 * 8.500030517578125, p969 * 110.76704406738281, p969 * 8.500030517578125, p969 * 110.76704406738281, p969 * 8.000030517578125, p969 * 91.76704406738281);
    v1346.bezierCurveTo(p969 * 31.000030517578125, p969 * 112.76704406738281, p969 * 87.00003051757812, p969 * 119.76704406738281, p969 * 116.00003051757812, p969 * 117.76704406738281);
    v1346.bezierCurveTo(p969 * 175.00003051757812, p969 * 18.767044067382812, p969 * 170.00003051757812, p969 * 23.767044067382812, p969 * 181.00003051757812, p969 * 14.767044067382812);
    v1346.bezierCurveTo(p969 * 199.00003051757812, p969 * 34.76704406738281, p969 * 203.00003051757812, p969 * 54.76704406738281, p969 * 247.00003051757812, p969 * 115.76704406738281);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 27.000030517578125, p969 * 94.76704406738281);
    v1346.bezierCurveTo(p969 * 11.000030517578125, p969 * 81.76704406738281, p969 * 31.000030517578125, p969 * 72.76704406738281, p969 * 44.000030517578125, p969 * 59.76704406738281);
    v1346.bezierCurveTo(p969 * 9.000030517578125, p969 * 65.76704406738281, p969 * 4.000030517578125, p969 * 78.76704406738281, p969 * 9.000030517578125, p969 * 89.76704406738281);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 352.0000305175781, p969 * 100.76705932617188);
    v1346.bezierCurveTo(p969 * 362.0000305175781, p969 * 92.76705932617188, p969 * 352.0000305175781, p969 * 84.76705932617188, p969 * 340.0000305175781, p969 * 68.76705932617188);
    v1346.bezierCurveTo(p969 * 360.0000305175781, p969 * 69.76705932617188, p969 * 364.0000305175781, p969 * 79.76705932617188, p969 * 364.0000305175781, p969 * 94.76705932617188);
    v1346.closePath();
    f90(v1346, p971[1], p971[1], p969 * 1);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 25.000030517578125, p969 * 97.94886779785156);
    v1346.bezierCurveTo(p969 * 2.000030517578125, p969 * 76.94886779785156, p969 * 29.000030517578125, p969 * 62.94886779785156, p969 * 44.000030517578125, p969 * 59.94886779785156);
    v1346.bezierCurveTo(p969 * 8.000030517578125, p969 * 59.94886779785156, p969 * -0.999969482421875, p969 * 81.94886779785156, p969 * 4.000030517578125, p969 * 92.94886779785156);
    v1346.closePath();
    f90(v1346, p971[3]);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 349.0000305175781, p969 * 100.94886779785156);
    v1346.bezierCurveTo(p969 * 366.0000305175781, p969 * 82.94886779785156, p969 * 353.0000305175781, p969 * 76.94886779785156, p969 * 337.0000305175781, p969 * 67.94886779785156);
    v1346.bezierCurveTo(p969 * 366.0000305175781, p969 * 69.94886779785156, p969 * 366.0000305175781, p969 * 83.94886779785156, p969 * 363.0000305175781, p969 * 101.94886779785156);
    v1346.closePath();
    f90(v1346, p971[2], p971[3], p969 * 10);
    f93(v1346, p969 * 46.000030517578125, p969 * 137.5852279663086, p969 * 9.219544457292887);
    f90(v1346, p971[4], p971[5], p969 * 1);
    f93(v1346, p969 * 308.0000305175781, p969 * 141.5852279663086, p969 * 8.54400374531753);
    f90(v1346, p971[4], p971[5], p969 * 1);
    f93(v1346, p969 * 92.00003051757812, p969 * 149.58523559570312, p969 * 14.866068747318506);
    f90(v1346, p971[4], p971[5], p969 * 1);
    f93(v1346, p969 * 262.0000305175781, p969 * 148.8579559326172, p969 * 15.620499351813308);
    f90(v1346, p971[4], p971[5], p969 * 1);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 184.00003051757812, p969 * 68.85795593261719);
    v1346.bezierCurveTo(p969 * 203.00003051757812, p969 * 108.85795593261719, p969 * 203.00003051757812, p969 * 108.85795593261719, p969 * 222.00003051757812, p969 * 148.8579559326172);
    v1346.bezierCurveTo(p969 * 202.50003051757812, p969 * 177.8579559326172, p969 * 202.50003051757812, p969 * 177.8579559326172, p969 * 183.00003051757812, p969 * 206.8579559326172);
    v1346.bezierCurveTo(p969 * 162.00003051757812, p969 * 178.8579559326172, p969 * 162.00003051757812, p969 * 178.8579559326172, p969 * 141.00003051757812, p969 * 150.8579559326172);
    v1346.closePath();
    f90(v1346, p971[4], p971[5], p969 * 10);
    v1346.beginPath();
    v1346.lineCap = "round";
    v1346.lineJoin = "round";
    v1346.moveTo(p969 * 183.00003051757812, p969 * 104.94886779785156);
    v1346.bezierCurveTo(p969 * 192.50003051757812, p969 * 125.44886779785156, p969 * 192.50003051757812, p969 * 125.44886779785156, p969 * 202.00003051757812, p969 * 145.94886779785156);
    v1346.bezierCurveTo(p969 * 192.00003051757812, p969 * 163.94886779785156, p969 * 192.00003051757812, p969 * 163.94886779785156, p969 * 182.00003051757812, p969 * 181.94886779785156);
    v1346.bezierCurveTo(p969 * 172.50003051757812, p969 * 164.44886779785156, p969 * 172.50003051757812, p969 * 164.44886779785156, p969 * 163.00003051757812, p969 * 146.94886779785156);
    v1346.closePath();
    f90(v1346, p971[6]);
    return v1345;
  }
  function f227(p972, p973, p974) {
    var v1347 = document.createElement("canvas");
    var v1348 = v1347.getContext("2d");
    v1347.width = p972 * 175;
    v1347.height = p972 * 106;
    v1348.globalAlpha = p973 ? 0.5 : 1;
    v1348.translate(0, p972 * 8);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 28, p972 * 67);
    v1348.bezierCurveTo(p972 * 55, p972 * 80, p972 * 126, p972 * 74, p972 * 144, p972 * 68);
    v1348.bezierCurveTo(p972 * 144.5, p972 * 75, p972 * 144.5, p972 * 75, p972 * 145, p972 * 82);
    v1348.bezierCurveTo(p972 * 114, p972 * 94, p972 * 47, p972 * 91, p972 * 28, p972 * 82);
    v1348.closePath();
    f90(v1348, p974[0]);
    v1348.globalAlpha = 1;
    v1348.translate(0, p972 * -8);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 145, p972 * 75);
    v1348.bezierCurveTo(p972 * 143, p972 * 51, p972 * 133, p972 * 29, p972 * 100, p972 * 27);
    v1348.bezierCurveTo(p972 * 52, p972 * 21, p972 * 37, p972 * 37, p972 * 31, p972 * 54);
    v1348.bezierCurveTo(p972 * 23, p972 * 78, p972 * 28, p972 * 77, p972 * 36, p972 * 79);
    v1348.bezierCurveTo(p972 * 80, p972 * 87, p972 * 120, p972 * 81, p972 * 145, p972 * 76);
    v1348.closePath();
    f90(v1348, p974[1]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 38, p972 * 46);
    v1348.bezierCurveTo(p972 * 52, p972 * 37, p972 * 69, p972 * 36, p972 * 85, p972 * 36);
    v1348.bezierCurveTo(p972 * 118, p972 * 38, p972 * 129, p972 * 42, p972 * 137, p972 * 48);
    v1348.bezierCurveTo(p972 * 135, p972 * 45, p972 * 135, p972 * 45, p972 * 133, p972 * 42);
    v1348.bezierCurveTo(p972 * 124, p972 * 32, p972 * 116, p972 * 28, p972 * 88, p972 * 25);
    v1348.bezierCurveTo(p972 * 47, p972 * 28, p972 * 40, p972 * 32, p972 * 36, p972 * 44);
    v1348.closePath();
    f90(v1348, p974[5]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 145, p972 * 75);
    v1348.bezierCurveTo(p972 * 143, p972 * 51, p972 * 133, p972 * 29, p972 * 100, p972 * 27);
    v1348.bezierCurveTo(p972 * 52, p972 * 21, p972 * 37, p972 * 37, p972 * 31, p972 * 54);
    v1348.bezierCurveTo(p972 * 23, p972 * 78, p972 * 28, p972 * 77, p972 * 36, p972 * 79);
    v1348.bezierCurveTo(p972 * 80, p972 * 87, p972 * 120, p972 * 81, p972 * 145, p972 * 76);
    v1348.closePath();
    f90(v1348, undefined, p974[2], p972 * 4);
    v1348.translate(0, p972 * -3);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 28, p972 * 67);
    v1348.bezierCurveTo(p972 * 55, p972 * 80, p972 * 126, p972 * 74, p972 * 144, p972 * 68);
    v1348.bezierCurveTo(p972 * 144.5, p972 * 75, p972 * 144.5, p972 * 75, p972 * 145, p972 * 82);
    v1348.bezierCurveTo(p972 * 114, p972 * 94, p972 * 47, p972 * 91, p972 * 28, p972 * 82);
    v1348.closePath();
    f90(v1348, p974[10], p974[10], p972 * 4);
    v1348.translate(0, p972 * 3);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 131, p972 * 43);
    v1348.bezierCurveTo(p972 * 145, p972 * 40, p972 * 148, p972 * 32, p972 * 147, p972 * 17);
    v1348.bezierCurveTo(p972 * 166, p972 * 39, p972 * 155, p972 * 62, p972 * 140, p972 * 67);
    v1348.bezierCurveTo(p972 * 128, p972 * 65, p972 * 128, p972 * 52, p972 * 131, p972 * 45);
    v1348.closePath();
    f90(v1348, p974[3]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 41, p972 * 43);
    v1348.bezierCurveTo(p972 * 30, p972 * 42, p972 * 24, p972 * 33, p972 * 25, p972 * 17);
    v1348.bezierCurveTo(p972 * 7, p972 * 34, p972 * 17, p972 * 63, p972 * 33, p972 * 66);
    v1348.bezierCurveTo(p972 * 45, p972 * 59, p972 * 44, p972 * 53, p972 * 42, p972 * 44);
    v1348.closePath();
    f90(v1348, p974[3]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 24, p972 * 19);
    v1348.bezierCurveTo(p972 * 24, p972 * 35, p972 * 35, p972 * 42, p972 * 42, p972 * 44);
    v1348.bezierCurveTo(p972 * 43, p972 * 51, p972 * 43, p972 * 48, p972 * 43, p972 * 56);
    v1348.bezierCurveTo(p972 * 25, p972 * 47, p972 * 17, p972 * 36, p972 * 23, p972 * 20);
    v1348.closePath();
    f90(v1348, p974[6]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 148, p972 * 18);
    v1348.bezierCurveTo(p972 * 159, p972 * 44, p972 * 139, p972 * 52, p972 * 130, p972 * 55);
    v1348.bezierCurveTo(p972 * 129, p972 * 48, p972 * 129, p972 * 46, p972 * 131, p972 * 43);
    v1348.bezierCurveTo(p972 * 144, p972 * 37, p972 * 148, p972 * 35, p972 * 147, p972 * 18);
    v1348.closePath();
    f90(v1348, p974[6]);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 131, p972 * 43);
    v1348.bezierCurveTo(p972 * 145, p972 * 40, p972 * 148, p972 * 32, p972 * 147, p972 * 17);
    v1348.bezierCurveTo(p972 * 166, p972 * 39, p972 * 155, p972 * 62, p972 * 140, p972 * 67);
    v1348.bezierCurveTo(p972 * 128, p972 * 65, p972 * 128, p972 * 52, p972 * 131, p972 * 45);
    v1348.closePath();
    f90(v1348, undefined, p974[4], p972 * 4);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 41, p972 * 43);
    v1348.bezierCurveTo(p972 * 30, p972 * 42, p972 * 24, p972 * 33, p972 * 25, p972 * 17);
    v1348.bezierCurveTo(p972 * 7, p972 * 34, p972 * 17, p972 * 63, p972 * 33, p972 * 66);
    v1348.bezierCurveTo(p972 * 45, p972 * 59, p972 * 44, p972 * 53, p972 * 42, p972 * 44);
    v1348.closePath();
    f90(v1348, undefined, p974[4], p972 * 4);
    v1348.save();
    v1348.translate(p972 * 87, p972 * 34.5);
    v1348.rotate(0);
    f87(v1348, p972 * -8, p972 * -10.5, p972 * 16, p972 * 21, p972 * 10);
    v1348.restore();
    f90(v1348, p974[7], p974[2], p972 * 4);
    v1348.save();
    v1348.translate(p972 * 87, p972 * 57);
    v1348.rotate(0);
    f87(v1348, p972 * -8, p972 * -23, p972 * 16, p972 * 46, p972 * 10);
    v1348.restore();
    f90(v1348, p974[8], p974[2], p972 * 4);
    f93(v1348, p972 * 87, p972 * 39, p972 * 4.123105625617661);
    f90(v1348, p974[9], p974[2], p972 * 4);
    f93(v1348, p972 * 87, p972 * 60, p972 * 4.242640687119285);
    f90(v1348, p974[9], p974[2], p972 * 4);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 28, p972 * 67);
    v1348.bezierCurveTo(p972 * 55, p972 * 80, p972 * 126, p972 * 74, p972 * 144, p972 * 68);
    v1348.bezierCurveTo(p972 * 144.5, p972 * 75, p972 * 144.5, p972 * 75, p972 * 145, p972 * 82);
    v1348.bezierCurveTo(p972 * 114, p972 * 94, p972 * 47, p972 * 91, p972 * 28, p972 * 82);
    v1348.closePath();
    f90(v1348, p974[8], p974[2], p972 * 4);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 27, p972 * 69);
    v1348.bezierCurveTo(p972 * 13, p972 * 77, p972 * 16, p972 * 74, p972 * 27, p972 * 80);
    v1348.closePath();
    f90(v1348, p974[9], p974[2], p972 * 4);
    v1348.beginPath();
    v1348.lineCap = "round";
    v1348.lineJoin = "round";
    v1348.moveTo(p972 * 145, p972 * 70);
    v1348.bezierCurveTo(p972 * 149.5, p972 * 72, p972 * 149.5, p972 * 72, p972 * 154, p972 * 74);
    v1348.bezierCurveTo(p972 * 150, p972 * 77, p972 * 150, p972 * 77, p972 * 146, p972 * 80);
    v1348.closePath();
    f90(v1348, p974[9], p974[2], p972 * 4);
    f93(v1348, p972 * 50, p972 * 80, p972 * 5);
    f90(v1348, p974[9], p974[2], p972 * 4);
    f93(v1348, p972 * 86.01141357421875, p972 * 81.76705932617188, p972 * 5);
    f90(v1348, p974[9], p974[2], p972 * 4);
    f93(v1348, p972 * 119.01141357421875, p972 * 80.13069152832031, p972 * 5);
    f90(v1348, p974[9], p974[2], p972 * 4);
    return v1347;
  }
  function f228(p975, p976) {
    var v1349 = document.createElement("canvas");
    var v1350 = v1349.getContext("2d");
    v1349.width = p975 * 253;
    v1349.height = p975 * 192;
    v1350.globalAlpha = 0.5;
    v1350.save();
    v1350.translate(p975 * 42, p975 * 99);
    v1350.globalAlpha = 0.5;
    f87(v1350, p975 * -7, p975 * -20, p975 * 14, p975 * 39, p975 * 20);
    v1350.restore();
    f90(v1350, p976[0]);
    v1350.globalAlpha = 1;
    v1350.save();
    v1350.translate(p975 * 37, p975 * 94);
    f87(v1350, p975 * -7, p975 * -20, p975 * 14, p975 * 37, p975 * 20);
    v1350.restore();
    f90(v1350, p976[2]);
    v1350.globalAlpha = 0.5;
    v1350.save();
    v1350.translate(p975 * 136, p975 * 99);
    v1350.globalAlpha = 0.5;
    f87(v1350, p975 * -84, p975 * -67, p975 * 168, p975 * 134, p975 * 20);
    v1350.restore();
    f90(v1350, p976[0], p976[0], p975 * 13);
    v1350.globalAlpha = 1;
    v1350.save();
    v1350.translate(p975 * 131, p975 * 94);
    f87(v1350, p975 * -84, p975 * -67, p975 * 168, p975 * 134, p975 * 20);
    v1350.restore();
    f90(v1350, p976[2], p976[2], p975 * 13);
    v1350.save();
    v1350.translate(p975 * 131, p975 * 94);
    f87(v1350, p975 * -76, p975 * -61, p975 * 152, p975 * 122, p975 * 20);
    v1350.restore();
    f90(v1350, p976[3], p976[1], p975 * 8);
    v1350.save();
    v1350.translate(p975 * 168.5, p975 * 93.5);
    f87(v1350, p975 * -30.5, p975 * -58.5, p975 * 61, p975 * 117, p975 * 20);
    v1350.restore();
    f90(v1350, p976[3], p976[4], p975 * 6);
    v1350.save();
    v1350.translate(p975 * 93.5, p975 * 95.5);
    f87(v1350, p975 * -32, p975 * -59.5, p975 * 59, p975 * 119, p975 * 20);
    v1350.restore();
    f90(v1350, p976[3], p976[4], p975 * 6);
    v1350.save();
    v1350.translate(p975 * 130.5, p975 * 94);
    f87(v1350, p975 * -36, p975 * -67, p975 * 73, p975 * 134, p975 * 20);
    v1350.restore();
    f90(v1350, p976[3], p976[2], p975 * 8);
    v1350.globalAlpha = 0.5;
    v1350.save();
    v1350.translate(p975 * 133, p975 * 97);
    f87(v1350, p975 * -83, p975 * -12, p975 * 160, p975 * 24, p975 * 0);
    v1350.restore();
    f90(v1350, p976[0]);
    v1350.globalAlpha = 1;
    v1350.save();
    v1350.translate(p975 * 133, p975 * 92);
    f87(v1350, p975 * -83, p975 * -12, p975 * 160, p975 * 24, p975 * 0);
    v1350.restore();
    f90(v1350, p976[2]);
    v1350.globalAlpha = 0.5;
    v1350.save();
    v1350.translate(p975 * 228, p975 * 99.5);
    v1350.globalAlpha = 0.5;
    f87(v1350, p975 * -5, p975 * -18.5, p975 * 10, p975 * 37, p975 * 20);
    v1350.restore();
    f90(v1350, p976[0]);
    v1350.globalAlpha = 1;
    v1350.save();
    v1350.translate(p975 * 223, p975 * 94.5);
    f87(v1350, p975 * -5, p975 * -18.5, p975 * 10, p975 * 37, p975 * 20);
    v1350.restore();
    f90(v1350, p976[2]);
    v1350.save();
    v1350.translate(p975 * 133.5, p975 * 175.5);
    v1350.globalAlpha = 0.5;
    f87(v1350, p975 * -22.5, p975 * -6.5, p975 * 45, p975 * 13, p975 * 20);
    v1350.restore();
    f90(v1350, p976[0]);
    v1350.globalAlpha = 1;
    v1350.save();
    v1350.translate(p975 * 128.5, p975 * 170.5);
    f87(v1350, p975 * -22.5, p975 * -6.5, p975 * 45, p975 * 13, p975 * 20);
    v1350.restore();
    f90(v1350, p976[2]);
    return v1349;
  }
  function f229(p977, p978) {
    var v1351 = document.createElement("canvas");
    var v1352 = v1351.getContext("2d");
    v1351.width = p977 * 48;
    v1351.height = p977 * 47;
    v1352.beginPath();
    v1352.lineCap = "round";
    v1352.lineJoin = "round";
    v1352.moveTo(p977 * 7.1875, p977 * 25.434661865234375);
    v1352.bezierCurveTo(p977 * 11.1875, p977 * 13.434661865234375, p977 * 18.1875, p977 * 8.434661865234375, p977 * 32.1875, p977 * 10.434661865234375);
    v1352.bezierCurveTo(p977 * 45.1875, p977 * 14.434661865234375, p977 * 41.1875, p977 * 24.434661865234375, p977 * 36.1875, p977 * 30.434661865234375);
    v1352.bezierCurveTo(p977 * 22.1875, p977 * 42.434661865234375, p977 * 2.1875, p977 * 41.434661865234375, p977 * 7.1875, p977 * 25.434661865234375);
    v1352.closePath();
    f90(v1352, p978[0]);
    return v1351;
  }
  function f230(p979, p980, p981, p982) {
    var v1353 = document.createElement("canvas");
    var v1354 = v1353.getContext("2d");
    v1353.width = p979 * 501;
    v1353.height = p979 * 564;
    v1354.scale(0.5, 0.5);
    v1354.translate(p979 * 240, p979 * 255);
    v1354.rotate(p982);
    v1354.globalAlpha = p980 ? 0.5 : 0.2;
    f93(v1354, p979 * 174, p979 * 87.984375, p979 * 20.8806130178211);
    f90(v1354, p981[0], p981[0], p979 * 8);
    f93(v1354, p979 * 174, p979 * 87.984375, p979 * 12.165525060596439);
    f90(v1354, p981[0], p981[0], p979 * 8);
    f93(v1354, p979 * 174, p979 * 87.484375, p979 * 6);
    f90(v1354, p981[0]);
    f93(v1354, p979 * 30, p979 * 87.984375, p979 * 20.8806130178211);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 30, p979 * 87.984375, p979 * 12.165525060596439);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 30, p979 * 87.484375, p979 * 6);
    f90(v1354, p981[0]);
    f93(v1354, p979 * 100, p979 * 30, p979 * 20.8806130178211);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 100, p979 * 30, p979 * 12.165525060596439);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 100, p979 * 30, p979 * 6);
    f90(v1354, p981[0]);
    f93(v1354, p979 * 100, p979 * 130, p979 * 20.8806130178211);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 100, p979 * 130, p979 * 12.165525060596439);
    f90(v1354, p981[0], p981[0], p979 * 4);
    f93(v1354, p979 * 100, p979 * 130, p979 * 6);
    f90(v1354, p981[0]);
    v1354.save();
    v1354.translate(p979 * 102, p979 * 81.984375);
    v1354.rotate(0);
    f87(v1354, p979 * -74, p979 * -57, p979 * 148, p979 * 114, p979 * 23);
    v1354.restore();
    f90(v1354, p981[0], p981[0], p979 * 4);
    v1354.save();
    v1354.translate(p979 * 101, p979 * 64.984375);
    v1354.rotate(0);
    f87(v1354, p979 * -33, p979 * -10, p979 * 66, p979 * 20, p979 * 15);
    v1354.restore();
    f90(v1354, p981[0], p981[0], p979 * 4);
    v1354.save();
    v1354.translate(p979 * 102, p979 * 63.484375);
    v1354.rotate(0);
    f87(v1354, p979 * -9, p979 * -27.5, p979 * 18, p979 * 55, p979 * 15);
    v1354.restore();
    v1354.translate(5, -5);
    v1354.globalAlpha = 1;
    f93(v1354, p979 * 174, p979 * 87.984375, p979 * 20.8806130178211);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 174, p979 * 87.984375, p979 * 12.165525060596439);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 174, p979 * 87.484375, p979 * 6);
    f90(v1354, p981[2]);
    f93(v1354, p979 * 30, p979 * 87.984375, p979 * 20.8806130178211);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 30, p979 * 87.984375, p979 * 12.165525060596439);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 30, p979 * 87.484375, p979 * 6);
    f90(v1354, p981[2]);
    f93(v1354, p979 * 102, p979 * 30, p979 * 20.8806130178211);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 102, p979 * 30, p979 * 12.165525060596439);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 102, p979 * 30, p979 * 6);
    f90(v1354, p981[1]);
    f93(v1354, p979 * 102, p979 * 130, p979 * 20.8806130178211);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 102, p979 * 130, p979 * 12.165525060596439);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 102, p979 * 130, p979 * 6);
    f90(v1354, p981[1]);
    v1354.save();
    v1354.translate(p979 * 102, p979 * 81.984375);
    f87(v1354, p979 * -74, p979 * -57, p979 * 148, p979 * 114, p979 * 23);
    v1354.restore();
    f90(v1354, p981[1], p981[3], p979 * 8);
    v1354.save();
    v1354.translate(p979 * 101, p979 * 64.984375);
    f87(v1354, p979 * -33, p979 * -10, p979 * 66, p979 * 20, p979 * 15);
    v1354.restore();
    f90(v1354, p981[2], p981[1], p979 * 8);
    v1354.save();
    v1354.translate(p979 * 102, p979 * 63.484375);
    f87(v1354, p979 * -9, p979 * -27.5, p979 * 18, p979 * 55, p979 * 15);
    v1354.restore();
    f90(v1354, p981[2], p981[1], p979 * 8);
    f93(v1354, p979 * 135, p979 * 107.36605834960938, p979 * 21.095023109728988);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 135, p979 * 107.36605834960938, p979 * 13);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 135, p979 * 107.36605834960938, p979 * 6.082762530298219);
    f90(v1354, p981[2]);
    f93(v1354, p979 * 70, p979 * 107.36605834960938, p979 * 21.095023109728988);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 70, p979 * 107.36605834960938, p979 * 13);
    f90(v1354, p981[1], p981[3], p979 * 8);
    f93(v1354, p979 * 70, p979 * 107.36605834960938, p979 * 6.082762530298219);
    f90(v1354, p981[2]);
    return v1353;
  }
  function f231(p983, p984) {
    var v1355 = document.createElement("canvas");
    var v1356 = v1355.getContext("2d");
    v1355.width = p983 * 33;
    v1355.height = p983 * 35;
    v1356.beginPath();
    v1356.lineCap = "round";
    v1356.lineJoin = "round";
    v1356.moveTo(p983 * 12.75, p983 * 7.1328125);
    v1356.bezierCurveTo(p983 * 26.75, p983 * 8.1328125, p983 * 27.75, p983 * 14.1328125, p983 * 24.75, p983 * 23.1328125);
    v1356.bezierCurveTo(p983 * 19.75, p983 * 31.1328125, p983 * 15.75, p983 * 33.1328125, p983 * 6.75, p983 * 26.1328125);
    v1356.bezierCurveTo(p983 * 0.75, p983 * 19.1328125, p983 * 4.75, p983 * 8.1328125, p983 * 12.75, p983 * 7.1328125);
    v1356.closePath();
    f90(v1356, p984[0]);
    return v1355;
  }
  function f232(p985, p986, p987) {
    var v1357 = document.createElement("canvas");
    var v1358 = v1357.getContext("2d");
    v1357.width = p985 * 345;
    v1357.height = p985 * 250;
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 105, p985 * 58);
    v1358.bezierCurveTo(p985 * 100.5, p985 * 43, p985 * 100.5, p985 * 43, p985 * 96, p985 * 28);
    v1358.bezierCurveTo(p985 * 119.5, p985 * 33.5, p985 * 119.5, p985 * 33.5, p985 * 143, p985 * 39);
    v1358.bezierCurveTo(p985 * 170, p985 * 37, p985 * 177, p985 * 37, p985 * 188, p985 * 40);
    v1358.bezierCurveTo(p985 * 213, p985 * 33.5, p985 * 213, p985 * 33.5, p985 * 238, p985 * 27);
    v1358.bezierCurveTo(p985 * 231, p985 * 52, p985 * 234, p985 * 42.5, p985 * 230, p985 * 58);
    v1358.closePath();
    f90(v1358, p987[1], p987[2], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 108, p985 * 51);
    v1358.bezierCurveTo(p985 * 91, p985 * 55, p985 * 85, p985 * 44, p985 * 86, p985 * 29);
    v1358.bezierCurveTo(p985 * 62, p985 * 50, p985 * 78, p985 * 69, p985 * 92, p985 * 75);
    v1358.closePath();
    f90(v1358, p987[3], p987[4], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 249, p985 * 27);
    v1358.bezierCurveTo(p985 * 273, p985 * 49, p985 * 262, p985 * 68, p985 * 246, p985 * 77);
    v1358.bezierCurveTo(p985 * 231, p985 * 59, p985 * 236, p985 * 66.5, p985 * 226, p985 * 56);
    v1358.bezierCurveTo(p985 * 243, p985 * 53, p985 * 252, p985 * 43, p985 * 249, p985 * 28);
    v1358.closePath();
    f90(v1358, p987[3], p987[4], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 87, p985 * 78);
    v1358.bezierCurveTo(p985 * 87, p985 * 59, p985 * 98, p985 * 46, p985 * 127, p985 * 48);
    v1358.bezierCurveTo(p985 * 176, p985 * 48.5, p985 * 176, p985 * 48.5, p985 * 225, p985 * 49);
    v1358.bezierCurveTo(p985 * 243, p985 * 49, p985 * 253, p985 * 59, p985 * 253, p985 * 76);
    v1358.bezierCurveTo(p985 * 211, p985 * 85.5, p985 * 211, p985 * 85.5, p985 * 169, p985 * 95);
    v1358.closePath();
    f90(v1358, p987[5], p987[6], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 56, p985 * 105);
    v1358.bezierCurveTo(p985 * 56, p985 * 92, p985 * 59, p985 * 86, p985 * 65, p985 * 73);
    v1358.bezierCurveTo(p985 * 62.5, p985 * 61.5, p985 * 62.5, p985 * 61.5, p985 * 60, p985 * 50);
    v1358.bezierCurveTo(p985 * 99.5, p985 * 64.5, p985 * 99.5, p985 * 64.5, p985 * 139, p985 * 79);
    v1358.bezierCurveTo(p985 * 164, p985 * 77, p985 * 177, p985 * 76, p985 * 203, p985 * 78);
    v1358.bezierCurveTo(p985 * 242, p985 * 63.5, p985 * 242, p985 * 63.5, p985 * 281, p985 * 49);
    v1358.bezierCurveTo(p985 * 279, p985 * 60.5, p985 * 279, p985 * 60.5, p985 * 277, p985 * 72);
    v1358.bezierCurveTo(p985 * 286, p985 * 88, p985 * 286, p985 * 96, p985 * 287, p985 * 104);
    v1358.bezierCurveTo(p985 * 228.5, p985 * 127, p985 * 228.5, p985 * 127, p985 * 170, p985 * 150);
    v1358.closePath();
    f90(v1358, p987[1], p987[2], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 48, p985 * 130);
    v1358.bezierCurveTo(p985 * 61, p985 * 155, p985 * 63, p985 * 165, p985 * 56, p985 * 171);
    v1358.bezierCurveTo(p985 * 48, p985 * 177, p985 * 40, p985 * 171, p985 * 38, p985 * 178);
    v1358.bezierCurveTo(p985 * 33, p985 * 180, p985 * 37, p985 * 188, p985 * 47, p985 * 208);
    v1358.bezierCurveTo(p985 * 52, p985 * 221, p985 * 55, p985 * 222, p985 * 75, p985 * 229);
    v1358.bezierCurveTo(p985 * 91, p985 * 213, p985 * 98, p985 * 212, p985 * 112, p985 * 219);
    v1358.bezierCurveTo(p985 * 167, p985 * 225, p985 * 187, p985 * 224, p985 * 222, p985 * 220);
    v1358.bezierCurveTo(p985 * 244, p985 * 214, p985 * 247, p985 * 213, p985 * 263, p985 * 229);
    v1358.bezierCurveTo(p985 * 295, p985 * 220, p985 * 291, p985 * 215, p985 * 301, p985 * 194);
    v1358.bezierCurveTo(p985 * 308, p985 * 178, p985 * 309, p985 * 176, p985 * 302, p985 * 173);
    v1358.bezierCurveTo(p985 * 290, p985 * 177, p985 * 289, p985 * 177, p985 * 283, p985 * 169);
    v1358.bezierCurveTo(p985 * 279, p985 * 163, p985 * 279, p985 * 161, p985 * 290, p985 * 130);
    v1358.bezierCurveTo(p985 * 270, p985 * 127, p985 * 270, p985 * 127, p985 * 250, p985 * 124);
    v1358.bezierCurveTo(p985 * 209, p985 * 137.5, p985 * 209, p985 * 137.5, p985 * 168, p985 * 151);
    v1358.bezierCurveTo(p985 * 121, p985 * 135, p985 * 121, p985 * 135, p985 * 74, p985 * 119);
    v1358.closePath();
    f90(v1358, p987[1], p987[2], p985 * 8);
    v1358.globalCompositeOperation = "destination-out";
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 133, p985 * 158);
    v1358.bezierCurveTo(p985 * 152, p985 * 193, p985 * 158, p985 * 205, p985 * 140, p985 * 203);
    v1358.bezierCurveTo(p985 * 99, p985 * 195, p985 * 96, p985 * 189, p985 * 86, p985 * 173);
    v1358.bezierCurveTo(p985 * 80, p985 * 159, p985 * 88, p985 * 145, p985 * 104, p985 * 141);
    v1358.closePath();
    f90(v1358, p987[7], p987[8], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 215, p985 * 146);
    v1358.bezierCurveTo(p985 * 204, p985 * 167, p985 * 204, p985 * 167, p985 * 193, p985 * 188);
    v1358.bezierCurveTo(p985 * 187, p985 * 201, p985 * 191, p985 * 209, p985 * 213, p985 * 201);
    v1358.bezierCurveTo(p985 * 247, p985 * 192, p985 * 253, p985 * 181, p985 * 257, p985 * 169);
    v1358.bezierCurveTo(p985 * 260, p985 * 157, p985 * 254, p985 * 149, p985 * 243, p985 * 141);
    v1358.closePath();
    f90(v1358, p987[7], p987[8], p985 * 8);
    v1358.globalCompositeOperation = "source-over";
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 133, p985 * 158);
    v1358.bezierCurveTo(p985 * 152, p985 * 193, p985 * 158, p985 * 205, p985 * 140, p985 * 203);
    v1358.bezierCurveTo(p985 * 99, p985 * 195, p985 * 96, p985 * 189, p985 * 86, p985 * 173);
    v1358.bezierCurveTo(p985 * 80, p985 * 159, p985 * 88, p985 * 145, p985 * 104, p985 * 141);
    v1358.closePath();
    f90(v1358, undefined, p987[8], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 215, p985 * 146);
    v1358.bezierCurveTo(p985 * 204, p985 * 167, p985 * 204, p985 * 167, p985 * 193, p985 * 188);
    v1358.bezierCurveTo(p985 * 187, p985 * 201, p985 * 191, p985 * 209, p985 * 213, p985 * 201);
    v1358.bezierCurveTo(p985 * 247, p985 * 192, p985 * 253, p985 * 181, p985 * 257, p985 * 169);
    v1358.bezierCurveTo(p985 * 260, p985 * 157, p985 * 254, p985 * 149, p985 * 243, p985 * 141);
    v1358.closePath();
    f90(v1358, vVUndefined8, p987[8], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 39, p985 * 66);
    v1358.bezierCurveTo(p985 * 57, p985 * 107, p985 * 63, p985 * 96, p985 * 120, p985 * 106);
    v1358.bezierCurveTo(p985 * 154, p985 * 112, p985 * 163, p985 * 116, p985 * 174, p985 * 135);
    v1358.bezierCurveTo(p985 * 180, p985 * 109, p985 * 191, p985 * 113, p985 * 237, p985 * 103);
    v1358.bezierCurveTo(p985 * 276, p985 * 100, p985 * 289, p985 * 94, p985 * 301, p985 * 67);
    v1358.bezierCurveTo(p985 * 317, p985 * 112, p985 * 301, p985 * 141, p985 * 274, p985 * 139);
    v1358.bezierCurveTo(p985 * 204, p985 * 166, p985 * 197, p985 * 169, p985 * 173, p985 * 183);
    v1358.bezierCurveTo(p985 * 170, p985 * 183, p985 * 170, p985 * 183, p985 * 167, p985 * 183);
    v1358.bezierCurveTo(p985 * 132, p985 * 160, p985 * 112, p985 * 156, p985 * 73, p985 * 141);
    v1358.bezierCurveTo(p985 * 43, p985 * 146, p985 * 27, p985 * 120, p985 * 39, p985 * 66);
    v1358.closePath();
    f90(v1358, p987[7], p987[8], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 115, p985 * 185);
    v1358.bezierCurveTo(p985 * 115, p985 * 200, p985 * 118, p985 * 206, p985 * 124, p985 * 212);
    v1358.bezierCurveTo(p985 * 133, p985 * 223, p985 * 132, p985 * 231, p985 * 121, p985 * 230);
    v1358.bezierCurveTo(p985 * 108, p985 * 226, p985 * 108, p985 * 215, p985 * 107, p985 * 209);
    v1358.bezierCurveTo(p985 * 106, p985 * 201, p985 * 110, p985 * 196, p985 * 114, p985 * 185);
    v1358.closePath();
    f90(v1358, p987[3], p987[4], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 226, p985 * 186);
    v1358.bezierCurveTo(p985 * 234, p985 * 201, p985 * 238, p985 * 209, p985 * 228, p985 * 225);
    v1358.bezierCurveTo(p985 * 223, p985 * 233, p985 * 213, p985 * 233, p985 * 211, p985 * 226);
    v1358.bezierCurveTo(p985 * 206, p985 * 219, p985 * 217, p985 * 216, p985 * 221, p985 * 207);
    v1358.bezierCurveTo(p985 * 225, p985 * 196, p985 * 225, p985 * 191, p985 * 226, p985 * 186);
    v1358.closePath();
    f90(v1358, p987[3], p987[4], p985 * 8);
    v1358.beginPath();
    v1358.lineCap = "round";
    v1358.lineJoin = "round";
    v1358.moveTo(p985 * 172, p985 * 110);
    v1358.bezierCurveTo(p985 * 189, p985 * 153, p985 * 192, p985 * 160, p985 * 188, p985 * 175);
    v1358.bezierCurveTo(p985 * 183, p985 * 190, p985 * 176, p985 * 197, p985 * 165, p985 * 191);
    v1358.bezierCurveTo(p985 * 153, p985 * 181, p985 * 152, p985 * 166, p985 * 157, p985 * 151);
    v1358.bezierCurveTo(p985 * 164.5, p985 * 131, p985 * 164.5, p985 * 131, p985 * 172, p985 * 111);
    v1358.closePath();
    f90(v1358, p987[3], p987[4], p985 * 8);
    return v1357;
  }
  function f233(p988, p989, p990) {
    var v1359 = document.createElement("canvas");
    var v1360 = v1359.getContext("2d");
    v1359.width = p988 * 115;
    v1359.height = p988 * 585;
    v1360.scale(-1, 1);
    v1360.translate(p988 * -110, 0);
    v1360.translate(p988 * 10, p988 * 10);
    v1360.globalAlpha = p989 ? 0.5 : 1;
    v1360.save();
    v1360.translate(p988 * 51.5, p988 * 342);
    f87(v1360, p988 * -14.5, p988 * -225, p988 * 29, p988 * 450, p988 * 20);
    v1360.restore();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 54, p988 * 83);
    v1360.bezierCurveTo(p988 * 70, p988 * 69, p988 * 78, p988 * 62, p988 * 82, p988 * 40);
    v1360.bezierCurveTo(p988 * 93, p988 * 48, p988 * 103, p988 * 64, p988 * 95, p988 * 102);
    v1360.bezierCurveTo(p988 * 60, p988 * 114, p988 * 53, p988 * 103, p988 * 54, p988 * 85);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 95, p988 * 97);
    v1360.bezierCurveTo(p988 * 56, p988 * 102, p988 * 43, p988 * 77, p988 * 71, p988 * 6);
    v1360.bezierCurveTo(p988 * 34, p988 * 10, p988 * 6, p988 * 43, p988 * 5, p988 * 76);
    v1360.bezierCurveTo(p988 * 4, p988 * 98, p988 * 15, p988 * 130, p988 * 64, p988 * 130);
    v1360.bezierCurveTo(p988 * 76, p988 * 129, p988 * 95, p988 * 113, p988 * 97, p988 * 97);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 55, p988 * 176);
    v1360.bezierCurveTo(p988 * 74, p988 * 175, p988 * 82, p988 * 169, p988 * 96, p988 * 155);
    v1360.bezierCurveTo(p988 * 103, p988 * 183, p988 * 95, p988 * 214, p988 * 54, p988 * 219);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 50, p988 * 176);
    v1360.bezierCurveTo(p988 * 25, p988 * 177, p988 * 16, p988 * 164, p988 * 7, p988 * 156);
    v1360.bezierCurveTo(p988 * 0, p988 * 186, p988 * 10, p988 * 201, p988 * 43, p988 * 220);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 403);
    v1360.bezierCurveTo(p988 * 47, p988 * 412, p988 * 58, p988 * 412, p988 * 67, p988 * 403);
    v1360.bezierCurveTo(p988 * 66.5, p988 * 434, p988 * 66.5, p988 * 434, p988 * 66, p988 * 465);
    v1360.bezierCurveTo(p988 * 56, p988 * 480, p988 * 40, p988 * 472, p988 * 36, p988 * 465);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 59, p988 * 67);
    v1360.bezierCurveTo(p988 * 47, p988 * 97, p988 * 18, p988 * 117, p988 * 11, p988 * 110);
    v1360.bezierCurveTo(p988 * 11, p988 * 115, p988 * 15, p988 * 122, p988 * 23, p988 * 124);
    v1360.bezierCurveTo(p988 * 46, p988 * 118, p988 * 52, p988 * 113, p988 * 62, p988 * 86);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 30, p988 * 125);
    v1360.bezierCurveTo(p988 * 47, p988 * 136, p988 * 57, p988 * 134, p988 * 77, p988 * 127);
    v1360.bezierCurveTo(p988 * 71, p988 * 158, p988 * 71, p988 * 159, p988 * 66, p988 * 159);
    v1360.bezierCurveTo(p988 * 50.5, p988 * 156.5, p988 * 50.5, p988 * 156.5, p988 * 35, p988 * 154);
    v1360.bezierCurveTo(p988 * 31, p988 * 145, p988 * 31, p988 * 136, p988 * 31, p988 * 125);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 171);
    v1360.bezierCurveTo(p988 * 32, p988 * 221, p988 * 43, p988 * 233, p988 * 70, p988 * 247);
    v1360.bezierCurveTo(p988 * 75, p988 * 234, p988 * 75, p988 * 230, p988 * 72, p988 * 221);
    v1360.bezierCurveTo(p988 * 48, p988 * 206, p988 * 54, p988 * 188, p988 * 50, p988 * 176);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 60, p988 * 68);
    v1360.bezierCurveTo(p988 * 63, p988 * 69, p988 * 65, p988 * 71, p988 * 67, p988 * 77);
    v1360.bezierCurveTo(p988 * 61, p988 * 123, p988 * 52, p988 * 137, p988 * 42, p988 * 150);
    v1360.bezierCurveTo(p988 * 38, p988 * 151, p988 * 38, p988 * 151, p988 * 34, p988 * 152);
    v1360.bezierCurveTo(p988 * 33, p988 * 146.5, p988 * 33, p988 * 146.5, p988 * 32, p988 * 141);
    v1360.bezierCurveTo(p988 * 49, p988 * 118, p988 * 63, p988 * 87, p988 * 59, p988 * 68);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 71, p988 * 172);
    v1360.bezierCurveTo(p988 * 56, p988 * 222, p988 * 49, p988 * 234, p988 * 35, p988 * 248);
    v1360.bezierCurveTo(p988 * 30, p988 * 236, p988 * 30, p988 * 230, p988 * 31, p988 * 217);
    v1360.bezierCurveTo(p988 * 44, p988 * 202, p988 * 49, p988 * 191, p988 * 52, p988 * 172);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 151);
    v1360.bezierCurveTo(p988 * 27, p988 * 165, p988 * 31, p988 * 173, p988 * 36, p988 * 178);
    v1360.bezierCurveTo(p988 * 56, p988 * 185, p988 * 73, p988 * 184, p988 * 71, p988 * 170);
    v1360.bezierCurveTo(p988 * 72, p988 * 154, p988 * 71, p988 * 154, p988 * 63, p988 * 155);
    v1360.closePath();
    f90(v1360, p990[0]);
    v1360.translate(p988 * -10, p988 * -10);
    v1360.globalAlpha = 1;
    v1360.save();
    v1360.translate(p988 * 51.5, p988 * 342);
    f87(v1360, p988 * -14.5, p988 * -225, p988 * 29, p988 * 450, p988 * 20);
    v1360.restore();
    f90(v1360, p990[1], p990[2], p988 * 5);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 54, p988 * 83);
    v1360.bezierCurveTo(p988 * 70, p988 * 69, p988 * 78, p988 * 62, p988 * 82, p988 * 40);
    v1360.bezierCurveTo(p988 * 93, p988 * 48, p988 * 103, p988 * 64, p988 * 95, p988 * 102);
    v1360.bezierCurveTo(p988 * 60, p988 * 114, p988 * 53, p988 * 103, p988 * 54, p988 * 85);
    v1360.closePath();
    f90(v1360, p990[3], p990[4], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 95, p988 * 97);
    v1360.bezierCurveTo(p988 * 56, p988 * 102, p988 * 43, p988 * 77, p988 * 71, p988 * 6);
    v1360.bezierCurveTo(p988 * 34, p988 * 10, p988 * 6, p988 * 43, p988 * 5, p988 * 76);
    v1360.bezierCurveTo(p988 * 4, p988 * 98, p988 * 15, p988 * 130, p988 * 64, p988 * 130);
    v1360.bezierCurveTo(p988 * 76, p988 * 129, p988 * 95, p988 * 113, p988 * 97, p988 * 97);
    v1360.closePath();
    f90(v1360, p990[5], p990[6], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 403);
    v1360.bezierCurveTo(p988 * 47, p988 * 412, p988 * 58, p988 * 412, p988 * 67, p988 * 403);
    v1360.bezierCurveTo(p988 * 66.5, p988 * 434, p988 * 66.5, p988 * 434, p988 * 66, p988 * 465);
    v1360.bezierCurveTo(p988 * 56, p988 * 480, p988 * 40, p988 * 472, p988 * 36, p988 * 465);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 37, p988 * 427);
    v1360.bezierCurveTo(p988 * 47, p988 * 435, p988 * 55, p988 * 435, p988 * 67, p988 * 427);
    f90(v1360, vVVVUndefined822, p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 36, p988 * 448);
    v1360.bezierCurveTo(p988 * 46, p988 * 454, p988 * 54, p988 * 457, p988 * 65, p988 * 449);
    f90(v1360, vUndefined, p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 55, p988 * 176);
    v1360.bezierCurveTo(p988 * 74, p988 * 175, p988 * 82, p988 * 169, p988 * 96, p988 * 155);
    v1360.bezierCurveTo(p988 * 103, p988 * 183, p988 * 95, p988 * 214, p988 * 54, p988 * 219);
    v1360.closePath();
    f90(v1360, p990[3], p990[4], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 50, p988 * 176);
    v1360.bezierCurveTo(p988 * 25, p988 * 177, p988 * 16, p988 * 164, p988 * 7, p988 * 156);
    v1360.bezierCurveTo(p988 * 0, p988 * 186, p988 * 10, p988 * 201, p988 * 43, p988 * 220);
    v1360.closePath();
    f90(v1360, p990[3], p990[4], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 59, p988 * 67);
    v1360.bezierCurveTo(p988 * 47, p988 * 97, p988 * 18, p988 * 117, p988 * 11, p988 * 110);
    v1360.bezierCurveTo(p988 * 11, p988 * 115, p988 * 15, p988 * 122, p988 * 23, p988 * 124);
    v1360.bezierCurveTo(p988 * 46, p988 * 118, p988 * 52, p988 * 113, p988 * 62, p988 * 86);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 30, p988 * 125);
    v1360.bezierCurveTo(p988 * 47, p988 * 136, p988 * 57, p988 * 134, p988 * 77, p988 * 127);
    v1360.bezierCurveTo(p988 * 71, p988 * 158, p988 * 71, p988 * 159, p988 * 66, p988 * 159);
    v1360.bezierCurveTo(p988 * 50.5, p988 * 156.5, p988 * 50.5, p988 * 156.5, p988 * 35, p988 * 154);
    v1360.bezierCurveTo(p988 * 31, p988 * 145, p988 * 31, p988 * 136, p988 * 31, p988 * 125);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 171);
    v1360.bezierCurveTo(p988 * 32, p988 * 221, p988 * 43, p988 * 233, p988 * 70, p988 * 247);
    v1360.bezierCurveTo(p988 * 75, p988 * 234, p988 * 75, p988 * 230, p988 * 72, p988 * 221);
    v1360.bezierCurveTo(p988 * 48, p988 * 206, p988 * 54, p988 * 188, p988 * 50, p988 * 176);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 60, p988 * 68);
    v1360.bezierCurveTo(p988 * 63, p988 * 69, p988 * 65, p988 * 71, p988 * 67, p988 * 77);
    v1360.bezierCurveTo(p988 * 61, p988 * 123, p988 * 52, p988 * 137, p988 * 42, p988 * 150);
    v1360.bezierCurveTo(p988 * 38, p988 * 151, p988 * 38, p988 * 151, p988 * 34, p988 * 152);
    v1360.bezierCurveTo(p988 * 33, p988 * 146.5, p988 * 33, p988 * 146.5, p988 * 32, p988 * 141);
    v1360.bezierCurveTo(p988 * 49, p988 * 118, p988 * 63, p988 * 87, p988 * 59, p988 * 68);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 71, p988 * 172);
    v1360.bezierCurveTo(p988 * 56, p988 * 222, p988 * 49, p988 * 234, p988 * 35, p988 * 248);
    v1360.bezierCurveTo(p988 * 30, p988 * 236, p988 * 30, p988 * 230, p988 * 31, p988 * 217);
    v1360.bezierCurveTo(p988 * 44, p988 * 202, p988 * 49, p988 * 191, p988 * 52, p988 * 172);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 35, p988 * 151);
    v1360.bezierCurveTo(p988 * 27, p988 * 165, p988 * 31, p988 * 173, p988 * 36, p988 * 178);
    v1360.bezierCurveTo(p988 * 56, p988 * 185, p988 * 73, p988 * 184, p988 * 71, p988 * 170);
    v1360.bezierCurveTo(p988 * 72, p988 * 154, p988 * 71, p988 * 154, p988 * 63, p988 * 155);
    v1360.closePath();
    f90(v1360, p990[7], p990[8], p988 * 6);
    v1360.beginPath();
    v1360.lineCap = "round";
    v1360.lineJoin = "round";
    v1360.moveTo(p988 * 53, p988 * 113);
    v1360.bezierCurveTo(p988 * 65, p988 * 140, p988 * 75, p988 * 166, p988 * 52, p988 * 169);
    v1360.bezierCurveTo(p988 * 29, p988 * 168, p988 * 41, p988 * 143, p988 * 53, p988 * 112);
    v1360.closePath();
    f90(v1360, p990[3], p990[4], p988 * 6);
    return v1359;
  }
  function f234(p991, p992, p993) {
    var v1361 = document.createElement("canvas");
    var v1362 = v1361.getContext("2d");
    v1361.width = p991 * 161;
    v1361.height = p991 * 184;
    v1362.translate(0, p991 * 10);
    v1362.globalAlpha = 1;
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 105.5, p991 * 34.609375);
    v1362.bezierCurveTo(p991 * 48.5, p991 * 7.609375, p991 * 11.5, p991 * 58.609375, p991 * 20.5, p991 * 97.609375);
    v1362.bezierCurveTo(p991 * 44.5, p991 * 161.609375, p991 * 70.5, p991 * 171.609375, p991 * 88.5, p991 * 156.609375);
    v1362.bezierCurveTo(p991 * 120.5, p991 * 129.609375, p991 * 123.5, p991 * 105.609375, p991 * 128.5, p991 * 83.609375);
    v1362.bezierCurveTo(p991 * 137.5, p991 * 79.609375, p991 * 141.5, p991 * 79.609375, p991 * 146.5, p991 * 81.609375);
    v1362.bezierCurveTo(p991 * 153.5, p991 * 70.609375, p991 * 151.5, p991 * 65.609375, p991 * 148.5, p991 * 61.609375);
    v1362.bezierCurveTo(p991 * 134.5, p991 * 60.609375, p991 * 131.5, p991 * 63.609375, p991 * 127.5, p991 * 66.609375);
    v1362.bezierCurveTo(p991 * 127.5, p991 * 55.609375, p991 * 125.5, p991 * 54.609375, p991 * 120.5, p991 * 51.609375);
    v1362.bezierCurveTo(p991 * 128.5, p991 * 42.609375, p991 * 136.5, p991 * 38.609375, p991 * 147.5, p991 * 39.609375);
    v1362.bezierCurveTo(p991 * 152.5, p991 * 23.609375, p991 * 147.5, p991 * 21.609375, p991 * 140.5, p991 * 17.609375);
    v1362.bezierCurveTo(p991 * 120.5, p991 * 17.609375, p991 * 114.5, p991 * 27.609375, p991 * 106.5, p991 * 35.609375);
    v1362.closePath();
    f90(v1362, p993[0]);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 45.5, p991 * 144.609375);
    v1362.bezierCurveTo(p991 * 35.5, p991 * 155.609375, p991 * 37, p991 * 152.109375, p991 * 28.5, p991 * 159.609375);
    v1362.bezierCurveTo(p991 * 16.5, p991 * 154.609375, p991 * 16.5, p991 * 151.609375, p991 * 17.5, p991 * 141.609375);
    v1362.bezierCurveTo(p991 * 25.5, p991 * 134.109375, p991 * 25.5, p991 * 134.109375, p991 * 33.5, p991 * 126.609375);
    f90(v1362, p993[0]);
    v1362.translate(0, p991 * -10);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 45.5, p991 * 144.609375);
    v1362.bezierCurveTo(p991 * 35.5, p991 * 155.609375, p991 * 37, p991 * 152.109375, p991 * 28.5, p991 * 159.609375);
    v1362.bezierCurveTo(p991 * 16.5, p991 * 154.609375, p991 * 16.5, p991 * 151.609375, p991 * 17.5, p991 * 141.609375);
    v1362.bezierCurveTo(p991 * 25.5, p991 * 134.109375, p991 * 25.5, p991 * 134.109375, p991 * 33.5, p991 * 126.609375);
    f90(v1362, p993[1], p993[2], p991 * 8);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 105.5, p991 * 34.609375);
    v1362.bezierCurveTo(p991 * 48.5, p991 * 7.609375, p991 * 11.5, p991 * 58.609375, p991 * 20.5, p991 * 97.609375);
    v1362.bezierCurveTo(p991 * 44.5, p991 * 161.609375, p991 * 70.5, p991 * 171.609375, p991 * 88.5, p991 * 156.609375);
    v1362.bezierCurveTo(p991 * 120.5, p991 * 129.609375, p991 * 123.5, p991 * 105.609375, p991 * 128.5, p991 * 83.609375);
    v1362.bezierCurveTo(p991 * 137.5, p991 * 79.609375, p991 * 141.5, p991 * 79.609375, p991 * 146.5, p991 * 81.609375);
    v1362.bezierCurveTo(p991 * 153.5, p991 * 70.609375, p991 * 151.5, p991 * 65.609375, p991 * 148.5, p991 * 61.609375);
    v1362.bezierCurveTo(p991 * 134.5, p991 * 60.609375, p991 * 131.5, p991 * 63.609375, p991 * 127.5, p991 * 66.609375);
    v1362.bezierCurveTo(p991 * 127.5, p991 * 55.609375, p991 * 125.5, p991 * 54.609375, p991 * 120.5, p991 * 51.609375);
    v1362.bezierCurveTo(p991 * 128.5, p991 * 42.609375, p991 * 136.5, p991 * 38.609375, p991 * 147.5, p991 * 39.609375);
    v1362.bezierCurveTo(p991 * 152.5, p991 * 23.609375, p991 * 147.5, p991 * 21.609375, p991 * 140.5, p991 * 17.609375);
    v1362.bezierCurveTo(p991 * 120.5, p991 * 17.609375, p991 * 114.5, p991 * 27.609375, p991 * 106.5, p991 * 35.609375);
    v1362.closePath();
    f90(v1362, p993[1], p993[2], p991 * 8);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 104.5, p991 * 35.609375);
    v1362.bezierCurveTo(p991 * 71.5, p991 * 36.609375, p991 * 57.5, p991 * 52.609375, p991 * 58.5, p991 * 81.609375);
    v1362.bezierCurveTo(p991 * 59.5, p991 * 103.609375, p991 * 66.5, p991 * 107.609375, p991 * 66.5, p991 * 116.609375);
    v1362.bezierCurveTo(p991 * 67.5, p991 * 128.609375, p991 * 65.5, p991 * 131.609375, p991 * 63.5, p991 * 137.609375);
    f90(v1362, undefined, p993[2], p991 * 8);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 59.5, p991 * 72.609375);
    v1362.bezierCurveTo(p991 * 38.5, p991 * 80.609375, p991 * 43.5, p991 * 81.609375, p991 * 37.5, p991 * 89.609375);
    f90(v1362, vVVVUndefined82, p993[2], p991 * 4);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 60.5, p991 * 85.609375);
    v1362.bezierCurveTo(p991 * 75.5, p991 * 91.609375, p991 * 76.5, p991 * 96.609375, p991 * 81.5, p991 * 104.609375);
    f90(v1362, undefined, p993[2], p991 * 4);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 68.5, p991 * 122.609375);
    v1362.bezierCurveTo(p991 * 79.5, p991 * 130.609375, p991 * 74.5, p991 * 128.609375, p991 * 80.5, p991 * 134.609375);
    f90(v1362, p993[1], p993[2], p991 * 4);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 142.5, p991 * 18.609375);
    v1362.bezierCurveTo(p991 * 151.5, p991 * 28.609375, p991 * 151.5, p991 * 32.609375, p991 * 146.5, p991 * 40.609375);
    v1362.bezierCurveTo(p991 * 137.5, p991 * 26.609375, p991 * 138.5, p991 * 24.609375, p991 * 142.5, p991 * 19.609375);
    v1362.closePath();
    f90(v1362, p993[3]);
    v1362.beginPath();
    v1362.lineCap = "round";
    v1362.lineJoin = "round";
    v1362.moveTo(p991 * 146.5, p991 * 61.50892639160156);
    v1362.bezierCurveTo(p991 * 157.5, p991 * 69.50892639160156, p991 * 150.5, p991 * 79.50892639160156, p991 * 145.5, p991 * 81.50892639160156);
    v1362.bezierCurveTo(p991 * 140.5, p991 * 65.50892639160156, p991 * 144.5, p991 * 64.50892639160156, p991 * 146.5, p991 * 62.50892639160156);
    v1362.closePath();
    f90(v1362, p993[3]);
    return v1361;
  }
  function f235(p994, p995, p996, p997) {
    var v1363 = document.createElement("canvas");
    var v1364 = v1363.getContext("2d");
    v1363.width = p994 * 198;
    v1363.height = p994 * 147;
    v1364.globalAlpha = p995 ? 0.5 : 1;
    v1364.translate(0, p994 * 6);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 44, p994 * 76);
    v1364.bezierCurveTo(p994 * 50, p994 * 82, p994 * 50, p994 * 82, p994 * 56, p994 * 88);
    v1364.bezierCurveTo(p994 * 59, p994 * 82, p994 * 59, p994 * 82, p994 * 62, p994 * 76);
    v1364.bezierCurveTo(p994 * 59, p994 * 71, p994 * 59, p994 * 71, p994 * 56, p994 * 66);
    v1364.bezierCurveTo(p994 * 59, p994 * 69, p994 * 59, p994 * 69, p994 * 62, p994 * 72);
    v1364.bezierCurveTo(p994 * 80, p994 * 48, p994 * 102, p994 * 50, p994 * 120, p994 * 62);
    v1364.bezierCurveTo(p994 * 127, p994 * 58, p994 * 127, p994 * 58, p994 * 134, p994 * 54);
    v1364.bezierCurveTo(p994 * 129, p994 * 60, p994 * 129, p994 * 60, p994 * 124, p994 * 66);
    v1364.bezierCurveTo(p994 * 129, p994 * 73, p994 * 129, p994 * 73, p994 * 134, p994 * 80);
    v1364.bezierCurveTo(p994 * 140, p994 * 74, p994 * 140, p994 * 74, p994 * 146, p994 * 68);
    v1364.bezierCurveTo(p994 * 142, p994 * 76, p994 * 142, p994 * 76, p994 * 138, p994 * 84);
    v1364.bezierCurveTo(p994 * 144, p994 * 90, p994 * 142, p994 * 90, p994 * 144, p994 * 90);
    v1364.bezierCurveTo(p994 * 136, p994 * 97, p994 * 136, p994 * 97, p994 * 128, p994 * 104);
    v1364.bezierCurveTo(p994 * 154, p994 * 110, p994 * 164, p994 * 90, p994 * 160, p994 * 80);
    v1364.bezierCurveTo(p994 * 138, p994 * 22, p994 * 148, p994 * 51, p994 * 136, p994 * 22);
    v1364.bezierCurveTo(p994 * 97, p994 * 24, p994 * 97, p994 * 24, p994 * 58, p994 * 26);
    v1364.bezierCurveTo(p994 * 47, p994 * 54, p994 * 36, p994 * 80, p994 * 36, p994 * 82);
    v1364.bezierCurveTo(p994 * 40, p994 * 108, p994 * 54, p994 * 104, p994 * 62, p994 * 104);
    v1364.bezierCurveTo(p994 * 46, p994 * 92, p994 * 54, p994 * 97, p994 * 46, p994 * 90);
    v1364.closePath();
    f90(v1364, p996[0]);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 36, p994 * 80);
    v1364.bezierCurveTo(p994 * 30, p994 * 84, p994 * 28, p994 * 92, p994 * 34, p994 * 100);
    v1364.bezierCurveTo(p994 * 41.5, p994 * 102, p994 * 41.5, p994 * 102, p994 * 49, p994 * 104);
    v1364.bezierCurveTo(p994 * 43, p994 * 105.5, p994 * 43, p994 * 105.5, p994 * 37, p994 * 107);
    v1364.bezierCurveTo(p994 * 46, p994 * 111, p994 * 60, p994 * 114, p994 * 76, p994 * 114);
    v1364.bezierCurveTo(p994 * 78, p994 * 110.5, p994 * 78, p994 * 110.5, p994 * 80, p994 * 107);
    v1364.bezierCurveTo(p994 * 81, p994 * 110.5, p994 * 81, p994 * 110.5, p994 * 82, p994 * 114);
    v1364.bezierCurveTo(p994 * 94.5, p994 * 113.5, p994 * 94.5, p994 * 113.5, p994 * 107, p994 * 113);
    v1364.bezierCurveTo(p994 * 108.5, p994 * 110, p994 * 108.5, p994 * 110, p994 * 110, p994 * 107);
    v1364.bezierCurveTo(p994 * 111.5, p994 * 110.5, p994 * 111.5, p994 * 110.5, p994 * 113, p994 * 114);
    v1364.bezierCurveTo(p994 * 131, p994 * 112.5, p994 * 131, p994 * 112.5, p994 * 149, p994 * 111);
    v1364.bezierCurveTo(p994 * 148.5, p994 * 107.5, p994 * 148.5, p994 * 107.5, p994 * 148, p994 * 104);
    v1364.bezierCurveTo(p994 * 150.5, p994 * 107, p994 * 150.5, p994 * 107, p994 * 153, p994 * 110);
    v1364.bezierCurveTo(p994 * 155.5, p994 * 108.5, p994 * 155.5, p994 * 108.5, p994 * 158, p994 * 107);
    v1364.bezierCurveTo(p994 * 156.5, p994 * 104, p994 * 156.5, p994 * 104, p994 * 155, p994 * 101);
    v1364.bezierCurveTo(p994 * 158.5, p994 * 102.5, p994 * 158.5, p994 * 102.5, p994 * 162, p994 * 104);
    v1364.bezierCurveTo(p994 * 168, p994 * 100, p994 * 170, p994 * 92, p994 * 169, p994 * 85);
    v1364.bezierCurveTo(p994 * 166, p994 * 86, p994 * 166, p994 * 86, p994 * 163, p994 * 87);
    v1364.bezierCurveTo(p994 * 165.5, p994 * 83, p994 * 165.5, p994 * 83, p994 * 168, p994 * 79);
    v1364.bezierCurveTo(p994 * 165.5, p994 * 76.5, p994 * 165.5, p994 * 76.5, p994 * 163, p994 * 74);
    v1364.bezierCurveTo(p994 * 155, p994 * 82.5, p994 * 155, p994 * 82.5, p994 * 147, p994 * 91);
    v1364.bezierCurveTo(p994 * 139, p994 * 95.5, p994 * 139, p994 * 95.5, p994 * 131, p994 * 100);
    v1364.bezierCurveTo(p994 * 97.5, p994 * 100.5, p994 * 97.5, p994 * 100.5, p994 * 64, p994 * 101);
    v1364.bezierCurveTo(p994 * 49, p994 * 102, p994 * 43, p994 * 90, p994 * 36, p994 * 80);
    v1364.closePath();
    f90(v1364, p996[0]);
    v1364.globalAlpha = 1;
    v1364.translate(0, p994 * -6);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 36, p994 * 80);
    v1364.bezierCurveTo(p994 * 30, p994 * 84, p994 * 28, p994 * 92, p994 * 34, p994 * 100);
    v1364.bezierCurveTo(p994 * 41.5, p994 * 102, p994 * 41.5, p994 * 102, p994 * 49, p994 * 104);
    v1364.bezierCurveTo(p994 * 43, p994 * 105.5, p994 * 43, p994 * 105.5, p994 * 37, p994 * 107);
    v1364.bezierCurveTo(p994 * 46, p994 * 111, p994 * 60, p994 * 114, p994 * 76, p994 * 114);
    v1364.bezierCurveTo(p994 * 78, p994 * 110.5, p994 * 78, p994 * 110.5, p994 * 80, p994 * 107);
    v1364.bezierCurveTo(p994 * 81, p994 * 110.5, p994 * 81, p994 * 110.5, p994 * 82, p994 * 114);
    v1364.bezierCurveTo(p994 * 94.5, p994 * 113.5, p994 * 94.5, p994 * 113.5, p994 * 107, p994 * 113);
    v1364.bezierCurveTo(p994 * 108.5, p994 * 110, p994 * 108.5, p994 * 110, p994 * 110, p994 * 107);
    v1364.bezierCurveTo(p994 * 111.5, p994 * 110.5, p994 * 111.5, p994 * 110.5, p994 * 113, p994 * 114);
    v1364.bezierCurveTo(p994 * 131, p994 * 112.5, p994 * 131, p994 * 112.5, p994 * 149, p994 * 111);
    v1364.bezierCurveTo(p994 * 148.5, p994 * 107.5, p994 * 148.5, p994 * 107.5, p994 * 148, p994 * 104);
    v1364.bezierCurveTo(p994 * 150.5, p994 * 107, p994 * 150.5, p994 * 107, p994 * 153, p994 * 110);
    v1364.bezierCurveTo(p994 * 155.5, p994 * 108.5, p994 * 155.5, p994 * 108.5, p994 * 158, p994 * 107);
    v1364.bezierCurveTo(p994 * 156.5, p994 * 104, p994 * 156.5, p994 * 104, p994 * 155, p994 * 101);
    v1364.bezierCurveTo(p994 * 158.5, p994 * 102.5, p994 * 158.5, p994 * 102.5, p994 * 162, p994 * 104);
    v1364.bezierCurveTo(p994 * 168, p994 * 100, p994 * 170, p994 * 92, p994 * 169, p994 * 85);
    v1364.bezierCurveTo(p994 * 166, p994 * 86, p994 * 166, p994 * 86, p994 * 163, p994 * 87);
    v1364.bezierCurveTo(p994 * 165.5, p994 * 83, p994 * 165.5, p994 * 83, p994 * 168, p994 * 79);
    v1364.bezierCurveTo(p994 * 165.5, p994 * 76.5, p994 * 165.5, p994 * 76.5, p994 * 163, p994 * 74);
    v1364.bezierCurveTo(p994 * 155, p994 * 82.5, p994 * 155, p994 * 82.5, p994 * 147, p994 * 91);
    v1364.bezierCurveTo(p994 * 139, p994 * 95.5, p994 * 139, p994 * 95.5, p994 * 131, p994 * 100);
    v1364.bezierCurveTo(p994 * 97.5, p994 * 100.5, p994 * 97.5, p994 * 100.5, p994 * 64, p994 * 101);
    v1364.bezierCurveTo(p994 * 49, p994 * 102, p994 * 43, p994 * 90, p994 * 36, p994 * 80);
    v1364.closePath();
    f90(v1364, p996[1], p996[2], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 49, p994 * 98);
    v1364.bezierCurveTo(p994 * 96.5, p994 * 98, p994 * 96.5, p994 * 98, p994 * 144, p994 * 98);
    v1364.bezierCurveTo(p994 * 136.5, p994 * 102, p994 * 136.5, p994 * 102, p994 * 129, p994 * 106);
    v1364.bezierCurveTo(p994 * 103, p994 * 105.5, p994 * 103, p994 * 105.5, p994 * 77, p994 * 105);
    v1364.bezierCurveTo(p994 * 65, p994 * 105, p994 * 65, p994 * 105, p994 * 53, p994 * 105);
    v1364.closePath();
    f90(v1364, p996[1]);
    v1364.globalAlpha = 0.5;
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 54, p994 * 98);
    v1364.bezierCurveTo(p994 * 97, p994 * 98, p994 * 97, p994 * 98, p994 * 140, p994 * 98);
    v1364.bezierCurveTo(p994 * 134, p994 * 101, p994 * 134, p994 * 101, p994 * 128, p994 * 104);
    v1364.bezierCurveTo(p994 * 92, p994 * 104, p994 * 92, p994 * 104, p994 * 56, p994 * 104);
    v1364.closePath();
    f90(v1364, p996[0]);
    v1364.globalAlpha = 1;
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 118, p994 * 47);
    v1364.bezierCurveTo(p994 * 124.5, p994 * 43.5, p994 * 124.5, p994 * 43.5, p994 * 131, p994 * 40);
    v1364.bezierCurveTo(p994 * 128, p994 * 46, p994 * 128, p994 * 46, p994 * 125, p994 * 52);
    v1364.bezierCurveTo(p994 * 131, p994 * 57, p994 * 135, p994 * 64, p994 * 139, p994 * 73);
    v1364.bezierCurveTo(p994 * 142.5, p994 * 69.5, p994 * 142.5, p994 * 69.5, p994 * 146, p994 * 66);
    v1364.bezierCurveTo(p994 * 143.5, p994 * 72.5, p994 * 143.5, p994 * 72.5, p994 * 141, p994 * 79);
    v1364.bezierCurveTo(p994 * 142, p994 * 91, p994 * 141, p994 * 94, p994 * 132, p994 * 98);
    v1364.bezierCurveTo(p994 * 117, p994 * 102, p994 * 126, p994 * 108, p994 * 142, p994 * 102);
    v1364.bezierCurveTo(p994 * 159, p994 * 98, p994 * 164, p994 * 80, p994 * 162, p994 * 47);
    v1364.bezierCurveTo(p994 * 160, p994 * 19, p994 * 150, p994 * 6, p994 * 117, p994 * 4);
    v1364.bezierCurveTo(p994 * 44, p994 * 0, p994 * 35, p994 * 20, p994 * 33, p994 * 37);
    v1364.bezierCurveTo(p994 * 29, p994 * 69, p994 * 33, p994 * 88, p994 * 44, p994 * 96);
    v1364.bezierCurveTo(p994 * 64, p994 * 107, p994 * 70, p994 * 102, p994 * 54, p994 * 93);
    v1364.bezierCurveTo(p994 * 49, p994 * 88, p994 * 50, p994 * 82, p994 * 53, p994 * 77);
    v1364.bezierCurveTo(p994 * 51.5, p994 * 71, p994 * 51.5, p994 * 71, p994 * 50, p994 * 65);
    v1364.bezierCurveTo(p994 * 53, p994 * 68.5, p994 * 53, p994 * 68.5, p994 * 56, p994 * 72);
    v1364.bezierCurveTo(p994 * 59, p994 * 67.5, p994 * 59, p994 * 67.5, p994 * 62, p994 * 63);
    v1364.bezierCurveTo(p994 * 60.5, p994 * 59.5, p994 * 60.5, p994 * 59.5, p994 * 59, p994 * 56);
    v1364.bezierCurveTo(p994 * 62, p994 * 57, p994 * 62, p994 * 57, p994 * 65, p994 * 58);
    v1364.bezierCurveTo(p994 * 78, p994 * 35, p994 * 103, p994 * 36, p994 * 117, p994 * 47);
    v1364.closePath();
    f90(v1364, p996[1], p996[2], p994 * 6);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 62, p994 * 21);
    v1364.bezierCurveTo(p994 * 63, p994 * 34, p994 * 64, p994 * 37, p994 * 66, p994 * 40);
    v1364.bezierCurveTo(p994 * 54, p994 * 49, p994 * 53, p994 * 51, p994 * 48, p994 * 58);
    v1364.bezierCurveTo(p994 * 44, p994 * 51, p994 * 42, p994 * 43, p994 * 40, p994 * 36);
    v1364.bezierCurveTo(p994 * 47, p994 * 28, p994 * 52, p994 * 25, p994 * 61, p994 * 21);
    v1364.closePath();
    f90(v1364, p996[4]);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 60, p994 * 29);
    v1364.bezierCurveTo(p994 * 62, p994 * 25, p994 * 65, p994 * 24, p994 * 70, p994 * 23);
    f90(v1364, undefined, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 61, p994 * 37);
    v1364.bezierCurveTo(p994 * 63, p994 * 32, p994 * 66, p994 * 32, p994 * 71, p994 * 32);
    f90(v1364, undefined, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 52, p994 * 31);
    v1364.bezierCurveTo(p994 * 50, p994 * 26, p994 * 50, p994 * 25, p994 * 51, p994 * 23);
    f90(v1364, undefined, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 46, p994 * 35);
    v1364.bezierCurveTo(p994 * 44, p994 * 31, p994 * 43, p994 * 29, p994 * 45, p994 * 26);
    f90(v1364, undefined, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 58, p994 * 44);
    v1364.bezierCurveTo(p994 * 57, p994 * 48, p994 * 57, p994 * 50, p994 * 60, p994 * 52);
    f90(v1364, vVVVUndefined132, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 53, p994 * 48);
    v1364.bezierCurveTo(p994 * 52, p994 * 52, p994 * 52, p994 * 54, p994 * 55, p994 * 57);
    f90(v1364, vVVVVUndefined82, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 46, p994 * 41);
    v1364.bezierCurveTo(p994 * 41, p994 * 42, p994 * 39, p994 * 45, p994 * 38, p994 * 48);
    f90(v1364, vVVUndefined132, p996[3], p994 * 4);
    v1364.beginPath();
    v1364.lineCap = "round";
    v1364.lineJoin = "round";
    v1364.moveTo(p994 * 48, p994 * 48);
    v1364.bezierCurveTo(p994 * 42, p994 * 51, p994 * 42, p994 * 53, p994 * 40, p994 * 55);
    f90(v1364, vVVVVUndefined823, p996[3], p994 * 4);
    if (p997 == 0) {
      v1364.beginPath();
      v1364.lineCap = "round";
      v1364.lineJoin = "round";
      v1364.moveTo(p994 * 99, p994 * 101);
      v1364.bezierCurveTo(p994 * 118.6666259765625, p994 * 104.33331298828125, p994 * 124.6666259765625, p994 * 116.33331298828125, p994 * 112.6666259765625, p994 * 114.33331298828125);
      v1364.bezierCurveTo(p994 * 104.6666259765625, p994 * 112.33331298828125, p994 * 100.6666259765625, p994 * 105.33331298828125, p994 * 99.6666259765625, p994 * 101.33331298828125);
      f90(v1364, undefined, p996[5], p994 * 6);
      v1364.beginPath();
      v1364.lineCap = "round";
      v1364.lineJoin = "round";
      v1364.moveTo(p994 * 97.6666259765625, p994 * 101.33331298828125);
      v1364.bezierCurveTo(p994 * 81.6666259765625, p994 * 106.33331298828125, p994 * 79.6666259765625, p994 * 114.33331298828125, p994 * 89.6666259765625, p994 * 114.33331298828125);
      v1364.bezierCurveTo(p994 * 95.6666259765625, p994 * 111.33331298828125, p994 * 95.6666259765625, p994 * 109.33331298828125, p994 * 98.6666259765625, p994 * 102.33331298828125);
      f90(v1364, vVVVVVUndefined1322, p996[5], p994 * 6);
    } else {
      v1364.beginPath();
      v1364.lineCap = "round";
      v1364.lineJoin = "round";
      v1364.moveTo(p994 * 103, p994 * 100.39999389648438);
      v1364.bezierCurveTo(p994 * 120, p994 * 106.39999389648438, p994 * 118, p994 * 107.39999389648438, p994 * 120, p994 * 111.39999389648438);
      f90(v1364, vVVUndefined13, p996[5], p994 * 6);
      v1364.beginPath();
      v1364.lineCap = "round";
      v1364.lineJoin = "round";
      v1364.moveTo(p994 * 103, p994 * 100.39999389648438);
      v1364.bezierCurveTo(p994 * 90, p994 * 103.39999389648438, p994 * 89, p994 * 106.39999389648438, p994 * 87, p994 * 112.39999389648438);
      f90(v1364, undefined, p996[5], p994 * 6);
      f93(v1364, p994 * 86, p994 * 114.39999389648438, p994 * 4.5);
      f90(v1364, p996[1], p996[5], p994 * 6);
      f93(v1364, p994 * 121, p994 * 114.39999389648438, p994 * 4.5);
      f90(v1364, p996[1], p996[5], p994 * 6);
    }
    return v1363;
  }
  function f236(p998, p999) {
    var v1365 = document.createElement("canvas");
    var v1366 = v1365.getContext("2d");
    v1365.width = p998 * 20;
    v1365.height = p998 * 35;
    f87(v1366, 0, 0, 20, 35, 7);
    f90(v1366, p999[0]);
    return v1365;
  }
  function f237(p1000, p1001, p1002) {
    var v1367 = document.createElement("canvas");
    var v1368 = v1367.getContext("2d");
    v1367.width = p1000 * 180;
    v1367.height = p1000 * 120;
    v1368.translate(p1000 * -65, p1000 * -35);
    v1368.globalAlpha = p1001 ? 0.5 : 1;
    v1368.translate(0, p1000 * 10);
    v1368.save();
    v1368.translate(p1000 * 150.5, p1000 * 63.84375);
    f87(v1368, p1000 * -67, p1000 * -16.5, p1000 * 134, p1000 * 33, p1000 * 5);
    v1368.restore();
    f90(v1368, p1002[0]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 80.5, p1000 * 75.34375);
    v1368.bezierCurveTo(p1000 * 83, p1000 * 106.34375, p1000 * 83, p1000 * 106.34375, p1000 * 85.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 93, p1000 * 135.84375, p1000 * 93, p1000 * 135.84375, p1000 * 100.5, p1000 * 134.34375);
    v1368.bezierCurveTo(p1000 * 99.5, p1000 * 100.84375, p1000 * 99.5, p1000 * 100.84375, p1000 * 98.5, p1000 * 67.34375);
    v1368.closePath();
    f90(v1368, p1002[0]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 206.5, p1000 * 71.34375);
    v1368.bezierCurveTo(p1000 * 203.5, p1000 * 104.34375, p1000 * 203.5, p1000 * 104.34375, p1000 * 200.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 208.5, p1000 * 137.34375, p1000 * 208.5, p1000 * 137.34375, p1000 * 216.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 219, p1000 * 102.84375, p1000 * 219, p1000 * 102.84375, p1000 * 221.5, p1000 * 68.34375);
    v1368.closePath();
    f90(v1368, p1002[0]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 136.5, p1000 * 75.34375);
    v1368.bezierCurveTo(p1000 * 139, p1000 * 94.34375, p1000 * 139, p1000 * 94.34375, p1000 * 141.5, p1000 * 113.34375);
    v1368.bezierCurveTo(p1000 * 149.5, p1000 * 115.34375, p1000 * 149.5, p1000 * 115.34375, p1000 * 157.5, p1000 * 117.34375);
    v1368.bezierCurveTo(p1000 * 162, p1000 * 97.34375, p1000 * 162, p1000 * 97.34375, p1000 * 166.5, p1000 * 77.34375);
    v1368.closePath();
    f90(v1368, p1002[0]);
    v1368.save();
    v1368.translate(p1000 * 152.5, p1000 * 80.84375);
    v1368.rotate(3.12);
    f87(v1368, p1000 * -73, p1000 * -20.5, p1000 * 146, p1000 * 41, p1000 * 5);
    v1368.restore();
    f90(v1368, p1002[0]);
    v1368.globalAlpha = 1;
    v1368.translate(0, p1000 * -10);
    v1368.save();
    v1368.translate(p1000 * 150.5, p1000 * 63.84375);
    f87(v1368, p1000 * -67, p1000 * -16.5, p1000 * 134, p1000 * 33, p1000 * 5);
    v1368.restore();
    f90(v1368, p1002[1], p1002[2], p1000 * 4);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 80.5, p1000 * 75.34375);
    v1368.bezierCurveTo(p1000 * 83, p1000 * 106.34375, p1000 * 83, p1000 * 106.34375, p1000 * 85.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 93, p1000 * 135.84375, p1000 * 93, p1000 * 135.84375, p1000 * 100.5, p1000 * 134.34375);
    v1368.bezierCurveTo(p1000 * 99.5, p1000 * 100.84375, p1000 * 99.5, p1000 * 100.84375, p1000 * 98.5, p1000 * 67.34375);
    v1368.closePath();
    f90(v1368, p1002[1], p1002[2], p1000 * 4);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 206.5, p1000 * 71.34375);
    v1368.bezierCurveTo(p1000 * 203.5, p1000 * 104.34375, p1000 * 203.5, p1000 * 104.34375, p1000 * 200.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 208.5, p1000 * 137.34375, p1000 * 208.5, p1000 * 137.34375, p1000 * 216.5, p1000 * 137.34375);
    v1368.bezierCurveTo(p1000 * 219, p1000 * 102.84375, p1000 * 219, p1000 * 102.84375, p1000 * 221.5, p1000 * 68.34375);
    v1368.closePath();
    f90(v1368, p1002[1], p1002[2], p1000 * 4);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 136.5, p1000 * 75.34375);
    v1368.bezierCurveTo(p1000 * 139, p1000 * 94.34375, p1000 * 139, p1000 * 94.34375, p1000 * 141.5, p1000 * 113.34375);
    v1368.bezierCurveTo(p1000 * 149.5, p1000 * 115.34375, p1000 * 149.5, p1000 * 115.34375, p1000 * 157.5, p1000 * 117.34375);
    v1368.bezierCurveTo(p1000 * 162, p1000 * 97.34375, p1000 * 162, p1000 * 97.34375, p1000 * 166.5, p1000 * 77.34375);
    v1368.closePath();
    f90(v1368, p1002[1], p1002[2], p1000 * 4);
    v1368.save();
    v1368.translate(p1000 * 152.5, p1000 * 80.84375);
    v1368.rotate(3.12);
    f87(v1368, p1000 * -73, p1000 * -20.5, p1000 * 146, p1000 * 41, p1000 * 5);
    v1368.restore();
    f90(v1368, p1002[1], p1002[2], p1000 * 4);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 83.5, p1000 * 73.34375);
    v1368.bezierCurveTo(p1000 * 93.5, p1000 * 70.34375, p1000 * 105.5, p1000 * 70.34375, p1000 * 124.5, p1000 * 72.34375);
    v1368.bezierCurveTo(p1000 * 132.5, p1000 * 78.34375, p1000 * 162.5, p1000 * 80.34375, p1000 * 176.5, p1000 * 76.34375);
    v1368.bezierCurveTo(p1000 * 194.5, p1000 * 69.34375, p1000 * 192.5, p1000 * 68.34375, p1000 * 199.5, p1000 * 63.34375);
    v1368.bezierCurveTo(p1000 * 204.5, p1000 * 63.34375, p1000 * 204.5, p1000 * 63.34375, p1000 * 209.5, p1000 * 63.34375);
    v1368.bezierCurveTo(p1000 * 153.5, p1000 * 82.34375, p1000 * 157.5, p1000 * 85.34375, p1000 * 209.5, p1000 * 63.34375);
    v1368.bezierCurveTo(p1000 * 194.5, p1000 * 88.34375, p1000 * 162.5, p1000 * 87.34375, p1000 * 149.5, p1000 * 88.34375);
    v1368.bezierCurveTo(p1000 * 129.5, p1000 * 81.34375, p1000 * 103.5, p1000 * 75.34375, p1000 * 83.5, p1000 * 82.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 137.5, p1000 * 65.34375);
    v1368.bezierCurveTo(p1000 * 150.5, p1000 * 76.34375, p1000 * 170.5, p1000 * 71.34375, p1000 * 174.5, p1000 * 65.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 221.5, p1000 * 85.34375);
    v1368.bezierCurveTo(p1000 * 211.5, p1000 * 79.34375, p1000 * 191.5, p1000 * 88.34375, p1000 * 181.5, p1000 * 96.34375);
    v1368.bezierCurveTo(p1000 * 201.5, p1000 * 96.34375, p1000 * 201.5, p1000 * 96.34375, p1000 * 221.5, p1000 * 96.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 84.5, p1000 * 89.34375);
    v1368.bezierCurveTo(p1000 * 102.5, p1000 * 87.34375, p1000 * 112.5, p1000 * 88.34375, p1000 * 119.5, p1000 * 97.34375);
    v1368.bezierCurveTo(p1000 * 102, p1000 * 98.34375, p1000 * 102, p1000 * 98.34375, p1000 * 84.5, p1000 * 99.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 208.5, p1000 * 104.34375);
    v1368.bezierCurveTo(p1000 * 208.5, p1000 * 110.34375, p1000 * 208.5, p1000 * 110.34375, p1000 * 208.5, p1000 * 116.34375);
    v1368.bezierCurveTo(p1000 * 211.5, p1000 * 110.34375, p1000 * 211.5, p1000 * 110.34375, p1000 * 214.5, p1000 * 104.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 87.5, p1000 * 117.34375);
    v1368.bezierCurveTo(p1000 * 92, p1000 * 118.84375, p1000 * 92, p1000 * 118.84375, p1000 * 96.5, p1000 * 120.34375);
    v1368.bezierCurveTo(p1000 * 93, p1000 * 123.84375, p1000 * 93, p1000 * 123.84375, p1000 * 89.5, p1000 * 127.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 107.5, p1000 * 51.34375);
    v1368.bezierCurveTo(p1000 * 122.5, p1000 * 54.34375, p1000 * 122.5, p1000 * 54.34375, p1000 * 137.5, p1000 * 57.34375);
    v1368.bezierCurveTo(p1000 * 118, p1000 * 57.34375, p1000 * 118, p1000 * 57.34375, p1000 * 98.5, p1000 * 57.34375);
    v1368.bezierCurveTo(p1000 * 94.5, p1000 * 54.84375, p1000 * 94.5, p1000 * 54.84375, p1000 * 90.5, p1000 * 52.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 170.5, p1000 * 52.34375);
    v1368.bezierCurveTo(p1000 * 179.5, p1000 * 51.84375, p1000 * 179.5, p1000 * 51.84375, p1000 * 188.5, p1000 * 51.34375);
    v1368.bezierCurveTo(p1000 * 187.5, p1000 * 53.84375, p1000 * 187.5, p1000 * 53.84375, p1000 * 186.5, p1000 * 56.34375);
    v1368.bezierCurveTo(p1000 * 177, p1000 * 56.34375, p1000 * 177, p1000 * 56.34375, p1000 * 167.5, p1000 * 56.34375);
    v1368.closePath();
    f90(v1368, p1002[3]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 80.5, p1000 * 69.34375);
    v1368.bezierCurveTo(p1000 * 86.5, p1000 * 70.34375, p1000 * 86.5, p1000 * 70.34375, p1000 * 92.5, p1000 * 71.34375);
    v1368.bezierCurveTo(p1000 * 86, p1000 * 73.34375, p1000 * 86, p1000 * 73.34375, p1000 * 79.5, p1000 * 75.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 222.5, p1000 * 75.34375);
    v1368.bezierCurveTo(p1000 * 214.5, p1000 * 76.34375, p1000 * 214.5, p1000 * 76.34375, p1000 * 206.5, p1000 * 77.34375);
    v1368.bezierCurveTo(p1000 * 216.5, p1000 * 79.34375, p1000 * 216.5, p1000 * 79.34375, p1000 * 226.5, p1000 * 81.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 116.5, p1000 * 100.34375);
    v1368.bezierCurveTo(p1000 * 128, p1000 * 97.34375, p1000 * 128, p1000 * 97.34375, p1000 * 139.5, p1000 * 94.34375);
    v1368.bezierCurveTo(p1000 * 140, p1000 * 96.84375, p1000 * 140, p1000 * 96.84375, p1000 * 140.5, p1000 * 99.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 112.5, p1000 * 48.34375);
    v1368.bezierCurveTo(p1000 * 115.5, p1000 * 50.84375, p1000 * 115.5, p1000 * 50.84375, p1000 * 118.5, p1000 * 53.34375);
    v1368.bezierCurveTo(p1000 * 131, p1000 * 50.84375, p1000 * 131, p1000 * 50.84375, p1000 * 143.5, p1000 * 48.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 216.5, p1000 * 109.34375);
    v1368.bezierCurveTo(p1000 * 213, p1000 * 114.84375, p1000 * 213, p1000 * 114.84375, p1000 * 209.5, p1000 * 120.34375);
    v1368.bezierCurveTo(p1000 * 212, p1000 * 118.84375, p1000 * 212, p1000 * 118.84375, p1000 * 214.5, p1000 * 117.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    v1368.beginPath();
    v1368.lineCap = "round";
    v1368.lineJoin = "round";
    v1368.moveTo(p1000 * 86.5, p1000 * 133.34375);
    v1368.bezierCurveTo(p1000 * 89, p1000 * 127.34375, p1000 * 89, p1000 * 127.34375, p1000 * 91.5, p1000 * 121.34375);
    v1368.bezierCurveTo(p1000 * 92.5, p1000 * 127.34375, p1000 * 92.5, p1000 * 127.34375, p1000 * 93.5, p1000 * 133.34375);
    v1368.closePath();
    f90(v1368, p1002[2]);
    return v1367;
  }
  function f238(p1003, p1004, p1005) {
    var v1369 = document.createElement("canvas");
    var v1370 = v1369.getContext("2d");
    v1369.width = p1003 * 135;
    v1369.height = p1003 * 120;
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1003 * 3.5, p1003 * 55.25);
    v1370.bezierCurveTo(p1003 * 3.5, p1003 * 114.25, p1003 * 2.5, p1003 * 109.25, p1003 * 3.5, p1003 * 112.25);
    v1370.bezierCurveTo(p1003 * 5.5, p1003 * 119.25, p1003 * 8.5, p1003 * 119.25, p1003 * 11.5, p1003 * 119.25);
    v1370.bezierCurveTo(p1003 * 15.5, p1003 * 114.25, p1003 * 13.5, p1003 * 95.25, p1003 * 14.5, p1003 * 82.25);
    v1370.closePath();
    f90(v1370, p1005[0], p1005[1], p1003 * 7);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1003 * 6.5, p1003 * 43.25);
    v1370.bezierCurveTo(p1003 * 3.5, p1003 * 27.25, p1003 * 7.5, p1003 * 20.25, p1003 * 25.5, p1003 * 11.25);
    v1370.bezierCurveTo(p1003 * 45.5, p1003 * -0.75, p1003 * 73.5, p1003 * 1.25, p1003 * 107.5, p1003 * 10.25);
    v1370.bezierCurveTo(p1003 * 131.5, p1003 * 21.25, p1003 * 125.5, p1003 * 34.25, p1003 * 125.5, p1003 * 36.25);
    v1370.closePath();
    f90(v1370, p1005[0], p1005[1], p1003 * 7);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1003 * 120.5, p1003 * 62.25);
    v1370.bezierCurveTo(p1003 * 121.5, p1003 * 95.25, p1003 * 120.5, p1003 * 80.25, p1003 * 120.5, p1003 * 100.25);
    v1370.bezierCurveTo(p1003 * 118.5, p1003 * 119.25, p1003 * 123.5, p1003 * 118.25, p1003 * 129.5, p1003 * 113.25);
    v1370.bezierCurveTo(p1003 * 133.5, p1003 * 107.25, p1003 * 130.5, p1003 * 97.25, p1003 * 130.5, p1003 * 87.25);
    v1370.bezierCurveTo(p1003 * 129.5, p1003 * 56.25, p1003 * 130, p1003 * 70.75, p1003 * 129.5, p1003 * 54.25);
    v1370.closePath();
    f90(v1370, p1005[0], p1005[1], p1003 * 7);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1003 * 17.5, p1003 * 27);
    v1370.bezierCurveTo(p1003 * 48.5, p1003 * 5, p1003 * 93.5, p1003 * 14, p1003 * 118.5, p1003 * 26);
    v1370.bezierCurveTo(p1003 * 132.5, p1003 * 35, p1003 * 133.5, p1003 * 52, p1003 * 132.5, p1003 * 68);
    v1370.bezierCurveTo(p1003 * 125.5, p1003 * 87, p1003 * 116.5, p1003 * 84, p1003 * 96.5, p1003 * 75);
    v1370.bezierCurveTo(p1003 * 60.5, p1003 * 66, p1003 * 52.5, p1003 * 74, p1003 * 37.5, p1003 * 78);
    v1370.bezierCurveTo(p1003 * 2.5, p1003 * 86, p1003 * 3.5, p1003 * 78, p1003 * 1.5, p1003 * 61);
    v1370.bezierCurveTo(p1003 * 1.5, p1003 * 37, p1003 * 9.5, p1003 * 32, p1003 * 15.5, p1003 * 28);
    v1370.closePath();
    f90(v1370, p1005[2], p1005[3], p1003 * 7);
    return v1369;
  }
  function f239(p1006, p1007, p1008) {
    var v1371 = document.createElement("canvas");
    var v1372 = v1371.getContext("2d");
    var v1373 = p1006 * 170;
    var v1374 = p1006 * 172;
    var v1375 = v1373 / 2;
    var v1376 = v1374 / 2;
    v1371.width = v1373;
    v1371.height = v1374;
    v1372.translate(v1375, v1376 + p1006 * 7);
    v1372.globalAlpha = p1007 ? 0.5 : 0;
    f93(v1372, 0, 0, p1006 * 60);
    f90(v1372, p1008[0]);
    v1372.globalAlpha = 1;
    v1372.translate(0, p1006 * -7);
    v1372.save();
    for (var v1377 = 0; v1377 < 10; v1377++) {
      v1372.rotate(Math.PI / 5);
      v1372.save();
      v1372.translate(p1006 * 65, 0);
      f88(v1372, 3, p1006 * 20, p1006 * 4);
      f90(v1372, p1008[1], p1008[2], p1006 * 4);
      v1372.restore();
    }
    v1372.restore();
    f93(v1372, 0, 0, p1006 * 60);
    f90(v1372, p1008[3], p1008[4], p1006 * 4);
    f93(v1372, 0, 0, p1006 * 40);
    f90(v1372, p1008[5]);
    f93(v1372, 0, 0, p1006 * 25);
    f90(v1372, p1008[6], p1008[7], p1006 * 8);
    return v1371;
  }
  function f240(p1009, p1010, p1011) {
    var v1378 = document.createElement("canvas");
    var v1379 = v1378.getContext("2d");
    v1378.width = p1009 * 170;
    v1378.height = p1009 * 170;
    v1379.translate(0, p1009 * 3);
    v1379.globalAlpha = p1010 ? 0.5 : 1;
    v1379.save();
    v1379.translate(p1009 * 85, p1009 * 95);
    v1379.rotate(1.4);
    f88(v1379, 7, p1009 * 60, p1009 * 10);
    v1379.restore();
    f90(v1379, p1011[0]);
    v1379.globalAlpha = 1;
    v1379.translate(p1009 * 85, p1009 * 82);
    for (var v1380 = 0; v1380 < 10; v1380++) {
      v1379.rotate(Math.PI / 5);
      v1379.save();
      v1379.translate(p1009 * 65, 0);
      f88(v1379, 3, p1009 * 21, p1009 * 4);
      f90(v1379, p1011[1], p1011[2], p1009 * 4);
      v1379.restore();
    }
    v1379.save();
    v1379.translate(p1009 * 0, p1009 * 0);
    v1379.rotate(0.2);
    f88(v1379, 9, p1009 * 60, p1009 * 10);
    f90(v1379, p1011[3], p1011[4], p1009 * 4);
    v1379.rotate(-0.32);
    f88(v1379, 9, p1009 * 38, p1009 * 10);
    f90(v1379, p1011[5], p1011[6], p1009 * 4);
    v1379.rotate(0.68);
    f88(v1379, 9, p1009 * 20, p1009 * 8);
    f90(v1379, p1011[7], p1011[8], p1009 * 6);
    v1379.restore();
    return v1378;
  }
  function f241(p1012, p1013, p1014) {
    var v1381 = document.createElement("canvas");
    var v1382 = v1381.getContext("2d");
    v1381.width = p1012 * 200;
    v1381.height = p1012 * 200;
    v1382.save();
    v1382.translate(p1012 * 112, p1012 * 158);
    f87(v1382, p1012 * -86.5, p1012 * -86, p1012 * 150, p1012 * 35, p1012 * 20);
    v1382.restore();
    f90(v1382, p1014[0]);
    v1382.save();
    v1382.translate(p1012 * 170, p1012 * 100);
    f87(v1382, p1012 * -86.5, p1012 * -86, p1012 * 35, p1012 * 150, p1012 * 20);
    v1382.restore();
    f90(v1382, p1014[0]);
    return v1381;
  }
  function f242(p1015, p1016, p1017) {
    var v1383 = document.createElement("canvas");
    var v1384 = v1383.getContext("2d");
    v1383.width = p1015 * 139;
    v1383.height = p1015 * 135;
    v1384.translate(0, p1015 * 10);
    v1384.globalAlpha = p1016 ? 0.5 : 1;
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 32, p1015 * 77);
    v1384.bezierCurveTo(p1015 * 6, p1015 * 41, p1015 * 6, p1015 * 33, p1015 * 12, p1015 * 27);
    v1384.bezierCurveTo(p1015 * 27, p1015 * 6, p1015 * 28, p1015 * 6, p1015 * 37, p1015 * 6);
    v1384.bezierCurveTo(p1015 * 62, p1015 * 3, p1015 * 64, p1015 * 5, p1015 * 67, p1015 * 13);
    v1384.bezierCurveTo(p1015 * 80, p1015 * 36, p1015 * 73.5, p1015 * 25, p1015 * 80, p1015 * 37);
    v1384.bezierCurveTo(p1015 * 73.5, p1015 * 54, p1015 * 65, p1015 * 74, p1015 * 67, p1015 * 71);
    v1384.closePath();
    f90(v1384, p1017[0]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 65, p1015 * 37);
    v1384.bezierCurveTo(p1015 * 105, p1015 * 40, p1015 * 113, p1015 * 39, p1015 * 117, p1015 * 48);
    v1384.bezierCurveTo(p1015 * 126, p1015 * 70, p1015 * 128, p1015 * 72, p1015 * 124, p1015 * 80);
    v1384.bezierCurveTo(p1015 * 112, p1015 * 101, p1015 * 110, p1015 * 104, p1015 * 99, p1015 * 104);
    v1384.bezierCurveTo(p1015 * 59, p1015 * 100, p1015 * 55, p1015 * 99, p1015 * 56, p1015 * 99);
    v1384.bezierCurveTo(p1015 * 47.5, p1015 * 79, p1015 * 45, p1015 * 66, p1015 * 39, p1015 * 59);
    v1384.closePath();
    f90(v1384, p1017[0]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 30, p1015 * 63);
    v1384.bezierCurveTo(p1015 * 5, p1015 * 99, p1015 * 5, p1015 * 101, p1015 * 8, p1015 * 103);
    v1384.bezierCurveTo(p1015 * 19, p1015 * 123, p1015 * 22, p1015 * 125, p1015 * 28, p1015 * 126);
    v1384.bezierCurveTo(p1015 * 57, p1015 * 127, p1015 * 55, p1015 * 127, p1015 * 58, p1015 * 120);
    v1384.bezierCurveTo(p1015 * 82, p1015 * 86, p1015 * 83, p1015 * 78, p1015 * 82, p1015 * 87);
    v1384.closePath();
    f90(v1384, p1017[0]);
    v1384.translate(0, p1015 * -10);
    v1384.globalAlpha = 1;
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 32, p1015 * 77);
    v1384.bezierCurveTo(p1015 * 6, p1015 * 41, p1015 * 6, p1015 * 33, p1015 * 12, p1015 * 27);
    v1384.bezierCurveTo(p1015 * 27, p1015 * 6, p1015 * 28, p1015 * 6, p1015 * 37, p1015 * 6);
    v1384.bezierCurveTo(p1015 * 62, p1015 * 3, p1015 * 64, p1015 * 5, p1015 * 67, p1015 * 13);
    v1384.bezierCurveTo(p1015 * 80, p1015 * 36, p1015 * 73.5, p1015 * 25, p1015 * 80, p1015 * 37);
    v1384.bezierCurveTo(p1015 * 73.5, p1015 * 54, p1015 * 65, p1015 * 74, p1015 * 67, p1015 * 71);
    v1384.closePath();
    f90(v1384, p1017[1]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 65, p1015 * 37);
    v1384.bezierCurveTo(p1015 * 105, p1015 * 40, p1015 * 113, p1015 * 39, p1015 * 117, p1015 * 48);
    v1384.bezierCurveTo(p1015 * 126, p1015 * 70, p1015 * 128, p1015 * 72, p1015 * 124, p1015 * 80);
    v1384.bezierCurveTo(p1015 * 112, p1015 * 101, p1015 * 110, p1015 * 104, p1015 * 99, p1015 * 104);
    v1384.bezierCurveTo(p1015 * 59, p1015 * 100, p1015 * 55, p1015 * 99, p1015 * 56, p1015 * 99);
    v1384.bezierCurveTo(p1015 * 47.5, p1015 * 79, p1015 * 45, p1015 * 66, p1015 * 39, p1015 * 59);
    v1384.closePath();
    f90(v1384, p1017[1]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 30, p1015 * 63);
    v1384.bezierCurveTo(p1015 * 5, p1015 * 99, p1015 * 5, p1015 * 101, p1015 * 8, p1015 * 103);
    v1384.bezierCurveTo(p1015 * 19, p1015 * 123, p1015 * 22, p1015 * 125, p1015 * 28, p1015 * 126);
    v1384.bezierCurveTo(p1015 * 57, p1015 * 127, p1015 * 55, p1015 * 127, p1015 * 58, p1015 * 120);
    v1384.bezierCurveTo(p1015 * 82, p1015 * 86, p1015 * 83, p1015 * 78, p1015 * 82, p1015 * 87);
    v1384.closePath();
    f90(v1384, p1017[1]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 80, p1015 * 38);
    v1384.bezierCurveTo(p1015 * 72.5, p1015 * 52, p1015 * 72.5, p1015 * 52, p1015 * 65, p1015 * 66);
    v1384.bezierCurveTo(p1015 * 47.5, p1015 * 37, p1015 * 47.5, p1015 * 37, p1015 * 30, p1015 * 7);
    v1384.bezierCurveTo(p1015 * 48, p1015 * 4, p1015 * 57, p1015 * 4, p1015 * 64, p1015 * 10);
    v1384.closePath();
    f90(v1384, p1017[2]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 65, p1015 * 65);
    v1384.bezierCurveTo(p1015 * 125, p1015 * 73, p1015 * 95.5, p1015 * 69, p1015 * 126, p1015 * 73);
    v1384.bezierCurveTo(p1015 * 119, p1015 * 98, p1015 * 106, p1015 * 104, p1015 * 98, p1015 * 103);
    v1384.bezierCurveTo(p1015 * 84.5, p1015 * 102, p1015 * 84.5, p1015 * 102, p1015 * 71, p1015 * 101);
    v1384.bezierCurveTo(p1015 * 64, p1015 * 86, p1015 * 64, p1015 * 86, p1015 * 57, p1015 * 70);
    v1384.closePath();
    f90(v1384, p1017[2]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 27, p1015 * 69);
    v1384.bezierCurveTo(p1015 * 64, p1015 * 65, p1015 * 46, p1015 * 67, p1015 * 65, p1015 * 65);
    v1384.bezierCurveTo(p1015 * 43.5, p1015 * 94, p1015 * 43.5, p1015 * 94, p1015 * 22, p1015 * 123);
    v1384.bezierCurveTo(p1015 * 8, p1015 * 103, p1015 * 8, p1015 * 103, p1015 * 9, p1015 * 103);
    v1384.bezierCurveTo(p1015 * 5, p1015 * 98, p1015 * 11, p1015 * 89, p1015 * 26, p1015 * 70);
    v1384.closePath();
    f90(v1384, p1017[2]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 26, p1015 * 69);
    v1384.bezierCurveTo(p1015 * 65, p1015 * 60, p1015 * 45, p1015 * 65, p1015 * 64, p1015 * 60);
    v1384.bezierCurveTo(p1015 * 63, p1015 * 65, p1015 * 63, p1015 * 65, p1015 * 62, p1015 * 70);
    v1384.closePath();
    f90(v1384, p1017[2]);
    v1384.beginPath();
    v1384.lineCap = "round";
    v1384.lineJoin = "round";
    v1384.moveTo(p1015 * 80, p1015 * 38);
    v1384.bezierCurveTo(p1015 * 68, p1015 * 70, p1015 * 75, p1015 * 53, p1015 * 70, p1015 * 68);
    v1384.bezierCurveTo(p1015 * 65, p1015 * 67, p1015 * 65, p1015 * 67, p1015 * 60, p1015 * 65);
    v1384.closePath();
    f90(v1384, p1017[2]);
    return v1383;
  }
  function f243(p1018, p1019, p1020) {
    var v1385 = document.createElement("canvas");
    var v1386 = v1385.getContext("2d");
    v1385.width = p1018 * 496;
    v1385.height = p1018 * 520;
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 10);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 19.000030517578125, p1018 * 256.67613983154297);
    v1386.bezierCurveTo(p1018 * 1.000030517578125, p1018 * 332.67613983154297, p1018 * 23.000030517578125, p1018 * 404.67613983154297, p1018 * 95.00003051757812, p1018 * 463.67613983154297);
    v1386.bezierCurveTo(p1018 * 128.00003051757812, p1018 * 491.67613983154297, p1018 * 165.00003051757812, p1018 * 507.67613983154297, p1018 * 194.00003051757812, p1018 * 512.676139831543);
    v1386.bezierCurveTo(p1018 * 280.0000305175781, p1018 * 517.676139831543, p1018 * 291.0000305175781, p1018 * 516.676139831543, p1018 * 342.0000305175781, p1018 * 497.67613983154297);
    v1386.bezierCurveTo(p1018 * 425.0000305175781, p1018 * 454.67613983154297, p1018 * 469.0000305175781, p1018 * 392.67613983154297, p1018 * 468.0000305175781, p1018 * 300.67613983154297);
    v1386.bezierCurveTo(p1018 * 408.5000305175781, p1018 * 365.17613983154297, p1018 * 408.5000305175781, p1018 * 365.17613983154297, p1018 * 349.0000305175781, p1018 * 429.67613983154297);
    v1386.bezierCurveTo(p1018 * 256.0000305175781, p1018 * 473.67613983154297, p1018 * 167.00003051757812, p1018 * 459.67613983154297, p1018 * 78.00003051757812, p1018 * 384.67613983154297);
    v1386.closePath();
    f90(v1386, p1020[0]);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -10);
    f93(v1386, p1018 * 247.01138305664062, p1018 * 249.3125, p1018 * 161.4465855941215);
    f90(v1386, p1020[5], undefined, p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 10);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 65.00003051757812, p1018 * 263.4034118652344);
    v1386.bezierCurveTo(p1018 * 109.00003051757812, p1018 * 160.40341186523438, p1018 * 185.00003051757812, p1018 * 128.40341186523438, p1018 * 222.00003051757812, p1018 * 124.40341186523438);
    v1386.bezierCurveTo(p1018 * 277.0000305175781, p1018 * 116.40341186523438, p1018 * 339.0000305175781, p1018 * 134.40341186523438, p1018 * 379.0000305175781, p1018 * 195.40341186523438);
    v1386.bezierCurveTo(p1018 * 409.0000305175781, p1018 * 242.40341186523438, p1018 * 416.0000305175781, p1018 * 256.4034118652344, p1018 * 428.0000305175781, p1018 * 304.4034118652344);
    v1386.bezierCurveTo(p1018 * 457.0000305175781, p1018 * 203.40341186523438, p1018 * 449.0000305175781, p1018 * 183.40341186523438, p1018 * 438.0000305175781, p1018 * 162.40341186523438);
    v1386.bezierCurveTo(p1018 * 381.0000305175781, p1018 * 73.40341186523438, p1018 * 360.0000305175781, p1018 * 66.40341186523438, p1018 * 257.0000305175781, p1018 * 46.403411865234375);
    v1386.bezierCurveTo(p1018 * 191.00003051757812, p1018 * 45.403411865234375, p1018 * 142.00003051757812, p1018 * 65.40341186523438, p1018 * 101.00003051757812, p1018 * 115.40341186523438);
    v1386.closePath();
    f90(v1386, p1020[0]);
    v1386.globalAlpha = 1;
    var vF44 = function (p1021, p1022) {
      var v1387 = document.createElement("canvas");
      var v1388 = v1387.getContext("2d");
      v1387.width = p1021 * 496;
      v1387.height = p1021 * 520;
      v1388.globalAlpha = 1;
      v1388.translate(0, p1021 * -10);
      f93(v1388, p1021 * 247.01138305664062, p1021 * 250.13068389892578, p1021 * 232.81967270830015);
      f90(v1388, p1022[1], p1022[2], p1021 * 14);
      v1388.globalCompositeOperation = "destination-out";
      f93(v1388, p1021 * 247.01138305664062, p1021 * 249.3125, p1021 * 161.4465855941215);
      f90(v1388, p1022[0], p1022[0], p1021 * 14);
      v1388.globalCompositeOperation = "source-over";
      return v1387;
    }(p1018, p1020);
    v1386.drawImage(vF44, 0, 0);
    v1386.translate(0, p1018 * -10);
    f93(v1386, p1018 * 247.01138305664062, p1018 * 249.3125, p1018 * 161.4465855941215);
    f90(v1386, vVVVUndefined82, p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 325.0113830566406, p1018 * 13.767059326171875);
    v1386.bezierCurveTo(p1018 * 349.5113830566406, p1018 * 25.767059326171875, p1018 * 349.5113830566406, p1018 * 25.767059326171875, p1018 * 374.0113830566406, p1018 * 37.767059326171875);
    v1386.bezierCurveTo(p1018 * 384.0113830566406, p1018 * 44.767059326171875, p1018 * 383.0113830566406, p1018 * 50.767059326171875, p1018 * 368.0113830566406, p1018 * 68.76705932617188);
    v1386.bezierCurveTo(p1018 * 352.5113830566406, p1018 * 91.26705932617188, p1018 * 352.5113830566406, p1018 * 91.26705932617188, p1018 * 337.0113830566406, p1018 * 113.76705932617188);
    v1386.bezierCurveTo(p1018 * 328.0113830566406, p1018 * 119.76705932617188, p1018 * 328.0113830566406, p1018 * 121.76705932617188, p1018 * 312.0113830566406, p1018 * 112.76705932617188);
    v1386.bezierCurveTo(p1018 * 303.0113830566406, p1018 * 108.26705932617188, p1018 * 303.0113830566406, p1018 * 108.26705932617188, p1018 * 294.0113830566406, p1018 * 103.76705932617188);
    v1386.bezierCurveTo(p1018 * 287.0113830566406, p1018 * 99.76705932617188, p1018 * 293.0113830566406, p1018 * 84.76705932617188, p1018 * 297.0113830566406, p1018 * 67.76705932617188);
    v1386.bezierCurveTo(p1018 * 302.0113830566406, p1018 * 47.767059326171875, p1018 * 302.0113830566406, p1018 * 47.767059326171875, p1018 * 307.0113830566406, p1018 * 27.767059326171875);
    v1386.bezierCurveTo(p1018 * 310.0113830566406, p1018 * 15.767059326171875, p1018 * 317.0113830566406, p1018 * 12.767059326171875, p1018 * 323.0113830566406, p1018 * 13.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 325.0113830566406, p1018 * 13.767059326171875);
    v1386.bezierCurveTo(p1018 * 349.5113830566406, p1018 * 25.767059326171875, p1018 * 349.5113830566406, p1018 * 25.767059326171875, p1018 * 374.0113830566406, p1018 * 37.767059326171875);
    v1386.bezierCurveTo(p1018 * 384.0113830566406, p1018 * 44.767059326171875, p1018 * 383.0113830566406, p1018 * 50.767059326171875, p1018 * 368.0113830566406, p1018 * 68.76705932617188);
    v1386.bezierCurveTo(p1018 * 352.5113830566406, p1018 * 91.26705932617188, p1018 * 352.5113830566406, p1018 * 91.26705932617188, p1018 * 337.0113830566406, p1018 * 113.76705932617188);
    v1386.bezierCurveTo(p1018 * 328.0113830566406, p1018 * 119.76705932617188, p1018 * 328.0113830566406, p1018 * 121.76705932617188, p1018 * 312.0113830566406, p1018 * 112.76705932617188);
    v1386.bezierCurveTo(p1018 * 303.0113830566406, p1018 * 108.26705932617188, p1018 * 303.0113830566406, p1018 * 108.26705932617188, p1018 * 294.0113830566406, p1018 * 103.76705932617188);
    v1386.bezierCurveTo(p1018 * 287.0113830566406, p1018 * 99.76705932617188, p1018 * 293.0113830566406, p1018 * 84.76705932617188, p1018 * 297.0113830566406, p1018 * 67.76705932617188);
    v1386.bezierCurveTo(p1018 * 302.0113830566406, p1018 * 47.767059326171875, p1018 * 302.0113830566406, p1018 * 47.767059326171875, p1018 * 307.0113830566406, p1018 * 27.767059326171875);
    v1386.bezierCurveTo(p1018 * 310.0113830566406, p1018 * 15.767059326171875, p1018 * 317.0113830566406, p1018 * 12.767059326171875, p1018 * 323.0113830566406, p1018 * 13.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[3], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 403.0113830566406, p1018 * 89.76705932617188);
    v1386.bezierCurveTo(p1018 * 413.0113830566406, p1018 * 76.76705932617188, p1018 * 418.0113830566406, p1018 * 79.76705932617188, p1018 * 428.0113830566406, p1018 * 92.76705932617188);
    v1386.bezierCurveTo(p1018 * 435.0113830566406, p1018 * 99.76705932617188, p1018 * 435.0113830566406, p1018 * 99.76705932617188, p1018 * 442.0113830566406, p1018 * 106.76705932617188);
    v1386.bezierCurveTo(p1018 * 450.0113830566406, p1018 * 116.76705932617188, p1018 * 445.0113830566406, p1018 * 119.76705932617188, p1018 * 433.0113830566406, p1018 * 128.76705932617188);
    v1386.bezierCurveTo(p1018 * 408.0113830566406, p1018 * 146.26705932617188, p1018 * 408.0113830566406, p1018 * 146.26705932617188, p1018 * 383.0113830566406, p1018 * 163.76705932617188);
    v1386.bezierCurveTo(p1018 * 376.0113830566406, p1018 * 166.76705932617188, p1018 * 377.0113830566406, p1018 * 165.76705932617188, p1018 * 368.0113830566406, p1018 * 156.76705932617188);
    v1386.bezierCurveTo(p1018 * 359.0113830566406, p1018 * 144.76705932617188, p1018 * 359.0113830566406, p1018 * 142.76705932617188, p1018 * 367.0113830566406, p1018 * 133.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 403.0113830566406, p1018 * 89.76705932617188);
    v1386.bezierCurveTo(p1018 * 413.0113830566406, p1018 * 76.76705932617188, p1018 * 418.0113830566406, p1018 * 79.76705932617188, p1018 * 428.0113830566406, p1018 * 92.76705932617188);
    v1386.bezierCurveTo(p1018 * 435.0113830566406, p1018 * 99.76705932617188, p1018 * 435.0113830566406, p1018 * 99.76705932617188, p1018 * 442.0113830566406, p1018 * 106.76705932617188);
    v1386.bezierCurveTo(p1018 * 450.0113830566406, p1018 * 116.76705932617188, p1018 * 445.0113830566406, p1018 * 119.76705932617188, p1018 * 433.0113830566406, p1018 * 128.76705932617188);
    v1386.bezierCurveTo(p1018 * 408.0113830566406, p1018 * 146.26705932617188, p1018 * 408.0113830566406, p1018 * 146.26705932617188, p1018 * 383.0113830566406, p1018 * 163.76705932617188);
    v1386.bezierCurveTo(p1018 * 376.0113830566406, p1018 * 166.76705932617188, p1018 * 377.0113830566406, p1018 * 165.76705932617188, p1018 * 368.0113830566406, p1018 * 156.76705932617188);
    v1386.bezierCurveTo(p1018 * 359.0113830566406, p1018 * 144.76705932617188, p1018 * 359.0113830566406, p1018 * 142.76705932617188, p1018 * 367.0113830566406, p1018 * 133.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 228.01138305664062, p1018 * 1.767059326171875);
    v1386.bezierCurveTo(p1018 * 246.51138305664062, p1018 * 3.267059326171875, p1018 * 246.51138305664062, p1018 * 3.267059326171875, p1018 * 265.0113830566406, p1018 * 4.767059326171875);
    v1386.bezierCurveTo(p1018 * 273.0113830566406, p1018 * 5.767059326171875, p1018 * 275.0113830566406, p1018 * 11.767059326171875, p1018 * 270.0113830566406, p1018 * 27.767059326171875);
    v1386.bezierCurveTo(p1018 * 264.0113830566406, p1018 * 54.267059326171875, p1018 * 264.0113830566406, p1018 * 54.267059326171875, p1018 * 258.0113830566406, p1018 * 80.76705932617188);
    v1386.bezierCurveTo(p1018 * 256.0113830566406, p1018 * 92.76705932617188, p1018 * 256.0113830566406, p1018 * 94.76705932617188, p1018 * 242.01138305664062, p1018 * 93.76705932617188);
    v1386.bezierCurveTo(p1018 * 226.01138305664062, p1018 * 95.76705932617188, p1018 * 225.01138305664062, p1018 * 91.76705932617188, p1018 * 225.01138305664062, p1018 * 80.76705932617188);
    v1386.bezierCurveTo(p1018 * 223.51138305664062, p1018 * 50.267059326171875, p1018 * 223.51138305664062, p1018 * 50.267059326171875, p1018 * 222.01138305664062, p1018 * 19.767059326171875);
    v1386.bezierCurveTo(p1018 * 219.01138305664062, p1018 * 8.767059326171875, p1018 * 224.01138305664062, p1018 * 4.767059326171875, p1018 * 227.01138305664062, p1018 * 2.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 228.01138305664062, p1018 * 1.767059326171875);
    v1386.bezierCurveTo(p1018 * 246.51138305664062, p1018 * 3.267059326171875, p1018 * 246.51138305664062, p1018 * 3.267059326171875, p1018 * 265.0113830566406, p1018 * 4.767059326171875);
    v1386.bezierCurveTo(p1018 * 273.0113830566406, p1018 * 5.767059326171875, p1018 * 275.0113830566406, p1018 * 11.767059326171875, p1018 * 270.0113830566406, p1018 * 27.767059326171875);
    v1386.bezierCurveTo(p1018 * 264.0113830566406, p1018 * 54.267059326171875, p1018 * 264.0113830566406, p1018 * 54.267059326171875, p1018 * 258.0113830566406, p1018 * 80.76705932617188);
    v1386.bezierCurveTo(p1018 * 256.0113830566406, p1018 * 92.76705932617188, p1018 * 256.0113830566406, p1018 * 94.76705932617188, p1018 * 242.01138305664062, p1018 * 93.76705932617188);
    v1386.bezierCurveTo(p1018 * 226.01138305664062, p1018 * 95.76705932617188, p1018 * 225.01138305664062, p1018 * 91.76705932617188, p1018 * 225.01138305664062, p1018 * 80.76705932617188);
    v1386.bezierCurveTo(p1018 * 223.51138305664062, p1018 * 50.267059326171875, p1018 * 223.51138305664062, p1018 * 50.267059326171875, p1018 * 222.01138305664062, p1018 * 19.767059326171875);
    v1386.bezierCurveTo(p1018 * 219.01138305664062, p1018 * 8.767059326171875, p1018 * 224.01138305664062, p1018 * 4.767059326171875, p1018 * 227.01138305664062, p1018 * 2.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 142.01138305664062, p1018 * 25.767059326171875);
    v1386.bezierCurveTo(p1018 * 158.51138305664062, p1018 * 19.767059326171875, p1018 * 158.51138305664062, p1018 * 19.767059326171875, p1018 * 175.01138305664062, p1018 * 13.767059326171875);
    v1386.bezierCurveTo(p1018 * 188.01138305664062, p1018 * 11.767059326171875, p1018 * 188.01138305664062, p1018 * 16.767059326171875, p1018 * 191.01138305664062, p1018 * 29.767059326171875);
    v1386.bezierCurveTo(p1018 * 197.01138305664062, p1018 * 60.267059326171875, p1018 * 197.01138305664062, p1018 * 60.267059326171875, p1018 * 203.01138305664062, p1018 * 90.76705932617188);
    v1386.bezierCurveTo(p1018 * 206.01138305664062, p1018 * 102.76705932617188, p1018 * 196.01138305664062, p1018 * 99.76705932617188, p1018 * 181.01138305664062, p1018 * 105.76705932617188);
    v1386.bezierCurveTo(p1018 * 175.01138305664062, p1018 * 108.76705932617188, p1018 * 172.01138305664062, p1018 * 104.76705932617188, p1018 * 164.01138305664062, p1018 * 84.76705932617188);
    v1386.bezierCurveTo(p1018 * 152.51138305664062, p1018 * 63.267059326171875, p1018 * 152.51138305664062, p1018 * 63.267059326171875, p1018 * 141.01138305664062, p1018 * 41.767059326171875);
    v1386.bezierCurveTo(p1018 * 138.01138305664062, p1018 * 35.767059326171875, p1018 * 138.01138305664062, p1018 * 29.767059326171875, p1018 * 141.01138305664062, p1018 * 27.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 142.01138305664062, p1018 * 25.767059326171875);
    v1386.bezierCurveTo(p1018 * 158.51138305664062, p1018 * 19.767059326171875, p1018 * 158.51138305664062, p1018 * 19.767059326171875, p1018 * 175.01138305664062, p1018 * 13.767059326171875);
    v1386.bezierCurveTo(p1018 * 188.01138305664062, p1018 * 11.767059326171875, p1018 * 188.01138305664062, p1018 * 16.767059326171875, p1018 * 191.01138305664062, p1018 * 29.767059326171875);
    v1386.bezierCurveTo(p1018 * 197.01138305664062, p1018 * 60.267059326171875, p1018 * 197.01138305664062, p1018 * 60.267059326171875, p1018 * 203.01138305664062, p1018 * 90.76705932617188);
    v1386.bezierCurveTo(p1018 * 206.01138305664062, p1018 * 102.76705932617188, p1018 * 196.01138305664062, p1018 * 99.76705932617188, p1018 * 181.01138305664062, p1018 * 105.76705932617188);
    v1386.bezierCurveTo(p1018 * 175.01138305664062, p1018 * 108.76705932617188, p1018 * 172.01138305664062, p1018 * 104.76705932617188, p1018 * 164.01138305664062, p1018 * 84.76705932617188);
    v1386.bezierCurveTo(p1018 * 152.51138305664062, p1018 * 63.267059326171875, p1018 * 152.51138305664062, p1018 * 63.267059326171875, p1018 * 141.01138305664062, p1018 * 41.767059326171875);
    v1386.bezierCurveTo(p1018 * 138.01138305664062, p1018 * 35.767059326171875, p1018 * 138.01138305664062, p1018 * 29.767059326171875, p1018 * 141.01138305664062, p1018 * 27.767059326171875);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 70.01138305664062, p1018 * 76.76705932617188);
    v1386.bezierCurveTo(p1018 * 83.01138305664062, p1018 * 64.26705932617188, p1018 * 83.01138305664062, p1018 * 64.26705932617188, p1018 * 96.01138305664062, p1018 * 51.767059326171875);
    v1386.bezierCurveTo(p1018 * 104.01138305664062, p1018 * 44.767059326171875, p1018 * 110.01138305664062, p1018 * 51.767059326171875, p1018 * 119.01138305664062, p1018 * 66.76705932617188);
    v1386.bezierCurveTo(p1018 * 135.01138305664062, p1018 * 88.26705932617188, p1018 * 135.01138305664062, p1018 * 88.26705932617188, p1018 * 151.01138305664062, p1018 * 109.76705932617188);
    v1386.bezierCurveTo(p1018 * 157.01138305664062, p1018 * 119.76705932617188, p1018 * 153.01138305664062, p1018 * 122.76705932617188, p1018 * 147.01138305664062, p1018 * 129.76705932617188);
    v1386.bezierCurveTo(p1018 * 138.01138305664062, p1018 * 140.76705932617188, p1018 * 136.01138305664062, p1018 * 140.76705932617188, p1018 * 122.01138305664062, p1018 * 127.76705932617188);
    v1386.bezierCurveTo(p1018 * 99.51138305664062, p1018 * 110.26705932617188, p1018 * 99.51138305664062, p1018 * 110.26705932617188, p1018 * 77.01138305664062, p1018 * 92.76705932617188);
    v1386.bezierCurveTo(p1018 * 66.01138305664062, p1018 * 83.76705932617188, p1018 * 66.01138305664062, p1018 * 82.76705932617188, p1018 * 69.01138305664062, p1018 * 78.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 70.01138305664062, p1018 * 76.76705932617188);
    v1386.bezierCurveTo(p1018 * 83.01138305664062, p1018 * 64.26705932617188, p1018 * 83.01138305664062, p1018 * 64.26705932617188, p1018 * 96.01138305664062, p1018 * 51.767059326171875);
    v1386.bezierCurveTo(p1018 * 104.01138305664062, p1018 * 44.767059326171875, p1018 * 110.01138305664062, p1018 * 51.767059326171875, p1018 * 119.01138305664062, p1018 * 66.76705932617188);
    v1386.bezierCurveTo(p1018 * 135.01138305664062, p1018 * 88.26705932617188, p1018 * 135.01138305664062, p1018 * 88.26705932617188, p1018 * 151.01138305664062, p1018 * 109.76705932617188);
    v1386.bezierCurveTo(p1018 * 157.01138305664062, p1018 * 119.76705932617188, p1018 * 153.01138305664062, p1018 * 122.76705932617188, p1018 * 147.01138305664062, p1018 * 129.76705932617188);
    v1386.bezierCurveTo(p1018 * 138.01138305664062, p1018 * 140.76705932617188, p1018 * 136.01138305664062, p1018 * 140.76705932617188, p1018 * 122.01138305664062, p1018 * 127.76705932617188);
    v1386.bezierCurveTo(p1018 * 99.51138305664062, p1018 * 110.26705932617188, p1018 * 99.51138305664062, p1018 * 110.26705932617188, p1018 * 77.01138305664062, p1018 * 92.76705932617188);
    v1386.bezierCurveTo(p1018 * 66.01138305664062, p1018 * 83.76705932617188, p1018 * 66.01138305664062, p1018 * 82.76705932617188, p1018 * 69.01138305664062, p1018 * 78.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 33.011383056640625, p1018 * 126.76705932617188);
    v1386.bezierCurveTo(p1018 * 22.011383056640625, p1018 * 149.76705932617188, p1018 * 22.011383056640625, p1018 * 149.76705932617188, p1018 * 11.011383056640625, p1018 * 172.76705932617188);
    v1386.bezierCurveTo(p1018 * 7.011383056640625, p1018 * 184.76705932617188, p1018 * 11.011383056640625, p1018 * 189.76705932617188, p1018 * 36.011383056640625, p1018 * 195.76705932617188);
    v1386.bezierCurveTo(p1018 * 61.011383056640625, p1018 * 202.26705932617188, p1018 * 61.011383056640625, p1018 * 202.26705932617188, p1018 * 86.01138305664062, p1018 * 208.76705932617188);
    v1386.bezierCurveTo(p1018 * 100.01138305664062, p1018 * 214.76705932617188, p1018 * 102.01138305664062, p1018 * 203.76705932617188, p1018 * 109.01138305664062, p1018 * 189.76705932617188);
    v1386.bezierCurveTo(p1018 * 117.01138305664062, p1018 * 171.76705932617188, p1018 * 116.01138305664062, p1018 * 166.76705932617188, p1018 * 97.01138305664062, p1018 * 156.76705932617188);
    v1386.bezierCurveTo(p1018 * 74.01138305664062, p1018 * 140.76705932617188, p1018 * 74.01138305664062, p1018 * 140.76705932617188, p1018 * 51.011383056640625, p1018 * 124.76705932617188);
    v1386.bezierCurveTo(p1018 * 42.011383056640625, p1018 * 118.76705932617188, p1018 * 37.011383056640625, p1018 * 119.76705932617188, p1018 * 33.011383056640625, p1018 * 126.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 33.011383056640625, p1018 * 126.76705932617188);
    v1386.bezierCurveTo(p1018 * 22.011383056640625, p1018 * 149.76705932617188, p1018 * 22.011383056640625, p1018 * 149.76705932617188, p1018 * 11.011383056640625, p1018 * 172.76705932617188);
    v1386.bezierCurveTo(p1018 * 7.011383056640625, p1018 * 184.76705932617188, p1018 * 11.011383056640625, p1018 * 189.76705932617188, p1018 * 36.011383056640625, p1018 * 195.76705932617188);
    v1386.bezierCurveTo(p1018 * 61.011383056640625, p1018 * 202.26705932617188, p1018 * 61.011383056640625, p1018 * 202.26705932617188, p1018 * 86.01138305664062, p1018 * 208.76705932617188);
    v1386.bezierCurveTo(p1018 * 100.01138305664062, p1018 * 214.76705932617188, p1018 * 102.01138305664062, p1018 * 203.76705932617188, p1018 * 109.01138305664062, p1018 * 189.76705932617188);
    v1386.bezierCurveTo(p1018 * 117.01138305664062, p1018 * 171.76705932617188, p1018 * 116.01138305664062, p1018 * 166.76705932617188, p1018 * 97.01138305664062, p1018 * 156.76705932617188);
    v1386.bezierCurveTo(p1018 * 74.01138305664062, p1018 * 140.76705932617188, p1018 * 74.01138305664062, p1018 * 140.76705932617188, p1018 * 51.011383056640625, p1018 * 124.76705932617188);
    v1386.bezierCurveTo(p1018 * 42.011383056640625, p1018 * 118.76705932617188, p1018 * 37.011383056640625, p1018 * 119.76705932617188, p1018 * 33.011383056640625, p1018 * 126.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[3], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 13.011383056640625, p1018 * 229.76705932617188);
    v1386.bezierCurveTo(p1018 * 45.511383056640625, p1018 * 233.76705932617188, p1018 * 45.511383056640625, p1018 * 233.76705932617188, p1018 * 78.01138305664062, p1018 * 237.76705932617188);
    v1386.bezierCurveTo(p1018 * 92.01138305664062, p1018 * 239.76705932617188, p1018 * 92.01138305664062, p1018 * 246.76705932617188, p1018 * 91.01138305664062, p1018 * 257.7670593261719);
    v1386.bezierCurveTo(p1018 * 92.01138305664062, p1018 * 275.7670593261719, p1018 * 91.01138305664062, p1018 * 274.7670593261719, p1018 * 68.01138305664062, p1018 * 276.7670593261719);
    v1386.bezierCurveTo(p1018 * 42.511383056640625, p1018 * 279.7670593261719, p1018 * 42.511383056640625, p1018 * 279.7670593261719, p1018 * 17.011383056640625, p1018 * 282.7670593261719);
    v1386.bezierCurveTo(p1018 * 2.011383056640625, p1018 * 282.7670593261719, p1018 * 3.011383056640625, p1018 * 276.7670593261719, p1018 * 2.011383056640625, p1018 * 260.7670593261719);
    v1386.bezierCurveTo(p1018 * 2.011383056640625, p1018 * 231.76705932617188, p1018 * 4.011383056640625, p1018 * 232.76705932617188, p1018 * 11.011383056640625, p1018 * 230.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 13.011383056640625, p1018 * 229.76705932617188);
    v1386.bezierCurveTo(p1018 * 45.511383056640625, p1018 * 233.76705932617188, p1018 * 45.511383056640625, p1018 * 233.76705932617188, p1018 * 78.01138305664062, p1018 * 237.76705932617188);
    v1386.bezierCurveTo(p1018 * 92.01138305664062, p1018 * 239.76705932617188, p1018 * 92.01138305664062, p1018 * 246.76705932617188, p1018 * 91.01138305664062, p1018 * 257.7670593261719);
    v1386.bezierCurveTo(p1018 * 92.01138305664062, p1018 * 275.7670593261719, p1018 * 91.01138305664062, p1018 * 274.7670593261719, p1018 * 68.01138305664062, p1018 * 276.7670593261719);
    v1386.bezierCurveTo(p1018 * 42.511383056640625, p1018 * 279.7670593261719, p1018 * 42.511383056640625, p1018 * 279.7670593261719, p1018 * 17.011383056640625, p1018 * 282.7670593261719);
    v1386.bezierCurveTo(p1018 * 2.011383056640625, p1018 * 282.7670593261719, p1018 * 3.011383056640625, p1018 * 276.7670593261719, p1018 * 2.011383056640625, p1018 * 260.7670593261719);
    v1386.bezierCurveTo(p1018 * 2.011383056640625, p1018 * 231.76705932617188, p1018 * 4.011383056640625, p1018 * 232.76705932617188, p1018 * 11.011383056640625, p1018 * 230.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 97.01138305664062, p1018 * 329.7670593261719);
    v1386.bezierCurveTo(p1018 * 68.51138305664062, p1018 * 343.7670593261719, p1018 * 68.51138305664062, p1018 * 343.7670593261719, p1018 * 40.011383056640625, p1018 * 357.7670593261719);
    v1386.bezierCurveTo(p1018 * 29.011383056640625, p1018 * 360.7670593261719, p1018 * 27.011383056640625, p1018 * 361.7670593261719, p1018 * 20.011383056640625, p1018 * 346.7670593261719);
    v1386.bezierCurveTo(p1018 * 16.511383056640625, p1018 * 336.2670593261719, p1018 * 16.511383056640625, p1018 * 336.2670593261719, p1018 * 13.011383056640625, p1018 * 325.7670593261719);
    v1386.bezierCurveTo(p1018 * 10.011383056640625, p1018 * 307.7670593261719, p1018 * 18.011383056640625, p1018 * 312.7670593261719, p1018 * 34.011383056640625, p1018 * 306.7670593261719);
    v1386.bezierCurveTo(p1018 * 59.511383056640625, p1018 * 302.2670593261719, p1018 * 59.511383056640625, p1018 * 302.2670593261719, p1018 * 85.01138305664062, p1018 * 297.7670593261719);
    v1386.bezierCurveTo(p1018 * 97.01138305664062, p1018 * 294.7670593261719, p1018 * 100.01138305664062, p1018 * 297.7670593261719, p1018 * 100.01138305664062, p1018 * 307.7670593261719);
    v1386.bezierCurveTo(p1018 * 105.01138305664062, p1018 * 326.7670593261719, p1018 * 103.01138305664062, p1018 * 325.7670593261719, p1018 * 97.01138305664062, p1018 * 329.7670593261719);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 97.01138305664062, p1018 * 329.7670593261719);
    v1386.bezierCurveTo(p1018 * 68.51138305664062, p1018 * 343.7670593261719, p1018 * 68.51138305664062, p1018 * 343.7670593261719, p1018 * 40.011383056640625, p1018 * 357.7670593261719);
    v1386.bezierCurveTo(p1018 * 29.011383056640625, p1018 * 360.7670593261719, p1018 * 27.011383056640625, p1018 * 361.7670593261719, p1018 * 20.011383056640625, p1018 * 346.7670593261719);
    v1386.bezierCurveTo(p1018 * 16.511383056640625, p1018 * 336.2670593261719, p1018 * 16.511383056640625, p1018 * 336.2670593261719, p1018 * 13.011383056640625, p1018 * 325.7670593261719);
    v1386.bezierCurveTo(p1018 * 10.011383056640625, p1018 * 307.7670593261719, p1018 * 18.011383056640625, p1018 * 312.7670593261719, p1018 * 34.011383056640625, p1018 * 306.7670593261719);
    v1386.bezierCurveTo(p1018 * 59.511383056640625, p1018 * 302.2670593261719, p1018 * 59.511383056640625, p1018 * 302.2670593261719, p1018 * 85.01138305664062, p1018 * 297.7670593261719);
    v1386.bezierCurveTo(p1018 * 97.01138305664062, p1018 * 294.7670593261719, p1018 * 100.01138305664062, p1018 * 297.7670593261719, p1018 * 100.01138305664062, p1018 * 307.7670593261719);
    v1386.bezierCurveTo(p1018 * 105.01138305664062, p1018 * 326.7670593261719, p1018 * 103.01138305664062, p1018 * 325.7670593261719, p1018 * 97.01138305664062, p1018 * 329.7670593261719);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 394.0113830566406, p1018 * 181.76705932617188);
    v1386.bezierCurveTo(p1018 * 426.5113830566406, p1018 * 166.76705932617188, p1018 * 426.5113830566406, p1018 * 166.76705932617188, p1018 * 459.0113830566406, p1018 * 151.76705932617188);
    v1386.bezierCurveTo(p1018 * 469.0113830566406, p1018 * 152.76705932617188, p1018 * 469.0113830566406, p1018 * 155.76705932617188, p1018 * 472.0113830566406, p1018 * 165.76705932617188);
    v1386.bezierCurveTo(p1018 * 476.0113830566406, p1018 * 177.26705932617188, p1018 * 476.0113830566406, p1018 * 177.26705932617188, p1018 * 480.0113830566406, p1018 * 188.76705932617188);
    v1386.bezierCurveTo(p1018 * 483.0113830566406, p1018 * 199.76705932617188, p1018 * 480.0113830566406, p1018 * 200.76705932617188, p1018 * 460.0113830566406, p1018 * 205.76705932617188);
    v1386.bezierCurveTo(p1018 * 433.5113830566406, p1018 * 210.26705932617188, p1018 * 433.5113830566406, p1018 * 210.26705932617188, p1018 * 407.0113830566406, p1018 * 214.76705932617188);
    v1386.bezierCurveTo(p1018 * 395.0113830566406, p1018 * 218.76705932617188, p1018 * 397.0113830566406, p1018 * 211.76705932617188, p1018 * 393.0113830566406, p1018 * 202.76705932617188);
    v1386.bezierCurveTo(p1018 * 387.0113830566406, p1018 * 188.76705932617188, p1018 * 387.0113830566406, p1018 * 187.76705932617188, p1018 * 394.0113830566406, p1018 * 181.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 394.0113830566406, p1018 * 181.76705932617188);
    v1386.bezierCurveTo(p1018 * 426.5113830566406, p1018 * 166.76705932617188, p1018 * 426.5113830566406, p1018 * 166.76705932617188, p1018 * 459.0113830566406, p1018 * 151.76705932617188);
    v1386.bezierCurveTo(p1018 * 469.0113830566406, p1018 * 152.76705932617188, p1018 * 469.0113830566406, p1018 * 155.76705932617188, p1018 * 472.0113830566406, p1018 * 165.76705932617188);
    v1386.bezierCurveTo(p1018 * 476.0113830566406, p1018 * 177.26705932617188, p1018 * 476.0113830566406, p1018 * 177.26705932617188, p1018 * 480.0113830566406, p1018 * 188.76705932617188);
    v1386.bezierCurveTo(p1018 * 483.0113830566406, p1018 * 199.76705932617188, p1018 * 480.0113830566406, p1018 * 200.76705932617188, p1018 * 460.0113830566406, p1018 * 205.76705932617188);
    v1386.bezierCurveTo(p1018 * 433.5113830566406, p1018 * 210.26705932617188, p1018 * 433.5113830566406, p1018 * 210.26705932617188, p1018 * 407.0113830566406, p1018 * 214.76705932617188);
    v1386.bezierCurveTo(p1018 * 395.0113830566406, p1018 * 218.76705932617188, p1018 * 397.0113830566406, p1018 * 211.76705932617188, p1018 * 393.0113830566406, p1018 * 202.76705932617188);
    v1386.bezierCurveTo(p1018 * 387.0113830566406, p1018 * 188.76705932617188, p1018 * 387.0113830566406, p1018 * 187.76705932617188, p1018 * 394.0113830566406, p1018 * 181.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 411.0113830566406, p1018 * 234.76705932617188);
    v1386.bezierCurveTo(p1018 * 446.0113830566406, p1018 * 233.26705932617188, p1018 * 446.0113830566406, p1018 * 233.26705932617188, p1018 * 481.0113830566406, p1018 * 231.76705932617188);
    v1386.bezierCurveTo(p1018 * 491.0113830566406, p1018 * 232.76705932617188, p1018 * 493.0113830566406, p1018 * 239.76705932617188, p1018 * 491.0113830566406, p1018 * 251.76705932617188);
    v1386.bezierCurveTo(p1018 * 490.0113830566406, p1018 * 263.7670593261719, p1018 * 490.0113830566406, p1018 * 263.7670593261719, p1018 * 489.0113830566406, p1018 * 275.7670593261719);
    v1386.bezierCurveTo(p1018 * 487.0113830566406, p1018 * 283.7670593261719, p1018 * 483.0113830566406, p1018 * 284.7670593261719, p1018 * 464.0113830566406, p1018 * 280.7670593261719);
    v1386.bezierCurveTo(p1018 * 437.0113830566406, p1018 * 273.7670593261719, p1018 * 437.0113830566406, p1018 * 273.7670593261719, p1018 * 410.0113830566406, p1018 * 266.7670593261719);
    v1386.bezierCurveTo(p1018 * 400.0113830566406, p1018 * 261.7670593261719, p1018 * 401.0113830566406, p1018 * 259.7670593261719, p1018 * 402.0113830566406, p1018 * 249.76705932617188);
    v1386.bezierCurveTo(p1018 * 401.0113830566406, p1018 * 237.76705932617188, p1018 * 403.0113830566406, p1018 * 235.76705932617188, p1018 * 408.0113830566406, p1018 * 234.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 411.0113830566406, p1018 * 234.76705932617188);
    v1386.bezierCurveTo(p1018 * 446.0113830566406, p1018 * 233.26705932617188, p1018 * 446.0113830566406, p1018 * 233.26705932617188, p1018 * 481.0113830566406, p1018 * 231.76705932617188);
    v1386.bezierCurveTo(p1018 * 491.0113830566406, p1018 * 232.76705932617188, p1018 * 493.0113830566406, p1018 * 239.76705932617188, p1018 * 491.0113830566406, p1018 * 251.76705932617188);
    v1386.bezierCurveTo(p1018 * 490.0113830566406, p1018 * 263.7670593261719, p1018 * 490.0113830566406, p1018 * 263.7670593261719, p1018 * 489.0113830566406, p1018 * 275.7670593261719);
    v1386.bezierCurveTo(p1018 * 487.0113830566406, p1018 * 283.7670593261719, p1018 * 483.0113830566406, p1018 * 284.7670593261719, p1018 * 464.0113830566406, p1018 * 280.7670593261719);
    v1386.bezierCurveTo(p1018 * 437.0113830566406, p1018 * 273.7670593261719, p1018 * 437.0113830566406, p1018 * 273.7670593261719, p1018 * 410.0113830566406, p1018 * 266.7670593261719);
    v1386.bezierCurveTo(p1018 * 400.0113830566406, p1018 * 261.7670593261719, p1018 * 401.0113830566406, p1018 * 259.7670593261719, p1018 * 402.0113830566406, p1018 * 249.76705932617188);
    v1386.bezierCurveTo(p1018 * 401.0113830566406, p1018 * 237.76705932617188, p1018 * 403.0113830566406, p1018 * 235.76705932617188, p1018 * 408.0113830566406, p1018 * 234.76705932617188);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 400.0113830566406, p1018 * 290.7670593261719);
    v1386.bezierCurveTo(p1018 * 437.0113830566406, p1018 * 301.2670593261719, p1018 * 437.0113830566406, p1018 * 301.2670593261719, p1018 * 474.0113830566406, p1018 * 311.7670593261719);
    v1386.bezierCurveTo(p1018 * 484.0113830566406, p1018 * 319.7670593261719, p1018 * 481.0113830566406, p1018 * 322.7670593261719, p1018 * 474.0113830566406, p1018 * 335.7670593261719);
    v1386.bezierCurveTo(p1018 * 465.5113830566406, p1018 * 354.7670593261719, p1018 * 465.5113830566406, p1018 * 354.7670593261719, p1018 * 457.0113830566406, p1018 * 373.7670593261719);
    v1386.bezierCurveTo(p1018 * 449.0113830566406, p1018 * 386.7670593261719, p1018 * 444.0113830566406, p1018 * 384.7670593261719, p1018 * 427.0113830566406, p1018 * 370.7670593261719);
    v1386.bezierCurveTo(p1018 * 403.0113830566406, p1018 * 354.7670593261719, p1018 * 403.0113830566406, p1018 * 354.7670593261719, p1018 * 379.0113830566406, p1018 * 338.7670593261719);
    v1386.bezierCurveTo(p1018 * 371.0113830566406, p1018 * 327.7670593261719, p1018 * 373.0113830566406, p1018 * 323.7670593261719, p1018 * 377.0113830566406, p1018 * 313.7670593261719);
    v1386.bezierCurveTo(p1018 * 386.0113830566406, p1018 * 292.7670593261719, p1018 * 393.0113830566406, p1018 * 288.7670593261719, p1018 * 398.0113830566406, p1018 * 291.7670593261719);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 400.0113830566406, p1018 * 290.7670593261719);
    v1386.bezierCurveTo(p1018 * 437.0113830566406, p1018 * 301.2670593261719, p1018 * 437.0113830566406, p1018 * 301.2670593261719, p1018 * 474.0113830566406, p1018 * 311.7670593261719);
    v1386.bezierCurveTo(p1018 * 484.0113830566406, p1018 * 319.7670593261719, p1018 * 481.0113830566406, p1018 * 322.7670593261719, p1018 * 474.0113830566406, p1018 * 335.7670593261719);
    v1386.bezierCurveTo(p1018 * 465.5113830566406, p1018 * 354.7670593261719, p1018 * 465.5113830566406, p1018 * 354.7670593261719, p1018 * 457.0113830566406, p1018 * 373.7670593261719);
    v1386.bezierCurveTo(p1018 * 449.0113830566406, p1018 * 386.7670593261719, p1018 * 444.0113830566406, p1018 * 384.7670593261719, p1018 * 427.0113830566406, p1018 * 370.7670593261719);
    v1386.bezierCurveTo(p1018 * 403.0113830566406, p1018 * 354.7670593261719, p1018 * 403.0113830566406, p1018 * 354.7670593261719, p1018 * 379.0113830566406, p1018 * 338.7670593261719);
    v1386.bezierCurveTo(p1018 * 371.0113830566406, p1018 * 327.7670593261719, p1018 * 373.0113830566406, p1018 * 323.7670593261719, p1018 * 377.0113830566406, p1018 * 313.7670593261719);
    v1386.bezierCurveTo(p1018 * 386.0113830566406, p1018 * 292.7670593261719, p1018 * 393.0113830566406, p1018 * 288.7670593261719, p1018 * 398.0113830566406, p1018 * 291.7670593261719);
    v1386.closePath();
    f90(v1386, p1020[3], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 366.0113830566406, p1018 * 361.2216033935547);
    v1386.bezierCurveTo(p1018 * 393.0113830566406, p1018 * 383.2216033935547, p1018 * 393.0113830566406, p1018 * 383.2216033935547, p1018 * 420.0113830566406, p1018 * 405.2216033935547);
    v1386.bezierCurveTo(p1018 * 427.0113830566406, p1018 * 414.2216033935547, p1018 * 425.0113830566406, p1018 * 417.2216033935547, p1018 * 413.0113830566406, p1018 * 428.2216033935547);
    v1386.bezierCurveTo(p1018 * 405.5113830566406, p1018 * 435.2216033935547, p1018 * 405.5113830566406, p1018 * 435.2216033935547, p1018 * 398.0113830566406, p1018 * 442.2216033935547);
    v1386.bezierCurveTo(p1018 * 388.0113830566406, p1018 * 451.2216033935547, p1018 * 385.0113830566406, p1018 * 445.2216033935547, p1018 * 373.0113830566406, p1018 * 428.2216033935547);
    v1386.bezierCurveTo(p1018 * 358.5113830566406, p1018 * 408.2216033935547, p1018 * 358.5113830566406, p1018 * 408.2216033935547, p1018 * 344.0113830566406, p1018 * 388.2216033935547);
    v1386.bezierCurveTo(p1018 * 337.0113830566406, p1018 * 378.2216033935547, p1018 * 342.0113830566406, p1018 * 377.2216033935547, p1018 * 347.0113830566406, p1018 * 371.2216033935547);
    v1386.bezierCurveTo(p1018 * 359.0113830566406, p1018 * 359.2216033935547, p1018 * 361.0113830566406, p1018 * 358.2216033935547, p1018 * 364.0113830566406, p1018 * 361.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 366.0113830566406, p1018 * 361.2216033935547);
    v1386.bezierCurveTo(p1018 * 393.0113830566406, p1018 * 383.2216033935547, p1018 * 393.0113830566406, p1018 * 383.2216033935547, p1018 * 420.0113830566406, p1018 * 405.2216033935547);
    v1386.bezierCurveTo(p1018 * 427.0113830566406, p1018 * 414.2216033935547, p1018 * 425.0113830566406, p1018 * 417.2216033935547, p1018 * 413.0113830566406, p1018 * 428.2216033935547);
    v1386.bezierCurveTo(p1018 * 405.5113830566406, p1018 * 435.2216033935547, p1018 * 405.5113830566406, p1018 * 435.2216033935547, p1018 * 398.0113830566406, p1018 * 442.2216033935547);
    v1386.bezierCurveTo(p1018 * 388.0113830566406, p1018 * 451.2216033935547, p1018 * 385.0113830566406, p1018 * 445.2216033935547, p1018 * 373.0113830566406, p1018 * 428.2216033935547);
    v1386.bezierCurveTo(p1018 * 358.5113830566406, p1018 * 408.2216033935547, p1018 * 358.5113830566406, p1018 * 408.2216033935547, p1018 * 344.0113830566406, p1018 * 388.2216033935547);
    v1386.bezierCurveTo(p1018 * 337.0113830566406, p1018 * 378.2216033935547, p1018 * 342.0113830566406, p1018 * 377.2216033935547, p1018 * 347.0113830566406, p1018 * 371.2216033935547);
    v1386.bezierCurveTo(p1018 * 359.0113830566406, p1018 * 359.2216033935547, p1018 * 361.0113830566406, p1018 * 358.2216033935547, p1018 * 364.0113830566406, p1018 * 361.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 323.0113830566406, p1018 * 393.2216033935547);
    v1386.bezierCurveTo(p1018 * 338.0113830566406, p1018 * 424.7216033935547, p1018 * 338.0113830566406, p1018 * 424.7216033935547, p1018 * 353.0113830566406, p1018 * 456.2216033935547);
    v1386.bezierCurveTo(p1018 * 355.0113830566406, p1018 * 467.2216033935547, p1018 * 354.0113830566406, p1018 * 469.2216033935547, p1018 * 336.0113830566406, p1018 * 475.2216033935547);
    v1386.bezierCurveTo(p1018 * 326.0113830566406, p1018 * 478.2216033935547, p1018 * 326.0113830566406, p1018 * 478.2216033935547, p1018 * 316.0113830566406, p1018 * 481.2216033935547);
    v1386.bezierCurveTo(p1018 * 304.0113830566406, p1018 * 484.2216033935547, p1018 * 304.0113830566406, p1018 * 477.2216033935547, p1018 * 301.0113830566406, p1018 * 454.2216033935547);
    v1386.bezierCurveTo(p1018 * 295.5113830566406, p1018 * 429.2216033935547, p1018 * 295.5113830566406, p1018 * 429.2216033935547, p1018 * 290.0113830566406, p1018 * 404.2216033935547);
    v1386.bezierCurveTo(p1018 * 287.0113830566406, p1018 * 396.2216033935547, p1018 * 297.0113830566406, p1018 * 394.2216033935547, p1018 * 303.0113830566406, p1018 * 392.2216033935547);
    v1386.bezierCurveTo(p1018 * 316.0113830566406, p1018 * 387.2216033935547, p1018 * 318.0113830566406, p1018 * 387.2216033935547, p1018 * 323.0113830566406, p1018 * 394.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 323.0113830566406, p1018 * 393.2216033935547);
    v1386.bezierCurveTo(p1018 * 338.0113830566406, p1018 * 424.7216033935547, p1018 * 338.0113830566406, p1018 * 424.7216033935547, p1018 * 353.0113830566406, p1018 * 456.2216033935547);
    v1386.bezierCurveTo(p1018 * 355.0113830566406, p1018 * 467.2216033935547, p1018 * 354.0113830566406, p1018 * 469.2216033935547, p1018 * 336.0113830566406, p1018 * 475.2216033935547);
    v1386.bezierCurveTo(p1018 * 326.0113830566406, p1018 * 478.2216033935547, p1018 * 326.0113830566406, p1018 * 478.2216033935547, p1018 * 316.0113830566406, p1018 * 481.2216033935547);
    v1386.bezierCurveTo(p1018 * 304.0113830566406, p1018 * 484.2216033935547, p1018 * 304.0113830566406, p1018 * 477.2216033935547, p1018 * 301.0113830566406, p1018 * 454.2216033935547);
    v1386.bezierCurveTo(p1018 * 295.5113830566406, p1018 * 429.2216033935547, p1018 * 295.5113830566406, p1018 * 429.2216033935547, p1018 * 290.0113830566406, p1018 * 404.2216033935547);
    v1386.bezierCurveTo(p1018 * 287.0113830566406, p1018 * 396.2216033935547, p1018 * 297.0113830566406, p1018 * 394.2216033935547, p1018 * 303.0113830566406, p1018 * 392.2216033935547);
    v1386.bezierCurveTo(p1018 * 316.0113830566406, p1018 * 387.2216033935547, p1018 * 318.0113830566406, p1018 * 387.2216033935547, p1018 * 323.0113830566406, p1018 * 394.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 270.0113830566406, p1018 * 413.2216033935547);
    v1386.bezierCurveTo(p1018 * 271.0113830566406, p1018 * 445.7216033935547, p1018 * 271.0113830566406, p1018 * 445.7216033935547, p1018 * 272.0113830566406, p1018 * 478.2216033935547);
    v1386.bezierCurveTo(p1018 * 273.0113830566406, p1018 * 490.2216033935547, p1018 * 267.0113830566406, p1018 * 493.2216033935547, p1018 * 249.01138305664062, p1018 * 490.2216033935547);
    v1386.bezierCurveTo(p1018 * 222.01138305664062, p1018 * 492.2216033935547, p1018 * 220.01138305664062, p1018 * 485.2216033935547, p1018 * 225.01138305664062, p1018 * 467.2216033935547);
    v1386.bezierCurveTo(p1018 * 230.51138305664062, p1018 * 440.2216033935547, p1018 * 230.51138305664062, p1018 * 440.2216033935547, p1018 * 236.01138305664062, p1018 * 413.2216033935547);
    v1386.bezierCurveTo(p1018 * 237.01138305664062, p1018 * 405.2216033935547, p1018 * 238.01138305664062, p1018 * 404.2216033935547, p1018 * 253.01138305664062, p1018 * 403.2216033935547);
    v1386.bezierCurveTo(p1018 * 269.0113830566406, p1018 * 405.2216033935547, p1018 * 270.0113830566406, p1018 * 407.2216033935547, p1018 * 269.0113830566406, p1018 * 412.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 270.0113830566406, p1018 * 413.2216033935547);
    v1386.bezierCurveTo(p1018 * 271.0113830566406, p1018 * 445.7216033935547, p1018 * 271.0113830566406, p1018 * 445.7216033935547, p1018 * 272.0113830566406, p1018 * 478.2216033935547);
    v1386.bezierCurveTo(p1018 * 273.0113830566406, p1018 * 490.2216033935547, p1018 * 267.0113830566406, p1018 * 493.2216033935547, p1018 * 249.01138305664062, p1018 * 490.2216033935547);
    v1386.bezierCurveTo(p1018 * 222.01138305664062, p1018 * 492.2216033935547, p1018 * 220.01138305664062, p1018 * 485.2216033935547, p1018 * 225.01138305664062, p1018 * 467.2216033935547);
    v1386.bezierCurveTo(p1018 * 230.51138305664062, p1018 * 440.2216033935547, p1018 * 230.51138305664062, p1018 * 440.2216033935547, p1018 * 236.01138305664062, p1018 * 413.2216033935547);
    v1386.bezierCurveTo(p1018 * 237.01138305664062, p1018 * 405.2216033935547, p1018 * 238.01138305664062, p1018 * 404.2216033935547, p1018 * 253.01138305664062, p1018 * 403.2216033935547);
    v1386.bezierCurveTo(p1018 * 269.0113830566406, p1018 * 405.2216033935547, p1018 * 270.0113830566406, p1018 * 407.2216033935547, p1018 * 269.0113830566406, p1018 * 412.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 207.01138305664062, p1018 * 406.2216033935547);
    v1386.bezierCurveTo(p1018 * 197.51138305664062, p1018 * 440.7216033935547, p1018 * 197.51138305664062, p1018 * 440.7216033935547, p1018 * 188.01138305664062, p1018 * 475.2216033935547);
    v1386.bezierCurveTo(p1018 * 184.01138305664062, p1018 * 485.2216033935547, p1018 * 179.01138305664062, p1018 * 491.2216033935547, p1018 * 152.01138305664062, p1018 * 477.2216033935547);
    v1386.bezierCurveTo(p1018 * 136.51138305664062, p1018 * 469.7216033935547, p1018 * 136.51138305664062, p1018 * 469.7216033935547, p1018 * 121.01138305664062, p1018 * 462.2216033935547);
    v1386.bezierCurveTo(p1018 * 109.01138305664062, p1018 * 453.2216033935547, p1018 * 117.01138305664062, p1018 * 447.2216033935547, p1018 * 133.01138305664062, p1018 * 427.2216033935547);
    v1386.bezierCurveTo(p1018 * 146.51138305664062, p1018 * 406.7216033935547, p1018 * 146.51138305664062, p1018 * 406.7216033935547, p1018 * 160.01138305664062, p1018 * 386.2216033935547);
    v1386.bezierCurveTo(p1018 * 163.01138305664062, p1018 * 377.2216033935547, p1018 * 168.01138305664062, p1018 * 378.2216033935547, p1018 * 187.01138305664062, p1018 * 387.2216033935547);
    v1386.bezierCurveTo(p1018 * 206.01138305664062, p1018 * 395.2216033935547, p1018 * 208.01138305664062, p1018 * 398.2216033935547, p1018 * 207.01138305664062, p1018 * 405.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 207.01138305664062, p1018 * 406.2216033935547);
    v1386.bezierCurveTo(p1018 * 197.51138305664062, p1018 * 440.7216033935547, p1018 * 197.51138305664062, p1018 * 440.7216033935547, p1018 * 188.01138305664062, p1018 * 475.2216033935547);
    v1386.bezierCurveTo(p1018 * 184.01138305664062, p1018 * 485.2216033935547, p1018 * 179.01138305664062, p1018 * 491.2216033935547, p1018 * 152.01138305664062, p1018 * 477.2216033935547);
    v1386.bezierCurveTo(p1018 * 136.51138305664062, p1018 * 469.7216033935547, p1018 * 136.51138305664062, p1018 * 469.7216033935547, p1018 * 121.01138305664062, p1018 * 462.2216033935547);
    v1386.bezierCurveTo(p1018 * 109.01138305664062, p1018 * 453.2216033935547, p1018 * 117.01138305664062, p1018 * 447.2216033935547, p1018 * 133.01138305664062, p1018 * 427.2216033935547);
    v1386.bezierCurveTo(p1018 * 146.51138305664062, p1018 * 406.7216033935547, p1018 * 146.51138305664062, p1018 * 406.7216033935547, p1018 * 160.01138305664062, p1018 * 386.2216033935547);
    v1386.bezierCurveTo(p1018 * 163.01138305664062, p1018 * 377.2216033935547, p1018 * 168.01138305664062, p1018 * 378.2216033935547, p1018 * 187.01138305664062, p1018 * 387.2216033935547);
    v1386.bezierCurveTo(p1018 * 206.01138305664062, p1018 * 395.2216033935547, p1018 * 208.01138305664062, p1018 * 398.2216033935547, p1018 * 207.01138305664062, p1018 * 405.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[3], p1020[2], p1018 * 12);
    v1386.globalAlpha = p1019 ? 0.5 : 1;
    v1386.translate(0, p1018 * 5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 130.01138305664062, p1018 * 375.2216033935547);
    v1386.bezierCurveTo(p1018 * 109.51138305664062, p1018 * 400.7216033935547, p1018 * 109.51138305664062, p1018 * 400.7216033935547, p1018 * 89.01138305664062, p1018 * 426.2216033935547);
    v1386.bezierCurveTo(p1018 * 82.01138305664062, p1018 * 435.2216033935547, p1018 * 77.01138305664062, p1018 * 435.2216033935547, p1018 * 62.011383056640625, p1018 * 417.2216033935547);
    v1386.bezierCurveTo(p1018 * 43.011383056640625, p1018 * 397.2216033935547, p1018 * 47.011383056640625, p1018 * 395.2216033935547, p1018 * 62.011383056640625, p1018 * 382.2216033935547);
    v1386.bezierCurveTo(p1018 * 84.01138305664062, p1018 * 366.7216033935547, p1018 * 84.01138305664062, p1018 * 366.7216033935547, p1018 * 106.01138305664062, p1018 * 351.2216033935547);
    v1386.bezierCurveTo(p1018 * 116.01138305664062, p1018 * 344.2216033935547, p1018 * 120.01138305664062, p1018 * 347.2216033935547, p1018 * 127.01138305664062, p1018 * 356.2216033935547);
    v1386.bezierCurveTo(p1018 * 137.01138305664062, p1018 * 366.2216033935547, p1018 * 137.01138305664062, p1018 * 366.2216033935547, p1018 * 131.01138305664062, p1018 * 376.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[0], p1020[0], p1018 * 12);
    v1386.globalAlpha = 1;
    v1386.translate(0, p1018 * -5);
    v1386.beginPath();
    v1386.lineCap = "round";
    v1386.lineJoin = "round";
    v1386.moveTo(p1018 * 130.01138305664062, p1018 * 375.2216033935547);
    v1386.bezierCurveTo(p1018 * 109.51138305664062, p1018 * 400.7216033935547, p1018 * 109.51138305664062, p1018 * 400.7216033935547, p1018 * 89.01138305664062, p1018 * 426.2216033935547);
    v1386.bezierCurveTo(p1018 * 82.01138305664062, p1018 * 435.2216033935547, p1018 * 77.01138305664062, p1018 * 435.2216033935547, p1018 * 62.011383056640625, p1018 * 417.2216033935547);
    v1386.bezierCurveTo(p1018 * 43.011383056640625, p1018 * 397.2216033935547, p1018 * 47.011383056640625, p1018 * 395.2216033935547, p1018 * 62.011383056640625, p1018 * 382.2216033935547);
    v1386.bezierCurveTo(p1018 * 84.01138305664062, p1018 * 366.7216033935547, p1018 * 84.01138305664062, p1018 * 366.7216033935547, p1018 * 106.01138305664062, p1018 * 351.2216033935547);
    v1386.bezierCurveTo(p1018 * 116.01138305664062, p1018 * 344.2216033935547, p1018 * 120.01138305664062, p1018 * 347.2216033935547, p1018 * 127.01138305664062, p1018 * 356.2216033935547);
    v1386.bezierCurveTo(p1018 * 137.01138305664062, p1018 * 366.2216033935547, p1018 * 137.01138305664062, p1018 * 366.2216033935547, p1018 * 131.01138305664062, p1018 * 376.2216033935547);
    v1386.closePath();
    f90(v1386, p1020[4], p1020[2], p1018 * 12);
    return v1385;
  }
  function f244(p1023, p1024, p1025) {
    var v1389 = document.createElement("canvas");
    var v1390 = v1389.getContext("2d");
    v1389.width = p1023 * 440;
    v1389.height = p1023 * 388;
    v1390.globalAlpha = p1024 ? 0.5 : 1;
    v1390.translate(p1023 * 5, p1023 * 5);
    f93(v1390, p1023 * 220, p1023 * 201, p1023 * 170.41713528867922);
    f90(v1390, p1025[0], p1025[0], p1023 * 6);
    v1390.globalAlpha = 1;
    v1390.translate(p1023 * -5, p1023 * -5);
    f93(v1390, p1023 * 220, p1023 * 201, p1023 * 170.41713528867922);
    f90(v1390, p1025[1], p1025[2], p1023 * 6);
    f93(v1390, p1023 * 220, p1023 * 201, p1023 * 130);
    f90(v1390, p1025[11], p1025[2], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 218, p1023 * 97);
    v1390.bezierCurveTo(p1023 * 219, p1023 * 163, p1023 * 201, p1023 * 176, p1023 * 191, p1023 * 175);
    v1390.bezierCurveTo(p1023 * 176, p1023 * 177, p1023 * 168, p1023 * 167, p1023 * 160, p1023 * 115);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 224, p1023 * 181);
    v1390.bezierCurveTo(p1023 * 225, p1023 * 138, p1023 * 246, p1023 * 115, p1023 * 263, p1023 * 137);
    v1390.bezierCurveTo(p1023 * 282, p1023 * 174, p1023 * 279, p1023 * 217, p1023 * 265, p1023 * 243);
    v1390.bezierCurveTo(p1023 * 253, p1023 * 264, p1023 * 240, p1023 * 256, p1023 * 233, p1023 * 238);
    v1390.bezierCurveTo(p1023 * 221, p1023 * 212, p1023 * 225, p1023 * 198, p1023 * 224, p1023 * 184);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 169, p1023 * 289);
    v1390.bezierCurveTo(p1023 * 161, p1023 * 234, p1023 * 168, p1023 * 197, p1023 * 187, p1023 * 195);
    v1390.bezierCurveTo(p1023 * 219, p1023 * 189, p1023 * 222, p1023 * 256, p1023 * 216, p1023 * 307);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 143, p1023 * 146);
    v1390.bezierCurveTo(p1023 * 161, p1023 * 199, p1023 * 151, p1023 * 245, p1023 * 138, p1023 * 266);
    v1390.bezierCurveTo(p1023 * 120.5, p1023 * 239.5, p1023 * 120.5, p1023 * 239.5, p1023 * 103, p1023 * 213);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 283, p1023 * 135);
    v1390.bezierCurveTo(p1023 * 277, p1023 * 176, p1023 * 298, p1023 * 194, p1023 * 315, p1023 * 205);
    v1390.bezierCurveTo(p1023 * 323.5, p1023 * 175, p1023 * 323.5, p1023 * 175, p1023 * 332, p1023 * 145);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 318, p1023 * 223);
    v1390.bezierCurveTo(p1023 * 290, p1023 * 195, p1023 * 271, p1023 * 256, p1023 * 283, p1023 * 281);
    v1390.bezierCurveTo(p1023 * 303.5, p1023 * 267, p1023 * 303.5, p1023 * 267, p1023 * 324, p1023 * 253);
    v1390.closePath();
    f90(v1390, p1025[5], p1025[6], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 142, p1023 * 223);
    v1390.bezierCurveTo(p1023 * 128, p1023 * 213, p1023 * 123, p1023 * 214, p1023 * 111, p1023 * 223);
    v1390.closePath();
    f90(v1390, p1025[10], p1025[10], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 251, p1023 * 133);
    v1390.bezierCurveTo(p1023 * 269, p1023 * 188, p1023 * 262, p1023 * 229, p1023 * 251, p1023 * 253);
    v1390.bezierCurveTo(p1023 * 288, p1023 * 224, p1023 * 273, p1023 * 139, p1023 * 252, p1023 * 133);
    v1390.closePath();
    f90(v1390, p1025[10], p1025[10], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 203, p1023 * 102);
    v1390.bezierCurveTo(p1023 * 204, p1023 * 136, p1023 * 200, p1023 * 159, p1023 * 189, p1023 * 174);
    v1390.bezierCurveTo(p1023 * 223, p1023 * 164, p1023 * 219, p1023 * 87, p1023 * 205, p1023 * 83);
    v1390.closePath();
    f90(v1390, p1025[10], p1025[10], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 196, p1023 * 324);
    v1390.bezierCurveTo(p1023 * 209, p1023 * 239, p1023 * 200, p1023 * 219, p1023 * 192, p1023 * 196);
    v1390.bezierCurveTo(p1023 * 229, p1023 * 216, p1023 * 219, p1023 * 316, p1023 * 198, p1023 * 325);
    v1390.closePath();
    f90(v1390, p1025[10], p1025[10], p1023 * 4);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 266, p1023 * 166);
    v1390.bezierCurveTo(p1023 * 249, p1023 * 154, p1023 * 243, p1023 * 161, p1023 * 233, p1023 * 167);
    f90(v1390, vVVUndefined13, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 269, p1023 * 192);
    v1390.bezierCurveTo(p1023 * 256, p1023 * 183, p1023 * 241, p1023 * 186, p1023 * 233, p1023 * 192);
    f90(v1390, vVVUndefined13, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 263, p1023 * 217);
    v1390.bezierCurveTo(p1023 * 251, p1023 * 211, p1023 * 242, p1023 * 213, p1023 * 236, p1023 * 218);
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 204, p1023 * 141);
    v1390.bezierCurveTo(p1023 * 191, p1023 * 131, p1023 * 187, p1023 * 133, p1023 * 176, p1023 * 141);
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 207, p1023 * 230);
    v1390.bezierCurveTo(p1023 * 193, p1023 * 222, p1023 * 185, p1023 * 224, p1023 * 177, p1023 * 231);
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 210, p1023 * 258);
    v1390.bezierCurveTo(p1023 * 196, p1023 * 247, p1023 * 191, p1023 * 250, p1023 * 177, p1023 * 259);
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 145, p1023 * 196);
    v1390.bezierCurveTo(p1023 * 130, p1023 * 186, p1023 * 124, p1023 * 187, p1023 * 114, p1023 * 195);
    f90(v1390, vVVUndefined13, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 218, p1023 * 97);
    v1390.bezierCurveTo(p1023 * 219, p1023 * 163, p1023 * 201, p1023 * 176, p1023 * 191, p1023 * 175);
    v1390.bezierCurveTo(p1023 * 176, p1023 * 177, p1023 * 168, p1023 * 167, p1023 * 160, p1023 * 115);
    v1390.closePath();
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 224, p1023 * 181);
    v1390.bezierCurveTo(p1023 * 225, p1023 * 138, p1023 * 246, p1023 * 115, p1023 * 263, p1023 * 137);
    v1390.bezierCurveTo(p1023 * 282, p1023 * 174, p1023 * 279, p1023 * 217, p1023 * 265, p1023 * 243);
    v1390.bezierCurveTo(p1023 * 253, p1023 * 264, p1023 * 240, p1023 * 256, p1023 * 233, p1023 * 238);
    v1390.bezierCurveTo(p1023 * 221, p1023 * 212, p1023 * 225, p1023 * 198, p1023 * 224, p1023 * 184);
    v1390.closePath();
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 169, p1023 * 289);
    v1390.bezierCurveTo(p1023 * 161, p1023 * 234, p1023 * 168, p1023 * 197, p1023 * 187, p1023 * 195);
    v1390.bezierCurveTo(p1023 * 219, p1023 * 189, p1023 * 222, p1023 * 256, p1023 * 216, p1023 * 307);
    v1390.closePath();
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 143, p1023 * 146);
    v1390.bezierCurveTo(p1023 * 161, p1023 * 199, p1023 * 151, p1023 * 245, p1023 * 138, p1023 * 266);
    v1390.bezierCurveTo(p1023 * 120.5, p1023 * 239.5, p1023 * 120.5, p1023 * 239.5, p1023 * 103, p1023 * 213);
    v1390.closePath();
    f90(v1390, undefined, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 283, p1023 * 135);
    v1390.bezierCurveTo(p1023 * 277, p1023 * 176, p1023 * 298, p1023 * 194, p1023 * 315, p1023 * 205);
    v1390.bezierCurveTo(p1023 * 323.5, p1023 * 175, p1023 * 323.5, p1023 * 175, p1023 * 332, p1023 * 145);
    v1390.closePath();
    f90(v1390, vVVVVVUndefined1322, p1025[6], p1023 * 6);
    v1390.beginPath();
    v1390.lineCap = "round";
    v1390.lineJoin = "round";
    v1390.moveTo(p1023 * 318, p1023 * 223);
    v1390.bezierCurveTo(p1023 * 290, p1023 * 195, p1023 * 271, p1023 * 256, p1023 * 283, p1023 * 281);
    v1390.bezierCurveTo(p1023 * 303.5, p1023 * 267, p1023 * 303.5, p1023 * 267, p1023 * 324, p1023 * 253);
    v1390.closePath();
    f90(v1390, vVVUndefined83, p1025[6], p1023 * 6);
    f93(v1390, p1023 * 222, p1023 * 199, p1023 * 120.74767078498864);
    f90(v1390, vVVVUndefined132, p1025[3], p1023 * 40);
    f93(v1390, p1023 * 220, p1023 * 200, p1023 * 95.44108130150245);
    f90(v1390, undefined, p1025[2], p1023 * 15);
    f93(v1390, p1023 * 220, p1023 * 201, p1023 * 85);
    f90(v1390, undefined, p1025[4], p1023 * 10);
    v1390.globalAlpha = 0.5;
    f93(v1390, p1023 * 220, p1023 * 201, p1023 * 82);
    f90(v1390, p1025[9]);
    v1390.globalAlpha = p1024 ? 0.5 : 1;
    v1390.translate(p1023 * 5, p1023 * 5);
    f93(v1390, p1023 * 63, p1023 * 136, p1023 * 49.193495504995376);
    f90(v1390, p1025[0], p1025[0], p1023 * 4);
    v1390.globalAlpha = 1;
    v1390.translate(p1023 * -5, p1023 * -5);
    f93(v1390, p1023 * 63, p1023 * 136, p1023 * 49.193495504995376);
    f90(v1390, p1025[8], p1025[2], p1023 * 4);
    f93(v1390, p1023 * 63, p1023 * 137, p1023 * 25.632011235952593);
    f90(v1390, p1025[7], p1025[2], p1023 * 4);
    return v1389;
  }
  function f245(p1026, p1027) {
    var v1391 = document.createElement("canvas");
    var v1392 = v1391.getContext("2d");
    v1391.width = p1026 * 147;
    v1391.height = p1026 * 172;
    v1392.globalAlpha = 0.5;
    v1392.translate(0, p1026 * 8);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 8, p1026 * 50);
    v1392.bezierCurveTo(p1026 * 15, p1026 * 16, p1026 * 49, p1026 * 6, p1026 * 67, p1026 * 6);
    v1392.bezierCurveTo(p1026 * 121, p1026 * 3, p1026 * 128, p1026 * 32, p1026 * 135, p1026 * 48);
    v1392.bezierCurveTo(p1026 * 146, p1026 * 96, p1026 * 124, p1026 * 131, p1026 * 96, p1026 * 135);
    v1392.bezierCurveTo(p1026 * 96, p1026 * 158, p1026 * 79, p1026 * 156, p1026 * 75, p1026 * 156);
    v1392.bezierCurveTo(p1026 * 50, p1026 * 154, p1026 * 53, p1026 * 150, p1026 * 52, p1026 * 135);
    v1392.bezierCurveTo(p1026 * 2, p1026 * 127, p1026 * 3, p1026 * 87, p1026 * 8, p1026 * 50);
    v1392.closePath();
    f90(v1392, p1027[0]);
    v1392.translate(0, p1026 * -8);
    v1392.globalAlpha = 1;
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 8, p1026 * 50);
    v1392.bezierCurveTo(p1026 * 15, p1026 * 16, p1026 * 49, p1026 * 6, p1026 * 67, p1026 * 6);
    v1392.bezierCurveTo(p1026 * 121, p1026 * 3, p1026 * 128, p1026 * 32, p1026 * 135, p1026 * 48);
    v1392.bezierCurveTo(p1026 * 146, p1026 * 96, p1026 * 124, p1026 * 131, p1026 * 96, p1026 * 135);
    v1392.bezierCurveTo(p1026 * 96, p1026 * 158, p1026 * 79, p1026 * 156, p1026 * 75, p1026 * 156);
    v1392.bezierCurveTo(p1026 * 50, p1026 * 154, p1026 * 53, p1026 * 150, p1026 * 52, p1026 * 135);
    v1392.bezierCurveTo(p1026 * 2, p1026 * 127, p1026 * 3, p1026 * 87, p1026 * 8, p1026 * 50);
    v1392.closePath();
    f90(v1392, p1027[1], p1027[2], p1026 * 4);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 14, p1026 * 57);
    v1392.bezierCurveTo(p1026 * 2, p1026 * 50, p1026 * 5, p1026 * 22, p1026 * 24, p1026 * 22);
    v1392.bezierCurveTo(p1026 * 41, p1026 * 21, p1026 * 54, p1026 * 32, p1026 * 55, p1026 * 48);
    f90(v1392, p1027[1], p1027[2], p1026 * 4);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 93, p1026 * 47);
    v1392.bezierCurveTo(p1026 * 94, p1026 * 24, p1026 * 116, p1026 * 21, p1026 * 120, p1026 * 20);
    v1392.bezierCurveTo(p1026 * 144, p1026 * 17, p1026 * 146, p1026 * 52, p1026 * 133, p1026 * 58);
    f90(v1392, p1027[1], p1027[2], p1026 * 4);
    f93(v1392, p1026 * 51, p1026 * 91, p1026 * 9);
    f90(v1392, p1027[3]);
    f93(v1392, p1026 * 95, p1026 * 91, p1026 * 9);
    f90(v1392, p1027[3]);
    f93(v1392, p1026 * 91, p1026 * 89, p1026 * 4);
    f90(v1392, p1027[4]);
    f93(v1392, p1026 * 47, p1026 * 89, p1026 * 4);
    f90(v1392, p1027[4]);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 54, p1026 * 133);
    v1392.bezierCurveTo(p1026 * 56, p1026 * 108, p1026 * 64, p1026 * 99, p1026 * 73, p1026 * 98);
    v1392.bezierCurveTo(p1026 * 86, p1026 * 97, p1026 * 91, p1026 * 119, p1026 * 93, p1026 * 133);
    v1392.bezierCurveTo(p1026 * 94, p1026 * 155, p1026 * 90, p1026 * 150, p1026 * 74, p1026 * 155);
    v1392.bezierCurveTo(p1026 * 50, p1026 * 152, p1026 * 55, p1026 * 145, p1026 * 54, p1026 * 134);
    v1392.closePath();
    f90(v1392, p1027[5]);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 65.25, p1026 * 135);
    v1392.bezierCurveTo(p1026 * 75.25, p1026 * 128, p1026 * 83.25, p1026 * 133, p1026 * 83.25, p1026 * 138);
    v1392.bezierCurveTo(p1026 * 88.25, p1026 * 148, p1026 * 61.25, p1026 * 149, p1026 * 64.25, p1026 * 137);
    v1392.closePath();
    f90(v1392, p1027[6]);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 74, p1026 * 145);
    v1392.bezierCurveTo(p1026 * 74, p1026 * 148, p1026 * 74, p1026 * 148, p1026 * 74, p1026 * 151);
    v1392.closePath();
    f90(v1392, undefined, p1027[6], p1026 * 2);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 19, p1026 * 58);
    v1392.bezierCurveTo(p1026 * 10, p1026 * 38, p1026 * 18, p1026 * 33, p1026 * 28, p1026 * 34);
    v1392.bezierCurveTo(p1026 * 41, p1026 * 39, p1026 * 45, p1026 * 45, p1026 * 50, p1026 * 51);
    v1392.closePath();
    f90(v1392, p1027[6]);
    v1392.beginPath();
    v1392.lineCap = "round";
    v1392.lineJoin = "round";
    v1392.moveTo(p1026 * 100, p1026 * 51);
    v1392.bezierCurveTo(p1026 * 106, p1026 * 36, p1026 * 119, p1026 * 31, p1026 * 128, p1026 * 36);
    v1392.bezierCurveTo(p1026 * 137, p1026 * 49, p1026 * 128, p1026 * 58, p1026 * 128, p1026 * 60);
    v1392.closePath();
    f90(v1392, p1027[6]);
    return v1391;
  }
  function f246(p1028, p1029, p1030) {
    var v1393 = (v1394 = document.createElement("canvas")).getContext("2d");
    v1394.width = p1028 * 47;
    v1394.height = p1028 * 60;
    var v1394;
    v1393 = (v1394 = document.createElement("canvas")).getContext("2d");
    v1394.width = p1028 * 47;
    v1394.height = p1028 * 60;
    f93(v1393, p1028 * 23.5, p1028 * 20.734375, p1028 * 15.132745950421556);
    f90(v1393, vVVVVVUndefined1322, p1030[2], p1028 * 4);
    f93(v1393, p1028 * 23.5, p1028 * 20.734375, p1028 * 18.601075237738275);
    f90(v1393, vVVVUndefined13, p1030[1], p1028 * 4);
    f93(v1393, p1028 * 23.5, p1028 * 20.734375, p1028 * 11.40175425099138);
    f90(v1393, undefined, p1030[1], p1028 * 4);
    v1393.save();
    v1393.translate(p1028 * 23, p1028 * 38.734375);
    v1393.rotate(0);
    f87(v1393, p1028 * -21.5, p1028 * -19, p1028 * 43, p1028 * 38, p1028 * 10);
    v1393.restore();
    f90(v1393, p1030[2], p1030[1], p1028 * 4);
    v1393.save();
    v1393.translate(p1028 * 23.5, p1028 * 43.734375);
    v1393.rotate(0.5235987755982988);
    f88(v1393, 3, p1028 * 8.06225774829855, p1028 * 0);
    v1393.restore();
    f90(v1393, p1030[3]);
    f93(v1393, p1028 * 23.5, p1028 * 35.734375, p1028 * 7.0710678118654755);
    f90(v1393, p1030[3]);
    return v1394;
  }
  function f247(p1031, p1032) {
    var v1395 = document.createElement("canvas");
    var v1396 = v1395.getContext("2d");
    v1395.width = p1031 * 271;
    v1395.height = p1031 * 366;
    v1396.globalAlpha = 0.5;
    v1396.translate(0, p1031 * 10);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 99);
    v1396.bezierCurveTo(p1031 * 186, p1031 * 123, p1031 * 199, p1031 * 152, p1031 * 209, p1031 * 169);
    v1396.bezierCurveTo(p1031 * 228, p1031 * 205, p1031 * 224, p1031 * 245, p1031 * 190, p1031 * 276);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 296, p1031 * 99, p1031 * 292, p1031 * 79, p1031 * 274);
    v1396.bezierCurveTo(p1031 * 49, p1031 * 253, p1031 * 47, p1031 * 214, p1031 * 50, p1031 * 197);
    v1396.bezierCurveTo(p1031 * 61, p1031 * 143, p1031 * 102, p1031 * 113, p1031 * 131, p1031 * 99);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 73, p1031 * 270);
    v1396.bezierCurveTo(p1031 * 79, p1031 * 280, p1031 * 77, p1031 * 280, p1031 * 78, p1031 * 287);
    v1396.bezierCurveTo(p1031 * 78, p1031 * 290, p1031 * 83, p1031 * 291, p1031 * 82, p1031 * 299);
    v1396.bezierCurveTo(p1031 * 81, p1031 * 301, p1031 * 87, p1031 * 301, p1031 * 92, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 94, p1031 * 319, p1031 * 100, p1031 * 321, p1031 * 107, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 323, p1031 * 114, p1031 * 324, p1031 * 119, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 321, p1031 * 146, p1031 * 323, p1031 * 139, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 324, p1031 * 150, p1031 * 324, p1031 * 153, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 168, p1031 * 319, p1031 * 171, p1031 * 316, p1031 * 173, p1031 * 307);
    v1396.bezierCurveTo(p1031 * 180, p1031 * 305, p1031 * 180, p1031 * 301, p1031 * 178, p1031 * 296);
    v1396.bezierCurveTo(p1031 * 183, p1031 * 296, p1031 * 185, p1031 * 289, p1031 * 188, p1031 * 279);
    v1396.bezierCurveTo(p1031 * 171, p1031 * 286, p1031 * 149, p1031 * 290, p1031 * 132, p1031 * 289);
    v1396.bezierCurveTo(p1031 * 101, p1031 * 290, p1031 * 86, p1031 * 280, p1031 * 74, p1031 * 271);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 76, p1031 * 252);
    v1396.bezierCurveTo(p1031 * 85, p1031 * 294, p1031 * 96, p1031 * 314, p1031 * 103, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 316, p1031 * 151, p1031 * 314, p1031 * 156, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 169, p1031 * 317, p1031 * 182, p1031 * 285, p1031 * 191, p1031 * 256);
    v1396.bezierCurveTo(p1031 * 134.5, p1031 * 254, p1031 * 134.5, p1031 * 254, p1031 * 78, p1031 * 252);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 84, p1031 * 257);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 273, p1031 * 146, p1031 * 268, p1031 * 179, p1031 * 261);
    v1396.bezierCurveTo(p1031 * 190, p1031 * 258, p1031 * 187, p1031 * 266, p1031 * 178, p1031 * 272);
    v1396.bezierCurveTo(p1031 * 160, p1031 * 284, p1031 * 123, p1031 * 282, p1031 * 100, p1031 * 277);
    v1396.bezierCurveTo(p1031 * 73, p1031 * 260, p1031 * 79, p1031 * 257, p1031 * 84, p1031 * 257);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 125, p1031 * 65);
    v1396.bezierCurveTo(p1031 * 133, p1031 * 45, p1031 * 136, p1031 * 42, p1031 * 141, p1031 * 55);
    v1396.bezierCurveTo(p1031 * 151, p1031 * 96, p1031 * 164, p1031 * 117, p1031 * 175, p1031 * 134);
    v1396.bezierCurveTo(p1031 * 203, p1031 * 181, p1031 * 207, p1031 * 182, p1031 * 208, p1031 * 215);
    v1396.bezierCurveTo(p1031 * 206, p1031 * 240, p1031 * 205, p1031 * 246, p1031 * 184, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 267, p1031 * 131, p1031 * 272, p1031 * 86, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 67, p1031 * 252, p1031 * 68, p1031 * 239, p1031 * 64, p1031 * 216);
    v1396.bezierCurveTo(p1031 * 62, p1031 * 194, p1031 * 72, p1031 * 169, p1031 * 92, p1031 * 142);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 121, p1031 * 114, p1031 * 101, p1031 * 125, p1031 * 65);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 115, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 116, p1031 * 28, p1031 * 119, p1031 * 27, p1031 * 126, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 134, p1031 * 48, p1031 * 134, p1031 * 49, p1031 * 132, p1031 * 59);
    v1396.bezierCurveTo(p1031 * 131, p1031 * 67, p1031 * 127, p1031 * 65, p1031 * 120, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 49, p1031 * 113, p1031 * 43, p1031 * 115, p1031 * 38);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 146, p1031 * 34);
    v1396.bezierCurveTo(p1031 * 152, p1031 * 28, p1031 * 155, p1031 * 27, p1031 * 157, p1031 * 39);
    v1396.bezierCurveTo(p1031 * 157, p1031 * 45, p1031 * 157, p1031 * 49, p1031 * 150, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 66, p1031 * 138, p1031 * 66, p1031 * 138, p1031 * 57);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 50, p1031 * 137, p1031 * 47, p1031 * 141, p1031 * 42);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 143, p1031 * 69);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 56, p1031 * 156, p1031 * 50, p1031 * 158, p1031 * 58);
    v1396.bezierCurveTo(p1031 * 159, p1031 * 64, p1031 * 160, p1031 * 67, p1031 * 153, p1031 * 77);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 83, p1031 * 145, p1031 * 84, p1031 * 143, p1031 * 77);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 149, p1031 * 92);
    v1396.bezierCurveTo(p1031 * 149, p1031 * 89, p1031 * 151, p1031 * 84, p1031 * 156, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 73, p1031 * 163, p1031 * 78, p1031 * 162, p1031 * 86);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 91, p1031 * 155, p1031 * 99, p1031 * 152, p1031 * 98);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 111, p1031 * 61);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 51, p1031 * 117, p1031 * 51, p1031 * 124, p1031 * 64);
    v1396.bezierCurveTo(p1031 * 128, p1031 * 68, p1031 * 128, p1031 * 76, p1031 * 126, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 123, p1031 * 84, p1031 * 122, p1031 * 82, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 112, p1031 * 67, p1031 * 115, p1031 * 74, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 68, p1031 * 111, p1031 * 66, p1031 * 111, p1031 * 62);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 107, p1031 * 81);
    v1396.bezierCurveTo(p1031 * 108, p1031 * 74, p1031 * 112, p1031 * 73, p1031 * 118, p1031 * 84);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 88, p1031 * 122, p1031 * 93, p1031 * 121, p1031 * 98);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 98, p1031 * 113, p1031 * 98, p1031 * 109, p1031 * 90);
    v1396.bezierCurveTo(p1031 * 107, p1031 * 87, p1031 * 106, p1031 * 85, p1031 * 107, p1031 * 82);
    v1396.closePath();
    f90(v1396, p1032[0]);
    v1396.globalAlpha = 1;
    v1396.translate(0, p1031 * -10);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 99);
    v1396.bezierCurveTo(p1031 * 186, p1031 * 123, p1031 * 199, p1031 * 152, p1031 * 209, p1031 * 169);
    v1396.bezierCurveTo(p1031 * 228, p1031 * 205, p1031 * 224, p1031 * 245, p1031 * 190, p1031 * 276);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 296, p1031 * 99, p1031 * 292, p1031 * 79, p1031 * 274);
    v1396.bezierCurveTo(p1031 * 49, p1031 * 253, p1031 * 47, p1031 * 214, p1031 * 50, p1031 * 197);
    v1396.bezierCurveTo(p1031 * 61, p1031 * 143, p1031 * 102, p1031 * 113, p1031 * 131, p1031 * 99);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 73, p1031 * 270);
    v1396.bezierCurveTo(p1031 * 79, p1031 * 280, p1031 * 77, p1031 * 280, p1031 * 78, p1031 * 287);
    v1396.bezierCurveTo(p1031 * 78, p1031 * 290, p1031 * 83, p1031 * 291, p1031 * 82, p1031 * 299);
    v1396.bezierCurveTo(p1031 * 81, p1031 * 301, p1031 * 87, p1031 * 301, p1031 * 92, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 94, p1031 * 319, p1031 * 100, p1031 * 321, p1031 * 107, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 323, p1031 * 114, p1031 * 324, p1031 * 119, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 321, p1031 * 146, p1031 * 323, p1031 * 139, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 324, p1031 * 150, p1031 * 324, p1031 * 153, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 168, p1031 * 319, p1031 * 171, p1031 * 316, p1031 * 173, p1031 * 307);
    v1396.bezierCurveTo(p1031 * 180, p1031 * 305, p1031 * 180, p1031 * 301, p1031 * 178, p1031 * 296);
    v1396.bezierCurveTo(p1031 * 183, p1031 * 296, p1031 * 185, p1031 * 289, p1031 * 188, p1031 * 279);
    v1396.bezierCurveTo(p1031 * 171, p1031 * 286, p1031 * 149, p1031 * 290, p1031 * 132, p1031 * 289);
    v1396.bezierCurveTo(p1031 * 101, p1031 * 290, p1031 * 86, p1031 * 280, p1031 * 74, p1031 * 271);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 76, p1031 * 252);
    v1396.bezierCurveTo(p1031 * 85, p1031 * 294, p1031 * 96, p1031 * 314, p1031 * 103, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 316, p1031 * 151, p1031 * 314, p1031 * 156, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 169, p1031 * 317, p1031 * 182, p1031 * 285, p1031 * 191, p1031 * 256);
    v1396.bezierCurveTo(p1031 * 134.5, p1031 * 254, p1031 * 134.5, p1031 * 254, p1031 * 78, p1031 * 252);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 84, p1031 * 257);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 273, p1031 * 146, p1031 * 268, p1031 * 179, p1031 * 261);
    v1396.bezierCurveTo(p1031 * 190, p1031 * 258, p1031 * 187, p1031 * 266, p1031 * 178, p1031 * 272);
    v1396.bezierCurveTo(p1031 * 160, p1031 * 284, p1031 * 123, p1031 * 282, p1031 * 100, p1031 * 277);
    v1396.bezierCurveTo(p1031 * 73, p1031 * 260, p1031 * 79, p1031 * 257, p1031 * 84, p1031 * 257);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 125, p1031 * 65);
    v1396.bezierCurveTo(p1031 * 133, p1031 * 45, p1031 * 136, p1031 * 42, p1031 * 141, p1031 * 55);
    v1396.bezierCurveTo(p1031 * 151, p1031 * 96, p1031 * 164, p1031 * 117, p1031 * 175, p1031 * 134);
    v1396.bezierCurveTo(p1031 * 203, p1031 * 181, p1031 * 207, p1031 * 182, p1031 * 208, p1031 * 215);
    v1396.bezierCurveTo(p1031 * 206, p1031 * 240, p1031 * 205, p1031 * 246, p1031 * 184, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 267, p1031 * 131, p1031 * 272, p1031 * 86, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 67, p1031 * 252, p1031 * 68, p1031 * 239, p1031 * 64, p1031 * 216);
    v1396.bezierCurveTo(p1031 * 62, p1031 * 194, p1031 * 72, p1031 * 169, p1031 * 92, p1031 * 142);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 121, p1031 * 114, p1031 * 101, p1031 * 125, p1031 * 65);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 115, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 116, p1031 * 28, p1031 * 119, p1031 * 27, p1031 * 126, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 134, p1031 * 48, p1031 * 134, p1031 * 49, p1031 * 132, p1031 * 59);
    v1396.bezierCurveTo(p1031 * 131, p1031 * 67, p1031 * 127, p1031 * 65, p1031 * 120, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 49, p1031 * 113, p1031 * 43, p1031 * 115, p1031 * 38);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 146, p1031 * 34);
    v1396.bezierCurveTo(p1031 * 152, p1031 * 28, p1031 * 155, p1031 * 27, p1031 * 157, p1031 * 39);
    v1396.bezierCurveTo(p1031 * 157, p1031 * 45, p1031 * 157, p1031 * 49, p1031 * 150, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 66, p1031 * 138, p1031 * 66, p1031 * 138, p1031 * 57);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 50, p1031 * 137, p1031 * 47, p1031 * 141, p1031 * 42);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 143, p1031 * 69);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 56, p1031 * 156, p1031 * 50, p1031 * 158, p1031 * 58);
    v1396.bezierCurveTo(p1031 * 159, p1031 * 64, p1031 * 160, p1031 * 67, p1031 * 153, p1031 * 77);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 83, p1031 * 145, p1031 * 84, p1031 * 143, p1031 * 77);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 149, p1031 * 92);
    v1396.bezierCurveTo(p1031 * 149, p1031 * 89, p1031 * 151, p1031 * 84, p1031 * 156, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 73, p1031 * 163, p1031 * 78, p1031 * 162, p1031 * 86);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 91, p1031 * 155, p1031 * 99, p1031 * 152, p1031 * 98);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 111, p1031 * 61);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 51, p1031 * 117, p1031 * 51, p1031 * 124, p1031 * 64);
    v1396.bezierCurveTo(p1031 * 128, p1031 * 68, p1031 * 128, p1031 * 76, p1031 * 126, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 123, p1031 * 84, p1031 * 122, p1031 * 82, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 112, p1031 * 67, p1031 * 115, p1031 * 74, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 68, p1031 * 111, p1031 * 66, p1031 * 111, p1031 * 62);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 107, p1031 * 81);
    v1396.bezierCurveTo(p1031 * 108, p1031 * 74, p1031 * 112, p1031 * 73, p1031 * 118, p1031 * 84);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 88, p1031 * 122, p1031 * 93, p1031 * 121, p1031 * 98);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 98, p1031 * 113, p1031 * 98, p1031 * 109, p1031 * 90);
    v1396.bezierCurveTo(p1031 * 107, p1031 * 87, p1031 * 106, p1031 * 85, p1031 * 107, p1031 * 82);
    v1396.closePath();
    f90(v1396, p1032[3], p1032[3], p1031 * 8);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 99);
    v1396.bezierCurveTo(p1031 * 186, p1031 * 123, p1031 * 199, p1031 * 152, p1031 * 209, p1031 * 169);
    v1396.bezierCurveTo(p1031 * 228, p1031 * 205, p1031 * 224, p1031 * 245, p1031 * 190, p1031 * 276);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 296, p1031 * 99, p1031 * 292, p1031 * 79, p1031 * 274);
    v1396.bezierCurveTo(p1031 * 49, p1031 * 253, p1031 * 47, p1031 * 214, p1031 * 50, p1031 * 197);
    v1396.bezierCurveTo(p1031 * 61, p1031 * 143, p1031 * 102, p1031 * 113, p1031 * 131, p1031 * 99);
    v1396.closePath();
    f90(v1396, p1032[1]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 73, p1031 * 270);
    v1396.bezierCurveTo(p1031 * 79, p1031 * 280, p1031 * 77, p1031 * 280, p1031 * 78, p1031 * 287);
    v1396.bezierCurveTo(p1031 * 78, p1031 * 290, p1031 * 83, p1031 * 291, p1031 * 82, p1031 * 299);
    v1396.bezierCurveTo(p1031 * 81, p1031 * 301, p1031 * 87, p1031 * 301, p1031 * 92, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 94, p1031 * 319, p1031 * 100, p1031 * 321, p1031 * 107, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 323, p1031 * 114, p1031 * 324, p1031 * 119, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 321, p1031 * 146, p1031 * 323, p1031 * 139, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 324, p1031 * 150, p1031 * 324, p1031 * 153, p1031 * 320);
    v1396.bezierCurveTo(p1031 * 168, p1031 * 319, p1031 * 171, p1031 * 316, p1031 * 173, p1031 * 307);
    v1396.bezierCurveTo(p1031 * 180, p1031 * 305, p1031 * 180, p1031 * 301, p1031 * 178, p1031 * 296);
    v1396.bezierCurveTo(p1031 * 183, p1031 * 296, p1031 * 185, p1031 * 289, p1031 * 188, p1031 * 279);
    v1396.bezierCurveTo(p1031 * 171, p1031 * 286, p1031 * 149, p1031 * 290, p1031 * 132, p1031 * 289);
    v1396.bezierCurveTo(p1031 * 101, p1031 * 290, p1031 * 86, p1031 * 280, p1031 * 74, p1031 * 271);
    v1396.closePath();
    f90(v1396, p1032[5]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 76, p1031 * 252);
    v1396.bezierCurveTo(p1031 * 85, p1031 * 294, p1031 * 96, p1031 * 314, p1031 * 103, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 316, p1031 * 151, p1031 * 314, p1031 * 156, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 169, p1031 * 317, p1031 * 182, p1031 * 285, p1031 * 191, p1031 * 256);
    v1396.bezierCurveTo(p1031 * 134.5, p1031 * 254, p1031 * 134.5, p1031 * 254, p1031 * 78, p1031 * 252);
    v1396.closePath();
    f90(v1396, p1032[2]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 84, p1031 * 257);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 273, p1031 * 146, p1031 * 268, p1031 * 179, p1031 * 261);
    v1396.bezierCurveTo(p1031 * 190, p1031 * 258, p1031 * 187, p1031 * 266, p1031 * 178, p1031 * 272);
    v1396.bezierCurveTo(p1031 * 160, p1031 * 284, p1031 * 123, p1031 * 282, p1031 * 100, p1031 * 277);
    v1396.bezierCurveTo(p1031 * 73, p1031 * 260, p1031 * 79, p1031 * 257, p1031 * 84, p1031 * 257);
    v1396.closePath();
    f90(v1396, p1032[1]);
    f93(v1396, p1031 * 102, p1031 * 269, p1031 * 11);
    f90(v1396, p1032[3]);
    f93(v1396, p1031 * 98, p1031 * 266, p1031 * 5);
    f90(v1396, p1032[6]);
    f93(v1396, p1031 * 168, p1031 * 269, p1031 * 11);
    f90(v1396, p1032[3]);
    f93(v1396, p1031 * 164, p1031 * 266, p1031 * 5);
    f90(v1396, p1032[6]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 125, p1031 * 65);
    v1396.bezierCurveTo(p1031 * 133, p1031 * 45, p1031 * 136, p1031 * 42, p1031 * 141, p1031 * 55);
    v1396.bezierCurveTo(p1031 * 151, p1031 * 96, p1031 * 164, p1031 * 117, p1031 * 175, p1031 * 134);
    v1396.bezierCurveTo(p1031 * 203, p1031 * 181, p1031 * 207, p1031 * 182, p1031 * 208, p1031 * 215);
    v1396.bezierCurveTo(p1031 * 206, p1031 * 240, p1031 * 205, p1031 * 246, p1031 * 184, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 267, p1031 * 131, p1031 * 272, p1031 * 86, p1031 * 258);
    v1396.bezierCurveTo(p1031 * 67, p1031 * 252, p1031 * 68, p1031 * 239, p1031 * 64, p1031 * 216);
    v1396.bezierCurveTo(p1031 * 62, p1031 * 194, p1031 * 72, p1031 * 169, p1031 * 92, p1031 * 142);
    v1396.bezierCurveTo(p1031 * 106, p1031 * 121, p1031 * 114, p1031 * 101, p1031 * 125, p1031 * 65);
    v1396.closePath();
    f90(v1396, p1032[2]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 115, p1031 * 235);
    v1396.bezierCurveTo(p1031 * 118, p1031 * 258, p1031 * 137, p1031 * 268, p1031 * 148, p1031 * 246);
    v1396.bezierCurveTo(p1031 * 156, p1031 * 228, p1031 * 152, p1031 * 169, p1031 * 150, p1031 * 140);
    v1396.bezierCurveTo(p1031 * 147, p1031 * 87, p1031 * 143, p1031 * 69, p1031 * 142, p1031 * 60);
    v1396.bezierCurveTo(p1031 * 136, p1031 * 44, p1031 * 132, p1031 * 43, p1031 * 127, p1031 * 62);
    v1396.bezierCurveTo(p1031 * 119, p1031 * 116, p1031 * 119, p1031 * 140, p1031 * 116, p1031 * 166);
    v1396.bezierCurveTo(p1031 * 113, p1031 * 202, p1031 * 113, p1031 * 223, p1031 * 115, p1031 * 233);
    v1396.closePath();
    f90(v1396, p1032[4]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 132, p1031 * 219);
    v1396.bezierCurveTo(p1031 * 140, p1031 * 229, p1031 * 142, p1031 * 231, p1031 * 145, p1031 * 237);
    v1396.bezierCurveTo(p1031 * 145, p1031 * 245, p1031 * 139, p1031 * 249, p1031 * 133, p1031 * 249);
    v1396.bezierCurveTo(p1031 * 123, p1031 * 248, p1031 * 123, p1031 * 243, p1031 * 121, p1031 * 239);
    v1396.bezierCurveTo(p1031 * 126, p1031 * 227, p1031 * 129, p1031 * 223, p1031 * 132, p1031 * 219);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 179);
    v1396.bezierCurveTo(p1031 * 140, p1031 * 188.5, p1031 * 140, p1031 * 188.5, p1031 * 147, p1031 * 198);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 209, p1031 * 142, p1031 * 214, p1031 * 133, p1031 * 214);
    v1396.bezierCurveTo(p1031 * 121, p1031 * 211, p1031 * 121, p1031 * 207, p1031 * 120, p1031 * 200);
    v1396.bezierCurveTo(p1031 * 126.5, p1031 * 189.5, p1031 * 126.5, p1031 * 189.5, p1031 * 133, p1031 * 179);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 143);
    v1396.bezierCurveTo(p1031 * 139, p1031 * 151.5, p1031 * 139, p1031 * 151.5, p1031 * 145, p1031 * 160);
    v1396.bezierCurveTo(p1031 * 143, p1031 * 167, p1031 * 140, p1031 * 170, p1031 * 134, p1031 * 170);
    v1396.bezierCurveTo(p1031 * 128, p1031 * 169, p1031 * 124, p1031 * 167, p1031 * 123, p1031 * 161);
    v1396.bezierCurveTo(p1031 * 128, p1031 * 152, p1031 * 128, p1031 * 152, p1031 * 133, p1031 * 143);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 115);
    v1396.bezierCurveTo(p1031 * 137.5, p1031 * 121.5, p1031 * 137.5, p1031 * 121.5, p1031 * 142, p1031 * 128);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 133, p1031 * 138, p1031 * 135, p1031 * 133, p1031 * 135);
    v1396.bezierCurveTo(p1031 * 129, p1031 * 135, p1031 * 125, p1031 * 132, p1031 * 125, p1031 * 129);
    v1396.bezierCurveTo(p1031 * 129, p1031 * 122, p1031 * 129, p1031 * 122, p1031 * 133, p1031 * 115);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 133, p1031 * 94);
    v1396.bezierCurveTo(p1031 * 136.5, p1031 * 98.5, p1031 * 136.5, p1031 * 98.5, p1031 * 140, p1031 * 103);
    v1396.bezierCurveTo(p1031 * 139, p1031 * 109, p1031 * 137, p1031 * 109, p1031 * 133, p1031 * 110);
    v1396.bezierCurveTo(p1031 * 127, p1031 * 108, p1031 * 129, p1031 * 107, p1031 * 127, p1031 * 105);
    v1396.bezierCurveTo(p1031 * 130, p1031 * 99.5, p1031 * 130, p1031 * 99.5, p1031 * 133, p1031 * 94);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 130, p1031 * 279);
    v1396.bezierCurveTo(p1031 * 136.5, p1031 * 287.5, p1031 * 136.5, p1031 * 287.5, p1031 * 143, p1031 * 296);
    v1396.bezierCurveTo(p1031 * 143, p1031 * 302, p1031 * 139, p1031 * 309, p1031 * 131, p1031 * 308);
    v1396.bezierCurveTo(p1031 * 123, p1031 * 306, p1031 * 121, p1031 * 303, p1031 * 120, p1031 * 297);
    v1396.bezierCurveTo(p1031 * 125.5, p1031 * 288.5, p1031 * 125.5, p1031 * 288.5, p1031 * 131, p1031 * 280);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 147, p1031 * 303);
    v1396.bezierCurveTo(p1031 * 151, p1031 * 311, p1031 * 151, p1031 * 319, p1031 * 147, p1031 * 321);
    v1396.bezierCurveTo(p1031 * 138, p1031 * 320, p1031 * 145, p1031 * 308, p1031 * 147, p1031 * 303);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 115, p1031 * 303);
    v1396.bezierCurveTo(p1031 * 115, p1031 * 312, p1031 * 118, p1031 * 319, p1031 * 115, p1031 * 319);
    v1396.bezierCurveTo(p1031 * 112, p1031 * 324, p1031 * 109, p1031 * 318, p1031 * 109, p1031 * 314);
    v1396.bezierCurveTo(p1031 * 109, p1031 * 308, p1031 * 112, p1031 * 303, p1031 * 115, p1031 * 303);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 89, p1031 * 280);
    v1396.bezierCurveTo(p1031 * 83, p1031 * 279, p1031 * 80, p1031 * 281, p1031 * 81, p1031 * 286);
    v1396.bezierCurveTo(p1031 * 83, p1031 * 290, p1031 * 84, p1031 * 290, p1031 * 87, p1031 * 286);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 94, p1031 * 290);
    v1396.bezierCurveTo(p1031 * 93, p1031 * 294, p1031 * 90, p1031 * 303, p1031 * 86, p1031 * 298);
    v1396.bezierCurveTo(p1031 * 84, p1031 * 295, p1031 * 84, p1031 * 291, p1031 * 89, p1031 * 291);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 163, p1031 * 295);
    v1396.bezierCurveTo(p1031 * 175, p1031 * 294, p1031 * 176, p1031 * 296, p1031 * 175, p1031 * 301);
    v1396.bezierCurveTo(p1031 * 174, p1031 * 305, p1031 * 171, p1031 * 305, p1031 * 166, p1031 * 300);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 172, p1031 * 286);
    v1396.bezierCurveTo(p1031 * 180, p1031 * 285, p1031 * 181, p1031 * 285, p1031 * 180, p1031 * 291);
    v1396.bezierCurveTo(p1031 * 176, p1031 * 295, p1031 * 174, p1031 * 294, p1031 * 172, p1031 * 286);
    v1396.closePath();
    f90(v1396, p1032[8]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 115, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 116, p1031 * 28, p1031 * 119, p1031 * 27, p1031 * 126, p1031 * 37);
    v1396.bezierCurveTo(p1031 * 134, p1031 * 48, p1031 * 134, p1031 * 49, p1031 * 132, p1031 * 59);
    v1396.bezierCurveTo(p1031 * 131, p1031 * 67, p1031 * 127, p1031 * 65, p1031 * 120, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 49, p1031 * 113, p1031 * 43, p1031 * 115, p1031 * 38);
    v1396.closePath();
    f90(v1396, p1032[7]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 146, p1031 * 34);
    v1396.bezierCurveTo(p1031 * 152, p1031 * 28, p1031 * 155, p1031 * 27, p1031 * 157, p1031 * 39);
    v1396.bezierCurveTo(p1031 * 157, p1031 * 45, p1031 * 157, p1031 * 49, p1031 * 150, p1031 * 56);
    v1396.bezierCurveTo(p1031 * 141, p1031 * 66, p1031 * 138, p1031 * 66, p1031 * 138, p1031 * 57);
    v1396.bezierCurveTo(p1031 * 137, p1031 * 50, p1031 * 137, p1031 * 47, p1031 * 141, p1031 * 42);
    v1396.closePath();
    f90(v1396, p1032[7]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 143, p1031 * 69);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 56, p1031 * 156, p1031 * 50, p1031 * 158, p1031 * 58);
    v1396.bezierCurveTo(p1031 * 159, p1031 * 64, p1031 * 160, p1031 * 67, p1031 * 153, p1031 * 77);
    v1396.bezierCurveTo(p1031 * 148, p1031 * 83, p1031 * 145, p1031 * 84, p1031 * 143, p1031 * 77);
    v1396.closePath();
    f90(v1396, p1032[7]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 149, p1031 * 92);
    v1396.bezierCurveTo(p1031 * 149, p1031 * 89, p1031 * 151, p1031 * 84, p1031 * 156, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 73, p1031 * 163, p1031 * 78, p1031 * 162, p1031 * 86);
    v1396.bezierCurveTo(p1031 * 161, p1031 * 91, p1031 * 155, p1031 * 99, p1031 * 152, p1031 * 98);
    v1396.closePath();
    f90(v1396, p1032[7]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 111, p1031 * 61);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 51, p1031 * 117, p1031 * 51, p1031 * 124, p1031 * 64);
    v1396.bezierCurveTo(p1031 * 128, p1031 * 68, p1031 * 128, p1031 * 76, p1031 * 126, p1031 * 79);
    v1396.bezierCurveTo(p1031 * 123, p1031 * 84, p1031 * 122, p1031 * 82, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 112, p1031 * 67, p1031 * 115, p1031 * 74, p1031 * 115, p1031 * 74);
    v1396.bezierCurveTo(p1031 * 111, p1031 * 68, p1031 * 111, p1031 * 66, p1031 * 111, p1031 * 62);
    v1396.closePath();
    f90(v1396, p1032[7]);
    v1396.beginPath();
    v1396.lineCap = "round";
    v1396.lineJoin = "round";
    v1396.moveTo(p1031 * 107, p1031 * 81);
    v1396.bezierCurveTo(p1031 * 108, p1031 * 74, p1031 * 112, p1031 * 73, p1031 * 118, p1031 * 84);
    v1396.bezierCurveTo(p1031 * 122, p1031 * 88, p1031 * 122, p1031 * 93, p1031 * 121, p1031 * 98);
    v1396.bezierCurveTo(p1031 * 114, p1031 * 98, p1031 * 113, p1031 * 98, p1031 * 109, p1031 * 90);
    v1396.bezierCurveTo(p1031 * 107, p1031 * 87, p1031 * 106, p1031 * 85, p1031 * 107, p1031 * 82);
    v1396.closePath();
    f90(v1396, p1032[7]);
    return v1395;
  }
  function f248(p1033, p1034, p1035) {
    var v1397 = document.createElement("canvas");
    var v1398 = v1397.getContext("2d");
    v1397.width = p1033 * 440;
    v1397.height = p1033 * 388;
    v1398.globalAlpha = p1034 ? 0.5 : 1;
    v1398.translate(p1033 * 5, p1033 * 5);
    f93(v1398, p1033 * 220, p1033 * 201, p1033 * 170.41713528867922);
    f90(v1398, p1035[0], p1035[0], p1033 * 6);
    v1398.globalAlpha = 1;
    v1398.translate(p1033 * -5, p1033 * -5);
    f93(v1398, p1033 * 220, p1033 * 201, p1033 * 170.41713528867922);
    f90(v1398, p1035[1], p1035[2], p1033 * 6);
    f93(v1398, p1033 * 220, p1033 * 201, p1033 * 130);
    f90(v1398, p1035[11], p1035[2], p1033 * 6);
    f93(v1398, p1033 * 222, p1033 * 199, p1033 * 120.74767078498864);
    f90(v1398, undefined, p1035[3], p1033 * 40);
    f93(v1398, p1033 * 220, p1033 * 200, p1033 * 95.44108130150245);
    f90(v1398, undefined, p1035[2], p1033 * 15);
    v1398.globalAlpha = p1034 ? 0.5 : 1;
    v1398.translate(p1033 * 5, p1033 * 5);
    f93(v1398, p1033 * 63, p1033 * 136, p1033 * 49.193495504995376);
    f90(v1398, p1035[0], p1035[0], p1033 * 4);
    v1398.globalAlpha = 1;
    v1398.translate(p1033 * -5, p1033 * -5);
    f93(v1398, p1033 * 63, p1033 * 136, p1033 * 49.193495504995376);
    f90(v1398, p1035[8], p1035[2], p1033 * 4);
    f93(v1398, p1033 * 63, p1033 * 137, p1033 * 25.632011235952593);
    f90(v1398, p1035[7], p1035[2], p1033 * 4);
    return v1397;
  }
  function f249(p1036, p1037, p1038) {
    var v1399 = document.createElement("canvas");
    var v1400 = v1399.getContext("2d");
    v1399.width = p1036 * 109;
    v1399.height = p1036 * 110;
    f93(v1400, p1036 * 54.5, p1036 * 55, p1036 * 48.038209575038294);
    f90(v1400, p1037[0], p1037[1], p1036 * 8);
    if (p1038 == 0) {
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 54.928558349609375, p1036 * 43.72320556640625);
      v1400.bezierCurveTo(p1036 * 66.92855834960938, p1036 * 31.72320556640625, p1036 * 69.92855834960938, p1036 * 29.72320556640625, p1036 * 74.92855834960938, p1036 * 29.72320556640625);
      v1400.bezierCurveTo(p1036 * 86.92855834960938, p1036 * 28.72320556640625, p1036 * 91.92855834960938, p1036 * 42.72320556640625, p1036 * 89.92855834960938, p1036 * 52.72320556640625);
      v1400.bezierCurveTo(p1036 * 88.92855834960938, p1036 * 63.72320556640625, p1036 * 73.92855834960938, p1036 * 75.72320556640625, p1036 * 55.928558349609375, p1036 * 87.72320556640625);
      v1400.bezierCurveTo(p1036 * 37.928558349609375, p1036 * 78.72320556640625, p1036 * 26.928558349609375, p1036 * 65.72320556640625, p1036 * 19.928558349609375, p1036 * 54.72320556640625);
      v1400.bezierCurveTo(p1036 * 13.928558349609375, p1036 * 42.72320556640625, p1036 * 21.928558349609375, p1036 * 28.72320556640625, p1036 * 35.928558349609375, p1036 * 29.72320556640625);
      v1400.bezierCurveTo(p1036 * 45.928558349609375, p1036 * 31.72320556640625, p1036 * 51.928558349609375, p1036 * 40.72320556640625, p1036 * 53.928558349609375, p1036 * 44.72320556640625);
      v1400.closePath();
      f90(v1400, p1037[2]);
    } else if (p1038 == 1) {
      v1400.save();
      v1400.translate(p1036 * 55, p1036 * 39.48748779296875);
      f87(v1400, p1036 * -11.5, p1036 * -36, p1036 * 23, p1036 * 72, p1036 * 10);
      v1400.restore();
      f90(v1400, p1037[2], p1037[3], p1036 * 4);
      f93(v1400, p1036 * 54.5, p1036 * 78.48748779296875, p1036 * 22.02271554554524);
      f90(v1400, p1037[4], p1037[3], p1036 * 4);
      v1400.save();
      v1400.translate(p1036 * 55.5, p1036 * 57.287506103515625);
      f87(v1400, p1036 * -9, p1036 * -16, p1036 * 18, p1036 * 32, p1036 * 10);
      v1400.restore();
      f90(v1400, p1037[4]);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 66.5, p1036 * 25.287506103515625);
      v1400.bezierCurveTo(p1036 * 60.5, p1036 * 25.287506103515625, p1036 * 63.5, p1036 * 25.287506103515625, p1036 * 54.5, p1036 * 25.287506103515625);
      v1400.closePath();
      f90(v1400, undefined, p1037[5], p1036 * 4);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 66.5, p1036 * 37.287506103515625);
      v1400.bezierCurveTo(p1036 * 60.5, p1036 * 37.287506103515625, p1036 * 60.5, p1036 * 37.287506103515625, p1036 * 54.5, p1036 * 37.287506103515625);
      v1400.closePath();
      f90(v1400, vVVVVVUndefined1322, p1037[5], p1036 * 4);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 66.5, p1036 * 50.287506103515625);
      v1400.bezierCurveTo(p1036 * 61, p1036 * 50.287506103515625, p1036 * 61, p1036 * 50.287506103515625, p1036 * 55.5, p1036 * 50.287506103515625);
      v1400.closePath();
      f90(v1400, vVVVVVUndefined1322, p1037[5], p1036 * 4);
    } else if (p1038 == 2) {
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 45.928558349609375, p1036 * 55.29463195800781);
      v1400.bezierCurveTo(p1036 * 38.928558349609375, p1036 * 67.29463195800781, p1036 * 38.928558349609375, p1036 * 67.29463195800781, p1036 * 31.928558349609375, p1036 * 79.29463195800781);
      v1400.bezierCurveTo(p1036 * 15.928558349609375, p1036 * 85.29463195800781, p1036 * 17.928558349609375, p1036 * 86.29463195800781, p1036 * 17.928558349609375, p1036 * 90.29463195800781);
      v1400.bezierCurveTo(p1036 * 19.928558349609375, p1036 * 94.29463195800781, p1036 * 21.928558349609375, p1036 * 94.29463195800781, p1036 * 27.928558349609375, p1036 * 92.29463195800781);
      v1400.bezierCurveTo(p1036 * 29.928558349609375, p1036 * 98.29463195800781, p1036 * 30.928558349609375, p1036 * 99.29463195800781, p1036 * 33.928558349609375, p1036 * 99.29463195800781);
      v1400.bezierCurveTo(p1036 * 38.928558349609375, p1036 * 97.29463195800781, p1036 * 38.928558349609375, p1036 * 93.29463195800781, p1036 * 37.928558349609375, p1036 * 86.29463195800781);
      v1400.bezierCurveTo(p1036 * 45.428558349609375, p1036 * 73.29463195800781, p1036 * 51.928558349609375, p1036 * 64.29463195800781, p1036 * 52.928558349609375, p1036 * 60.29463195800781);
      v1400.closePath();
      f90(v1400, p1037[2]);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 55.928558349609375, p1036 * 8.866058349609375);
      v1400.bezierCurveTo(p1036 * 35.928558349609375, p1036 * 35.866058349609375, p1036 * 37.928558349609375, p1036 * 48.866058349609375, p1036 * 46.928558349609375, p1036 * 62.866058349609375);
      v1400.bezierCurveTo(p1036 * 65.92855834960938, p1036 * 72.86605834960938, p1036 * 80.92855834960938, p1036 * 55.866058349609375, p1036 * 93.92855834960938, p1036 * 36.866058349609375);
      v1400.closePath();
      f90(v1400, p1037[3], p1037[4], p1036 * 6);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 93.92855834960938, p1036 * 36.866058349609375);
      v1400.bezierCurveTo(p1036 * 82.92855834960938, p1036 * 37.866058349609375, p1036 * 77.92855834960938, p1036 * 36.866058349609375, p1036 * 67.92855834960938, p1036 * 28.866058349609375);
      v1400.bezierCurveTo(p1036 * 53.928558349609375, p1036 * 16.866058349609375, p1036 * 53.928558349609375, p1036 * 14.866058349609375, p1036 * 55.928558349609375, p1036 * 7.866058349609375);
      v1400.bezierCurveTo(p1036 * 65.92855834960938, p1036 * 4.866058349609375, p1036 * 71.92855834960938, p1036 * 7.866058349609375, p1036 * 83.92855834960938, p1036 * 13.866058349609375);
      v1400.bezierCurveTo(p1036 * 96.92855834960938, p1036 * 21.866058349609375, p1036 * 95.92855834960938, p1036 * 31.866058349609375, p1036 * 92.92855834960938, p1036 * 36.866058349609375);
      v1400.closePath();
      f90(v1400, p1037[3], p1037[4], p1036 * 6);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 68.92855834960938, p1036 * 16.866058349609375);
      v1400.bezierCurveTo(p1036 * 71.92855834960938, p1036 * 13.866058349609375, p1036 * 76.92855834960938, p1036 * 16.866058349609375, p1036 * 79.92855834960938, p1036 * 21.866058349609375);
      v1400.bezierCurveTo(p1036 * 82.92855834960938, p1036 * 24.866058349609375, p1036 * 81.92855834960938, p1036 * 27.866058349609375, p1036 * 73.92855834960938, p1036 * 24.866058349609375);
      v1400.bezierCurveTo(p1036 * 67.92855834960938, p1036 * 20.866058349609375, p1036 * 66.92855834960938, p1036 * 19.866058349609375, p1036 * 67.92855834960938, p1036 * 17.866058349609375);
      v1400.closePath();
      f90(v1400, p1037[2]);
    } else if (p1038 == 3) {
      v1400.scale(0.9, 0.9);
      v1400.translate(p1036 * 6, 0);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 54, p1036 * 0.421875);
      v1400.bezierCurveTo(p1036 * 84, p1036 * 45.421875, p1036 * 89, p1036 * 51.421875, p1036 * 83, p1036 * 74.421875);
      v1400.bezierCurveTo(p1036 * 74, p1036 * 95.421875, p1036 * 46, p1036 * 98.421875, p1036 * 30, p1036 * 78.421875);
      v1400.bezierCurveTo(p1036 * 22, p1036 * 59.421875, p1036 * 27, p1036 * 49.421875, p1036 * 34, p1036 * 36.421875);
      v1400.closePath();
      f90(v1400, p1037[2], p1037[3], p1036 * 6);
      v1400.beginPath();
      v1400.lineCap = "round";
      v1400.lineJoin = "round";
      v1400.moveTo(p1036 * 74, p1036 * 52.421875);
      v1400.bezierCurveTo(p1036 * 77, p1036 * 73.421875, p1036 * 69, p1036 * 81.421875, p1036 * 58, p1036 * 81.421875);
      v1400.bezierCurveTo(p1036 * 66, p1036 * 71.421875, p1036 * 70, p1036 * 66.421875, p1036 * 74, p1036 * 52.421875);
      v1400.closePath();
      f90(v1400, p1037[3]);
    }
    return v1399;
  }
  function f250(p1039, p1040, p1041) {
    var v1401 = document.createElement("canvas");
    var v1402 = v1401.getContext("2d");
    v1401.width = p1039 * 316;
    v1401.height = p1039 * 365;
    v1402.save();
    v1402.translate(p1039 * 156.07142639160156, p1039 * 51.81248474121094);
    v1402.rotate(0);
    f87(v1402, p1039 * -21.5, p1039 * -34, p1039 * 43, p1039 * 68, p1039 * 8);
    v1402.restore();
    f90(v1402, p1041[1], p1041[2], p1039 * 15);
    v1402.beginPath();
    v1402.lineCap = "round";
    v1402.lineJoin = "round";
    v1402.moveTo(p1039 * 126.57142639160156, p1039 * 67.38392639160156);
    v1402.bezierCurveTo(p1039 * 126.57142639160156, p1039 * 57.38392639160156, p1039 * 132.57142639160156, p1039 * 54.38392639160156, p1039 * 140.57142639160156, p1039 * 54.38392639160156);
    v1402.bezierCurveTo(p1039 * 177.57142639160156, p1039 * 55.38392639160156, p1039 * 158.07142639160156, p1039 * 54.38392639160156, p1039 * 175.57142639160156, p1039 * 54.38392639160156);
    v1402.bezierCurveTo(p1039 * 185.57142639160156, p1039 * 56.38392639160156, p1039 * 185.57142639160156, p1039 * 57.38392639160156, p1039 * 184.57142639160156, p1039 * 66.38392639160156);
    v1402.bezierCurveTo(p1039 * 184.57142639160156, p1039 * 78.38392639160156, p1039 * 184.57142639160156, p1039 * 89.38392639160156, p1039 * 184.57142639160156, p1039 * 90.38392639160156);
    v1402.bezierCurveTo(p1039 * 177.57142639160156, p1039 * 107.38392639160156, p1039 * 180.57142639160156, p1039 * 112.38392639160156, p1039 * 189.57142639160156, p1039 * 116.38392639160156);
    v1402.bezierCurveTo(p1039 * 212.57142639160156, p1039 * 127.38392639160156, p1039 * 212.57142639160156, p1039 * 132.38392639160156, p1039 * 211.57142639160156, p1039 * 150.38392639160156);
    v1402.bezierCurveTo(p1039 * 211.57142639160156, p1039 * 227.59821128845215, p1039 * 211.57142639160156, p1039 * 227.59821128845215, p1039 * 211.57142639160156, p1039 * 304.81249618530273);
    v1402.bezierCurveTo(p1039 * 212.57142639160156, p1039 * 328.81249618530273, p1039 * 209.57142639160156, p1039 * 330.81249618530273, p1039 * 188.57142639160156, p1039 * 333.81249618530273);
    v1402.bezierCurveTo(p1039 * 155.07142639160156, p1039 * 333.31249618530273, p1039 * 155.07142639160156, p1039 * 333.31249618530273, p1039 * 121.57142639160156, p1039 * 332.81249618530273);
    v1402.bezierCurveTo(p1039 * 104.57142639160156, p1039 * 327.81249618530273, p1039 * 105.57142639160156, p1039 * 328.81249618530273, p1039 * 104.57142639160156, p1039 * 312.81249618530273);
    v1402.bezierCurveTo(p1039 * 104.57142639160156, p1039 * 228.16963958740234, p1039 * 104.57142639160156, p1039 * 228.16963958740234, p1039 * 104.57142639160156, p1039 * 143.52678298950195);
    v1402.bezierCurveTo(p1039 * 106.57142639160156, p1039 * 124.52678298950195, p1039 * 110.57142639160156, p1039 * 123.52678298950195, p1039 * 123.57142639160156, p1039 * 116.52678298950195);
    v1402.bezierCurveTo(p1039 * 136.57142639160156, p1039 * 110.52678298950195, p1039 * 130.57142639160156, p1039 * 106.52678298950195, p1039 * 126.57142639160156, p1039 * 98.52678298950195);
    v1402.closePath();
    f90(v1402, undefined, p1041[5], p1039 * 15);
    v1402.beginPath();
    v1402.lineCap = "round";
    v1402.lineJoin = "round";
    v1402.moveTo(p1039 * 125.57142639160156, p1039 * 156.66963958740234);
    v1402.bezierCurveTo(p1039 * 125.57142639160156, p1039 * 182.66963958740234, p1039 * 125.57142639160156, p1039 * 182.66963958740234, p1039 * 125.57142639160156, p1039 * 208.66963958740234);
    v1402.closePath();
    f90(v1402, undefined, p1041[6], p1039 * 15);
    return v1401;
  }
  function f251() {
    ΔΔ[1063] = f119(1, [{
      f: f283,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1064] = ΔΔ[1063];
    ΔΔ[1231] = [];
    ΔΔ[1231][0] = ⵠᐃ.ΔΔᐃΔⲆⵠΔ;
    ΔΔ[1231][1] = ⵠᐃ.ⲆΔⵠⲆᐃΔΔ;
    ΔΔ[1231][2] = ⵠᐃ.ⲆⲆᐃᐃⵠᐃᐃ;
    ΔΔ[1232] = ΔΔ[1231];
    ΔΔ[1248] = [];
    ΔΔ[1248][0] = ⵠᐃ.ᐃᐃⵠⲆⲆⲆᐃ;
    ΔΔ[1248][1] = ⵠᐃ.ⲆΔΔⲆᐃΔⵠ;
    ΔΔ[1248][2] = ⵠᐃ.ⲆⵠΔⲆⵠΔᐃ;
    ΔΔ[1249] = ΔΔ[1248];
    ΔΔ[1263] = [];
    ΔΔ[1263][0] = ⵠᐃ.ⲆⲆᐃⲆΔⲆⲆ;
    ΔΔ[1263][1] = ⵠᐃ.ᐃⲆᐃᐃᐃⲆᐃ;
    ΔΔ[1263][2] = ⵠᐃ.ⲆⲆᐃⲆⲆΔⲆ;
    ΔΔ[1264] = ΔΔ[1263];
    ΔΔ[1482] = [];
    ΔΔ[1482][0] = ⵠᐃ.ᐃΔⵠᐃΔⵠⵠ;
    ΔΔ[1482][1] = ⵠᐃ.ⵠᐃⵠⲆΔᐃΔ;
    ΔΔ[1482][2] = ⵠᐃ.ΔΔⲆᐃⵠᐃⵠ;
    ΔΔ[1483] = ΔΔ[1482];
    ΔΔ[1241] = [];
    ΔΔ[1241][0] = ⵠᐃ.ⵠⲆΔⵠⵠⵠΔ;
    ΔΔ[1241][1] = ⵠᐃ.ⵠᐃⲆΔⲆΔⲆ;
    ΔΔ[1241][2] = ⵠᐃ.ΔⵠᐃⵠⵠⵠΔ;
    ΔΔ[1250] = ΔΔ[1241];
    ΔΔ[1336] = [];
    ΔΔ[1336][0] = ⵠᐃ.ⵠᐃⲆⲆΔⵠⵠ;
    ΔΔ[1336][1] = ⵠᐃ.ⵠᐃᐃᐃⵠⲆⲆ;
    ΔΔ[1336][2] = ⵠᐃ.ⵠΔⵠⲆⵠⲆⲆ;
    ΔΔ[1337] = ΔΔ[1336];
    ΔΔ[1335] = ΔΔ[1336];
    ΔΔ[961] = [];
    ΔΔ[961][0] = ⵠᐃ.ᐃⲆⵠΔⲆᐃⵠⵠΔ;
    ΔΔ[961][1] = ⵠᐃ.ⲆΔᐃᐃⲆⵠⵠΔΔ;
    ΔΔ[961][2] = ⵠᐃ.ⵠⲆΔΔⵠΔⲆⵠᐃ;
    ΔΔ[962] = ΔΔ[961];
    ΔΔ[963] = ΔΔ[961];
    ΔΔ[1339] = [];
    ΔΔ[1339][0] = ⵠᐃ.ᐃᐃΔⲆⲆᐃⲆ;
    ΔΔ[1339][1] = ⵠᐃ.ΔⵠΔΔᐃⲆⵠ;
    ΔΔ[1339][2] = ⵠᐃ.ⲆⲆⵠⵠΔᐃΔ;
    ΔΔ[1340] = ΔΔ[1339];
    ΔΔ[1338] = ΔΔ[1339];
    ΔΔ[534] = [];
    ΔΔ[534][0] = ⵠᐃ.ΔᐃᐃᐃⲆⲆΔ;
    ΔΔ[534][1] = ⵠᐃ.ⲆΔⲆᐃᐃΔᐃ;
    ΔΔ[534][2] = ⵠᐃ.ⲆⲆΔΔⵠᐃᐃ;
    ΔΔ[536] = ΔΔ[534];
    ΔΔ[535] = ΔΔ[534];
    ΔΔ[1624] = [];
    ΔΔ[1624][0] = ⵠᐃ.ⲆⵠᐃⵠΔⵠᐃᐃⲆ;
    ΔΔ[1624][1] = ⵠᐃ.ᐃᐃⵠᐃⵠᐃᐃⲆΔ;
    ΔΔ[1624][2] = ⵠᐃ.ⵠΔⵠⲆᐃΔⲆᐃᐃ;
    ΔΔ[1625] = ΔΔ[1624];
    ΔΔ[1754] = [];
    ΔΔ[1754][0] = ⵠᐃ.ⵠⲆᐃΔⲆ;
    ΔΔ[1754][1] = ⵠᐃ.ⵠⲆᐃΔⲆ;
    ΔΔ[1754][2] = ⵠᐃ.ⵠⲆᐃΔⲆ;
    ΔΔ[1753] = ΔΔ[1754];
    ΔΔ[1750] = [];
    ΔΔ[1750][0] = ⵠᐃ.ⲆᐃⲆΔⲆ;
    ΔΔ[1750][1] = ⵠᐃ.ⲆᐃⲆΔⲆ;
    ΔΔ[1750][2] = ⵠᐃ.ⲆᐃⲆΔⲆ;
    ΔΔ[1749] = ΔΔ[1750];
    ΔΔ[1621] = [];
    ΔΔ[1621][0] = ⵠᐃ.ΔΔⲆᐃⲆᐃⵠⲆᐃ;
    ΔΔ[1621][1] = ⵠᐃ.ᐃΔᐃⵠΔⲆᐃΔⵠ;
    ΔΔ[1621][2] = ⵠᐃ.ᐃᐃⲆⵠⲆΔⵠⵠⲆ;
    ΔΔ[1623] = ΔΔ[1621];
    ΔΔ[1622] = ΔΔ[1621];
    ΔΔ[761] = [];
    ΔΔ[761][0] = ⵠᐃ.ᐃᐃⲆᐃⲆⵠᐃⲆⵠ;
    ΔΔ[761][1] = ⵠᐃ.ⲆΔᐃⵠΔᐃⵠⵠⲆ;
    ΔΔ[761][2] = ⵠᐃ.ΔⵠⲆᐃⲆΔΔᐃⵠ;
    ΔΔ[763] = ΔΔ[761];
    ΔΔ[762] = ΔΔ[761];
    ΔΔ[1494] = [];
    ΔΔ[1494][0] = ⵠᐃ.ᐃΔⵠᐃΔᐃⲆⵠⵠ;
    ΔΔ[1494][1] = ⵠᐃ.ΔᐃⲆΔΔⲆⵠⵠⵠ;
    ΔΔ[1494][2] = ⵠᐃ.ⵠⲆⲆΔΔⵠΔΔΔ;
    ΔΔ[1495] = ΔΔ[1494];
    ΔΔ[1496] = ΔΔ[1494];
    ΔΔ[764] = [];
    ΔΔ[764][0] = ⵠᐃ.ⵠΔⲆΔⵠᐃΔΔⵠ;
    ΔΔ[764][1] = ⵠᐃ.ΔᐃⲆᐃᐃᐃⲆⲆᐃ;
    ΔΔ[764][2] = ⵠᐃ.ⵠΔΔΔⲆⲆⲆⵠⵠ;
    ΔΔ[766] = ΔΔ[764];
    ΔΔ[765] = ΔΔ[764];
    ΔΔ[1497] = [];
    ΔΔ[1497][0] = ⵠᐃ.ⵠⵠᐃᐃⵠΔⵠΔⵠ;
    ΔΔ[1497][1] = ⵠᐃ.ⵠᐃⵠΔⵠᐃⲆⲆΔ;
    ΔΔ[1497][2] = ⵠᐃ.ΔⵠΔⲆⲆⲆᐃⵠⲆ;
    ΔΔ[1498] = ΔΔ[1497];
    ΔΔ[1499] = ΔΔ[1497];
    ΔΔ[767] = [];
    ΔΔ[767][0] = ⵠᐃ.ᐃΔⵠⵠΔΔⲆΔⵠ;
    ΔΔ[767][1] = ⵠᐃ.ⲆⲆⲆᐃⵠΔΔⵠⲆ;
    ΔΔ[767][2] = ⵠᐃ.ⲆΔΔⵠⲆⲆΔᐃΔ;
    ΔΔ[769] = ΔΔ[767];
    ΔΔ[768] = ΔΔ[767];
    ΔΔ[1500] = [];
    ΔΔ[1500][0] = ⵠᐃ.ⲆⵠⲆⵠᐃᐃΔⲆΔ;
    ΔΔ[1500][1] = ⵠᐃ.ⲆΔⵠⲆᐃⲆⲆⲆΔ;
    ΔΔ[1500][2] = ⵠᐃ.ᐃᐃⲆⲆⵠΔᐃⲆⲆ;
    ΔΔ[1501] = ΔΔ[1500];
    ΔΔ[1502] = ΔΔ[1500];
    ΔΔ[770] = [];
    ΔΔ[770][0] = ⵠᐃ.ᐃᐃᐃᐃⲆΔⲆⲆᐃ;
    ΔΔ[770][1] = ⵠᐃ.ΔⵠΔⵠᐃᐃⵠⲆⲆ;
    ΔΔ[770][2] = ⵠᐃ.ⲆΔⲆᐃᐃΔⲆⵠᐃ;
    ΔΔ[772] = ΔΔ[770];
    ΔΔ[771] = ΔΔ[770];
    ΔΔ[1503] = [];
    ΔΔ[1503][0] = ⵠᐃ.ΔᐃᐃΔΔⲆΔⵠᐃ;
    ΔΔ[1503][1] = ⵠᐃ.ⵠΔΔⵠⵠΔⵠΔΔ;
    ΔΔ[1503][2] = ⵠᐃ.ᐃⵠᐃⲆᐃⲆⵠΔᐃ;
    ΔΔ[1504] = ΔΔ[1503];
    ΔΔ[1505] = ΔΔ[1503];
    ΔΔ[773] = [];
    ΔΔ[773][0] = ⵠᐃ.ᐃᐃⵠⲆⵠᐃΔⵠΔ;
    ΔΔ[773][1] = ⵠᐃ.ΔᐃⵠᐃᐃᐃⵠⲆΔ;
    ΔΔ[773][2] = ⵠᐃ.ⲆⲆⲆΔⲆᐃⵠⵠΔ;
    ΔΔ[775] = ΔΔ[773];
    ΔΔ[774] = ΔΔ[773];
    ΔΔ[1506] = [];
    ΔΔ[1506][0] = ⵠᐃ.ⲆⲆⲆΔᐃⵠⵠΔᐃ;
    ΔΔ[1506][1] = ⵠᐃ.ΔⵠⵠⲆⵠᐃᐃΔⲆ;
    ΔΔ[1506][2] = ⵠᐃ.ⵠᐃⲆⲆⵠⵠⵠⲆⵠ;
    ΔΔ[1507] = ΔΔ[1506];
    ΔΔ[1508] = ΔΔ[1506];
    ΔΔ[776] = [];
    ΔΔ[776][0] = ⵠᐃ.ⲆΔⵠⲆⲆⵠΔᐃⵠ;
    ΔΔ[776][1] = ⵠᐃ.ⵠⲆΔᐃᐃᐃⲆⲆⲆ;
    ΔΔ[776][2] = ⵠᐃ.ᐃⲆΔΔᐃⵠⵠⵠⵠ;
    ΔΔ[778] = ΔΔ[776];
    ΔΔ[777] = ΔΔ[776];
    ΔΔ[1509] = [];
    ΔΔ[1509][0] = ⵠᐃ.ᐃⵠᐃⵠΔⲆΔⵠⲆ;
    ΔΔ[1509][1] = ⵠᐃ.ᐃᐃΔⲆⲆΔⵠⵠᐃ;
    ΔΔ[1509][2] = ⵠᐃ.ⵠΔΔΔⲆⲆⵠⲆⲆ;
    ΔΔ[1510] = ΔΔ[1509];
    ΔΔ[1511] = ΔΔ[1509];
    ΔΔ[779] = [];
    ΔΔ[779][0] = ⵠᐃ.ⲆⲆⵠⵠⲆΔⲆⲆᐃ;
    ΔΔ[779][1] = ⵠᐃ.ΔᐃᐃΔⲆΔⲆⵠΔ;
    ΔΔ[779][2] = ⵠᐃ.ⲆΔΔⵠⲆⵠⵠᐃΔ;
    ΔΔ[781] = ΔΔ[779];
    ΔΔ[780] = ΔΔ[779];
    ΔΔ[1512] = [];
    ΔΔ[1512][0] = ⵠᐃ.ⲆⲆⲆⲆⵠΔΔΔΔ;
    ΔΔ[1512][1] = ⵠᐃ.ⲆⵠΔΔᐃᐃⲆⲆΔ;
    ΔΔ[1512][2] = ⵠᐃ.ⲆΔᐃΔⵠΔᐃΔⵠ;
    ΔΔ[1513] = ΔΔ[1512];
    ΔΔ[1514] = ΔΔ[1512];
    ΔΔ[1675] = [];
    ΔΔ[1675][0] = ⵠᐃ.ᐃΔⵠⵠΔᐃⲆᐃᐃ;
    ΔΔ[1675][1] = ⵠᐃ.ⲆⲆΔⲆᐃⵠⵠⲆΔ;
    ΔΔ[1675][2] = ⵠᐃ.ⵠⵠⵠⲆⲆⵠⵠΔⵠ;
    ΔΔ[1676] = ΔΔ[1675];
    ΔΔ[1674] = ΔΔ[1675];
    ΔΔ[1678] = [];
    ΔΔ[1678][0] = ⵠᐃ.ⵠⵠΔᐃΔⵠᐃᐃⲆ;
    ΔΔ[1678][1] = ⵠᐃ.ⵠⵠᐃᐃᐃⵠᐃⵠⲆ;
    ΔΔ[1678][2] = ⵠᐃ.ⲆⲆⵠΔΔΔⵠᐃΔ;
    ΔΔ[1679] = ΔΔ[1678];
    ΔΔ[1677] = ΔΔ[1678];
    ΔΔ[1681] = [];
    ΔΔ[1681][0] = ⵠᐃ.ⵠⲆΔᐃᐃⵠⲆᐃᐃ;
    ΔΔ[1681][1] = ⵠᐃ.ⲆⵠᐃⲆᐃⲆⲆⲆⵠ;
    ΔΔ[1681][2] = ⵠᐃ.ⵠᐃΔᐃΔᐃⵠᐃⵠ;
    ΔΔ[1682] = ΔΔ[1681];
    ΔΔ[1680] = ΔΔ[1681];
    ΔΔ[1684] = [];
    ΔΔ[1684][0] = ⵠᐃ.ⲆΔᐃᐃᐃΔⵠⲆᐃ;
    ΔΔ[1684][1] = ⵠᐃ.ⲆⵠᐃᐃⵠⲆⲆⵠΔ;
    ΔΔ[1684][2] = ⵠᐃ.ⲆΔᐃΔᐃΔⵠⵠⲆ;
    ΔΔ[1685] = ΔΔ[1684];
    ΔΔ[1683] = ΔΔ[1684];
    ΔΔ[1687] = [];
    ΔΔ[1687][0] = ⵠᐃ.ⵠᐃᐃΔⲆᐃⵠᐃᐃ;
    ΔΔ[1687][1] = ⵠᐃ.ⵠⵠⵠⲆⵠⲆⲆⲆᐃ;
    ΔΔ[1687][2] = ⵠᐃ.ΔΔⵠΔΔⲆΔΔⵠ;
    ΔΔ[1688] = ΔΔ[1687];
    ΔΔ[1686] = ΔΔ[1687];
    ΔΔ[1690] = [];
    ΔΔ[1690][0] = ⵠᐃ.ᐃⲆⲆⲆⲆΔᐃⵠⲆ;
    ΔΔ[1690][1] = ⵠᐃ.ΔᐃᐃᐃΔᐃΔᐃᐃ;
    ΔΔ[1690][2] = ⵠᐃ.ᐃΔΔⲆⲆᐃΔΔⵠ;
    ΔΔ[1691] = ΔΔ[1690];
    ΔΔ[1689] = ΔΔ[1690];
    ΔΔ[1693] = [];
    ΔΔ[1693][0] = ⵠᐃ.ᐃⵠΔΔⵠⲆΔᐃⲆ;
    ΔΔ[1693][1] = ⵠᐃ.ΔⲆΔⵠΔⵠΔΔⵠ;
    ΔΔ[1693][2] = ⵠᐃ.ⲆᐃᐃⲆᐃᐃΔⵠⵠ;
    ΔΔ[1694] = ΔΔ[1693];
    ΔΔ[1692] = ΔΔ[1693];
    ΔΔ[1696] = [];
    ΔΔ[1696][0] = ⵠᐃ.ΔⵠⲆᐃΔⲆⲆΔⲆ;
    ΔΔ[1696][1] = ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠΔⵠ;
    ΔΔ[1696][2] = ⵠᐃ.ΔᐃᐃᐃⲆⲆΔΔⵠ;
    ΔΔ[1697] = ΔΔ[1696];
    ΔΔ[1695] = ΔΔ[1696];
    ΔΔ[1699] = [];
    ΔΔ[1699][0] = ⵠᐃ.ⲆⵠⲆᐃⲆΔⵠᐃⵠ;
    ΔΔ[1699][1] = ⵠᐃ.ⵠⵠⲆⲆΔⵠⵠⵠⵠ;
    ΔΔ[1699][2] = ⵠᐃ.ΔⲆᐃⵠⲆΔⲆΔΔ;
    ΔΔ[1700] = ΔΔ[1699];
    ΔΔ[1698] = ΔΔ[1699];
    ΔΔ[1702] = [];
    ΔΔ[1702][0] = ⵠᐃ.ΔⵠⵠΔⲆⵠⲆΔΔ;
    ΔΔ[1702][1] = ⵠᐃ.ⲆᐃⵠⲆⵠⵠⵠΔⵠ;
    ΔΔ[1702][2] = ⵠᐃ.ⲆⲆⲆᐃᐃΔΔⵠⵠ;
    ΔΔ[1703] = ΔΔ[1702];
    ΔΔ[1701] = ΔΔ[1702];
    ΔΔ[1705] = [];
    ΔΔ[1705][0] = ⵠᐃ.ᐃΔᐃΔᐃⲆⵠⲆΔ;
    ΔΔ[1705][1] = ⵠᐃ.ᐃΔⲆΔⲆⵠⵠⵠⵠ;
    ΔΔ[1705][2] = ⵠᐃ.ΔⵠⲆᐃⵠⲆΔΔⲆ;
    ΔΔ[1706] = ΔΔ[1705];
    ΔΔ[1704] = ΔΔ[1705];
    ΔΔ[1708] = [];
    ΔΔ[1708][0] = ⵠᐃ.ΔᐃΔᐃᐃΔᐃⵠΔ;
    ΔΔ[1708][1] = ⵠᐃ.ΔᐃⲆΔⲆΔⵠᐃᐃ;
    ΔΔ[1708][2] = ⵠᐃ.ΔⲆΔᐃⵠΔⲆΔⲆ;
    ΔΔ[1709] = ΔΔ[1708];
    ΔΔ[1707] = ΔΔ[1708];
    ΔΔ[1711] = [];
    ΔΔ[1711][0] = ⵠᐃ.ⲆⲆΔⵠⲆⲆΔⵠⲆ;
    ΔΔ[1711][1] = ⵠᐃ.ⲆⵠᐃⵠΔᐃΔᐃⲆ;
    ΔΔ[1711][2] = ⵠᐃ.ⵠⲆⵠⲆⵠΔⵠⵠΔ;
    ΔΔ[1712] = ΔΔ[1711];
    ΔΔ[1710] = ΔΔ[1711];
    ΔΔ[1714] = [];
    ΔΔ[1714][0] = ⵠᐃ.ⵠⵠΔᐃΔⲆⲆⵠⵠ;
    ΔΔ[1714][1] = ⵠᐃ.ⲆᐃⲆΔⵠⵠΔⵠΔ;
    ΔΔ[1714][2] = ⵠᐃ.ΔᐃⲆⵠⲆⲆⵠᐃⵠ;
    ΔΔ[1715] = ΔΔ[1714];
    ΔΔ[1713] = ΔΔ[1714];
    ΔΔ[1717] = [];
    ΔΔ[1717][0] = ⵠᐃ.ΔΔⵠΔⲆΔⵠᐃⵠ;
    ΔΔ[1717][1] = ⵠᐃ.ᐃΔⵠᐃᐃΔⵠⲆΔ;
    ΔΔ[1717][2] = ⵠᐃ.ⲆⵠⲆᐃᐃⵠⵠᐃⲆ;
    ΔΔ[1718] = ΔΔ[1717];
    ΔΔ[1716] = ΔΔ[1717];
    ΔΔ[1630] = [];
    ΔΔ[1630][0] = ⵠᐃ.ⵠᐃⵠΔᐃᐃΔⲆⵠ;
    ΔΔ[1630][1] = ⵠᐃ.ⲆᐃⵠⵠⲆⲆⲆᐃΔ;
    ΔΔ[1630][2] = ⵠᐃ.ΔⲆΔΔⲆⲆΔᐃΔ;
    ΔΔ[1631] = ΔΔ[1630];
    ΔΔ[1629] = ΔΔ[1630];
    ΔΔ[1633] = [];
    ΔΔ[1633][0] = ⵠᐃ.ΔᐃⵠⲆᐃⲆΔⵠᐃ;
    ΔΔ[1633][1] = ⵠᐃ.ⵠⲆᐃᐃⵠⵠΔⵠⲆ;
    ΔΔ[1633][2] = ⵠᐃ.ΔⵠⵠᐃᐃⵠᐃⲆⲆ;
    ΔΔ[1634] = ΔΔ[1633];
    ΔΔ[1632] = ΔΔ[1633];
    ΔΔ[1636] = [];
    ΔΔ[1636][0] = ⵠᐃ.ⵠᐃⵠΔⵠⵠΔⵠⲆ;
    ΔΔ[1636][1] = ⵠᐃ.ⵠᐃⵠᐃᐃᐃΔⵠⵠ;
    ΔΔ[1636][2] = ⵠᐃ.ΔⵠᐃⵠᐃⲆΔΔⲆ;
    ΔΔ[1637] = ΔΔ[1636];
    ΔΔ[1635] = ΔΔ[1636];
    ΔΔ[1639] = [];
    ΔΔ[1639][0] = ⵠᐃ.ΔΔΔΔᐃᐃΔᐃⲆ;
    ΔΔ[1639][1] = ⵠᐃ.ᐃΔⵠΔΔⵠⲆⲆⵠ;
    ΔΔ[1639][2] = ⵠᐃ.ᐃⲆΔⵠⵠᐃⲆⲆΔ;
    ΔΔ[1640] = ΔΔ[1639];
    ΔΔ[1638] = ΔΔ[1639];
    ΔΔ[1642] = [];
    ΔΔ[1642][0] = ⵠᐃ.ᐃⵠⵠΔᐃⲆⵠⵠΔ;
    ΔΔ[1642][1] = ⵠᐃ.ⵠⲆⵠΔⲆⵠᐃᐃⲆ;
    ΔΔ[1642][2] = ⵠᐃ.ⲆᐃⲆᐃⲆⲆⵠⵠᐃ;
    ΔΔ[1643] = ΔΔ[1642];
    ΔΔ[1641] = ΔΔ[1642];
    ΔΔ[1645] = [];
    ΔΔ[1645][0] = ⵠᐃ.ⵠᐃᐃⵠΔⲆΔΔⲆ;
    ΔΔ[1645][1] = ⵠᐃ.ᐃΔⲆΔᐃⲆᐃᐃΔ;
    ΔΔ[1645][2] = ⵠᐃ.ⲆⵠⵠⲆⵠⵠⲆᐃΔ;
    ΔΔ[1646] = ΔΔ[1645];
    ΔΔ[1644] = ΔΔ[1645];
    ΔΔ[1618] = [];
    ΔΔ[1618][0] = ⵠᐃ.ᐃᐃᐃⲆⲆᐃⲆⲆⲆ;
    ΔΔ[1618][1] = ⵠᐃ.ΔⲆᐃᐃᐃⲆⲆΔⲆ;
    ΔΔ[1618][2] = ⵠᐃ.ᐃⲆⵠⲆⲆⲆΔⲆᐃ;
    ΔΔ[1620] = ΔΔ[1618];
    ΔΔ[1619] = ΔΔ[1618];
    ΔΔ[1542] = [];
    ΔΔ[1542][0] = ⵠᐃ.ΔⵠΔⵠⵠΔⵠ;
    ΔΔ[1542][1] = ⵠᐃ.ⲆΔᐃᐃᐃᐃΔ;
    ΔΔ[1542][2] = ⵠᐃ.ⲆΔⲆⲆᐃⲆⲆ;
    ΔΔ[1543] = ΔΔ[1542];
    ΔΔ[v624.ⲆΔᐃΔᐃᐃΔΔΔ] = ΔΔ[1542];
    ΔΔ[1089] = f119(1, [{
      f: f91,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
    }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1090] = ΔΔ[1089];
    ΔΔ[1099] = f119(1, [{
      f: f218,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1100] = ΔΔ[1099];
    ΔΔ[863] = f119(1, [{
      f: f120,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: f122,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: f118,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[862] = ΔΔ[863];
    ΔΔ[858] = f119(1, [{
      f: f123,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1049] = f119(1, [{
      f: f188,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1048] = ΔΔ[1049];
    ΔΔ[850] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[851] = ΔΔ[850];
    ΔΔ[422] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#493d36", "#332b28"]
    }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[394] = ΔΔ[422];
    ΔΔ[1057] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c67933", "#b17238"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1058] = ΔΔ[1057];
    ΔΔ[1083] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e8e8e8", "#bbbbbb"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1084] = ΔΔ[1083];
    ΔΔ[1094] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#328a56", "#449573"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1095] = ΔΔ[1094];
    ΔΔ[1225] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c98e2f", "#a36b11"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1226] = ΔΔ[1225];
    ΔΔ[1227] = ΔΔ[1225];
    ΔΔ[1242] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#13a56d", "#098a58"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1243] = ΔΔ[1242];
    ΔΔ[1244] = ΔΔ[1242];
    ΔΔ[1257] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a8214", "#4a9c1e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1258] = ΔΔ[1257];
    ΔΔ[1259] = ΔΔ[1257];
    ΔΔ[1235] = f119(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#b22419", "#99110e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1236] = ΔΔ[1235];
    ΔΔ[1237] = ΔΔ[1235];
    ΔΔ[420] = f119(1, [{
      f: f135,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 7,
      c: ["#4d2d14", "#432516"]
    }, {
      f: f126,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[413] = ΔΔ[420];
    ΔΔ[439] = f119(1, [{
      f: f125,
      x: -2,
      y: -1,
      a: 1,
      r: -Math.PI / 7,
      c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
    }, {
      f: f126,
      x: -2,
      y: -1,
      a: 1,
      r: -Math.PI / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[438] = ΔΔ[439];
    ΔΔ[1109] = f119(1, [{
      f: f158,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
    }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1114] = f119(1, [{
      f: f145,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1078] = f119(1, [{
      f: f140,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[371] = f119(1, [{
      f: f168,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[402] = f119(1, [{
      f: f143,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[403] = f119(1, [{
      f: f160,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[593] = f119(1, [{
      f: f152,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[424] = f119(1, [{
      f: f139,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[423] = f119(1, [{
      f: f139,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[368] = f119(1, [{
      f: f139,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[407] = f119(1, [{
      f: f139,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[596] = f119(1, [{
      f: f139,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1293] = [];
    ΔΔ[1293][0] = ⵠᐃ.ᐃᐃᐃΔΔΔⵠ;
    ΔΔ[1293][1] = ⵠᐃ.ᐃⲆᐃⵠⲆⵠⲆ;
    ΔΔ[1293][2] = ⵠᐃ.ⵠⵠᐃⵠᐃⲆⵠ;
    ΔΔ[1295] = ΔΔ[1293];
    ΔΔ[1294] = ΔΔ[1293];
    ΔΔ[426] = f119(1, [{
      f: f161,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#252B28", "#58645F", "#75827D"]
    }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[408] = f119(1, [{
      f: f176,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#282823", "#877c2d", "#c4bc51"]
    }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[409] = f119(1, [{
      f: f165,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#232828", "#3fc9c9", "#74ede6"]
    }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[427] = f119(1, [{
      f: f135,
      x: 0,
      y: -5,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[1079] = ΔΔ[1078];
    ΔΔ[364] = ΔΔ[371];
    ΔΔ[400] = ΔΔ[402];
    ΔΔ[401] = ΔΔ[403];
    ΔΔ[594] = ΔΔ[593];
    ΔΔ[425] = ΔΔ[424];
    ΔΔ[366] = ΔΔ[423];
    ΔΔ[406] = ΔΔ[368];
    ΔΔ[367] = ΔΔ[407];
    ΔΔ[598] = ΔΔ[596];
    ΔΔ[387] = f119(1, [{
      f: f109,
      x: 0,
      y: 0,
      a: 1,
      r: 0
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[421] = f119(1, [{
      f: f112,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[372] = ΔΔ[421];
    ΔΔ[440] = f119(1, [{
      f: f162,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[373] = ΔΔ[440];
    ΔΔ[442] = f119(1, [{
      f: f170,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[443] = ΔΔ[442];
    ΔΔ[630] = f119(1, [{
      f: f162,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[631] = ΔΔ[630];
    ΔΔ[441] = f119(1, [{
      f: f178,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[375] = ΔΔ[441];
    ΔΔ[428] = f119(1, [{
      f: f148,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[429] = ΔΔ[428];
    ΔΔ[430] = f119(1, [{
      f: f239,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[431] = ΔΔ[430];
    ΔΔ[473] = f119(1, [{
      f: f209,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[474] = ΔΔ[473];
    ΔΔ[475] = f119(1, [{
      f: f209,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[476] = ΔΔ[475];
    ΔΔ[472] = f119(1, [{
      f: f255,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[471] = ΔΔ[472];
    ΔΔ[633] = f119(1, [{
      f: f255,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[634] = ΔΔ[633];
    ΔΔ[446] = f119(1, [{
      f: f214,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[378] = ΔΔ[446];
    ΔΔ[483] = f119(1, [{
      f: f258,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[482] = ΔΔ[483];
    ΔΔ[637] = f119(1, [{
      f: f258,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[636] = ΔΔ[637];
    ΔΔ[486] = f119(1, [{
      f: f208,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[485] = ΔΔ[486];
    ΔΔ[489] = f119(1, [{
      f: f216,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[488] = ΔΔ[489];
    ΔΔ[448] = f119(1, [{
      f: f205,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[449] = ΔΔ[448];
    ΔΔ[411] = f119(1, [{
      f: f114,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[434] = f119(1, [{
      f: f114,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[436] = ΔΔ[434];
    ΔΔ[416] = f119(1, [{
      f: f124,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#cec0c4", "#ffffff", "#6d6768"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[651] = f119(1, [{
      f: f124,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#d4e9ec", "#37b1d7", "#506c71"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[653] = ΔΔ[651];
    ΔΔ[479] = f119(1, [{
      f: f267,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ef96be", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[1490] = f119(1, [{
      f: f267,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#55423e", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[280] = f119(1, [{
      f: f146,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[281] = f119(1, [{
      f: f146,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[843] = f119(1, [{
      f: f267,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#201851", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[504] = f119(1, [{
      f: f267,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#231f20", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[643] = f119(1, [{
      f: f267,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ffffff", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[480] = f119(1, [{
      f: f185,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[481] = ΔΔ[480];
    ΔΔ[492] = f119(1, [{
      f: f238,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[491] = ΔΔ[492];
    ΔΔ[640] = f119(1, [{
      f: f279,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[641] = ΔΔ[640];
    ΔΔ[1156] = f119(1, [{
      f: f130,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1157] = ΔΔ[1156];
    ΔΔ[1158] = f119(1, [{
      f: f128,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1159] = ΔΔ[1158];
    ΔΔ[414] = f119(1, [{
      f: f117,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#ffffff", "#cec0c4"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[415] = ΔΔ[414];
    ΔΔ[503] = [];
    ΔΔ[503][0] = ⵠᐃ.ⲆⵠᐃⵠΔⵠⵠ;
    ΔΔ[503][1] = ⵠᐃ.ᐃΔᐃΔᐃᐃⵠ;
    ΔΔ[503][2] = ⵠᐃ.ᐃⵠΔΔⵠⲆⵠ;
    ΔΔ[478] = ΔΔ[503];
    ΔΔ[1251] = [];
    ΔΔ[1251][0] = ⵠᐃ.ΔᐃΔᐃⵠⵠⵠ;
    ΔΔ[1251][1] = ⵠᐃ.ⵠⲆΔⵠᐃᐃⵠ;
    ΔΔ[1251][2] = ⵠᐃ.ⲆᐃⵠΔΔⵠⵠ;
    ΔΔ[1253] = ΔΔ[1251];
    ΔΔ[1252] = ΔΔ[1251];
    ΔΔ[1254] = [];
    ΔΔ[1254][0] = ⵠᐃ.ⲆΔΔⵠⵠⲆⵠ;
    ΔΔ[1254][1] = ⵠᐃ.ᐃⲆⲆⵠΔⵠᐃ;
    ΔΔ[1254][2] = ⵠᐃ.ΔⲆⵠΔΔⲆΔ;
    ΔΔ[1256] = ΔΔ[1254];
    ΔΔ[1255] = ΔΔ[1254];
    ΔΔ[1486] = [];
    ΔΔ[1486][0] = ⵠᐃ.ΔⲆⵠᐃΔΔΔ;
    ΔΔ[1486][1] = ⵠᐃ.ΔⲆⵠᐃΔΔΔ;
    ΔΔ[1486][2] = ⵠᐃ.ΔⲆⵠᐃΔΔΔ;
    ΔΔ[1487] = ΔΔ[1486];
    ΔΔ[537] = [];
    ΔΔ[537][0] = ⵠᐃ.ⲆⲆⲆᐃⲆⵠⲆ;
    ΔΔ[537][1] = ⵠᐃ.ᐃⵠᐃⵠⵠᐃⵠ;
    ΔΔ[537][2] = ⵠᐃ.ᐃᐃΔᐃⲆⵠΔ;
    ΔΔ[538] = ΔΔ[537];
    ΔΔ[539] = ΔΔ[537];
    ΔΔ[1488] = [];
    ΔΔ[1488][0] = ⵠᐃ.ⲆΔⵠΔⲆⲆⲆ;
    ΔΔ[1488][1] = ⵠᐃ.ⲆΔⵠΔⲆⲆⲆ;
    ΔΔ[1488][2] = ⵠᐃ.ⲆΔⵠΔⲆⲆⲆ;
    ΔΔ[1489] = ΔΔ[1488];
    ΔΔ[1627] = [];
    ΔΔ[1627][0] = ⵠᐃ.ⲆⵠⵠᐃᐃⵠΔⲆⵠ;
    ΔΔ[1627][1] = ⵠᐃ.ᐃⲆᐃⲆᐃΔᐃⲆᐃ;
    ΔΔ[1627][2] = ⵠᐃ.ⲆᐃΔⲆΔᐃΔᐃⲆ;
    ΔΔ[1626] = ΔΔ[1627];
    ΔΔ[1628] = ΔΔ[1627];
    ΔΔ[1267] = [];
    ΔΔ[1267][0] = ⵠᐃ.ⲆᐃⲆⲆΔⵠⲆ;
    ΔΔ[1267][1] = ⵠᐃ.ⵠⵠⵠⵠⲆⲆⵠ;
    ΔΔ[1267][2] = ⵠᐃ.ΔᐃⵠⵠⲆΔⲆ;
    ΔΔ[1266] = ΔΔ[1267];
    ΔΔ[1268] = ΔΔ[1267];
    ΔΔ[1270] = [];
    ΔΔ[1270][0] = ⵠᐃ.ⵠⲆΔΔⲆⵠⵠ;
    ΔΔ[1270][1] = ⵠᐃ.ⲆΔΔᐃⲆΔⵠ;
    ΔΔ[1270][2] = ⵠᐃ.ΔᐃΔⲆᐃⵠΔ;
    ΔΔ[1269] = ΔΔ[1270];
    ΔΔ[1271] = ΔΔ[1270];
    ΔΔ[1273] = [];
    ΔΔ[1273][0] = ⵠᐃ.ΔΔΔᐃΔᐃᐃ;
    ΔΔ[1273][1] = ⵠᐃ.ⲆᐃⵠΔⲆⵠⵠ;
    ΔΔ[1273][2] = ⵠᐃ.ⵠΔⲆⲆⵠΔᐃ;
    ΔΔ[1272] = ΔΔ[1273];
    ΔΔ[1274] = ΔΔ[1273];
    ΔΔ[1276] = [];
    ΔΔ[1276][0] = ⵠᐃ.ⲆᐃⵠΔΔΔⵠ;
    ΔΔ[1276][1] = ⵠᐃ.ⵠⲆⵠⵠΔΔΔ;
    ΔΔ[1276][2] = ⵠᐃ.ᐃᐃΔᐃⵠⵠΔ;
    ΔΔ[1275] = ΔΔ[1276];
    ΔΔ[1277] = ΔΔ[1276];
    ΔΔ[1279] = [];
    ΔΔ[1279][0] = ⵠᐃ.ⵠⲆᐃⵠⵠⲆⵠ;
    ΔΔ[1279][1] = ⵠᐃ.ΔΔⵠⵠⵠⲆⲆ;
    ΔΔ[1279][2] = ⵠᐃ.ⵠⲆⲆⲆⵠᐃᐃ;
    ΔΔ[1278] = ΔΔ[1279];
    ΔΔ[1280] = ΔΔ[1279];
    ΔΔ[1282] = [];
    ΔΔ[1282][0] = ⵠᐃ.ΔΔᐃᐃΔⲆⲆ;
    ΔΔ[1282][1] = ⵠᐃ.ⵠΔΔⵠΔⲆⲆ;
    ΔΔ[1282][2] = ⵠᐃ.ⲆⵠⵠΔΔᐃⲆ;
    ΔΔ[1281] = ΔΔ[1282];
    ΔΔ[1283] = ΔΔ[1282];
    ΔΔ[1285] = [];
    ΔΔ[1285][0] = ⵠᐃ.ᐃⵠᐃⵠΔⵠᐃ;
    ΔΔ[1285][1] = ⵠᐃ.ΔΔⵠᐃⲆⲆⲆ;
    ΔΔ[1285][2] = ⵠᐃ.ⲆⲆᐃᐃΔⲆⲆ;
    ΔΔ[1284] = ΔΔ[1285];
    ΔΔ[1286] = ΔΔ[1285];
    ΔΔ[1288] = [];
    ΔΔ[1288][0] = ⵠᐃ.ᐃⲆᐃⲆΔⲆΔ;
    ΔΔ[1288][1] = ⵠᐃ.ᐃⵠᐃᐃΔⵠⲆ;
    ΔΔ[1288][2] = ⵠᐃ.ⵠⵠⵠΔΔᐃᐃ;
    ΔΔ[1287] = ΔΔ[1288];
    ΔΔ[1289] = ΔΔ[1288];
    ΔΔ[1291] = [];
    ΔΔ[1291][0] = ⵠᐃ.ᐃⲆⲆᐃΔΔⵠ;
    ΔΔ[1291][1] = ⵠᐃ.ⲆⵠᐃⵠⲆⵠⵠ;
    ΔΔ[1291][2] = ⵠᐃ.ᐃⲆΔΔⲆΔⲆ;
    ΔΔ[1290] = ΔΔ[1291];
    ΔΔ[1292] = ΔΔ[1291];
    ΔΔ[1343] = [];
    ΔΔ[1343][0] = ⵠᐃ.ΔΔᐃΔᐃ;
    ΔΔ[1343][1] = ⵠᐃ.ΔΔᐃΔᐃ;
    ΔΔ[1343][2] = ⵠᐃ.ΔΔᐃΔᐃ;
    ΔΔ[v624.ⲆⲆⲆΔⵠΔΔᐃⲆ] = ΔΔ[1343];
    ΔΔ[1344] = ΔΔ[1343];
    ΔΔ[1345] = [];
    ΔΔ[1345][0] = ⵠᐃ.ⵠᐃΔᐃᐃ;
    ΔΔ[1345][1] = ⵠᐃ.ⵠᐃΔᐃᐃ;
    ΔΔ[1345][2] = ⵠᐃ.ⵠᐃΔᐃᐃ;
    ΔΔ[v624.ⲆΔᐃⲆᐃᐃⵠΔᐃ] = ΔΔ[1345];
    ΔΔ[1346] = ΔΔ[1345];
    ΔΔ[1347] = [];
    ΔΔ[1347][0] = ⵠᐃ.ΔⲆⵠⵠⲆ;
    ΔΔ[1347][1] = ⵠᐃ.ΔⲆⵠⵠⲆ;
    ΔΔ[1347][2] = ⵠᐃ.ΔⲆⵠⵠⲆ;
    ΔΔ[v624.ⵠⲆⲆⲆⵠⵠᐃⲆΔ] = ΔΔ[1347];
    ΔΔ[1348] = ΔΔ[1347];
    ΔΔ[1463] = [];
    ΔΔ[1463][0] = ⵠᐃ.ⵠⵠⵠⲆⵠ;
    ΔΔ[1463][1] = ⵠᐃ.ⵠⵠⵠⲆⵠ;
    ΔΔ[1463][2] = ⵠᐃ.ⵠⵠⵠⲆⵠ;
    ΔΔ[v624.ᐃⲆⲆΔⲆⲆΔⲆᐃ] = ΔΔ[1463];
    ΔΔ[1464] = ΔΔ[1463];
    ΔΔ[1484] = [];
    ΔΔ[1484][0] = ⵠᐃ.ΔⲆΔΔⲆ;
    ΔΔ[1484][1] = ⵠᐃ.ΔⲆΔΔⲆ;
    ΔΔ[1484][2] = ⵠᐃ.ΔⲆΔΔⲆ;
    ΔΔ[1485] = ΔΔ[1484];
    ΔΔ[1354] = [];
    ΔΔ[1354][0] = ⵠᐃ.ᐃⲆᐃΔΔΔⵠ;
    ΔΔ[1354][1] = ⵠᐃ.ⲆⵠⵠⲆⵠᐃⵠ;
    ΔΔ[1354][2] = ⵠᐃ.ⵠᐃΔⵠⲆΔΔ;
    ΔΔ[1356] = ΔΔ[1354];
    ΔΔ[1355] = ΔΔ[1354];
    ΔΔ[993] = [];
    ΔΔ[993][0] = ⵠᐃ.ΔⵠⵠΔⲆⵠΔ;
    ΔΔ[993][1] = ⵠᐃ.ⵠⵠⲆΔⵠΔⲆ;
    ΔΔ[993][2] = ⵠᐃ.ΔⲆᐃⵠΔⵠᐃ;
    ΔΔ[995] = ΔΔ[993];
    ΔΔ[994] = ΔΔ[993];
    ΔΔ[996] = [];
    ΔΔ[996][0] = ⵠᐃ.ᐃᐃᐃⲆΔⲆΔ;
    ΔΔ[996][1] = ⵠᐃ.ⲆΔⵠⵠⵠΔΔ;
    ΔΔ[996][2] = ⵠᐃ.ᐃⵠⲆᐃⵠⲆⲆ;
    ΔΔ[998] = ΔΔ[996];
    ΔΔ[997] = ΔΔ[996];
    ΔΔ[1357] = [];
    ΔΔ[1357][0] = ⵠᐃ.ΔΔᐃⲆⲆⵠⵠ;
    ΔΔ[1357][1] = ⵠᐃ.ΔⲆⵠⵠⵠᐃΔ;
    ΔΔ[1357][2] = ⵠᐃ.ⵠΔΔΔⲆᐃⵠ;
    ΔΔ[1359] = ΔΔ[1357];
    ΔΔ[1358] = ΔΔ[1357];
    ΔΔ[1328] = [];
    ΔΔ[1328][0] = ⵠᐃ.ᐃᐃⵠⲆΔΔΔ;
    ΔΔ[1328][1] = ⵠᐃ.ᐃⵠⵠᐃΔΔΔ;
    ΔΔ[1328][2] = ⵠᐃ.ΔⲆⲆᐃⵠΔᐃ;
    ΔΔ[1330] = ΔΔ[1328];
    ΔΔ[1329] = ΔΔ[1328];
    ΔΔ[1544] = [];
    ΔΔ[1544][0] = ⵠᐃ.ᐃⲆΔᐃⲆΔΔ;
    ΔΔ[1544][1] = ⵠᐃ.ᐃⲆⵠΔⵠⲆᐃ;
    ΔΔ[1544][2] = ⵠᐃ.ⵠⲆᐃᐃⲆⵠⵠ;
    ΔΔ[1546] = ΔΔ[1544];
    ΔΔ[1545] = ΔΔ[1544];
    ΔΔ[1418] = [];
    ΔΔ[1418][0] = ⵠᐃ.ⲆⵠᐃⲆⵠⲆΔ;
    ΔΔ[1418][1] = ⵠᐃ.ᐃΔⲆⵠⵠᐃᐃ;
    ΔΔ[1418][2] = ⵠᐃ.ᐃΔΔΔⵠΔᐃ;
    ΔΔ[1420] = ΔΔ[1418];
    ΔΔ[1419] = ΔΔ[1418];
    ΔΔ[1439] = [];
    ΔΔ[1439][0] = ⵠᐃ.ᐃⵠⵠΔⲆⵠΔ;
    ΔΔ[1439][1] = ⵠᐃ.ᐃΔⵠᐃᐃⵠΔ;
    ΔΔ[1439][2] = ⵠᐃ.ⵠⲆⵠⵠΔΔⲆ;
    ΔΔ[1441] = ΔΔ[1439];
    ΔΔ[1440] = ΔΔ[1439];
    ΔΔ[1457] = [];
    ΔΔ[1457][0] = ⵠᐃ.ΔΔΔⲆⵠⵠⵠ;
    ΔΔ[1457][1] = ⵠᐃ.ⵠΔΔᐃⵠⲆⲆ;
    ΔΔ[1457][2] = ⵠᐃ.ΔⲆΔᐃⲆΔᐃ;
    ΔΔ[1459] = ΔΔ[1457];
    ΔΔ[1458] = ΔΔ[1457];
    ΔΔ[1465] = [];
    ΔΔ[1465][0] = ⵠᐃ.ⲆᐃΔᐃᐃᐃⲆ;
    ΔΔ[1465][1] = ⵠᐃ.ⲆⲆⵠⲆⲆⲆⲆ;
    ΔΔ[1465][2] = ⵠᐃ.ⲆᐃⲆΔⵠᐃᐃ;
    ΔΔ[1466] = ΔΔ[1465];
    ΔΔ[1467] = ΔΔ[1465];
    ΔΔ[1468] = [];
    ΔΔ[1468][0] = ⵠᐃ.ⲆᐃΔᐃᐃᐃⵠ;
    ΔΔ[1468][1] = ⵠᐃ.ⲆⵠΔΔᐃΔᐃ;
    ΔΔ[1468][2] = ⵠᐃ.ΔⲆⵠⵠᐃΔⵠ;
    ΔΔ[1469] = ΔΔ[1468];
    ΔΔ[1470] = ΔΔ[1468];
    ΔΔ[1425] = [];
    ΔΔ[1425][0] = ⵠᐃ.ⲆⵠⲆΔΔᐃΔ;
    ΔΔ[1425][1] = ⵠᐃ.ⵠⲆΔΔΔⲆΔ;
    ΔΔ[1425][2] = ⵠᐃ.ᐃⲆΔΔᐃᐃⲆ;
    ΔΔ[1424] = ΔΔ[1425];
    ΔΔ[1426] = ΔΔ[1425];
    ΔΔ[1388] = [];
    ΔΔ[1388][0] = ⵠᐃ.ⲆᐃⲆΔᐃΔⵠ;
    ΔΔ[1388][1] = ⵠᐃ.ᐃᐃⵠⲆᐃΔⵠ;
    ΔΔ[1388][2] = ⵠᐃ.ΔᐃⵠΔᐃⲆⵠ;
    ΔΔ[1390] = ΔΔ[1388];
    ΔΔ[1389] = ΔΔ[1388];
    ΔΔ[1615] = [];
    ΔΔ[1615][0] = ⵠᐃ.ᐃⵠΔⵠᐃⲆᐃⵠΔ;
    ΔΔ[1615][1] = ⵠᐃ.ᐃᐃⲆⲆᐃⵠᐃΔᐃ;
    ΔΔ[1615][2] = ⵠᐃ.ΔⵠᐃⵠᐃⵠᐃⲆⲆ;
    ΔΔ[1617] = ΔΔ[1615];
    ΔΔ[1616] = ΔΔ[1615];
    ΔΔ[1403] = [];
    ΔΔ[1403][0] = ⵠᐃ.ⲆᐃⲆᐃΔⲆᐃ;
    ΔΔ[1403][1] = ⵠᐃ.ⲆⲆⵠᐃⲆⵠᐃ;
    ΔΔ[1403][2] = ⵠᐃ.ΔⵠΔᐃΔⵠᐃ;
    ΔΔ[1405] = ΔΔ[1403];
    ΔΔ[1404] = ΔΔ[1403];
    ΔΔ[966] = f119(1, [{
      f: f244,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
    }, {
      f: f192,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e4c027"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[967] = ΔΔ[966];
    ΔΔ[519] = f119(1, [{
      f: f219,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[520] = ΔΔ[519];
    ΔΔ[1183] = f119(1, [{
      f: f275,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
    }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1185] = ΔΔ[1183];
    ΔΔ[1184] = ΔΔ[1183];
    ΔΔ[299] = f119(1, [{
      f: f280,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1182] = ΔΔ[299];
    ΔΔ[1177] = f119(1, [{
      f: f233,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1176] = ΔΔ[1177];
    ΔΔ[1175] = ΔΔ[1177];
    ΔΔ[512] = f119(1, [{
      f: f277,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[513] = ΔΔ[512];
    ΔΔ[506] = f119(1, [{
      f: f215,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[507] = ΔΔ[506];
    ΔΔ[509] = f119(1, [{
      f: f193,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[510] = ΔΔ[509];
    ΔΔ[515] = f119(1, [{
      f: f293,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[516] = ΔΔ[515];
    ΔΔ[610] = f119(1, [{
      f: f276,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[611] = ΔΔ[610];
    ΔΔ[1123] = f119(1, [{
      f: f194,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
    }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1125] = ΔΔ[1123];
    ΔΔ[1124] = ΔΔ[1123];
    ΔΔ[615] = f119(1, [{
      f: f271,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[616] = ΔΔ[615];
    ΔΔ[958] = f119(1, [{
      f: f288,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#939393", "#5f6061"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[960] = ΔΔ[958];
    ΔΔ[688] = f119(1, [{
      f: f186,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[689] = ΔΔ[688];
    ΔΔ[618] = f119(1, [{
      f: f271,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[619] = ΔΔ[618];
    ΔΔ[621] = f119(1, [{
      f: f271,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[622] = ΔΔ[621];
    ΔΔ[624] = f119(1, [{
      f: f271,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[625] = ΔΔ[624];
    ΔΔ[627] = [];
    ΔΔ[627][0] = ⵠᐃ.ⲆⲆⵠⵠⲆⵠΔ;
    ΔΔ[627][1] = ⵠᐃ.ΔΔⵠᐃΔΔⵠ;
    ΔΔ[627][2] = ⵠᐃ.ΔᐃⲆᐃⵠΔⲆ;
    ΔΔ[629] = ΔΔ[627];
    ΔΔ[628] = ΔΔ[627];
    ΔΔ[1550] = [];
    ΔΔ[1550][0] = ⵠᐃ.ᐃᐃⵠΔⵠⵠΔ;
    ΔΔ[1550][1] = ⵠᐃ.ⵠⵠⲆⲆΔΔᐃ;
    ΔΔ[1550][2] = ⵠᐃ.ⵠᐃΔⵠᐃΔⵠ;
    ΔΔ[1552] = ΔΔ[1550];
    ΔΔ[1551] = ΔΔ[1550];
    ΔΔ[1554] = [];
    ΔΔ[1554][0] = ⵠᐃ.ⲆⲆⲆΔⲆᐃΔ;
    ΔΔ[1554][1] = ⵠᐃ.ΔΔⵠⵠΔᐃΔ;
    ΔΔ[1554][2] = ⵠᐃ.ⲆᐃⵠΔᐃⲆΔ;
    ΔΔ[1556] = ΔΔ[1554];
    ΔΔ[1555] = ΔΔ[1554];
    ΔΔ[1558] = [];
    ΔΔ[1558][0] = ⵠᐃ.ⵠᐃⵠⲆⲆΔΔ;
    ΔΔ[1558][1] = ⵠᐃ.ⲆΔΔΔⵠⵠᐃ;
    ΔΔ[1558][2] = ⵠᐃ.ᐃⲆᐃΔΔⲆΔ;
    ΔΔ[1560] = ΔΔ[1558];
    ΔΔ[1559] = ΔΔ[1558];
    ΔΔ[1562] = [];
    ΔΔ[1562][0] = ⵠᐃ.ΔᐃᐃⵠᐃΔⵠ;
    ΔΔ[1562][1] = ⵠᐃ.ΔΔⲆᐃᐃΔᐃ;
    ΔΔ[1562][2] = ⵠᐃ.ᐃΔΔⵠⵠⲆⵠ;
    ΔΔ[1564] = ΔΔ[1562];
    ΔΔ[1563] = ΔΔ[1562];
    ΔΔ[1566] = [];
    ΔΔ[1566][0] = ⵠᐃ.ⲆᐃⲆΔΔΔⲆ;
    ΔΔ[1566][1] = ⵠᐃ.ΔⲆⲆⵠΔⵠⵠ;
    ΔΔ[1566][2] = ⵠᐃ.ΔⲆⵠᐃᐃᐃΔ;
    ΔΔ[1568] = ΔΔ[1566];
    ΔΔ[1567] = ΔΔ[1566];
    ΔΔ[1570] = [];
    ΔΔ[1570][0] = ⵠᐃ.ⵠⵠⵠⲆΔᐃᐃ;
    ΔΔ[1570][1] = ⵠᐃ.ⵠΔᐃᐃᐃⲆᐃ;
    ΔΔ[1570][2] = ⵠᐃ.ⵠᐃⲆⲆⲆᐃⲆ;
    ΔΔ[1572] = ΔΔ[1570];
    ΔΔ[1571] = ΔΔ[1570];
    ΔΔ[1574] = [];
    ΔΔ[1574][0] = ⵠᐃ.ⵠΔⲆΔⲆⵠᐃ;
    ΔΔ[1574][1] = ⵠᐃ.ΔΔⲆⲆΔⲆⵠ;
    ΔΔ[1574][2] = ⵠᐃ.ⲆⵠⲆΔⵠᐃⵠ;
    ΔΔ[1576] = ΔΔ[1574];
    ΔΔ[1575] = ΔΔ[1574];
    ΔΔ[1578] = [];
    ΔΔ[1578][0] = ⵠᐃ.ⵠΔⵠⲆⵠⲆᐃ;
    ΔΔ[1578][1] = ⵠᐃ.ᐃⵠᐃⵠⵠΔⵠ;
    ΔΔ[1578][2] = ⵠᐃ.ⵠⲆᐃⵠᐃⵠᐃ;
    ΔΔ[1580] = ΔΔ[1578];
    ΔΔ[1579] = ΔΔ[1578];
    ΔΔ[1582] = [];
    ΔΔ[1582][0] = ⵠᐃ.ⵠⵠᐃᐃᐃᐃΔ;
    ΔΔ[1582][1] = ⵠᐃ.ⵠΔᐃᐃᐃΔⵠ;
    ΔΔ[1582][2] = ⵠᐃ.ᐃⵠⲆⵠⵠⵠᐃ;
    ΔΔ[1584] = ΔΔ[1582];
    ΔΔ[1583] = ΔΔ[1582];
    ΔΔ[1586] = [];
    ΔΔ[1586][0] = ⵠᐃ.ⲆΔⵠᐃΔΔⵠ;
    ΔΔ[1586][1] = ⵠᐃ.ⲆΔⲆΔΔᐃⵠ;
    ΔΔ[1586][2] = ⵠᐃ.ⵠⵠⲆᐃΔⲆᐃ;
    ΔΔ[1588] = ΔΔ[1586];
    ΔΔ[1587] = ΔΔ[1586];
    ΔΔ[1590] = [];
    ΔΔ[1590][0] = ⵠᐃ.ΔᐃΔᐃΔⵠΔ;
    ΔΔ[1590][1] = ⵠᐃ.ΔᐃΔᐃΔⵠⵠ;
    ΔΔ[1590][2] = ⵠᐃ.ⲆⵠΔΔⲆᐃᐃ;
    ΔΔ[1592] = ΔΔ[1590];
    ΔΔ[1591] = ΔΔ[1590];
    ΔΔ[1594] = [];
    ΔΔ[1594][0] = ⵠᐃ.ᐃⵠΔⲆΔⲆᐃ;
    ΔΔ[1594][1] = ⵠᐃ.ⵠⵠᐃⲆⲆⲆⲆ;
    ΔΔ[1594][2] = ⵠᐃ.ⲆⵠᐃⲆⵠΔΔ;
    ΔΔ[1596] = ΔΔ[1594];
    ΔΔ[1595] = ΔΔ[1594];
    ΔΔ[1598] = [];
    ΔΔ[1598][0] = ⵠᐃ.ΔΔⲆⲆᐃⲆᐃ;
    ΔΔ[1598][1] = ⵠᐃ.ΔⵠⵠᐃΔⲆᐃ;
    ΔΔ[1598][2] = ⵠᐃ.ΔⵠⵠᐃΔⵠⲆ;
    ΔΔ[1600] = ΔΔ[1598];
    ΔΔ[1599] = ΔΔ[1598];
    ΔΔ[1602] = [];
    ΔΔ[1602][0] = ⵠᐃ.ᐃᐃⲆΔᐃⵠⵠ;
    ΔΔ[1602][1] = ⵠᐃ.ⵠΔⵠⲆΔᐃΔ;
    ΔΔ[1602][2] = ⵠᐃ.ⵠⵠᐃⵠⵠⵠⲆ;
    ΔΔ[1604] = ΔΔ[1602];
    ΔΔ[1603] = ΔΔ[1602];
    ΔΔ[1606] = [];
    ΔΔ[1606][0] = ⵠᐃ.ᐃⵠᐃⵠᐃⲆᐃ;
    ΔΔ[1606][1] = ⵠᐃ.ΔᐃᐃΔⲆⲆΔ;
    ΔΔ[1606][2] = ⵠᐃ.ⲆΔᐃᐃᐃⵠⵠ;
    ΔΔ[1608] = ΔΔ[1606];
    ΔΔ[1607] = ΔΔ[1606];
    ΔΔ[656] = f119(1, [{
      f: f246,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
    }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[657] = ΔΔ[656];
    ΔΔ[670] = f119(1, [{
      f: f196,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 5,
      c: ["#141414", "#c4a23a", "#816511"]
    }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[671] = ΔΔ[670];
    ΔΔ[659] = f119(1, [{
      f: f234,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    ΔΔ[661] = f119(1, [{
      f: f234,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#120202", "#991616", "#750a0a", "#120202"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    ΔΔ[667] = f119(1, [{
      f: f273,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba"]
    }, {
      f: f287,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
    }, {
      f: f225,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0"]
    }, {
      f: f179,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[668] = ΔΔ[667];
    ΔΔ[718] = f119(1, [{
      f: f230,
      x: 45,
      y: 70,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[720] = ΔΔ[718];
    ΔΔ[679] = f119(1, [{
      f: f213,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[680] = ΔΔ[679];
    ΔΔ[1028] = f119(1, [{
      f: f221,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1029] = ΔΔ[1028];
    ΔΔ[1016] = f119(1, [{
      f: f260,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041"]
    }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1017] = ΔΔ[1016];
    ΔΔ[1025] = f119(1, [{
      f: f235,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1026] = ΔΔ[1025];
    ΔΔ[1020] = f119(1, [{
      f: f235,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1021] = ΔΔ[1020];
    ΔΔ[1005] = f119(1, [{
      f: f226,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1007] = ΔΔ[1005];
    ΔΔ[1009] = f119(1, [{
      f: f226,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1011] = ΔΔ[1009];
    ΔΔ[1013] = f119(1, [{
      f: f226,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1019] = ΔΔ[1013];
    ΔΔ[1186] = f119(1, [{
      f: f285,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1188] = ΔΔ[1186];
    ΔΔ[1187] = ΔΔ[1186];
    ΔΔ[981] = f119(1, [{
      f: f232,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[983] = ΔΔ[981];
    ΔΔ[728] = f119(1, [{
      f: f183,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
    }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[729] = ΔΔ[728];
    ΔΔ[1000] = f119(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[362] = f119(1, [{
      f: f253,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[1002] = f119(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[363] = f119(1, [{
      f: f253,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[278] = f119(1, [{
      f: f220,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[279] = f119(1, [{
      f: f220,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[277] = f119(1, [{
      f: f220,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[835] = f119(1, [{
      f: f195,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[837] = ΔΔ[835];
    ΔΔ[918] = f119(1, [{
      f: f195,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[919] = ΔΔ[918];
    ΔΔ[921] = f119(1, [{
      f: f195,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[923] = ΔΔ[921];
    ΔΔ[924] = f119(1, [{
      f: f195,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[925] = ΔΔ[924];
    ΔΔ[531] = f119(1, [{
      f: f270,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[532] = ΔΔ[531];
    ΔΔ[1075] = f119(1, [{
      f: f237,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#252525", "#73583e", "#493425", "#7d6144"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[1076] = ΔΔ[1075];
    ΔΔ[540] = f119(1, [{
      f: f227,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[541] = ΔΔ[540];
    ΔΔ[543] = f119(1, [{
      f: f197,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#dbce71", "#b29c32", "#c4bc51"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[544] = ΔΔ[543];
    ΔΔ[546] = f119(1, [{
      f: f181,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[547] = ΔΔ[546];
    ΔΔ[576] = f119(1, [{
      f: f286,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[577] = ΔΔ[576];
    ΔΔ[579] = f119(1, [{
      f: f264,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#221e1b", "#ffffff", "#f6f0e7"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[580] = ΔΔ[579];
    ΔΔ[529] = f119(1, [{
      f: f242,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#c27add", "#cd98e5"]
    }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[828] = f119(1, [{
      f: f198,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#D7C393", "#a48c6c"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[235] = f119(1, [{
      f: f292,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#93CBCE", "#E9F6F6"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[233] = f119(1, [{
      f: f198,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#866432", "#6b4f25"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[282] = f119(1, [{
      f: f262,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[283] = f119(1, [{
      f: f268,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[1033] = ΔΔ[282];
    ΔΔ[1034] = ΔΔ[283];
    ΔΔ[1038] = f119(1, [{
      f: f243,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
    }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1040] = ΔΔ[1038];
    ΔΔ[832] = f119(1, [{
      f: f274,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[831] = f119(1, [{
      f: f250,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[964] = ΔΔ[832];
    ΔΔ[830] = ΔΔ[831];
    ΔΔ[853] = f119(1, [{
      f: f147,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[854] = ΔΔ[853];
    ΔΔ[302] = f119(1, [{
      f: f174,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1115] = f119(1, [{
      f: f157,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[236] = f119(1, [{
      f: f259,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[909] = ΔΔ[236];
    ΔΔ[881] = f119(1, [{
      f: f177,
      x: -3,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[883] = f119(1, [{
      f: f173,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1d051e", "#42261A", "#281818"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[885] = ΔΔ[883];
    ΔΔ[868] = f119(1, [{
      f: f151,
      x: -3,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[869] = ΔΔ[868];
    ΔΔ[893] = f119(1, [{
      f: f115,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
    }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[865] = f119(1, [{
      f: f175,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ΔΔ[866] = ΔΔ[865];
    ΔΔ[904] = f119(1, [{
      f: f256,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[903] = ΔΔ[904];
    ΔΔ[1119] = f119(1, [{
      f: f97,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#e2d63b", "#ee71a9", "#42b672"]
    }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1120] = ΔΔ[1119];
    ΔΔ[824] = f119(1, [{
      f: f182,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
    }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[823] = ΔΔ[824];
    ΔΔ[1091] = f119(1, [{
      f: f96,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1092] = ΔΔ[1091];
    ΔΔ[871] = f119(1, [{
      f: f184,
      x: -1,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
    ΔΔ[873] = ΔΔ[871];
    ΔΔ[845] = f119(1, [{
      f: f184,
      x: -1,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
    }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[846] = ΔΔ[845];
    ΔΔ[848] = f119(1, [{
      f: f187,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[298] = f119(1, [{
      f: f149,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[1174] = ΔΔ[298];
    ΔΔ[878] = f119(1, [{
      f: f164,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[879] = ΔΔ[878];
    ΔΔ[238] = f119(1, [{
      f: f121,
      x: -2,
      y: -8,
      a: 1,
      r: 0,
      c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ΔΔ[979] = ΔΔ[238];
    ΔΔ[731] = [];
    ΔΔ[731][0] = ⵠᐃ.ᐃⲆⵠΔᐃⲆΔ;
    ΔΔ[731][1] = ⵠᐃ.ΔⲆᐃⲆᐃⲆⵠ;
    ΔΔ[731][2] = ⵠᐃ.ΔⵠⲆΔᐃⲆⲆ;
    ΔΔ[732] = ΔΔ[731];
    ΔΔ[733] = ΔΔ[731];
    ΔΔ[1126] = [];
    ΔΔ[1126][0] = ⵠᐃ.ᐃΔΔᐃⲆΔᐃ;
    ΔΔ[1126][1] = ⵠᐃ.ⵠⲆΔⲆᐃΔΔ;
    ΔΔ[1126][2] = ⵠᐃ.ΔΔᐃᐃᐃΔⵠ;
    ΔΔ[1128] = ΔΔ[1126];
    ΔΔ[1127] = ΔΔ[1126];
    ΔΔ[1209] = ΔΔ[1208];
    ΔΔ[1210] = ΔΔ[1208];
    ΔΔ[1208] = [];
    ΔΔ[1208][0] = ⵠᐃ.ⵠⲆⲆⲆⲆⵠⲆ;
    ΔΔ[1208][1] = ⵠᐃ.ΔᐃⲆΔⲆⵠⵠ;
    ΔΔ[1208][2] = ⵠᐃ.ᐃⲆⲆΔⲆⵠΔ;
    ΔΔ[1209] = ΔΔ[1208];
    ΔΔ[1210] = ΔΔ[1208];
    ΔΔ[1219] = [];
    ΔΔ[1219][0] = ⵠᐃ.ΔⲆᐃᐃⲆⵠⵠ;
    ΔΔ[1219][1] = ⵠᐃ.ⵠⲆᐃΔⵠⵠᐃ;
    ΔΔ[1219][2] = ⵠᐃ.ΔΔⵠᐃⵠΔⲆ;
    ΔΔ[1220] = ΔΔ[1219];
    ΔΔ[1221] = ΔΔ[1219];
    ΔΔ[1197] = [];
    ΔΔ[1197][0] = ⵠᐃ.ᐃΔᐃⵠⲆⵠⲆ;
    ΔΔ[1197][1] = ⵠᐃ.ⲆᐃⵠΔⵠⵠⵠ;
    ΔΔ[1197][2] = ⵠᐃ.ΔⲆΔΔⲆΔⵠ;
    ΔΔ[1198] = ΔΔ[1197];
    ΔΔ[1199] = ΔΔ[1197];
    ΔΔ[1201] = [];
    ΔΔ[1201][0] = ⵠᐃ.ⲆⲆⲆⲆⵠᐃᐃ;
    ΔΔ[1201][1] = ⵠᐃ.ⵠΔΔⵠᐃᐃⵠ;
    ΔΔ[1201][2] = ⵠᐃ.ᐃᐃΔⵠᐃⲆᐃ;
    ΔΔ[1202] = ΔΔ[1201];
    ΔΔ[1203] = ΔΔ[1201];
    ΔΔ[1205] = [];
    ΔΔ[1205][0] = ⵠᐃ.ᐃᐃΔⵠᐃᐃΔ;
    ΔΔ[1205][1] = ⵠᐃ.ⲆΔⵠⲆⲆⲆΔ;
    ΔΔ[1205][2] = ⵠᐃ.ᐃⵠⵠⵠⲆΔⵠ;
    ΔΔ[1206] = ΔΔ[1205];
    ΔΔ[1207] = ΔΔ[1205];
    ΔΔ[1222] = [];
    ΔΔ[1222][0] = ⵠᐃ.ΔⵠⲆΔΔᐃᐃ;
    ΔΔ[1222][1] = ⵠᐃ.ⲆᐃⵠⲆⵠΔⵠ;
    ΔΔ[1222][2] = ⵠᐃ.ⵠⲆΔⵠⲆΔΔ;
    ΔΔ[1223] = ΔΔ[1222];
    ΔΔ[1224] = ΔΔ[1222];
    ΔΔ[984] = [];
    ΔΔ[984][0] = ⵠᐃ.ⵠΔⵠⲆⲆΔᐃ;
    ΔΔ[984][1] = ⵠᐃ.ᐃⵠⵠᐃΔᐃⵠ;
    ΔΔ[984][2] = ⵠᐃ.ᐃⵠᐃⵠⲆⲆⲆ;
    ΔΔ[986] = ΔΔ[984];
    ΔΔ[985] = ΔΔ[984];
    ΔΔ[1492] = [];
    ΔΔ[1492][0] = ⵠᐃ.ⵠᐃΔᐃⲆⵠⲆ;
    ΔΔ[1492][1] = ⵠᐃ.ᐃᐃⲆΔⲆΔⵠ;
    ΔΔ[1492][2] = ⵠᐃ.ᐃΔⵠⵠⵠⲆᐃ;
    ΔΔ[v624.ΔᐃⵠⲆᐃΔᐃΔΔ] = ΔΔ[1492];
    ΔΔ[1493] = ΔΔ[1492];
    ΔΔ[987] = [];
    ΔΔ[987][0] = ⵠᐃ.ΔⲆⲆᐃᐃΔⵠ;
    ΔΔ[987][1] = ⵠᐃ.ᐃⲆⵠΔⵠⵠᐃ;
    ΔΔ[987][2] = ⵠᐃ.ΔⵠⲆᐃΔᐃⲆ;
    ΔΔ[989] = ΔΔ[987];
    ΔΔ[988] = ΔΔ[987];
    ΔΔ[990] = [];
    ΔΔ[990][0] = ⵠᐃ.ΔΔᐃᐃⲆΔΔ;
    ΔΔ[990][1] = ⵠᐃ.ⲆΔΔᐃᐃⵠᐃ;
    ΔΔ[990][2] = ⵠᐃ.ⲆΔΔΔᐃⲆᐃ;
    ΔΔ[992] = ΔΔ[990];
    ΔΔ[991] = ΔΔ[990];
    ΔΔ[1214] = [];
    ΔΔ[1214][0] = ⵠᐃ.ⵠⵠⵠⵠⵠΔᐃ;
    ΔΔ[1214][1] = ⵠᐃ.ΔⵠᐃΔᐃᐃᐃ;
    ΔΔ[1214][2] = ⵠᐃ.ⵠⲆⲆᐃΔⲆΔ;
    ΔΔ[1215] = ΔΔ[1214];
    ΔΔ[1212] = [];
    ΔΔ[1212][0] = ⵠᐃ.ᐃΔΔⲆΔΔⲆ;
    ΔΔ[1212][1] = ⵠᐃ.ⲆⵠⲆⵠⵠⵠⲆ;
    ΔΔ[1212][2] = ⵠᐃ.ᐃⲆⲆⲆᐃⲆΔ;
    ΔΔ[1213] = ΔΔ[1212];
    ΔΔ[836] = ΔΔ[835];
    ΔΔ[920] = ΔΔ[918];
    ΔΔ[922] = ΔΔ[921];
    ΔΔ[926] = ΔΔ[924];
    ΔΔ[459] = ΔΔ[422];
    ΔΔ[852] = ΔΔ[850];
    ΔΔ[864] = ΔΔ[863];
    ΔΔ[859] = ΔΔ[858];
    ΔΔ[383] = ΔΔ[420];
    ΔΔ[809] = ΔΔ[362];
    ΔΔ[1001] = ΔΔ[1000];
    ΔΔ[810] = ΔΔ[363];
    ΔΔ[1003] = ΔΔ[1002];
    ΔΔ[386] = ΔΔ[439];
    ΔΔ[1112] = ΔΔ[1114];
    ΔΔ[1111] = ΔΔ[1109];
    ΔΔ[1080] = ΔΔ[1078];
    ΔΔ[451] = ΔΔ[371];
    ΔΔ[815] = ΔΔ[813];
    ΔΔ[456] = ΔΔ[402];
    ΔΔ[457] = ΔΔ[403];
    ΔΔ[595] = ΔΔ[593];
    ΔΔ[384] = ΔΔ[424];
    ΔΔ[452] = ΔΔ[423];
    ΔΔ[382] = ΔΔ[368];
    ΔΔ[455] = ΔΔ[407];
    ΔΔ[597] = ΔΔ[596];
    ΔΔ[453] = ΔΔ[426];
    ΔΔ[380] = ΔΔ[408];
    ΔΔ[381] = ΔΔ[409];
    ΔΔ[454] = ΔΔ[427];
    ΔΔ[379] = ΔΔ[387];
    ΔΔ[469] = ΔΔ[421];
    ΔΔ[465] = ΔΔ[440];
    ΔΔ[467] = ΔΔ[442];
    ΔΔ[466] = ΔΔ[441];
    ΔΔ[632] = ΔΔ[630];
    ΔΔ[460] = ΔΔ[428];
    ΔΔ[461] = ΔΔ[430];
    ΔΔ[385] = ΔΔ[411];
    ΔΔ[462] = ΔΔ[434];
    ΔΔ[464] = ΔΔ[416];
    ΔΔ[652] = ΔΔ[651];
    ΔΔ[463] = ΔΔ[414];
    ΔΔ[658] = ΔΔ[656];
    ΔΔ[672] = ΔΔ[670];
    ΔΔ[669] = ΔΔ[667];
    ΔΔ[660] = ΔΔ[659];
    ΔΔ[662] = ΔΔ[661];
    ΔΔ[730] = ΔΔ[728];
    ΔΔ[719] = ΔΔ[718];
    ΔΔ[468] = ΔΔ[446];
    ΔΔ[470] = ΔΔ[448];
    ΔΔ[450] = f47(function (p1042, p1043, p1044) {
      var v1403 = document.createElement("canvas");
      var v1404 = v1403.getContext("2d");
      v1403.width = p1042 * 118;
      v1403.height = p1042 * 129;
      v1404.save();
      v1404.translate(p1042 * 90, p1042 * 90);
      f87(v1404, p1042 * -86.5, p1042 * -86, p1042 * 110, p1042 * 110, p1042 * 15);
      v1404.restore();
      f90(v1404, p1044[0], p1044[1], 4);
      v1404.save();
      f87(v1404, p1042 * 30, p1042 * 115, p1042 * 60, p1042 * 5, p1042 * 15);
      v1404.restore();
      f90(v1404, p1044[2], p1044[3], 4);
      v1404.save();
      f87(v1404, p1042 * 50, p1042 * 117, p1042 * 20, p1042 * 10, p1042 * 15);
      v1404.restore();
      f90(v1404, p1044[2]);
      return v1403;
    }(0.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ΔΔ[477] = f119(0.5, [{
      f: f241,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#ffffff"]
    }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
    ΔΔ[493] = ΔΔ[472];
    ΔΔ[494] = ΔΔ[473];
    ΔΔ[495] = ΔΔ[475];
    ΔΔ[635] = ΔΔ[633];
    ΔΔ[496] = ΔΔ[503];
    ΔΔ[1023] = ΔΔ[280];
    ΔΔ[1024] = ΔΔ[281];
    ΔΔ[497] = ΔΔ[479];
    ΔΔ[844] = ΔΔ[843];
    ΔΔ[505] = ΔΔ[504];
    ΔΔ[1491] = ΔΔ[1490];
    ΔΔ[644] = ΔΔ[643];
    ΔΔ[498] = ΔΔ[480];
    ΔΔ[642] = ΔΔ[640];
    ΔΔ[499] = ΔΔ[483];
    ΔΔ[500] = ΔΔ[486];
    ΔΔ[501] = ΔΔ[489];
    ΔΔ[639] = ΔΔ[637];
    ΔΔ[502] = ΔΔ[492];
    ΔΔ[514] = ΔΔ[512];
    ΔΔ[508] = ΔΔ[506];
    ΔΔ[511] = ΔΔ[509];
    ΔΔ[517] = ΔΔ[515];
    ΔΔ[612] = ΔΔ[610];
    ΔΔ[1124] = ΔΔ[1123];
    ΔΔ[690] = ΔΔ[688];
    ΔΔ[959] = ΔΔ[958];
    ΔΔ[617] = ΔΔ[615];
    ΔΔ[620] = ΔΔ[618];
    ΔΔ[623] = ΔΔ[621];
    ΔΔ[626] = ΔΔ[624];
    ΔΔ[521] = ΔΔ[519];
    ΔΔ[968] = ΔΔ[966];
    ΔΔ[533] = ΔΔ[531];
    ΔΔ[542] = ΔΔ[540];
    ΔΔ[545] = ΔΔ[543];
    ΔΔ[548] = ΔΔ[546];
    ΔΔ[681] = ΔΔ[679];
    ΔΔ[982] = ΔΔ[981];
    ΔΔ[578] = ΔΔ[576];
    ΔΔ[581] = ΔΔ[579];
    ΔΔ[584] = ΔΔ[529];
    ΔΔ[825] = ΔΔ[824];
    ΔΔ[1093] = ΔΔ[1091];
    ΔΔ[902] = ΔΔ[904];
    ΔΔ[829] = ΔΔ[828];
    ΔΔ[908] = ΔΔ[236];
    ΔΔ[905] = ΔΔ[235];
    ΔΔ[901] = ΔΔ[233];
    ΔΔ[834] = ΔΔ[832];
    ΔΔ[833] = ΔΔ[831];
    ΔΔ[847] = ΔΔ[845];
    ΔΔ[849] = ΔΔ[848];
    ΔΔ[855] = ΔΔ[853];
    ΔΔ[1117] = ΔΔ[302];
    ΔΔ[1116] = ΔΔ[1115];
    ΔΔ[867] = ΔΔ[865];
    ΔΔ[870] = ΔΔ[868];
    ΔΔ[872] = ΔΔ[871];
    ΔΔ[880] = ΔΔ[878];
    ΔΔ[1174] = ΔΔ[298];
    ΔΔ[882] = ΔΔ[881];
    ΔΔ[884] = ΔΔ[883];
    ΔΔ[894] = ΔΔ[893];
    ΔΔ[980] = ΔΔ[238];
    ΔΔ[1006] = ΔΔ[1005];
    ΔΔ[1008] = ΔΔ[278];
    ΔΔ[1010] = ΔΔ[1009];
    ΔΔ[1012] = ΔΔ[279];
    ΔΔ[1014] = ΔΔ[1013];
    ΔΔ[1015] = ΔΔ[277];
    ΔΔ[1018] = ΔΔ[1016];
    ΔΔ[1022] = ΔΔ[1020];
    ΔΔ[1027] = ΔΔ[1025];
    ΔΔ[1030] = ΔΔ[1028];
    ΔΔ[1036] = ΔΔ[283];
    ΔΔ[1035] = ΔΔ[282];
    ΔΔ[1039] = ΔΔ[1038];
    ΔΔ[1050] = ΔΔ[1049];
    ΔΔ[1059] = ΔΔ[1057];
    ΔΔ[1085] = ΔΔ[1083];
    ΔΔ[1096] = ΔΔ[1094];
    ΔΔ[1077] = ΔΔ[1075];
    ΔΔ[1722] = [];
    ΔΔ[1722][0] = ⵠᐃ.ⵠⲆᐃᐃⲆ;
    ΔΔ[1722][1] = ⵠᐃ.ⵠⲆᐃᐃⲆ;
    ΔΔ[1722][2] = ⵠᐃ.ⵠⲆᐃᐃⲆ;
    ΔΔ[1721] = ΔΔ[1722];
    ΔΔ[1724] = [];
    ΔΔ[1724][0] = ⵠᐃ.ΔΔⲆΔᐃ;
    ΔΔ[1724][1] = ⵠᐃ.ΔΔⲆΔᐃ;
    ΔΔ[1724][2] = ⵠᐃ.ΔΔⲆΔᐃ;
    ΔΔ[1723] = ΔΔ[1724];
    ΔΔ[1726] = [];
    ΔΔ[1726][0] = ⵠᐃ.ⵠⵠⲆᐃⵠ;
    ΔΔ[1726][1] = ⵠᐃ.ⵠⵠⲆᐃⵠ;
    ΔΔ[1726][2] = ⵠᐃ.ⵠⵠⲆᐃⵠ;
    ΔΔ[1725] = ΔΔ[1726];
    ΔΔ[1728] = [];
    ΔΔ[1728][0] = ⵠᐃ.ᐃⲆⵠᐃΔ;
    ΔΔ[1728][1] = ⵠᐃ.ᐃⲆⵠᐃΔ;
    ΔΔ[1728][2] = ⵠᐃ.ᐃⲆⵠᐃΔ;
    ΔΔ[1727] = ΔΔ[1728];
    ΔΔ[1730] = [];
    ΔΔ[1730][0] = ⵠᐃ.ⲆΔⵠΔΔ;
    ΔΔ[1730][1] = ⵠᐃ.ⲆΔⵠΔΔ;
    ΔΔ[1730][2] = ⵠᐃ.ⲆΔⵠΔΔ;
    ΔΔ[1729] = ΔΔ[1730];
    ΔΔ[1732] = [];
    ΔΔ[1732][0] = ⵠᐃ.ⵠᐃⵠⲆΔ;
    ΔΔ[1732][1] = ⵠᐃ.ⵠᐃⵠⲆΔ;
    ΔΔ[1732][2] = ⵠᐃ.ⵠᐃⵠⲆΔ;
    ΔΔ[1731] = ΔΔ[1732];
    ΔΔ[1736] = [];
    ΔΔ[1736][0] = ⵠᐃ.ⵠᐃΔΔᐃ;
    ΔΔ[1736][1] = ⵠᐃ.ⵠᐃΔΔᐃ;
    ΔΔ[1736][2] = ⵠᐃ.ⵠᐃΔΔᐃ;
    ΔΔ[1735] = ΔΔ[1736];
    ΔΔ[1734] = [];
    ΔΔ[1734][0] = ⵠᐃ.ⵠⲆᐃΔΔ;
    ΔΔ[1734][1] = ⵠᐃ.ⵠⲆᐃΔΔ;
    ΔΔ[1734][2] = ⵠᐃ.ⵠⲆᐃΔΔ;
    ΔΔ[1733] = ΔΔ[1734];
    ΔΔ[1738] = [];
    ΔΔ[1738][0] = ⵠᐃ.ⵠⵠⲆⲆᐃⲆΔ;
    ΔΔ[1738][1] = ⵠᐃ.ⵠⲆᐃⲆΔᐃΔ;
    ΔΔ[1738][2] = ⵠᐃ.ⲆⵠΔᐃⵠⲆⵠ;
    ΔΔ[1737] = ΔΔ[1738];
    ΔΔ[549] = [];
    ΔΔ[549][0] = ⵠᐃ.ᐃΔⲆⵠΔᐃⲆ;
    ΔΔ[549][1] = ⵠᐃ.ΔⵠᐃᐃΔⲆⲆ;
    ΔΔ[549][2] = ⵠᐃ.ⲆⲆᐃⲆᐃⲆⵠ;
    ΔΔ[550] = ΔΔ[549];
    ΔΔ[551] = ΔΔ[549];
    ΔΔ[552] = [];
    ΔΔ[552][0] = ⵠᐃ.ⲆΔᐃⲆΔᐃⲆ;
    ΔΔ[552][1] = ⵠᐃ.ᐃΔⵠΔΔΔⲆ;
    ΔΔ[552][2] = ⵠᐃ.ⵠⲆΔᐃΔⵠᐃ;
    ΔΔ[553] = ΔΔ[552];
    ΔΔ[554] = ΔΔ[552];
    ΔΔ[555] = [];
    ΔΔ[555][0] = ⵠᐃ.ΔⵠΔᐃΔⲆⲆ;
    ΔΔ[555][1] = ⵠᐃ.ⲆⲆΔΔᐃⲆᐃ;
    ΔΔ[555][2] = ⵠᐃ.ᐃᐃⲆⲆⲆΔᐃ;
    ΔΔ[556] = ΔΔ[555];
    ΔΔ[557] = ΔΔ[555];
    ΔΔ[558] = [];
    ΔΔ[558][0] = ⵠᐃ.ⵠΔΔⵠⵠΔⵠ;
    ΔΔ[558][1] = ⵠᐃ.ᐃⲆΔⵠⵠⵠᐃ;
    ΔΔ[558][2] = ⵠᐃ.ΔΔᐃᐃΔⵠⲆ;
    ΔΔ[559] = ΔΔ[558];
    ΔΔ[560] = ΔΔ[558];
    ΔΔ[561] = [];
    ΔΔ[561][0] = ⵠᐃ.ΔⲆᐃⲆΔᐃⲆ;
    ΔΔ[561][1] = ⵠᐃ.ᐃⲆⲆΔⵠⵠᐃ;
    ΔΔ[561][2] = ⵠᐃ.ⵠⵠⵠⵠΔᐃⵠ;
    ΔΔ[562] = ΔΔ[561];
    ΔΔ[563] = ΔΔ[561];
    ΔΔ[564] = [];
    ΔΔ[564][0] = ⵠᐃ.ᐃⵠⵠⲆᐃⵠᐃ;
    ΔΔ[564][1] = ⵠᐃ.ΔᐃⲆⲆⵠΔⲆ;
    ΔΔ[564][2] = ⵠᐃ.ⲆΔᐃⵠΔᐃᐃ;
    ΔΔ[565] = ΔΔ[564];
    ΔΔ[566] = ΔΔ[564];
    ΔΔ[567] = [];
    ΔΔ[567][0] = ⵠᐃ.ΔⵠⵠᐃⵠΔᐃ;
    ΔΔ[567][1] = ⵠᐃ.ΔⵠΔΔᐃⵠᐃ;
    ΔΔ[567][2] = ⵠᐃ.ⲆΔⵠⵠⲆⵠⲆ;
    ΔΔ[568] = ΔΔ[567];
    ΔΔ[569] = ΔΔ[567];
    ΔΔ[570] = [];
    ΔΔ[570][0] = ⵠᐃ.ⵠⲆⲆᐃΔΔΔ;
    ΔΔ[570][1] = ⵠᐃ.ⵠⲆⵠΔⵠΔΔ;
    ΔΔ[570][2] = ⵠᐃ.ⵠΔΔΔⲆⲆΔ;
    ΔΔ[571] = ΔΔ[570];
    ΔΔ[572] = ΔΔ[570];
    ΔΔ[573] = [];
    ΔΔ[573][0] = ⵠᐃ.ΔⵠⵠΔᐃᐃⵠ;
    ΔΔ[573][1] = ⵠᐃ.ΔΔⲆⲆΔⵠΔ;
    ΔΔ[573][2] = ⵠᐃ.ΔΔⵠΔⲆⵠⵠ;
    ΔΔ[574] = ΔΔ[573];
    ΔΔ[575] = ΔΔ[573];
    ΔΔ[1296] = [];
    ΔΔ[1296][0] = ⵠᐃ.ΔⲆⲆⲆᐃΔΔ;
    ΔΔ[1296][1] = ⵠᐃ.ⵠⵠⲆⵠΔⲆᐃ;
    ΔΔ[1296][2] = ⵠᐃ.ΔΔΔⲆⵠⲆΔ;
    ΔΔ[1298] = ΔΔ[1296];
    ΔΔ[1297] = ΔΔ[1296];
    ΔΔ[1299] = [];
    ΔΔ[1299][0] = ⵠᐃ.ⵠⲆⵠⵠᐃΔΔ;
    ΔΔ[1299][1] = ⵠᐃ.ᐃⲆⵠᐃΔᐃⲆ;
    ΔΔ[1299][2] = ⵠᐃ.ⲆⵠⵠΔⲆΔΔ;
    ΔΔ[1301] = ΔΔ[1299];
    ΔΔ[1300] = ΔΔ[1299];
    ΔΔ[1302] = [];
    ΔΔ[1302][0] = ⵠᐃ.ⵠⲆΔΔᐃⵠᐃ;
    ΔΔ[1302][1] = ⵠᐃ.ⲆΔⵠⵠⲆⵠⵠ;
    ΔΔ[1302][2] = ⵠᐃ.ΔΔᐃⵠⵠⵠⲆ;
    ΔΔ[1304] = ΔΔ[1302];
    ΔΔ[1303] = ΔΔ[1302];
    ΔΔ[1305] = [];
    ΔΔ[1305][0] = ⵠᐃ.ⵠΔᐃⲆΔΔⲆ;
    ΔΔ[1305][1] = ⵠᐃ.ΔⲆⲆⵠᐃⵠⵠ;
    ΔΔ[1305][2] = ⵠᐃ.ᐃᐃⲆᐃⵠΔⵠ;
    ΔΔ[1307] = ΔΔ[1305];
    ΔΔ[1306] = ΔΔ[1305];
    ΔΔ[1308] = [];
    ΔΔ[1308][0] = ⵠᐃ.ΔΔΔΔᐃⲆᐃ;
    ΔΔ[1308][1] = ⵠᐃ.ᐃⵠⵠⵠΔⲆΔ;
    ΔΔ[1308][2] = ⵠᐃ.ⵠⵠΔΔⲆⲆⲆ;
    ΔΔ[1310] = ΔΔ[1308];
    ΔΔ[1309] = ΔΔ[1308];
    ΔΔ[1311] = [];
    ΔΔ[1311][0] = ⵠᐃ.ⲆⲆⲆⲆⲆⲆⲆ;
    ΔΔ[1311][1] = ⵠᐃ.ⲆⲆⲆⲆΔⲆⲆ;
    ΔΔ[1311][2] = ⵠᐃ.ᐃⵠⲆᐃΔᐃᐃ;
    ΔΔ[1313] = ΔΔ[1311];
    ΔΔ[1312] = ΔΔ[1311];
    ΔΔ[1314] = [];
    ΔΔ[1314][0] = ⵠᐃ.ΔΔⲆᐃᐃΔΔ;
    ΔΔ[1314][1] = ⵠᐃ.ⵠΔΔⵠⲆⵠⵠ;
    ΔΔ[1314][2] = ⵠᐃ.ⵠΔⲆⵠΔⲆⲆ;
    ΔΔ[1316] = ΔΔ[1314];
    ΔΔ[1315] = ΔΔ[1314];
    ΔΔ[1317] = [];
    ΔΔ[1317][0] = ⵠᐃ.ⲆᐃⲆⲆⵠΔⵠ;
    ΔΔ[1317][1] = ⵠᐃ.ΔⵠⲆⲆᐃⲆᐃ;
    ΔΔ[1317][2] = ⵠᐃ.ⲆΔΔⲆΔⵠⲆ;
    ΔΔ[1319] = ΔΔ[1317];
    ΔΔ[1318] = ΔΔ[1317];
    ΔΔ[1320] = [];
    ΔΔ[1320][0] = ⵠᐃ.ⵠᐃⲆᐃᐃᐃᐃ;
    ΔΔ[1320][1] = ⵠᐃ.ⵠⲆⵠΔᐃᐃⲆ;
    ΔΔ[1320][2] = ⵠᐃ.ⲆⲆᐃⲆᐃⵠᐃ;
    ΔΔ[1322] = ΔΔ[1320];
    ΔΔ[1321] = ΔΔ[1320];
    ΔΔ[691] = [];
    ΔΔ[691][0] = ⵠᐃ.ⲆΔΔΔⲆⲆᐃ;
    ΔΔ[691][1] = ⵠᐃ.ⲆΔⲆᐃΔⲆⲆ;
    ΔΔ[691][2] = ⵠᐃ.ⵠⵠΔⵠΔⵠᐃ;
    ΔΔ[692] = ΔΔ[691];
    ΔΔ[693] = ΔΔ[691];
    ΔΔ[694] = [];
    ΔΔ[694][0] = ⵠᐃ.ⵠᐃΔⵠᐃⲆⵠ;
    ΔΔ[694][1] = ⵠᐃ.ᐃⵠⲆⵠⲆᐃⵠ;
    ΔΔ[694][2] = ⵠᐃ.ⵠⲆⵠⵠᐃⲆⵠ;
    ΔΔ[695] = ΔΔ[694];
    ΔΔ[696] = ΔΔ[694];
    ΔΔ[697] = [];
    ΔΔ[697][0] = ⵠᐃ.ᐃⵠⵠᐃΔⵠⵠ;
    ΔΔ[697][1] = ⵠᐃ.ⲆⵠⵠⵠⵠⲆⲆ;
    ΔΔ[697][2] = ⵠᐃ.ⵠΔᐃᐃᐃⵠⵠ;
    ΔΔ[698] = ΔΔ[697];
    ΔΔ[699] = ΔΔ[697];
    ΔΔ[700] = [];
    ΔΔ[700][0] = ⵠᐃ.ᐃⵠᐃⵠᐃᐃⵠ;
    ΔΔ[700][1] = ⵠᐃ.ⲆᐃⲆΔᐃⵠᐃ;
    ΔΔ[700][2] = ⵠᐃ.ⲆⵠⲆΔⲆⵠⵠ;
    ΔΔ[701] = ΔΔ[700];
    ΔΔ[702] = ΔΔ[700];
    ΔΔ[703] = [];
    ΔΔ[703][0] = ⵠᐃ.ⵠⵠⲆⵠⵠΔΔ;
    ΔΔ[703][1] = ⵠᐃ.ΔⵠΔᐃⵠⲆᐃ;
    ΔΔ[703][2] = ⵠᐃ.ᐃⵠⵠⲆᐃⲆΔ;
    ΔΔ[704] = ΔΔ[703];
    ΔΔ[705] = ΔΔ[703];
    ΔΔ[706] = [];
    ΔΔ[706][0] = ⵠᐃ.ᐃⵠⵠⲆⲆᐃⲆ;
    ΔΔ[706][1] = ⵠᐃ.ⵠᐃᐃΔⲆⵠⲆ;
    ΔΔ[706][2] = ⵠᐃ.ⲆⵠⲆᐃⵠᐃᐃ;
    ΔΔ[707] = ΔΔ[706];
    ΔΔ[708] = ΔΔ[706];
    ΔΔ[709] = [];
    ΔΔ[709][0] = ⵠᐃ.ⲆΔⲆⲆᐃᐃᐃ;
    ΔΔ[709][1] = ⵠᐃ.ᐃⲆᐃΔⲆᐃᐃ;
    ΔΔ[709][2] = ⵠᐃ.ⲆΔⵠΔᐃᐃΔ;
    ΔΔ[710] = ΔΔ[709];
    ΔΔ[711] = ΔΔ[709];
    ΔΔ[712] = [];
    ΔΔ[712][0] = ⵠᐃ.ᐃⵠᐃΔΔΔⵠ;
    ΔΔ[712][1] = ⵠᐃ.ⲆᐃⵠⵠⵠⲆⵠ;
    ΔΔ[712][2] = ⵠᐃ.ⵠⵠΔΔᐃⵠⵠ;
    ΔΔ[713] = ΔΔ[712];
    ΔΔ[714] = ΔΔ[712];
    ΔΔ[715] = [];
    ΔΔ[715][0] = ⵠᐃ.ΔᐃⲆⵠᐃⵠⲆ;
    ΔΔ[715][1] = ⵠᐃ.ⲆΔΔᐃᐃⵠⵠ;
    ΔΔ[715][2] = ⵠᐃ.ᐃⲆᐃⵠⲆⲆⵠ;
    ΔΔ[716] = ΔΔ[715];
    ΔΔ[717] = ΔΔ[715];
    ΔΔ[954] = [];
    ΔΔ[954][0] = ⵠᐃ.ΔᐃᐃⵠᐃⲆΔ;
    ΔΔ[954][1] = ⵠᐃ.ΔΔΔⲆᐃⵠΔ;
    ΔΔ[954][2] = ⵠᐃ.ΔᐃᐃⵠⲆᐃᐃ;
    ΔΔ[955] = ΔΔ[954];
    ΔΔ[956] = ΔΔ[954];
    ΔΔ[927] = [];
    ΔΔ[927][0] = ⵠᐃ.ᐃⵠᐃᐃΔΔΔ;
    ΔΔ[927][1] = ⵠᐃ.ⲆⲆⵠⵠᐃᐃⵠ;
    ΔΔ[927][2] = ⵠᐃ.ᐃⲆⵠᐃᐃΔΔ;
    ΔΔ[928] = ΔΔ[927];
    ΔΔ[929] = ΔΔ[927];
    ΔΔ[930] = [];
    ΔΔ[930][0] = ⵠᐃ.ΔⵠⲆⵠΔⵠⵠ;
    ΔΔ[930][1] = ⵠᐃ.ⲆΔᐃⲆᐃⵠⲆ;
    ΔΔ[930][2] = ⵠᐃ.ΔᐃΔⵠΔᐃⵠ;
    ΔΔ[931] = ΔΔ[930];
    ΔΔ[932] = ΔΔ[930];
    ΔΔ[933] = [];
    ΔΔ[933][0] = ⵠᐃ.ⵠᐃΔⵠⲆⲆᐃ;
    ΔΔ[933][1] = ⵠᐃ.ⲆⲆⵠΔⲆΔⲆ;
    ΔΔ[933][2] = ⵠᐃ.ᐃΔᐃⲆᐃᐃᐃ;
    ΔΔ[934] = ΔΔ[933];
    ΔΔ[935] = ΔΔ[933];
    ΔΔ[936] = [];
    ΔΔ[936][0] = ⵠᐃ.ⵠᐃᐃⲆΔᐃⲆ;
    ΔΔ[936][1] = ⵠᐃ.ⵠᐃⵠᐃᐃΔᐃ;
    ΔΔ[936][2] = ⵠᐃ.ΔᐃⵠᐃⲆⵠᐃ;
    ΔΔ[937] = ΔΔ[936];
    ΔΔ[938] = ΔΔ[936];
    ΔΔ[939] = [];
    ΔΔ[939][0] = ⵠᐃ.ⵠᐃⲆᐃΔᐃΔ;
    ΔΔ[939][1] = ⵠᐃ.ΔⵠᐃⵠⲆⲆⵠ;
    ΔΔ[939][2] = ⵠᐃ.ᐃⲆⵠΔᐃⲆⵠ;
    ΔΔ[940] = ΔΔ[939];
    ΔΔ[941] = ΔΔ[939];
    ΔΔ[942] = [];
    ΔΔ[942][0] = ⵠᐃ.ΔⲆΔΔᐃᐃⵠ;
    ΔΔ[942][1] = ⵠᐃ.ⵠᐃⵠᐃⲆⲆΔ;
    ΔΔ[942][2] = ⵠᐃ.ᐃⵠᐃⲆⲆⵠΔ;
    ΔΔ[943] = ΔΔ[942];
    ΔΔ[944] = ΔΔ[942];
    ΔΔ[945] = [];
    ΔΔ[945][0] = ⵠᐃ.ⲆᐃⲆⵠᐃⲆᐃ;
    ΔΔ[945][1] = ⵠᐃ.ᐃΔᐃⲆⲆⲆⲆ;
    ΔΔ[945][2] = ⵠᐃ.ᐃΔΔⵠᐃᐃⵠ;
    ΔΔ[946] = ΔΔ[945];
    ΔΔ[947] = ΔΔ[945];
    ΔΔ[948] = [];
    ΔΔ[948][0] = ⵠᐃ.ΔⵠᐃΔⵠΔΔ;
    ΔΔ[948][1] = ⵠᐃ.ΔⵠᐃⲆⵠΔⵠ;
    ΔΔ[948][2] = ⵠᐃ.ⲆⵠΔⵠΔᐃⲆ;
    ΔΔ[949] = ΔΔ[948];
    ΔΔ[950] = ΔΔ[948];
    ΔΔ[951] = [];
    ΔΔ[951][0] = ⵠᐃ.ΔΔΔᐃᐃΔⲆ;
    ΔΔ[951][1] = ⵠᐃ.ⲆⵠΔⵠⲆⲆⲆ;
    ΔΔ[951][2] = ⵠᐃ.ᐃΔΔᐃⵠⵠⲆ;
    ΔΔ[952] = ΔΔ[951];
    ΔΔ[953] = ΔΔ[951];
    ΔΔ[734] = [];
    ΔΔ[734][0] = ⵠᐃ.ⵠΔⵠΔⲆᐃⲆ;
    ΔΔ[734][1] = ⵠᐃ.ᐃΔⵠΔⵠⲆΔ;
    ΔΔ[734][2] = ⵠᐃ.ΔᐃΔΔⵠᐃΔ;
    ΔΔ[735] = ΔΔ[734];
    ΔΔ[736] = ΔΔ[734];
    ΔΔ[737] = [];
    ΔΔ[737][0] = ⵠᐃ.ᐃⵠΔᐃΔⵠⲆ;
    ΔΔ[737][1] = ⵠᐃ.ᐃΔⲆᐃᐃΔᐃ;
    ΔΔ[737][2] = ⵠᐃ.ᐃΔΔⵠⲆⲆⲆ;
    ΔΔ[738] = ΔΔ[737];
    ΔΔ[739] = ΔΔ[737];
    ΔΔ[740] = [];
    ΔΔ[740][0] = ⵠᐃ.ᐃᐃⵠᐃⲆⵠⵠ;
    ΔΔ[740][1] = ⵠᐃ.ΔΔᐃᐃᐃᐃᐃ;
    ΔΔ[740][2] = ⵠᐃ.ⲆΔᐃᐃⲆⵠⲆ;
    ΔΔ[741] = ΔΔ[740];
    ΔΔ[742] = ΔΔ[740];
    ΔΔ[743] = [];
    ΔΔ[743][0] = ⵠᐃ.ᐃΔΔΔⲆᐃⲆ;
    ΔΔ[743][1] = ⵠᐃ.ΔⲆⵠΔⵠⵠⵠ;
    ΔΔ[743][2] = ⵠᐃ.ΔᐃΔΔⲆⲆᐃ;
    ΔΔ[744] = ΔΔ[743];
    ΔΔ[745] = ΔΔ[743];
    ΔΔ[746] = [];
    ΔΔ[746][0] = ⵠᐃ.ⲆΔⲆΔΔΔⵠ;
    ΔΔ[746][1] = ⵠᐃ.ⵠⲆᐃᐃΔᐃᐃ;
    ΔΔ[746][2] = ⵠᐃ.ΔⲆᐃⲆⲆᐃΔ;
    ΔΔ[747] = ΔΔ[746];
    ΔΔ[748] = ΔΔ[746];
    ΔΔ[749] = [];
    ΔΔ[749][0] = ⵠᐃ.ΔⵠⵠΔᐃΔⲆ;
    ΔΔ[749][1] = ⵠᐃ.ᐃⲆⵠΔⲆⲆᐃ;
    ΔΔ[749][2] = ⵠᐃ.ⲆⵠΔΔⲆⵠᐃ;
    ΔΔ[750] = ΔΔ[749];
    ΔΔ[751] = ΔΔ[749];
    ΔΔ[752] = [];
    ΔΔ[752][0] = ⵠᐃ.ⲆᐃⲆᐃⲆᐃᐃ;
    ΔΔ[752][1] = ⵠᐃ.ΔΔⵠⵠᐃΔⵠ;
    ΔΔ[752][2] = ⵠᐃ.ⲆⲆⵠⲆΔⲆⲆ;
    ΔΔ[753] = ΔΔ[752];
    ΔΔ[754] = ΔΔ[752];
    ΔΔ[755] = [];
    ΔΔ[755][0] = ⵠᐃ.ⵠΔⵠⲆᐃⵠⲆ;
    ΔΔ[755][1] = ⵠᐃ.ⵠⲆΔⵠΔⲆΔ;
    ΔΔ[755][2] = ⵠᐃ.ᐃᐃΔΔΔΔΔ;
    ΔΔ[756] = ΔΔ[755];
    ΔΔ[757] = ΔΔ[755];
    ΔΔ[758] = [];
    ΔΔ[758][0] = ⵠᐃ.ᐃⲆΔⲆΔⵠⵠ;
    ΔΔ[758][1] = ⵠᐃ.ⵠᐃᐃⵠⲆⵠΔ;
    ΔΔ[758][2] = ⵠᐃ.ⲆⲆᐃⲆⲆᐃⲆ;
    ΔΔ[759] = ΔΔ[758];
    ΔΔ[760] = ΔΔ[758];
    ΔΔ[1129] = [];
    ΔΔ[1129][0] = ⵠᐃ.ⵠᐃᐃΔⲆⵠⵠ;
    ΔΔ[1129][1] = ⵠᐃ.ⵠⲆⵠΔᐃⵠᐃ;
    ΔΔ[1129][2] = ⵠᐃ.ⵠΔⲆⵠⵠΔⵠ;
    ΔΔ[1131] = ΔΔ[1129];
    ΔΔ[1130] = ΔΔ[1129];
    ΔΔ[1132] = [];
    ΔΔ[1132][0] = ⵠᐃ.ΔᐃᐃᐃᐃΔΔ;
    ΔΔ[1132][1] = ⵠᐃ.ⵠΔᐃⵠΔⵠⲆ;
    ΔΔ[1132][2] = ⵠᐃ.ΔΔⵠΔⵠᐃⲆ;
    ΔΔ[1134] = ΔΔ[1132];
    ΔΔ[1133] = ΔΔ[1132];
    ΔΔ[1135] = [];
    ΔΔ[1135][0] = ⵠᐃ.ΔΔΔⵠΔⵠᐃ;
    ΔΔ[1135][1] = ⵠᐃ.ⲆⲆΔᐃᐃⵠΔ;
    ΔΔ[1135][2] = ⵠᐃ.ΔΔΔⲆΔⵠⲆ;
    ΔΔ[1137] = ΔΔ[1135];
    ΔΔ[1136] = ΔΔ[1135];
    ΔΔ[1138] = [];
    ΔΔ[1138][0] = ⵠᐃ.ᐃⵠᐃΔⵠΔⲆ;
    ΔΔ[1138][1] = ⵠᐃ.ᐃΔᐃⲆⲆΔᐃ;
    ΔΔ[1138][2] = ⵠᐃ.ⲆᐃⵠⲆΔⲆⵠ;
    ΔΔ[1140] = ΔΔ[1138];
    ΔΔ[1139] = ΔΔ[1138];
    ΔΔ[1141] = [];
    ΔΔ[1141][0] = ⵠᐃ.ᐃᐃᐃΔⵠⲆᐃ;
    ΔΔ[1141][1] = ⵠᐃ.ⲆⲆᐃΔΔΔⲆ;
    ΔΔ[1141][2] = ⵠᐃ.ᐃⲆⵠΔⲆⵠᐃ;
    ΔΔ[1143] = ΔΔ[1141];
    ΔΔ[1142] = ΔΔ[1141];
    ΔΔ[1144] = [];
    ΔΔ[1144][0] = ⵠᐃ.ⲆᐃΔⲆⵠΔⵠ;
    ΔΔ[1144][1] = ⵠᐃ.Δⵠᐃⵠᐃᐃⵠ;
    ΔΔ[1144][2] = ⵠᐃ.ⵠⲆᐃᐃⲆⵠΔ;
    ΔΔ[1146] = ΔΔ[1144];
    ΔΔ[1145] = ΔΔ[1144];
    ΔΔ[1147] = [];
    ΔΔ[1147][0] = ⵠᐃ.ⲆΔⵠⵠΔⵠⵠ;
    ΔΔ[1147][1] = ⵠᐃ.ⲆⵠⲆⵠΔΔⵠ;
    ΔΔ[1147][2] = ⵠᐃ.ᐃᐃΔΔᐃᐃⵠ;
    ΔΔ[1149] = ΔΔ[1147];
    ΔΔ[1148] = ΔΔ[1147];
    ΔΔ[1150] = [];
    ΔΔ[1150][0] = ⵠᐃ.ⵠΔⵠΔΔᐃⵠ;
    ΔΔ[1150][1] = ⵠᐃ.ᐃᐃⲆᐃᐃᐃⵠ;
    ΔΔ[1150][2] = ⵠᐃ.ᐃᐃᐃⵠⵠΔΔ;
    ΔΔ[1152] = ΔΔ[1150];
    ΔΔ[1151] = ΔΔ[1150];
    ΔΔ[1153] = [];
    ΔΔ[1153][0] = ⵠᐃ.ⲆᐃⲆⲆⵠΔᐃ;
    ΔΔ[1153][1] = ⵠᐃ.ⲆⲆⵠΔΔΔΔ;
    ΔΔ[1153][2] = ⵠᐃ.ᐃΔΔᐃⲆᐃⲆ;
    ΔΔ[1155] = ΔΔ[1153];
    ΔΔ[1154] = ΔΔ[1153];
    ΔΔ[782] = [];
    ΔΔ[782][0] = ⵠᐃ.ⵠⲆⵠⵠⲆⲆⵠ;
    ΔΔ[782][1] = ⵠᐃ.ⵠⲆⲆⲆᐃᐃΔ;
    ΔΔ[782][2] = ⵠᐃ.ⲆⵠᐃΔⲆⲆΔ;
    ΔΔ[783] = ΔΔ[782];
    ΔΔ[784] = ΔΔ[782];
    ΔΔ[785] = [];
    ΔΔ[785][0] = ⵠᐃ.ΔᐃᐃⲆⲆⲆⵠ;
    ΔΔ[785][1] = ⵠᐃ.ΔⵠⲆΔⵠⲆΔ;
    ΔΔ[785][2] = ⵠᐃ.ΔⲆΔⲆⵠᐃΔ;
    ΔΔ[786] = ΔΔ[785];
    ΔΔ[787] = ΔΔ[785];
    ΔΔ[788] = [];
    ΔΔ[788][0] = ⵠᐃ.ΔⵠᐃⲆⲆΔⲆ;
    ΔΔ[788][1] = ⵠᐃ.ΔⵠᐃⲆΔᐃⲆ;
    ΔΔ[788][2] = ⵠᐃ.ΔⲆᐃⲆⵠᐃᐃ;
    ΔΔ[789] = ΔΔ[788];
    ΔΔ[790] = ΔΔ[788];
    ΔΔ[791] = [];
    ΔΔ[791][0] = ⵠᐃ.ⲆⵠⲆⲆᐃⵠᐃ;
    ΔΔ[791][1] = ⵠᐃ.ᐃⲆⲆΔⵠᐃΔ;
    ΔΔ[791][2] = ⵠᐃ.ΔΔΔΔᐃⵠⲆ;
    ΔΔ[792] = ΔΔ[791];
    ΔΔ[793] = ΔΔ[791];
    ΔΔ[794] = [];
    ΔΔ[794][0] = ⵠᐃ.ⲆⵠΔⵠⵠΔⵠ;
    ΔΔ[794][1] = ⵠᐃ.ΔⵠᐃⵠⵠⲆΔ;
    ΔΔ[794][2] = ⵠᐃ.ⵠⵠᐃⵠⲆⵠⵠ;
    ΔΔ[795] = ΔΔ[794];
    ΔΔ[796] = ΔΔ[794];
    ΔΔ[797] = [];
    ΔΔ[797][0] = ⵠᐃ.ⵠΔᐃΔᐃⲆⵠ;
    ΔΔ[797][1] = ⵠᐃ.ⵠⲆΔᐃᐃᐃΔ;
    ΔΔ[797][2] = ⵠᐃ.ΔⵠᐃⵠΔⵠⵠ;
    ΔΔ[798] = ΔΔ[797];
    ΔΔ[799] = ΔΔ[797];
    ΔΔ[800] = [];
    ΔΔ[800][0] = ⵠᐃ.ⵠⲆᐃΔΔᐃΔ;
    ΔΔ[800][1] = ⵠᐃ.ⲆᐃᐃΔⵠᐃᐃ;
    ΔΔ[800][2] = ⵠᐃ.ⲆⲆΔΔΔⲆΔ;
    ΔΔ[801] = ΔΔ[800];
    ΔΔ[802] = ΔΔ[800];
    ΔΔ[803] = [];
    ΔΔ[803][0] = ⵠᐃ.ΔᐃᐃᐃⲆⵠⲆ;
    ΔΔ[803][1] = ⵠᐃ.ΔⵠⲆⲆΔΔΔ;
    ΔΔ[803][2] = ⵠᐃ.ΔⲆΔⲆⵠⵠᐃ;
    ΔΔ[804] = ΔΔ[803];
    ΔΔ[805] = ΔΔ[803];
    ΔΔ[806] = [];
    ΔΔ[806][0] = ⵠᐃ.ⲆⲆⲆⵠⵠⵠⵠ;
    ΔΔ[806][1] = ⵠᐃ.Δⵠᐃᐃⵠⵠⵠ;
    ΔΔ[806][2] = ⵠᐃ.ⵠᐃⲆⵠᐃΔⵠ;
    ΔΔ[807] = ΔΔ[806];
    ΔΔ[808] = ΔΔ[806];
    ΔΔ[1515] = [];
    ΔΔ[1515][0] = ⵠᐃ.ⵠⲆⲆᐃⵠᐃΔ;
    ΔΔ[1515][1] = ⵠᐃ.ⲆΔΔⵠᐃⲆΔ;
    ΔΔ[1515][2] = ⵠᐃ.ⵠΔⲆⲆⵠⵠᐃ;
    ΔΔ[1517] = ΔΔ[1515];
    ΔΔ[1516] = ΔΔ[1515];
    ΔΔ[1518] = [];
    ΔΔ[1518][0] = ⵠᐃ.ᐃΔΔᐃᐃΔⲆ;
    ΔΔ[1518][1] = ⵠᐃ.ⵠⲆΔⵠⲆᐃΔ;
    ΔΔ[1518][2] = ⵠᐃ.ⵠᐃⵠⵠᐃⲆⲆ;
    ΔΔ[1520] = ΔΔ[1518];
    ΔΔ[1519] = ΔΔ[1518];
    ΔΔ[1521] = [];
    ΔΔ[1521][0] = ⵠᐃ.ⲆⲆⵠᐃΔⵠⵠ;
    ΔΔ[1521][1] = ⵠᐃ.ⵠⵠᐃⵠⵠⵠΔ;
    ΔΔ[1521][2] = ⵠᐃ.ΔⵠᐃⲆΔⵠⵠ;
    ΔΔ[1523] = ΔΔ[1521];
    ΔΔ[1522] = ΔΔ[1521];
    ΔΔ[1524] = [];
    ΔΔ[1524][0] = ⵠᐃ.ⲆΔΔⵠⵠⲆᐃ;
    ΔΔ[1524][1] = ⵠᐃ.ⵠⵠΔⵠΔΔΔ;
    ΔΔ[1524][2] = ⵠᐃ.ⲆⲆⲆᐃⵠΔⵠ;
    ΔΔ[1526] = ΔΔ[1524];
    ΔΔ[1525] = ΔΔ[1524];
    ΔΔ[1527] = [];
    ΔΔ[1527][0] = ⵠᐃ.ⲆᐃᐃΔΔᐃΔ;
    ΔΔ[1527][1] = ⵠᐃ.ⲆᐃᐃⵠᐃΔΔ;
    ΔΔ[1527][2] = ⵠᐃ.ⲆᐃᐃΔⲆⲆᐃ;
    ΔΔ[1529] = ΔΔ[1527];
    ΔΔ[1528] = ΔΔ[1527];
    ΔΔ[1530] = [];
    ΔΔ[1530][0] = ⵠᐃ.ᐃΔⲆⵠΔⵠᐃ;
    ΔΔ[1530][1] = ⵠᐃ.ΔⵠΔᐃᐃⲆᐃ;
    ΔΔ[1530][2] = ⵠᐃ.ⲆΔΔⲆⵠⲆᐃ;
    ΔΔ[1532] = ΔΔ[1530];
    ΔΔ[1531] = ΔΔ[1530];
    ΔΔ[1533] = [];
    ΔΔ[1533][0] = ⵠᐃ.ⲆΔⵠⲆᐃᐃᐃ;
    ΔΔ[1533][1] = ⵠᐃ.ⲆΔΔᐃⲆᐃΔ;
    ΔΔ[1533][2] = ⵠᐃ.ⲆᐃⲆᐃᐃⵠⵠ;
    ΔΔ[1535] = ΔΔ[1533];
    ΔΔ[1534] = ΔΔ[1533];
    ΔΔ[1536] = [];
    ΔΔ[1536][0] = ⵠᐃ.ᐃⵠΔⵠⲆⵠⵠ;
    ΔΔ[1536][1] = ⵠᐃ.ᐃΔⲆⲆⵠᐃᐃ;
    ΔΔ[1536][2] = ⵠᐃ.ⵠⲆᐃΔΔⵠᐃ;
    ΔΔ[1538] = ΔΔ[1536];
    ΔΔ[1537] = ΔΔ[1536];
    ΔΔ[1539] = [];
    ΔΔ[1539][0] = ⵠᐃ.ⲆⵠᐃⲆᐃⵠⵠ;
    ΔΔ[1539][1] = ⵠᐃ.ⲆΔⲆᐃᐃⲆΔ;
    ΔΔ[1539][2] = ⵠᐃ.ΔΔΔΔΔΔⲆ;
    ΔΔ[1541] = ΔΔ[1539];
    ΔΔ[1540] = ΔΔ[1539];
    ΔΔ[1648] = [];
    ΔΔ[1648][0] = ⵠᐃ.ᐃᐃⵠⵠΔⵠᐃⵠⲆ;
    ΔΔ[1648][1] = ⵠᐃ.ⵠⲆⵠⵠΔⵠᐃᐃΔ;
    ΔΔ[1648][2] = ⵠᐃ.ⵠΔΔⵠⲆΔᐃⲆⵠ;
    ΔΔ[1647] = ΔΔ[1648];
    ΔΔ[1649] = ΔΔ[1648];
    ΔΔ[1651] = [];
    ΔΔ[1651][0] = ⵠᐃ.ⲆΔⵠⲆⲆΔⲆᐃⲆ;
    ΔΔ[1651][1] = ⵠᐃ.ⵠΔΔⵠⲆⲆᐃᐃⲆ;
    ΔΔ[1651][2] = ⵠᐃ.ⵠᐃᐃΔᐃⲆᐃⵠΔ;
    ΔΔ[1650] = ΔΔ[1651];
    ΔΔ[1652] = ΔΔ[1651];
    ΔΔ[1654] = [];
    ΔΔ[1654][0] = ⵠᐃ.ⵠΔΔⵠᐃⵠΔΔᐃ;
    ΔΔ[1654][1] = ⵠᐃ.ⲆⲆᐃⵠⲆⵠΔᐃⲆ;
    ΔΔ[1654][2] = ⵠᐃ.ⲆⲆⲆⵠΔⵠⲆᐃⵠ;
    ΔΔ[1653] = ΔΔ[1654];
    ΔΔ[1655] = ΔΔ[1654];
    ΔΔ[1657] = [];
    ΔΔ[1657][0] = ⵠᐃ.ⲆΔΔᐃΔΔⵠⲆⲆ;
    ΔΔ[1657][1] = ⵠᐃ.ΔⲆΔⵠⵠⲆΔⵠⵠ;
    ΔΔ[1657][2] = ⵠᐃ.ΔⵠΔᐃⵠⵠⲆⵠᐃ;
    ΔΔ[1656] = ΔΔ[1657];
    ΔΔ[1658] = ΔΔ[1657];
    ΔΔ[1660] = [];
    ΔΔ[1660][0] = ⵠᐃ.ᐃᐃⵠⲆⵠΔΔᐃᐃ;
    ΔΔ[1660][1] = ⵠᐃ.ⵠⲆᐃᐃⲆⵠΔΔⲆ;
    ΔΔ[1660][2] = ⵠᐃ.ᐃⲆΔΔⵠΔⲆΔⲆ;
    ΔΔ[1659] = ΔΔ[1660];
    ΔΔ[1661] = ΔΔ[1660];
    ΔΔ[1663] = [];
    ΔΔ[1663][0] = ⵠᐃ.ⵠΔΔᐃⲆⵠᐃᐃⲆ;
    ΔΔ[1663][1] = ⵠᐃ.ΔⵠⵠΔᐃΔⵠⲆⵠ;
    ΔΔ[1663][2] = ⵠᐃ.ⵠᐃⲆⲆⵠΔΔΔⵠ;
    ΔΔ[1662] = ΔΔ[1663];
    ΔΔ[1664] = ΔΔ[1663];
    ΔΔ[1666] = [];
    ΔΔ[1666][0] = ⵠᐃ.ᐃⲆΔΔⵠᐃᐃⵠⲆ;
    ΔΔ[1666][1] = ⵠᐃ.ᐃⵠᐃⵠΔⵠⲆⲆⵠ;
    ΔΔ[1666][2] = ⵠᐃ.ΔᐃᐃᐃⵠⲆᐃⵠⲆ;
    ΔΔ[1665] = ΔΔ[1666];
    ΔΔ[1667] = ΔΔ[1666];
    ΔΔ[1669] = [];
    ΔΔ[1669][0] = ⵠᐃ.ⵠΔⵠⲆᐃᐃⵠᐃΔ;
    ΔΔ[1669][1] = ⵠᐃ.ᐃⲆⲆᐃⵠᐃΔⵠⵠ;
    ΔΔ[1669][2] = ⵠᐃ.ⲆᐃⵠⵠⲆΔΔᐃⲆ;
    ΔΔ[1668] = ΔΔ[1669];
    ΔΔ[1670] = ΔΔ[1669];
    ΔΔ[1672] = [];
    ΔΔ[1672][0] = ⵠᐃ.ⵠⵠΔᐃⲆⵠⲆⲆⵠ;
    ΔΔ[1672][1] = ⵠᐃ.ⲆΔᐃΔΔⵠⵠᐃⲆ;
    ΔΔ[1672][2] = ⵠᐃ.ᐃⲆⲆⲆᐃΔⵠⲆⵠ;
    ΔΔ[1671] = ΔΔ[1672];
    ΔΔ[1673] = ΔΔ[1672];
  }
  function f252(p1045, p1046) {
    var v1405 = document.createElement("canvas");
    var v1406 = v1405.getContext("2d");
    v1405.width = p1045 * 100;
    v1405.height = p1045 * 100;
    v1406.globalAlpha = 0.5;
    v1406.fillStyle = p1046[0];
    v1406.fillRect(0, 0, v1405.width, v1405.height);
    return v1405;
  }
  function f253(p1047, p1048, p1049) {
    var v1407 = document.createElement("canvas");
    var v1408 = v1407.getContext("2d");
    v1407.width = p1047 * 137;
    v1407.height = p1047 * 129;
    v1408.globalAlpha = 0.5;
    f93(v1408, p1047 * 69, p1047 * 64, p1047 * 48.16637831516918);
    f90(v1408, p1049[1]);
    v1408.globalAlpha = 0.7;
    f93(v1408, p1047 * 69, p1047 * 64, p1047 * 38.23105625617661);
    f90(v1408, p1049[2]);
    v1408.globalAlpha = 0.7;
    f93(v1408, p1047 * 69, p1047 * 64, p1047 * 32.01562118716424);
    f90(v1408, p1049[2], p1049[3], p1047 * 4);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1047 * 72, p1047 * 41);
    v1408.bezierCurveTo(p1047 * 52, p1047 * 41, p1047 * 48, p1047 * 50, p1047 * 45, p1047 * 58);
    v1408.bezierCurveTo(p1047 * 43, p1047 * 67, p1047 * 45, p1047 * 68, p1047 * 46, p1047 * 72);
    v1408.bezierCurveTo(p1047 * 52, p1047 * 53, p1047 * 60, p1047 * 48, p1047 * 72, p1047 * 42);
    v1408.closePath();
    f90(v1408, p1049[3]);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1047 * 93, p1047 * 62);
    v1408.bezierCurveTo(p1047 * 95, p1047 * 72, p1047 * 90, p1047 * 81, p1047 * 81, p1047 * 87);
    v1408.bezierCurveTo(p1047 * 74, p1047 * 91, p1047 * 69, p1047 * 89, p1047 * 64, p1047 * 88);
    v1408.bezierCurveTo(p1047 * 77, p1047 * 83, p1047 * 84, p1047 * 82, p1047 * 92, p1047 * 62);
    v1408.closePath();
    f90(v1408, p1049[3]);
    return v1407;
  }
  function f254(p1050, p1051, p1052) {
    var v1409 = document.createElement("canvas");
    var v1410 = v1409.getContext("2d");
    v1409.width = p1050 * 573;
    v1409.height = p1050 * 350;
    if (p1052 == 1) {
      v1410.beginPath();
      v1410.lineCap = "round";
      v1410.lineJoin = "round";
      v1410.moveTo(p1050 * 336, p1050 * 72);
      v1410.bezierCurveTo(p1050 * 366, p1050 * 15, p1050 * 426, p1050 * 36, p1050 * 497, p1050 * 83);
      v1410.bezierCurveTo(p1050 * 522, p1050 * 85, p1050 * 522, p1050 * 85, p1050 * 547, p1050 * 87);
      v1410.bezierCurveTo(p1050 * 476.5, p1050 * 205, p1050 * 476.5, p1050 * 205, p1050 * 406, p1050 * 323);
      v1410.bezierCurveTo(p1050 * 297.5, p1050 * 319, p1050 * 297.5, p1050 * 319, p1050 * 189, p1050 * 315);
      v1410.bezierCurveTo(p1050 * 105.5, p1050 * 279, p1050 * 105.5, p1050 * 279, p1050 * 22, p1050 * 243);
      v1410.bezierCurveTo(p1050 * 92, p1050 * 140, p1050 * 92, p1050 * 140, p1050 * 162, p1050 * 37);
      v1410.bezierCurveTo(p1050 * 173, p1050 * 39, p1050 * 173, p1050 * 39, p1050 * 184, p1050 * 41);
      v1410.bezierCurveTo(p1050 * 185, p1050 * 38.5, p1050 * 185, p1050 * 38.5, p1050 * 186, p1050 * 36);
      v1410.bezierCurveTo(p1050 * 323, p1050 * 13, p1050 * 322, p1050 * 25, p1050 * 337, p1050 * 74);
      v1410.closePath();
      f90(v1410, p1051[4], p1051[4], p1050 * 35);
    }
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 168, p1050 * 42);
    v1410.bezierCurveTo(p1050 * 255, p1050 * 60, p1050 * 255, p1050 * 60, p1050 * 342, p1050 * 78);
    v1410.bezierCurveTo(p1050 * 443, p1050 * 81.5, p1050 * 443, p1050 * 81.5, p1050 * 544, p1050 * 85);
    v1410.bezierCurveTo(p1050 * 475, p1050 * 204.5, p1050 * 475, p1050 * 204.5, p1050 * 406, p1050 * 324);
    v1410.bezierCurveTo(p1050 * 297.5, p1050 * 320, p1050 * 297.5, p1050 * 320, p1050 * 189, p1050 * 316);
    v1410.bezierCurveTo(p1050 * 105.5, p1050 * 279, p1050 * 105.5, p1050 * 279, p1050 * 22, p1050 * 242);
    v1410.closePath();
    f90(v1410, p1051[0], p1051[1], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 188, p1050 * 41);
    v1410.bezierCurveTo(p1050 * 308, p1050 * 15, p1050 * 325, p1050 * 18, p1050 * 337, p1050 * 66);
    v1410.bezierCurveTo(p1050 * 191, p1050 * 305, p1050 * 196, p1050 * 286, p1050 * 184, p1050 * 307);
    v1410.bezierCurveTo(p1050 * 175, p1050 * 250, p1050 * 90, p1050 * 254, p1050 * 52, p1050 * 241);
    v1410.closePath();
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 336, p1050 * 71);
    v1410.bezierCurveTo(p1050 * 375, p1050 * 8, p1050 * 429, p1050 * 50, p1050 * 518, p1050 * 92);
    v1410.bezierCurveTo(p1050 * 455, p1050 * 199.5, p1050 * 455, p1050 * 199.5, p1050 * 392, p1050 * 307);
    v1410.bezierCurveTo(p1050 * 227, p1050 * 301, p1050 * 261, p1050 * 255, p1050 * 188, p1050 * 308);
    v1410.closePath();
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 357, p1050 * 76);
    v1410.bezierCurveTo(p1050 * 390, p1050 * 67, p1050 * 414, p1050 * 86, p1050 * 435, p1050 * 104);
    v1410.bezierCurveTo(p1050 * 417, p1050 * 135, p1050 * 417, p1050 * 135, p1050 * 399, p1050 * 166);
    v1410.bezierCurveTo(p1050 * 352, p1050 * 140, p1050 * 345, p1050 * 139, p1050 * 319, p1050 * 142);
    v1410.closePath();
    f90(v1410, p1051[3], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 309, p1050 * 168);
    v1410.bezierCurveTo(p1050 * 345, p1050 * 163, p1050 * 372, p1050 * 180, p1050 * 412, p1050 * 203);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 263, p1050 * 54);
    v1410.bezierCurveTo(p1050 * 305, p1050 * 44, p1050 * 307, p1050 * 51, p1050 * 311, p1050 * 64);
    v1410.bezierCurveTo(p1050 * 270.5, p1050 * 129.5, p1050 * 270.5, p1050 * 129.5, p1050 * 230, p1050 * 195);
    v1410.bezierCurveTo(p1050 * 221, p1050 * 175, p1050 * 203, p1050 * 171, p1050 * 186, p1050 * 172);
    v1410.closePath();
    f90(v1410, p1051[3], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 292, p1050 * 198);
    v1410.bezierCurveTo(p1050 * 328, p1050 * 191, p1050 * 364, p1050 * 211, p1050 * 401, p1050 * 237);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 245, p1050 * 68);
    v1410.bezierCurveTo(p1050 * 210, p1050 * 72, p1050 * 210, p1050 * 72, p1050 * 189, p1050 * 69);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 222, p1050 * 96);
    v1410.bezierCurveTo(p1050 * 196, p1050 * 97, p1050 * 193, p1050 * 97, p1050 * 177, p1050 * 92);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 207, p1050 * 124);
    v1410.bezierCurveTo(p1050 * 179, p1050 * 123, p1050 * 177, p1050 * 124, p1050 * 161, p1050 * 119);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 115, p1050 * 183);
    v1410.bezierCurveTo(p1050 * 184, p1050 * 185, p1050 * 203, p1050 * 198, p1050 * 219, p1050 * 221);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 98, p1050 * 213);
    v1410.bezierCurveTo(p1050 * 161, p1050 * 214, p1050 * 193, p1050 * 227, p1050 * 201, p1050 * 249);
    f90(v1410, p1051[2], p1051[3], p1050 * 12);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1050 * 399, p1050 * 257);
    v1410.bezierCurveTo(p1050 * 287, p1050 * 215, p1050 * 280, p1050 * 215, p1050 * 263, p1050 * 222);
    v1410.bezierCurveTo(p1050 * 253, p1050 * 238, p1050 * 247, p1050 * 245, p1050 * 243, p1050 * 254);
    v1410.bezierCurveTo(p1050 * 267, p1050 * 236, p1050 * 292, p1050 * 263, p1050 * 377, p1050 * 284);
    f90(v1410, p1051[3], p1051[3], p1050 * 12);
    return v1409;
  }
  function f255(p1053, p1054, p1055) {
    var v1411 = document.createElement("canvas");
    var v1412 = v1411.getContext("2d");
    v1411.width = p1053 * 170;
    v1411.height = p1053 * 170;
    v1412.globalAlpha = p1054 ? 0.5 : 1;
    v1412.translate(0, p1053 * 5);
    v1412.save();
    v1412.translate(p1053 * 85, p1053 * 88);
    v1412.rotate(1.4);
    f88(v1412, 7, p1053 * 60, p1053 * 10);
    v1412.restore();
    f90(v1412, p1055[0]);
    v1412.globalAlpha = 1;
    v1412.translate(p1053 * 85, p1053 * 80);
    for (var v1413 = 0; v1413 < 10; v1413++) {
      v1412.rotate(Math.PI / 5);
      v1412.save();
      v1412.translate(p1053 * 65, 0);
      f88(v1412, 3, p1053 * 21, p1053 * 4);
      f90(v1412, p1055[1], p1055[2], p1053 * 4);
      v1412.restore();
    }
    v1412.save();
    v1412.translate(p1053 * 0, p1053 * 0);
    v1412.rotate(1.4);
    f88(v1412, 7, p1053 * 60, p1053 * 10);
    f90(v1412, p1055[3], p1055[4], p1053 * 4);
    v1412.rotate(0.64);
    f88(v1412, 7, p1053 * 40, p1053 * 10);
    f90(v1412, p1055[5], p1055[6], p1053 * 4);
    v1412.rotate(0.12);
    f88(v1412, 7, p1053 * 23, p1053 * 5);
    v1412.restore();
    f90(v1412, p1055[7]);
    return v1411;
  }
  function f256(p1056, p1057, p1058) {
    var v1414 = document.createElement("canvas");
    var v1415 = v1414.getContext("2d");
    v1414.width = p1056 * 163;
    v1414.height = p1056 * 163;
    v1415.save();
    v1415.translate(p1056 * 82.5, p1056 * 81.1015625);
    v1415.rotate(0);
    f87(v1415, p1056 * -65.5, p1056 * -66, p1056 * 131, p1056 * 131, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[1]);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 80, p1056 * 17.1015625);
    f87(v1415, p1056 * -64, p1056 * -4.5, p1056 * 129, p1056 * 9, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 80, p1056 * 17.1015625);
    f87(v1415, p1056 * -64, p1056 * -4.5, p1056 * 129, p1056 * 9, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 83.6015625);
    f87(v1415, p1056 * -4.5, p1056 * -61, p1056 * 9, p1056 * 129, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 83.6015625);
    f87(v1415, p1056 * -4.5, p1056 * -61, p1056 * 9, p1056 * 129, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 17.5, p1056 * 82.6015625);
    f87(v1415, p1056 * -4.5, p1056 * -65, p1056 * 9, p1056 * 129, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 17.5, p1056 * 82.6015625);
    f87(v1415, p1056 * -4.5, p1056 * -65, p1056 * 9, p1056 * 129, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 80.5, p1056 * 145.6015625);
    f87(v1415, p1056 * -65.5, p1056 * -4, p1056 * 129, p1056 * 9, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 80.5, p1056 * 145.6015625);
    f87(v1415, p1056 * -65.5, p1056 * -4, p1056 * 129, p1056 * 9, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 17, p1056 * 18.1015625);
    f87(v1415, p1056 * -11, p1056 * -11.5, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 17, p1056 * 18.1015625);
    f87(v1415, p1056 * -11, p1056 * -11.5, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 16.6015625);
    f87(v1415, p1056 * -10.5, p1056 * -11.5, p1056 * 21, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 16.6015625);
    f87(v1415, p1056 * -10.5, p1056 * -11.5, p1056 * 21, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 144.1015625);
    f87(v1415, p1056 * -10.5, p1056 * -11, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 145.5, p1056 * 144.1015625);
    f87(v1415, p1056 * -10.5, p1056 * -11, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    v1415.globalAlpha = p1057 ? 0.5 : 1;
    v1415.translate(p1056 * 5, p1056 * 5);
    v1415.save();
    v1415.translate(p1056 * 17.5, p1056 * 145.1015625);
    f87(v1415, p1056 * -11.5, p1056 * -12, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1056 * -5, p1056 * -5);
    v1415.save();
    v1415.translate(p1056 * 17.5, p1056 * 145.1015625);
    f87(v1415, p1056 * -11.5, p1056 * -12, p1056 * 22, p1056 * 22, p1056 * 5);
    v1415.restore();
    f90(v1415, p1058[2], p1058[3], p1056 * 3);
    return v1414;
  }
  function f257(p1059, p1060) {
    var v1416 = document.createElement("canvas");
    var v1417 = v1416.getContext("2d");
    v1416.width = p1059 * 120;
    v1416.height = p1059 * 280;
    v1417.translate(p1059 * -100, p1059 * -20);
    v1417.beginPath();
    v1417.lineCap = "round";
    v1417.lineJoin = "round";
    v1417.moveTo(p1059 * 228.5, p1059 * 331.953125);
    v1417.bezierCurveTo(p1059 * 228.5, p1059 * 12.953125, p1059 * 228.5, p1059 * 171.453125, p1059 * 228.5, p1059 * 10.953125);
    v1417.bezierCurveTo(p1059 * 196.5, p1059 * 76.953125, p1059 * 206.5, p1059 * 78.953125, p1059 * 191.5, p1059 * 114.953125);
    v1417.bezierCurveTo(p1059 * 162.5, p1059 * 170.953125, p1059 * 206.5, p1059 * 220.953125, p1059 * 210.5, p1059 * 251.953125);
    v1417.bezierCurveTo(p1059 * 218.5, p1059 * 287.953125, p1059 * 220.5, p1059 * 291.953125, p1059 * 228.5, p1059 * 331.953125);
    v1417.closePath();
    f90(v1417, p1060[0]);
    return v1416;
  }
  function f258(p1061, p1062, p1063) {
    var v1418 = document.createElement("canvas");
    var v1419 = v1418.getContext("2d");
    v1418.width = p1061 * 90;
    v1418.height = p1061 * 98;
    v1419.translate(0, p1061 * 4);
    if (v817 === 0) {
      v1419.globalAlpha = p1062 ? 0.5 : 1;
      v1419.save();
      v1419.translate(p1061 * 44, p1061 * 50);
      v1419.rotate(1.4);
      f88(v1419, 7, p1061 * 41, p1061 * 10);
      v1419.restore();
      f90(v1419, p1063[0]);
    }
    v1419.globalAlpha = 1;
    v1419.save();
    v1419.translate(p1061 * 44, p1061 * 44);
    v1419.rotate(1.4);
    f88(v1419, 7, p1061 * 41, p1061 * 10);
    f90(v1419, p1063[1], p1063[2], p1061 * 4);
    f88(v1419, 7, p1061 * 35, p1061 * 10);
    f90(v1419, p1063[3], p1063[4], p1061 * 4);
    f88(v1419, 7, p1061 * 23, p1061 * 5);
    v1419.restore();
    f90(v1419, p1063[5]);
    v1419.save();
    v1419.translate(p1061 * 45, p1061 * 45);
    v1419.rotate(0);
    f87(v1419, p1061 * -9, p1061 * -25.5, p1061 * 18, p1061 * 51, p1061 * 30);
    v1419.restore();
    f90(v1419, p1063[4], p1063[4], p1061 * 2);
    v1419.save();
    v1419.translate(p1061 * 45, p1061 * 45);
    v1419.rotate(0);
    f87(v1419, p1061 * -26, p1061 * -9, p1061 * 52, p1061 * 18, p1061 * 30);
    v1419.restore();
    f90(v1419, p1063[4], p1063[4], p1061 * 2);
    f93(v1419, p1061 * 45, p1061 * 29, p1061 * 7);
    f90(v1419, p1063[5]);
    f93(v1419, p1061 * 45, p1061 * 61, p1061 * 7);
    f90(v1419, p1063[5]);
    f93(v1419, p1061 * 28, p1061 * 45, p1061 * 7);
    f90(v1419, p1063[5]);
    f93(v1419, p1061 * 62, p1061 * 45, p1061 * 7);
    f90(v1419, p1063[5]);
    return v1418;
  }
  function f259(p1064, p1065, p1066) {
    var v1420 = document.createElement("canvas");
    var v1421 = v1420.getContext("2d");
    v1420.width = p1064 * 400;
    v1420.height = p1064 * 400;
    v1421.globalAlpha = 1;
    v1421.translate(p1064 * 20, p1064 * 20);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 36.5, p1064 * 278.0625);
    v1421.bezierCurveTo(p1064 * 67.5, p1064 * 316.0625, p1064 * 134.5, p1064 * 334.0625, p1064 * 199.5, p1064 * 319.0625);
    v1421.bezierCurveTo(p1064 * 254.5, p1064 * 304.0625, p1064 * 346.5, p1064 * 270.0625, p1064 * 348.5, p1064 * 237.0625);
    v1421.bezierCurveTo(p1064 * 359.5, p1064 * 206.0625, p1064 * 318.5, p1064 * 129.0625, p1064 * 262.5, p1064 * 122.0625);
    v1421.bezierCurveTo(p1064 * 213.5, p1064 * 115.0625, p1064 * 166.5, p1064 * 133.0625, p1064 * 104.5, p1064 * 166.0625);
    v1421.bezierCurveTo(p1064 * 54.5, p1064 * 194.0625, p1064 * 23.5, p1064 * 241.0625, p1064 * 36.5, p1064 * 277.0625);
    v1421.closePath();
    f90(v1421, p1066[0]);
    v1421.translate(p1064 * -20, p1064 * -20);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 36.5, p1064 * 278.0625);
    v1421.bezierCurveTo(p1064 * 67.5, p1064 * 316.0625, p1064 * 134.5, p1064 * 334.0625, p1064 * 199.5, p1064 * 319.0625);
    v1421.bezierCurveTo(p1064 * 254.5, p1064 * 304.0625, p1064 * 346.5, p1064 * 270.0625, p1064 * 348.5, p1064 * 237.0625);
    v1421.bezierCurveTo(p1064 * 359.5, p1064 * 206.0625, p1064 * 318.5, p1064 * 129.0625, p1064 * 262.5, p1064 * 122.0625);
    v1421.bezierCurveTo(p1064 * 213.5, p1064 * 115.0625, p1064 * 166.5, p1064 * 133.0625, p1064 * 104.5, p1064 * 166.0625);
    v1421.bezierCurveTo(p1064 * 54.5, p1064 * 194.0625, p1064 * 23.5, p1064 * 241.0625, p1064 * 36.5, p1064 * 277.0625);
    v1421.closePath();
    f90(v1421, p1066[1], p1066[2], p1064 * 19);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 214.5, p1064 * 124.0625);
    v1421.bezierCurveTo(p1064 * 242.5, p1064 * 125.0625, p1064 * 272.5, p1064 * 159.0625, p1064 * 283.5, p1064 * 184.0625);
    v1421.bezierCurveTo(p1064 * 277.5, p1064 * 161.0625, p1064 * 233.5, p1064 * 128.0625, p1064 * 219.5, p1064 * 122.0625);
    v1421.closePath();
    f90(v1421, vVVVVUndefined823, p1066[2], p1064 * 19);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 157.5, p1064 * 145.0625);
    v1421.bezierCurveTo(p1064 * 176.5, p1064 * 148.0625, p1064 * 205.5, p1064 * 176.0625, p1064 * 212.5, p1064 * 197.0625);
    v1421.bezierCurveTo(p1064 * 205.5, p1064 * 178.0625, p1064 * 177.5, p1064 * 152.0625, p1064 * 156.5, p1064 * 142.0625);
    v1421.closePath();
    f90(v1421, vUndefined, p1066[2], p1064 * 19);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 103.5, p1064 * 169.0625);
    v1421.bezierCurveTo(p1064 * 160.5, p1064 * 166.0625, p1064 * 228.5, p1064 * 312.0625, p1064 * 162.5, p1064 * 323.0625);
    v1421.bezierCurveTo(p1064 * 128.5, p1064 * 330.0625, p1064 * 45.5, p1064 * 312.0625, p1064 * 34.5, p1064 * 268.0625);
    v1421.bezierCurveTo(p1064 * 30.5, p1064 * 238.0625, p1064 * 44.5, p1064 * 222.0625, p1064 * 52.5, p1064 * 211.0625);
    v1421.bezierCurveTo(p1064 * 82.5, p1064 * 174.0625, p1064 * 104.5, p1064 * 166.0625, p1064 * 119.5, p1064 * 172.0625);
    v1421.closePath();
    f90(v1421, p1066[3], p1066[2], p1064 * 19);
    f93(v1421, p1064 * 92.5, p1064 * 216.0625, p1064 * 13.892443989449804);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 68.5, p1064 * 227.0625, p1064 * 8.06225774829855);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 85.5, p1064 * 240.0625, p1064 * 6.708203932499369);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 147.5, p1064 * 294.0625, p1064 * 17.46424919657298);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 166.5, p1064 * 273.0625, p1064 * 6.708203932499369);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 114.5, p1064 * 294.0625, p1064 * 12.36931687685298);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 123.5, p1064 * 220.0625, p1064 * 5.830951894845301);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 114.5, p1064 * 259.0625, p1064 * 4.123105625617661);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 63.5, p1064 * 265.0625, p1064 * 5.385164807134504);
    f90(v1421, p1066[4]);
    f93(v1421, p1064 * 148.5, p1064 * 235.0625, p1064 * 4.47213595499958);
    f90(v1421, p1066[4]);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1064 * 194.5, p1064 * 313.0625);
    v1421.bezierCurveTo(p1064 * 222.5, p1064 * 306.0625, p1064 * 319.5, p1064 * 271.0625, p1064 * 337.5, p1064 * 241.0625);
    v1421.bezierCurveTo(p1064 * 274.5, p1064 * 270.0625, p1064 * 216.5, p1064 * 288.0625, p1064 * 199.5, p1064 * 287.0625);
    v1421.bezierCurveTo(p1064 * 198.5, p1064 * 302.0625, p1064 * 195.5, p1064 * 311.0625, p1064 * 193.5, p1064 * 312.0625);
    v1421.closePath();
    f90(v1421, p1066[5]);
    return v1420;
  }
  function f260(p1067, p1068, p1069) {
    var v1422 = document.createElement("canvas");
    var v1423 = v1422.getContext("2d");
    v1422.width = p1067 * 465;
    v1422.height = p1067 * 310;
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 126, p1067 * 192);
    v1423.bezierCurveTo(p1067 * 198, p1067 * 202, p1067 * 245, p1067 * 203, p1067 * 335, p1067 * 194);
    v1423.bezierCurveTo(p1067 * 336, p1067 * 232, p1067 * 326, p1067 * 235, p1067 * 232, p1067 * 237);
    v1423.bezierCurveTo(p1067 * 161, p1067 * 235, p1067 * 122, p1067 * 235, p1067 * 126, p1067 * 193);
    v1423.closePath();
    f90(v1423, p1069[0], p1069[1], p1067 * 4);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 146, p1067 * 239);
    v1423.bezierCurveTo(p1067 * 174, p1067 * 74, p1067 * 287, p1067 * 88, p1067 * 320, p1067 * 240);
    v1423.bezierCurveTo(p1067 * 329, p1067 * 231, p1067 * 340, p1067 * 219, p1067 * 332, p1067 * 115);
    v1423.bezierCurveTo(p1067 * 330, p1067 * 40, p1067 * 144, p1067 * 30, p1067 * 129, p1067 * 116);
    v1423.bezierCurveTo(p1067 * 124, p1067 * 217, p1067 * 124, p1067 * 228, p1067 * 143, p1067 * 237);
    v1423.closePath();
    f90(v1423, p1069[0], p1069[1], p1067 * 4);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 126, p1067 * 193);
    v1423.bezierCurveTo(p1067 * 173, p1067 * 94, p1067 * 209, p1067 * 100, p1067 * 228, p1067 * 57);
    v1423.bezierCurveTo(p1067 * 190, p1067 * 112, p1067 * 165, p1067 * 115, p1067 * 127, p1067 * 184);
    v1423.closePath();
    f90(v1423, vVVVVUndefined82, p1069[1], p1067 * 4);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 230, p1067 * 57);
    v1423.bezierCurveTo(p1067 * 266, p1067 * 117, p1067 * 310, p1067 * 130, p1067 * 332, p1067 * 183);
    v1423.bezierCurveTo(p1067 * 290, p1067 * 112, p1067 * 262, p1067 * 109, p1067 * 230, p1067 * 56);
    v1423.closePath();
    f90(v1423, vVUndefined, p1069[1], p1067 * 4);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 154, p1067 * 212);
    v1423.bezierCurveTo(p1067 * 208, p1067 * 224, p1067 * 252, p1067 * 219, p1067 * 305, p1067 * 212);
    v1423.bezierCurveTo(p1067 * 267, p1067 * 219, p1067 * 204, p1067 * 222, p1067 * 155, p1067 * 212);
    v1423.closePath();
    f90(v1423, undefined, p1069[1], p1067 * 4);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 239, p1067 * 59);
    v1423.bezierCurveTo(p1067 * 302, p1067 * 72, p1067 * 325, p1067 * 84, p1067 * 326, p1067 * 115);
    v1423.bezierCurveTo(p1067 * 289, p1067 * 80, p1067 * 270, p1067 * 88, p1067 * 253, p1067 * 78);
    v1423.closePath();
    f90(v1423, p1069[2]);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 216, p1067 * 61);
    v1423.bezierCurveTo(p1067 * 209, p1067 * 70, p1067 * 209, p1067 * 70, p1067 * 202, p1067 * 79);
    v1423.bezierCurveTo(p1067 * 173, p1067 * 87, p1067 * 162, p1067 * 91, p1067 * 137, p1067 * 107);
    v1423.bezierCurveTo(p1067 * 153, p1067 * 78, p1067 * 174, p1067 * 67, p1067 * 212, p1067 * 62);
    v1423.closePath();
    f90(v1423, p1069[2]);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1067 * 175, p1067 * 125);
    v1423.bezierCurveTo(p1067 * 218, p1067 * 94, p1067 * 238, p1067 * 90, p1067 * 281, p1067 * 125);
    v1423.bezierCurveTo(p1067 * 245, p1067 * 89, p1067 * 240, p1067 * 80, p1067 * 228, p1067 * 67);
    v1423.bezierCurveTo(p1067 * 207, p1067 * 100, p1067 * 192, p1067 * 104, p1067 * 177, p1067 * 123);
    v1423.closePath();
    f90(v1423, p1069[2]);
    return v1422;
  }
  function f261() {
    new Date().getTime();
    f203();
    f251();
    ΔΔ[678] = [];
    ΔΔ[678][v624.Ⲇⵠᐃ] = [];
    ΔΔ[678][v624.Δⵠⵠ] = [];
    for (var v1424 = 0; v624.ΔᐃΔⵠᐃᐃᐃ > v1424; v1424++) {
      ΔΔ[678][v624.Ⲇⵠᐃ].push(f47(f163(1, 4 + v1424, "#59B8CE")));
      ΔΔ[678][v624.Δⵠⵠ].push(f47(f163(1, 4 + v1424, "#90DDD9")));
    }
    ΔΔ[608] = [];
    ΔΔ[608][v624.Ⲇⵠᐃ] = [];
    ΔΔ[608][v624.Δⵠⵠ] = [];
    for (v1424 = 0; v624.ᐃΔΔⵠΔΔᐃ > v1424; v1424++) {
      ΔΔ[608][v624.Ⲇⵠᐃ].push(f47(f163(1, 4 + v1424, "#fff")));
      ΔΔ[608][v624.Δⵠⵠ].push(f47(f163(1, 4 + v1424, "#fff")));
    }
    ΔΔ[609] = [];
    ΔΔ[609][v624.Ⲇⵠᐃ] = [];
    ΔΔ[609][v624.Δⵠⵠ] = [];
    for (v1424 = 0; v624.ᐃΔΔⵠΔΔᐃ > v1424; v1424++) {
      ΔΔ[609][v624.Ⲇⵠᐃ].push(f47(f163(1, 6 + v1424, "#DDCD8A")));
      ΔΔ[609][v624.Δⵠⵠ].push(f47(f163(1, 6 + v1424, "#155E57")));
    }
    ΔΔ[1218] = [];
    ΔΔ[1218][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1218][v624.Δⵠⵠ] = [];
    for (v1424 = 0; v624.ⲆᐃΔᐃⵠΔⵠ > v1424; v1424++) {
      ΔΔ[1218][v624.Ⲇⵠᐃ].push(f47(f163(1, 4 + v1424, "#353326")));
      ΔΔ[1218][v624.Δⵠⵠ].push(f47(f163(1, 4 + v1424, "#1D2526")));
    }
    ΔΔ[303] = [];
    ΔΔ[303][v624.Ⲇⵠᐃ] = f47(f98(1.5, 0, ["#ee71a9"]));
    ΔΔ[303][v624.Δⵠⵠ] = f47(f98(1.5, 0, ["#ee71a9"]));
    ΔΔ[1121] = [ΔΔ[303]];
    ΔΔ[1121][1] = [];
    ΔΔ[1121][2] = [];
    ΔΔ[1121][3] = [];
    ΔΔ[1121][4] = [];
    ΔΔ[1121][1][v624.Ⲇⵠᐃ] = f47(f98(1.5, 0, ["#e2d63b"]));
    ΔΔ[1121][1][v624.Δⵠⵠ] = f47(f98(1.5, 0, ["#e2d63b"]));
    ΔΔ[1121][2][v624.Ⲇⵠᐃ] = f47(f98(1.5, 0, ["#309cbd"]));
    ΔΔ[1121][2][v624.Δⵠⵠ] = f47(f98(1.5, 0, ["#309cbd"]));
    ΔΔ[1121][3][v624.Ⲇⵠᐃ] = f47(f98(1.5, 0, ["#cd232d"]));
    ΔΔ[1121][3][v624.Δⵠⵠ] = f47(f98(1.5, 0, ["#cd232d"]));
    ΔΔ[1121][4][v624.Ⲇⵠᐃ] = f47(f98(1.5, 0, ["#42b672"]));
    ΔΔ[1121][4][v624.Δⵠⵠ] = f47(f98(1.5, 0, ["#42b672"]));
    if (ⵠⲆⲆ.ΔᐃⵠΔⵠⲆᐃ("cti", vWindow.location.href)) {
      document.getElementById("version").innerHTML += "[CTI]";
    } else {
      f47 = function (p1070) {
        p1070.loaded = 1;
        return p1070;
      };
    }
    ΔΔ[1046] = f47(function () {
      var v1425 = document.createElement("canvas");
      var v1426 = v1425.getContext("2d");
      v1425.width = 460;
      v1425.height = 220;
      v1426.fillStyle = "#3a2a0d";
      v1426.fillRect(0, 0, v1425.width, v1425.height);
      v1426.lineWidth = 4;
      v1426.beginPath();
      v1426.strokeStyle = "#513810";
      for (var v1427 = 20; v1427 < 220; v1427 += 20) {
        v1426.moveTo(0, v1427);
        v1426.lineTo(460, v1427);
        v1426.closePath();
        v1426.stroke();
      }
      return v1425;
    }());
    ΔΔ[199] = [];
    ΔΔ[199][v624.Ⲇⵠᐃ] = [];
    ΔΔ[199][v624.Δⵠⵠ] = [];
    ΔΔ[199][v624.Ⲇⵠᐃ].push(f47(f161(1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ΔΔ[199][v624.Ⲇⵠᐃ].push(f47(f161(0.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ΔΔ[199][v624.Ⲇⵠᐃ].push(f47(f161(0.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ΔΔ[199][v624.Δⵠⵠ].push(f47(f161(1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ΔΔ[199][v624.Δⵠⵠ].push(f47(f161(0.9, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ΔΔ[199][v624.Δⵠⵠ].push(f47(f161(0.6, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ΔΔ[202] = [];
    ΔΔ[202][v624.Ⲇⵠᐃ] = [];
    ΔΔ[202][v624.Δⵠⵠ] = [];
    ΔΔ[202][v624.Ⲇⵠᐃ].push(f47(f176(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[202][v624.Ⲇⵠᐃ].push(f47(f176(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[202][v624.Ⲇⵠᐃ].push(f47(f176(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[202][v624.Δⵠⵠ].push(f47(f176(1.5, 0, ["#030d14", "#1b4444", "#16605a"])));
    ΔΔ[202][v624.Δⵠⵠ].push(f47(f176(1.3, 0, ["#030d14", "#1b4444", "#16605a"])));
    ΔΔ[202][v624.Δⵠⵠ].push(f47(f176(1.1, 0, ["#030d14", "#1b4444", "#16605a"])));
    ΔΔ[203] = [];
    ΔΔ[203][v624.Ⲇⵠᐃ] = [];
    ΔΔ[203][v624.Δⵠⵠ] = [];
    ΔΔ[203][v624.Ⲇⵠᐃ].push(f47(f165(1.1, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ΔΔ[203][v624.Ⲇⵠᐃ].push(f47(f165(0.9, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ΔΔ[203][v624.Ⲇⵠᐃ].push(f47(f165(0.7, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ΔΔ[203][v624.Δⵠⵠ].push(f47(f165(1.1, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ΔΔ[203][v624.Δⵠⵠ].push(f47(f165(0.9, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ΔΔ[203][v624.Δⵠⵠ].push(f47(f165(0.7, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ΔΔ[349] = [];
    ΔΔ[349][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔΔᐃΔⲆⲆ;
    ΔΔ[349][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⵠⲆΔᐃⲆ;
    ΔΔ[396] = [];
    ΔΔ[396][v624.Ⲇⵠᐃ] = f47(f132(0.6, ["#0d1b1c"]));
    ΔΔ[396][v624.Δⵠⵠ] = f47(f132(0.6, ["#030d14"]));
    ΔΔ[1042] = [];
    ΔΔ[1042][v624.Ⲇⵠᐃ] = f47(f137(0.6, ["#2a2938", "#242330"]));
    ΔΔ[1042][v624.Δⵠⵠ] = f47(f137(0.6, ["#1b1e30", "#161921"]));
    ΔΔ[1069] = [];
    ΔΔ[1069][v624.Ⲇⵠᐃ] = f47(f103(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
    ΔΔ[1069][v624.Δⵠⵠ] = f47(f103(0.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
    ΔΔ[1070] = [];
    ΔΔ[1070][v624.Ⲇⵠᐃ] = f47(f101(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"]));
    ΔΔ[1070][v624.Δⵠⵠ] = f47(f101(0.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"]));
    ΔΔ[1071] = [];
    ΔΔ[1071][v624.Ⲇⵠᐃ] = f47(f131(0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
    ΔΔ[1071][v624.Δⵠⵠ] = f47(f131(0.4, ["#030d14", "#11635e", "#02373e"]));
    ΔΔ[1072] = f47(f105(0.6, ["#BB0000"]));
    ΔΔ[1073] = f47(f105(0.6, ["#DBE71C"]));
    ΔΔ[1074] = f47(f105(0.6, ["#00BB00"]));
    ΔΔ[200] = [];
    ΔΔ[200][v624.Ⲇⵠᐃ] = [];
    ΔΔ[200][v624.Δⵠⵠ] = [];
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], false, 0));
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], vVVV3024, 0));
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(0.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], false, 0));
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(0.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], vVVV3024, 0));
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], false, 0));
    ΔΔ[200][v624.Ⲇⵠᐃ].push(f129(0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], vV302, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], false, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], true, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(0.9, ["#030d14", "#0b3534", "#144443", "#174240"], false, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(0.9, ["#030d14", "#0b3534", "#144443", "#174240"], true, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], false, 0));
    ΔΔ[200][v624.Δⵠⵠ].push(f129(0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], vVV302, 0));
    ΔΔ[418] = [];
    ΔΔ[418][v624.Ⲇⵠᐃ] = [];
    ΔΔ[418][v624.Δⵠⵠ] = [];
    ΔΔ[418][v624.Ⲇⵠᐃ].push(f47(f134(f133(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], false), ΔΔ[200][v624.Ⲇⵠᐃ][0])));
    ΔΔ[418][v624.Ⲇⵠᐃ].push(f47(f134(f133(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], true), ΔΔ[200][v624.Ⲇⵠᐃ][1])));
    ΔΔ[418][v624.Δⵠⵠ].push(f47(f134(f133(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], false), ΔΔ[200][v624.Δⵠⵠ][0])));
    ΔΔ[418][v624.Δⵠⵠ].push(f47(f134(f133(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], vVVV3022), ΔΔ[200][v624.Δⵠⵠ][1])));
    ΔΔ[418][v624.Ⲇⵠᐃ].push(f47(f134(f133(0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], vVV314), ΔΔ[200][v624.Ⲇⵠᐃ][2])));
    ΔΔ[418][v624.Ⲇⵠᐃ].push(f47(f134(f133(0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], vVVVV30), ΔΔ[200][v624.Ⲇⵠᐃ][2])));
    ΔΔ[418][v624.Δⵠⵠ].push(f47(f134(f133(0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], false), ΔΔ[200][v624.Δⵠⵠ][2])));
    ΔΔ[418][v624.Δⵠⵠ].push(f47(f134(f133(0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], true), ΔΔ[200][v624.Δⵠⵠ][3])));
    ΔΔ[200][v624.Ⲇⵠᐃ][5] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][5]);
    ΔΔ[200][v624.Ⲇⵠᐃ][4] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][4]);
    ΔΔ[200][v624.Ⲇⵠᐃ][3] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][3]);
    ΔΔ[200][v624.Ⲇⵠᐃ][2] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][2]);
    ΔΔ[200][v624.Ⲇⵠᐃ][1] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][1]);
    ΔΔ[200][v624.Ⲇⵠᐃ][0] = f47(ΔΔ[200][v624.Ⲇⵠᐃ][0]);
    ΔΔ[200][v624.Δⵠⵠ][5] = f47(ΔΔ[200][v624.Δⵠⵠ][5]);
    ΔΔ[200][v624.Δⵠⵠ][4] = f47(ΔΔ[200][v624.Δⵠⵠ][4]);
    ΔΔ[200][v624.Δⵠⵠ][3] = f47(ΔΔ[200][v624.Δⵠⵠ][3]);
    ΔΔ[200][v624.Δⵠⵠ][2] = f47(ΔΔ[200][v624.Δⵠⵠ][2]);
    ΔΔ[200][v624.Δⵠⵠ][1] = f47(ΔΔ[200][v624.Δⵠⵠ][1]);
    ΔΔ[200][v624.Δⵠⵠ][0] = f47(ΔΔ[200][v624.Δⵠⵠ][0]);
    ΔΔ[8] = [];
    ΔΔ[8][v624.Ⲇⵠᐃ] = f47(f95(4, f139(0.75, vV306, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"])));
    ΔΔ[8][v624.Δⵠⵠ] = f47(f95(4, f139(0.75, vV302, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"])));
    ΔΔ[1] = [];
    ΔΔ[1][v624.Ⲇⵠᐃ] = f47(f95(4, f139(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ΔΔ[1][v624.Δⵠⵠ] = f47(f95(4, f139(0.75, v30, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"])));
    ΔΔ[3] = [];
    ΔΔ[3][v624.Ⲇⵠᐃ] = f47(f95(4, f139(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ΔΔ[3][v624.Δⵠⵠ] = f47(f95(4, f139(0.75, true, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"])));
    ΔΔ[4] = [];
    ΔΔ[4][v624.Ⲇⵠᐃ] = f47(f95(4, f139(0.75, vV303, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ΔΔ[4][v624.Δⵠⵠ] = f47(f95(4, f139(0.75, vVV3032, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ΔΔ[49] = [];
    ΔΔ[49][v624.Ⲇⵠᐃ] = f47(f95(4, f139(0.75, vVV3032, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ΔΔ[49][v624.Δⵠⵠ] = f47(f95(4, f139(0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ΔΔ[9] = [];
    ΔΔ[9][v624.Ⲇⵠᐃ] = f47(f95(3, f158(0.17, true, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"])));
    ΔΔ[9][v624.Δⵠⵠ] = f47(f95(3, f158(0.17, vVVVV30, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
    ΔΔ[301] = [];
    ΔΔ[301][v624.Ⲇⵠᐃ] = f47(f95(3, f145(0.32, true, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"])));
    ΔΔ[301][v624.Δⵠⵠ] = f47(f95(3, f145(0.42, vVVV3022, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
    ΔΔ[103] = [];
    ΔΔ[103][v624.Ⲇⵠᐃ] = f47(f95(3, f140(0.4, vVV304, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"])));
    ΔΔ[103][v624.Δⵠⵠ] = f47(f95(3, f140(0.4, true, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"])));
    ΔΔ[0] = [];
    ΔΔ[0][v624.Ⲇⵠᐃ] = f47(f95(3, f168(0.4, vVV303, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"])));
    ΔΔ[0][v624.Δⵠⵠ] = f47(f95(3, f168(0.4, vV303, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"])));
    ΔΔ[5] = [];
    ΔΔ[5][v624.Ⲇⵠᐃ] = f47(f95(3, f143(0.4, true, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"])));
    ΔΔ[5][v624.Δⵠⵠ] = f47(f95(3, f143(0.4, vVVV3024, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"])));
    ΔΔ[6] = [];
    ΔΔ[6][v624.Ⲇⵠᐃ] = f47(f95(3, f160(0.4, v30, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"])));
    ΔΔ[6][v624.Δⵠⵠ] = f47(f95(3, f160(0.4, vVV30, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"])));
    ΔΔ[48] = [];
    ΔΔ[48][v624.Ⲇⵠᐃ] = f47(f95(3, f152(0.4, vVVV3024, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"])));
    ΔΔ[48][v624.Δⵠⵠ] = f47(f95(3, f152(0.4, vV305, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"])));
    ΔΔ[395] = [];
    ΔΔ[395][v624.Ⲇⵠᐃ] = [];
    ΔΔ[395][v624.Δⵠⵠ] = [];
    ΔΔ[395][v624.Ⲇⵠᐃ].push(f47(f159(0.9, 0, ["#0d4f35"], 0)));
    ΔΔ[395][v624.Ⲇⵠᐃ].push(f47(f159(0.9, 0, ["#0d4f35"], 1)));
    ΔΔ[395][v624.Ⲇⵠᐃ].push(f47(f159(0.9, 0, ["#0d4f35"], 2)));
    ΔΔ[395][v624.Δⵠⵠ].push(f47(f159(0.9, 0, ["#053339"], 0)));
    ΔΔ[395][v624.Δⵠⵠ].push(f47(f159(0.9, 0, ["#053339"], 1)));
    ΔΔ[395][v624.Δⵠⵠ].push(f47(f159(0.9, 0, ["#053339"], 2)));
    ΔΔ[395][v624.Ⲇⵠᐃ].push(f47(f171(0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
    ΔΔ[395][v624.Ⲇⵠᐃ].push(f47(f171(0.8, ["#292002", "#ba930e", "#6d5704"])));
    ΔΔ[395][v624.Δⵠⵠ].push(f47(f171(0.9, ["#052919", "#0a4738", "#06321f"])));
    ΔΔ[395][v624.Δⵠⵠ].push(f47(f171(0.8, ["#052918", "#08491c", "#063417"])));
    ΔΔ[285] = [];
    ΔΔ[285][v624.Ⲇⵠᐃ] = f47(f95(Math.PI / 2, f188(0.25, vVV3032, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
    ΔΔ[285][v624.Δⵠⵠ] = f47(f95(Math.PI / 2, f188(0.25, true, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
    ΔΔ[1052] = [];
    ΔΔ[1052].push(f47(f212(0.25, ["#44301b", "#57442a", "#523e26"], 0)));
    ΔΔ[1052].push(f47(f212(0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
    ΔΔ[1052].push(f47(f212(0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
    ΔΔ[1051] = [];
    ΔΔ[1051][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1051][v624.Δⵠⵠ] = [];
    ΔΔ[1051][v624.Ⲇⵠᐃ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
    ΔΔ[1051][v624.Δⵠⵠ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
    ΔΔ[1051][v624.Ⲇⵠᐃ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
    ΔΔ[1051][v624.Δⵠⵠ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
    ΔΔ[1051][v624.Ⲇⵠᐃ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3))));
    ΔΔ[1051][v624.Δⵠⵠ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3))));
    ΔΔ[1051][v624.Ⲇⵠᐃ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4))));
    ΔΔ[1051][v624.Δⵠⵠ].push(f47(f95(Math.PI / 2, f206(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4))));
    ΔΔ[201] = [];
    ΔΔ[201][v624.Ⲇⵠᐃ] = [f47(f155(1.2, true, ["#0e3022", "#0b8052", "#077b49"]))];
    ΔΔ[201][v624.Δⵠⵠ] = [f47(f155(1.2, true, ["#030d14", "#084442", "#0a4049"]))];
    ΔΔ[842] = [];
    ΔΔ[842][v624.Ⲇⵠᐃ] = f47(f155(0.8, vVV3023, ["#0e3022", "#68622D", "#665329"]));
    ΔΔ[842][v624.Δⵠⵠ] = f47(f155(0.8, vVVVV30, ["#030d14", "#0F3A24", "#083326"]));
    ΔΔ[291] = [];
    ΔΔ[291][v624.Ⲇⵠᐃ] = f47(f283(0.5, vVV3024, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
    ΔΔ[291][v624.Δⵠⵠ] = f47(f283(0.5, true, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"]));
    ΔΔ[294] = [];
    ΔΔ[294][v624.Ⲇⵠᐃ] = f47(f91(0.5, true, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
    ΔΔ[294][v624.Δⵠⵠ] = f47(f91(0.5, true, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
    ΔΔ[296] = [];
    ΔΔ[296][v624.Ⲇⵠᐃ] = f47(f218(0.5, true, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]));
    ΔΔ[296][v624.Δⵠⵠ] = f47(f218(0.5, true, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
    ΔΔ[397] = [];
    ΔΔ[397][v624.Ⲇⵠᐃ] = f47(f155(0.8, vVV3032, ["#1b170c", "#0b8052", "#077b49"]));
    ΔΔ[397][v624.Δⵠⵠ] = f47(f155(0.8, vVVVV30, ["#030d14", "#084442", "#0a4049"]));
    ΔΔ[1062] = [];
    ΔΔ[1062][v624.Ⲇⵠᐃ] = f47(f283(0.5, true, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"]));
    ΔΔ[1062][v624.Δⵠⵠ] = f47(f283(0.5, vV30, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"]));
    ΔΔ[1088] = [];
    ΔΔ[1088][v624.Ⲇⵠᐃ] = f47(f91(0.5, true, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
    ΔΔ[1088][v624.Δⵠⵠ] = f47(f91(0.5, true, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
    ΔΔ[1118] = [];
    ΔΔ[1118][v624.Ⲇⵠᐃ] = f47(f218(0.5, true, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
    ΔΔ[1118][v624.Δⵠⵠ] = f47(f218(0.5, true, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
    ΔΔ[1103] = [];
    ΔΔ[1103][v624.Ⲇⵠᐃ] = f47(f201(0.45, vV304, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
    ΔΔ[1103][v624.Δⵠⵠ] = f47(f201(0.45, true, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
    ΔΔ[1108] = f47(f201(0.65, vV306, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
    ΔΔ[404] = [];
    ΔΔ[404][v624.Ⲇⵠᐃ] = f47(f172(1.4, 0, ["#ac222a", "#e6636a"]));
    ΔΔ[404][v624.Δⵠⵠ] = f47(f172(1.4, 0, ["#46195e", "#744188"]));
    ΔΔ[405] = [];
    ΔΔ[405][v624.Ⲇⵠᐃ] = f47(f172(1.25, 0, ["#cea52c", "#f2c85f"]));
    ΔΔ[405][v624.Δⵠⵠ] = f47(f172(1.25, 0, ["#239b73", "#42c193"]));
    ΔΔ[398] = [];
    ΔΔ[398][v624.Ⲇⵠᐃ] = f47(f126(0.9, 0, ["#efd435", "#ec8d35", "#e96132"]));
    ΔΔ[398][v624.Δⵠⵠ] = f47(f126(0.9, 0, ["#efdb7b", "#efe854", "#e8ef62"]));
    ΔΔ[209] = [];
    ΔΔ[209][v624.Ⲇⵠᐃ] = f47(f125(0.9, 0, ["#4d2d14", "#432516"]));
    ΔΔ[209][v624.Δⵠⵠ] = f47(f125(0.9, 0, ["#282404", "#0a0a01"]));
    ΔΔ[204] = [];
    ΔΔ[204][v624.Ⲇⵠᐃ] = f47(f135(0.9, 0, ["#4d2d14", "#432516"]));
    ΔΔ[204][v624.Δⵠⵠ] = f47(f135(0.9, 0, ["#282404", "#0a0a01"]));
    ΔΔ[399] = [];
    ΔΔ[399][v624.Ⲇⵠᐃ] = f47(f136(0.9, 0, ["#efd435"]));
    ΔΔ[399][v624.Δⵠⵠ] = f47(f136(0.9, 0, ["#fffabb"]));
    ΔΔ[392] = [];
    ΔΔ[392][v624.Ⲇⵠᐃ] = f47(f138(0.9, 0, ["#efd435"]));
    ΔΔ[392][v624.Δⵠⵠ] = f47(f138(0.9, 0, ["#fffabb"]));
    ΔΔ[1065] = [];
    ΔΔ[1065][v624.Ⲇⵠᐃ] = f47(f136(0.9, 0, ["#efd435"]));
    ΔΔ[1065][v624.Δⵠⵠ] = f47(f136(0.9, 0, ["rgba(255, 84, 0, 1)"]));
    ΔΔ[1066] = [];
    ΔΔ[1066][v624.Ⲇⵠᐃ] = f47(f138(0.9, 0, ["#efd435"]));
    ΔΔ[1066][v624.Δⵠⵠ] = f47(f138(0.9, 0, ["#ff5704"]));
    ΔΔ[435] = f47(f108(1, "#ffffff"));
    ΔΔ[412] = f47(f108(1.5, "#ffffff"));
    ΔΔ[417] = f47(f166(1, "Your score:", 15, "#FFF"));
    ΔΔ[874] = f47(function (p1071, p1072) {
      var v1428 = document.createElement("canvas");
      var v1429 = v1428.getContext("2d");
      v1428.width = p1071 * 243;
      v1428.height = p1071 * 172;
      f93(v1429, p1071 * 119.5, p1071 * 140.125, p1071 * 19);
      f90(v1429, vVVVUndefined132, p1072[1], p1071 * 5);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1071 * 36.5, p1071 * 20.125);
      v1429.bezierCurveTo(p1071 * 119.5, p1071 * 20.625, p1071 * 119.5, p1071 * 20.625, p1071 * 202.5, p1071 * 21.125);
      v1429.bezierCurveTo(p1071 * 214.5, p1071 * 22.125, p1071 * 216.5, p1071 * 26.125, p1071 * 217.5, p1071 * 35.125);
      v1429.bezierCurveTo(p1071 * 221, p1071 * 76.125, p1071 * 221, p1071 * 76.125, p1071 * 224.5, p1071 * 117.125);
      v1429.bezierCurveTo(p1071 * 225.5, p1071 * 127.125, p1071 * 221.5, p1071 * 131.125, p1071 * 210.5, p1071 * 132.125);
      v1429.bezierCurveTo(p1071 * 117.5, p1071 * 132.125, p1071 * 117.5, p1071 * 132.125, p1071 * 24.5, p1071 * 132.125);
      v1429.bezierCurveTo(p1071 * 14.5, p1071 * 131.125, p1071 * 13.5, p1071 * 126.125, p1071 * 16.5, p1071 * 111.125);
      v1429.bezierCurveTo(p1071 * 19.5, p1071 * 73.125, p1071 * 19.5, p1071 * 73.125, p1071 * 22.5, p1071 * 35.125);
      v1429.bezierCurveTo(p1071 * 23.5, p1071 * 23.125, p1071 * 29.5, p1071 * 21.125, p1071 * 36.5, p1071 * 20.125);
      v1429.closePath();
      f90(v1429, p1072[0], p1072[1], p1071 * 4);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1071 * 15.5, p1071 * 138.625);
      v1429.bezierCurveTo(p1071 * 120, p1071 * 138.625, p1071 * 120, p1071 * 138.625, p1071 * 224.5, p1071 * 138.625);
      v1429.closePath();
      f90(v1429, undefined, p1072[2], p1071 * 10);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1071 * 13.5, p1071 * 131.625);
      v1429.bezierCurveTo(p1071 * 119.5, p1071 * 131.625, p1071 * 119.5, p1071 * 131.625, p1071 * 225.5, p1071 * 131.625);
      v1429.closePath();
      f90(v1429, vVVVVUndefined823, p1072[3], p1071 * 10);
      f93(v1429, p1071 * 119.5, p1071 * 140.125, p1071 * 14.866068747318506);
      f90(v1429, p1072[4], p1072[5], p1071 * 4);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1071 * 106.5, p1071 * 146.625);
      v1429.bezierCurveTo(p1071 * 116.5, p1071 * 137.625, p1071 * 118.5, p1071 * 136.625, p1071 * 123.5, p1071 * 138.625);
      v1429.bezierCurveTo(p1071 * 131.5, p1071 * 145.625, p1071 * 133.5, p1071 * 148.625, p1071 * 127.5, p1071 * 152.625);
      v1429.bezierCurveTo(p1071 * 115.5, p1071 * 158.625, p1071 * 111.5, p1071 * 153.625, p1071 * 106.5, p1071 * 147.625);
      v1429.closePath();
      f90(v1429, p1072[6], p1072[7], p1071 * 2);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1071 * 105.5, p1071 * 146.625);
      v1429.bezierCurveTo(p1071 * 116.5, p1071 * 159.625, p1071 * 124.5, p1071 * 156.625, p1071 * 132.5, p1071 * 146.625);
      f90(v1429, undefined, p1072[8], p1071 * 5);
      v1429.save();
      v1429.translate(p1071 * 75.5, p1071 * 80.125);
      f87(v1429, p1071 * -39, p1071 * -40, p1071 * 78, p1071 * 78, p1071 * 10);
      v1429.restore();
      f90(v1429, p1072[9]);
      v1429.save();
      v1429.translate(p1071 * 167, p1071 * 80.125);
      f87(v1429, p1071 * -38.5, p1071 * -39, p1071 * 78, p1071 * 78, p1071 * 10);
      v1429.restore();
      f90(v1429, p1072[9]);
      return v1428;
    }(0.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
    ΔΔ[875] = ⵠᐃ.ᐃΔΔΔᐃΔΔ;
    ΔΔ[228] = [];
    ΔΔ[228][v624.Ⲇⵠᐃ] = f47(f120(1.5, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ΔΔ[228][v624.Δⵠⵠ] = f47(f120(1.5, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ΔΔ[860] = [];
    ΔΔ[860][v624.Ⲇⵠᐃ] = f47(f122(2, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ΔΔ[860][v624.Δⵠⵠ] = f47(f122(2, vVV3032, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ΔΔ[861] = [];
    ΔΔ[861][v624.Ⲇⵠᐃ] = f47(f118(1.5, vV306, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ΔΔ[861][v624.Δⵠⵠ] = f47(f118(1.5, v30, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ΔΔ[227] = [];
    ΔΔ[227][v624.Ⲇⵠᐃ] = f47(f123(2.2, 0, ["#A89F67", "#9E8456"]));
    ΔΔ[227][v624.Δⵠⵠ] = f47(f123(2.2, 0, ["#0B4049", "#08383D"]));
    ΔΔ[857] = [];
    ΔΔ[857][v624.Ⲇⵠᐃ] = f47(f123(2.2, 0, ["#68622D", "#665329"]));
    ΔΔ[857][v624.Δⵠⵠ] = f47(f123(2.2, 0, ["#0F3A24", "#083326"]));
    ΔΔ[432] = [];
    ΔΔ[432][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#A89F67", "#9E8456"]));
    ΔΔ[432][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#15514F", "#0F3F3D"]));
    ΔΔ[1060] = [];
    ΔΔ[1060][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#c67933", "#b17238"]));
    ΔΔ[1060][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#043c37", "#032b23"]));
    ΔΔ[1260] = [];
    ΔΔ[1260][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#3a8214", "#4a9c1e"]));
    ΔΔ[1260][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#032d29", "#044640"]));
    ΔΔ[1086] = [];
    ΔΔ[1086][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#e8e8e8", "#bbbbbb"]));
    ΔΔ[1086][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#1c6161", "#07413f"]));
    ΔΔ[1097] = [];
    ΔΔ[1097][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#328a56", "#449573"]));
    ΔΔ[1097][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#043c37", "#032b23"]));
    ΔΔ[1228] = [];
    ΔΔ[1228][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#c98e2f", "#a36b11"]));
    ΔΔ[1228][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#043c37", "#032b23"]));
    ΔΔ[1238] = [];
    ΔΔ[1238][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#b22419", "#99110e"]));
    ΔΔ[1238][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#04323c", "#03222b"]));
    ΔΔ[1743] = [];
    ΔΔ[1743][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#c98e2f", "#a36b11"]));
    ΔΔ[1743][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#043c37", "#032b23"]));
    ΔΔ[1245] = [];
    ΔΔ[1245][v624.Ⲇⵠᐃ] = f47(f169(0.8, 0, ["#13a56d", "#098a58"]));
    ΔΔ[1245][v624.Δⵠⵠ] = f47(f169(0.8, 0, ["#043c37", "#032b23"]));
    ΔΔ[876] = f119(1, [{
      f: f123,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ΔΔ[972] = f119(1, [{
      f: f135,
      x: 0,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ΔΔ[973] = f119(1, [{
      f: f259,
      x: 0,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ΔΔ[445] = f119(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ΔΔ[206] = [];
    ΔΔ[206][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#7d613e", "#9e7e5a"]));
    ΔΔ[206][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#084442", "#125e5a"]));
    ΔΔ[225] = [];
    ΔΔ[225][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#9E8456", "#A89F67"]));
    ΔΔ[225][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#1b6f6a", "#0d4e4c"]));
    ΔΔ[887] = [];
    ΔΔ[887][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#665329", "#68622D"]));
    ΔΔ[887][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#083326", "#0F3A24"]));
    ΔΔ[290] = [];
    ΔΔ[290][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#c67933", "#ec952d"]));
    ΔΔ[290][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#0e6553", "#094437"]));
    ΔΔ[320] = [];
    ΔΔ[320][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#375809", "#4b770e"]));
    ΔΔ[320][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#09542d", "#0d5d2f"]));
    ΔΔ[1261] = [];
    ΔΔ[1261][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#585809", "#72770e"]));
    ΔΔ[1261][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#295209", "#305d0d"]));
    ΔΔ[293] = [];
    ΔΔ[293][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#b9b094", "#e2d2c0"]));
    ΔΔ[293][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#126366", "#0d484b"]));
    ΔΔ[295] = [];
    ΔΔ[295][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#3f8662", "#30915d"]));
    ΔΔ[295][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#0e6553", "#094437"]));
    ΔΔ[1061] = [];
    ΔΔ[1061][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#c79153", "#dfa868"]));
    ΔΔ[1061][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#073927", "#075040"]));
    ΔΔ[1087] = [];
    ΔΔ[1087][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#768b5b", "#819984"]));
    ΔΔ[1087][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#0c4540", "#0e5153"]));
    ΔΔ[1098] = [];
    ΔΔ[1098][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#567465", "#627c6e"]));
    ΔΔ[1098][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#073927", "#075040"]));
    ΔΔ[314] = [];
    ΔΔ[314][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#996b3a", "#bf956b"]));
    ΔΔ[314][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#0e6553", "#094437"]));
    ΔΔ[1229] = [];
    ΔΔ[1229][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#7a634a", "#a68f77"]));
    ΔΔ[1229][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#1e4d43", "#113c32"]));
    ΔΔ[1744] = [];
    ΔΔ[1744][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#996b3a", "#bf956b"]));
    ΔΔ[1744][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#0e6553", "#094437"]));
    ΔΔ[1745] = [];
    ΔΔ[1745][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#7a634a", "#a68f77"]));
    ΔΔ[1745][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#1e4d43", "#113c32"]));
    ΔΔ[316] = [];
    ΔΔ[316][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#99403c", "#bc796c"]));
    ΔΔ[316][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#1e434d", "#11303c"]));
    ΔΔ[1239] = [];
    ΔΔ[1239][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#88504e", "#b3857c"]));
    ΔΔ[1239][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#253b41", "#162930"]));
    ΔΔ[318] = [];
    ΔΔ[318][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#0f8870", "#23af93"]));
    ΔΔ[318][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#032829", "#083233"]));
    ΔΔ[1246] = [];
    ΔΔ[1246][v624.Ⲇⵠᐃ] = f47(f102(0.9, 0, ["#618a20", "#84a74e"]));
    ΔΔ[1246][v624.Δⵠⵠ] = f47(f102(0.9, 0, ["#1f4632", "#335d47"]));
    ΔΔ[205] = [];
    ΔΔ[205][v624.Ⲇⵠᐃ] = f47(f112(1.2, true, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]));
    ΔΔ[205][v624.Δⵠⵠ] = f47(f112(1.2, true, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"]));
    ΔΔ[264] = [];
    ΔΔ[264][v624.Ⲇⵠᐃ] = f47(f148(1, true, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ΔΔ[264][v624.Δⵠⵠ] = f47(f148(1, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ΔΔ[267] = [];
    ΔΔ[267][v624.Ⲇⵠᐃ] = f47(f170(1, vVVV30, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ΔΔ[267][v624.Δⵠⵠ] = f47(f170(1, vVVV3022, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ΔΔ[213] = [];
    ΔΔ[213][v624.Ⲇⵠᐃ] = f47(f162(1, true, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ΔΔ[213][v624.Δⵠⵠ] = f47(f162(1, vVV304, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ΔΔ[265] = [];
    ΔΔ[265][v624.Ⲇⵠᐃ] = f47(f162(1, vV305, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ΔΔ[265][v624.Δⵠⵠ] = f47(f162(1, vVVV3022, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ΔΔ[266] = [];
    ΔΔ[266][v624.Ⲇⵠᐃ] = f47(f178(1, vVVVV30, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ΔΔ[266][v624.Δⵠⵠ] = f47(f178(1, vVVV3022, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ΔΔ[262] = [];
    ΔΔ[262][v624.Ⲇⵠᐃ] = f47(f239(0.8, vVV303, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ΔΔ[262][v624.Δⵠⵠ] = f47(f239(0.8, true, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ΔΔ[271] = [];
    ΔΔ[271][v624.Ⲇⵠᐃ] = f47(f209(0.8, true, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ΔΔ[271][v624.Δⵠⵠ] = f47(f209(0.8, v30, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ΔΔ[272] = [];
    ΔΔ[272][v624.Ⲇⵠᐃ] = f47(f240(0.8, vVVVV30, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ΔΔ[272][v624.Δⵠⵠ] = f47(f240(0.8, vVV3022, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ΔΔ[270] = [];
    ΔΔ[270][v624.Ⲇⵠᐃ] = f47(f255(0.8, true, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ΔΔ[270][v624.Δⵠⵠ] = f47(f255(0.8, vV304, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ΔΔ[214] = [];
    ΔΔ[214][v624.Ⲇⵠᐃ] = f47(f255(0.8, vV302, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ΔΔ[214][v624.Δⵠⵠ] = f47(f255(0.8, true, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ΔΔ[268] = [];
    ΔΔ[268][v624.Ⲇⵠᐃ] = f47(f214(1.5, true, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
    ΔΔ[268][v624.Δⵠⵠ] = f47(f214(1.5, vVV304, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ΔΔ[447] = [];
    ΔΔ[447][v624.Ⲇⵠᐃ] = f47(f214(1, vVV3153, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ΔΔ[447][v624.Δⵠⵠ] = f47(f214(1, false, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"]));
    ΔΔ[273] = [];
    ΔΔ[273][v624.Ⲇⵠᐃ] = f47(f258(1.5, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]));
    ΔΔ[273][v624.Δⵠⵠ] = f47(f258(1.5, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"]));
    ΔΔ[484] = [];
    ΔΔ[484][v624.Ⲇⵠᐃ] = f47(f258(1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ΔΔ[484][v624.Δⵠⵠ] = f47(f258(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ΔΔ[215] = [];
    ΔΔ[215][v624.Ⲇⵠᐃ] = f47(f258(1.5, true, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ΔΔ[215][v624.Δⵠⵠ] = f47(f258(1.5, true, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ΔΔ[638] = [];
    ΔΔ[638][v624.Ⲇⵠᐃ] = f47(f258(1, vVV316, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ΔΔ[638][v624.Δⵠⵠ] = f47(f258(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ΔΔ[274] = [];
    ΔΔ[274][v624.Ⲇⵠᐃ] = f47(f208(1.5, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]));
    ΔΔ[274][v624.Δⵠⵠ] = f47(f208(1.5, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
    ΔΔ[487] = [];
    ΔΔ[487][v624.Ⲇⵠᐃ] = f47(f208(1, vVV313, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ΔΔ[487][v624.Δⵠⵠ] = f47(f208(1, vVVV316, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ΔΔ[275] = [];
    ΔΔ[275][v624.Ⲇⵠᐃ] = f47(f216(1.5, vVV306, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ΔΔ[275][v624.Δⵠⵠ] = f47(f216(1.5, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ΔΔ[490] = [];
    ΔΔ[490][v624.Ⲇⵠᐃ] = f47(f216(1, vVV31, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ΔΔ[490][v624.Δⵠⵠ] = f47(f216(1, vVV31, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ΔΔ[269] = [];
    ΔΔ[269][v624.Ⲇⵠᐃ] = f47(f205(0.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ΔΔ[269][v624.Δⵠⵠ] = f47(f205(0.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"]));
    ΔΔ[910] = [];
    ΔΔ[910][v624.Ⲇⵠᐃ] = f47(f228(0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
    ΔΔ[910][v624.Δⵠⵠ] = f47(f228(0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
    ΔΔ[374] = [];
    ΔΔ[374][v624.Ⲇⵠᐃ] = f47(f107(0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
    ΔΔ[374][v624.Δⵠⵠ] = f47(f107(0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
    ΔΔ[370] = [];
    ΔΔ[370][v624.Ⲇⵠᐃ] = f47(f95(Math.PI, f111(0.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"])));
    ΔΔ[370][v624.Δⵠⵠ] = f47(f95(Math.PI, f111(0.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"])));
    ΔΔ[376] = f47(function (p1073, p1074) {
      var v1430 = document.createElement("canvas");
      var v1431 = v1430.getContext("2d");
      v1430.width = p1073 * 450;
      v1430.height = p1073 * 470;
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 226.5, p1073 * 91.546875);
      v1431.bezierCurveTo(p1073 * 254.5, p1073 * 115.546875, p1073 * 261.5, p1073 * 115.546875, p1073 * 294.5, p1073 * 109.546875);
      v1431.bezierCurveTo(p1073 * 299.5, p1073 * 141.546875, p1073 * 315.5, p1073 * 151.546875, p1073 * 344.5, p1073 * 158.546875);
      v1431.bezierCurveTo(p1073 * 330.5, p1073 * 195.546875, p1073 * 341.5, p1073 * 207.546875, p1073 * 361.5, p1073 * 226.546875);
      v1431.bezierCurveTo(p1073 * 331.5, p1073 * 251.546875, p1073 * 335.5, p1073 * 270.546875, p1073 * 342.5, p1073 * 295.546875);
      v1431.bezierCurveTo(p1073 * 300.5, p1073 * 296.546875, p1073 * 293.5, p1073 * 325.546875, p1073 * 292.5, p1073 * 344.546875);
      v1431.bezierCurveTo(p1073 * 257.5, p1073 * 326.546875, p1073 * 242.5, p1073 * 338.546875, p1073 * 224.5, p1073 * 361.546875);
      v1431.bezierCurveTo(p1073 * 200.5, p1073 * 329.546875, p1073 * 180.5, p1073 * 334.546875, p1073 * 155.5, p1073 * 341.546875);
      v1431.bezierCurveTo(p1073 * 146.5, p1073 * 307.546875, p1073 * 140.5, p1073 * 302.546875, p1073 * 107.5, p1073 * 292.546875);
      v1431.bezierCurveTo(p1073 * 117.5, p1073 * 253.546875, p1073 * 109.5, p1073 * 244.546875, p1073 * 89.5, p1073 * 224.546875);
      v1431.bezierCurveTo(p1073 * 118.5, p1073 * 191.546875, p1073 * 114.5, p1073 * 182.546875, p1073 * 108.5, p1073 * 156.546875);
      v1431.bezierCurveTo(p1073 * 143.5, p1073 * 149.546875, p1073 * 150.5, p1073 * 136.546875, p1073 * 157.5, p1073 * 106.546875);
      v1431.bezierCurveTo(p1073 * 202.5, p1073 * 120.546875, p1073 * 211.5, p1073 * 103.546875, p1073 * 228.5, p1073 * 91.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 224.5, p1073 * 129.546875);
      v1431.bezierCurveTo(p1073 * 247.5, p1073 * 147.546875, p1073 * 252.5, p1073 * 143.546875, p1073 * 274.5, p1073 * 141.546875);
      v1431.bezierCurveTo(p1073 * 279.5, p1073 * 163.546875, p1073 * 289.5, p1073 * 168.546875, p1073 * 311.5, p1073 * 178.546875);
      v1431.bezierCurveTo(p1073 * 301.5, p1073 * 199.546875, p1073 * 307.5, p1073 * 213.546875, p1073 * 323.5, p1073 * 226.546875);
      v1431.bezierCurveTo(p1073 * 303.5, p1073 * 240.546875, p1073 * 303.5, p1073 * 255.546875, p1073 * 312.5, p1073 * 275.546875);
      v1431.bezierCurveTo(p1073 * 281.5, p1073 * 278.546875, p1073 * 276.5, p1073 * 291.546875, p1073 * 272.5, p1073 * 313.546875);
      v1431.bezierCurveTo(p1073 * 248.5, p1073 * 301.546875, p1073 * 239.5, p1073 * 310.546875, p1073 * 224.5, p1073 * 324.546875);
      v1431.bezierCurveTo(p1073 * 211.5, p1073 * 304.546875, p1073 * 199.5, p1073 * 301.546875, p1073 * 176.5, p1073 * 309.546875);
      v1431.bezierCurveTo(p1073 * 165.5, p1073 * 276.546875, p1073 * 159.5, p1073 * 275.546875, p1073 * 138.5, p1073 * 274.546875);
      v1431.bezierCurveTo(p1073 * 148.5, p1073 * 248.546875, p1073 * 140.5, p1073 * 237.546875, p1073 * 125.5, p1073 * 225.546875);
      v1431.bezierCurveTo(p1073 * 145.5, p1073 * 205.546875, p1073 * 146.5, p1073 * 195.546875, p1073 * 142.5, p1073 * 176.546875);
      v1431.bezierCurveTo(p1073 * 173.5, p1073 * 164.546875, p1073 * 173.5, p1073 * 155.546875, p1073 * 178.5, p1073 * 140.546875);
      v1431.bezierCurveTo(p1073 * 214.5, p1073 * 143.546875, p1073 * 214.5, p1073 * 135.546875, p1073 * 226.5, p1073 * 129.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 224.5, p1073 * 160.546875);
      v1431.bezierCurveTo(p1073 * 236.5, p1073 * 168.546875, p1073 * 239.5, p1073 * 168.546875, p1073 * 258.5, p1073 * 168.546875);
      v1431.bezierCurveTo(p1073 * 261.5, p1073 * 185.546875, p1073 * 268.5, p1073 * 187.546875, p1073 * 282.5, p1073 * 192.546875);
      v1431.bezierCurveTo(p1073 * 277.5, p1073 * 208.546875, p1073 * 283.5, p1073 * 216.546875, p1073 * 289.5, p1073 * 228.546875);
      v1431.bezierCurveTo(p1073 * 277.5, p1073 * 243.546875, p1073 * 280.5, p1073 * 253.546875, p1073 * 281.5, p1073 * 260.546875);
      v1431.bezierCurveTo(p1073 * 264.5, p1073 * 260.546875, p1073 * 259.5, p1073 * 269.546875, p1073 * 256.5, p1073 * 283.546875);
      v1431.bezierCurveTo(p1073 * 244.5, p1073 * 276.546875, p1073 * 232.5, p1073 * 283.546875, p1073 * 223.5, p1073 * 291.546875);
      v1431.bezierCurveTo(p1073 * 213.5, p1073 * 276.546875, p1073 * 205.5, p1073 * 278.546875, p1073 * 190.5, p1073 * 281.546875);
      v1431.bezierCurveTo(p1073 * 181.5, p1073 * 262.546875, p1073 * 173.5, p1073 * 259.546875, p1073 * 165.5, p1073 * 258.546875);
      v1431.bezierCurveTo(p1073 * 169.5, p1073 * 239.546875, p1073 * 167.5, p1073 * 233.546875, p1073 * 157.5, p1073 * 225.546875);
      v1431.bezierCurveTo(p1073 * 169.5, p1073 * 208.546875, p1073 * 170.5, p1073 * 203.546875, p1073 * 168.5, p1073 * 192.546875);
      v1431.bezierCurveTo(p1073 * 181.5, p1073 * 187.546875, p1073 * 188.5, p1073 * 179.546875, p1073 * 192.5, p1073 * 168.546875);
      v1431.bezierCurveTo(p1073 * 216.5, p1073 * 170.546875, p1073 * 218.5, p1073 * 163.546875, p1073 * 225.5, p1073 * 160.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 205.5, p1073 * 194.546875);
      v1431.bezierCurveTo(p1073 * 216.5, p1073 * 192.546875, p1073 * 219.5, p1073 * 191.546875, p1073 * 225.5, p1073 * 185.546875);
      v1431.bezierCurveTo(p1073 * 232.5, p1073 * 193.546875, p1073 * 237.5, p1073 * 191.546875, p1073 * 246.5, p1073 * 192.546875);
      v1431.bezierCurveTo(p1073 * 249.5, p1073 * 202.546875, p1073 * 253.5, p1073 * 205.546875, p1073 * 258.5, p1073 * 207.546875);
      v1431.bezierCurveTo(p1073 * 259.5, p1073 * 222.546875, p1073 * 256.5, p1073 * 223.546875, p1073 * 265.5, p1073 * 226.546875);
      v1431.bezierCurveTo(p1073 * 256.5, p1073 * 231.546875, p1073 * 255.5, p1073 * 241.546875, p1073 * 259.5, p1073 * 248.546875);
      v1431.bezierCurveTo(p1073 * 250.5, p1073 * 245.546875, p1073 * 245.5, p1073 * 252.546875, p1073 * 243.5, p1073 * 260.546875);
      v1431.bezierCurveTo(p1073 * 234.5, p1073 * 256.546875, p1073 * 229.5, p1073 * 258.546875, p1073 * 223.5, p1073 * 265.546875);
      v1431.bezierCurveTo(p1073 * 218.5, p1073 * 255.546875, p1073 * 213.5, p1073 * 257.546875, p1073 * 204.5, p1073 * 261.546875);
      v1431.bezierCurveTo(p1073 * 203.5, p1073 * 251.546875, p1073 * 198.5, p1073 * 248.546875, p1073 * 189.5, p1073 * 244.546875);
      v1431.bezierCurveTo(p1073 * 194.5, p1073 * 237.546875, p1073 * 192.5, p1073 * 231.546875, p1073 * 184.5, p1073 * 225.546875);
      v1431.bezierCurveTo(p1073 * 191.5, p1073 * 211.546875, p1073 * 192.5, p1073 * 209.546875, p1073 * 190.5, p1073 * 204.546875);
      v1431.bezierCurveTo(p1073 * 200.5, p1073 * 204.546875, p1073 * 204.5, p1073 * 198.546875, p1073 * 207.5, p1073 * 194.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 149.5, p1073 * 93.546875);
      v1431.bezierCurveTo(p1073 * 287.5, p1073 * 332.546875, p1073 * 226, p1073 * 225.546875, p1073 * 302.5, p1073 * 357.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 224.5, p1073 * 66.546875);
      v1431.bezierCurveTo(p1073 * 224.5, p1073 * 223.546875, p1073 * 224.5, p1073 * 223.546875, p1073 * 224.5, p1073 * 380.546875);
      v1431.closePath();
      f90(v1431, vVVVUndefined823, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 302.5, p1073 * 88.546875);
      v1431.bezierCurveTo(p1073 * 222.5, p1073 * 227.546875, p1073 * 222.5, p1073 * 227.546875, p1073 * 142.5, p1073 * 366.546875);
      v1431.closePath();
      f90(v1431, vVVUndefined132, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 361.5, p1073 * 147.546875);
      v1431.bezierCurveTo(p1073 * 223, p1073 * 226.546875, p1073 * 223, p1073 * 226.546875, p1073 * 84.5, p1073 * 305.546875);
      v1431.closePath();
      f90(v1431, undefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 379.5, p1073 * 225.546875);
      v1431.bezierCurveTo(p1073 * 221, p1073 * 225.546875, p1073 * 221, p1073 * 225.546875, p1073 * 62.5, p1073 * 225.546875);
      v1431.closePath();
      f90(v1431, vVUndefined, p1074[0], 4);
      v1431.beginPath();
      v1431.lineCap = "round";
      v1431.lineJoin = "round";
      v1431.moveTo(p1073 * 90.5, p1073 * 147.546875);
      v1431.bezierCurveTo(p1073 * 226.5, p1073 * 226.546875, p1073 * 226.5, p1073 * 226.546875, p1073 * 362.5, p1073 * 305.546875);
      v1431.closePath();
      f90(v1431, vVVVUndefined132, p1074[0], 4);
      return v1430;
    }(0.6, ["#FFFFFF"]));
    ΔΔ[410] = [];
    ΔΔ[410][v624.Ⲇⵠᐃ] = f47(f113(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
    ΔΔ[410][v624.Δⵠⵠ] = f47(f113(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
    ΔΔ[10] = [];
    ΔΔ[10][v624.Ⲇⵠᐃ] = f47(f185(0.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
    ΔΔ[10][v624.Δⵠⵠ] = f47(f185(0.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
    ΔΔ[11] = [];
    ΔΔ[11][v624.Ⲇⵠᐃ] = f47(f238(0.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
    ΔΔ[11][v624.Δⵠⵠ] = f47(f238(0.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
    ΔΔ[67] = [];
    ΔΔ[67][v624.Ⲇⵠᐃ] = f47(f279(0.63, true, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
    ΔΔ[67][v624.Δⵠⵠ] = f47(f279(0.63, true, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
    ΔΔ[68] = [];
    ΔΔ[68][v624.Ⲇⵠᐃ] = f47(f130(0.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]));
    ΔΔ[68][v624.Δⵠⵠ] = f47(f130(0.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
    ΔΔ[69] = [];
    ΔΔ[69][v624.Ⲇⵠᐃ] = f47(f128(0.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]));
    ΔΔ[69][v624.Δⵠⵠ] = f47(f128(0.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"]));
    ΔΔ[965] = [];
    ΔΔ[965][v624.Ⲇⵠᐃ] = f47(f244(0.42, vVVVV30, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
    ΔΔ[965][v624.Δⵠⵠ] = f47(f244(0.42, vVV3022, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
    ΔΔ[969] = [];
    ΔΔ[969][v624.Ⲇⵠᐃ] = f47(f192(0.9, ["#e4c027"]));
    ΔΔ[969][v624.Δⵠⵠ] = f47(f192(0.9, ["#D8E57F"]));
    ΔΔ[237] = [];
    ΔΔ[237][v624.Ⲇⵠᐃ] = f47(f248(0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
    ΔΔ[237][v624.Δⵠⵠ] = f47(f248(0.42, vVV3023, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
    ΔΔ[971] = f47(function (p1075, p1076) {
      var v1432 = document.createElement("canvas");
      var v1433 = v1432.getContext("2d");
      v1432.width = p1075 * 149;
      v1432.height = p1075 * 356;
      v1433.save();
      v1433.translate(p1075 * 74.5, p1075 * 177.5);
      f87(v1433, p1075 * -57.5, p1075 * -161.5, p1075 * 100, p1075 * 323, p1075 * 10);
      v1433.restore();
      f90(v1433, p1076[0], p1076[1], p1075 * 4);
      v1433.save();
      v1433.translate(p1075 * 74.5, p1075 * 177.5);
      f87(v1433, p1075 * -57.5, p1075 * 50.5, p1075 * 100, p1075 * 105, p1075 * 10);
      v1433.restore();
      f90(v1433, p1076[6], p1076[1], p1075 * 4);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 125);
      v1433.bezierCurveTo(p1075 * 74.5, p1075 * 125, p1075 * 118, p1075 * 125, p1075 * 118, p1075 * 125);
      v1433.closePath();
      f90(v1433, p1076[2], p1076[2], p1075 * 10);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 120);
      v1433.bezierCurveTo(p1075 * 74.5, p1075 * 120, p1075 * 74.5, p1075 * 120, p1075 * 118, p1075 * 120);
      v1433.closePath();
      f90(v1433, p1076[3], p1076[3], p1075 * 10);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 228);
      v1433.bezierCurveTo(p1075 * 75, p1075 * 228.5, p1075 * 118, p1075 * 228.5, p1075 * 118, p1075 * 229);
      v1433.closePath();
      f90(v1433, p1076[2], p1076[2], p1075 * 10);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 224);
      v1433.bezierCurveTo(p1075 * 75, p1075 * 224, p1075 * 118, p1075 * 224, p1075 * 118, p1075 * 224);
      v1433.closePath();
      f90(v1433, p1076[3], p1076[3], p1075 * 10);
      v1433.save();
      v1433.translate(p1075 * 72, p1075 * 68.5);
      f87(v1433, p1075 * -41.5, p1075 * -36.5, p1075 * 73, p1075 * 73, p1075 * 13);
      v1433.restore();
      f90(v1433, p1076[4]);
      v1433.save();
      v1433.translate(p1075 * 72, p1075 * 175.5);
      f87(v1433, p1075 * -41.5, p1075 * -38.5, p1075 * 73, p1075 * 73, p1075 * 13);
      v1433.restore();
      f90(v1433, p1076[4]);
      v1433.save();
      v1433.translate(p1075 * 72, p1075 * 279.5);
      f87(v1433, p1075 * -41.5, p1075 * -40.5, p1075 * 73, p1075 * 73, p1075 * 13);
      v1433.restore();
      f90(v1433, p1076[4]);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 338);
      v1433.bezierCurveTo(p1075 * 75, p1075 * 338, p1075 * 118, p1075 * 338, p1075 * 118, p1075 * 338);
      v1433.closePath();
      f90(v1433, p1076[2], p1076[2], p1075 * 10);
      v1433.beginPath();
      v1433.lineCap = "round";
      v1433.lineJoin = "round";
      v1433.moveTo(p1075 * 16, p1075 * 333);
      v1433.bezierCurveTo(p1075 * 75, p1075 * 333, p1075 * 118, p1075 * 333, p1075 * 118, p1075 * 333);
      v1433.closePath();
      f90(v1433, p1076[3], p1076[3], p1075 * 10);
      return v1432;
    }(1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
    ΔΔ[518] = [];
    ΔΔ[518][v624.Ⲇⵠᐃ] = f47(f219(0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
    ΔΔ[518][v624.Δⵠⵠ] = f47(f219(0.5, vVVV3024, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
    ΔΔ[210] = [];
    ΔΔ[210][v624.Ⲇⵠᐃ] = f47(f191(0.5, v30, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"]));
    ΔΔ[210][v624.Δⵠⵠ] = f47(f191(0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"]));
    ΔΔ[522] = f47(function (p1077, p1078, p1079) {
      var v1434 = document.createElement("canvas");
      var v1435 = v1434.getContext("2d");
      v1434.width = p1077 * 118;
      v1434.height = p1077 * 129;
      v1435.save();
      v1435.translate(p1077 * 90, p1077 * 90);
      f87(v1435, p1077 * -86.5, p1077 * -86, p1077 * 110, p1077 * 110, p1077 * 15);
      v1435.restore();
      f90(v1435, p1079[0], p1079[1], 4);
      return v1434;
    }(0.8, 0, ["#5f6061", "#939393"]));
    ΔΔ[523] = f119(1, [{
      f: f135,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
    ΔΔ[300] = [];
    ΔΔ[300][v624.Ⲇⵠᐃ] = f47(f275(1, vVV302, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ΔΔ[300][v624.Δⵠⵠ] = f47(f275(1, vVV303, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ΔΔ[1189] = [];
    ΔΔ[1189][v624.Ⲇⵠᐃ] = f47(f200(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ΔΔ[1189][v624.Δⵠⵠ] = f47(f200(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ΔΔ[18] = [];
    ΔΔ[18][v624.Ⲇⵠᐃ] = f47(f95(3, f233(0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"])));
    ΔΔ[18][v624.Δⵠⵠ] = f47(f95(3, f233(0.7, vVV303, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
    ΔΔ[12] = [];
    ΔΔ[12][v624.Ⲇⵠᐃ] = f47(f95(3, f277(0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"])));
    ΔΔ[12][v624.Δⵠⵠ] = f47(f95(3, f277(0.7, vVV30, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"])));
    ΔΔ[13] = [];
    ΔΔ[13][v624.Ⲇⵠᐃ] = f47(f95(3, f215(0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"])));
    ΔΔ[13][v624.Δⵠⵠ] = f47(f95(3, f215(0.65, vVV303, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"])));
    ΔΔ[14] = [];
    ΔΔ[14][v624.Ⲇⵠᐃ] = f47(f95(3, f193(0.67, vV305, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"])));
    ΔΔ[14][v624.Δⵠⵠ] = f47(f95(3, f193(0.67, vVV304, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"])));
    ΔΔ[15] = [];
    ΔΔ[15][v624.Ⲇⵠᐃ] = f47(f95(3, f293(0.67, vVVVV30, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"])));
    ΔΔ[15][v624.Δⵠⵠ] = f47(f95(3, f293(0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"])));
    ΔΔ[60] = [];
    ΔΔ[60][v624.Ⲇⵠᐃ] = f47(f95(3, f276(0.67, vVV302, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"])));
    ΔΔ[60][v624.Δⵠⵠ] = f47(f95(3, f276(0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"])));
    ΔΔ[16] = [];
    ΔΔ[16][v624.Ⲇⵠᐃ] = f47(f95(3, f194(1, vV305, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
    ΔΔ[16][v624.Δⵠⵠ] = f47(f95(3, f194(1, vVVV3022, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"])));
    ΔΔ[62] = [];
    ΔΔ[62][v624.Ⲇⵠᐃ] = f47(f95(3, f271(1, vV30, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ΔΔ[62][v624.Δⵠⵠ] = f47(f95(3, f271(1, true, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
    ΔΔ[101] = [];
    ΔΔ[101][v624.Ⲇⵠᐃ] = f47(f95(3, f288(0.5, true, ["#0d1b1c", "#939393", "#5f6061"])));
    ΔΔ[101][v624.Δⵠⵠ] = f47(f95(3, f288(0.5, true, ["#030d14", "#485e66", "#1f343f"])));
    ΔΔ[72] = [];
    ΔΔ[72][v624.Ⲇⵠᐃ] = f47(f95(3, f186(1, true, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
    ΔΔ[72][v624.Δⵠⵠ] = f47(f95(3, f186(1, vVVV30, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
    ΔΔ[63] = [];
    ΔΔ[63][v624.Ⲇⵠᐃ] = f47(f95(3, f271(1, vVVV3022, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ΔΔ[63][v624.Δⵠⵠ] = f47(f95(3, f271(1, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
    ΔΔ[64] = [];
    ΔΔ[64][v624.Ⲇⵠᐃ] = f47(f95(3, f271(1, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ΔΔ[64][v624.Δⵠⵠ] = f47(f95(3, f271(1, vV304, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ΔΔ[65] = [];
    ΔΔ[65][v624.Ⲇⵠᐃ] = f47(f95(3, f271(1, vV30, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ΔΔ[65][v624.Δⵠⵠ] = f47(f95(3, f271(1, vVV306, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ΔΔ[241] = [];
    ΔΔ[241][v624.Ⲇⵠᐃ] = f47(f246(0.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
    ΔΔ[241][v624.Δⵠⵠ] = f47(f246(0.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
    ΔΔ[674] = [];
    ΔΔ[674].push(f47(f246(0.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
    ΔΔ[674].push(f47(f246(0.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
    ΔΔ[674].push(f47(f246(0.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
    ΔΔ[676] = [];
    ΔΔ[676].push(ΔΔ[674][0]);
    ΔΔ[676].push(ΔΔ[674][0]);
    ΔΔ[676].push(ΔΔ[674][0]);
    ΔΔ[260] = [];
    ΔΔ[260][v624.Ⲇⵠᐃ] = f47(f196(0.06, false, ["#141414", "#c4a23a", "#816511"]));
    ΔΔ[260][v624.Δⵠⵠ] = f47(f196(0.06, false, ["#030d14", "#2b6664", "#133d3c"]));
    ΔΔ[673] = [];
    ΔΔ[673].push(f47(f196(0.08, false, ["#141414", "#c4a23a", "#816511"])));
    ΔΔ[673].push(f47(f196(0.08, false, ["#141414", "#e2bd4e", "#a38018"])));
    ΔΔ[673].push(f47(f196(0.08, vVV3152, ["#141414", "#b0902e", "#634d09"])));
    ΔΔ[242] = f119(1.5, [{
      f: f234,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ΔΔ[664] = [];
    ΔΔ[664][v624.Ⲇⵠᐃ] = f47(f273(0.8, true, ["#347f93", "#54a4ba"]));
    ΔΔ[664][v624.Δⵠⵠ] = f47(f273(0.8, true, ["#98ede3", "#94f2e7"]));
    ΔΔ[665] = [];
    ΔΔ[665][v624.Ⲇⵠᐃ] = f47(f179(0.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
    ΔΔ[665][v624.Δⵠⵠ] = f47(f179(0.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
    ΔΔ[666] = [];
    ΔΔ[666][v624.Ⲇⵠᐃ] = f47(f225(0.8, 0, ["#a9e4ed", "#86d4e0"]));
    ΔΔ[666][v624.Δⵠⵠ] = f47(f225(0.8, 0, ["#83ddd4", "#485e66"]));
    ΔΔ[244] = [];
    ΔΔ[244][v624.Ⲇⵠᐃ] = f47(f287(0.8, vVVVV30, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"]));
    ΔΔ[244][v624.Δⵠⵠ] = f47(f287(0.8, true, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"]));
    ΔΔ[1547] = [];
    ΔΔ[1547][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃΔⵠⲆΔᐃ;
    ΔΔ[1547][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆᐃⲆᐃᐃⵠ;
    ΔΔ[1548] = [];
    ΔΔ[1548][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔΔⲆⵠⵠⲆ;
    ΔΔ[1548][v624.Δⵠⵠ] = ⵠᐃ.ⵠᐃΔΔⲆΔⲆ;
    ΔΔ[1549] = [];
    ΔΔ[1549][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔⲆΔΔⵠΔ;
    ΔΔ[1549][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆᐃⲆᐃΔⵠ;
    ΔΔ[245] = [];
    ΔΔ[245][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃΔᐃΔᐃᐃΔ;
    ΔΔ[245][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠᐃΔᐃⵠ;
    ΔΔ[1553] = [];
    ΔΔ[1553][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃᐃⵠΔᐃ;
    ΔΔ[1553][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔⲆᐃΔᐃ;
    ΔΔ[246] = [];
    ΔΔ[246][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠᐃⲆⵠⵠᐃ;
    ΔΔ[246][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠⲆⵠΔΔΔ;
    ΔΔ[1557] = [];
    ΔΔ[1557][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⲆⵠᐃⵠᐃ;
    ΔΔ[1557][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆᐃᐃⲆᐃᐃ;
    ΔΔ[247] = [];
    ΔΔ[247][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⵠᐃⲆⲆ;
    ΔΔ[247][v624.Δⵠⵠ] = ⵠᐃ.ᐃⵠᐃⲆΔⲆⵠ;
    ΔΔ[1561] = [];
    ΔΔ[1561][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃΔᐃᐃᐃ;
    ΔΔ[1561][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆⵠᐃᐃΔ;
    ΔΔ[248] = [];
    ΔΔ[248][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃᐃⲆⲆⲆⵠⲆ;
    ΔΔ[248][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⲆⵠⲆⲆΔ;
    ΔΔ[1565] = [];
    ΔΔ[1565][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔΔⵠⲆΔⵠ;
    ΔΔ[1565][v624.Δⵠⵠ] = ⵠᐃ.ΔᐃⵠᐃᐃᐃΔ;
    ΔΔ[249] = [];
    ΔΔ[249][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⵠΔΔⵠᐃⵠ;
    ΔΔ[249][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⵠⲆΔΔ;
    ΔΔ[1569] = [];
    ΔΔ[1569][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠⵠⵠᐃⵠⲆ;
    ΔΔ[1569][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆᐃⲆᐃᐃΔ;
    ΔΔ[250] = [];
    ΔΔ[250][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔΔΔΔᐃΔ;
    ΔΔ[250][v624.Δⵠⵠ] = ⵠᐃ.ⵠⵠⵠᐃΔᐃⲆ;
    ΔΔ[1573] = [];
    ΔΔ[1573][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠΔⵠΔᐃⲆⲆ;
    ΔΔ[1573][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠᐃⵠΔᐃΔ;
    ΔΔ[251] = [];
    ΔΔ[251][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⲆⵠΔⲆΔⵠ;
    ΔΔ[251][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃΔⲆΔⲆᐃ;
    ΔΔ[1577] = [];
    ΔΔ[1577][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔᐃⲆΔᐃΔ;
    ΔΔ[1577][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃΔᐃⵠⲆΔ;
    ΔΔ[252] = [];
    ΔΔ[252][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠⵠⵠΔΔᐃ;
    ΔΔ[252][v624.Δⵠⵠ] = ⵠᐃ.ΔⵠΔⵠΔⵠΔ;
    ΔΔ[1581] = [];
    ΔΔ[1581][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃⵠⵠΔⲆ;
    ΔΔ[1581][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔⲆᐃⲆᐃ;
    ΔΔ[253] = [];
    ΔΔ[253][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⵠⲆⵠⵠΔ;
    ΔΔ[253][v624.Δⵠⵠ] = ⵠᐃ.ΔⲆⵠⲆⵠⵠΔ;
    ΔΔ[1585] = [];
    ΔΔ[1585][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔⵠᐃᐃᐃ;
    ΔΔ[1585][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠⵠᐃⲆⲆ;
    ΔΔ[254] = [];
    ΔΔ[254][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⵠΔⲆᐃᐃᐃ;
    ΔΔ[254][v624.Δⵠⵠ] = ⵠᐃ.ⵠΔⵠΔᐃⲆᐃ;
    ΔΔ[1589] = [];
    ΔΔ[1589][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠⲆⵠⲆⲆ;
    ΔΔ[1589][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆⵠΔᐃΔⲆ;
    ΔΔ[255] = [];
    ΔΔ[255][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠⲆⲆⵠΔΔⵠ;
    ΔΔ[255][v624.Δⵠⵠ] = ⵠᐃ.ⲆⵠⲆΔΔⲆⵠ;
    ΔΔ[1593] = [];
    ΔΔ[1593][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔΔᐃᐃⵠΔⲆ;
    ΔΔ[1593][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆΔΔⵠᐃⲆ;
    ΔΔ[256] = [];
    ΔΔ[256][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆᐃⵠⵠᐃⵠⲆ;
    ΔΔ[256][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔΔΔΔⵠⵠ;
    ΔΔ[1597] = [];
    ΔΔ[1597][v624.Ⲇⵠᐃ] = ⵠᐃ.ⵠᐃⵠⲆᐃⵠΔ;
    ΔΔ[1597][v624.Δⵠⵠ] = ⵠᐃ.ⲆⲆⵠΔΔⲆᐃ;
    ΔΔ[257] = [];
    ΔΔ[257][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆⵠⵠΔΔᐃᐃ;
    ΔΔ[257][v624.Δⵠⵠ] = ⵠᐃ.ᐃⲆΔᐃⲆᐃΔ;
    ΔΔ[1601] = [];
    ΔΔ[1601][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔⵠⵠΔⵠ;
    ΔΔ[1601][v624.Δⵠⵠ] = ⵠᐃ.ΔΔΔⵠⲆⲆⲆ;
    ΔΔ[258] = [];
    ΔΔ[258][v624.Ⲇⵠᐃ] = ⵠᐃ.ⲆΔΔⲆⲆᐃᐃ;
    ΔΔ[258][v624.Δⵠⵠ] = ⵠᐃ.ⵠⲆⵠⵠⵠⵠΔ;
    ΔΔ[1605] = [];
    ΔΔ[1605][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔⲆᐃⲆⲆⲆⲆ;
    ΔΔ[1605][v624.Δⵠⵠ] = ⵠᐃ.ⲆᐃᐃᐃᐃⵠⲆ;
    ΔΔ[259] = [];
    ΔΔ[259][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⵠΔΔⵠⲆ;
    ΔΔ[259][v624.Δⵠⵠ] = ⵠᐃ.ⲆΔᐃΔⵠᐃⲆ;
    ΔΔ[355] = [];
    ΔΔ[355][v624.Ⲇⵠᐃ] = ⵠᐃ.ΔᐃⵠΔΔⲆᐃ;
    ΔΔ[355][v624.Δⵠⵠ] = ⵠᐃ.ᐃΔⵠⵠΔΔⵠ;
    ΔΔ[356] = ⵠᐃ.ⵠⵠΔⵠⵠᐃᐃ;
    ΔΔ[1755] = [];
    ΔΔ[1755][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1755][v624.Δⵠⵠ] = [];
    ΔΔ[1755][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃΔᐃΔⲆΔ);
    ΔΔ[1755][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔᐃᐃⵠⲆⵠ);
    ΔΔ[1755][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃⵠⵠⵠⵠᐃⲆ);
    ΔΔ[1755][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠⵠⲆⵠΔⵠᐃ);
    ΔΔ[1755][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆΔᐃⲆⲆΔ);
    ΔΔ[1755][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃⵠⵠΔⲆⲆ);
    ΔΔ[1755][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔⲆⵠⲆⲆΔ);
    ΔΔ[1755][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃⵠⲆⲆΔⲆ);
    ΔΔ[1755][v624.Δⵠⵠ].push(ⵠᐃ.ⲆΔⲆᐃⵠᐃⲆ);
    ΔΔ[1755][v624.Δⵠⵠ].push(ⵠᐃ.Δᐃᐃᐃᐃⵠᐃ);
    ΔΔ[1757] = [];
    ΔΔ[1757][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1757][v624.Δⵠⵠ] = [];
    ΔΔ[1757][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔⲆΔΔⵠⲆ);
    ΔΔ[1757][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃⵠΔⵠᐃⲆ);
    ΔΔ[1757][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃΔᐃᐃΔⲆ);
    ΔΔ[1757][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠⲆⲆⲆⵠⲆ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ] = [];
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Ⲇⵠᐃ] = [];
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Δⵠⵠ] = [];
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃΔⲆΔΔⵠⵠ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆᐃⵠⲆΔᐃⵠ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⲆᐃⲆⵠⲆΔ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⲆᐃΔⲆΔⵠ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⵠᐃⵠⵠΔⲆ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⲆΔⵠⵠᐃⵠ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ΔΔᐃΔΔⵠⵠ);
    ΔΔ[v624.ⲆⲆᐃⲆⵠΔᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⲆᐃⲆⲆⲆⵠⵠ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ] = [];
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ] = [];
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ] = [];
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃᐃΔᐃⲆΔⵠ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆΔⵠᐃⵠⲆⵠ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⵠᐃᐃⵠΔⵠ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔᐃⵠᐃΔᐃᐃ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⵠᐃⲆᐃⲆⵠᐃ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⲆⵠΔⲆΔΔ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃⲆᐃᐃΔΔ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ΔᐃᐃΔⵠΔⲆ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔⲆΔⵠᐃᐃ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ⲆⲆΔⲆΔⲆΔ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠⲆⵠⵠΔΔ);
    ΔΔ[v624.ΔⲆⵠⲆᐃ][v624.Δⵠⵠ].push(ⵠᐃ.ᐃΔΔⲆⲆⵠΔ);
    ΔΔ[1756] = [];
    ΔΔ[1756][v624.Ⲇⵠᐃ] = [];
    ΔΔ[1756][v624.Δⵠⵠ] = [];
    ΔΔ[1756][v624.Ⲇⵠᐃ].push(ⵠᐃ.ᐃᐃⵠΔΔⲆᐃ);
    ΔΔ[1756][v624.Ⲇⵠᐃ].push(ⵠᐃ.ⲆⵠΔⵠⵠⲆⵠ);
    ΔΔ[1756][v624.Ⲇⵠᐃ].push(ⵠᐃ.ΔⵠⲆⵠⵠΔⵠ);
    ΔΔ[1756][v624.Δⵠⵠ].push(ⵠᐃ.ⵠⵠΔⲆᐃⵠⵠ);
    ΔΔ[1756][v624.Δⵠⵠ].push(ⵠᐃ.ᐃⵠΔΔᐃⵠⲆ);
    ΔΔ[1756][v624.Δⵠⵠ].push(ⵠᐃ.ᐃᐃⵠᐃᐃⲆⵠ);
    ΔΔ[261] = [];
    ΔΔ[261][v624.Ⲇⵠᐃ] = f47(f190(0.75, vV304, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
    ΔΔ[261][v624.Δⵠⵠ] = f47(f190(0.75, true, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
    ΔΔ[723] = f47(f263(0.3, ["#092813", "#1f773d"], 0));
    ΔΔ[724] = f47(f263(0.3, ["#092813", "#1f773d"], 1));
    ΔΔ[1161] = f47(function (p1080, p1081) {
      var v1436 = document.createElement("canvas");
      var v1437 = v1436.getContext("2d");
      v1436.width = p1080 * 60;
      v1436.height = p1080 * 60;
      v1437.translate(p1080 * -25, p1080 * -25);
      v1437.translate(0, p1080 * 5);
      v1437.beginPath();
      v1437.lineCap = "round";
      v1437.lineJoin = "round";
      v1437.moveTo(p1080 * 24, p1080 * 50);
      v1437.bezierCurveTo(p1080 * 32.5, p1080 * 54.5, p1080 * 32.5, p1080 * 54.5, p1080 * 41, p1080 * 59);
      v1437.bezierCurveTo(p1080 * 57, p1080 * 47, p1080 * 57, p1080 * 47, p1080 * 73, p1080 * 35);
      v1437.bezierCurveTo(p1080 * 57, p1080 * 53, p1080 * 57, p1080 * 53, p1080 * 41, p1080 * 71);
      v1437.closePath();
      f90(v1437, p1081[0]);
      v1437.translate(0, p1080 * -5);
      v1437.beginPath();
      v1437.lineCap = "round";
      v1437.lineJoin = "round";
      v1437.moveTo(p1080 * 24, p1080 * 50);
      v1437.bezierCurveTo(p1080 * 32.5, p1080 * 54.5, p1080 * 32.5, p1080 * 54.5, p1080 * 41, p1080 * 59);
      v1437.bezierCurveTo(p1080 * 57, p1080 * 47, p1080 * 57, p1080 * 47, p1080 * 73, p1080 * 35);
      v1437.bezierCurveTo(p1080 * 57, p1080 * 53, p1080 * 57, p1080 * 53, p1080 * 41, p1080 * 71);
      v1437.closePath();
      f90(v1437, p1081[1]);
      return v1436;
    }(0.6, ["#092813", "#1f773d"]));
    ΔΔ[721] = [];
    ΔΔ[721].push(f47(f211(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
    ΔΔ[721].push(f47(f211(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
    ΔΔ[721].push(f47(f211(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
    ΔΔ[725] = [];
    var vF47 = f47(f211(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
    ΔΔ[725].push(vF47);
    ΔΔ[725].push(vF47);
    ΔΔ[725].push(vF47);
    ΔΔ[722] = [];
    ΔΔ[722].push(f47(f211(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
    ΔΔ[722].push(f47(f211(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
    ΔΔ[722].push(f47(f211(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
    ΔΔ[900] = f47(function (p1082, p1083) {
      var v1438 = document.createElement("canvas");
      var v1439 = v1438.getContext("2d");
      var v1440 = p1082 * 170;
      var v1441 = p1082 * 172;
      var v1442 = v1440 / 2;
      var v1443 = v1441 / 2;
      v1438.width = v1440;
      v1438.height = v1441;
      v1439.translate(v1442, v1443);
      v1439.save();
      for (var v1444 = 0; v1444 < 10; v1444++) {
        v1439.rotate(Math.PI / 5);
        v1439.save();
        v1439.translate(p1082 * 65, 0);
        f88(v1439, 3, p1082 * 18, p1082 * 4);
        f90(v1439, p1083[0]);
        v1439.restore();
      }
      v1439.restore();
      f93(v1439, 0, 0, p1082 * 40);
      f90(v1439, vVVUndefined132, p1083[0], p1082 * 6);
      f93(v1439, 0, 0, p1082 * 20);
      f90(v1439, p1083[0]);
      return v1438;
    }(0.3, ["#FFFFFF"]));
    ΔΔ[1043] = f47(function (p1084, p1085) {
      var v1445 = document.createElement("canvas");
      var v1446 = v1445.getContext("2d");
      var v1447 = p1084 * 130;
      var v1448 = p1084 * 142;
      var v1449 = v1447 / 2;
      var v1450 = v1448 / 2;
      v1445.width = v1447;
      v1445.height = v1448;
      f93(v1446, v1449, v1450, p1084 * 40);
      f90(v1446, undefined, p1085[0], p1084 * 7);
      f93(v1446, v1449, v1450, p1084 * 30);
      f90(v1446, vVVVUndefined822, p1085[0], p1084 * 7);
      f93(v1446, v1449, v1450, p1084 * 20);
      f90(v1446, p1085[0]);
      return v1445;
    }(0.3, ["#FFFFFF"]));
    ΔΔ[727] = f47(f263(0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
    ΔΔ[886] = f47(f95(Math.PI / 5, function (p1086, p1087) {
      var v1451 = document.createElement("canvas");
      var v1452 = v1451.getContext("2d");
      v1451.width = p1086 * 316;
      v1451.height = p1086 * 365;
      v1452.save();
      v1452.translate(p1086 * 156.07142639160156, p1086 * 51.81248474121094);
      v1452.rotate(0);
      f87(v1452, p1086 * -21.5, p1086 * -34, p1086 * 43, p1086 * 68, p1086 * 8);
      v1452.restore();
      f90(v1452, p1087[0], p1087[0], p1086 * 15);
      v1452.beginPath();
      v1452.lineCap = "round";
      v1452.lineJoin = "round";
      v1452.moveTo(p1086 * 126.57142639160156, p1086 * 67.38392639160156);
      v1452.bezierCurveTo(p1086 * 126.57142639160156, p1086 * 57.38392639160156, p1086 * 132.57142639160156, p1086 * 54.38392639160156, p1086 * 140.57142639160156, p1086 * 54.38392639160156);
      v1452.bezierCurveTo(p1086 * 177.57142639160156, p1086 * 55.38392639160156, p1086 * 158.07142639160156, p1086 * 54.38392639160156, p1086 * 175.57142639160156, p1086 * 54.38392639160156);
      v1452.bezierCurveTo(p1086 * 185.57142639160156, p1086 * 56.38392639160156, p1086 * 185.57142639160156, p1086 * 57.38392639160156, p1086 * 184.57142639160156, p1086 * 66.38392639160156);
      v1452.bezierCurveTo(p1086 * 184.57142639160156, p1086 * 78.38392639160156, p1086 * 184.57142639160156, p1086 * 89.38392639160156, p1086 * 184.57142639160156, p1086 * 90.38392639160156);
      v1452.bezierCurveTo(p1086 * 177.57142639160156, p1086 * 107.38392639160156, p1086 * 180.57142639160156, p1086 * 112.38392639160156, p1086 * 189.57142639160156, p1086 * 116.38392639160156);
      v1452.bezierCurveTo(p1086 * 212.57142639160156, p1086 * 127.38392639160156, p1086 * 212.57142639160156, p1086 * 132.38392639160156, p1086 * 211.57142639160156, p1086 * 150.38392639160156);
      v1452.bezierCurveTo(p1086 * 211.57142639160156, p1086 * 227.59821128845215, p1086 * 211.57142639160156, p1086 * 227.59821128845215, p1086 * 211.57142639160156, p1086 * 304.81249618530273);
      v1452.bezierCurveTo(p1086 * 212.57142639160156, p1086 * 328.81249618530273, p1086 * 209.57142639160156, p1086 * 330.81249618530273, p1086 * 188.57142639160156, p1086 * 333.81249618530273);
      v1452.bezierCurveTo(p1086 * 155.07142639160156, p1086 * 333.31249618530273, p1086 * 155.07142639160156, p1086 * 333.31249618530273, p1086 * 121.57142639160156, p1086 * 332.81249618530273);
      v1452.bezierCurveTo(p1086 * 104.57142639160156, p1086 * 327.81249618530273, p1086 * 105.57142639160156, p1086 * 328.81249618530273, p1086 * 104.57142639160156, p1086 * 312.81249618530273);
      v1452.bezierCurveTo(p1086 * 104.57142639160156, p1086 * 228.16963958740234, p1086 * 104.57142639160156, p1086 * 228.16963958740234, p1086 * 104.57142639160156, p1086 * 143.52678298950195);
      v1452.bezierCurveTo(p1086 * 106.57142639160156, p1086 * 124.52678298950195, p1086 * 110.57142639160156, p1086 * 123.52678298950195, p1086 * 123.57142639160156, p1086 * 116.52678298950195);
      v1452.bezierCurveTo(p1086 * 136.57142639160156, p1086 * 110.52678298950195, p1086 * 130.57142639160156, p1086 * 106.52678298950195, p1086 * 126.57142639160156, p1086 * 98.52678298950195);
      v1452.closePath();
      f90(v1452, p1087[0], p1087[0], p1086 * 15);
      v1452.beginPath();
      v1452.lineCap = "round";
      v1452.lineJoin = "round";
      v1452.moveTo(p1086 * 125.57142639160156, p1086 * 156.66963958740234);
      v1452.bezierCurveTo(p1086 * 125.57142639160156, p1086 * 182.66963958740234, p1086 * 125.57142639160156, p1086 * 182.66963958740234, p1086 * 125.57142639160156, p1086 * 208.66963958740234);
      v1452.closePath();
      f90(v1452, p1087[0], p1087[0], p1086 * 15);
      return v1451;
    }(0.2, ["#FFFFFF"])));
    ΔΔ[70] = [];
    ΔΔ[70][v624.Ⲇⵠᐃ] = f47(f213(0.85, 0, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
    ΔΔ[70][v624.Δⵠⵠ] = f47(f213(0.85, 0, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"]));
    ΔΔ[726] = [];
    ΔΔ[726].push(f47(f211(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
    ΔΔ[726].push(f47(f211(0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
    ΔΔ[726].push(f47(f211(0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
    ΔΔ[156] = [];
    ΔΔ[156][v624.Ⲇⵠᐃ] = f47(f260(0.37, 0, ["#2a2938", "#242330", "#313041"]));
    ΔΔ[156][v624.Δⵠⵠ] = f47(f260(0.37, 0, ["#1b1e30", "#161921", "#252f3e"]));
    ΔΔ[158] = [];
    ΔΔ[158][v624.Ⲇⵠᐃ] = f47(f221(0.17, 0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
    ΔΔ[158][v624.Δⵠⵠ] = f47(f221(0.17, 0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
    ΔΔ[159] = [];
    ΔΔ[159][v624.Ⲇⵠᐃ] = f47(f235(0.55, vVVVV30, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
    ΔΔ[159][v624.Δⵠⵠ] = f47(f235(0.55, true, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
    ΔΔ[157] = [];
    ΔΔ[157][v624.Ⲇⵠᐃ] = f47(f235(0.55, vVV303, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0));
    ΔΔ[157][v624.Δⵠⵠ] = f47(f235(0.55, true, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
    ΔΔ[150] = [];
    ΔΔ[150][v624.Ⲇⵠᐃ] = f47(f226(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]));
    ΔΔ[150][v624.Δⵠⵠ] = f47(f226(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"]));
    ΔΔ[151] = [];
    ΔΔ[151][v624.Ⲇⵠᐃ] = f47(f226(0.2, vVVV3024, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]));
    ΔΔ[151][v624.Δⵠⵠ] = f47(f226(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"]));
    ΔΔ[152] = [];
    ΔΔ[152][v624.Ⲇⵠᐃ] = f47(f226(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]));
    ΔΔ[152][v624.Δⵠⵠ] = f47(f226(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"]));
    ΔΔ[107] = [];
    ΔΔ[107][v624.Ⲇⵠᐃ] = f47(f285(0.24, true, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
    ΔΔ[107][v624.Δⵠⵠ] = f47(f285(0.24, vVV3032, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
    ΔΔ[105] = [];
    ΔΔ[105][v624.Ⲇⵠᐃ] = f47(f232(0.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
    ΔΔ[105][v624.Δⵠⵠ] = f47(f232(0.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
    ΔΔ[108] = [];
    ΔΔ[108][v624.Ⲇⵠᐃ] = f47(f95(3, f183(0.9, vVVV3024, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
    ΔΔ[108][v624.Δⵠⵠ] = f47(f95(3, f183(0.9, true, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
    ΔΔ[999] = [];
    ΔΔ[999][v624.Ⲇⵠᐃ] = f47(f95(3, f183(1, vVV302, [vVVVVUndefined132, undefined, undefined, "#c8efef", "#c8efef"])));
    ΔΔ[999][v624.Δⵠⵠ] = f47(f95(3, f183(1, true, [undefined, vVUndefined8, undefined, "#87d2e6", "#87d2e6"])));
    ΔΔ[1004] = [];
    ΔΔ[1004].push(f47(f224(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0)));
    ΔΔ[1004].push(f47(f224(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1)));
    ΔΔ[1004].push(f47(f224(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1)));
    ΔΔ[1044] = [];
    ΔΔ[1044].push(f47(f266(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
    ΔΔ[1044].push(f47(f266(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ΔΔ[1044].push(f47(f266(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ΔΔ[1031] = [];
    ΔΔ[1031].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
    ΔΔ[1031].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
    ΔΔ[1031].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
    ΔΔ[1032] = [];
    ΔΔ[1032].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
    ΔΔ[1032].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
    ΔΔ[1032].push(f47(f127(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
    ΔΔ[82] = [];
    ΔΔ[82][v624.Ⲇⵠᐃ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"])));
    ΔΔ[82][v624.Δⵠⵠ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"])));
    ΔΔ[86] = [];
    ΔΔ[86][v624.Ⲇⵠᐃ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"])));
    ΔΔ[86][v624.Δⵠⵠ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"])));
    ΔΔ[87] = [];
    ΔΔ[87][v624.Ⲇⵠᐃ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"])));
    ΔΔ[87][v624.Δⵠⵠ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"])));
    ΔΔ[88] = [];
    ΔΔ[88][v624.Ⲇⵠᐃ] = f47(f95(3, f195(0.7, vV303, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"])));
    ΔΔ[88][v624.Δⵠⵠ] = f47(f95(3, f195(0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"])));
    ΔΔ[811] = [];
    ΔΔ[811].push(f47(f278(0.7, ["#3b330d", "#b5a118", "#c8ac16"])));
    ΔΔ[811].push(f47(f278(0.7, ["#524712", "#c7b11c", "#d9ba18"])));
    ΔΔ[811].push(f47(f278(0.7, ["#2a2409", "#9f8e14", "#ad9511"])));
    ΔΔ[437] = f47(function (p1088, p1089) {
      var v1453 = document.createElement("canvas");
      var v1454 = v1453.getContext("2d");
      v1453.width = p1088 * 188;
      v1453.height = p1088 * 190;
      v1454.beginPath();
      v1454.lineCap = "round";
      v1454.lineJoin = "round";
      v1454.moveTo(p1088 * 33.00567626953125, p1088 * 95.44320678710938);
      v1454.bezierCurveTo(p1088 * 42.00567626953125, p1088 * 87.44320678710938, p1088 * 48.00567626953125, p1088 * 51.443206787109375, p1088 * 74.00567626953125, p1088 * 47.443206787109375);
      v1454.bezierCurveTo(p1088 * 100.00567626953125, p1088 * 42.443206787109375, p1088 * 118.00567626953125, p1088 * 49.443206787109375, p1088 * 131.00567626953125, p1088 * 55.443206787109375);
      v1454.bezierCurveTo(p1088 * 140.00567626953125, p1088 * 70.44320678710938, p1088 * 145.00567626953125, p1088 * 87.44320678710938, p1088 * 152.00567626953125, p1088 * 94.44320678710938);
      v1454.bezierCurveTo(p1088 * 149.00567626953125, p1088 * 99.44320678710938, p1088 * 147.00567626953125, p1088 * 98.44320678710938, p1088 * 141.00567626953125, p1088 * 101.44320678710938);
      v1454.bezierCurveTo(p1088 * 147.00567626953125, p1088 * 108.44320678710938, p1088 * 147.00567626953125, p1088 * 111.44320678710938, p1088 * 147.00567626953125, p1088 * 112.44320678710938);
      v1454.bezierCurveTo(p1088 * 143.00567626953125, p1088 * 112.44320678710938, p1088 * 141.00567626953125, p1088 * 112.44320678710938, p1088 * 137.00567626953125, p1088 * 111.44320678710938);
      v1454.bezierCurveTo(p1088 * 138.00567626953125, p1088 * 117.44320678710938, p1088 * 138.00567626953125, p1088 * 120.44320678710938, p1088 * 138.00567626953125, p1088 * 124.44320678710938);
      v1454.bezierCurveTo(p1088 * 125.00567626953125, p1088 * 107.44320678710938, p1088 * 121.00567626953125, p1088 * 124.44320678710938, p1088 * 110.00567626953125, p1088 * 141.44320678710938);
      v1454.bezierCurveTo(p1088 * 102.00567626953125, p1088 * 158.44320678710938, p1088 * 89.00567626953125, p1088 * 158.44320678710938, p1088 * 80.00567626953125, p1088 * 144.44320678710938);
      v1454.bezierCurveTo(p1088 * 61.00567626953125, p1088 * 111.44320678710938, p1088 * 56.00567626953125, p1088 * 117.44320678710938, p1088 * 48.00567626953125, p1088 * 120.44320678710938);
      v1454.bezierCurveTo(p1088 * 46.00567626953125, p1088 * 118.44320678710938, p1088 * 47.00567626953125, p1088 * 112.44320678710938, p1088 * 48.00567626953125, p1088 * 107.44320678710938);
      v1454.bezierCurveTo(p1088 * 43.00567626953125, p1088 * 111.44320678710938, p1088 * 40.00567626953125, p1088 * 111.44320678710938, p1088 * 37.00567626953125, p1088 * 110.44320678710938);
      v1454.bezierCurveTo(p1088 * 39.50567626953125, p1088 * 104.94320678710938, p1088 * 39.50567626953125, p1088 * 104.94320678710938, p1088 * 42.00567626953125, p1088 * 99.44320678710938);
      v1454.bezierCurveTo(p1088 * 33.00567626953125, p1088 * 99.44320678710938, p1088 * 33.00567626953125, p1088 * 98.44320678710938, p1088 * 33.00567626953125, p1088 * 96.44320678710938);
      v1454.closePath();
      f90(v1454, p1089[0], p1089[0], p1088 * 4);
      v1454.beginPath();
      v1454.lineCap = "round";
      v1454.lineJoin = "round";
      v1454.moveTo(p1088 * 51.00567626953125, p1088 * 72.53409576416016);
      v1454.bezierCurveTo(p1088 * 48.00567626953125, p1088 * 56.534095764160156, p1088 * 48.00567626953125, p1088 * 49.534095764160156, p1088 * 54.00567626953125, p1088 * 35.534095764160156);
      v1454.bezierCurveTo(p1088 * 58.00567626953125, p1088 * 26.534095764160156, p1088 * 65.00567626953125, p1088 * 27.534095764160156, p1088 * 73.00567626953125, p1088 * 40.534095764160156);
      v1454.bezierCurveTo(p1088 * 81.00567626953125, p1088 * 49.534095764160156, p1088 * 82.00567626953125, p1088 * 50.534095764160156, p1088 * 83.00567626953125, p1088 * 51.534095764160156);
      v1454.bezierCurveTo(p1088 * 77.00567626953125, p1088 * 71.53409576416016, p1088 * 64.00567626953125, p1088 * 75.53409576416016, p1088 * 51.00567626953125, p1088 * 72.53409576416016);
      v1454.closePath();
      f90(v1454, p1089[0], p1089[0], p1088 * 2);
      v1454.beginPath();
      v1454.lineCap = "round";
      v1454.lineJoin = "round";
      v1454.moveTo(p1088 * 105.00567626953125, p1088 * 50.53410339355469);
      v1454.bezierCurveTo(p1088 * 112.00567626953125, p1088 * 48.53410339355469, p1088 * 125.00567626953125, p1088 * 21.534103393554688, p1088 * 132.00567626953125, p1088 * 33.53410339355469);
      v1454.bezierCurveTo(p1088 * 138.00567626953125, p1088 * 42.53410339355469, p1088 * 140.00567626953125, p1088 * 64.53410339355469, p1088 * 136.00567626953125, p1088 * 75.53410339355469);
      v1454.closePath();
      f90(v1454, p1089[0], p1089[0], p1088 * 2);
      return v1453;
    }(1.1, ["#BB0000"]));
    ΔΔ[444] = f47(f95(Math.PI, function (p1090, p1091) {
      var v1455 = document.createElement("canvas");
      var v1456 = v1455.getContext("2d");
      v1455.width = p1090 * 238;
      v1455.height = p1090 * 230;
      v1456.translate(p1090 * -93, p1090 * -110);
      f93(v1456, p1090 * 213.5, p1090 * 256.75, p1090 * 75);
      f90(v1456, p1091);
      f93(v1456, p1090 * 213.5, p1090 * 175.75, p1090 * 25);
      f90(v1456, p1091);
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 156.5, p1090 * 137.75);
      v1456.bezierCurveTo(p1090 * 170.5, p1090 * 173.75, p1090 * 195.5, p1090 * 177.75, p1090 * 209.5, p1090 * 177.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 217.5, p1090 * 178.75);
      v1456.bezierCurveTo(p1090 * 251.5, p1090 * 177.75, p1090 * 263.5, p1090 * 153.75, p1090 * 270.5, p1090 * 140.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 130.5, p1090 * 124.75);
      v1456.bezierCurveTo(p1090 * 153.5, p1090 * 185.75, p1090 * 198.5, p1090 * 185.75, p1090 * 213.5, p1090 * 185.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 214.5, p1090 * 183.75);
      v1456.bezierCurveTo(p1090 * 265.5, p1090 * 192.75, p1090 * 293.5, p1090 * 141.75, p1090 * 297.5, p1090 * 124.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 107.5, p1090 * 213.75);
      v1456.bezierCurveTo(p1090 * 151.5, p1090 * 190.75, p1090 * 198.5, p1090 * 184.75, p1090 * 210.5, p1090 * 184.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 212.5, p1090 * 187.75);
      v1456.bezierCurveTo(p1090 * 258.5, p1090 * 182.75, p1090 * 286.5, p1090 * 194.75, p1090 * 314.5, p1090 * 206.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 102.5, p1090 * 258.75);
      v1456.bezierCurveTo(p1090 * 142.5, p1090 * 200.75, p1090 * 193.5, p1090 * 194.75, p1090 * 211.5, p1090 * 185.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 214.5, p1090 * 192.75);
      v1456.bezierCurveTo(p1090 * 276.5, p1090 * 194.75, p1090 * 306.5, p1090 * 233.75, p1090 * 316.5, p1090 * 246.75);
      v1456.lineWidth = p1090 * 17;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 219.5, p1090 * 158.75);
      v1456.bezierCurveTo(p1090 * 226.5, p1090 * 159.75, p1090 * 227.5, p1090 * 147.75, p1090 * 219.5, p1090 * 145.75);
      v1456.closePath();
      v1456.lineWidth = p1090 * 10;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      v1456.beginPath();
      v1456.lineCap = "round";
      v1456.lineJoin = "round";
      v1456.moveTo(p1090 * 210.5, p1090 * 160.75);
      v1456.bezierCurveTo(p1090 * 203.5, p1090 * 159.75, p1090 * 199.5, p1090 * 146.75, p1090 * 210.5, p1090 * 145.75);
      v1456.closePath();
      v1456.lineWidth = p1090 * 10;
      v1456.strokeStyle = p1091;
      v1456.stroke();
      return v1455;
    }(0.9, "#BB0000")));
    ΔΔ[32] = [];
    ΔΔ[32][v624.Ⲇⵠᐃ] = f47(f270(0.55, vVV303, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
    ΔΔ[32][v624.Δⵠⵠ] = f47(f270(0.55, vVVV3024, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"]));
    ΔΔ[104] = [];
    ΔΔ[104][v624.Ⲇⵠᐃ] = f47(f237(0.55, vVVVV30, ["#252525", "#73583e", "#573f29", "#7d6144"]));
    ΔΔ[104][v624.Δⵠⵠ] = f47(f237(0.55, true, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
    ΔΔ[34] = [];
    ΔΔ[34][v624.Ⲇⵠᐃ] = f47(f227(0.6, vVV306, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]));
    ΔΔ[34][v624.Δⵠⵠ] = f47(f227(0.6, vVV302, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"]));
    ΔΔ[35] = [];
    ΔΔ[35][v624.Ⲇⵠᐃ] = f47(f197(0.58, 0, ["#dbce71", "#b29c32", "#c4bc51"]));
    ΔΔ[35][v624.Δⵠⵠ] = f47(f197(0.58, 0, ["#2b7c57", "#15543c", "#1a7961"]));
    ΔΔ[36] = [];
    ΔΔ[36][v624.Ⲇⵠᐃ] = f47(f181(0.69, 0, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
    ΔΔ[36][v624.Δⵠⵠ] = f47(f181(0.69, 0, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"]));
    ΔΔ[524] = [];
    ΔΔ[524][v624.Ⲇⵠᐃ] = [];
    ΔΔ[524][v624.Δⵠⵠ] = [];
    ΔΔ[524][v624.Ⲇⵠᐃ].push(f47(f284(1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"])));
    ΔΔ[524][v624.Ⲇⵠᐃ].push(f47(f282(1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"])));
    ΔΔ[524][v624.Ⲇⵠᐃ].push(f47(f272(1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
    ΔΔ[524][v624.Δⵠⵠ].push(f47(f284(1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"])));
    ΔΔ[524][v624.Δⵠⵠ].push(f47(f282(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"])));
    ΔΔ[524][v624.Δⵠⵠ].push(f47(f272(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"])));
    ΔΔ[587] = [];
    ΔΔ[587][v624.Ⲇⵠᐃ] = f47(f247(1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"]));
    ΔΔ[587][v624.Δⵠⵠ] = f47(f247(1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"]));
    ΔΔ[589] = [];
    ΔΔ[589][v624.Ⲇⵠᐃ] = f47(f269(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ΔΔ[589][v624.Δⵠⵠ] = f47(f269(1, ["#050505", "#327570", "#021724", "#200333"]));
    ΔΔ[590] = [];
    ΔΔ[590][v624.Ⲇⵠᐃ] = f47(f289(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ΔΔ[590][v624.Δⵠⵠ] = f47(f289(1, ["#050505", "#327570", "#021724", "#200333"]));
    ΔΔ[353] = [];
    ΔΔ[353][v624.Ⲇⵠᐃ] = [];
    ΔΔ[353][v624.Δⵠⵠ] = [];
    ΔΔ[353][v624.Ⲇⵠᐃ] = [ⵠᐃ.ΔᐃⵠⲆᐃⲆⵠⲆᐃ, ⵠᐃ.ⵠᐃⵠΔΔΔⲆⲆⵠ, ⵠᐃ.ⲆᐃΔΔⲆⲆΔΔⵠ, ⵠᐃ.ⲆⲆⲆⵠⵠⵠᐃΔⵠ, ⵠᐃ.ⵠⲆⵠⵠΔᐃⵠⵠᐃ, ⵠᐃ.ΔΔᐃⲆᐃⲆⲆⲆᐃ, ⵠᐃ.ⵠΔⵠᐃⲆⵠᐃΔᐃ, ⵠᐃ.ⵠⲆⵠⲆⵠⲆᐃⵠⵠ, ⵠᐃ.ⲆⵠⵠⲆⵠⲆᐃᐃⲆ, ⵠᐃ.ΔⲆᐃᐃⲆᐃⵠᐃᐃ, ⵠᐃ.ᐃΔⵠΔⲆΔΔⲆᐃ, ⵠᐃ.ⲆⵠᐃⲆⲆΔⵠΔᐃ, ⵠᐃ.ⵠᐃΔⲆⲆΔΔΔⵠ, ⵠᐃ.ⲆⲆΔⵠⲆⵠⲆⵠⲆ, ⵠᐃ.ⵠᐃⲆΔᐃⲆⲆᐃⲆ, ⵠᐃ.ⲆⵠᐃᐃⵠΔⲆᐃΔ, ⵠᐃ.ⵠΔΔⵠᐃΔⲆΔᐃ, ⵠᐃ.ᐃᐃΔⵠᐃⲆⵠⵠᐃ, ⵠᐃ.ᐃⵠΔⲆΔⵠΔⵠⲆ, ⵠᐃ.ⲆⵠⲆⵠΔⲆᐃᐃⲆ, ⵠᐃ.ⵠⵠᐃⵠΔⵠΔΔᐃ, ⵠᐃ.ⲆΔⲆᐃᐃⵠᐃⵠⵠ, ⵠᐃ.ᐃᐃⲆⲆⲆⲆⲆⲆⵠ, ⵠᐃ.ⵠⵠΔⲆᐃΔⲆᐃΔ, ⵠᐃ.ⲆⵠΔᐃΔᐃΔΔΔ, ⵠᐃ.ᐃⲆΔⵠⲆᐃΔⵠᐃ, ⵠᐃ.ᐃⵠⲆΔⵠᐃⵠⲆΔ, ⵠᐃ.ⵠⲆᐃⵠⲆΔᐃⲆⵠ, ⵠᐃ.ΔⵠΔⵠΔΔⲆⲆⵠ, ⵠᐃ.ⵠᐃΔᐃΔⲆⲆᐃΔ, ⵠᐃ.ⵠⲆⲆⵠΔⵠⲆᐃⵠ, ⵠᐃ.ΔⵠⲆⵠⲆⵠΔᐃⲆ, ⵠᐃ.ΔΔⲆⵠᐃΔᐃΔᐃ, ⵠᐃ.ⵠⲆⲆⵠᐃΔⵠⵠᐃ, ⵠᐃ.ᐃⵠⵠΔΔⲆⵠⵠΔ, ⵠᐃ.ⲆᐃᐃⲆⲆΔⲆΔⵠ, ⵠᐃ.ⲆⵠⲆⲆᐃⵠⵠΔⵠ, ⵠᐃ.ⵠΔⵠΔⲆΔΔᐃⵠ, ⵠᐃ.ⲆⵠᐃᐃⲆΔΔΔⵠ, ⵠᐃ.ᐃΔⵠᐃⵠⵠΔⵠⵠ, ⵠᐃ.ⲆⵠⵠᐃⵠⲆⵠⵠⲆ, ⵠᐃ.ⲆⵠⲆⵠⲆⲆΔⵠᐃ, ⵠᐃ.ⵠⲆΔᐃⵠΔᐃᐃΔ, ⵠᐃ.ⵠᐃᐃᐃⵠⵠΔᐃⲆ, ⵠᐃ.ΔⲆⵠⵠⲆΔᐃⲆΔ, ⵠᐃ.ⵠᐃⲆᐃᐃⵠⵠᐃΔ, ⵠᐃ.ΔⵠⲆΔⲆΔⵠⲆⲆ, ⵠᐃ.ΔⲆᐃΔⵠᐃⵠⵠᐃ, ⵠᐃ.ᐃᐃᐃΔⲆΔⵠⵠΔ, ⵠᐃ.ΔⵠⲆⲆⲆⵠΔΔᐃ, ⵠᐃ.ⵠΔⲆⲆΔΔᐃΔΔ, ⵠᐃ.ⵠⵠᐃⲆⲆⵠΔΔΔ, ⵠᐃ.ᐃΔⲆⵠΔⵠⲆΔⲆ, ⵠᐃ.ⵠⲆⲆⲆᐃⲆΔΔΔ, ⵠᐃ.ᐃᐃΔⵠᐃΔΔⲆⵠ, ⵠᐃ.ⵠⵠᐃΔⵠⵠᐃΔⲆ, ⵠᐃ.ⲆⲆⲆⵠᐃⵠⲆᐃⲆ, ⵠᐃ.ⵠΔⲆⵠᐃⲆⲆᐃᐃ, ⵠᐃ.ⵠΔⵠΔⲆⲆᐃᐃΔ, ⵠᐃ.ⵠⵠⲆᐃⵠΔⲆⲆⲆ, ⵠᐃ.ⵠⵠⵠᐃⲆΔΔⲆⵠ, ⵠᐃ.ΔⵠⵠⲆΔᐃⵠⵠΔ, ⵠᐃ.ΔΔⵠⵠᐃᐃᐃΔⵠ, ⵠᐃ.ⲆⲆⵠᐃΔⲆᐃⲆΔ, ⵠᐃ.ᐃⲆᐃᐃⲆᐃᐃᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔⲆⲆᐃⲆ];
    ΔΔ[353][v624.Δⵠⵠ] = [ⵠᐃ.ᐃⵠⲆⵠⵠΔⵠⵠⵠ, ⵠᐃ.ⵠΔⲆᐃᐃⵠᐃᐃΔ, ⵠᐃ.ⲆᐃⲆⵠⲆⲆΔⵠⲆ, ⵠᐃ.ⲆⲆⵠⵠᐃΔΔΔⵠ, ⵠᐃ.ⵠΔᐃⲆᐃΔΔⵠⵠ, ⵠᐃ.ⲆⲆⲆⲆΔⵠⲆᐃᐃ, ⵠᐃ.ⵠΔΔᐃΔⵠᐃᐃⲆ, ⵠᐃ.ⵠⲆⲆΔⵠΔᐃᐃΔ, ⵠᐃ.ⵠᐃᐃᐃⵠⲆᐃⵠⵠ, ⵠᐃ.ΔⲆⵠⵠΔⵠΔⵠΔ, ⵠᐃ.ⵠⵠΔⲆᐃⵠⵠᐃⲆ, ⵠᐃ.ⲆΔⵠⵠⲆΔⲆⵠΔ, ⵠᐃ.ᐃΔΔᐃᐃᐃⵠᐃⵠ, ⵠᐃ.ᐃΔⵠΔᐃⲆⵠⲆⲆ, ⵠᐃ.ΔⲆᐃᐃΔⵠΔⲆΔ, ⵠᐃ.ΔᐃⵠⵠⲆᐃᐃⲆΔ, ⵠᐃ.ΔⵠΔⲆⵠᐃⲆΔⵠ, ⵠᐃ.ⲆᐃΔᐃⵠⲆⲆΔⲆ, ⵠᐃ.ᐃΔΔᐃᐃᐃΔⲆᐃ, ⵠᐃ.ᐃᐃⵠΔⵠΔᐃΔᐃ, ⵠᐃ.ΔⲆⵠᐃⲆⵠΔΔΔ, ⵠᐃ.ᐃⲆᐃΔᐃᐃᐃⵠⵠ, ⵠᐃ.ᐃⲆⲆΔᐃⲆΔΔΔ, ⵠᐃ.ᐃΔⵠΔᐃⵠΔΔⲆ, ⵠᐃ.ⵠΔᐃᐃΔΔΔⲆᐃ, ⵠᐃ.ΔⵠⵠⵠⵠᐃⲆᐃᐃ, ⵠᐃ.ᐃⵠⲆᐃΔⵠΔΔⲆ, ⵠᐃ.ᐃᐃⲆᐃΔΔⵠⵠⵠ, ⵠᐃ.ΔⵠᐃⵠᐃΔΔⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆΔⲆᐃⲆⵠ, ⵠᐃ.ΔⲆᐃⲆᐃⵠᐃΔⵠ, ⵠᐃ.ⲆΔⲆᐃⲆⲆⲆᐃⲆ, ⵠᐃ.ᐃᐃΔⵠᐃᐃⲆΔᐃ, ⵠᐃ.ⲆⲆᐃΔⵠΔᐃⵠᐃ, ⵠᐃ.ⲆⵠⲆⵠⲆⲆΔΔⲆ, ⵠᐃ.ΔᐃΔⵠᐃΔΔΔⵠ, ⵠᐃ.ΔΔⵠΔⲆΔΔᐃⵠ, ⵠᐃ.ⲆΔΔᐃⲆΔΔΔΔ, ⵠᐃ.ᐃᐃⵠⵠⵠⵠΔⲆⵠ, ⵠᐃ.ΔⲆⵠⵠᐃⵠⵠΔⵠ, ⵠᐃ.ⵠⲆⲆⵠⵠⲆᐃⵠᐃ, ⵠᐃ.ⵠⵠΔⲆΔⵠⵠᐃⲆ, ⵠᐃ.ᐃᐃᐃⲆⲆᐃΔᐃᐃ, ⵠᐃ.ⲆᐃⵠⵠΔⲆⲆⵠⵠ, ⵠᐃ.ⵠⲆᐃⵠΔⵠᐃⵠΔ, ⵠᐃ.ⵠⵠᐃΔⲆᐃⲆᐃᐃ, ⵠᐃ.ΔⲆΔⲆᐃᐃⵠⵠⲆ, ⵠᐃ.ⲆⲆⲆΔⲆΔΔᐃΔ, ⵠᐃ.ᐃΔΔΔⵠⵠⲆΔΔ, ⵠᐃ.ⲆⵠΔⵠⵠⵠⵠⲆᐃ, ⵠᐃ.ⵠⲆΔⲆⲆᐃᐃΔΔ, ⵠᐃ.ΔᐃΔΔΔΔⵠᐃⲆ, ⵠᐃ.ΔΔᐃᐃᐃΔΔᐃⲆ, ⵠᐃ.ᐃΔⵠᐃᐃΔΔⵠⵠ, ⵠᐃ.ΔᐃⵠⲆᐃΔᐃᐃΔ, ⵠᐃ.ᐃⲆᐃᐃᐃⵠⵠΔⲆ, ⵠᐃ.ᐃⵠⲆⲆⵠⵠⵠⲆᐃ, ⵠᐃ.ⲆⵠⵠΔⲆⲆᐃᐃⵠ, ⵠᐃ.ⵠᐃⲆⵠᐃⲆᐃⵠΔ, ⵠᐃ.ⵠⲆⲆΔⵠⵠⲆᐃᐃ, ⵠᐃ.ⲆΔΔᐃⲆᐃⲆⲆΔ, ⵠᐃ.ΔΔᐃⵠᐃΔⵠΔᐃ, ⵠᐃ.ⲆΔⵠⲆᐃⵠⲆⲆⲆ, ⵠᐃ.ⵠΔΔⵠΔⵠⲆᐃⲆ, ⵠᐃ.ᐃᐃΔᐃΔⲆᐃΔⲆ, ⵠᐃ.ⲆΔΔΔⲆⲆⲆᐃΔ];
    ΔΔ[895] = [];
    ΔΔ[895][v624.Ⲇⵠᐃ] = [];
    ΔΔ[895][v624.Δⵠⵠ] = [];
    ΔΔ[895][v624.Ⲇⵠᐃ].push(f47(f153(1.1, vVVVV316, ["#252B28", "#747471", "#83827e"], 0)));
    ΔΔ[895][v624.Ⲇⵠᐃ].push(f47(f153(0.9, false, ["#252B28", "#747471", "#83827e"], 1)));
    ΔΔ[895][v624.Ⲇⵠᐃ].push(f47(f153(1, false, ["#252B28", "#747471", "#83827e"], 2)));
    ΔΔ[895][v624.Ⲇⵠᐃ].push(f47(f153(0.9, false, ["#252B28", "#747471", "#83827e"], 2)));
    ΔΔ[895][v624.Δⵠⵠ].push(f47(f153(1.1, false, ["#030d14", "#123335", "#183f3f"], 0)));
    ΔΔ[895][v624.Δⵠⵠ].push(f47(f153(0.9, vV315, ["#030d14", "#123335", "#183f3f"], 1)));
    ΔΔ[895][v624.Δⵠⵠ].push(f47(f153(1, vVV316, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[895][v624.Δⵠⵠ].push(f47(f153(0.9, vV316, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[898] = [];
    ΔΔ[898][v624.Ⲇⵠᐃ] = [];
    ΔΔ[898][v624.Δⵠⵠ] = [];
    ΔΔ[898][v624.Ⲇⵠᐃ].push(f47(f153(1.1, vVV3024, ["#252B28", "#58645F", "#75827D"], 2)));
    ΔΔ[898][v624.Ⲇⵠᐃ].push(f47(f153(0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ΔΔ[898][v624.Ⲇⵠᐃ].push(f47(f153(1, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ΔΔ[898][v624.Ⲇⵠᐃ].push(f47(f153(0.9, vVV3024, ["#252B28", "#58645F", "#75827D"], 2)));
    ΔΔ[898][v624.Δⵠⵠ].push(f47(f153(1.1, vVV304, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[898][v624.Δⵠⵠ].push(f47(f153(0.9, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[898][v624.Δⵠⵠ].push(f47(f153(1, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[898][v624.Δⵠⵠ].push(f47(f153(0.9, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ΔΔ[526] = [];
    ΔΔ[526][v624.Ⲇⵠᐃ] = [];
    ΔΔ[526][v624.Δⵠⵠ] = [];
    ΔΔ[526][v624.Ⲇⵠᐃ].push(f47(f176(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[526][v624.Ⲇⵠᐃ].push(f47(f176(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[526][v624.Ⲇⵠᐃ].push(f47(f176(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ΔΔ[526][v624.Δⵠⵠ].push(f47(f176(1.5, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ΔΔ[526][v624.Δⵠⵠ].push(f47(f176(1.3, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ΔΔ[526][v624.Δⵠⵠ].push(f47(f176(1.1, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ΔΔ[527] = [];
    ΔΔ[527][v624.Ⲇⵠᐃ] = [];
    ΔΔ[527][v624.Δⵠⵠ] = [];
    ΔΔ[527][v624.Ⲇⵠᐃ].push(f47(f165(1.1, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ΔΔ[527][v624.Ⲇⵠᐃ].push(f47(f165(0.9, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ΔΔ[527][v624.Ⲇⵠᐃ].push(f47(f165(0.7, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ΔΔ[527][v624.Δⵠⵠ].push(f47(f165(1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ΔΔ[527][v624.Δⵠⵠ].push(f47(f165(0.9, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ΔΔ[527][v624.Δⵠⵠ].push(f47(f165(0.7, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ΔΔ[212] = [];
    ΔΔ[212][v624.Ⲇⵠᐃ] = [];
    ΔΔ[212][v624.Δⵠⵠ] = [];
    ΔΔ[212][v624.Ⲇⵠᐃ].push(f47(f242(1.7, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ΔΔ[212][v624.Ⲇⵠᐃ].push(f47(f242(1.5, vVV3024, ["#1d051e", "#c27add", "#cd98e5"])));
    ΔΔ[212][v624.Ⲇⵠᐃ].push(f47(f242(1.3, vV30, ["#1d051e", "#c27add", "#cd98e5"])));
    ΔΔ[212][v624.Δⵠⵠ].push(f47(f242(1.7, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ΔΔ[212][v624.Δⵠⵠ].push(f47(f242(1.5, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ΔΔ[212][v624.Δⵠⵠ].push(f47(f242(1.3, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ΔΔ[897] = [];
    ΔΔ[897][v624.Ⲇⵠᐃ] = [];
    ΔΔ[897][v624.Δⵠⵠ] = [];
    ΔΔ[897][v624.Ⲇⵠᐃ].push(f47(f252(1, ["#2d53c4"])));
    ΔΔ[897][v624.Δⵠⵠ].push(f47(f252(1, ["#2d53c4"])));
    ΔΔ[915] = [];
    ΔΔ[915][v624.Ⲇⵠᐃ] = [];
    ΔΔ[915][v624.Δⵠⵠ] = [];
    ΔΔ[915][v624.Ⲇⵠᐃ].push(f47(f252(1, ["#c4912d"])));
    ΔΔ[915][v624.Δⵠⵠ].push(f47(f252(1, ["#c4912d"])));
    ΔΔ[899] = [];
    ΔΔ[899][v624.Ⲇⵠᐃ] = f47(f236(1, ["#414040"]));
    ΔΔ[899][v624.Δⵠⵠ] = f47(f236(1, ["#153635"]));
    ΔΔ[646] = [];
    ΔΔ[646][v624.Ⲇⵠᐃ] = f47(f214(1, vV316, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ΔΔ[646][v624.Δⵠⵠ] = f47(f214(1, vVVVV316, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ΔΔ[647] = [];
    ΔΔ[647][v624.Ⲇⵠᐃ] = f47(f258(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ΔΔ[647][v624.Δⵠⵠ] = f47(f258(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ΔΔ[650] = [];
    ΔΔ[650][v624.Ⲇⵠᐃ] = f47(f258(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ΔΔ[650][v624.Δⵠⵠ] = f47(f258(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ΔΔ[649] = [];
    ΔΔ[649][v624.Ⲇⵠᐃ] = f47(f216(1, vVVVV316, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ΔΔ[649][v624.Δⵠⵠ] = f47(f216(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ΔΔ[648] = [];
    ΔΔ[648][v624.Ⲇⵠᐃ] = f47(f208(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ΔΔ[648][v624.Δⵠⵠ] = f47(f208(1, vV315, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ΔΔ[530] = [];
    ΔΔ[530][v624.Ⲇⵠᐃ] = f47(f291(0.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
    ΔΔ[530][v624.Δⵠⵠ] = f47(f291(0.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"]));
    ΔΔ[583] = [];
    ΔΔ[583][v624.Ⲇⵠᐃ] = f47(f245(0.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"]));
    ΔΔ[583][v624.Δⵠⵠ] = f47(f245(0.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"]));
    ΔΔ[369] = [];
    ΔΔ[1067] = [];
    ΔΔ[654] = [];
    ΔΔ[1068] = [];
    for (v1424 = 0; v1424 < 2; v1424++) {
      ΔΔ[369][v1424] = document.createElement("canvas");
      ΔΔ[369][v1424].width = 193;
      ΔΔ[369][v1424].height = 193;
      ΔΔ[1067][v1424] = ΔΔ[369][v1424].getContext("2d");
      ΔΔ[654][v1424] = document.createElement("canvas");
      ΔΔ[654][v1424].width = 600;
      ΔΔ[654][v1424].height = 600;
      ΔΔ[1068][v1424] = ΔΔ[654][v1424].getContext("2d");
    }
    ΔΔ[613] = [];
    ΔΔ[613][v624.Ⲇⵠᐃ] = f47(f236(1, ["#c8e0de"]));
    ΔΔ[613][v624.Δⵠⵠ] = f47(f236(1, ["#147071"]));
    ΔΔ[614] = [];
    ΔΔ[614][v624.Ⲇⵠᐃ] = f47(f236(1, ["#231912"]));
    ΔΔ[614][v624.Δⵠⵠ] = f47(f236(1, ["#021719"]));
    ΔΔ[916] = f47(function (p1092, p1093) {
      var v1457 = document.createElement("canvas");
      var v1458 = v1457.getContext("2d");
      v1457.width = p1092 * 253;
      v1457.height = p1092 * 192;
      v1458.save();
      v1458.translate(p1092 * 37, p1092 * 94);
      f87(v1458, p1092 * -7, p1092 * -20, p1092 * 14, p1092 * 37, p1092 * 20);
      v1458.restore();
      f90(v1458, p1093[0]);
      v1458.save();
      v1458.translate(p1092 * 131, p1092 * 94);
      f87(v1458, p1092 * -84, p1092 * -67, p1092 * 168, p1092 * 134, p1092 * 20);
      v1458.restore();
      f90(v1458, p1093[0], p1093[0], p1092 * 13);
      v1458.save();
      v1458.translate(p1092 * 223, p1092 * 94.5);
      f87(v1458, p1092 * -5, p1092 * -18.5, p1092 * 10, p1092 * 37, p1092 * 20);
      v1458.restore();
      f90(v1458, p1093[0]);
      v1458.save();
      v1458.translate(p1092 * 128.5, p1092 * 170.5);
      f87(v1458, p1092 * -22.5, p1092 * -6.5, p1092 * 45, p1092 * 13, p1092 * 20);
      v1458.restore();
      f90(v1458, p1093[0]);
      return v1457;
    }(0.5, ["#BB0000"]));
    ΔΔ[599] = f47(function (p1094, p1095) {
      var v1459 = document.createElement("canvas");
      var v1460 = v1459.getContext("2d");
      v1459.width = p1094 * 161;
      v1459.height = p1094 * 190;
      v1460.beginPath();
      v1460.lineCap = "round";
      v1460.lineJoin = "round";
      v1460.moveTo(p1094 * 9, p1094 * 93);
      v1460.bezierCurveTo(p1094 * 17, p1094 * 95, p1094 * 19, p1094 * 95, p1094 * 21, p1094 * 95);
      v1460.bezierCurveTo(p1094 * 9, p1094 * 83, p1094 * 17, p1094 * 93, p1094 * 4, p1094 * 76);
      v1460.bezierCurveTo(p1094 * 11, p1094 * 75, p1094 * 11, p1094 * 75, p1094 * 18, p1094 * 75);
      v1460.bezierCurveTo(p1094 * 13, p1094 * 67, p1094 * 13, p1094 * 67, p1094 * 7, p1094 * 59);
      v1460.bezierCurveTo(p1094 * 14, p1094 * 59, p1094 * 14, p1094 * 59, p1094 * 21, p1094 * 59);
      v1460.bezierCurveTo(p1094 * 46, p1094 * 35, p1094 * 35, p1094 * 45, p1094 * 49, p1094 * 31);
      v1460.bezierCurveTo(p1094 * 53, p1094 * 24, p1094 * 51, p1094 * 21, p1094 * 51, p1094 * 16);
      v1460.bezierCurveTo(p1094 * 63, p1094 * 23, p1094 * 63, p1094 * 24, p1094 * 69, p1094 * 29);
      v1460.bezierCurveTo(p1094 * 76, p1094 * 7, p1094 * 75, p1094 * 11, p1094 * 76, p1094 * 6);
      v1460.bezierCurveTo(p1094 * 81, p1094 * 12, p1094 * 84, p1094 * 18, p1094 * 89, p1094 * 27);
      v1460.bezierCurveTo(p1094 * 95, p1094 * 25, p1094 * 100, p1094 * 16, p1094 * 105, p1094 * 14);
      v1460.bezierCurveTo(p1094 * 103, p1094 * 25, p1094 * 111, p1094 * 33, p1094 * 110, p1094 * 34);
      v1460.bezierCurveTo(p1094 * 123, p1094 * 48, p1094 * 123, p1094 * 48, p1094 * 136, p1094 * 62);
      v1460.bezierCurveTo(p1094 * 142, p1094 * 60, p1094 * 147, p1094 * 59, p1094 * 155, p1094 * 58);
      v1460.bezierCurveTo(p1094 * 147, p1094 * 65, p1094 * 147, p1094 * 65, p1094 * 139, p1094 * 73);
      v1460.bezierCurveTo(p1094 * 145, p1094 * 73, p1094 * 145, p1094 * 73, p1094 * 151, p1094 * 73);
      v1460.bezierCurveTo(p1094 * 145, p1094 * 80, p1094 * 145, p1094 * 80, p1094 * 138, p1094 * 87);
      v1460.bezierCurveTo(p1094 * 144, p1094 * 88, p1094 * 144, p1094 * 88, p1094 * 150, p1094 * 89);
      v1460.bezierCurveTo(p1094 * 125, p1094 * 103, p1094 * 125, p1094 * 125, p1094 * 113, p1094 * 141);
      v1460.bezierCurveTo(p1094 * 92, p1094 * 178, p1094 * 85, p1094 * 177, p1094 * 76, p1094 * 178);
      v1460.bezierCurveTo(p1094 * 64, p1094 * 179, p1094 * 51, p1094 * 164, p1094 * 35, p1094 * 131);
      v1460.bezierCurveTo(p1094 * 18, p1094 * 95, p1094 * 13, p1094 * 99, p1094 * 8, p1094 * 93);
      v1460.closePath();
      f90(v1460, p1095, p1095, p1094 * 4);
      v1460.beginPath();
      v1460.lineCap = "round";
      v1460.lineJoin = "round";
      v1460.moveTo(p1094 * 25, p1094 * 63);
      v1460.bezierCurveTo(p1094 * 16, p1094 * 58, p1094 * 17, p1094 * 51, p1094 * 17, p1094 * 33);
      v1460.bezierCurveTo(p1094 * 19, p1094 * 12, p1094 * 21, p1094 * 12, p1094 * 32, p1094 * 17);
      v1460.bezierCurveTo(p1094 * 63, p1094 * 31, p1094 * 66, p1094 * 45, p1094 * 66, p1094 * 54);
      f90(v1460, p1095, p1095, p1094 * 4);
      v1460.beginPath();
      v1460.lineCap = "round";
      v1460.lineJoin = "round";
      v1460.moveTo(p1094 * 91, p1094 * 53);
      v1460.bezierCurveTo(p1094 * 91, p1094 * 40, p1094 * 98, p1094 * 33, p1094 * 121, p1094 * 20);
      v1460.bezierCurveTo(p1094 * 137, p1094 * 12, p1094 * 137, p1094 * 16, p1094 * 139, p1094 * 27);
      v1460.bezierCurveTo(p1094 * 141, p1094 * 49, p1094 * 140, p1094 * 57, p1094 * 134, p1094 * 64);
      f90(v1460, p1095, p1095, p1094 * 4);
      return v1459;
    }(0.9, "#BB0000"));
    ΔΔ[600] = f47(function (p1096, p1097) {
      var v1461 = document.createElement("canvas");
      var v1462 = v1461.getContext("2d");
      v1461.width = p1096 * 147;
      v1461.height = p1096 * 172;
      v1462.beginPath();
      v1462.lineCap = "round";
      v1462.lineJoin = "round";
      v1462.moveTo(p1096 * 8, p1096 * 50);
      v1462.bezierCurveTo(p1096 * 15, p1096 * 16, p1096 * 49, p1096 * 6, p1096 * 67, p1096 * 6);
      v1462.bezierCurveTo(p1096 * 121, p1096 * 3, p1096 * 128, p1096 * 32, p1096 * 135, p1096 * 48);
      v1462.bezierCurveTo(p1096 * 146, p1096 * 96, p1096 * 124, p1096 * 131, p1096 * 96, p1096 * 135);
      v1462.bezierCurveTo(p1096 * 96, p1096 * 158, p1096 * 79, p1096 * 156, p1096 * 75, p1096 * 156);
      v1462.bezierCurveTo(p1096 * 50, p1096 * 154, p1096 * 53, p1096 * 150, p1096 * 52, p1096 * 135);
      v1462.bezierCurveTo(p1096 * 2, p1096 * 127, p1096 * 3, p1096 * 87, p1096 * 8, p1096 * 50);
      v1462.closePath();
      f90(v1462, p1097, p1097, p1096 * 4);
      v1462.beginPath();
      v1462.lineCap = "round";
      v1462.lineJoin = "round";
      v1462.moveTo(p1096 * 14, p1096 * 57);
      v1462.bezierCurveTo(p1096 * 2, p1096 * 50, p1096 * 5, p1096 * 22, p1096 * 24, p1096 * 22);
      v1462.bezierCurveTo(p1096 * 41, p1096 * 21, p1096 * 54, p1096 * 32, p1096 * 55, p1096 * 48);
      f90(v1462, p1097, p1097, p1096 * 4);
      v1462.beginPath();
      v1462.lineCap = "round";
      v1462.lineJoin = "round";
      v1462.moveTo(p1096 * 93, p1096 * 47);
      v1462.bezierCurveTo(p1096 * 94, p1096 * 24, p1096 * 116, p1096 * 21, p1096 * 120, p1096 * 20);
      v1462.bezierCurveTo(p1096 * 144, p1096 * 17, p1096 * 146, p1096 * 52, p1096 * 133, p1096 * 58);
      f90(v1462, p1097, p1097, p1096 * 4);
      return v1461;
    }(0.9, "#BB0000"));
    ΔΔ[601] = f47(function (p1098, p1099) {
      var v1463 = document.createElement("canvas");
      var v1464 = v1463.getContext("2d");
      v1463.width = p1098 * 271;
      v1463.height = p1098 * 366;
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 133, p1098 * 99);
      v1464.bezierCurveTo(p1098 * 186, p1098 * 123, p1098 * 199, p1098 * 152, p1098 * 209, p1098 * 169);
      v1464.bezierCurveTo(p1098 * 228, p1098 * 205, p1098 * 224, p1098 * 245, p1098 * 190, p1098 * 276);
      v1464.bezierCurveTo(p1098 * 161, p1098 * 296, p1098 * 99, p1098 * 292, p1098 * 79, p1098 * 274);
      v1464.bezierCurveTo(p1098 * 49, p1098 * 253, p1098 * 47, p1098 * 214, p1098 * 50, p1098 * 197);
      v1464.bezierCurveTo(p1098 * 61, p1098 * 143, p1098 * 102, p1098 * 113, p1098 * 131, p1098 * 99);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 73, p1098 * 270);
      v1464.bezierCurveTo(p1098 * 79, p1098 * 280, p1098 * 77, p1098 * 280, p1098 * 78, p1098 * 287);
      v1464.bezierCurveTo(p1098 * 78, p1098 * 290, p1098 * 83, p1098 * 291, p1098 * 82, p1098 * 299);
      v1464.bezierCurveTo(p1098 * 81, p1098 * 301, p1098 * 87, p1098 * 301, p1098 * 92, p1098 * 314);
      v1464.bezierCurveTo(p1098 * 94, p1098 * 319, p1098 * 100, p1098 * 321, p1098 * 107, p1098 * 320);
      v1464.bezierCurveTo(p1098 * 111, p1098 * 323, p1098 * 114, p1098 * 324, p1098 * 119, p1098 * 320);
      v1464.bezierCurveTo(p1098 * 137, p1098 * 321, p1098 * 146, p1098 * 323, p1098 * 139, p1098 * 320);
      v1464.bezierCurveTo(p1098 * 141, p1098 * 324, p1098 * 150, p1098 * 324, p1098 * 153, p1098 * 320);
      v1464.bezierCurveTo(p1098 * 168, p1098 * 319, p1098 * 171, p1098 * 316, p1098 * 173, p1098 * 307);
      v1464.bezierCurveTo(p1098 * 180, p1098 * 305, p1098 * 180, p1098 * 301, p1098 * 178, p1098 * 296);
      v1464.bezierCurveTo(p1098 * 183, p1098 * 296, p1098 * 185, p1098 * 289, p1098 * 188, p1098 * 279);
      v1464.bezierCurveTo(p1098 * 171, p1098 * 286, p1098 * 149, p1098 * 290, p1098 * 132, p1098 * 289);
      v1464.bezierCurveTo(p1098 * 101, p1098 * 290, p1098 * 86, p1098 * 280, p1098 * 74, p1098 * 271);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 76, p1098 * 252);
      v1464.bezierCurveTo(p1098 * 85, p1098 * 294, p1098 * 96, p1098 * 314, p1098 * 103, p1098 * 314);
      v1464.bezierCurveTo(p1098 * 106, p1098 * 316, p1098 * 151, p1098 * 314, p1098 * 156, p1098 * 314);
      v1464.bezierCurveTo(p1098 * 169, p1098 * 317, p1098 * 182, p1098 * 285, p1098 * 191, p1098 * 256);
      v1464.bezierCurveTo(p1098 * 134.5, p1098 * 254, p1098 * 134.5, p1098 * 254, p1098 * 78, p1098 * 252);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 84, p1098 * 257);
      v1464.bezierCurveTo(p1098 * 122, p1098 * 273, p1098 * 146, p1098 * 268, p1098 * 179, p1098 * 261);
      v1464.bezierCurveTo(p1098 * 190, p1098 * 258, p1098 * 187, p1098 * 266, p1098 * 178, p1098 * 272);
      v1464.bezierCurveTo(p1098 * 160, p1098 * 284, p1098 * 123, p1098 * 282, p1098 * 100, p1098 * 277);
      v1464.bezierCurveTo(p1098 * 73, p1098 * 260, p1098 * 79, p1098 * 257, p1098 * 84, p1098 * 257);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 125, p1098 * 65);
      v1464.bezierCurveTo(p1098 * 133, p1098 * 45, p1098 * 136, p1098 * 42, p1098 * 141, p1098 * 55);
      v1464.bezierCurveTo(p1098 * 151, p1098 * 96, p1098 * 164, p1098 * 117, p1098 * 175, p1098 * 134);
      v1464.bezierCurveTo(p1098 * 203, p1098 * 181, p1098 * 207, p1098 * 182, p1098 * 208, p1098 * 215);
      v1464.bezierCurveTo(p1098 * 206, p1098 * 240, p1098 * 205, p1098 * 246, p1098 * 184, p1098 * 258);
      v1464.bezierCurveTo(p1098 * 161, p1098 * 267, p1098 * 131, p1098 * 272, p1098 * 86, p1098 * 258);
      v1464.bezierCurveTo(p1098 * 67, p1098 * 252, p1098 * 68, p1098 * 239, p1098 * 64, p1098 * 216);
      v1464.bezierCurveTo(p1098 * 62, p1098 * 194, p1098 * 72, p1098 * 169, p1098 * 92, p1098 * 142);
      v1464.bezierCurveTo(p1098 * 106, p1098 * 121, p1098 * 114, p1098 * 101, p1098 * 125, p1098 * 65);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 115, p1098 * 37);
      v1464.bezierCurveTo(p1098 * 116, p1098 * 28, p1098 * 119, p1098 * 27, p1098 * 126, p1098 * 37);
      v1464.bezierCurveTo(p1098 * 134, p1098 * 48, p1098 * 134, p1098 * 49, p1098 * 132, p1098 * 59);
      v1464.bezierCurveTo(p1098 * 131, p1098 * 67, p1098 * 127, p1098 * 65, p1098 * 120, p1098 * 56);
      v1464.bezierCurveTo(p1098 * 114, p1098 * 49, p1098 * 113, p1098 * 43, p1098 * 115, p1098 * 38);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 146, p1098 * 34);
      v1464.bezierCurveTo(p1098 * 152, p1098 * 28, p1098 * 155, p1098 * 27, p1098 * 157, p1098 * 39);
      v1464.bezierCurveTo(p1098 * 157, p1098 * 45, p1098 * 157, p1098 * 49, p1098 * 150, p1098 * 56);
      v1464.bezierCurveTo(p1098 * 141, p1098 * 66, p1098 * 138, p1098 * 66, p1098 * 138, p1098 * 57);
      v1464.bezierCurveTo(p1098 * 137, p1098 * 50, p1098 * 137, p1098 * 47, p1098 * 141, p1098 * 42);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 143, p1098 * 69);
      v1464.bezierCurveTo(p1098 * 148, p1098 * 56, p1098 * 156, p1098 * 50, p1098 * 158, p1098 * 58);
      v1464.bezierCurveTo(p1098 * 159, p1098 * 64, p1098 * 160, p1098 * 67, p1098 * 153, p1098 * 77);
      v1464.bezierCurveTo(p1098 * 148, p1098 * 83, p1098 * 145, p1098 * 84, p1098 * 143, p1098 * 77);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 149, p1098 * 92);
      v1464.bezierCurveTo(p1098 * 149, p1098 * 89, p1098 * 151, p1098 * 84, p1098 * 156, p1098 * 79);
      v1464.bezierCurveTo(p1098 * 161, p1098 * 73, p1098 * 163, p1098 * 78, p1098 * 162, p1098 * 86);
      v1464.bezierCurveTo(p1098 * 161, p1098 * 91, p1098 * 155, p1098 * 99, p1098 * 152, p1098 * 98);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 111, p1098 * 61);
      v1464.bezierCurveTo(p1098 * 114, p1098 * 51, p1098 * 117, p1098 * 51, p1098 * 124, p1098 * 64);
      v1464.bezierCurveTo(p1098 * 128, p1098 * 68, p1098 * 128, p1098 * 76, p1098 * 126, p1098 * 79);
      v1464.bezierCurveTo(p1098 * 123, p1098 * 84, p1098 * 122, p1098 * 82, p1098 * 115, p1098 * 74);
      v1464.bezierCurveTo(p1098 * 112, p1098 * 67, p1098 * 115, p1098 * 74, p1098 * 115, p1098 * 74);
      v1464.bezierCurveTo(p1098 * 111, p1098 * 68, p1098 * 111, p1098 * 66, p1098 * 111, p1098 * 62);
      v1464.closePath();
      f90(v1464, p1099[0]);
      v1464.beginPath();
      v1464.lineCap = "round";
      v1464.lineJoin = "round";
      v1464.moveTo(p1098 * 107, p1098 * 81);
      v1464.bezierCurveTo(p1098 * 108, p1098 * 74, p1098 * 112, p1098 * 73, p1098 * 118, p1098 * 84);
      v1464.bezierCurveTo(p1098 * 122, p1098 * 88, p1098 * 122, p1098 * 93, p1098 * 121, p1098 * 98);
      v1464.bezierCurveTo(p1098 * 114, p1098 * 98, p1098 * 113, p1098 * 98, p1098 * 109, p1098 * 90);
      v1464.bezierCurveTo(p1098 * 107, p1098 * 87, p1098 * 106, p1098 * 85, p1098 * 107, p1098 * 82);
      v1464.closePath();
      f90(v1464, p1099[0]);
      return v1463;
    }(1, ["#BB0000"]));
    ΔΔ[604] = f47(function (p1100, p1101) {
      var v1465 = document.createElement("canvas");
      var v1466 = v1465.getContext("2d");
      v1465.width = p1100 * 85;
      v1465.height = p1100 * 145;
      v1466.translate(p1100 * -20, p1100 * -95);
      v1466.beginPath();
      v1466.lineCap = "round";
      v1466.lineJoin = "round";
      v1466.moveTo(p1100 * 50, p1100 * 105);
      v1466.bezierCurveTo(p1100 * 52, p1100 * 119, p1100 * 64, p1100 * 137, p1100 * 71, p1100 * 146);
      v1466.bezierCurveTo(p1100 * 71, p1100 * 161, p1100 * 74, p1100 * 169, p1100 * 79, p1100 * 179);
      v1466.bezierCurveTo(p1100 * 68, p1100 * 192, p1100 * 70, p1100 * 204, p1100 * 69, p1100 * 216);
      v1466.bezierCurveTo(p1100 * 50, p1100 * 189.5, p1100 * 50, p1100 * 189.5, p1100 * 31, p1100 * 163);
      v1466.closePath();
      f90(v1466, p1101);
      v1466.beginPath();
      v1466.lineCap = "round";
      v1466.lineJoin = "round";
      v1466.moveTo(p1100 * 44, p1100 * 106);
      v1466.bezierCurveTo(p1100 * 49, p1100 * 90, p1100 * 58, p1100 * 104, p1100 * 51, p1100 * 121);
      v1466.bezierCurveTo(p1100 * 45, p1100 * 143, p1100 * 41, p1100 * 151, p1100 * 37, p1100 * 162);
      v1466.bezierCurveTo(p1100 * 48, p1100 * 180, p1100 * 58, p1100 * 188, p1100 * 76, p1100 * 205);
      v1466.bezierCurveTo(p1100 * 104, p1100 * 209, p1100 * 105, p1100 * 229, p1100 * 92, p1100 * 235);
      v1466.bezierCurveTo(p1100 * 76, p1100 * 239, p1100 * 75, p1100 * 232, p1100 * 56, p1100 * 213);
      v1466.bezierCurveTo(p1100 * 31, p1100 * 187, p1100 * 28, p1100 * 176, p1100 * 23, p1100 * 162);
      v1466.bezierCurveTo(p1100 * 38, p1100 * 131, p1100 * 40, p1100 * 120, p1100 * 44, p1100 * 106);
      v1466.closePath();
      f90(v1466, p1101, p1101, p1100 * 4);
      v1466.beginPath();
      v1466.lineCap = "round";
      v1466.lineJoin = "round";
      v1466.moveTo(p1100 * 30, p1100 * 159);
      v1466.bezierCurveTo(p1100 * 46, p1100 * 157, p1100 * 59, p1100 * 152, p1100 * 68, p1100 * 148);
      v1466.bezierCurveTo(p1100 * 63, p1100 * 155, p1100 * 52, p1100 * 160, p1100 * 44, p1100 * 164);
      v1466.bezierCurveTo(p1100 * 59, p1100 * 169, p1100 * 66, p1100 * 174, p1100 * 75, p1100 * 178);
      v1466.bezierCurveTo(p1100 * 58, p1100 * 178, p1100 * 49, p1100 * 175, p1100 * 37, p1100 * 174);
      v1466.closePath();
      f90(v1466, p1101);
      return v1465;
    }(0.8, "#BB0000"));
    ΔΔ[605] = f47(function (p1102, p1103) {
      var v1467 = document.createElement("canvas");
      var v1468 = v1467.getContext("2d");
      v1467.width = p1102 * 85;
      v1467.height = p1102 * 145;
      v1468.translate(p1102 * -165, p1102 * -95);
      v1468.beginPath();
      v1468.lineCap = "round";
      v1468.lineJoin = "round";
      v1468.moveTo(p1102 * 217, p1102 * 103);
      v1468.bezierCurveTo(p1102 * 209, p1102 * 129, p1102 * 203, p1102 * 137, p1102 * 195, p1102 * 146);
      v1468.bezierCurveTo(p1102 * 195, p1102 * 159, p1102 * 194, p1102 * 167, p1102 * 189, p1102 * 178);
      v1468.bezierCurveTo(p1102 * 193, p1102 * 186, p1102 * 196, p1102 * 195, p1102 * 198, p1102 * 216);
      v1468.bezierCurveTo(p1102 * 217.5, p1102 * 189.5, p1102 * 217.5, p1102 * 189.5, p1102 * 237, p1102 * 163);
      v1468.closePath();
      f90(v1468, p1103);
      v1468.beginPath();
      v1468.lineCap = "round";
      v1468.lineJoin = "round";
      v1468.moveTo(p1102 * 231, p1102 * 163);
      v1468.bezierCurveTo(p1102 * 221, p1102 * 139, p1102 * 218, p1102 * 128, p1102 * 215, p1102 * 114);
      v1468.bezierCurveTo(p1102 * 213, p1102 * 102, p1102 * 220, p1102 * 92, p1102 * 222, p1102 * 107);
      v1468.bezierCurveTo(p1102 * 224, p1102 * 118, p1102 * 233, p1102 * 138, p1102 * 244, p1102 * 161);
      v1468.bezierCurveTo(p1102 * 235, p1102 * 188, p1102 * 224, p1102 * 198, p1102 * 204, p1102 * 221);
      v1468.bezierCurveTo(p1102 * 190, p1102 * 233, p1102 * 190, p1102 * 235, p1102 * 180, p1102 * 235);
      v1468.bezierCurveTo(p1102 * 167, p1102 * 235, p1102 * 164, p1102 * 216, p1102 * 175, p1102 * 211);
      v1468.bezierCurveTo(p1102 * 176, p1102 * 208, p1102 * 181, p1102 * 207, p1102 * 191, p1102 * 205);
      v1468.bezierCurveTo(p1102 * 213, p1102 * 186, p1102 * 218, p1102 * 180, p1102 * 230, p1102 * 163);
      v1468.closePath();
      f90(v1468, p1103, p1103, p1102 * 4);
      v1468.beginPath();
      v1468.lineCap = "round";
      v1468.lineJoin = "round";
      v1468.moveTo(p1102 * 234, p1102 * 154);
      v1468.bezierCurveTo(p1102 * 227, p1102 * 156, p1102 * 222, p1102 * 156, p1102 * 199, p1102 * 148);
      v1468.bezierCurveTo(p1102 * 201, p1102 * 151, p1102 * 216, p1102 * 159, p1102 * 224, p1102 * 162);
      v1468.bezierCurveTo(p1102 * 209, p1102 * 169.5, p1102 * 209, p1102 * 169.5, p1102 * 194, p1102 * 177);
      v1468.bezierCurveTo(p1102 * 213.5, p1102 * 175, p1102 * 213.5, p1102 * 175, p1102 * 233, p1102 * 173);
      v1468.closePath();
      f90(v1468, p1103);
      return v1467;
    }(0.8, "#BB0000"));
    ΔΔ[433] = f47(function (p1104, p1105) {
      var v1469 = document.createElement("canvas");
      var v1470 = v1469.getContext("2d");
      var v1471 = p1104 * 85;
      var v1472 = p1104 * 115;
      var v1473 = p1104 * 4;
      v1469.width = v1471;
      v1469.height = v1472;
      v1470.translate(p1104 * -130, p1104 * -60);
      v1470.globalAlpha = 1;
      v1470.beginPath();
      v1470.bezierCurveTo(p1104 * 190, p1104 * 87, p1104 * 201, p1104 * 59, p1104 * 208, p1104 * 64);
      v1470.bezierCurveTo(p1104 * 213, p1104 * 68, p1104 * 204, p1104 * 93, p1104 * 195, p1104 * 109);
      v1470.bezierCurveTo(p1104 * 195, p1104 * 109, p1104 * 202, p1104 * 124, p1104 * 191, p1104 * 141);
      v1470.bezierCurveTo(p1104 * 182, p1104 * 151, p1104 * 164, p1104 * 155, p1104 * 148, p1104 * 144);
      v1470.bezierCurveTo(p1104 * 136, p1104 * 135, p1104 * 138, p1104 * 111, p1104 * 145, p1104 * 104);
      v1470.bezierCurveTo(p1104 * 140, p1104 * 92, p1104 * 131, p1104 * 67, p1104 * 138, p1104 * 63);
      v1470.bezierCurveTo(p1104 * 145, p1104 * 61, p1104 * 153, p1104 * 82, p1104 * 155, p1104 * 96);
      v1470.bezierCurveTo(p1104 * 167, p1104 * 91, p1104 * 178, p1104 * 92, p1104 * 187, p1104 * 98);
      v1470.closePath();
      f90(v1470, p1105, p1105, v1473);
      return v1469;
    }(0.9, "#BB0000"));
    ΔΔ[389] = f47(f94(0.6, "#BB0000"));
    ΔΔ[390] = f47(f94(0.6, "#1CE7E0"));
    ΔΔ[391] = f47(f94(0.6, "#DBE71C"));
    ΔΔ[419] = f47(f94(0.6, "#00BB00"));
    ΔΔ[821] = [];
    ΔΔ[821][v624.Ⲇⵠᐃ] = f47(f236(1, ["#dac291"]));
    ΔΔ[821][v624.Δⵠⵠ] = f47(f236(1, ["#0D423D"]));
    ΔΔ[917] = [];
    ΔΔ[917][v624.Ⲇⵠᐃ] = f47(f236(1, ["#dac291"]));
    ΔΔ[917][v624.Δⵠⵠ] = f47(f236(1, ["#0D423D"]));
    ΔΔ[1037] = [];
    ΔΔ[1037][v624.Ⲇⵠᐃ] = f47(f243(0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
    ΔΔ[1037][v624.Δⵠⵠ] = f47(f243(0.3, true, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"]));
    ΔΔ[284] = [];
    ΔΔ[284][v624.Ⲇⵠᐃ] = f47(f243(0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]));
    ΔΔ[284][v624.Δⵠⵠ] = f47(f243(0.3, vVV304, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"]));
    ΔΔ[218] = [f47(f274(1, vVV3024, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ΔΔ[221] = [f47(f274(1, true, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ΔΔ[822] = [];
    ΔΔ[822][v624.Ⲇⵠᐃ] = [];
    ΔΔ[822][v624.Δⵠⵠ] = [];
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f207(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f222(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f223(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f189(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f229(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f257(1, ["#0B6A84"])));
    ΔΔ[822][v624.Ⲇⵠᐃ].push(f47(f231(1, ["#0B6A84"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f207(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f222(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f223(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f189(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f229(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f257(1, ["#09373F"])));
    ΔΔ[822][v624.Δⵠⵠ].push(f47(f231(1, ["#09373F"])));
    ΔΔ[911] = [];
    ΔΔ[911][v624.Ⲇⵠᐃ] = [];
    ΔΔ[911][v624.Δⵠⵠ] = [];
    ΔΔ[911][v624.Ⲇⵠᐃ].push(f47(f180(1.7, ["#FBEFBC"], 0)));
    ΔΔ[911][v624.Ⲇⵠᐃ].push(f47(f180(1.9, ["#FBEFBC"], 1)));
    ΔΔ[911][v624.Ⲇⵠᐃ].push(f47(f180(1.7, ["#FBEFBC"], 2)));
    ΔΔ[911][v624.Δⵠⵠ].push(f47(f180(1.7, ["#0F4C48"], 0)));
    ΔΔ[911][v624.Δⵠⵠ].push(f47(f180(1.9, ["#0F4C48"], 1)));
    ΔΔ[911][v624.Δⵠⵠ].push(f47(f180(1.7, ["#0F4C48"], 2)));
    ΔΔ[913] = [];
    ΔΔ[913][v624.Ⲇⵠᐃ] = [];
    ΔΔ[913][v624.Δⵠⵠ] = [];
    ΔΔ[913][v624.Ⲇⵠᐃ].push(f47(f180(1.8, ["#A9D6D3"], 0)));
    ΔΔ[913][v624.Ⲇⵠᐃ].push(f47(f180(2, ["#A9D6D3"], 1)));
    ΔΔ[913][v624.Ⲇⵠᐃ].push(f47(f180(1.8, ["#A9D6D3"], 2)));
    ΔΔ[913][v624.Δⵠⵠ].push(f47(f180(1.8, ["#115E60"], 0)));
    ΔΔ[913][v624.Δⵠⵠ].push(f47(f180(2, ["#115E60"], 1)));
    ΔΔ[913][v624.Δⵠⵠ].push(f47(f180(1.8, ["#115E60"], 2)));
    ΔΔ[914] = [];
    ΔΔ[914][v624.Ⲇⵠᐃ] = [];
    ΔΔ[914][v624.Δⵠⵠ] = [];
    ΔΔ[914][v624.Ⲇⵠᐃ].push(f47(f180(1.9, ["#2A8B9B"], 0)));
    ΔΔ[914][v624.Ⲇⵠᐃ].push(f47(f180(2.1, ["#2A8B9B"], 1)));
    ΔΔ[914][v624.Ⲇⵠᐃ].push(f47(f180(1.9, ["#2A8B9B"], 2)));
    ΔΔ[914][v624.Δⵠⵠ].push(f47(f180(1.9, ["#0F464C"], 0)));
    ΔΔ[914][v624.Δⵠⵠ].push(f47(f180(2.1, ["#0F464C"], 1)));
    ΔΔ[914][v624.Δⵠⵠ].push(f47(f180(1.9, ["#0F464C"], 2)));
    ΔΔ[912] = [];
    ΔΔ[912][v624.Ⲇⵠᐃ] = [];
    ΔΔ[912][v624.Δⵠⵠ] = [];
    ΔΔ[912][v624.Ⲇⵠᐃ].push(f47(f144(0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ΔΔ[912][v624.Ⲇⵠᐃ].push(f47(f144(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ΔΔ[912][v624.Ⲇⵠᐃ].push(f47(f144(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ΔΔ[912][v624.Δⵠⵠ].push(f47(f144(0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ΔΔ[912][v624.Δⵠⵠ].push(f47(f144(1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ΔΔ[912][v624.Δⵠⵠ].push(f47(f144(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ΔΔ[856] = [];
    ΔΔ[856][v624.Ⲇⵠᐃ] = f47(f217(0.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"]));
    ΔΔ[856][v624.Δⵠⵠ] = f47(f217(0.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"]));
    ΔΔ[906] = f47(function (p1106, p1107) {
      var v1474 = document.createElement("canvas");
      var v1475 = v1474.getContext("2d");
      v1474.width = p1106 * 376;
      v1474.height = p1106 * 371;
      v1475.globalAlpha = 1;
      v1475.beginPath();
      v1475.lineCap = "round";
      v1475.lineJoin = "round";
      v1475.moveTo(p1106 * 191.633544921875, p1106 * 123.98580932617188);
      v1475.bezierCurveTo(p1106 * 215.633544921875, p1106 * 85.98580932617188, p1106 * 187.633544921875, p1106 * 71.98580932617188, p1106 * 202.633544921875, p1106 * 19.985809326171875);
      v1475.bezierCurveTo(p1106 * 231.633544921875, p1106 * 68.98580932617188, p1106 * 253.633544921875, p1106 * 71.98580932617188, p1106 * 256.633544921875, p1106 * 93.98580932617188);
      v1475.bezierCurveTo(p1106 * 306.633544921875, p1106 * 64.98580932617188, p1106 * 319.633544921875, p1106 * 61.985809326171875, p1106 * 350.633544921875, p1106 * 58.985809326171875);
      v1475.bezierCurveTo(p1106 * 280.633544921875, p1106 * 86.98580932617188, p1106 * 281.633544921875, p1106 * 106.98580932617188, p1106 * 268.633544921875, p1106 * 130.98580932617188);
      v1475.bezierCurveTo(p1106 * 295.633544921875, p1106 * 158.98580932617188, p1106 * 328.633544921875, p1106 * 155.98580932617188, p1106 * 353.633544921875, p1106 * 90.98580932617188);
      v1475.bezierCurveTo(p1106 * 371.633544921875, p1106 * 158.98580932617188, p1106 * 337.633544921875, p1106 * 210.98580932617188, p1106 * 286.633544921875, p1106 * 209.98580932617188);
      v1475.bezierCurveTo(p1106 * 323.633544921875, p1106 * 230.98580932617188, p1106 * 317.633544921875, p1106 * 274.9858093261719, p1106 * 356.633544921875, p1106 * 305.9858093261719);
      v1475.bezierCurveTo(p1106 * 288.633544921875, p1106 * 297.9858093261719, p1106 * 288.633544921875, p1106 * 265.9858093261719, p1106 * 275.633544921875, p1106 * 266.9858093261719);
      v1475.bezierCurveTo(p1106 * 280.633544921875, p1106 * 294.9858093261719, p1106 * 315.633544921875, p1106 * 306.9858093261719, p1106 * 336.633544921875, p1106 * 316.9858093261719);
      v1475.bezierCurveTo(p1106 * 295.633544921875, p1106 * 318.9858093261719, p1106 * 264.633544921875, p1106 * 302.9858093261719, p1106 * 254.633544921875, p1106 * 289.9858093261719);
      v1475.bezierCurveTo(p1106 * 252.633544921875, p1106 * 301.9858093261719, p1106 * 224.633544921875, p1106 * 315.9858093261719, p1106 * 201.633544921875, p1106 * 356.9858093261719);
      v1475.bezierCurveTo(p1106 * 195.633544921875, p1106 * 313.9858093261719, p1106 * 195.633544921875, p1106 * 308.9858093261719, p1106 * 196.633544921875, p1106 * 307.9858093261719);
      v1475.bezierCurveTo(p1106 * 197.633544921875, p1106 * 289.9858093261719, p1106 * 207.633544921875, p1106 * 283.9858093261719, p1106 * 195.633544921875, p1106 * 258.9858093261719);
      v1475.bezierCurveTo(p1106 * 182.633544921875, p1106 * 282.9858093261719, p1106 * 190.633544921875, p1106 * 287.9858093261719, p1106 * 193.633544921875, p1106 * 297.9858093261719);
      v1475.bezierCurveTo(p1106 * 195.633544921875, p1106 * 306.9858093261719, p1106 * 191.633544921875, p1106 * 334.9858093261719, p1106 * 187.633544921875, p1106 * 354.9858093261719);
      v1475.bezierCurveTo(p1106 * 165.633544921875, p1106 * 320.9858093261719, p1106 * 138.633544921875, p1106 * 307.9858093261719, p1106 * 135.633544921875, p1106 * 288.9858093261719);
      v1475.bezierCurveTo(p1106 * 110.633544921875, p1106 * 318.9858093261719, p1106 * 68.633544921875, p1106 * 323.9858093261719, p1106 * 49.633544921875, p1106 * 320.9858093261719);
      v1475.bezierCurveTo(p1106 * 88.633544921875, p1106 * 308.9858093261719, p1106 * 108.633544921875, p1106 * 284.9858093261719, p1106 * 118.633544921875, p1106 * 258.9858093261719);
      v1475.bezierCurveTo(p1106 * 86.633544921875, p1106 * 264.9858093261719, p1106 * 75.633544921875, p1106 * 310.9858093261719, p1106 * 19.633544921875, p1106 * 304.9858093261719);
      v1475.bezierCurveTo(p1106 * 54.633544921875, p1106 * 276.9858093261719, p1106 * 59.633544921875, p1106 * 214.98580932617188, p1106 * 105.633544921875, p1106 * 205.98580932617188);
      v1475.bezierCurveTo(p1106 * 14.633544921875, p1106 * 201.98580932617188, p1106 * 24.633544921875, p1106 * 141.98580932617188, p1106 * 25.633544921875, p1106 * 82.98580932617188);
      v1475.bezierCurveTo(p1106 * 49.633544921875, p1106 * 168.98580932617188, p1106 * 87.633544921875, p1106 * 141.98580932617188, p1106 * 112.633544921875, p1106 * 123.98580932617188);
      v1475.bezierCurveTo(p1106 * 95.633544921875, p1106 * 75.98580932617188, p1106 * 70.633544921875, p1106 * 68.98580932617188, p1106 * 35.633544921875, p1106 * 50.985809326171875);
      v1475.bezierCurveTo(p1106 * 70.633544921875, p1106 * 53.985809326171875, p1106 * 102.633544921875, p1106 * 65.98580932617188, p1106 * 125.633544921875, p1106 * 84.98580932617188);
      v1475.bezierCurveTo(p1106 * 133.633544921875, p1106 * 69.98580932617188, p1106 * 166.633544921875, p1106 * 42.985809326171875, p1106 * 176.633544921875, p1106 * 21.985809326171875);
      v1475.bezierCurveTo(p1106 * 185.633544921875, p1106 * 49.985809326171875, p1106 * 168.633544921875, p1106 * 95.98580932617188, p1106 * 191.633544921875, p1106 * 121.98580932617188);
      v1475.closePath();
      f90(v1475, p1107[0], p1107[0], p1106 * 12);
      return v1474;
    }(0.8, ["#B6222A"]));
    ΔΔ[892] = [];
    ΔΔ[892][v624.Ⲇⵠᐃ] = f47(f210(0.8, 0, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
    ΔΔ[892][v624.Δⵠⵠ] = f47(f210(0.8, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"]));
    ΔΔ[907] = f47(function (p1108, p1109) {
      var v1476 = document.createElement("canvas");
      var v1477 = v1476.getContext("2d");
      v1476.width = p1108 * 158;
      v1476.height = p1108 * 201;
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 96.5, p1108 * 76.421875);
      v1477.bezierCurveTo(p1108 * 100.5, p1108 * 64.421875, p1108 * 103.5, p1108 * 62.421875, p1108 * 110.5, p1108 * 65.421875);
      v1477.bezierCurveTo(p1108 * 116.5, p1108 * 66.421875, p1108 * 117.5, p1108 * 67.421875, p1108 * 112.5, p1108 * 73.421875);
      v1477.bezierCurveTo(p1108 * 107, p1108 * 79.921875, p1108 * 107, p1108 * 79.921875, p1108 * 101.5, p1108 * 86.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 61.5, p1108 * 78.421875);
      v1477.bezierCurveTo(p1108 * 57.5, p1108 * 73.421875, p1108 * 51.5, p1108 * 66.421875, p1108 * 45.5, p1108 * 68.421875);
      v1477.bezierCurveTo(p1108 * 32.5, p1108 * 73.421875, p1108 * 38.5, p1108 * 75.421875, p1108 * 46.5, p1108 * 81.421875);
      v1477.bezierCurveTo(p1108 * 51.5, p1108 * 84.921875, p1108 * 51.5, p1108 * 84.921875, p1108 * 56.5, p1108 * 88.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 116.5, p1108 * 127.421875);
      v1477.bezierCurveTo(p1108 * 124.5, p1108 * 108.421875, p1108 * 129.5, p1108 * 104.421875, p1108 * 141.5, p1108 * 107.421875);
      v1477.bezierCurveTo(p1108 * 156.5, p1108 * 112.421875, p1108 * 153.5, p1108 * 113.421875, p1108 * 132.5, p1108 * 134.421875);
      v1477.bezierCurveTo(p1108 * 123.5, p1108 * 141.921875, p1108 * 123.5, p1108 * 141.921875, p1108 * 114.5, p1108 * 149.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 41.5, p1108 * 134.421875);
      v1477.bezierCurveTo(p1108 * 30.5, p1108 * 119.421875, p1108 * 25.5, p1108 * 111.421875, p1108 * 12.5, p1108 * 115.421875);
      v1477.bezierCurveTo(p1108 * 4.5, p1108 * 120.421875, p1108 * 4.5, p1108 * 121.421875, p1108 * 26.5, p1108 * 142.421875);
      v1477.bezierCurveTo(p1108 * 35, p1108 * 149.921875, p1108 * 35, p1108 * 149.921875, p1108 * 43.5, p1108 * 157.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 78.5, p1108 * 51.921875);
      v1477.bezierCurveTo(p1108 * 99.5, p1108 * 75.921875, p1108 * 110.5, p1108 * 96.921875, p1108 * 118.5, p1108 * 120.921875);
      v1477.bezierCurveTo(p1108 * 121.5, p1108 * 140.921875, p1108 * 107.5, p1108 * 179.921875, p1108 * 75.5, p1108 * 183.921875);
      v1477.bezierCurveTo(p1108 * 30.5, p1108 * 169.921875, p1108 * 37.5, p1108 * 131.921875, p1108 * 34.5, p1108 * 120.921875);
      v1477.bezierCurveTo(p1108 * 41.5, p1108 * 89.921875, p1108 * 61.5, p1108 * 67.921875, p1108 * 78.5, p1108 * 51.921875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 72.5, p1108 * 72.421875);
      v1477.bezierCurveTo(p1108 * 76.5, p1108 * 79.421875, p1108 * 79.5, p1108 * 80.421875, p1108 * 83.5, p1108 * 73.421875);
      v1477.bezierCurveTo(p1108 * 80.5, p1108 * 96.921875, p1108 * 79.5, p1108 * 114.421875, p1108 * 77.5, p1108 * 120.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 42.5, p1108 * 163.421875);
      v1477.bezierCurveTo(p1108 * 62.5, p1108 * 185.421875, p1108 * 86.5, p1108 * 186.421875, p1108 * 111.5, p1108 * 165.421875);
      v1477.bezierCurveTo(p1108 * 107.5, p1108 * 176.421875, p1108 * 95.5, p1108 * 187.421875, p1108 * 75.5, p1108 * 188.421875);
      v1477.bezierCurveTo(p1108 * 53.5, p1108 * 188.421875, p1108 * 43.5, p1108 * 171.421875, p1108 * 42.5, p1108 * 164.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 79.5, p1108 * 61.421875);
      v1477.bezierCurveTo(p1108 * 88.5, p1108 * 31.421875, p1108 * 81.5, p1108 * 16.421875, p1108 * 75.5, p1108 * 7.421875);
      v1477.bezierCurveTo(p1108 * 77.5, p1108 * 28.421875, p1108 * 77.5, p1108 * 37.421875, p1108 * 68.5, p1108 * 42.421875);
      v1477.bezierCurveTo(p1108 * 79.5, p1108 * 57.421875, p1108 * 79.5, p1108 * 58.421875, p1108 * 80.5, p1108 * 61.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      v1477.beginPath();
      v1477.lineCap = "round";
      v1477.lineJoin = "round";
      v1477.moveTo(p1108 * 72.5, p1108 * 72.421875);
      v1477.bezierCurveTo(p1108 * 76.5, p1108 * 79.421875, p1108 * 79.5, p1108 * 80.421875, p1108 * 83.5, p1108 * 73.421875);
      v1477.bezierCurveTo(p1108 * 80.5, p1108 * 96.921875, p1108 * 79.5, p1108 * 114.421875, p1108 * 77.5, p1108 * 120.421875);
      v1477.closePath();
      f90(v1477, p1109[0], p1109[0], p1108 * 10);
      return v1476;
    }(0.8, ["#B6222A"]));
    ΔΔ[1178] = [];
    ΔΔ[1178][v624.Ⲇⵠᐃ] = f47(f104(0.4, 0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
    ΔΔ[1178][v624.Δⵠⵠ] = f47(f104(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ΔΔ[1179] = [];
    ΔΔ[1179][v624.Ⲇⵠᐃ] = f47(f104(0.4, 0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
    ΔΔ[1179][v624.Δⵠⵠ] = f47(f104(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
    ΔΔ[v624.ⵠᐃⲆᐃΔΔᐃ] = [];
    ΔΔ[v624.ⵠᐃⲆᐃΔΔᐃ][v624.Ⲇⵠᐃ] = f47(f104(0.4, 0, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0));
    ΔΔ[v624.ⵠᐃⲆᐃΔΔᐃ][v624.Δⵠⵠ] = f47(f104(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ΔΔ[1180] = f47(f106(0.4, ["#B6222A"]));
    ΔΔ[1181] = f47(f106(0.4, ["#B6222A"]));
    ΔΔ[v624.ΔΔⵠⵠⵠⲆΔΔⲆ] = f47(f106(0.4, ["#B6222A"]));
    ΔΔ[340] = f47(f280(0.35, true, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]));
    ΔΔ[339] = f47(f149(0.35, true, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]));
    ΔΔ[1162] = [];
    ΔΔ[1162][v624.Ⲇⵠᐃ] = f47(f141(0.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
    ΔΔ[1162][v624.Δⵠⵠ] = f47(f141(0.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
    ΔΔ[1163] = [];
    ΔΔ[1163][v624.Ⲇⵠᐃ] = f47(f141(0.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
    ΔΔ[1163][v624.Δⵠⵠ] = f47(f141(0.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
    ΔΔ[1170] = [];
    ΔΔ[1170][v624.Ⲇⵠᐃ] = f47(f156(0.35, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ΔΔ[1170][v624.Δⵠⵠ] = f47(f156(0.35, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ΔΔ[1171] = [];
    ΔΔ[1171][v624.Ⲇⵠᐃ] = f47(f150(0.42, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ΔΔ[1171][v624.Δⵠⵠ] = f47(f150(0.42, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ΔΔ[1172] = [];
    ΔΔ[1172][v624.Ⲇⵠᐃ] = f47(f156(0.35, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ΔΔ[1172][v624.Δⵠⵠ] = f47(f156(0.35, 0, ["#0c0c0d", "#613577", "#462966"]));
    ΔΔ[1173] = [];
    ΔΔ[1173][v624.Ⲇⵠᐃ] = f47(f150(0.42, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ΔΔ[1173][v624.Δⵠⵠ] = f47(f150(0.42, 0, ["#0c0c0d", "#613577", "#462966"]));
    ΔΔ[1164] = f47(f142(0.35, ["#B6222A"]));
    ΔΔ[1165] = f47(f156(0.35, 0, [vVUndefined13, "#B6222A"]));
    ΔΔ[1166] = f47(f150(0.35, 0, [vVVVVVUndefined132, "#B6222A"]));
    ΔΔ[1167] = f47(f142(0.35, ["#22E066"]));
    ΔΔ[1168] = f47(f156(0.35, 0, [undefined, "#22E066"]));
    ΔΔ[1169] = f47(f150(0.35, 0, [undefined, "#22E066"]));
    ΔΔ[84] = [];
    ΔΔ[84][v624.Ⲇⵠᐃ] = f47(f151(0.3, true, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]));
    ΔΔ[84][v624.Δⵠⵠ] = f47(f151(0.3, true, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
    ΔΔ[83] = [];
    ΔΔ[83][v624.Ⲇⵠᐃ] = f47(f175(0.45, vVV3023, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"]));
    ΔΔ[83][v624.Δⵠⵠ] = f47(f175(0.45, vV30, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"]));
    ΔΔ[234] = [];
    ΔΔ[234][v624.Ⲇⵠᐃ] = f47(f256(0.63, true, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
    ΔΔ[234][v624.Δⵠⵠ] = f47(f256(0.63, vV305, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ΔΔ[216] = [];
    ΔΔ[216][v624.Ⲇⵠᐃ] = f47(f182(1, vV303, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
    ΔΔ[216][v624.Δⵠⵠ] = f47(f182(1, true, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ΔΔ[331] = [];
    ΔΔ[331][v624.Ⲇⵠᐃ] = ⵠᐃ.ᐃⵠᐃΔᐃⲆⵠᐃΔ;
    ΔΔ[331][v624.Δⵠⵠ] = ⵠᐃ.ᐃᐃΔᐃᐃᐃⲆΔΔ;
    ΔΔ[292] = [];
    ΔΔ[292][v624.Ⲇⵠᐃ] = f47(f96(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ΔΔ[292][v624.Δⵠⵠ] = f47(f96(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ΔΔ[1102] = [ΔΔ[292]];
    ΔΔ[1102][1] = [];
    ΔΔ[1102][2] = [];
    ΔΔ[1102][1][v624.Ⲇⵠᐃ] = f47(f100(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ΔΔ[1102][1][v624.Δⵠⵠ] = f47(f100(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ΔΔ[1102][2][v624.Ⲇⵠᐃ] = f47(f99(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ΔΔ[1102][2][v624.Δⵠⵠ] = f47(f99(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ΔΔ[85] = [];
    ΔΔ[85][v624.Ⲇⵠᐃ] = f47(f95(3 - Math.PI / 2, f184(0.6, vVV3024, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
    ΔΔ[85][v624.Δⵠⵠ] = f47(f95(3 - Math.PI / 2, f184(0.6, true, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
    ΔΔ[977] = [];
    ΔΔ[977][v624.Ⲇⵠᐃ] = f47(f116(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
    ΔΔ[977][v624.Δⵠⵠ] = f47(f116(0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
    ΔΔ[1047] = f47(function (p1110, p1111) {
      var v1478 = document.createElement("canvas");
      var v1479 = v1478.getContext("2d");
      v1478.width = p1110 * 650;
      v1478.height = p1110 * 650;
      v1479.scale(1.9, 1.9);
      v1479.save();
      v1479.translate(p1110 * 202.5, p1110 * 147.5);
      f87(v1479, p1110 * -96.5, p1110 * -21.5, p1110 * 193, p1110 * 193, p1110 * 0);
      v1479.restore();
      f90(v1479, p1111[4], p1111[1], p1110 * 12);
      v1479.save();
      v1479.translate(p1110 * 203.5, p1110 * 121.5);
      f87(v1479, p1110 * -115.5, p1110 * -20.5, p1110 * 231, p1110 * 41, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[1], p1110 * 12);
      v1479.save();
      v1479.translate(p1110 * 203.5, p1110 * 299);
      f87(v1479, p1110 * -115.5, p1110 * -20, p1110 * 231, p1110 * 40, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[1], p1110 * 12);
      v1479.save();
      v1479.translate(p1110 * 298.5, p1110 * 210);
      f87(v1479, p1110 * -20.5, p1110 * -109, p1110 * 41, p1110 * 218, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[1], p1110 * 12);
      v1479.save();
      v1479.translate(p1110 * 108.5, p1110 * 210);
      f87(v1479, p1110 * -20.5, p1110 * -109, p1110 * 41, p1110 * 218, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[1], p1110 * 12);
      v1479.save();
      v1479.translate(p1110 * 204, p1110 * 121.5);
      f87(v1479, p1110 * -92, p1110 * -9.5, p1110 * 184, p1110 * 19, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[3], p1110 * 10);
      v1479.save();
      v1479.translate(p1110 * 197, p1110 * 299);
      f87(v1479, p1110 * 85, p1110 * -9, p1110 * -170, p1110 * 18, p1110 * 10);
      v1479.restore();
      f90(v1479, p1111[3], p1111[3], p1110 * 10);
      v1479.beginPath();
      v1479.lineCap = "round";
      v1479.lineJoin = "round";
      v1479.moveTo(p1110 * 94, p1110 * 317);
      v1479.bezierCurveTo(p1110 * 110.5, p1110 * 299.5, p1110 * 110.5, p1110 * 299.5, p1110 * 127, p1110 * 282);
      v1479.closePath();
      f90(v1479, vVVVUndefined824, p1111[1], p1110 * 12);
      v1479.beginPath();
      v1479.lineCap = "round";
      v1479.lineJoin = "round";
      v1479.moveTo(p1110 * 279, p1110 * 142);
      v1479.bezierCurveTo(p1110 * 296.5, p1110 * 125.5, p1110 * 296.5, p1110 * 125.5, p1110 * 314, p1110 * 109);
      v1479.closePath();
      f90(v1479, undefined, p1111[1], p1110 * 12);
      v1479.beginPath();
      v1479.lineCap = "round";
      v1479.lineJoin = "round";
      v1479.moveTo(p1110 * 93, p1110 * 106);
      v1479.bezierCurveTo(p1110 * 110.5, p1110 * 124, p1110 * 110.5, p1110 * 124, p1110 * 128, p1110 * 142);
      v1479.closePath();
      f90(v1479, undefined, p1111[1], p1110 * 12);
      v1479.beginPath();
      v1479.lineCap = "round";
      v1479.lineJoin = "round";
      v1479.moveTo(p1110 * 281, p1110 * 282);
      v1479.bezierCurveTo(p1110 * 296, p1110 * 297.5, p1110 * 296, p1110 * 297.5, p1110 * 311, p1110 * 313);
      v1479.closePath();
      f90(v1479, vVVVVUndefined82, p1111[1], p1110 * 12);
      return v1478;
    }(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
    ΔΔ[978] = f47(function (p1112, p1113) {
      var v1480 = document.createElement("canvas");
      var v1481 = v1480.getContext("2d");
      v1480.width = p1112 * 400;
      v1480.height = p1112 * 400;
      v1481.save();
      v1481.translate(p1112 * 202.5, p1112 * 147.5);
      f87(v1481, p1112 * -96.5, p1112 * -21.5, p1112 * 193, p1112 * 43, p1112 * 0);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 202.5, p1112 * 190.5);
      f87(v1481, p1112 * 96.5, p1112 * -21.5, p1112 * -193, p1112 * 43, p1112 * 0);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 202.5, p1112 * 233.5);
      f87(v1481, p1112 * -96.5, p1112 * -20.5, p1112 * 193, p1112 * 41, p1112 * 0);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 202.5, p1112 * 275);
      f87(v1481, p1112 * 96.5, p1112 * -21, p1112 * -193, p1112 * 42, p1112 * 0);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 203.5, p1112 * 121.5);
      f87(v1481, p1112 * -115.5, p1112 * -20.5, p1112 * 231, p1112 * 41, p1112 * 10);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 203.5, p1112 * 299);
      f87(v1481, p1112 * -115.5, p1112 * -20, p1112 * 231, p1112 * 40, p1112 * 10);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 298.5, p1112 * 210);
      f87(v1481, p1112 * -20.5, p1112 * -109, p1112 * 41, p1112 * 218, p1112 * 10);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      v1481.save();
      v1481.translate(p1112 * 108.5, p1112 * 210);
      f87(v1481, p1112 * -20.5, p1112 * -109, p1112 * 41, p1112 * 218, p1112 * 10);
      v1481.restore();
      f90(v1481, p1113[0], p1113[0], p1112 * 12);
      return v1480;
    }(0.3, ["#BB0000"]));
    ΔΔ[877] = f119(1, [{
      f: f187,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ΔΔ[243] = f119(1.5, [{
      f: f234,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#120202", "#750a0a", "#991616", "#120202"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ΔΔ[888] = f249(0.35, ["#072428", "#67A242", "#67A242"], 0);
    ΔΔ[889] = f249(0.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1);
    ΔΔ[890] = f249(0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
    ΔΔ[891] = f249(0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
    if (ⲆᐃᐃⵠΔⵠⵠ) {
      ΔΔ[388] = f47(function (p1114) {
        var v1482 = document.createElement("canvas");
        var v1483 = v1482.getContext("2d");
        var v1484 = p1114 * 200;
        var v1485 = p1114 * 180;
        var v1486 = p1114 * 8;
        v1482.width = v1484;
        v1482.height = v1485;
        v1483.beginPath();
        f87(v1483, 0, 0, v1484, v1485 - v1486, v1486);
        v1483.globalAlpha = 0.8;
        f90(v1483, "#1D6055");
        v1483.globalAlpha = 1;
        var vF166 = f166(p1114, "Leaderboard", 25, "#FFF");
        v1483.drawImage(vF166, (v1484 - vF166.width) / 2, p1114 * 5);
        return v1482;
      }(1));
    } else {
      ΔΔ[388] = f47(function (p1115) {
        var v1487 = document.createElement("canvas");
        var v1488 = v1487.getContext("2d");
        var v1489 = p1115 * 200;
        var v1490 = p1115 * 270;
        var v1491 = p1115 * 8;
        v1487.width = v1489;
        v1487.height = v1490 + 20;
        v1488.beginPath();
        f87(v1488, 0, 0, v1489, v1490 - v1491, v1491);
        v1488.globalAlpha = 0.5;
        f90(v1488, "#1D6055");
        v1488.globalAlpha = 1;
        var vF1662 = f166(p1115, "Leaderboard", 25, "#FFF");
        v1488.drawImage(vF1662, (v1489 - vF1662.width) / 2, p1115 * 5);
        return v1487;
      }(1));
    }
    if (ⲆᐃᐃⵠΔⵠⵠ) {
      ΔΔ[377] = f47(function (p1116) {
        var v1492 = document.createElement("canvas");
        var v1493 = v1492.getContext("2d");
        var v1494 = p1116 * 335;
        var v1495 = p1116 * 250;
        var v1496 = p1116 * 120;
        var v1497 = p1116 * 20;
        var v1498 = p1116 * 35;
        var v1499 = p1116 * 65;
        var v1500 = p1116 * 2;
        var v1501 = p1116 * 4;
        v1492.width = v1494;
        v1492.height = v1496;
        v1493.beginPath();
        v1493.translate(0, p1116 * 15);
        f87(v1493, v1499, 0, v1495, v1497, v1500);
        f90(v1493, null, "#69A148", v1501);
        v1493.translate(0, v1498);
        f87(v1493, v1499, 0, v1495, v1497, v1500);
        f90(v1493, null, "#AF352A", v1501);
        v1493.translate(0, v1498);
        f87(v1493, v1499, 0, v1495, v1497, v1500);
        f90(v1493, null, "#669BB1", v1501);
        return v1492;
      }(0.75));
    } else {
      ΔΔ[377] = f47(function (p1117) {
        var v1502 = document.createElement("canvas");
        var v1503 = v1502.getContext("2d");
        var v1504 = p1117 * 950;
        var v1505 = p1117 * 180;
        var v1506 = p1117 * 50;
        var v1507 = p1117 * 20;
        var v1508 = p1117 * 240;
        var v1509 = p1117 * 35;
        var v1510 = p1117 * 1;
        var v1511 = p1117 * 4;
        var v1512 = p1117 * 4;
        v1502.width = v1504;
        v1502.height = v1506;
        v1503.translate(0, p1117 * 15);
        f87(v1503, v1509, v1510, v1505, v1507, v1511);
        f90(v1503, null, "#69A148", v1512);
        var v1513 = ΔΔ[888];
        v1503.drawImage(v1513, 17, -8);
        v1503.translate(v1508, 0);
        f87(v1503, v1509, v1510, v1505, v1507, v1511);
        f90(v1503, null, "#AF352A", v1512);
        v1513 = ΔΔ[890];
        v1503.drawImage(v1513, 17, -9);
        v1503.translate(v1508, 0);
        f87(v1503, v1509, v1510, v1505, v1507, v1511);
        f90(v1503, null, "#669BB1", v1512);
        v1513 = ΔΔ[889];
        v1503.drawImage(v1513, 17, -8);
        v1503.translate(v1508, 0);
        f87(v1503, v1509, v1510, v1505, v1507, v1511);
        f90(v1503, null, "#074A87", v1512);
        v1513 = ΔΔ[891];
        v1503.drawImage(v1513, 17, -8);
        return v1502;
      }(1));
    }
    if (ⲆᐃᐃⵠΔⵠⵠ) {
      ΔΔ[827] = f47(f265(0.75));
    } else {
      ΔΔ[827] = f47(f265(1));
    }
    ΔΔ[1041] = f47(f227(0.16, true, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
    ΔΔ[675] = f47(f95(5.8, f167(0.15, vVV30, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
    ΔΔ[393] = [];
    ΔΔ[603] = [];
    for (v1424 = 0; v1424 < 40; v1424++) {
      ΔΔ[603][v1424] = f166(1, "" + (v1424 + 1), 12, "#FFF");
    }
    ΔΔ[957] = [];
    ΔΔ[957].push(f47(f254(0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
    ΔΔ[957].push(f47(f254(0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
    ΔΔ[957].push(f47(f254(0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
    ΔΔ[974] = [];
    ΔΔ[974].push(f47(function (p1118) {
      var v1514 = document.createElement("canvas");
      var v1515 = v1514.getContext("2d");
      v1514.width = p1118 * 321;
      v1514.height = p1118 * 345;
      v1515.translate(0, p1118 * 5);
      v1515.translate(0, p1118 * 20);
      f93(v1515, p1118 * 160.5, p1118 * 159.5, p1118 * 156.39595138242822);
      f90(v1515, "#322413", "#322413", p1118 * 4);
      v1515.translate(0, p1118 * -20);
      f93(v1515, p1118 * 160.5, p1118 * 159.5, p1118 * 156.39595138242822);
      f90(v1515, "#392C16", "#5E3E1A", p1118 * 10);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 31.999969482421875, p1118 * 163.07290649414062);
      v1515.bezierCurveTo(p1118 * 22.999969482421875, p1118 * 67.07290649414062, p1118 * 106, p1118 * 20.072906494140625, p1118 * 162, p1118 * 23.072906494140625);
      v1515.bezierCurveTo(p1118 * 269.9999694824219, p1118 * 31.072906494140625, p1118 * 292.9999694824219, p1118 * 120.07290649414062, p1118 * 294.9999694824219, p1118 * 161.07290649414062);
      v1515.bezierCurveTo(p1118 * 165.49996948242188, p1118 * 162.07290649414062, p1118 * 165.49996948242188, p1118 * 162.07290649414062, p1118 * 35.999969482421875, p1118 * 163.07290649414062);
      v1515.closePath();
      f90(v1515, "#12432D");
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 32.999969482421875, p1118 * 165.07290649414062);
      v1515.bezierCurveTo(p1118 * 16.999969482421875, p1118 * 221.07290649414062, p1118 * 85, p1118 * 289.0729064941406, p1118 * 156, p1118 * 294.0729064941406);
      v1515.bezierCurveTo(p1118 * 263.9999694824219, p1118 * 293.0729064941406, p1118 * 295.9999694824219, p1118 * 199.07290649414062, p1118 * 294.9999694824219, p1118 * 159.07290649414062);
      v1515.closePath();
      f90(v1515, "#3A2A0D");
      f93(v1515, p1118 * 161, p1118 * 158.07290649414062, p1118 * 133.4053971921676);
      f90(v1515, vVVVVVUndefined1322, "#5E3E1A", p1118 * 10);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 31.999969482421875, p1118 * 161.62844848632812);
      v1515.bezierCurveTo(p1118 * 162.49996948242188, p1118 * 161.62844848632812, p1118 * 162.49996948242188, p1118 * 161.62844848632812, p1118 * 292.9999694824219, p1118 * 161.62844848632812);
      v1515.closePath();
      f90(v1515, undefined, "#5E3E1A", p1118 * 12);
      v1515.translate(0, p1118 * 8);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 66, p1118 * 158.29513549804688);
      v1515.bezierCurveTo(p1118 * 86, p1118 * 158.29513549804688, p1118 * 86, p1118 * 158.29513549804688, p1118 * 106, p1118 * 158.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVVUndefined82, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 57.999969482421875, p1118 * 117.29513549804688);
      v1515.bezierCurveTo(p1118 * 85, p1118 * 128.29513549804688, p1118 * 85, p1118 * 128.29513549804688, p1118 * 113, p1118 * 139.29513549804688);
      v1515.closePath();
      f90(v1515, vVUndefined8, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 95, p1118 * 90.29513549804688);
      v1515.bezierCurveTo(p1118 * 112, p1118 * 105.79513549804688, p1118 * 112, p1118 * 105.79513549804688, p1118 * 129, p1118 * 121.29513549804688);
      v1515.closePath();
      f90(v1515, undefined, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 116, p1118 * 52.850677490234375);
      v1515.bezierCurveTo(p1118 * 130, p1118 * 83.85067749023438, p1118 * 130, p1118 * 83.85067749023438, p1118 * 144, p1118 * 114.85067749023438);
      v1515.closePath();
      f90(v1515, vVUndefined13, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 159, p1118 * 61.295135498046875);
      v1515.bezierCurveTo(p1118 * 160.49996948242188, p1118 * 92.29513549804688, p1118 * 160.49996948242188, p1118 * 92.29513549804688, p1118 * 160, p1118 * 123.29513549804688);
      v1515.closePath();
      f90(v1515, vUndefined, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 203, p1118 * 51.295135498046875);
      v1515.bezierCurveTo(p1118 * 190.49996948242188, p1118 * 83.29513549804688, p1118 * 190.49996948242188, p1118 * 83.29513549804688, p1118 * 176, p1118 * 115.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVVUndefined82, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 225, p1118 * 89.29513549804688);
      v1515.bezierCurveTo(p1118 * 210.49996948242188, p1118 * 104.79513549804688, p1118 * 210.49996948242188, p1118 * 104.79513549804688, p1118 * 194, p1118 * 120.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVUndefined132, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 266.9999694824219, p1118 * 112.29513549804688);
      v1515.bezierCurveTo(p1118 * 233.49996948242188, p1118 * 127.29513549804688, p1118 * 233.49996948242188, p1118 * 127.29513549804688, p1118 * 199, p1118 * 142.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVVVUndefined1322, "#c7a726", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 256.9999694824219, p1118 * 155.29513549804688);
      v1515.bezierCurveTo(p1118 * 238.49996948242188, p1118 * 156.29513549804688, p1118 * 238.49996948242188, p1118 * 156.29513549804688, p1118 * 219, p1118 * 157.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVUndefined132, "#c7a726", p1118 * 12);
      v1515.translate(0, p1118 * -8);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 66, p1118 * 158.29513549804688);
      v1515.bezierCurveTo(p1118 * 86, p1118 * 158.29513549804688, p1118 * 86, p1118 * 158.29513549804688, p1118 * 106, p1118 * 158.29513549804688);
      v1515.closePath();
      f90(v1515, undefined, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 57.999969482421875, p1118 * 117.29513549804688);
      v1515.bezierCurveTo(p1118 * 85, p1118 * 128.29513549804688, p1118 * 85, p1118 * 128.29513549804688, p1118 * 113, p1118 * 139.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVUndefined823, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 95, p1118 * 90.29513549804688);
      v1515.bezierCurveTo(p1118 * 112, p1118 * 105.79513549804688, p1118 * 112, p1118 * 105.79513549804688, p1118 * 129, p1118 * 121.29513549804688);
      v1515.closePath();
      f90(v1515, vVVUndefined83, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 116, p1118 * 52.850677490234375);
      v1515.bezierCurveTo(p1118 * 130, p1118 * 83.85067749023438, p1118 * 130, p1118 * 83.85067749023438, p1118 * 144, p1118 * 114.85067749023438);
      v1515.closePath();
      f90(v1515, vVUndefined, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 159, p1118 * 61.295135498046875);
      v1515.bezierCurveTo(p1118 * 160.49996948242188, p1118 * 92.29513549804688, p1118 * 160.49996948242188, p1118 * 92.29513549804688, p1118 * 160, p1118 * 123.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVUndefined823, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 203, p1118 * 51.295135498046875);
      v1515.bezierCurveTo(p1118 * 190.49996948242188, p1118 * 83.29513549804688, p1118 * 190.49996948242188, p1118 * 83.29513549804688, p1118 * 176, p1118 * 115.29513549804688);
      v1515.closePath();
      f90(v1515, vVVVUndefined82, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 225, p1118 * 89.29513549804688);
      v1515.bezierCurveTo(p1118 * 210.49996948242188, p1118 * 104.79513549804688, p1118 * 210.49996948242188, p1118 * 104.79513549804688, p1118 * 194, p1118 * 120.29513549804688);
      v1515.closePath();
      f90(v1515, undefined, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 266.9999694824219, p1118 * 112.29513549804688);
      v1515.bezierCurveTo(p1118 * 233.49996948242188, p1118 * 127.29513549804688, p1118 * 233.49996948242188, p1118 * 127.29513549804688, p1118 * 199, p1118 * 142.29513549804688);
      v1515.closePath();
      f90(v1515, vUndefined, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 256.9999694824219, p1118 * 155.29513549804688);
      v1515.bezierCurveTo(p1118 * 238.49996948242188, p1118 * 156.29513549804688, p1118 * 238.49996948242188, p1118 * 156.29513549804688, p1118 * 219, p1118 * 157.29513549804688);
      v1515.closePath();
      f90(v1515, undefined, "#EDCE4F", p1118 * 12);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 94.00003051757812, p1118 * 164.40341186523438);
      v1515.bezierCurveTo(p1118 * 162.50003051757812, p1118 * 164.40341186523438, p1118 * 230.00003051757812, p1118 * 165.40341186523438, p1118 * 231.00003051757812, p1118 * 164.40341186523438);
      v1515.bezierCurveTo(p1118 * 214.00003051757812, p1118 * 267.4034118652344, p1118 * 92.00003051757812, p1118 * 243.40341186523438, p1118 * 93.00003051757812, p1118 * 165.40341186523438);
      v1515.closePath();
      f90(v1515, "#704618", "#5D3D1A", p1118 * 8);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1118 * 96, p1118 * 166);
      v1515.bezierCurveTo(p1118 * 88, p1118 * 117, p1118 * 129, p1118 * 92, p1118 * 161, p1118 * 91);
      v1515.bezierCurveTo(p1118 * 201, p1118 * 90, p1118 * 223, p1118 * 121, p1118 * 230, p1118 * 161);
      v1515.closePath();
      f90(v1515, "#ECBE35", "#EDCE4F", p1118 * 8);
      f93(v1515, p1118 * 160.00003051757812, p1118 * 166.49432373046875, p1118 * 28.30194339616981);
      f90(v1515, "#392C16", "#5E3E1A", p1118 * 10);
      return v1514;
    }(0.22)));
    ΔΔ[974].push(f47(function (p1119) {
      var v1516 = document.createElement("canvas");
      var v1517 = v1516.getContext("2d");
      v1516.width = p1119 * 321;
      v1516.height = p1119 * 345;
      v1517.translate(0, p1119 * 5);
      v1517.translate(0, p1119 * 20);
      f93(v1517, p1119 * 160.5, p1119 * 159.5, p1119 * 156.39595138242822);
      f90(v1517, "#322413", "#322413", p1119 * 4);
      v1517.translate(0, p1119 * -20);
      f93(v1517, p1119 * 160.5, p1119 * 159.5, p1119 * 156.39595138242822);
      f90(v1517, "#392C16", "#5E3E1A", p1119 * 10);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 31.999969482421875, p1119 * 163.07290649414062);
      v1517.bezierCurveTo(p1119 * 22.999969482421875, p1119 * 67.07290649414062, p1119 * 106, p1119 * 20.072906494140625, p1119 * 162, p1119 * 23.072906494140625);
      v1517.bezierCurveTo(p1119 * 269.9999694824219, p1119 * 31.072906494140625, p1119 * 292.9999694824219, p1119 * 120.07290649414062, p1119 * 294.9999694824219, p1119 * 161.07290649414062);
      v1517.bezierCurveTo(p1119 * 165.49996948242188, p1119 * 162.07290649414062, p1119 * 165.49996948242188, p1119 * 162.07290649414062, p1119 * 35.999969482421875, p1119 * 163.07290649414062);
      v1517.closePath();
      f90(v1517, "#3A2A0D");
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 32.999969482421875, p1119 * 165.07290649414062);
      v1517.bezierCurveTo(p1119 * 16.999969482421875, p1119 * 221.07290649414062, p1119 * 85, p1119 * 289.0729064941406, p1119 * 156, p1119 * 294.0729064941406);
      v1517.bezierCurveTo(p1119 * 263.9999694824219, p1119 * 293.0729064941406, p1119 * 295.9999694824219, p1119 * 199.07290649414062, p1119 * 294.9999694824219, p1119 * 159.07290649414062);
      v1517.closePath();
      f90(v1517, "#071A1B");
      f93(v1517, p1119 * 161, p1119 * 158.07290649414062, p1119 * 133.4053971921676);
      f90(v1517, undefined, "#5E3E1A", p1119 * 10);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 31.999969482421875, p1119 * 161.62844848632812);
      v1517.bezierCurveTo(p1119 * 162.49996948242188, p1119 * 161.62844848632812, p1119 * 162.49996948242188, p1119 * 161.62844848632812, p1119 * 292.9999694824219, p1119 * 161.62844848632812);
      v1517.closePath();
      f90(v1517, vVVVVUndefined132, "#5E3E1A", p1119 * 12);
      v1517.translate(0, p1119 * 8);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 66, p1119 * 158.29513549804688);
      v1517.bezierCurveTo(p1119 * 86, p1119 * 158.29513549804688, p1119 * 86, p1119 * 158.29513549804688, p1119 * 106, p1119 * 158.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVVUndefined132, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 57.999969482421875, p1119 * 117.29513549804688);
      v1517.bezierCurveTo(p1119 * 85, p1119 * 128.29513549804688, p1119 * 85, p1119 * 128.29513549804688, p1119 * 113, p1119 * 139.29513549804688);
      v1517.closePath();
      f90(v1517, vVVUndefined82, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 95, p1119 * 90.29513549804688);
      v1517.bezierCurveTo(p1119 * 112, p1119 * 105.79513549804688, p1119 * 112, p1119 * 105.79513549804688, p1119 * 129, p1119 * 121.29513549804688);
      v1517.closePath();
      f90(v1517, vUndefined, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 116, p1119 * 52.850677490234375);
      v1517.bezierCurveTo(p1119 * 130, p1119 * 83.85067749023438, p1119 * 130, p1119 * 83.85067749023438, p1119 * 144, p1119 * 114.85067749023438);
      v1517.closePath();
      f90(v1517, undefined, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 159, p1119 * 61.295135498046875);
      v1517.bezierCurveTo(p1119 * 160.49996948242188, p1119 * 92.29513549804688, p1119 * 160.49996948242188, p1119 * 92.29513549804688, p1119 * 160, p1119 * 123.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 203, p1119 * 51.295135498046875);
      v1517.bezierCurveTo(p1119 * 190.49996948242188, p1119 * 83.29513549804688, p1119 * 190.49996948242188, p1119 * 83.29513549804688, p1119 * 176, p1119 * 115.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 225, p1119 * 89.29513549804688);
      v1517.bezierCurveTo(p1119 * 210.49996948242188, p1119 * 104.79513549804688, p1119 * 210.49996948242188, p1119 * 104.79513549804688, p1119 * 194, p1119 * 120.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVUndefined132, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 266.9999694824219, p1119 * 112.29513549804688);
      v1517.bezierCurveTo(p1119 * 233.49996948242188, p1119 * 127.29513549804688, p1119 * 233.49996948242188, p1119 * 127.29513549804688, p1119 * 199, p1119 * 142.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#281C08", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 256.9999694824219, p1119 * 155.29513549804688);
      v1517.bezierCurveTo(p1119 * 238.49996948242188, p1119 * 156.29513549804688, p1119 * 238.49996948242188, p1119 * 156.29513549804688, p1119 * 219, p1119 * 157.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#281C08", p1119 * 12);
      v1517.translate(0, p1119 * -8);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 66, p1119 * 158.29513549804688);
      v1517.bezierCurveTo(p1119 * 86, p1119 * 158.29513549804688, p1119 * 86, p1119 * 158.29513549804688, p1119 * 106, p1119 * 158.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 57.999969482421875, p1119 * 117.29513549804688);
      v1517.bezierCurveTo(p1119 * 85, p1119 * 128.29513549804688, p1119 * 85, p1119 * 128.29513549804688, p1119 * 113, p1119 * 139.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 95, p1119 * 90.29513549804688);
      v1517.bezierCurveTo(p1119 * 112, p1119 * 105.79513549804688, p1119 * 112, p1119 * 105.79513549804688, p1119 * 129, p1119 * 121.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVVUndefined823, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 116, p1119 * 52.850677490234375);
      v1517.bezierCurveTo(p1119 * 130, p1119 * 83.85067749023438, p1119 * 130, p1119 * 83.85067749023438, p1119 * 144, p1119 * 114.85067749023438);
      v1517.closePath();
      f90(v1517, undefined, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 159, p1119 * 61.295135498046875);
      v1517.bezierCurveTo(p1119 * 160.49996948242188, p1119 * 92.29513549804688, p1119 * 160.49996948242188, p1119 * 92.29513549804688, p1119 * 160, p1119 * 123.29513549804688);
      v1517.closePath();
      f90(v1517, undefined, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 203, p1119 * 51.295135498046875);
      v1517.bezierCurveTo(p1119 * 190.49996948242188, p1119 * 83.29513549804688, p1119 * 190.49996948242188, p1119 * 83.29513549804688, p1119 * 176, p1119 * 115.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVVVUndefined132, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 225, p1119 * 89.29513549804688);
      v1517.bezierCurveTo(p1119 * 210.49996948242188, p1119 * 104.79513549804688, p1119 * 210.49996948242188, p1119 * 104.79513549804688, p1119 * 194, p1119 * 120.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVVUndefined132, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 266.9999694824219, p1119 * 112.29513549804688);
      v1517.bezierCurveTo(p1119 * 233.49996948242188, p1119 * 127.29513549804688, p1119 * 233.49996948242188, p1119 * 127.29513549804688, p1119 * 199, p1119 * 142.29513549804688);
      v1517.closePath();
      f90(v1517, vVUndefined13, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 256.9999694824219, p1119 * 155.29513549804688);
      v1517.bezierCurveTo(p1119 * 238.49996948242188, p1119 * 156.29513549804688, p1119 * 238.49996948242188, p1119 * 156.29513549804688, p1119 * 219, p1119 * 157.29513549804688);
      v1517.closePath();
      f90(v1517, vVVVVUndefined82, "#5E3C10", p1119 * 12);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 96, p1119 * 166);
      v1517.bezierCurveTo(p1119 * 88, p1119 * 117, p1119 * 129, p1119 * 92, p1119 * 161, p1119 * 91);
      v1517.bezierCurveTo(p1119 * 201, p1119 * 90, p1119 * 223, p1119 * 121, p1119 * 230, p1119 * 161);
      v1517.closePath();
      f90(v1517, "#704618", "#5D3D1A", p1119 * 8);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1119 * 94.00003051757812, p1119 * 164.40341186523438);
      v1517.bezierCurveTo(p1119 * 162.50003051757812, p1119 * 164.40341186523438, p1119 * 230.00003051757812, p1119 * 165.40341186523438, p1119 * 231.00003051757812, p1119 * 164.40341186523438);
      v1517.bezierCurveTo(p1119 * 214.00003051757812, p1119 * 267.4034118652344, p1119 * 92.00003051757812, p1119 * 243.40341186523438, p1119 * 93.00003051757812, p1119 * 165.40341186523438);
      v1517.closePath();
      f90(v1517, "#E1DDD5", "#EAE7E4", p1119 * 8);
      f93(v1517, p1119 * 160.00003051757812, p1119 * 166.49432373046875, p1119 * 28.30194339616981);
      f90(v1517, "#392C16", "#5E3E1A", p1119 * 10);
      return v1516;
    }(0.22)));
    ΔΔ[975] = f47(function (p1120) {
      var v1518 = document.createElement("canvas");
      var v1519 = v1518.getContext("2d");
      v1518.width = p1120 * 321;
      v1518.height = p1120 * 345;
      v1519.translate(0, p1120 * 5);
      f93(v1519, p1120 * 161.00003051757812, p1120 * 165.40341186523438, p1120 * 20.808652046684813);
      f90(v1519, "#C09D6F", "#A37943", p1120 * 10);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1120 * 162.00003051757812, p1120 * 48.403411865234375);
      v1519.bezierCurveTo(p1120 * 172.50003051757812, p1120 * 67.40341186523438, p1120 * 172.50003051757812, p1120 * 67.40341186523438, p1120 * 183.00003051757812, p1120 * 86.40341186523438);
      v1519.bezierCurveTo(p1120 * 160.50003051757812, p1120 * 86.40341186523438, p1120 * 160.50003051757812, p1120 * 86.40341186523438, p1120 * 138.00003051757812, p1120 * 86.40341186523438);
      v1519.closePath();
      f90(v1519, "#C09D6F", "#A37943", p1120 * 10);
      v1519.save();
      v1519.translate(p1120 * 161.50003051757812, p1120 * 117.90341186523438);
      f87(v1519, p1120 * -5.5, p1120 * -37.5, p1120 * 11, p1120 * 75, p1120 * 10);
      v1519.restore();
      f90(v1519, "#C09D6F", "#A37943", p1120 * 10);
      v1519.save();
      v1519.translate(p1120 * 162.00003051757812, p1120 * 78.90341186523438);
      f87(v1519, p1120 * -10, p1120 * -5.5, p1120 * 20, p1120 * 11, p1120 * 1);
      v1519.restore();
      f90(v1519, "#C09D6F");
      f93(v1519, p1120 * 161.00003051757812, p1120 * 163.6761474609375, p1120 * 17.08800749063506);
      f90(v1519, "#C09D6F");
      return v1518;
    }(0.22));
    ΔΔ[976] = [];
    ΔΔ[976].push(f47(f110(1.5, ["#795026", "#654320", "#eda80d"], 0)));
    ΔΔ[976].push(f47(f110(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
    ΔΔ[976].push(f47(f110(1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
    ΔΔ[684] = ⵠᐃ.ᐃᐃⲆΔⵠⵠⵠ;
    ΔΔ[685] = ⵠᐃ.ᐃⲆⵠᐃᐃⵠⵠ;
    ΔΔ[686] = ⵠᐃ.ⵠΔⲆⲆⲆⲆᐃ;
    ΔΔ[687] = ⵠᐃ.ⲆⲆΔⲆᐃΔⲆ;
    ΔΔ[655] = f166(1, "Show spectators", 25, "#FFF", undefined, undefined, "#000", 5, 220);
    ΔΔ[663] = f166(1, "Reconnecting...", 30, "#FFF");
    console.log(vVVVVVUndefined1322, undefined);
  }
  function f262(p1121, p1122, p1123) {
    var v1520 = document.createElement("canvas");
    var v1521 = v1520.getContext("2d");
    v1520.width = p1121 * 400;
    v1520.height = p1121 * 400;
    v1521.translate(0, p1121 * 15);
    v1521.globalAlpha = p1122 ? 0.5 : 1;
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 102, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 108, p1121 * 216.5, p1121 * 108, p1121 * 216.5, p1121 * 114, p1121 * 279);
    v1521.bezierCurveTo(p1121 * 124, p1121 * 300, p1121 * 237, p1121 * 299, p1121 * 251, p1121 * 279);
    v1521.bezierCurveTo(p1121 * 257, p1121 * 217, p1121 * 257, p1121 * 217, p1121 * 263, p1121 * 155);
    v1521.bezierCurveTo(p1121 * 248, p1121 * 194, p1121 * 91, p1121 * 180, p1121 * 103, p1121 * 156);
    v1521.closePath();
    f90(v1521, p1123[0]);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 102, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 106, p1121 * 53, p1121 * 255, p1121 * 53, p1121 * 263, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 248, p1121 * 38, p1121 * 99, p1121 * 69, p1121 * 103, p1121 * 154);
    v1521.closePath();
    f90(v1521, vVVVVUndefined82, p1123[0], p1121 * 11);
    v1521.translate(0, p1121 * -5);
    v1521.globalAlpha = 1;
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 103, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 98, p1121 * 119, p1121 * 264, p1121 * 119, p1121 * 264, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 271, p1121 * 189, p1121 * 94, p1121 * 188, p1121 * 103, p1121 * 154);
    v1521.closePath();
    f90(v1521, p1123[3], p1123[2], p1121 * 12);
    v1521.translate(0, p1121 * 25);
    v1521.globalAlpha = 1;
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 103, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 98, p1121 * 119, p1121 * 264, p1121 * 119, p1121 * 264, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 271, p1121 * 189, p1121 * 94, p1121 * 188, p1121 * 103, p1121 * 154);
    v1521.closePath();
    f90(v1521, p1123[5]);
    v1521.translate(0, p1121 * -25);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 102, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 108, p1121 * 216.5, p1121 * 108, p1121 * 216.5, p1121 * 114, p1121 * 279);
    v1521.bezierCurveTo(p1121 * 124, p1121 * 300, p1121 * 237, p1121 * 299, p1121 * 251, p1121 * 279);
    v1521.bezierCurveTo(p1121 * 257, p1121 * 217, p1121 * 257, p1121 * 217, p1121 * 263, p1121 * 155);
    v1521.bezierCurveTo(p1121 * 248, p1121 * 194, p1121 * 91, p1121 * 180, p1121 * 103, p1121 * 156);
    v1521.closePath();
    f90(v1521, p1123[1], p1123[2], p1121 * 12);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 182, p1121 * 185);
    v1521.bezierCurveTo(p1121 * 182.5, p1121 * 237.5, p1121 * 182.5, p1121 * 237.5, p1121 * 183, p1121 * 290);
    v1521.closePath();
    f90(v1521, undefined, p1123[2], p1121 * 12);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 222, p1121 * 287);
    v1521.bezierCurveTo(p1121 * 226, p1121 * 233.5, p1121 * 226, p1121 * 233.5, p1121 * 230, p1121 * 180);
    v1521.closePath();
    f90(v1521, vVVVVUndefined823, p1123[2], p1121 * 12);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 145, p1121 * 290);
    v1521.bezierCurveTo(p1121 * 140.5, p1121 * 237, p1121 * 140.5, p1121 * 237, p1121 * 136, p1121 * 184);
    v1521.closePath();
    f90(v1521, p1123[1], p1123[2], p1121 * 11);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 105, p1121 * 184);
    v1521.bezierCurveTo(p1121 * 148, p1121 * 205, p1121 * 231, p1121 * 202, p1121 * 260, p1121 * 182);
    v1521.bezierCurveTo(p1121 * 259, p1121 * 195.5, p1121 * 259, p1121 * 195.5, p1121 * 258, p1121 * 209);
    v1521.bezierCurveTo(p1121 * 217, p1121 * 218, p1121 * 163, p1121 * 225, p1121 * 108, p1121 * 207);
    v1521.closePath();
    f90(v1521, p1123[4], p1123[2], p1121 * 11);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 251, p1121 * 276);
    v1521.bezierCurveTo(p1121 * 251.5, p1121 * 267.5, p1121 * 251.5, p1121 * 267.5, p1121 * 252, p1121 * 259);
    v1521.bezierCurveTo(p1121 * 212, p1121 * 272, p1121 * 156, p1121 * 275, p1121 * 112, p1121 * 260);
    v1521.bezierCurveTo(p1121 * 112.5, p1121 * 269, p1121 * 112.5, p1121 * 269, p1121 * 113, p1121 * 278);
    v1521.bezierCurveTo(p1121 * 155, p1121 * 306, p1121 * 253, p1121 * 286, p1121 * 250, p1121 * 276);
    v1521.closePath();
    f90(v1521, p1123[4], p1123[2], p1121 * 11);
    v1521.beginPath();
    v1521.lineCap = "round";
    v1521.lineJoin = "round";
    v1521.moveTo(p1121 * 102, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 106, p1121 * 53, p1121 * 255, p1121 * 53, p1121 * 263, p1121 * 154);
    v1521.bezierCurveTo(p1121 * 248, p1121 * 38, p1121 * 99, p1121 * 69, p1121 * 103, p1121 * 154);
    v1521.closePath();
    f90(v1521, vVVVVVUndefined132, p1123[2], p1121 * 11);
    return v1520;
  }
  function f263(p1124, p1125, p1126) {
    var v1522 = document.createElement("canvas");
    var v1523 = v1522.getContext("2d");
    v1522.width = p1124 * 95;
    v1522.height = p1124 * 85;
    if (p1126 == 0) {
      v1523.translate(p1124 * 7, p1124 * 15);
      v1523.scale(0.9, 0.9);
      v1523.save();
      f87(v1523, p1124 * 0, p1124 * 5, p1124 * 90, p1124 * 60, 10);
      f90(v1523, p1125[0]);
      v1523.globalCompositeOperation = "destination-out";
      f93(v1523, p1124 * 25, p1124 * 40, p1124 * 10);
      v1523.fill();
      f93(v1523, p1124 * 65, p1124 * 40, p1124 * 10);
      v1523.fill();
      v1523.restore();
      v1523.save();
      f87(v1523, 0, 0, p1124 * 90, p1124 * 60, p1124 * 10);
      f90(v1523, p1125[1]);
      v1523.globalCompositeOperation = "destination-out";
      f93(v1523, p1124 * 25, p1124 * 40, p1124 * 10);
      v1523.fill();
      f93(v1523, p1124 * 65, p1124 * 40, p1124 * 10);
      v1523.fill();
      v1523.restore();
    } else if (p1126 == 1) {
      v1523.scale(0.8, 0.8);
      v1523.translate(p1124 * 15, p1124 * 33);
      v1523.save();
      v1523.scale(0.56, 0.56);
      v1523.translate(p1124 * -39, p1124 * -60);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1124 * 32.5, p1124 * 50.642852783203125);
      v1523.bezierCurveTo(p1124 * 83, p1124 * 69.64285278320312, p1124 * 83, p1124 * 69.64285278320312, p1124 * 133.5, p1124 * 88.64285278320312);
      v1523.bezierCurveTo(p1124 * 93, p1124 * 92.64285278320312, p1124 * 93, p1124 * 92.64285278320312, p1124 * 52.5, p1124 * 96.64285278320312);
      v1523.bezierCurveTo(p1124 * 30.5, p1124 * 100.64285278320312, p1124 * 36.5, p1124 * 94.64285278320312, p1124 * 32.5, p1124 * 84.64285278320312);
      v1523.bezierCurveTo(p1124 * 21.5, p1124 * 45.642852783203125, p1124 * 24.5, p1124 * 48.642852783203125, p1124 * 31.5, p1124 * 50.642852783203125);
      v1523.closePath();
      f90(v1523, p1125[1]);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1124 * 116.5, p1124 * 85.64285278320312);
      v1523.bezierCurveTo(p1124 * 160.5, p1124 * 67.14285278320312, p1124 * 160.5, p1124 * 67.14285278320312, p1124 * 204.5, p1124 * 48.642852783203125);
      v1523.bezierCurveTo(p1124 * 220.5, p1124 * 42.642852783203125, p1124 * 208.5, p1124 * 68.64285278320312, p1124 * 205.5, p1124 * 85.64285278320312);
      v1523.bezierCurveTo(p1124 * 202.5, p1124 * 98.64285278320312, p1124 * 199.5, p1124 * 98.64285278320312, p1124 * 188.5, p1124 * 100.64285278320312);
      v1523.closePath();
      f90(v1523, p1125[1]);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1124 * 166.5, p1124 * 68.64285278320312);
      v1523.bezierCurveTo(p1124 * 147.5, p1124 * 72.64285278320312, p1124 * 145.5, p1124 * 73.64285278320312, p1124 * 142.5, p1124 * 62.642852783203125);
      v1523.bezierCurveTo(p1124 * 121.5, p1124 * 12.642852783203125, p1124 * 122.5, p1124 * 5.642852783203125, p1124 * 117.5, p1124 * 15.642852783203125);
      v1523.bezierCurveTo(p1124 * 105.5, p1124 * 40.642852783203125, p1124 * 105.5, p1124 * 40.642852783203125, p1124 * 93.5, p1124 * 65.64285278320312);
      v1523.bezierCurveTo(p1124 * 89.5, p1124 * 74.64285278320312, p1124 * 84.5, p1124 * 72.64285278320312, p1124 * 73.5, p1124 * 74.64285278320312);
      v1523.bezierCurveTo(p1124 * 98, p1124 * 87.64285278320312, p1124 * 98, p1124 * 87.64285278320312, p1124 * 122.5, p1124 * 100.64285278320312);
      v1523.closePath();
      f90(v1523, p1125[1]);
      v1523.restore();
      v1523.save();
      f87(v1523, 0, p1124 * 15, p1124 * 90, p1124 * 50, p1124 * 10);
      f90(v1523, p1125[0]);
      f87(v1523, 0, p1124 * 10, p1124 * 90, p1124 * 50, p1124 * 10);
      f90(v1523, p1125[1]);
      v1523.globalCompositeOperation = "destination-out";
      f93(v1523, p1124 * 25, p1124 * 40, p1124 * 10);
      v1523.fill();
      f93(v1523, p1124 * 65, p1124 * 40, p1124 * 10);
      v1523.fill();
      v1523.restore();
    }
    return v1522;
  }
  function f264(p1127, p1128, p1129) {
    var v1524 = document.createElement("canvas");
    var v1525 = v1524.getContext("2d");
    v1524.width = p1127 * 170;
    v1524.height = p1127 * 170;
    v1525.globalAlpha = p1128 ? 0.5 : 1;
    v1525.translate(p1127 * -10, p1127 * 10);
    v1525.beginPath();
    v1525.lineCap = "round";
    v1525.lineJoin = "round";
    v1525.moveTo(p1127 * 72.5, p1127 * 4.109375);
    v1525.bezierCurveTo(p1127 * 117, p1127 * 9.609375, p1127 * 117, p1127 * 9.609375, p1127 * 161.5, p1127 * 15.109375);
    v1525.bezierCurveTo(p1127 * 134.5, p1127 * 106.109375, p1127 * 110.5, p1127 * 130.109375, p1127 * 63.5, p1127 * 145.109375);
    v1525.bezierCurveTo(p1127 * 33.5, p1127 * 120.609375, p1127 * 33.5, p1127 * 120.609375, p1127 * 3.5, p1127 * 96.109375);
    v1525.bezierCurveTo(p1127 * 82.5, p1127 * 75.109375, p1127 * 69.5, p1127 * 29.109375, p1127 * 71.5, p1127 * 6.109375);
    v1525.closePath();
    f90(v1525, p1129[0]);
    v1525.globalAlpha = 1;
    v1525.translate(p1127 * 10, p1127 * -10);
    v1525.beginPath();
    v1525.lineCap = "round";
    v1525.lineJoin = "round";
    v1525.moveTo(p1127 * 72.5, p1127 * 4.109375);
    v1525.bezierCurveTo(p1127 * 117, p1127 * 9.609375, p1127 * 117, p1127 * 9.609375, p1127 * 161.5, p1127 * 15.109375);
    v1525.bezierCurveTo(p1127 * 134.5, p1127 * 106.109375, p1127 * 110.5, p1127 * 130.109375, p1127 * 63.5, p1127 * 145.109375);
    v1525.bezierCurveTo(p1127 * 33.5, p1127 * 120.609375, p1127 * 33.5, p1127 * 120.609375, p1127 * 3.5, p1127 * 96.109375);
    v1525.bezierCurveTo(p1127 * 82.5, p1127 * 75.109375, p1127 * 69.5, p1127 * 29.109375, p1127 * 71.5, p1127 * 6.109375);
    v1525.closePath();
    f90(v1525, p1129[1], p1129[2], p1127 * 10);
    return v1524;
  }
  function f265(p1130) {
    var v1526 = document.createElement("canvas");
    var v1527 = v1526.getContext("2d");
    var v1528 = p1130 * 600;
    var v1529 = p1130 * 22;
    var v1530 = p1130 * 4;
    var v1531 = p1130 * 4;
    v1526.width = v1528;
    v1526.height = v1529;
    f87(v1527, p1130 * 5, p1130 * 5, v1528 - p1130 * 10, v1529 - p1130 * 10, v1530);
    f90(v1527, null, "#BBE8EF", v1531);
    return v1526;
  }
  function f266(p1131, p1132, p1133) {
    var v1532 = document.createElement("canvas");
    var v1533 = v1532.getContext("2d");
    v1532.width = p1131 * 81;
    v1532.height = p1131 * 77;
    v1533.translate(0, p1131 * 10);
    v1533.scale(0.2, 0.2);
    v1533.translate(0, p1131 * -30);
    if (p1133 == 1) {
      v1533.beginPath();
      v1533.lineCap = "round";
      v1533.lineJoin = "round";
      v1533.moveTo(p1131 * 36.5, p1131 * 278.0625);
      v1533.bezierCurveTo(p1131 * 67.5, p1131 * 316.0625, p1131 * 134.5, p1131 * 334.0625, p1131 * 199.5, p1131 * 319.0625);
      v1533.bezierCurveTo(p1131 * 254.5, p1131 * 304.0625, p1131 * 346.5, p1131 * 270.0625, p1131 * 348.5, p1131 * 237.0625);
      v1533.bezierCurveTo(p1131 * 359.5, p1131 * 206.0625, p1131 * 318.5, p1131 * 129.0625, p1131 * 262.5, p1131 * 122.0625);
      v1533.bezierCurveTo(p1131 * 213.5, p1131 * 115.0625, p1131 * 166.5, p1131 * 133.0625, p1131 * 104.5, p1131 * 166.0625);
      v1533.bezierCurveTo(p1131 * 54.5, p1131 * 194.0625, p1131 * 23.5, p1131 * 241.0625, p1131 * 36.5, p1131 * 277.0625);
      v1533.closePath();
      f90(v1533, p1132[0], p1132[3], p1131 * 50);
    }
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 36.5, p1131 * 278.0625);
    v1533.bezierCurveTo(p1131 * 67.5, p1131 * 316.0625, p1131 * 134.5, p1131 * 334.0625, p1131 * 199.5, p1131 * 319.0625);
    v1533.bezierCurveTo(p1131 * 254.5, p1131 * 304.0625, p1131 * 346.5, p1131 * 270.0625, p1131 * 348.5, p1131 * 237.0625);
    v1533.bezierCurveTo(p1131 * 359.5, p1131 * 206.0625, p1131 * 318.5, p1131 * 129.0625, p1131 * 262.5, p1131 * 122.0625);
    v1533.bezierCurveTo(p1131 * 213.5, p1131 * 115.0625, p1131 * 166.5, p1131 * 133.0625, p1131 * 104.5, p1131 * 166.0625);
    v1533.bezierCurveTo(p1131 * 54.5, p1131 * 194.0625, p1131 * 23.5, p1131 * 241.0625, p1131 * 36.5, p1131 * 277.0625);
    v1533.closePath();
    f90(v1533, p1132[0], p1132[1], p1131 * 19);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 214.5, p1131 * 124.0625);
    v1533.bezierCurveTo(p1131 * 242.5, p1131 * 125.0625, p1131 * 272.5, p1131 * 159.0625, p1131 * 283.5, p1131 * 184.0625);
    v1533.bezierCurveTo(p1131 * 277.5, p1131 * 161.0625, p1131 * 233.5, p1131 * 128.0625, p1131 * 219.5, p1131 * 122.0625);
    v1533.closePath();
    f90(v1533, p1132[0], p1132[1], p1131 * 19);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 157.5, p1131 * 145.0625);
    v1533.bezierCurveTo(p1131 * 176.5, p1131 * 148.0625, p1131 * 205.5, p1131 * 176.0625, p1131 * 212.5, p1131 * 197.0625);
    v1533.bezierCurveTo(p1131 * 205.5, p1131 * 178.0625, p1131 * 177.5, p1131 * 152.0625, p1131 * 156.5, p1131 * 142.0625);
    v1533.closePath();
    f90(v1533, p1132[0], p1132[1], p1131 * 19);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 103.5, p1131 * 169.0625);
    v1533.bezierCurveTo(p1131 * 160.5, p1131 * 166.0625, p1131 * 228.5, p1131 * 312.0625, p1131 * 162.5, p1131 * 323.0625);
    v1533.bezierCurveTo(p1131 * 128.5, p1131 * 330.0625, p1131 * 45.5, p1131 * 312.0625, p1131 * 34.5, p1131 * 268.0625);
    v1533.bezierCurveTo(p1131 * 30.5, p1131 * 238.0625, p1131 * 44.5, p1131 * 222.0625, p1131 * 52.5, p1131 * 211.0625);
    v1533.bezierCurveTo(p1131 * 82.5, p1131 * 174.0625, p1131 * 104.5, p1131 * 166.0625, p1131 * 119.5, p1131 * 172.0625);
    v1533.closePath();
    f90(v1533, p1132[2], p1132[1], p1131 * 19);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 194.5, p1131 * 313.0625);
    v1533.bezierCurveTo(p1131 * 222.5, p1131 * 306.0625, p1131 * 319.5, p1131 * 271.0625, p1131 * 337.5, p1131 * 241.0625);
    v1533.bezierCurveTo(p1131 * 274.5, p1131 * 270.0625, p1131 * 216.5, p1131 * 288.0625, p1131 * 199.5, p1131 * 287.0625);
    v1533.bezierCurveTo(p1131 * 198.5, p1131 * 302.0625, p1131 * 195.5, p1131 * 311.0625, p1131 * 193.5, p1131 * 312.0625);
    v1533.closePath();
    f90(v1533, p1132[1]);
    v1533.scale(3, 3);
    v1533.translate(15, p1131 * 10);
    if (p1133 == 1) {
      v1533.beginPath();
      v1533.lineCap = "round";
      v1533.lineJoin = "round";
      v1533.moveTo(p1131 * 4, p1131 * 32);
      v1533.bezierCurveTo(p1131 * 19, p1131 * 25, p1131 * 19, p1131 * 25, p1131 * 34, p1131 * 18);
      v1533.bezierCurveTo(p1131 * 41.5, p1131 * 23.5, p1131 * 41.5, p1131 * 23.5, p1131 * 49, p1131 * 29);
      v1533.bezierCurveTo(p1131 * 59.5, p1131 * 20, p1131 * 59.5, p1131 * 20, p1131 * 70, p1131 * 11);
      f90(v1533, undefined, p1132[3], p1131 * 28);
      v1533.beginPath();
      v1533.lineCap = "round";
      v1533.lineJoin = "round";
      v1533.moveTo(p1131 * 56, p1131 * 6);
      v1533.bezierCurveTo(p1131 * 63.5, p1131 * 13.5, p1131 * 63.5, p1131 * 13.5, p1131 * 71, p1131 * 21);
      v1533.bezierCurveTo(p1131 * 74.5, p1131 * 11.5, p1131 * 74.5, p1131 * 11.5, p1131 * 78, p1131 * 2);
      v1533.closePath();
      f90(v1533, p1132[3], p1132[3], p1131 * 28);
    }
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 4, p1131 * 32);
    v1533.bezierCurveTo(p1131 * 19, p1131 * 25, p1131 * 19, p1131 * 25, p1131 * 34, p1131 * 18);
    v1533.bezierCurveTo(p1131 * 41.5, p1131 * 23.5, p1131 * 41.5, p1131 * 23.5, p1131 * 49, p1131 * 29);
    v1533.bezierCurveTo(p1131 * 59.5, p1131 * 20, p1131 * 59.5, p1131 * 20, p1131 * 70, p1131 * 11);
    f90(v1533, vVVUndefined132, p1132[1], p1131 * 17);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 56, p1131 * 6);
    v1533.bezierCurveTo(p1131 * 63.5, p1131 * 13.5, p1131 * 63.5, p1131 * 13.5, p1131 * 71, p1131 * 21);
    v1533.bezierCurveTo(p1131 * 74.5, p1131 * 11.5, p1131 * 74.5, p1131 * 11.5, p1131 * 78, p1131 * 2);
    v1533.closePath();
    f90(v1533, p1132[1], p1132[1], p1131 * 17);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 4, p1131 * 32);
    v1533.bezierCurveTo(p1131 * 19, p1131 * 25, p1131 * 19, p1131 * 25, p1131 * 34, p1131 * 18);
    v1533.bezierCurveTo(p1131 * 41.5, p1131 * 23.5, p1131 * 41.5, p1131 * 23.5, p1131 * 49, p1131 * 29);
    v1533.bezierCurveTo(p1131 * 59.5, p1131 * 20, p1131 * 59.5, p1131 * 20, p1131 * 70, p1131 * 11);
    f90(v1533, vVUndefined13, p1132[2], p1131 * 10);
    v1533.beginPath();
    v1533.lineCap = "round";
    v1533.lineJoin = "round";
    v1533.moveTo(p1131 * 56, p1131 * 6);
    v1533.bezierCurveTo(p1131 * 63.5, p1131 * 13.5, p1131 * 63.5, p1131 * 13.5, p1131 * 71, p1131 * 21);
    v1533.bezierCurveTo(p1131 * 74.5, p1131 * 11.5, p1131 * 74.5, p1131 * 11.5, p1131 * 78, p1131 * 2);
    v1533.closePath();
    f90(v1533, p1132[2], p1132[2], p1131 * 10);
    return v1532;
  }
  function f267(p1134, p1135, p1136) {
    var v1534 = document.createElement("canvas");
    var v1535 = v1534.getContext("2d");
    v1534.width = p1134 * 92;
    v1534.height = p1134 * 108;
    v1535.beginPath();
    v1535.lineCap = "round";
    v1535.lineJoin = "round";
    v1535.moveTo(p1134 * 31, p1134 * 10);
    v1535.bezierCurveTo(p1134 * 37, p1134 * 2, p1134 * 49, p1134 * 0, p1134 * 61, p1134 * 15);
    v1535.bezierCurveTo(p1134 * 81, p1134 * 31, p1134 * 78, p1134 * 25, p1134 * 79, p1134 * 37);
    v1535.bezierCurveTo(p1134 * 76, p1134 * 44, p1134 * 81, p1134 * 56, p1134 * 85, p1134 * 63);
    v1535.bezierCurveTo(p1134 * 91, p1134 * 71, p1134 * 90, p1134 * 78, p1134 * 83, p1134 * 84);
    v1535.bezierCurveTo(p1134 * 60, p1134 * 98, p1134 * 67, p1134 * 95, p1134 * 57, p1134 * 102);
    v1535.bezierCurveTo(p1134 * 47, p1134 * 106, p1134 * 43, p1134 * 106, p1134 * 31, p1134 * 98);
    v1535.bezierCurveTo(p1134 * 22, p1134 * 91, p1134 * 17, p1134 * 89, p1134 * 7, p1134 * 84);
    v1535.bezierCurveTo(p1134 * 1, p1134 * 77, p1134 * 4, p1134 * 73, p1134 * 7, p1134 * 60);
    v1535.bezierCurveTo(p1134 * 11, p1134 * 50, p1134 * 5, p1134 * 32, p1134 * 15, p1134 * 27);
    v1535.bezierCurveTo(p1134 * 26, p1134 * 18, p1134 * 26, p1134 * 24, p1134 * 31, p1134 * 10);
    v1535.closePath();
    f90(v1535, p1136[0], p1136[1], 4);
    return v1534;
  }
  function f268(p1137, p1138, p1139) {
    var v1536 = document.createElement("canvas");
    var v1537 = v1536.getContext("2d");
    v1536.width = p1137 * 400;
    v1536.height = p1137 * 400;
    v1537.translate(0, p1137 * 15);
    v1537.globalAlpha = p1138 ? 0.5 : 1;
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 102, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 108, p1137 * 216.5, p1137 * 108, p1137 * 216.5, p1137 * 114, p1137 * 279);
    v1537.bezierCurveTo(p1137 * 124, p1137 * 300, p1137 * 237, p1137 * 299, p1137 * 251, p1137 * 279);
    v1537.bezierCurveTo(p1137 * 257, p1137 * 217, p1137 * 257, p1137 * 217, p1137 * 263, p1137 * 155);
    v1537.bezierCurveTo(p1137 * 248, p1137 * 194, p1137 * 91, p1137 * 180, p1137 * 103, p1137 * 156);
    v1537.closePath();
    f90(v1537, p1139[0]);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 102, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 106, p1137 * 53, p1137 * 255, p1137 * 53, p1137 * 263, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 248, p1137 * 38, p1137 * 99, p1137 * 69, p1137 * 103, p1137 * 154);
    v1537.closePath();
    f90(v1537, vVVUndefined82, p1139[0], p1137 * 11);
    v1537.translate(0, p1137 * -5);
    v1537.globalAlpha = 1;
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 103, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 98, p1137 * 119, p1137 * 264, p1137 * 119, p1137 * 264, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 271, p1137 * 189, p1137 * 94, p1137 * 188, p1137 * 103, p1137 * 154);
    v1537.closePath();
    f90(v1537, p1139[3], p1139[2], p1137 * 12);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 102, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 108, p1137 * 216.5, p1137 * 108, p1137 * 216.5, p1137 * 114, p1137 * 279);
    v1537.bezierCurveTo(p1137 * 124, p1137 * 300, p1137 * 237, p1137 * 299, p1137 * 251, p1137 * 279);
    v1537.bezierCurveTo(p1137 * 257, p1137 * 217, p1137 * 257, p1137 * 217, p1137 * 263, p1137 * 155);
    v1537.bezierCurveTo(p1137 * 248, p1137 * 194, p1137 * 91, p1137 * 180, p1137 * 103, p1137 * 156);
    v1537.closePath();
    f90(v1537, p1139[1], p1139[2], p1137 * 12);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 182, p1137 * 185);
    v1537.bezierCurveTo(p1137 * 182.5, p1137 * 237.5, p1137 * 182.5, p1137 * 237.5, p1137 * 183, p1137 * 290);
    v1537.closePath();
    f90(v1537, undefined, p1139[2], p1137 * 12);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 222, p1137 * 287);
    v1537.bezierCurveTo(p1137 * 226, p1137 * 233.5, p1137 * 226, p1137 * 233.5, p1137 * 230, p1137 * 180);
    v1537.closePath();
    f90(v1537, undefined, p1139[2], p1137 * 12);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 145, p1137 * 290);
    v1537.bezierCurveTo(p1137 * 140.5, p1137 * 237, p1137 * 140.5, p1137 * 237, p1137 * 136, p1137 * 184);
    v1537.closePath();
    f90(v1537, p1139[1], p1139[2], p1137 * 11);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 105, p1137 * 184);
    v1537.bezierCurveTo(p1137 * 148, p1137 * 205, p1137 * 231, p1137 * 202, p1137 * 260, p1137 * 182);
    v1537.bezierCurveTo(p1137 * 259, p1137 * 195.5, p1137 * 259, p1137 * 195.5, p1137 * 258, p1137 * 209);
    v1537.bezierCurveTo(p1137 * 217, p1137 * 218, p1137 * 163, p1137 * 225, p1137 * 108, p1137 * 207);
    v1537.closePath();
    f90(v1537, p1139[4], p1139[2], p1137 * 11);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 251, p1137 * 276);
    v1537.bezierCurveTo(p1137 * 251.5, p1137 * 267.5, p1137 * 251.5, p1137 * 267.5, p1137 * 252, p1137 * 259);
    v1537.bezierCurveTo(p1137 * 212, p1137 * 272, p1137 * 156, p1137 * 275, p1137 * 112, p1137 * 260);
    v1537.bezierCurveTo(p1137 * 112.5, p1137 * 269, p1137 * 112.5, p1137 * 269, p1137 * 113, p1137 * 278);
    v1537.bezierCurveTo(p1137 * 155, p1137 * 306, p1137 * 253, p1137 * 286, p1137 * 250, p1137 * 276);
    v1537.closePath();
    f90(v1537, p1139[4], p1139[2], p1137 * 11);
    v1537.beginPath();
    v1537.lineCap = "round";
    v1537.lineJoin = "round";
    v1537.moveTo(p1137 * 102, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 106, p1137 * 53, p1137 * 255, p1137 * 53, p1137 * 263, p1137 * 154);
    v1537.bezierCurveTo(p1137 * 248, p1137 * 38, p1137 * 99, p1137 * 69, p1137 * 103, p1137 * 154);
    v1537.closePath();
    f90(v1537, undefined, p1139[2], p1137 * 11);
    return v1536;
  }
  function f269(p1140, p1141) {
    var v1538 = document.createElement("canvas");
    var v1539 = v1538.getContext("2d");
    v1538.width = p1140 * 85;
    v1538.height = p1140 * 145;
    v1539.translate(p1140 * -20, p1140 * -95);
    v1539.beginPath();
    v1539.lineCap = "round";
    v1539.lineJoin = "round";
    v1539.moveTo(p1140 * 50, p1140 * 105);
    v1539.bezierCurveTo(p1140 * 52, p1140 * 119, p1140 * 64, p1140 * 137, p1140 * 71, p1140 * 146);
    v1539.bezierCurveTo(p1140 * 71, p1140 * 161, p1140 * 74, p1140 * 169, p1140 * 79, p1140 * 179);
    v1539.bezierCurveTo(p1140 * 68, p1140 * 192, p1140 * 70, p1140 * 204, p1140 * 69, p1140 * 216);
    v1539.bezierCurveTo(p1140 * 50, p1140 * 189.5, p1140 * 50, p1140 * 189.5, p1140 * 31, p1140 * 163);
    v1539.closePath();
    f90(v1539, p1141[1]);
    v1539.beginPath();
    v1539.lineCap = "round";
    v1539.lineJoin = "round";
    v1539.moveTo(p1140 * 44, p1140 * 106);
    v1539.bezierCurveTo(p1140 * 49, p1140 * 90, p1140 * 58, p1140 * 104, p1140 * 51, p1140 * 121);
    v1539.bezierCurveTo(p1140 * 45, p1140 * 143, p1140 * 41, p1140 * 151, p1140 * 37, p1140 * 162);
    v1539.bezierCurveTo(p1140 * 48, p1140 * 180, p1140 * 58, p1140 * 188, p1140 * 76, p1140 * 205);
    v1539.bezierCurveTo(p1140 * 104, p1140 * 209, p1140 * 105, p1140 * 229, p1140 * 92, p1140 * 235);
    v1539.bezierCurveTo(p1140 * 76, p1140 * 239, p1140 * 75, p1140 * 232, p1140 * 56, p1140 * 213);
    v1539.bezierCurveTo(p1140 * 31, p1140 * 187, p1140 * 28, p1140 * 176, p1140 * 23, p1140 * 162);
    v1539.bezierCurveTo(p1140 * 38, p1140 * 131, p1140 * 40, p1140 * 120, p1140 * 44, p1140 * 106);
    v1539.closePath();
    f90(v1539, p1141[2], p1141[3], p1140 * 4);
    v1539.beginPath();
    v1539.lineCap = "round";
    v1539.lineJoin = "round";
    v1539.moveTo(p1140 * 30, p1140 * 159);
    v1539.bezierCurveTo(p1140 * 46, p1140 * 157, p1140 * 59, p1140 * 152, p1140 * 68, p1140 * 148);
    v1539.bezierCurveTo(p1140 * 63, p1140 * 155, p1140 * 52, p1140 * 160, p1140 * 44, p1140 * 164);
    v1539.bezierCurveTo(p1140 * 59, p1140 * 169, p1140 * 66, p1140 * 174, p1140 * 75, p1140 * 178);
    v1539.bezierCurveTo(p1140 * 58, p1140 * 178, p1140 * 49, p1140 * 175, p1140 * 37, p1140 * 174);
    v1539.closePath();
    f90(v1539, p1141[2]);
    return v1538;
  }
  function f270(p1142, p1143, p1144) {
    var v1540 = document.createElement("canvas");
    var v1541 = v1540.getContext("2d");
    v1540.width = p1142 * 187;
    v1540.height = p1142 * 119;
    v1541.globalAlpha = p1143 ? 0.5 : 1;
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.translate(0, 3);
    v1541.moveTo(p1142 * 53, p1142 * 45);
    v1541.bezierCurveTo(p1142 * 3, p1142 * 60, p1142 * 11, p1142 * 72, p1142 * 19, p1142 * 81);
    v1541.bezierCurveTo(p1142 * 28, p1142 * 82, p1142 * 24, p1142 * 81, p1142 * 29, p1142 * 82);
    v1541.bezierCurveTo(p1142 * 26, p1142 * 87, p1142 * 28, p1142 * 84, p1142 * 28, p1142 * 87);
    v1541.bezierCurveTo(p1142 * 63, p1142 * 101, p1142 * 92, p1142 * 100, p1142 * 138, p1142 * 93);
    v1541.bezierCurveTo(p1142 * 172, p1142 * 87, p1142 * 180, p1142 * 72, p1142 * 168, p1142 * 62);
    v1541.bezierCurveTo(p1142 * 154, p1142 * 51, p1142 * 150, p1142 * 50, p1142 * 148, p1142 * 49);
    v1541.bezierCurveTo(p1142 * 132, p1142 * 42, p1142 * 90, p1142 * 40, p1142 * 55, p1142 * 45);
    v1541.closePath();
    f90(v1541, p1144[5]);
    v1541.globalAlpha = 1;
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.translate(0, -3);
    v1541.moveTo(p1142 * 53, p1142 * 45);
    v1541.bezierCurveTo(p1142 * 3, p1142 * 60, p1142 * 11, p1142 * 72, p1142 * 19, p1142 * 81);
    v1541.bezierCurveTo(p1142 * 28, p1142 * 82, p1142 * 24, p1142 * 81, p1142 * 29, p1142 * 82);
    v1541.bezierCurveTo(p1142 * 26, p1142 * 87, p1142 * 28, p1142 * 84, p1142 * 28, p1142 * 87);
    v1541.bezierCurveTo(p1142 * 63, p1142 * 101, p1142 * 92, p1142 * 100, p1142 * 138, p1142 * 93);
    v1541.bezierCurveTo(p1142 * 172, p1142 * 87, p1142 * 180, p1142 * 72, p1142 * 168, p1142 * 62);
    v1541.bezierCurveTo(p1142 * 154, p1142 * 51, p1142 * 150, p1142 * 50, p1142 * 148, p1142 * 49);
    v1541.bezierCurveTo(p1142 * 132, p1142 * 42, p1142 * 90, p1142 * 40, p1142 * 55, p1142 * 45);
    v1541.closePath();
    f90(v1541, p1144[0], p1144[1], p1142 * 4);
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.moveTo(p1142 * 151, p1142 * 60);
    v1541.bezierCurveTo(p1142 * 140, p1142 * 36, p1142 * 137, p1142 * 32, p1142 * 124, p1142 * 29);
    v1541.bezierCurveTo(p1142 * 98, p1142 * 22, p1142 * 80, p1142 * 24, p1142 * 62, p1142 * 28);
    v1541.bezierCurveTo(p1142 * 42, p1142 * 35, p1142 * 38, p1142 * 46, p1142 * 34, p1142 * 58);
    v1541.bezierCurveTo(p1142 * 53, p1142 * 74, p1142 * 76, p1142 * 76, p1142 * 91, p1142 * 78);
    v1541.closePath();
    f90(v1541, p1144[0], p1144[1], p1142 * 4);
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.moveTo(p1142 * 37, p1142 * 53);
    v1541.bezierCurveTo(p1142 * 30, p1142 * 56, p1142 * 29, p1142 * 67, p1142 * 30, p1142 * 68);
    v1541.bezierCurveTo(p1142 * 94, p1142 * 108, p1142 * 150, p1142 * 76, p1142 * 155, p1142 * 70);
    v1541.bezierCurveTo(p1142 * 154, p1142 * 60, p1142 * 151, p1142 * 54, p1142 * 149, p1142 * 53);
    v1541.bezierCurveTo(p1142 * 101, p1142 * 74, p1142 * 66, p1142 * 66, p1142 * 37, p1142 * 53);
    v1541.closePath();
    f90(v1541, p1144[2], p1144[3], p1142 * 4);
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.moveTo(p1142 * 100, p1142 * 36);
    v1541.bezierCurveTo(p1142 * 92, p1142 * 25, p1142 * 86, p1142 * 28, p1142 * 82, p1142 * 34);
    v1541.bezierCurveTo(p1142 * 88, p1142 * 40, p1142 * 93, p1142 * 40, p1142 * 98, p1142 * 36);
    v1541.closePath();
    f90(v1541, p1144[0], p1144[1], p1142 * 4);
    v1541.beginPath();
    v1541.lineCap = "round";
    v1541.lineJoin = "round";
    v1541.moveTo(p1142 * 80, p1142 * 43);
    v1541.bezierCurveTo(p1142 * 69, p1142 * 46, p1142 * 67, p1142 * 52, p1142 * 69, p1142 * 58);
    f90(v1541, undefined, p1144[1], p1142 * 4);
    f93(v1541, p1142 * 58, p1142 * 50, p1142 * 5);
    f90(v1541, p1144[4]);
    f93(v1541, p1142 * 43, p1142 * 65, p1142 * 5);
    f90(v1541, p1144[4]);
    f93(v1541, p1142 * 58, p1142 * 73, p1142 * 5);
    f90(v1541, p1144[4]);
    f93(v1541, p1142 * 58, p1142 * 50, p1142 * 2);
    f90(v1541, p1144[5]);
    f93(v1541, p1142 * 43, p1142 * 65, p1142 * 2);
    f90(v1541, p1144[5]);
    f93(v1541, p1142 * 58, p1142 * 73, p1142 * 2);
    f90(v1541, p1144[5]);
    return v1540;
  }
  function f271(p1145, p1146, p1147) {
    var v1542 = document.createElement("canvas");
    var v1543 = v1542.getContext("2d");
    v1542.width = p1145 * 69;
    v1542.height = p1145 * 120;
    v1543.globalAlpha = p1146 ? 0.5 : 1;
    v1543.save();
    v1543.translate(p1145 * 30, p1145 * 84);
    f87(v1543, p1145 * -6, p1145 * -66.5, p1145 * 8, p1145 * 100, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[0]);
    v1543.save();
    v1543.translate(p1145 * 30, p1145 * 45);
    f87(v1543, p1145 * -9.5, p1145 * -6.5, p1145 * 16, p1145 * 13, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[0]);
    v1543.save();
    v1543.translate(p1145 * 30, p1145 * 17);
    f87(v1543, p1145 * -7.5, p1145 * -5.5, p1145 * 12, p1145 * 11, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[0]);
    v1543.save();
    v1543.translate(p1145 * 30, p1145 * 31);
    f87(v1543, p1145 * -26, p1145 * -14.5, p1145 * 52, p1145 * 29, p1145 * 5);
    v1543.restore();
    f90(v1543, p1147[0]);
    v1543.globalAlpha = 1;
    v1543.save();
    v1543.translate(p1145 * 36, p1145 * 79.140625);
    f87(v1543, p1145 * -6, p1145 * -66.5, p1145 * 8, p1145 * 100, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[1], p1147[2], p1145 * 3);
    v1543.save();
    v1543.translate(p1145 * 35, p1145 * 40.140625);
    f87(v1543, p1145 * -9.5, p1145 * -6.5, p1145 * 16, p1145 * 13, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[3], p1147[4], p1145 * 3);
    v1543.save();
    v1543.translate(p1145 * 35, p1145 * 12.140625);
    f87(v1543, p1145 * -7.5, p1145 * -5.5, p1145 * 12, p1145 * 11, p1145 * 10);
    v1543.restore();
    f90(v1543, p1147[3], p1147[4], p1145 * 3);
    v1543.save();
    v1543.translate(p1145 * 34.5, p1145 * 26.140625);
    f87(v1543, p1145 * -26, p1145 * -14.5, p1145 * 52, p1145 * 29, p1145 * 5);
    v1543.restore();
    f90(v1543, p1147[3], p1147[4], p1145 * 3);
    return v1542;
  }
  function f272(p1148, p1149) {
    var v1544 = document.createElement("canvas");
    var v1545 = v1544.getContext("2d");
    v1544.width = p1148 * 149;
    v1544.height = p1148 * 153;
    v1545.globalAlpha = 0.5;
    f93(v1545, p1148 * 74.5, p1148 * 85, p1148 * 66);
    f90(v1545, p1149[0]);
    v1545.globalAlpha = 1;
    f93(v1545, p1148 * 75.5, p1148 * 72.5, p1148 * 67);
    f90(v1545, p1149[1], p1149[2], p1148 * 4);
    f93(v1545, p1148 * 75.5, p1148 * 73.5, p1148 * 54);
    f90(v1545, p1149[3]);
    v1545.globalAlpha = 0.5;
    f93(v1545, p1148 * 74.5, p1148 * 80.5, p1148 * 39);
    f90(v1545, p1149[4]);
    v1545.globalAlpha = 1;
    f93(v1545, p1148 * 74.5, p1148 * 74.5, p1148 * 37);
    f90(v1545, p1149[5]);
    return v1544;
  }
  function f273(p1150, p1151, p1152) {
    var v1546 = document.createElement("canvas");
    var v1547 = v1546.getContext("2d");
    v1546.width = p1150 * 202;
    v1546.height = p1150 * 202;
    v1547.translate(p1150 * 2, p1150 * 1);
    v1547.globalAlpha = 0.3;
    f93(v1547, p1150 * 98, p1150 * 99, p1150 * 100);
    f90(v1547, p1152[0]);
    v1547.globalAlpha = 0.5;
    f93(v1547, p1150 * 98, p1150 * 99, p1150 * 90);
    f90(v1547, p1152[1]);
    return v1546;
  }
  function f274(p1153, p1154, p1155) {
    var v1548 = document.createElement("canvas");
    var v1549 = v1548.getContext("2d");
    v1548.width = p1153 * 316;
    v1548.height = p1153 * 365;
    v1549.save();
    v1549.translate(p1153 * 156.07142639160156, p1153 * 51.81248474121094);
    v1549.rotate(0);
    f87(v1549, p1153 * -21.5, p1153 * -34, p1153 * 43, p1153 * 68, p1153 * 8);
    v1549.restore();
    f90(v1549, p1155[1], p1155[2], p1153 * 15);
    v1549.beginPath();
    v1549.lineCap = "round";
    v1549.lineJoin = "round";
    v1549.moveTo(p1153 * 110.57142639160156, p1153 * 197.09820556640625);
    v1549.bezierCurveTo(p1153 * 158.07142639160156, p1153 * 179.09820556640625, p1153 * 158.07142639160156, p1153 * 179.09820556640625, p1153 * 205.57142639160156, p1153 * 161.09820556640625);
    v1549.bezierCurveTo(p1153 * 205.57142639160156, p1153 * 235.45535278320312, p1153 * 205.57142639160156, p1153 * 235.45535278320312, p1153 * 205.57142639160156, p1153 * 309.8125);
    v1549.bezierCurveTo(p1153 * 205.57142639160156, p1153 * 323.8125, p1153 * 200.57142639160156, p1153 * 325.8125, p1153 * 187.57142639160156, p1153 * 326.8125);
    v1549.bezierCurveTo(p1153 * 155.57142639160156, p1153 * 326.3125, p1153 * 155.57142639160156, p1153 * 326.3125, p1153 * 123.57142639160156, p1153 * 325.8125);
    v1549.bezierCurveTo(p1153 * 111.57142639160156, p1153 * 326.8125, p1153 * 109.57142639160156, p1153 * 321.8125, p1153 * 110.57142639160156, p1153 * 312.8125);
    v1549.closePath();
    f90(v1549, p1155[3], p1155[4], p1153 * 15);
    v1549.beginPath();
    v1549.lineCap = "round";
    v1549.lineJoin = "round";
    v1549.moveTo(p1153 * 126.57142639160156, p1153 * 67.38392639160156);
    v1549.bezierCurveTo(p1153 * 126.57142639160156, p1153 * 57.38392639160156, p1153 * 132.57142639160156, p1153 * 54.38392639160156, p1153 * 140.57142639160156, p1153 * 54.38392639160156);
    v1549.bezierCurveTo(p1153 * 177.57142639160156, p1153 * 55.38392639160156, p1153 * 158.07142639160156, p1153 * 54.38392639160156, p1153 * 175.57142639160156, p1153 * 54.38392639160156);
    v1549.bezierCurveTo(p1153 * 185.57142639160156, p1153 * 56.38392639160156, p1153 * 185.57142639160156, p1153 * 57.38392639160156, p1153 * 184.57142639160156, p1153 * 66.38392639160156);
    v1549.bezierCurveTo(p1153 * 184.57142639160156, p1153 * 78.38392639160156, p1153 * 184.57142639160156, p1153 * 89.38392639160156, p1153 * 184.57142639160156, p1153 * 90.38392639160156);
    v1549.bezierCurveTo(p1153 * 177.57142639160156, p1153 * 107.38392639160156, p1153 * 180.57142639160156, p1153 * 112.38392639160156, p1153 * 189.57142639160156, p1153 * 116.38392639160156);
    v1549.bezierCurveTo(p1153 * 212.57142639160156, p1153 * 127.38392639160156, p1153 * 212.57142639160156, p1153 * 132.38392639160156, p1153 * 211.57142639160156, p1153 * 150.38392639160156);
    v1549.bezierCurveTo(p1153 * 211.57142639160156, p1153 * 227.59821128845215, p1153 * 211.57142639160156, p1153 * 227.59821128845215, p1153 * 211.57142639160156, p1153 * 304.81249618530273);
    v1549.bezierCurveTo(p1153 * 212.57142639160156, p1153 * 328.81249618530273, p1153 * 209.57142639160156, p1153 * 330.81249618530273, p1153 * 188.57142639160156, p1153 * 333.81249618530273);
    v1549.bezierCurveTo(p1153 * 155.07142639160156, p1153 * 333.31249618530273, p1153 * 155.07142639160156, p1153 * 333.31249618530273, p1153 * 121.57142639160156, p1153 * 332.81249618530273);
    v1549.bezierCurveTo(p1153 * 104.57142639160156, p1153 * 327.81249618530273, p1153 * 105.57142639160156, p1153 * 328.81249618530273, p1153 * 104.57142639160156, p1153 * 312.81249618530273);
    v1549.bezierCurveTo(p1153 * 104.57142639160156, p1153 * 228.16963958740234, p1153 * 104.57142639160156, p1153 * 228.16963958740234, p1153 * 104.57142639160156, p1153 * 143.52678298950195);
    v1549.bezierCurveTo(p1153 * 106.57142639160156, p1153 * 124.52678298950195, p1153 * 110.57142639160156, p1153 * 123.52678298950195, p1153 * 123.57142639160156, p1153 * 116.52678298950195);
    v1549.bezierCurveTo(p1153 * 136.57142639160156, p1153 * 110.52678298950195, p1153 * 130.57142639160156, p1153 * 106.52678298950195, p1153 * 126.57142639160156, p1153 * 98.52678298950195);
    v1549.closePath();
    f90(v1549, vVVUndefined13, p1155[5], p1153 * 15);
    v1549.beginPath();
    v1549.lineCap = "round";
    v1549.lineJoin = "round";
    v1549.moveTo(p1153 * 125.57142639160156, p1153 * 156.66963958740234);
    v1549.bezierCurveTo(p1153 * 125.57142639160156, p1153 * 182.66963958740234, p1153 * 125.57142639160156, p1153 * 182.66963958740234, p1153 * 125.57142639160156, p1153 * 208.66963958740234);
    v1549.closePath();
    f90(v1549, undefined, p1155[6], p1153 * 15);
    return v1548;
  }
  const v1550 = 13871008;
  const v1551 = 13871008 .ⲆⵠΔΔⲆᐃᐃΔⲆ;
  const v1552 = `const ⲆⵠⵠⲆⵠⵠΔ = (typeof ᐃᐃⵠⲆΔᐃⲆ === "${v1551}") ? 1 : 0; return ⲆⵠⵠⲆⵠⵠΔ;`;
  function f275(p1156, p1157, p1158) {
    var v1553 = document.createElement("canvas");
    var v1554 = v1553.getContext("2d");
    v1553.width = p1156 * 175;
    v1553.height = p1156 * 169;
    v1554.globalAlpha = 0.5;
    v1554.translate(0, p1156 * 3);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 19, p1156 * 139);
    v1554.bezierCurveTo(p1156 * 18, p1156 * 163, p1156 * 22, p1156 * 156, p1156 * 53, p1156 * 157);
    v1554.bezierCurveTo(p1156 * 97.5, p1156 * 157, p1156 * 97.5, p1156 * 157, p1156 * 142, p1156 * 157);
    v1554.bezierCurveTo(p1156 * 150, p1156 * 157, p1156 * 153, p1156 * 156, p1156 * 154, p1156 * 142);
    v1554.closePath();
    f90(v1554, p1158[0]);
    v1554.globalAlpha = 1;
    v1554.translate(0, p1156 * -3);
    v1554.save();
    v1554.translate(p1156 * 86.5, p1156 * 81.5);
    f87(v1554, p1156 * -66.5, p1156 * -65.5, p1156 * 133, p1156 * 131, p1156 * 10);
    v1554.restore();
    f90(v1554, p1158[1], p1158[2], p1156 * 5);
    v1554.save();
    v1554.translate(p1156 * 84.5, p1156 * 79);
    f87(v1554, p1156 * -50.5, p1156 * -49, p1156 * 101, p1156 * 98, p1156 * 10);
    v1554.restore();
    f90(v1554, p1158[3], p1158[2], p1156 * 5);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 42, p1156 * 54);
    v1554.bezierCurveTo(p1156 * 37, p1156 * 48, p1156 * 39, p1156 * 44, p1156 * 38, p1156 * 41);
    v1554.bezierCurveTo(p1156 * 42, p1156 * 40, p1156 * 45, p1156 * 40, p1156 * 50, p1156 * 41);
    v1554.bezierCurveTo(p1156 * 85, p1156 * 36, p1156 * 98, p1156 * 37, p1156 * 116, p1156 * 42);
    v1554.bezierCurveTo(p1156 * 132, p1156 * 39, p1156 * 132, p1156 * 39, p1156 * 133, p1156 * 56);
    v1554.bezierCurveTo(p1156 * 136, p1156 * 73, p1156 * 136, p1156 * 84, p1156 * 132, p1156 * 106);
    v1554.bezierCurveTo(p1156 * 47, p1156 * 113, p1156 * 85.5, p1156 * 106, p1156 * 39, p1156 * 106);
    v1554.bezierCurveTo(p1156 * 32, p1156 * 81, p1156 * 38, p1156 * 60, p1156 * 42, p1156 * 55);
    v1554.closePath();
    f90(v1554, p1158[4], p1158[5], p1156 * 5);
    v1554.save();
    v1554.translate(p1156 * 28, p1156 * 24);
    v1554.rotate(0);
    f87(v1554, p1156 * -14, p1156 * -14, p1156 * 28, p1156 * 28, p1156 * 4);
    v1554.restore();
    f90(v1554, p1158[1], p1158[2], p1156 * 5);
    v1554.save();
    v1554.translate(p1156 * 143, p1156 * 23);
    v1554.rotate(0);
    f87(v1554, p1156 * -14, p1156 * -14, p1156 * 28, p1156 * 28, p1156 * 4);
    v1554.restore();
    f90(v1554, p1158[1], p1158[2], p1156 * 5);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 55, p1156 * 80);
    v1554.bezierCurveTo(p1156 * 73, p1156 * 78, p1156 * 84, p1156 * 74, p1156 * 100, p1156 * 64);
    v1554.bezierCurveTo(p1156 * 111, p1156 * 57, p1156 * 125, p1156 * 67, p1156 * 108, p1156 * 84);
    v1554.bezierCurveTo(p1156 * 96, p1156 * 95, p1156 * 86, p1156 * 96, p1156 * 70, p1156 * 88);
    v1554.bezierCurveTo(p1156 * 62.5, p1156 * 84, p1156 * 62.5, p1156 * 84, p1156 * 55, p1156 * 80);
    v1554.closePath();
    f90(v1554, p1158[5]);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 17, p1156 * 112);
    v1554.bezierCurveTo(p1156 * 14, p1156 * 146, p1156 * 27, p1156 * 152, p1156 * 37, p1156 * 149);
    v1554.bezierCurveTo(p1156 * 78, p1156 * 155, p1156 * 128, p1156 * 150, p1156 * 146, p1156 * 150);
    v1554.bezierCurveTo(p1156 * 158, p1156 * 144, p1156 * 158, p1156 * 121, p1156 * 153, p1156 * 114);
    v1554.closePath();
    f90(v1554, p1158[8], p1158[9], p1156 * 5);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 127, p1156 * 111);
    v1554.bezierCurveTo(p1156 * 133, p1156 * 136, p1156 * 115, p1156 * 149, p1156 * 88, p1156 * 150);
    v1554.bezierCurveTo(p1156 * 119.5, p1156 * 151, p1156 * 119.5, p1156 * 151, p1156 * 151, p1156 * 152);
    v1554.bezierCurveTo(p1156 * 159, p1156 * 136, p1156 * 155, p1156 * 126, p1156 * 154, p1156 * 113);
    v1554.closePath();
    f90(v1554, p1158[9]);
    v1554.globalAlpha = 0.5;
    v1554.translate(0, p1156 * 3);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 15, p1156 * 117);
    v1554.bezierCurveTo(p1156 * 34, p1156 * 109, p1156 * 61, p1156 * 106, p1156 * 94, p1156 * 109);
    v1554.bezierCurveTo(p1156 * 126, p1156 * 110, p1156 * 142, p1156 * 113, p1156 * 154, p1156 * 119);
    v1554.bezierCurveTo(p1156 * 154, p1156 * 123, p1156 * 154, p1156 * 123, p1156 * 154, p1156 * 127);
    v1554.bezierCurveTo(p1156 * 127, p1156 * 118, p1156 * 15, p1156 * 122, p1156 * 18, p1156 * 129);
    v1554.closePath();
    f90(v1554, p1158[0]);
    v1554.globalAlpha = 1;
    v1554.translate(0, p1156 * -3);
    v1554.beginPath();
    v1554.lineCap = "round";
    v1554.lineJoin = "round";
    v1554.moveTo(p1156 * 14, p1156 * 127);
    v1554.bezierCurveTo(p1156 * 13, p1156 * 117, p1156 * 12, p1156 * 109, p1156 * 15, p1156 * 103);
    v1554.bezierCurveTo(p1156 * 16, p1156 * 95, p1156 * 21, p1156 * 92, p1156 * 60, p1156 * 93);
    v1554.bezierCurveTo(p1156 * 91, p1156 * 93, p1156 * 118, p1156 * 93, p1156 * 143, p1156 * 96);
    v1554.bezierCurveTo(p1156 * 151, p1156 * 96, p1156 * 155, p1156 * 99, p1156 * 156, p1156 * 112);
    v1554.bezierCurveTo(p1156 * 157, p1156 * 124, p1156 * 157, p1156 * 127, p1156 * 156, p1156 * 128);
    v1554.bezierCurveTo(p1156 * 138, p1156 * 112, p1156 * 100, p1156 * 118, p1156 * 84, p1156 * 118);
    v1554.bezierCurveTo(p1156 * 28, p1156 * 118, p1156 * 20, p1156 * 120, p1156 * 16, p1156 * 127);
    v1554.closePath();
    f90(v1554, p1158[4], p1158[5], p1156 * 5);
    v1554.save();
    v1554.translate(p1156 * 27.5, p1156 * 138.5);
    f87(v1554, p1156 * -13.5, p1156 * -14.5, p1156 * 27, p1156 * 29, p1156 * 4);
    v1554.restore();
    f90(v1554, p1158[1], p1158[2], p1156 * 5);
    v1554.save();
    v1554.translate(p1156 * 143.5, p1156 * 137);
    f87(v1554, p1156 * -13.5, p1156 * -14, p1156 * 27, p1156 * 28, p1156 * 4);
    v1554.restore();
    f90(v1554, p1158[1], p1158[2], p1156 * 5);
    return v1553;
  }
  function f276(p1159, p1160, p1161) {
    var v1555 = document.createElement("canvas");
    var v1556 = v1555.getContext("2d");
    v1555.width = p1159 * 108;
    v1555.height = p1159 * 669;
    v1556.translate(p1159 * 20, p1159 * 20);
    v1556.globalAlpha = p1160 ? 0.5 : 1;
    v1556.save();
    v1556.translate(p1159 * 54, p1159 * 389.5);
    f87(v1556, p1159 * -15, p1159 * -228.5, p1159 * 30, p1159 * 457, p1159 * 10);
    v1556.restore();
    f90(v1556, p1161[0]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 35, p1159 * 579);
    v1556.bezierCurveTo(p1159 * 47, p1159 * 587, p1159 * 61, p1159 * 584, p1159 * 71, p1159 * 579);
    v1556.bezierCurveTo(p1159 * 75, p1159 * 597.5, p1159 * 75, p1159 * 597.5, p1159 * 79, p1159 * 616);
    v1556.bezierCurveTo(p1159 * 66.5, p1159 * 628, p1159 * 66.5, p1159 * 628, p1159 * 54, p1159 * 640);
    v1556.bezierCurveTo(p1159 * 41, p1159 * 628.5, p1159 * 41, p1159 * 628.5, p1159 * 28, p1159 * 617);
    v1556.closePath();
    f90(v1556, p1161[0]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 30, p1159 * 141);
    v1556.bezierCurveTo(p1159 * 40, p1159 * 136, p1159 * 40, p1159 * 136, p1159 * 50, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 63, p1159 * 136, p1159 * 63, p1159 * 136, p1159 * 76, p1159 * 141);
    v1556.bezierCurveTo(p1159 * 72.5, p1159 * 161.5, p1159 * 72.5, p1159 * 161.5, p1159 * 69, p1159 * 182);
    v1556.bezierCurveTo(p1159 * 61.5, p1159 * 186.5, p1159 * 61.5, p1159 * 186.5, p1159 * 54, p1159 * 191);
    v1556.bezierCurveTo(p1159 * 45, p1159 * 186.5, p1159 * 45, p1159 * 186.5, p1159 * 36, p1159 * 182);
    v1556.closePath();
    f90(v1556, p1161[0]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 42, p1159 * 152);
    v1556.bezierCurveTo(p1159 * 53, p1159 * 152, p1159 * 53, p1159 * 152, p1159 * 64, p1159 * 152);
    v1556.bezierCurveTo(p1159 * 62, p1159 * 171, p1159 * 62, p1159 * 176, p1159 * 55, p1159 * 177);
    v1556.bezierCurveTo(p1159 * 42, p1159 * 176, p1159 * 45, p1159 * 174, p1159 * 42, p1159 * 152);
    v1556.closePath();
    f90(v1556, p1161[0]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 52, p1159 * 28);
    v1556.bezierCurveTo(p1159 * 67.5, p1159 * 55, p1159 * 67.5, p1159 * 55, p1159 * 83, p1159 * 82);
    v1556.bezierCurveTo(p1159 * 80, p1159 * 106.5, p1159 * 80, p1159 * 106.5, p1159 * 77, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 58, p1159 * 147, p1159 * 44, p1159 * 141, p1159 * 29, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 26.5, p1159 * 106.5, p1159 * 26.5, p1159 * 106.5, p1159 * 24, p1159 * 82);
    v1556.closePath();
    f90(v1556, p1161[0]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 53, p1159 * 53);
    v1556.bezierCurveTo(p1159 * 61, p1159 * 70, p1159 * 61, p1159 * 70, p1159 * 69, p1159 * 87);
    v1556.bezierCurveTo(p1159 * 67, p1159 * 106, p1159 * 67, p1159 * 106, p1159 * 65, p1159 * 125);
    v1556.bezierCurveTo(p1159 * 54, p1159 * 130, p1159 * 51, p1159 * 130, p1159 * 41, p1159 * 125);
    v1556.bezierCurveTo(p1159 * 39, p1159 * 105, p1159 * 39, p1159 * 105, p1159 * 37, p1159 * 85);
    v1556.closePath();
    f90(v1556, p1161[0]);
    v1556.translate(p1159 * -20, p1159 * -20);
    v1556.globalAlpha = 1;
    v1556.save();
    v1556.translate(p1159 * 54, p1159 * 389.5);
    v1556.rotate(0);
    f87(v1556, p1159 * -15, p1159 * -228.5, p1159 * 30, p1159 * 457, p1159 * 10);
    v1556.restore();
    f90(v1556, p1161[1], p1161[2], p1159 * 8);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 35, p1159 * 579);
    v1556.bezierCurveTo(p1159 * 47, p1159 * 587, p1159 * 61, p1159 * 584, p1159 * 71, p1159 * 579);
    v1556.bezierCurveTo(p1159 * 75, p1159 * 597.5, p1159 * 75, p1159 * 597.5, p1159 * 79, p1159 * 616);
    v1556.bezierCurveTo(p1159 * 66.5, p1159 * 628, p1159 * 66.5, p1159 * 628, p1159 * 54, p1159 * 640);
    v1556.bezierCurveTo(p1159 * 41, p1159 * 628.5, p1159 * 41, p1159 * 628.5, p1159 * 28, p1159 * 617);
    v1556.closePath();
    f90(v1556, p1161[3], p1161[4], p1159 * 8);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 30, p1159 * 141);
    v1556.bezierCurveTo(p1159 * 40, p1159 * 136, p1159 * 40, p1159 * 136, p1159 * 50, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 63, p1159 * 136, p1159 * 63, p1159 * 136, p1159 * 76, p1159 * 141);
    v1556.bezierCurveTo(p1159 * 72.5, p1159 * 161.5, p1159 * 72.5, p1159 * 161.5, p1159 * 69, p1159 * 182);
    v1556.bezierCurveTo(p1159 * 61.5, p1159 * 186.5, p1159 * 61.5, p1159 * 186.5, p1159 * 54, p1159 * 191);
    v1556.bezierCurveTo(p1159 * 45, p1159 * 186.5, p1159 * 45, p1159 * 186.5, p1159 * 36, p1159 * 182);
    v1556.closePath();
    f90(v1556, p1161[3], p1161[4], p1159 * 8);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 42, p1159 * 152);
    v1556.bezierCurveTo(p1159 * 53, p1159 * 152, p1159 * 53, p1159 * 152, p1159 * 64, p1159 * 152);
    v1556.bezierCurveTo(p1159 * 62, p1159 * 171, p1159 * 62, p1159 * 176, p1159 * 55, p1159 * 177);
    v1556.bezierCurveTo(p1159 * 42, p1159 * 176, p1159 * 45, p1159 * 174, p1159 * 42, p1159 * 152);
    v1556.closePath();
    f90(v1556, p1161[5]);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 52, p1159 * 28);
    v1556.bezierCurveTo(p1159 * 67.5, p1159 * 55, p1159 * 67.5, p1159 * 55, p1159 * 83, p1159 * 82);
    v1556.bezierCurveTo(p1159 * 80, p1159 * 106.5, p1159 * 80, p1159 * 106.5, p1159 * 77, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 58, p1159 * 147, p1159 * 44, p1159 * 141, p1159 * 29, p1159 * 131);
    v1556.bezierCurveTo(p1159 * 26.5, p1159 * 106.5, p1159 * 26.5, p1159 * 106.5, p1159 * 24, p1159 * 82);
    v1556.closePath();
    f90(v1556, p1161[6], p1161[7], p1159 * 8);
    v1556.beginPath();
    v1556.lineCap = "round";
    v1556.lineJoin = "round";
    v1556.moveTo(p1159 * 53, p1159 * 53);
    v1556.bezierCurveTo(p1159 * 61, p1159 * 70, p1159 * 61, p1159 * 70, p1159 * 69, p1159 * 87);
    v1556.bezierCurveTo(p1159 * 67, p1159 * 106, p1159 * 67, p1159 * 106, p1159 * 65, p1159 * 125);
    v1556.bezierCurveTo(p1159 * 54, p1159 * 130, p1159 * 51, p1159 * 130, p1159 * 41, p1159 * 125);
    v1556.bezierCurveTo(p1159 * 39, p1159 * 105, p1159 * 39, p1159 * 105, p1159 * 37, p1159 * 85);
    v1556.closePath();
    f90(v1556, p1161[8]);
    return v1555;
  }
  function f277(p1162, p1163, p1164) {
    var v1557 = document.createElement("canvas");
    var v1558 = v1557.getContext("2d");
    v1557.width = p1162 * 81;
    v1557.height = p1162 * 626;
    v1558.translate(p1162 * 20, p1162 * 20);
    v1558.globalAlpha = p1163 ? 0.5 : 1;
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 55, p1162 * 565);
    v1558.bezierCurveTo(p1162 * 56, p1162 * 586, p1162 * 53, p1162 * 591, p1162 * 40, p1162 * 592);
    v1558.bezierCurveTo(p1162 * 28, p1162 * 591, p1162 * 27, p1162 * 583, p1162 * 28, p1162 * 557);
    v1558.bezierCurveTo(p1162 * 27.5, p1162 * 346, p1162 * 27.5, p1162 * 346, p1162 * 27, p1162 * 135);
    v1558.bezierCurveTo(p1162 * 26, p1162 * 74, p1162 * 36, p1162 * 26, p1162 * 41, p1162 * 15);
    v1558.bezierCurveTo(p1162 * 54, p1162 * 51, p1162 * 54, p1162 * 81, p1162 * 55, p1162 * 128);
    v1558.closePath();
    f90(v1558, p1164[0]);
    v1558.translate(p1162 * -20, p1162 * -20);
    v1558.globalAlpha = 1;
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 55, p1162 * 565);
    v1558.bezierCurveTo(p1162 * 56, p1162 * 586, p1162 * 53, p1162 * 591, p1162 * 40, p1162 * 592);
    v1558.bezierCurveTo(p1162 * 28, p1162 * 591, p1162 * 27, p1162 * 583, p1162 * 28, p1162 * 557);
    v1558.bezierCurveTo(p1162 * 27.5, p1162 * 346, p1162 * 27.5, p1162 * 346, p1162 * 27, p1162 * 135);
    v1558.bezierCurveTo(p1162 * 26, p1162 * 74, p1162 * 36, p1162 * 26, p1162 * 41, p1162 * 15);
    v1558.bezierCurveTo(p1162 * 54, p1162 * 51, p1162 * 54, p1162 * 81, p1162 * 55, p1162 * 128);
    v1558.closePath();
    f90(v1558, p1164[1], p1164[2], p1162 * 8);
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 27, p1162 * 129);
    v1558.bezierCurveTo(p1162 * 32, p1162 * 135, p1162 * 48, p1162 * 136, p1162 * 53, p1162 * 129);
    v1558.bezierCurveTo(p1162 * 56, p1162 * 97, p1162 * 53, p1162 * 82, p1162 * 52, p1162 * 64);
    v1558.bezierCurveTo(p1162 * 49, p1162 * 33, p1162 * 44, p1162 * 27, p1162 * 41, p1162 * 21);
    v1558.bezierCurveTo(p1162 * 31, p1162 * 40, p1162 * 28, p1162 * 84, p1162 * 27, p1162 * 127);
    v1558.closePath();
    f90(v1558, p1164[3]);
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 55, p1162 * 565);
    v1558.bezierCurveTo(p1162 * 56, p1162 * 586, p1162 * 53, p1162 * 591, p1162 * 40, p1162 * 592);
    v1558.bezierCurveTo(p1162 * 28, p1162 * 591, p1162 * 27, p1162 * 583, p1162 * 28, p1162 * 557);
    v1558.bezierCurveTo(p1162 * 27.5, p1162 * 346, p1162 * 27.5, p1162 * 346, p1162 * 27, p1162 * 135);
    v1558.bezierCurveTo(p1162 * 26, p1162 * 74, p1162 * 36, p1162 * 26, p1162 * 41, p1162 * 15);
    v1558.bezierCurveTo(p1162 * 54, p1162 * 51, p1162 * 54, p1162 * 81, p1162 * 55, p1162 * 128);
    v1558.closePath();
    f90(v1558, undefined, p1164[2], p1162 * 8);
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 28, p1162 * 475);
    v1558.bezierCurveTo(p1162 * 38, p1162 * 482, p1162 * 48, p1162 * 480, p1162 * 54, p1162 * 474);
    v1558.bezierCurveTo(p1162 * 54, p1162 * 509.5, p1162 * 54, p1162 * 509.5, p1162 * 54, p1162 * 545);
    v1558.bezierCurveTo(p1162 * 46, p1162 * 554, p1162 * 36, p1162 * 552, p1162 * 28, p1162 * 545);
    v1558.closePath();
    f90(v1558, p1164[4], p1164[5], p1162 * 8);
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 28, p1162 * 496);
    v1558.bezierCurveTo(p1162 * 39, p1162 * 506, p1162 * 49, p1162 * 503, p1162 * 54, p1162 * 496);
    f90(v1558, undefined, p1164[5], p1162 * 8);
    v1558.beginPath();
    v1558.lineCap = "round";
    v1558.lineJoin = "round";
    v1558.moveTo(p1162 * 28, p1162 * 521);
    v1558.bezierCurveTo(p1162 * 41, p1162 * 529, p1162 * 49, p1162 * 524, p1162 * 54, p1162 * 520);
    f90(v1558, undefined, p1164[5], p1162 * 8);
    return v1557;
  }
  function f278(p1165, p1166) {
    var v1559 = document.createElement("canvas");
    var v1560 = v1559.getContext("2d");
    var v1561 = p1165 * 120;
    var v1562 = p1165 * 140;
    v1559.width = v1561;
    v1559.height = v1562;
    v1559.width = p1165 * 130;
    v1559.height = p1165 * 120;
    f87(v1560, p1165 * 10, p1165 * 12, p1165 * 110, p1165 * 90, p1165 * 10);
    f90(v1560, p1166[0]);
    f87(v1560, p1165 * 10, p1165 * 5, p1165 * 110, p1165 * 90, p1165 * 10);
    f90(v1560, p1166[1], p1166[2], p1165 * 4);
    var vF95 = f95(-Math.PI / 5, f139(p1165 * 0.5, vVV306, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1560.drawImage(vF95, p1165 * 12, p1165 * 18);
    vF95 = f95(Math.PI / 4, f271(p1165 * 0.55, vVV302, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1560.drawImage(vF95, p1165 * 36, p1165 * 16);
    return v1559;
  }
  function f279(p1167, p1168, p1169) {
    var v1563 = document.createElement("canvas");
    var v1564 = v1563.getContext("2d");
    v1563.width = p1167 * 138;
    v1563.height = p1167 * 133;
    v1564.globalAlpha = p1168 ? 0.3 : 1;
    v1564.translate(0, p1167 * 5);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 26, p1167 * 79.640625);
    v1564.bezierCurveTo(p1167 * 13, p1167 * 84.640625, p1167 * 9, p1167 * 86.640625, p1167 * 7, p1167 * 78.640625);
    v1564.bezierCurveTo(p1167 * 6, p1167 * 69.640625, p1167 * 15, p1167 * 67.640625, p1167 * 31, p1167 * 62.640625);
    v1564.bezierCurveTo(p1167 * 63, p1167 * 55.640625, p1167 * 85, p1167 * 57.640625, p1167 * 104, p1167 * 63.640625);
    v1564.bezierCurveTo(p1167 * 131, p1167 * 69.640625, p1167 * 132, p1167 * 71.640625, p1167 * 131, p1167 * 78.640625);
    v1564.bezierCurveTo(p1167 * 131, p1167 * 91.640625, p1167 * 112, p1167 * 80.640625, p1167 * 91, p1167 * 75.640625);
    v1564.bezierCurveTo(p1167 * 51, p1167 * 70.640625, p1167 * 45, p1167 * 74.640625, p1167 * 28, p1167 * 78.640625);
    v1564.closePath();
    f90(v1564, p1169[0]);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 8, p1167 * 82.640625);
    v1564.bezierCurveTo(p1167 * 40, p1167 * 107.640625, p1167 * 53, p1167 * 104.640625, p1167 * 67, p1167 * 106.640625);
    v1564.bezierCurveTo(p1167 * 101, p1167 * 103.640625, p1167 * 117, p1167 * 93.640625, p1167 * 127, p1167 * 84.640625);
    v1564.bezierCurveTo(p1167 * 135, p1167 * 95.640625, p1167 * 131, p1167 * 107.640625, p1167 * 110, p1167 * 118.640625);
    v1564.bezierCurveTo(p1167 * 78, p1167 * 129.640625, p1167 * 67, p1167 * 130.640625, p1167 * 27, p1167 * 119.640625);
    v1564.bezierCurveTo(p1167 * 0, p1167 * 105.640625, p1167 * 8, p1167 * 83.640625, p1167 * 10, p1167 * 84.640625);
    v1564.closePath();
    f90(v1564, p1169[0]);
    v1564.globalAlpha = 1;
    v1564.translate(0, p1167 * -5);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 8, p1167 * 73.640625);
    v1564.bezierCurveTo(p1167 * 7, p1167 * 23.640625, p1167 * 33, p1167 * 19.640625, p1167 * 71, p1167 * 17.640625);
    v1564.bezierCurveTo(p1167 * 129, p1167 * 19.640625, p1167 * 130, p1167 * 45.640625, p1167 * 130, p1167 * 76.640625);
    v1564.bezierCurveTo(p1167 * 90, p1167 * 63.640625, p1167 * 85, p1167 * 63.640625, p1167 * 73, p1167 * 63.640625);
    v1564.bezierCurveTo(p1167 * 38, p1167 * 63.640625, p1167 * 33, p1167 * 66.640625, p1167 * 8, p1167 * 73.640625);
    v1564.closePath();
    f90(v1564, p1169[1], p1169[2], p1167 * 4);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 72, p1167 * 28.640625);
    v1564.bezierCurveTo(p1167 * 51, p1167 * 25.640625, p1167 * 56, p1167 * 7.640625, p1167 * 70, p1167 * 5.640625);
    v1564.bezierCurveTo(p1167 * 94, p1167 * 7.640625, p1167 * 87, p1167 * 29.640625, p1167 * 72, p1167 * 28.640625);
    v1564.closePath();
    f90(v1564, p1169[3], p1169[2], p1167 * 4);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 51, p1167 * 26.640625);
    v1564.bezierCurveTo(p1167 * 42, p1167 * 29.640625, p1167 * 43, p1167 * 31.640625, p1167 * 42, p1167 * 37.640625);
    f90(v1564, vVVVVUndefined824, p1169[2], p1167 * 4);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 90, p1167 * 26.640625);
    v1564.bezierCurveTo(p1167 * 100, p1167 * 28.640625, p1167 * 98, p1167 * 34.640625, p1167 * 99, p1167 * 38.640625);
    f90(v1564, undefined, p1169[2], p1167 * 4);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 26, p1167 * 79.640625);
    v1564.bezierCurveTo(p1167 * 13, p1167 * 84.640625, p1167 * 9, p1167 * 86.640625, p1167 * 7, p1167 * 78.640625);
    v1564.bezierCurveTo(p1167 * 6, p1167 * 69.640625, p1167 * 15, p1167 * 67.640625, p1167 * 31, p1167 * 62.640625);
    v1564.bezierCurveTo(p1167 * 63, p1167 * 55.640625, p1167 * 85, p1167 * 57.640625, p1167 * 104, p1167 * 63.640625);
    v1564.bezierCurveTo(p1167 * 131, p1167 * 69.640625, p1167 * 132, p1167 * 71.640625, p1167 * 131, p1167 * 78.640625);
    v1564.bezierCurveTo(p1167 * 131, p1167 * 91.640625, p1167 * 112, p1167 * 80.640625, p1167 * 91, p1167 * 75.640625);
    v1564.bezierCurveTo(p1167 * 51, p1167 * 70.640625, p1167 * 45, p1167 * 74.640625, p1167 * 28, p1167 * 78.640625);
    v1564.closePath();
    f90(v1564, p1169[3], p1169[4], p1167 * 4);
    v1564.beginPath();
    v1564.lineCap = "round";
    v1564.lineJoin = "round";
    v1564.moveTo(p1167 * 8, p1167 * 82.640625);
    v1564.bezierCurveTo(p1167 * 40, p1167 * 107.640625, p1167 * 53, p1167 * 104.640625, p1167 * 67, p1167 * 106.640625);
    v1564.bezierCurveTo(p1167 * 101, p1167 * 103.640625, p1167 * 117, p1167 * 93.640625, p1167 * 127, p1167 * 84.640625);
    v1564.bezierCurveTo(p1167 * 135, p1167 * 95.640625, p1167 * 131, p1167 * 107.640625, p1167 * 110, p1167 * 118.640625);
    v1564.bezierCurveTo(p1167 * 78, p1167 * 129.640625, p1167 * 67, p1167 * 130.640625, p1167 * 27, p1167 * 119.640625);
    v1564.bezierCurveTo(p1167 * 0, p1167 * 105.640625, p1167 * 8, p1167 * 83.640625, p1167 * 10, p1167 * 84.640625);
    v1564.closePath();
    f90(v1564, p1169[3], p1169[4], p1167 * 4);
    return v1563;
  }
  function f280(p1170, p1171, p1172) {
    var v1565 = document.createElement("canvas");
    var v1566 = v1565.getContext("2d");
    v1565.width = p1170 * 304;
    v1565.height = p1170 * 278;
    v1566.translate(p1170 * 10, p1170 * 25);
    v1566.globalAlpha = p1171 ? 0.5 : 1;
    v1566.beginPath();
    v1566.lineCap = "round";
    v1566.lineJoin = "round";
    v1566.moveTo(p1170 * 128, p1170 * 137);
    v1566.bezierCurveTo(p1170 * 155, p1170 * 144, p1170 * 223, p1170 * 143, p1170 * 256, p1170 * 122);
    v1566.bezierCurveTo(p1170 * 249, p1170 * 180, p1170 * 210, p1170 * 227, p1170 * 164, p1170 * 242);
    v1566.bezierCurveTo(p1170 * 74, p1170 * 213, p1170 * 99, p1170 * 166, p1170 * 127, p1170 * 138);
    v1566.closePath();
    f90(v1566, p1172[0]);
    v1566.beginPath();
    v1566.lineCap = "round";
    v1566.lineJoin = "round";
    v1566.moveTo(p1170 * 284, p1170 * 52);
    v1566.bezierCurveTo(p1170 * 126, p1170 * 112, p1170 * 89, p1170 * 177, p1170 * 170, p1170 * 241);
    v1566.bezierCurveTo(p1170 * 103, p1170 * 275, p1170 * 20, p1170 * 239, p1170 * 12, p1170 * 159);
    v1566.bezierCurveTo(p1170 * 5, p1170 * 76, p1170 * 75, p1170 * 4, p1170 * 165, p1170 * 13);
    v1566.bezierCurveTo(p1170 * 233, p1170 * 15, p1170 * 260, p1170 * 33, p1170 * 284, p1170 * 52);
    v1566.closePath();
    f90(v1566, p1172[0]);
    v1566.translate(p1170 * -10, p1170 * -25);
    v1566.globalAlpha = 1;
    v1566.beginPath();
    v1566.lineCap = "round";
    v1566.lineJoin = "round";
    v1566.moveTo(p1170 * 128, p1170 * 137);
    v1566.bezierCurveTo(p1170 * 155, p1170 * 144, p1170 * 223, p1170 * 143, p1170 * 256, p1170 * 122);
    v1566.bezierCurveTo(p1170 * 249, p1170 * 180, p1170 * 210, p1170 * 227, p1170 * 164, p1170 * 242);
    v1566.bezierCurveTo(p1170 * 74, p1170 * 213, p1170 * 99, p1170 * 166, p1170 * 127, p1170 * 138);
    v1566.closePath();
    f90(v1566, p1172[1], p1172[2], p1170 * 15);
    v1566.beginPath();
    v1566.lineCap = "round";
    v1566.lineJoin = "round";
    v1566.moveTo(p1170 * 284, p1170 * 52);
    v1566.bezierCurveTo(p1170 * 126, p1170 * 112, p1170 * 89, p1170 * 177, p1170 * 170, p1170 * 241);
    v1566.bezierCurveTo(p1170 * 103, p1170 * 275, p1170 * 20, p1170 * 239, p1170 * 12, p1170 * 159);
    v1566.bezierCurveTo(p1170 * 5, p1170 * 76, p1170 * 75, p1170 * 4, p1170 * 165, p1170 * 13);
    v1566.bezierCurveTo(p1170 * 233, p1170 * 15, p1170 * 260, p1170 * 33, p1170 * 284, p1170 * 52);
    v1566.closePath();
    f90(v1566, p1172[3], p1172[4], p1170 * 15);
    return v1565;
  }
  function f281(p1173, p1174, p1175) {
    var v1567 = document.createElement("canvas");
    var v1568 = v1567.getContext("2d");
    v1567.width = p1173 * 137;
    v1567.height = p1173 * 129;
    v1568.globalAlpha = 0.4;
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 42.000030517578125, p1173 * 41.17047119140625);
    v1568.bezierCurveTo(p1173 * 45.000030517578125, p1173 * 38.17047119140625, p1173 * 49.000030517578125, p1173 * 37.17047119140625, p1173 * 62.000030517578125, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 94.00003051757812, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 100.00003051757812, p1173 * 38.17047119140625, p1173 * 102.00003051757812, p1173 * 38.17047119140625, p1173 * 101.00003051757812, p1173 * 47.17047119140625);
    v1568.bezierCurveTo(p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 80.17047119140625);
    v1568.bezierCurveTo(p1173 * 102.00003051757812, p1173 * 84.17047119140625, p1173 * 100.00003051757812, p1173 * 86.17047119140625, p1173 * 95.00003051757812, p1173 * 88.17047119140625);
    v1568.bezierCurveTo(p1173 * 84.00003051757812, p1173 * 94.17047119140625, p1173 * 89.00003051757812, p1173 * 94.17047119140625, p1173 * 79.00003051757812, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 40.000030517578125, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 86.17047119140625);
    v1568.bezierCurveTo(p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 53.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 47.17047119140625, p1173 * 34.000030517578125, p1173 * 47.17047119140625, p1173 * 40.000030517578125, p1173 * 42.17047119140625);
    v1568.closePath();
    f90(v1568, undefined, p1175[2], p1173 * 40);
    v1568.globalAlpha = 0.4;
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 42.000030517578125, p1173 * 41.17047119140625);
    v1568.bezierCurveTo(p1173 * 45.000030517578125, p1173 * 38.17047119140625, p1173 * 49.000030517578125, p1173 * 37.17047119140625, p1173 * 62.000030517578125, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 94.00003051757812, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 100.00003051757812, p1173 * 38.17047119140625, p1173 * 102.00003051757812, p1173 * 38.17047119140625, p1173 * 101.00003051757812, p1173 * 47.17047119140625);
    v1568.bezierCurveTo(p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 80.17047119140625);
    v1568.bezierCurveTo(p1173 * 102.00003051757812, p1173 * 84.17047119140625, p1173 * 100.00003051757812, p1173 * 86.17047119140625, p1173 * 95.00003051757812, p1173 * 88.17047119140625);
    v1568.bezierCurveTo(p1173 * 84.00003051757812, p1173 * 94.17047119140625, p1173 * 89.00003051757812, p1173 * 94.17047119140625, p1173 * 79.00003051757812, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 40.000030517578125, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 86.17047119140625);
    v1568.bezierCurveTo(p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 53.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 47.17047119140625, p1173 * 34.000030517578125, p1173 * 47.17047119140625, p1173 * 40.000030517578125, p1173 * 42.17047119140625);
    v1568.closePath();
    f90(v1568, vUndefined, p1175[1], p1173 * 20);
    v1568.globalAlpha = 0.8;
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 42.000030517578125, p1173 * 41.17047119140625);
    v1568.bezierCurveTo(p1173 * 45.000030517578125, p1173 * 38.17047119140625, p1173 * 49.000030517578125, p1173 * 37.17047119140625, p1173 * 62.000030517578125, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 94.00003051757812, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 100.00003051757812, p1173 * 38.17047119140625, p1173 * 102.00003051757812, p1173 * 38.17047119140625, p1173 * 101.00003051757812, p1173 * 47.17047119140625);
    v1568.bezierCurveTo(p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 80.17047119140625);
    v1568.bezierCurveTo(p1173 * 102.00003051757812, p1173 * 84.17047119140625, p1173 * 100.00003051757812, p1173 * 86.17047119140625, p1173 * 95.00003051757812, p1173 * 88.17047119140625);
    v1568.bezierCurveTo(p1173 * 84.00003051757812, p1173 * 94.17047119140625, p1173 * 89.00003051757812, p1173 * 94.17047119140625, p1173 * 79.00003051757812, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 40.000030517578125, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 86.17047119140625);
    v1568.bezierCurveTo(p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 53.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 47.17047119140625, p1173 * 34.000030517578125, p1173 * 47.17047119140625, p1173 * 40.000030517578125, p1173 * 42.17047119140625);
    v1568.closePath();
    f90(v1568, p1175[0], p1175[1], p1173 * 4);
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 51.000030517578125, p1173 * 37.9886474609375);
    v1568.bezierCurveTo(p1173 * 51.000030517578125, p1173 * 61.9886474609375, p1173 * 51.000030517578125, p1173 * 61.9886474609375, p1173 * 51.000030517578125, p1173 * 85.9886474609375);
    v1568.bezierCurveTo(p1173 * 75.50003051757812, p1173 * 85.9886474609375, p1173 * 75.50003051757812, p1173 * 85.9886474609375, p1173 * 100.00003051757812, p1173 * 85.9886474609375);
    v1568.bezierCurveTo(p1173 * 100.00003051757812, p1173 * 61.9886474609375, p1173 * 100.00003051757812, p1173 * 61.9886474609375, p1173 * 100.00003051757812, p1173 * 37.9886474609375);
    v1568.bezierCurveTo(p1173 * 76.00003051757812, p1173 * 37.9886474609375, p1173 * 76.00003051757812, p1173 * 37.9886474609375, p1173 * 52.000030517578125, p1173 * 37.9886474609375);
    v1568.closePath();
    f90(v1568, p1175[1], p1175[2], p1173 * 4);
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 99.00003051757812, p1173 * 38.9886474609375);
    v1568.bezierCurveTo(p1173 * 93.50003051757812, p1173 * 44.9886474609375, p1173 * 93.50003051757812, p1173 * 44.9886474609375, p1173 * 88.00003051757812, p1173 * 50.9886474609375);
    v1568.bezierCurveTo(p1173 * 88.00003051757812, p1173 * 72.4886474609375, p1173 * 88.00003051757812, p1173 * 72.4886474609375, p1173 * 88.00003051757812, p1173 * 93.9886474609375);
    v1568.bezierCurveTo(p1173 * 94.00003051757812, p1173 * 90.4886474609375, p1173 * 94.00003051757812, p1173 * 90.4886474609375, p1173 * 100.00003051757812, p1173 * 86.9886474609375);
    v1568.closePath();
    f90(v1568, p1175[1], p1175[2], p1173 * 4);
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 87.00003051757812, p1173 * 49.625);
    v1568.bezierCurveTo(p1173 * 61.000030517578125, p1173 * 49.625, p1173 * 61.000030517578125, p1173 * 49.625, p1173 * 35.000030517578125, p1173 * 49.625);
    v1568.bezierCurveTo(p1173 * 35.000030517578125, p1173 * 70.625, p1173 * 35.000030517578125, p1173 * 70.625, p1173 * 35.000030517578125, p1173 * 91.625);
    v1568.bezierCurveTo(p1173 * 60.500030517578125, p1173 * 91.625, p1173 * 60.500030517578125, p1173 * 91.625, p1173 * 86.00003051757812, p1173 * 91.625);
    v1568.bezierCurveTo(p1173 * 86.50003051757812, p1173 * 70.625, p1173 * 86.50003051757812, p1173 * 70.625, p1173 * 87.00003051757812, p1173 * 49.625);
    v1568.closePath();
    f90(v1568, p1175[1], p1175[3], p1173 * 4);
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 47.000030517578125, p1173 * 36.625);
    v1568.bezierCurveTo(p1173 * 73.00003051757812, p1173 * 37.125, p1173 * 73.00003051757812, p1173 * 37.125, p1173 * 99.00003051757812, p1173 * 37.625);
    v1568.bezierCurveTo(p1173 * 93.50003051757812, p1173 * 44.125, p1173 * 93.50003051757812, p1173 * 44.125, p1173 * 88.00003051757812, p1173 * 50.625);
    v1568.bezierCurveTo(p1173 * 60.500030517578125, p1173 * 50.125, p1173 * 60.500030517578125, p1173 * 50.125, p1173 * 33.000030517578125, p1173 * 49.625);
    v1568.closePath();
    f90(v1568, p1175[1], p1175[3], p1173 * 4);
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 53.000030517578125, p1173 * 52.625);
    v1568.bezierCurveTo(p1173 * 40.000030517578125, p1173 * 54.625, p1173 * 39.000030517578125, p1173 * 59.625, p1173 * 40.000030517578125, p1173 * 67.625);
    v1568.bezierCurveTo(p1173 * 45.000030517578125, p1173 * 59.625, p1173 * 48.000030517578125, p1173 * 58.625, p1173 * 54.000030517578125, p1173 * 53.625);
    v1568.closePath();
    f90(v1568, p1175[3]);
    v1568.globalAlpha = 1;
    v1568.beginPath();
    v1568.lineCap = "round";
    v1568.lineJoin = "round";
    v1568.moveTo(p1173 * 42.000030517578125, p1173 * 41.17047119140625);
    v1568.bezierCurveTo(p1173 * 45.000030517578125, p1173 * 38.17047119140625, p1173 * 49.000030517578125, p1173 * 37.17047119140625, p1173 * 62.000030517578125, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 78.00003051757812, p1173 * 38.17047119140625, p1173 * 94.00003051757812, p1173 * 38.17047119140625);
    v1568.bezierCurveTo(p1173 * 100.00003051757812, p1173 * 38.17047119140625, p1173 * 102.00003051757812, p1173 * 38.17047119140625, p1173 * 101.00003051757812, p1173 * 47.17047119140625);
    v1568.bezierCurveTo(p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 63.67047119140625, p1173 * 101.00003051757812, p1173 * 80.17047119140625);
    v1568.bezierCurveTo(p1173 * 102.00003051757812, p1173 * 84.17047119140625, p1173 * 100.00003051757812, p1173 * 86.17047119140625, p1173 * 95.00003051757812, p1173 * 88.17047119140625);
    v1568.bezierCurveTo(p1173 * 84.00003051757812, p1173 * 94.17047119140625, p1173 * 89.00003051757812, p1173 * 94.17047119140625, p1173 * 79.00003051757812, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 59.500030517578125, p1173 * 94.17047119140625, p1173 * 40.000030517578125, p1173 * 94.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 94.17047119140625, p1173 * 34.000030517578125, p1173 * 86.17047119140625);
    v1568.bezierCurveTo(p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 69.67047119140625, p1173 * 34.000030517578125, p1173 * 53.17047119140625);
    v1568.bezierCurveTo(p1173 * 33.000030517578125, p1173 * 47.17047119140625, p1173 * 34.000030517578125, p1173 * 47.17047119140625, p1173 * 40.000030517578125, p1173 * 42.17047119140625);
    v1568.closePath();
    f90(v1568, vUndefined, p1175[3], p1173 * 4);
    return v1567;
  }
  function f282(p1176, p1177) {
    var v1569 = document.createElement("canvas");
    var v1570 = v1569.getContext("2d");
    v1569.width = p1176 * 173;
    v1569.height = p1176 * 178;
    v1570.globalAlpha = 0.5;
    f93(v1570, p1176 * 86.5, p1176 * 98, p1176 * 80);
    f90(v1570, p1177[0]);
    v1570.globalAlpha = 1;
    f93(v1570, p1176 * 86.5, p1176 * 89, p1176 * 81);
    f90(v1570, p1177[1], p1177[2], p1176 * 4);
    f93(v1570, p1176 * 86.5, p1176 * 86, p1176 * 59);
    f90(v1570, p1177[3], p1177[4], p1176 * 4);
    v1570.globalAlpha = 0.5;
    f93(v1570, p1176 * 86.5, p1176 * 95, p1176 * 34);
    f90(v1570, p1177[0]);
    v1570.globalAlpha = 1;
    f93(v1570, p1176 * 86.5, p1176 * 89, p1176 * 34);
    f90(v1570, p1177[5]);
    return v1569;
  }
  function f283(p1178, p1179, p1180) {
    var v1571 = document.createElement("canvas");
    var v1572 = v1571.getContext("2d");
    v1571.width = p1178 * 272;
    v1571.height = p1178 * 264;
    v1572.translate(0, p1178 * 20);
    v1572.globalAlpha = p1179 ? 0.5 : 1;
    v1572.beginPath();
    v1572.lineCap = "round";
    v1572.lineJoin = "round";
    v1572.moveTo(p1178 * 56.999969482421875, p1178 * 84.517333984375);
    v1572.bezierCurveTo(p1178 * 61.999969482421875, p1178 * 58.517333984375, p1178 * 79.99996948242188, p1178 * 50.517333984375, p1178 * 102.99996948242188, p1178 * 50.517333984375);
    v1572.bezierCurveTo(p1178 * 119.99996948242188, p1178 * 26.517333984375, p1178 * 137.99996948242188, p1178 * 32.517333984375, p1178 * 156.99996948242188, p1178 * 44.517333984375);
    v1572.bezierCurveTo(p1178 * 187.99996948242188, p1178 * 42.517333984375, p1178 * 195.99996948242188, p1178 * 50.517333984375, p1178 * 202.99996948242188, p1178 * 77.517333984375);
    v1572.bezierCurveTo(p1178 * 229.99996948242188, p1178 * 80.517333984375, p1178 * 231.99996948242188, p1178 * 96.517333984375, p1178 * 229.99996948242188, p1178 * 118.517333984375);
    v1572.bezierCurveTo(p1178 * 241.99996948242188, p1178 * 147.517333984375, p1178 * 236.99996948242188, p1178 * 148.517333984375, p1178 * 220.99996948242188, p1178 * 165.517333984375);
    v1572.bezierCurveTo(p1178 * 222.99996948242188, p1178 * 192.517333984375, p1178 * 209.99996948242188, p1178 * 212.517333984375, p1178 * 177.99996948242188, p1178 * 213.517333984375);
    v1572.bezierCurveTo(p1178 * 159.99996948242188, p1178 * 234.517333984375, p1178 * 141.99996948242188, p1178 * 234.517333984375, p1178 * 116.99996948242188, p1178 * 222.517333984375);
    v1572.bezierCurveTo(p1178 * 72.99996948242188, p1178 * 226.517333984375, p1178 * 66.99996948242188, p1178 * 207.517333984375, p1178 * 65.99996948242188, p1178 * 190.517333984375);
    v1572.bezierCurveTo(p1178 * 35.999969482421875, p1178 * 180.517333984375, p1178 * 30.999969482421875, p1178 * 162.517333984375, p1178 * 39.999969482421875, p1178 * 135.517333984375);
    v1572.bezierCurveTo(p1178 * 23.999969482421875, p1178 * 110.517333984375, p1178 * 43.999969482421875, p1178 * 90.517333984375, p1178 * 55.999969482421875, p1178 * 85.517333984375);
    v1572.closePath();
    f90(v1572, p1180[0]);
    v1572.translate(0, p1178 * -20);
    v1572.globalAlpha = 1;
    v1572.beginPath();
    v1572.lineCap = "round";
    v1572.lineJoin = "round";
    v1572.moveTo(p1178 * 56.999969482421875, p1178 * 84.517333984375);
    v1572.bezierCurveTo(p1178 * 61.999969482421875, p1178 * 58.517333984375, p1178 * 79.99996948242188, p1178 * 50.517333984375, p1178 * 102.99996948242188, p1178 * 50.517333984375);
    v1572.bezierCurveTo(p1178 * 119.99996948242188, p1178 * 26.517333984375, p1178 * 137.99996948242188, p1178 * 32.517333984375, p1178 * 156.99996948242188, p1178 * 44.517333984375);
    v1572.bezierCurveTo(p1178 * 187.99996948242188, p1178 * 42.517333984375, p1178 * 195.99996948242188, p1178 * 50.517333984375, p1178 * 202.99996948242188, p1178 * 77.517333984375);
    v1572.bezierCurveTo(p1178 * 229.99996948242188, p1178 * 80.517333984375, p1178 * 231.99996948242188, p1178 * 96.517333984375, p1178 * 229.99996948242188, p1178 * 118.517333984375);
    v1572.bezierCurveTo(p1178 * 241.99996948242188, p1178 * 147.517333984375, p1178 * 236.99996948242188, p1178 * 148.517333984375, p1178 * 220.99996948242188, p1178 * 165.517333984375);
    v1572.bezierCurveTo(p1178 * 222.99996948242188, p1178 * 192.517333984375, p1178 * 209.99996948242188, p1178 * 212.517333984375, p1178 * 177.99996948242188, p1178 * 213.517333984375);
    v1572.bezierCurveTo(p1178 * 159.99996948242188, p1178 * 234.517333984375, p1178 * 141.99996948242188, p1178 * 234.517333984375, p1178 * 116.99996948242188, p1178 * 222.517333984375);
    v1572.bezierCurveTo(p1178 * 72.99996948242188, p1178 * 226.517333984375, p1178 * 66.99996948242188, p1178 * 207.517333984375, p1178 * 65.99996948242188, p1178 * 190.517333984375);
    v1572.bezierCurveTo(p1178 * 35.999969482421875, p1178 * 180.517333984375, p1178 * 30.999969482421875, p1178 * 162.517333984375, p1178 * 39.999969482421875, p1178 * 135.517333984375);
    v1572.bezierCurveTo(p1178 * 23.999969482421875, p1178 * 110.517333984375, p1178 * 43.999969482421875, p1178 * 90.517333984375, p1178 * 55.999969482421875, p1178 * 85.517333984375);
    v1572.closePath();
    f90(v1572, p1180[1], p1180[2], p1178 * 8);
    v1572.beginPath();
    v1572.lineCap = "round";
    v1572.lineJoin = "round";
    v1572.moveTo(p1178 * 123.99996948242188, p1178 * 116.18402099609375);
    v1572.bezierCurveTo(p1178 * 115.99996948242188, p1178 * 99.18402099609375, p1178 * 109.99996948242188, p1178 * 74.18402099609375, p1178 * 109.99996948242188, p1178 * 63.18402099609375);
    v1572.bezierCurveTo(p1178 * 115.99996948242188, p1178 * 69.18402099609375, p1178 * 125.99996948242188, p1178 * 87.18402099609375, p1178 * 137.99996948242188, p1178 * 112.18402099609375);
    v1572.bezierCurveTo(p1178 * 142.99996948242188, p1178 * 84.18402099609375, p1178 * 143.99996948242188, p1178 * 76.18402099609375, p1178 * 153.99996948242188, p1178 * 62.18402099609375);
    v1572.bezierCurveTo(p1178 * 155.99996948242188, p1178 * 79.18402099609375, p1178 * 149.99996948242188, p1178 * 110.18402099609375, p1178 * 151.99996948242188, p1178 * 117.18402099609375);
    v1572.bezierCurveTo(p1178 * 162.99996948242188, p1178 * 104.18402099609375, p1178 * 180.99996948242188, p1178 * 91.18402099609375, p1178 * 191.99996948242188, p1178 * 91.18402099609375);
    v1572.bezierCurveTo(p1178 * 185.99996948242188, p1178 * 102.18402099609375, p1178 * 180.99996948242188, p1178 * 106.18402099609375, p1178 * 160.99996948242188, p1178 * 124.18402099609375);
    v1572.bezierCurveTo(p1178 * 190.99996948242188, p1178 * 121.18402099609375, p1178 * 199.99996948242188, p1178 * 120.18402099609375, p1178 * 207.99996948242188, p1178 * 123.18402099609375);
    v1572.bezierCurveTo(p1178 * 199.99996948242188, p1178 * 129.18402099609375, p1178 * 181.99996948242188, p1178 * 132.18402099609375, p1178 * 160.99996948242188, p1178 * 135.18402099609375);
    v1572.bezierCurveTo(p1178 * 179.99996948242188, p1178 * 142.18402099609375, p1178 * 193.99996948242188, p1178 * 151.18402099609375, p1178 * 196.99996948242188, p1178 * 156.18402099609375);
    v1572.bezierCurveTo(p1178 * 185.99996948242188, p1178 * 156.18402099609375, p1178 * 163.99996948242188, p1178 * 149.18402099609375, p1178 * 152.99996948242188, p1178 * 147.18402099609375);
    v1572.bezierCurveTo(p1178 * 157.99996948242188, p1178 * 155.18402099609375, p1178 * 165.99996948242188, p1178 * 176.18402099609375, p1178 * 169.99996948242188, p1178 * 195.18402099609375);
    v1572.bezierCurveTo(p1178 * 162.99996948242188, p1178 * 190.18402099609375, p1178 * 147.99996948242188, p1178 * 167.18402099609375, p1178 * 139.99996948242188, p1178 * 153.18402099609375);
    v1572.bezierCurveTo(p1178 * 137.99996948242188, p1178 * 167.18402099609375, p1178 * 126.99996948242188, p1178 * 194.18402099609375, p1178 * 119.99996948242188, p1178 * 204.18402099609375);
    v1572.bezierCurveTo(p1178 * 117.99996948242188, p1178 * 186.18402099609375, p1178 * 123.99996948242188, p1178 * 165.18402099609375, p1178 * 126.99996948242188, p1178 * 149.18402099609375);
    v1572.bezierCurveTo(p1178 * 110.99996948242188, p1178 * 163.18402099609375, p1178 * 103.99996948242188, p1178 * 170.18402099609375, p1178 * 82.99996948242188, p1178 * 177.18402099609375);
    v1572.bezierCurveTo(p1178 * 90.99996948242188, p1178 * 162.18402099609375, p1178 * 99.99996948242188, p1178 * 153.18402099609375, p1178 * 117.99996948242188, p1178 * 140.18402099609375);
    v1572.bezierCurveTo(p1178 * 97.99996948242188, p1178 * 140.18402099609375, p1178 * 83.99996948242188, p1178 * 139.18402099609375, p1178 * 65.99996948242188, p1178 * 132.18402099609375);
    v1572.bezierCurveTo(p1178 * 77.99996948242188, p1178 * 127.18402099609375, p1178 * 95.99996948242188, p1178 * 127.18402099609375, p1178 * 115.99996948242188, p1178 * 127.18402099609375);
    v1572.bezierCurveTo(p1178 * 91.99996948242188, p1178 * 113.18402099609375, p1178 * 84.99996948242188, p1178 * 107.18402099609375, p1178 * 76.99996948242188, p1178 * 96.18402099609375);
    v1572.bezierCurveTo(p1178 * 94.99996948242188, p1178 * 99.18402099609375, p1178 * 109.99996948242188, p1178 * 109.18402099609375, p1178 * 123.99996948242188, p1178 * 116.18402099609375);
    v1572.closePath();
    f90(v1572, p1180[3]);
    v1572.beginPath();
    v1572.lineCap = "round";
    v1572.lineJoin = "round";
    v1572.moveTo(p1178 * 131.99996948242188, p1178 * 119.18402099609375);
    v1572.bezierCurveTo(p1178 * 141.99996948242188, p1178 * 119.18402099609375, p1178 * 145.99996948242188, p1178 * 116.18402099609375, p1178 * 147.99996948242188, p1178 * 109.18402099609375);
    v1572.bezierCurveTo(p1178 * 151.99996948242188, p1178 * 107.18402099609375, p1178 * 159.99996948242188, p1178 * 107.18402099609375, p1178 * 156.99996948242188, p1178 * 123.18402099609375);
    v1572.bezierCurveTo(p1178 * 155.99996948242188, p1178 * 140.18402099609375, p1178 * 142.99996948242188, p1178 * 149.18402099609375, p1178 * 132.99996948242188, p1178 * 147.18402099609375);
    v1572.bezierCurveTo(p1178 * 119.99996948242188, p1178 * 144.18402099609375, p1178 * 113.99996948242188, p1178 * 122.18402099609375, p1178 * 131.99996948242188, p1178 * 119.18402099609375);
    v1572.closePath();
    f90(v1572, p1180[4], p1180[5], p1178 * 6);
    return v1571;
  }
  function f284(p1181, p1182) {
    var v1573 = document.createElement("canvas");
    var v1574 = v1573.getContext("2d");
    v1573.width = p1181 * 253;
    v1573.height = p1181 * 260;
    v1574.globalAlpha = 0.5;
    f93(v1574, p1181 * 126.5, p1181 * 134, p1181 * 119);
    f90(v1574, p1182[0]);
    v1574.globalAlpha = 1;
    f93(v1574, p1181 * 126.5, p1181 * 124, p1181 * 119);
    f90(v1574, p1182[1], p1182[2], p1181 * 4);
    f93(v1574, p1181 * 126.5, p1181 * 127, p1181 * 100);
    f90(v1574, p1182[3]);
    v1574.globalAlpha = 0.5;
    f93(v1574, p1181 * 126.5, p1181 * 135, p1181 * 81);
    f90(v1574, p1182[0]);
    v1574.globalAlpha = 1;
    f93(v1574, p1181 * 126.5, p1181 * 125, p1181 * 84);
    f90(v1574, p1182[4], p1182[5], p1181 * 4);
    f93(v1574, p1181 * 126.5, p1181 * 125, p1181 * 61);
    f90(v1574, p1182[6], p1182[7], p1181 * 4);
    v1574.globalAlpha = 0.5;
    f93(v1574, p1181 * 126.5, p1181 * 134, p1181 * 40);
    f90(v1574, p1182[8]);
    v1574.globalAlpha = 1;
    f93(v1574, p1181 * 126.5, p1181 * 125, p1181 * 40);
    f90(v1574, p1182[9]);
    return v1573;
  }
  function f285(p1183, p1184, p1185) {
    var v1575 = document.createElement("canvas");
    var v1576 = v1575.getContext("2d");
    v1575.width = p1183 * 501;
    v1575.height = p1183 * 309;
    v1576.translate(0, p1183 * 6);
    v1576.globalAlpha = p1184 ? 0.5 : 1;
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 126, p1183 * 184);
    v1576.bezierCurveTo(p1183 * 169, p1183 * 196, p1183 * 194, p1183 * 198, p1183 * 227, p1183 * 198);
    v1576.bezierCurveTo(p1183 * 235, p1183 * 222, p1183 * 236, p1183 * 223, p1183 * 241, p1183 * 226);
    v1576.bezierCurveTo(p1183 * 245, p1183 * 228, p1183 * 257, p1183 * 228, p1183 * 263, p1183 * 226);
    v1576.bezierCurveTo(p1183 * 267, p1183 * 225, p1183 * 270, p1183 * 211, p1183 * 275, p1183 * 198);
    v1576.bezierCurveTo(p1183 * 332, p1183 * 194, p1183 * 347, p1183 * 192, p1183 * 372, p1183 * 188);
    v1576.bezierCurveTo(p1183 * 366, p1183 * 174.5, p1183 * 366, p1183 * 174.5, p1183 * 360, p1183 * 161);
    v1576.bezierCurveTo(p1183 * 253.5, p1183 * 162, p1183 * 253.5, p1183 * 162, p1183 * 147, p1183 * 163);
    v1576.closePath();
    f90(v1576, p1185[0]);
    v1576.globalAlpha = 1;
    v1576.translate(0, p1183 * -6);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 100, p1183 * 116);
    v1576.bezierCurveTo(p1183 * 90, p1183 * 101, p1183 * 96, p1183 * 89, p1183 * 106, p1183 * 83);
    v1576.bezierCurveTo(p1183 * 86, p1183 * 79, p1183 * 86, p1183 * 52, p1183 * 93, p1183 * 38);
    v1576.bezierCurveTo(p1183 * 99, p1183 * 51, p1183 * 107, p1183 * 57, p1183 * 122, p1183 * 63);
    v1576.bezierCurveTo(p1183 * 130, p1183 * 53, p1183 * 141, p1183 * 46, p1183 * 161, p1183 * 46);
    v1576.bezierCurveTo(p1183 * 157, p1183 * 31, p1183 * 158, p1183 * 20, p1183 * 169, p1183 * 6);
    v1576.bezierCurveTo(p1183 * 171, p1183 * 24, p1183 * 186, p1183 * 33, p1183 * 198, p1183 * 45);
    v1576.bezierCurveTo(p1183 * 252, p1183 * 45, p1183 * 252, p1183 * 45, p1183 * 306, p1183 * 45);
    v1576.bezierCurveTo(p1183 * 323, p1183 * 33, p1183 * 332, p1183 * 21, p1183 * 335, p1183 * 7);
    v1576.bezierCurveTo(p1183 * 349, p1183 * 21, p1183 * 347, p1183 * 36, p1183 * 345, p1183 * 46);
    v1576.bezierCurveTo(p1183 * 364, p1183 * 46, p1183 * 369, p1183 * 48, p1183 * 377, p1183 * 63);
    v1576.bezierCurveTo(p1183 * 398, p1183 * 58, p1183 * 403, p1183 * 49, p1183 * 409, p1183 * 40);
    v1576.bezierCurveTo(p1183 * 419, p1183 * 57, p1183 * 411, p1183 * 79, p1183 * 398, p1183 * 85);
    v1576.bezierCurveTo(p1183 * 405, p1183 * 100, p1183 * 405, p1183 * 106, p1183 * 401, p1183 * 118);
    v1576.bezierCurveTo(p1183 * 332.5, p1183 * 128.5, p1183 * 332.5, p1183 * 128.5, p1183 * 264, p1183 * 139);
    v1576.closePath();
    f90(v1576, p1185[1], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 122, p1183 * 191);
    v1576.bezierCurveTo(p1183 * 123, p1183 * 237, p1183 * 135, p1183 * 245, p1183 * 153, p1183 * 259);
    v1576.bezierCurveTo(p1183 * 167, p1183 * 269, p1183 * 158, p1183 * 281, p1183 * 118, p1183 * 276);
    v1576.bezierCurveTo(p1183 * 104, p1183 * 273, p1183 * 98, p1183 * 268, p1183 * 93, p1183 * 242);
    v1576.bezierCurveTo(p1183 * 89, p1183 * 220, p1183 * 92, p1183 * 201, p1183 * 102, p1183 * 179);
    v1576.closePath();
    f90(v1576, p1185[3], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 403, p1183 * 182);
    v1576.bezierCurveTo(p1183 * 414, p1183 * 215, p1183 * 412, p1183 * 232, p1183 * 403, p1183 * 260);
    v1576.bezierCurveTo(p1183 * 395, p1183 * 274, p1183 * 375, p1183 * 272, p1183 * 356, p1183 * 270);
    v1576.bezierCurveTo(p1183 * 345, p1183 * 268, p1183 * 339, p1183 * 262, p1183 * 354, p1183 * 252);
    v1576.bezierCurveTo(p1183 * 370, p1183 * 242, p1183 * 380, p1183 * 225, p1183 * 384, p1183 * 184);
    v1576.closePath();
    f90(v1576, p1185[3], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 155, p1183 * 157);
    v1576.bezierCurveTo(p1183 * 146, p1183 * 189, p1183 * 137, p1183 * 198, p1183 * 114, p1183 * 219);
    v1576.bezierCurveTo(p1183 * 104, p1183 * 212, p1183 * 98, p1183 * 203, p1183 * 89, p1183 * 189);
    v1576.bezierCurveTo(p1183 * 82, p1183 * 178, p1183 * 91, p1183 * 164, p1183 * 93, p1183 * 136);
    v1576.closePath();
    f90(v1576, p1185[4], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 347, p1183 * 162);
    v1576.bezierCurveTo(p1183 * 357, p1183 * 195, p1183 * 376, p1183 * 209, p1183 * 387, p1183 * 217);
    v1576.bezierCurveTo(p1183 * 409, p1183 * 201, p1183 * 420, p1183 * 181, p1183 * 416, p1183 * 166);
    v1576.bezierCurveTo(p1183 * 410, p1183 * 150, p1183 * 412, p1183 * 149, p1183 * 408, p1183 * 130);
    v1576.closePath();
    f90(v1576, p1185[4], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 86, p1183 * 134);
    v1576.bezierCurveTo(p1183 * 79, p1183 * 102, p1183 * 92, p1183 * 84, p1183 * 108, p1183 * 92);
    v1576.bezierCurveTo(p1183 * 149, p1183 * 108, p1183 * 184, p1183 * 111, p1183 * 242, p1183 * 111);
    v1576.bezierCurveTo(p1183 * 294, p1183 * 108, p1183 * 341, p1183 * 105, p1183 * 386, p1183 * 98);
    v1576.bezierCurveTo(p1183 * 412, p1183 * 91, p1183 * 417, p1183 * 86, p1183 * 415, p1183 * 133);
    v1576.bezierCurveTo(p1183 * 413, p1183 * 160, p1183 * 413, p1183 * 160, p1183 * 368, p1183 * 174);
    v1576.bezierCurveTo(p1183 * 308, p1183 * 184, p1183 * 291, p1183 * 185, p1183 * 270, p1183 * 186);
    v1576.bezierCurveTo(p1183 * 264, p1183 * 206, p1183 * 262, p1183 * 215, p1183 * 253, p1183 * 215);
    v1576.bezierCurveTo(p1183 * 239, p1183 * 217, p1183 * 239, p1183 * 211, p1183 * 231, p1183 * 186);
    v1576.bezierCurveTo(p1183 * 178, p1183 * 184, p1183 * 156, p1183 * 179, p1183 * 112, p1183 * 162);
    v1576.bezierCurveTo(p1183 * 87, p1183 * 151, p1183 * 90, p1183 * 144, p1183 * 87, p1183 * 137);
    v1576.closePath();
    f90(v1576, p1185[4], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 63, p1183 * 98);
    v1576.bezierCurveTo(p1183 * 84, p1183 * 121, p1183 * 109, p1183 * 102, p1183 * 124, p1183 * 117);
    v1576.bezierCurveTo(p1183 * 138, p1183 * 136, p1183 * 123, p1183 * 165, p1183 * 94, p1183 * 150);
    v1576.bezierCurveTo(p1183 * 66, p1183 * 131, p1183 * 64, p1183 * 115, p1183 * 63, p1183 * 99);
    v1576.closePath();
    f90(v1576, p1185[3], p1185[2], p1183 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1183 * 449, p1183 * 97);
    v1576.bezierCurveTo(p1183 * 446, p1183 * 143, p1183 * 415, p1183 * 151, p1183 * 402, p1183 * 155);
    v1576.bezierCurveTo(p1183 * 386, p1183 * 157, p1183 * 373, p1183 * 133, p1183 * 391, p1183 * 116);
    v1576.bezierCurveTo(p1183 * 402, p1183 * 106, p1183 * 432, p1183 * 124, p1183 * 449, p1183 * 97);
    v1576.closePath();
    f90(v1576, p1185[3], p1185[2], p1183 * 10);
    return v1575;
  }
  function f286(p1186, p1187, p1188) {
    var v1577 = document.createElement("canvas");
    var v1578 = v1577.getContext("2d");
    v1577.width = p1186 * 400;
    v1577.height = p1186 * 400;
    v1578.save();
    v1578.translate(p1186 * 204, p1186 * 195.0833282470703);
    v1578.rotate(10.16);
    f87(v1578, p1186 * -97.5, p1186 * -134.5, p1186 * 195, p1186 * 269, p1186 * 10);
    v1578.restore();
    f90(v1578, p1188[0], p1188[1], p1186 * 8);
    v1578.beginPath();
    v1578.lineCap = "round";
    v1578.lineJoin = "round";
    v1578.moveTo(p1186 * 58.5, p1186 * 226.5833282470703);
    v1578.bezierCurveTo(p1186 * 120.5, p1186 * 281.5833282470703, p1186 * 120.5, p1186 * 281.5833282470703, p1186 * 182.5, p1186 * 336.5833282470703);
    v1578.bezierCurveTo(p1186 * 263, p1186 * 248.5833282470703, p1186 * 263, p1186 * 248.5833282470703, p1186 * 343.5, p1186 * 160.5833282470703);
    v1578.bezierCurveTo(p1186 * 280.5, p1186 * 104.58332824707031, p1186 * 280.5, p1186 * 104.58332824707031, p1186 * 217.5, p1186 * 48.58332824707031);
    v1578.closePath();
    f90(v1578, p1188[2], p1188[3], p1186 * 4);
    v1578.save();
    v1578.translate(p1186 * 197, p1186 * 169.0833282470703);
    v1578.rotate(10.16);
    f87(v1578, p1186 * -93.5, p1186 * -126.5, p1186 * 187, p1186 * 253, p1186 * 10);
    v1578.restore();
    f90(v1578, p1188[4], p1188[1], p1186 * 8);
    v1578.beginPath();
    v1578.lineCap = "round";
    v1578.lineJoin = "round";
    v1578.moveTo(p1186 * 226.5, p1186 * 24.583328247070312);
    v1578.bezierCurveTo(p1186 * 58.5, p1186 * 207.5833282470703, p1186 * 143, p1186 * 116.58332824707031, p1186 * 59.5, p1186 * 208.5833282470703);
    v1578.closePath();
    f90(v1578, undefined, p1188[1], p1186 * 8);
    v1578.beginPath();
    v1578.lineCap = "round";
    v1578.lineJoin = "round";
    v1578.moveTo(p1186 * 46.133331298828125, p1186 * 202.64999389648438);
    v1578.bezierCurveTo(p1186 * 46.133331298828125, p1186 * 215.64999389648438, p1186 * 46.133331298828125, p1186 * 215.64999389648438, p1186 * 46.133331298828125, p1186 * 228.64999389648438);
    v1578.closePath();
    f90(v1578, p1188[4], p1188[1], p1186 * 8);
    v1578.beginPath();
    v1578.lineCap = "round";
    v1578.lineJoin = "round";
    v1578.moveTo(p1186 * 55.133331298828125, p1186 * 211.64999389648438);
    v1578.bezierCurveTo(p1186 * 55.133331298828125, p1186 * 225.14999389648438, p1186 * 55.133331298828125, p1186 * 225.14999389648438, p1186 * 55.133331298828125, p1186 * 238.64999389648438);
    v1578.bezierCurveTo(p1186 * 50.133331298828125, p1186 * 235.64999389648438, p1186 * 50.133331298828125, p1186 * 235.64999389648438, p1186 * 45.133331298828125, p1186 * 232.64999389648438);
    v1578.bezierCurveTo(p1186 * 45.133331298828125, p1186 * 216.64999389648438, p1186 * 45.133331298828125, p1186 * 216.64999389648438, p1186 * 45.133331298828125, p1186 * 200.64999389648438);
    v1578.closePath();
    f90(v1578, p1188[4], p1188[1], p1186 * 8);
    v1578.beginPath();
    v1578.lineCap = "round";
    v1578.lineJoin = "round";
    v1578.moveTo(p1186 * 46.133331298828125, p1186 * 198.39999389648438);
    v1578.bezierCurveTo(p1186 * 46.133331298828125, p1186 * 199.89999389648438, p1186 * 46.133331298828125, p1186 * 199.89999389648438, p1186 * 46.133331298828125, p1186 * 201.39999389648438);
    v1578.closePath();
    f90(v1578, p1188[4], p1188[1], p1186 * 8);
    v1578.save();
    v1578.translate(p1186 * 249.63333129882812, p1186 * 120.89999389648438);
    v1578.rotate(7.04);
    f87(v1578, p1186 * -58.5, p1186 * -32, p1186 * 117, p1186 * 64, p1186 * 10);
    v1578.restore();
    f90(v1578, p1188[5]);
    return v1577;
  }
  function f287(p1189, p1190, p1191) {
    var v1579 = document.createElement("canvas");
    var v1580 = v1579.getContext("2d");
    v1579.width = p1189 * 202;
    v1579.height = p1189 * 202;
    v1580.translate(p1189 * 2, p1189 * 1);
    v1580.globalAlpha = p1190 ? 0.5 : 1;
    v1580.translate(0, p1189 * 10);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 41.15177917480469);
    v1580.rotate(0.8);
    f87(v1580, p1189 * -16, p1189 * -16.5, p1189 * 32, p1189 * 33, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 98, p1189 * 22.5089111328125);
    v1580.bezierCurveTo(p1189 * 97.5, p1189 * 41.5089111328125, p1189 * 97.5, p1189 * 41.5089111328125, p1189 * 97, p1189 * 60.5089111328125);
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 147.5, p1189 * 69.5089111328125);
    v1580.rotate(0.2);
    f87(v1580, p1189 * -15.5, p1189 * -16, p1189 * 31, p1189 * 32, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 163, p1189 * 59.50892639160156);
    v1580.bezierCurveTo(p1189 * 147, p1189 * 69.50892639160156, p1189 * 127, p1189 * 82.50892639160156, p1189 * 131, p1189 * 79.50892639160156);
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 143.5, p1189 * 128.2946319580078);
    v1580.rotate(1.24);
    f87(v1580, p1189 * -16.5, p1189 * -17.5, p1189 * 33, p1189 * 35, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 162, p1189 * 135.93748474121094);
    v1580.bezierCurveTo(p1189 * 143.5, p1189 * 128.43748474121094, p1189 * 129, p1189 * 120.93748474121094, p1189 * 125, p1189 * 120.93748474121094);
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 99, p1189 * 156.08035278320312);
    v1580.rotate(0.84);
    f87(v1580, p1189 * -18, p1189 * -18, p1189 * 36, p1189 * 36, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 98, p1189 * 136.08035278320312);
    v1580.bezierCurveTo(p1189 * 98, p1189 * 156.08035278320312, p1189 * 98, p1189 * 156.08035278320312, p1189 * 98, p1189 * 176.08035278320312);
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 54, p1189 * 72.22320556640625);
    v1580.rotate(1.32);
    f87(v1580, p1189 * -18, p1189 * -19, p1189 * 36, p1189 * 38, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 34, p1189 * 60.79463195800781);
    v1580.bezierCurveTo(p1189 * 53.5, p1189 * 72.29463195800781, p1189 * 69, p1189 * 79.79463195800781, p1189 * 73, p1189 * 83.79463195800781);
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 49, p1189 * 127.29463195800781);
    v1580.rotate(1.76);
    f87(v1580, p1189 * -20, p1189 * -17.5, p1189 * 40, p1189 * 35, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 30, p1189 * 141.7946319580078);
    v1580.bezierCurveTo(p1189 * 47, p1189 * 130.2946319580078, p1189 * 64, p1189 * 119.79463195800781, p1189 * 64, p1189 * 118.79463195800781);
    f90(v1580, p1191[2]);
    v1580.globalAlpha = 1;
    v1580.translate(0, p1189 * -10);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 41.15177917480469);
    v1580.rotate(0.8);
    f87(v1580, p1189 * -16, p1189 * -16.5, p1189 * 32, p1189 * 33, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 98, p1189 * 22.5089111328125);
    v1580.bezierCurveTo(p1189 * 97.5, p1189 * 41.5089111328125, p1189 * 97.5, p1189 * 41.5089111328125, p1189 * 97, p1189 * 60.5089111328125);
    f90(v1580, vVVVVVUndefined132, p1191[4], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 147.5, p1189 * 69.5089111328125);
    v1580.rotate(0.2);
    f87(v1580, p1189 * -15.5, p1189 * -16, p1189 * 31, p1189 * 32, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 163, p1189 * 59.50892639160156);
    v1580.bezierCurveTo(p1189 * 147, p1189 * 69.50892639160156, p1189 * 127, p1189 * 82.50892639160156, p1189 * 131, p1189 * 79.50892639160156);
    f90(v1580, undefined, p1191[4], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 143.5, p1189 * 128.2946319580078);
    v1580.rotate(1.24);
    f87(v1580, p1189 * -16.5, p1189 * -17.5, p1189 * 33, p1189 * 35, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 162, p1189 * 135.93748474121094);
    v1580.bezierCurveTo(p1189 * 143.5, p1189 * 128.43748474121094, p1189 * 129, p1189 * 120.93748474121094, p1189 * 125, p1189 * 120.93748474121094);
    f90(v1580, undefined, p1191[4], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 99, p1189 * 156.08035278320312);
    v1580.rotate(0.84);
    f87(v1580, p1189 * -18, p1189 * -18, p1189 * 36, p1189 * 36, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 98, p1189 * 136.08035278320312);
    v1580.bezierCurveTo(p1189 * 98, p1189 * 156.08035278320312, p1189 * 98, p1189 * 156.08035278320312, p1189 * 98, p1189 * 176.08035278320312);
    f90(v1580, vVUndefined, p1191[4], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 54, p1189 * 72.22320556640625);
    v1580.rotate(1.32);
    f87(v1580, p1189 * -18, p1189 * -19, p1189 * 36, p1189 * 38, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 34, p1189 * 60.79463195800781);
    v1580.bezierCurveTo(p1189 * 53.5, p1189 * 72.29463195800781, p1189 * 69, p1189 * 79.79463195800781, p1189 * 73, p1189 * 83.79463195800781);
    f90(v1580, undefined, p1191[4], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 49, p1189 * 127.29463195800781);
    v1580.rotate(1.76);
    f87(v1580, p1189 * -20, p1189 * -17.5, p1189 * 40, p1189 * 35, p1189 * 7);
    v1580.restore();
    f90(v1580, p1191[3], p1191[4], p1189 * 5);
    v1580.beginPath();
    v1580.lineCap = "round";
    v1580.lineJoin = "round";
    v1580.moveTo(p1189 * 30, p1189 * 141.7946319580078);
    v1580.bezierCurveTo(p1189 * 47, p1189 * 130.2946319580078, p1189 * 64, p1189 * 119.79463195800781, p1189 * 64, p1189 * 118.79463195800781);
    f90(v1580, vVVVUndefined132, p1191[4], p1189 * 5);
    v1580.globalAlpha = p1190 ? 0.5 : 1;
    v1580.translate(0, p1189 * 10);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 99);
    f88(v1580, 6, p1189 * 70.28669492273468, p1189 * 10);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 99);
    f88(v1580, 6, p1189 * 56.455940020351264, p1189 * 10);
    v1580.restore();
    f90(v1580, p1191[2]);
    v1580.globalAlpha = 1;
    v1580.translate(0, p1189 * -10);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 99);
    f88(v1580, 6, p1189 * 70.28669492273468, p1189 * 10);
    v1580.restore();
    f90(v1580, p1191[5], p1191[6], p1189 * 5);
    v1580.save();
    v1580.translate(p1189 * 98, p1189 * 99);
    f88(v1580, 6, p1189 * 56.455940020351264, p1189 * 10);
    v1580.restore();
    f90(v1580, p1191[7], p1191[8], p1189 * 7);
    return v1579;
  }
  function f288(p1192, p1193, p1194) {
    var v1581 = document.createElement("canvas");
    var v1582 = v1581.getContext("2d");
    v1581.width = p1192 * 144;
    v1581.height = p1192 * 280;
    v1582.globalAlpha = p1193 ? 0.5 : 1;
    v1582.translate(p1192 * 5, p1192 * 5);
    v1582.beginPath();
    v1582.lineCap = "round";
    v1582.lineJoin = "round";
    v1582.moveTo(p1192 * 62, p1192 * 103.79999542236328);
    v1582.bezierCurveTo(p1192 * 62.5, p1192 * 148.79999542236328, p1192 * 62.5, p1192 * 148.79999542236328, p1192 * 63, p1192 * 193.79999542236328);
    v1582.bezierCurveTo(p1192 * 63, p1192 * 219.79999542236328, p1192 * 47, p1192 * 217.79999542236328, p1192 * 51, p1192 * 230.79999542236328);
    v1582.bezierCurveTo(p1192 * 62, p1192 * 255.79999542236328, p1192 * 74, p1192 * 260.7999954223633, p1192 * 72, p1192 * 248.79999542236328);
    v1582.bezierCurveTo(p1192 * 65, p1192 * 226.79999542236328, p1192 * 71, p1192 * 229.79999542236328, p1192 * 76, p1192 * 225.79999542236328);
    v1582.bezierCurveTo(p1192 * 90, p1192 * 224.79999542236328, p1192 * 89, p1192 * 232.79999542236328, p1192 * 90, p1192 * 243.79999542236328);
    v1582.bezierCurveTo(p1192 * 95, p1192 * 253.79999542236328, p1192 * 99, p1192 * 249.79999542236328, p1192 * 100, p1192 * 229.79999542236328);
    v1582.bezierCurveTo(p1192 * 102, p1192 * 213.79999542236328, p1192 * 98, p1192 * 214.79999542236328, p1192 * 90, p1192 * 205.79999542236328);
    v1582.bezierCurveTo(p1192 * 82, p1192 * 201.79999542236328, p1192 * 82, p1192 * 185.79999542236328, p1192 * 82, p1192 * 114.79999542236328);
    v1582.bezierCurveTo(p1192 * 80, p1192 * 73, p1192 * 82, p1192 * 68, p1192 * 93, p1192 * 53);
    v1582.bezierCurveTo(p1192 * 98, p1192 * 37, p1192 * 65, p1192 * 14, p1192 * 74, p1192 * 33);
    v1582.bezierCurveTo(p1192 * 82, p1192 * 56, p1192 * 77, p1192 * 52, p1192 * 69, p1192 * 54);
    v1582.bezierCurveTo(p1192 * 55, p1192 * 57, p1192 * 57, p1192 * 53, p1192 * 54, p1192 * 39);
    v1582.bezierCurveTo(p1192 * 46, p1192 * 20, p1192 * 37, p1192 * 61, p1192 * 50, p1192 * 68);
    v1582.bezierCurveTo(p1192 * 65, p1192 * 81, p1192 * 60, p1192 * 89, p1192 * 62, p1192 * 102);
    v1582.closePath();
    f90(v1582, p1194[0]);
    v1582.globalAlpha = 1;
    v1582.translate(p1192 * -5, p1192 * -5);
    v1582.beginPath();
    v1582.lineCap = "round";
    v1582.lineJoin = "round";
    v1582.moveTo(p1192 * 62, p1192 * 103.79999542236328);
    v1582.bezierCurveTo(p1192 * 62.5, p1192 * 148.79999542236328, p1192 * 62.5, p1192 * 148.79999542236328, p1192 * 63, p1192 * 193.79999542236328);
    v1582.bezierCurveTo(p1192 * 63, p1192 * 219.79999542236328, p1192 * 47, p1192 * 217.79999542236328, p1192 * 51, p1192 * 230.79999542236328);
    v1582.bezierCurveTo(p1192 * 62, p1192 * 255.79999542236328, p1192 * 74, p1192 * 260.7999954223633, p1192 * 72, p1192 * 248.79999542236328);
    v1582.bezierCurveTo(p1192 * 65, p1192 * 226.79999542236328, p1192 * 71, p1192 * 229.79999542236328, p1192 * 76, p1192 * 225.79999542236328);
    v1582.bezierCurveTo(p1192 * 90, p1192 * 224.79999542236328, p1192 * 89, p1192 * 232.79999542236328, p1192 * 90, p1192 * 243.79999542236328);
    v1582.bezierCurveTo(p1192 * 95, p1192 * 253.79999542236328, p1192 * 99, p1192 * 249.79999542236328, p1192 * 100, p1192 * 229.79999542236328);
    v1582.bezierCurveTo(p1192 * 102, p1192 * 213.79999542236328, p1192 * 98, p1192 * 214.79999542236328, p1192 * 90, p1192 * 205.79999542236328);
    v1582.bezierCurveTo(p1192 * 82, p1192 * 201.79999542236328, p1192 * 82, p1192 * 185.79999542236328, p1192 * 82, p1192 * 114.79999542236328);
    v1582.bezierCurveTo(p1192 * 80, p1192 * 73, p1192 * 82, p1192 * 68, p1192 * 93, p1192 * 53);
    v1582.bezierCurveTo(p1192 * 98, p1192 * 37, p1192 * 65, p1192 * 14, p1192 * 74, p1192 * 33);
    v1582.bezierCurveTo(p1192 * 82, p1192 * 56, p1192 * 77, p1192 * 52, p1192 * 69, p1192 * 54);
    v1582.bezierCurveTo(p1192 * 55, p1192 * 57, p1192 * 57, p1192 * 53, p1192 * 54, p1192 * 39);
    v1582.bezierCurveTo(p1192 * 46, p1192 * 20, p1192 * 37, p1192 * 61, p1192 * 50, p1192 * 68);
    v1582.bezierCurveTo(p1192 * 65, p1192 * 81, p1192 * 60, p1192 * 89, p1192 * 62, p1192 * 102);
    v1582.closePath();
    f90(v1582, p1194[1], p1194[2], p1192 * 6);
    return v1581;
  }
  function f289(p1195, p1196) {
    var v1583 = document.createElement("canvas");
    var v1584 = v1583.getContext("2d");
    v1583.width = p1195 * 85;
    v1583.height = p1195 * 145;
    v1584.translate(p1195 * -165, p1195 * -95);
    v1584.beginPath();
    v1584.lineCap = "round";
    v1584.lineJoin = "round";
    v1584.moveTo(p1195 * 217, p1195 * 103);
    v1584.bezierCurveTo(p1195 * 209, p1195 * 129, p1195 * 203, p1195 * 137, p1195 * 195, p1195 * 146);
    v1584.bezierCurveTo(p1195 * 195, p1195 * 159, p1195 * 194, p1195 * 167, p1195 * 189, p1195 * 178);
    v1584.bezierCurveTo(p1195 * 193, p1195 * 186, p1195 * 196, p1195 * 195, p1195 * 198, p1195 * 216);
    v1584.bezierCurveTo(p1195 * 217.5, p1195 * 189.5, p1195 * 217.5, p1195 * 189.5, p1195 * 237, p1195 * 163);
    v1584.closePath();
    f90(v1584, p1196[1]);
    v1584.beginPath();
    v1584.lineCap = "round";
    v1584.lineJoin = "round";
    v1584.moveTo(p1195 * 231, p1195 * 163);
    v1584.bezierCurveTo(p1195 * 221, p1195 * 139, p1195 * 218, p1195 * 128, p1195 * 215, p1195 * 114);
    v1584.bezierCurveTo(p1195 * 213, p1195 * 102, p1195 * 220, p1195 * 92, p1195 * 222, p1195 * 107);
    v1584.bezierCurveTo(p1195 * 224, p1195 * 118, p1195 * 233, p1195 * 138, p1195 * 244, p1195 * 161);
    v1584.bezierCurveTo(p1195 * 235, p1195 * 188, p1195 * 224, p1195 * 198, p1195 * 204, p1195 * 221);
    v1584.bezierCurveTo(p1195 * 190, p1195 * 233, p1195 * 190, p1195 * 235, p1195 * 180, p1195 * 235);
    v1584.bezierCurveTo(p1195 * 167, p1195 * 235, p1195 * 164, p1195 * 216, p1195 * 175, p1195 * 211);
    v1584.bezierCurveTo(p1195 * 176, p1195 * 208, p1195 * 181, p1195 * 207, p1195 * 191, p1195 * 205);
    v1584.bezierCurveTo(p1195 * 213, p1195 * 186, p1195 * 218, p1195 * 180, p1195 * 230, p1195 * 163);
    v1584.closePath();
    f90(v1584, p1196[2], p1196[3], p1195 * 4);
    v1584.beginPath();
    v1584.lineCap = "round";
    v1584.lineJoin = "round";
    v1584.moveTo(p1195 * 234, p1195 * 154);
    v1584.bezierCurveTo(p1195 * 227, p1195 * 156, p1195 * 222, p1195 * 156, p1195 * 199, p1195 * 148);
    v1584.bezierCurveTo(p1195 * 201, p1195 * 151, p1195 * 216, p1195 * 159, p1195 * 224, p1195 * 162);
    v1584.bezierCurveTo(p1195 * 209, p1195 * 169.5, p1195 * 209, p1195 * 169.5, p1195 * 194, p1195 * 177);
    v1584.bezierCurveTo(p1195 * 213.5, p1195 * 175, p1195 * 213.5, p1195 * 175, p1195 * 233, p1195 * 173);
    v1584.closePath();
    f90(v1584, p1196[2]);
    return v1583;
  }
  function f290() {
    var v1585 = v2882.time;
    if (ΔΔ[395]) {
      v419.drawImage(ΔΔ[395][v1585][1], v424 + 480, v425 + 190);
      v419.drawImage(ΔΔ[395][v1585][2], v424 + 180, v425 - 430);
      v419.drawImage(ΔΔ[395][v1585][1], v424 - 855, v425 + 100);
      v419.drawImage(ΔΔ[395][v1585][0], v424 - 550, v425 - 300);
      v419.drawImage(ΔΔ[395][v1585][0], v424 - 1020, v425 - 520);
    }
    if (ΔΔ[199]) {
      v419.drawImage(ΔΔ[199][v1585][1], v424 - 80, v425 - 640);
      v419.drawImage(ΔΔ[199][v1585][1], v424 + 80, v425 + 490);
      v419.drawImage(ΔΔ[199][v1585][2], v424 - 180, v425 - 700);
      v419.drawImage(ΔΔ[199][v1585][0], v424 + 550, v425 + 100);
      v419.drawImage(ΔΔ[199][v1585][1], v424 + 450, v425 + 300);
      v419.drawImage(ΔΔ[199][v1585][1], v424 + 780, v425 + 300);
      v419.drawImage(ΔΔ[199][v1585][2], v424 + 980, v425 + 200);
      v419.drawImage(ΔΔ[199][v1585][2], v424 + 680, v425 + 600);
      v419.drawImage(ΔΔ[199][v1585][2], v424 - 380, v425 + 100);
      v419.drawImage(ΔΔ[199][v1585][2], v424 + 280, v425 + 250);
    }
    if (ΔΔ[201]) {
      v419.drawImage(ΔΔ[201][v1585][0], v424 - 590, v425);
      v419.drawImage(ΔΔ[201][v1585][0], v424 + 120, v425 - 390);
      v419.drawImage(ΔΔ[201][v1585][0], v424 - 270, v425 + 340);
    }
    if (ΔΔ[200]) {
      v419.drawImage(ΔΔ[200][v1585][4], v424 - 700, v425 - 600);
      v419.drawImage(ΔΔ[200][v1585][2], v424 - 970, v425 - 250);
      v419.drawImage(ΔΔ[200][v1585][5], v424 - 720, v425 - 200);
      v419.drawImage(ΔΔ[200][v1585][2], v424 - 1020, v425 + 340);
      v419.drawImage(ΔΔ[200][v1585][0], v424 - 1120, v425 - 0);
      v419.drawImage(ΔΔ[200][v1585][1], v424 - 650, v425 - 330);
      v419.drawImage(ΔΔ[200][v1585][4], v424 - 495, v425 - 90);
      v419.drawImage(ΔΔ[200][v1585][3], v424 - 520, v425 + 340);
      v419.drawImage(ΔΔ[200][v1585][2], v424 + 830, v425 - 520);
    }
    ΔΔ[524];
    if (v2885 && v2884) {
      var v1586 = v2885.ⲆΔⵠ.x;
      var v1587 = v2885.ⲆΔⵠ.y;
      v2885.ⲆΔⵠ.x = v424;
      v2885.ⲆΔⵠ.y = v425;
      var v1588 = v2884.time;
      v2884.time = v2882.time;
      var v1589;
      var v1590 = v2882.items;
      v1590[2].x = 400;
      v1590[2].y = 100;
      v1590[2].ᐃᐃΔⵠ(205);
      (v1589 = v1590[1]).x = -500;
      v1589.y = 100;
      v1589.ⵠᐃⵠΔ[0].x = v1589.x - 20.5;
      v1589.ⵠᐃⵠΔ[0].y = v1589.y - 22.5;
      v1589.ⵠᐃⵠΔ[1].x = v1589.x - 35.5;
      v1589.ⵠᐃⵠΔ[1].y = v1589.y + 7.5;
      v1589.ⵠᐃⵠΔ[2].x = v1589.x + 7.5;
      v1589.ⵠᐃⵠΔ[2].y = v1589.y - 30;
      v1589.ⵠᐃⵠΔ[3].x = v1589.x + 22.5;
      v1589.ⵠᐃⵠΔ[3].y = v1589.y;
      v1589.ⵠᐃⵠΔ[4].x = v1589.x - 7.5;
      v1589.ⵠᐃⵠΔ[4].y = v1589.y + 14.5;
      for (var v1591 = 0; v1591 < v1589.info; v1591++) {
        v1589.ⵠᐃⵠΔ[v1591].ᐃᐃΔⵠ(404);
      }
      (v1589 = v1590[3]).x = 210;
      v1589.y = -290;
      v1589.ⵠᐃⵠΔ[0].x = v1589.x - 20.5;
      v1589.ⵠᐃⵠΔ[0].y = v1589.y - 22.5;
      v1589.ⵠᐃⵠΔ[1].x = v1589.x - 35.5;
      v1589.ⵠᐃⵠΔ[1].y = v1589.y + 7.5;
      v1589.ⵠᐃⵠΔ[2].x = v1589.x + 7.5;
      v1589.ⵠᐃⵠΔ[2].y = v1589.y - 30;
      v1589.ⵠᐃⵠΔ[3].x = v1589.x + 22.5;
      v1589.ⵠᐃⵠΔ[3].y = v1589.y;
      v1589.ⵠᐃⵠΔ[4].x = v1589.x - 7.5;
      v1589.ⵠᐃⵠΔ[4].y = v1589.y + 14.5;
      for (v1591 = 0; v1591 < v1589.info; v1591++) {
        v1589.ⵠᐃⵠΔ[v1591].ᐃᐃΔⵠ(404);
      }
      v1590[0].x = 450;
      v1590[0].y = -100;
      v1590[0].ⲆⵠᐃᐃᐃΔᐃ(204);
      v1590[0].ᐃΔΔᐃΔ();
      v2885.ⲆΔⵠ.x = v1586;
      v2885.ⲆΔⵠ.y = v1587;
      v2884.time = v1588;
    }
  }
  function f291(p1197, p1198) {
    var v1592 = document.createElement("canvas");
    var v1593 = v1592.getContext("2d");
    v1592.width = p1197 * 161;
    v1592.height = p1197 * 190;
    v1593.globalAlpha = 0.5;
    v1593.translate(0, 8);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 9, p1197 * 93);
    v1593.bezierCurveTo(p1197 * 17, p1197 * 95, p1197 * 19, p1197 * 95, p1197 * 21, p1197 * 95);
    v1593.bezierCurveTo(p1197 * 9, p1197 * 83, p1197 * 17, p1197 * 93, p1197 * 4, p1197 * 76);
    v1593.bezierCurveTo(p1197 * 11, p1197 * 75, p1197 * 11, p1197 * 75, p1197 * 18, p1197 * 75);
    v1593.bezierCurveTo(p1197 * 13, p1197 * 67, p1197 * 13, p1197 * 67, p1197 * 7, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 14, p1197 * 59, p1197 * 14, p1197 * 59, p1197 * 21, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 46, p1197 * 35, p1197 * 35, p1197 * 45, p1197 * 49, p1197 * 31);
    v1593.bezierCurveTo(p1197 * 53, p1197 * 24, p1197 * 51, p1197 * 21, p1197 * 51, p1197 * 16);
    v1593.bezierCurveTo(p1197 * 63, p1197 * 23, p1197 * 63, p1197 * 24, p1197 * 69, p1197 * 29);
    v1593.bezierCurveTo(p1197 * 76, p1197 * 7, p1197 * 75, p1197 * 11, p1197 * 76, p1197 * 6);
    v1593.bezierCurveTo(p1197 * 81, p1197 * 12, p1197 * 84, p1197 * 18, p1197 * 89, p1197 * 27);
    v1593.bezierCurveTo(p1197 * 95, p1197 * 25, p1197 * 100, p1197 * 16, p1197 * 105, p1197 * 14);
    v1593.bezierCurveTo(p1197 * 103, p1197 * 25, p1197 * 111, p1197 * 33, p1197 * 110, p1197 * 34);
    v1593.bezierCurveTo(p1197 * 123, p1197 * 48, p1197 * 123, p1197 * 48, p1197 * 136, p1197 * 62);
    v1593.bezierCurveTo(p1197 * 142, p1197 * 60, p1197 * 147, p1197 * 59, p1197 * 155, p1197 * 58);
    v1593.bezierCurveTo(p1197 * 147, p1197 * 65, p1197 * 147, p1197 * 65, p1197 * 139, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 73, p1197 * 145, p1197 * 73, p1197 * 151, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 80, p1197 * 145, p1197 * 80, p1197 * 138, p1197 * 87);
    v1593.bezierCurveTo(p1197 * 144, p1197 * 88, p1197 * 144, p1197 * 88, p1197 * 150, p1197 * 89);
    v1593.bezierCurveTo(p1197 * 125, p1197 * 103, p1197 * 125, p1197 * 125, p1197 * 113, p1197 * 141);
    v1593.bezierCurveTo(p1197 * 92, p1197 * 178, p1197 * 85, p1197 * 177, p1197 * 76, p1197 * 178);
    v1593.bezierCurveTo(p1197 * 64, p1197 * 179, p1197 * 51, p1197 * 164, p1197 * 35, p1197 * 131);
    v1593.bezierCurveTo(p1197 * 18, p1197 * 95, p1197 * 13, p1197 * 99, p1197 * 8, p1197 * 93);
    v1593.closePath();
    f90(v1593, p1198[0]);
    v1593.globalAlpha = 1;
    v1593.translate(0, -8);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 9, p1197 * 93);
    v1593.bezierCurveTo(p1197 * 17, p1197 * 95, p1197 * 19, p1197 * 95, p1197 * 21, p1197 * 95);
    v1593.bezierCurveTo(p1197 * 9, p1197 * 83, p1197 * 17, p1197 * 93, p1197 * 4, p1197 * 76);
    v1593.bezierCurveTo(p1197 * 11, p1197 * 75, p1197 * 11, p1197 * 75, p1197 * 18, p1197 * 75);
    v1593.bezierCurveTo(p1197 * 13, p1197 * 67, p1197 * 13, p1197 * 67, p1197 * 7, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 14, p1197 * 59, p1197 * 14, p1197 * 59, p1197 * 21, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 46, p1197 * 35, p1197 * 35, p1197 * 45, p1197 * 49, p1197 * 31);
    v1593.bezierCurveTo(p1197 * 53, p1197 * 24, p1197 * 51, p1197 * 21, p1197 * 51, p1197 * 16);
    v1593.bezierCurveTo(p1197 * 63, p1197 * 23, p1197 * 63, p1197 * 24, p1197 * 69, p1197 * 29);
    v1593.bezierCurveTo(p1197 * 76, p1197 * 7, p1197 * 75, p1197 * 11, p1197 * 76, p1197 * 6);
    v1593.bezierCurveTo(p1197 * 81, p1197 * 12, p1197 * 84, p1197 * 18, p1197 * 89, p1197 * 27);
    v1593.bezierCurveTo(p1197 * 95, p1197 * 25, p1197 * 100, p1197 * 16, p1197 * 105, p1197 * 14);
    v1593.bezierCurveTo(p1197 * 103, p1197 * 25, p1197 * 111, p1197 * 33, p1197 * 110, p1197 * 34);
    v1593.bezierCurveTo(p1197 * 123, p1197 * 48, p1197 * 123, p1197 * 48, p1197 * 136, p1197 * 62);
    v1593.bezierCurveTo(p1197 * 142, p1197 * 60, p1197 * 147, p1197 * 59, p1197 * 155, p1197 * 58);
    v1593.bezierCurveTo(p1197 * 147, p1197 * 65, p1197 * 147, p1197 * 65, p1197 * 139, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 73, p1197 * 145, p1197 * 73, p1197 * 151, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 80, p1197 * 145, p1197 * 80, p1197 * 138, p1197 * 87);
    v1593.bezierCurveTo(p1197 * 144, p1197 * 88, p1197 * 144, p1197 * 88, p1197 * 150, p1197 * 89);
    v1593.bezierCurveTo(p1197 * 125, p1197 * 103, p1197 * 125, p1197 * 125, p1197 * 113, p1197 * 141);
    v1593.bezierCurveTo(p1197 * 92, p1197 * 178, p1197 * 85, p1197 * 177, p1197 * 76, p1197 * 178);
    v1593.bezierCurveTo(p1197 * 64, p1197 * 179, p1197 * 51, p1197 * 164, p1197 * 35, p1197 * 131);
    v1593.bezierCurveTo(p1197 * 18, p1197 * 95, p1197 * 13, p1197 * 99, p1197 * 8, p1197 * 93);
    v1593.closePath();
    f90(v1593, p1198[1]);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 28, p1197 * 63);
    v1593.bezierCurveTo(p1197 * 23, p1197 * 54, p1197 * 24, p1197 * 47, p1197 * 26, p1197 * 37);
    v1593.bezierCurveTo(p1197 * 28, p1197 * 29, p1197 * 31, p1197 * 31, p1197 * 41, p1197 * 35);
    v1593.bezierCurveTo(p1197 * 52, p1197 * 45, p1197 * 55, p1197 * 51, p1197 * 57, p1197 * 53);
    v1593.bezierCurveTo(p1197 * 50, p1197 * 50, p1197 * 44, p1197 * 47, p1197 * 43, p1197 * 48);
    v1593.bezierCurveTo(p1197 * 43, p1197 * 52, p1197 * 43, p1197 * 52, p1197 * 42, p1197 * 57);
    v1593.bezierCurveTo(p1197 * 38, p1197 * 54, p1197 * 38, p1197 * 54, p1197 * 33, p1197 * 51);
    v1593.bezierCurveTo(p1197 * 34, p1197 * 56, p1197 * 34, p1197 * 56, p1197 * 34, p1197 * 61);
    v1593.closePath();
    f90(v1593, p1198[3]);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 99, p1197 * 55);
    v1593.bezierCurveTo(p1197 * 107, p1197 * 43, p1197 * 113, p1197 * 39, p1197 * 121, p1197 * 34);
    v1593.bezierCurveTo(p1197 * 130, p1197 * 29, p1197 * 130, p1197 * 34, p1197 * 130, p1197 * 42);
    v1593.bezierCurveTo(p1197 * 131, p1197 * 57, p1197 * 128, p1197 * 61, p1197 * 129, p1197 * 63);
    v1593.bezierCurveTo(p1197 * 124, p1197 * 62, p1197 * 124, p1197 * 62, p1197 * 119, p1197 * 61);
    v1593.bezierCurveTo(p1197 * 119, p1197 * 56, p1197 * 120, p1197 * 61, p1197 * 118, p1197 * 52);
    v1593.bezierCurveTo(p1197 * 115, p1197 * 55, p1197 * 111, p1197 * 59, p1197 * 111, p1197 * 58);
    v1593.bezierCurveTo(p1197 * 110, p1197 * 54, p1197 * 109, p1197 * 57, p1197 * 109, p1197 * 51);
    v1593.closePath();
    f90(v1593, p1198[3]);
    f93(v1593, p1197 * 103, p1197 * 110, p1197 * 11);
    f90(v1593, p1198[4]);
    f93(v1593, p1197 * 55, p1197 * 111, p1197 * 11);
    f90(v1593, p1198[4]);
    f93(v1593, p1197 * 99, p1197 * 107, p1197 * 5);
    f90(v1593, p1198[1]);
    f93(v1593, p1197 * 51, p1197 * 108, p1197 * 5);
    f90(v1593, p1198[1]);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 31, p1197 * 121);
    v1593.bezierCurveTo(p1197 * 45, p1197 * 128, p1197 * 51, p1197 * 133, p1197 * 53, p1197 * 141);
    v1593.bezierCurveTo(p1197 * 59, p1197 * 161, p1197 * 70, p1197 * 173, p1197 * 80, p1197 * 169);
    v1593.bezierCurveTo(p1197 * 89, p1197 * 172, p1197 * 99, p1197 * 149, p1197 * 107, p1197 * 133);
    v1593.bezierCurveTo(p1197 * 114, p1197 * 122, p1197 * 119, p1197 * 123, p1197 * 124, p1197 * 119);
    v1593.bezierCurveTo(p1197 * 109, p1197 * 148, p1197 * 117, p1197 * 133, p1197 * 109, p1197 * 147);
    v1593.bezierCurveTo(p1197 * 87, p1197 * 180, p1197 * 84, p1197 * 179, p1197 * 76, p1197 * 178);
    v1593.bezierCurveTo(p1197 * 49, p1197 * 173, p1197 * 44, p1197 * 149, p1197 * 31, p1197 * 121);
    v1593.closePath();
    f90(v1593, p1198[5]);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.translate(-2, 0);
    v1593.moveTo(p1197 * 71, p1197 * 162);
    v1593.bezierCurveTo(p1197 * 80, p1197 * 155, p1197 * 85, p1197 * 159, p1197 * 89, p1197 * 164);
    v1593.bezierCurveTo(p1197 * 90, p1197 * 171, p1197 * 86, p1197 * 173, p1197 * 79, p1197 * 173);
    v1593.bezierCurveTo(p1197 * 67, p1197 * 172, p1197 * 67, p1197 * 168, p1197 * 71, p1197 * 162);
    v1593.closePath();
    f90(v1593, p1198[3]);
    v1593.translate(2, 0);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 9, p1197 * 93);
    v1593.bezierCurveTo(p1197 * 17, p1197 * 95, p1197 * 19, p1197 * 95, p1197 * 21, p1197 * 95);
    v1593.bezierCurveTo(p1197 * 9, p1197 * 83, p1197 * 17, p1197 * 93, p1197 * 4, p1197 * 76);
    v1593.bezierCurveTo(p1197 * 11, p1197 * 75, p1197 * 11, p1197 * 75, p1197 * 18, p1197 * 75);
    v1593.bezierCurveTo(p1197 * 13, p1197 * 67, p1197 * 13, p1197 * 67, p1197 * 7, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 14, p1197 * 59, p1197 * 14, p1197 * 59, p1197 * 21, p1197 * 59);
    v1593.bezierCurveTo(p1197 * 46, p1197 * 35, p1197 * 35, p1197 * 45, p1197 * 49, p1197 * 31);
    v1593.bezierCurveTo(p1197 * 53, p1197 * 24, p1197 * 51, p1197 * 21, p1197 * 51, p1197 * 16);
    v1593.bezierCurveTo(p1197 * 63, p1197 * 23, p1197 * 63, p1197 * 24, p1197 * 69, p1197 * 29);
    v1593.bezierCurveTo(p1197 * 76, p1197 * 7, p1197 * 75, p1197 * 11, p1197 * 76, p1197 * 6);
    v1593.bezierCurveTo(p1197 * 81, p1197 * 12, p1197 * 84, p1197 * 18, p1197 * 89, p1197 * 27);
    v1593.bezierCurveTo(p1197 * 95, p1197 * 25, p1197 * 100, p1197 * 16, p1197 * 105, p1197 * 14);
    v1593.bezierCurveTo(p1197 * 103, p1197 * 25, p1197 * 111, p1197 * 33, p1197 * 110, p1197 * 34);
    v1593.bezierCurveTo(p1197 * 123, p1197 * 48, p1197 * 123, p1197 * 48, p1197 * 136, p1197 * 62);
    v1593.bezierCurveTo(p1197 * 142, p1197 * 60, p1197 * 147, p1197 * 59, p1197 * 155, p1197 * 58);
    v1593.bezierCurveTo(p1197 * 147, p1197 * 65, p1197 * 147, p1197 * 65, p1197 * 139, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 73, p1197 * 145, p1197 * 73, p1197 * 151, p1197 * 73);
    v1593.bezierCurveTo(p1197 * 145, p1197 * 80, p1197 * 145, p1197 * 80, p1197 * 138, p1197 * 87);
    v1593.bezierCurveTo(p1197 * 144, p1197 * 88, p1197 * 144, p1197 * 88, p1197 * 150, p1197 * 89);
    v1593.bezierCurveTo(p1197 * 125, p1197 * 103, p1197 * 125, p1197 * 125, p1197 * 113, p1197 * 141);
    v1593.bezierCurveTo(p1197 * 92, p1197 * 178, p1197 * 85, p1197 * 177, p1197 * 76, p1197 * 178);
    v1593.bezierCurveTo(p1197 * 64, p1197 * 179, p1197 * 51, p1197 * 164, p1197 * 35, p1197 * 131);
    v1593.bezierCurveTo(p1197 * 18, p1197 * 95, p1197 * 13, p1197 * 99, p1197 * 8, p1197 * 93);
    v1593.closePath();
    f90(v1593, vVUndefined, p1198[2], p1197 * 4);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 25, p1197 * 63);
    v1593.bezierCurveTo(p1197 * 16, p1197 * 58, p1197 * 17, p1197 * 51, p1197 * 17, p1197 * 33);
    v1593.bezierCurveTo(p1197 * 19, p1197 * 12, p1197 * 21, p1197 * 12, p1197 * 32, p1197 * 17);
    v1593.bezierCurveTo(p1197 * 63, p1197 * 31, p1197 * 66, p1197 * 45, p1197 * 66, p1197 * 54);
    f90(v1593, p1198[1], p1198[2], p1197 * 4);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 91, p1197 * 53);
    v1593.bezierCurveTo(p1197 * 91, p1197 * 40, p1197 * 98, p1197 * 33, p1197 * 121, p1197 * 20);
    v1593.bezierCurveTo(p1197 * 137, p1197 * 12, p1197 * 137, p1197 * 16, p1197 * 139, p1197 * 27);
    v1593.bezierCurveTo(p1197 * 141, p1197 * 49, p1197 * 140, p1197 * 57, p1197 * 134, p1197 * 64);
    f90(v1593, p1198[1], p1198[2], p1197 * 4);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 31, p1197 * 63);
    v1593.bezierCurveTo(p1197 * 23, p1197 * 54, p1197 * 24, p1197 * 47, p1197 * 26, p1197 * 37);
    v1593.bezierCurveTo(p1197 * 28, p1197 * 29, p1197 * 31, p1197 * 31, p1197 * 41, p1197 * 35);
    v1593.bezierCurveTo(p1197 * 52, p1197 * 45, p1197 * 55, p1197 * 51, p1197 * 57, p1197 * 53);
    v1593.bezierCurveTo(p1197 * 50, p1197 * 50, p1197 * 44, p1197 * 47, p1197 * 43, p1197 * 48);
    v1593.bezierCurveTo(p1197 * 43, p1197 * 52, p1197 * 43, p1197 * 52, p1197 * 42, p1197 * 57);
    v1593.bezierCurveTo(p1197 * 38, p1197 * 54, p1197 * 38, p1197 * 54, p1197 * 33, p1197 * 51);
    v1593.bezierCurveTo(p1197 * 34, p1197 * 56, p1197 * 34, p1197 * 56, p1197 * 34, p1197 * 61);
    v1593.closePath();
    f90(v1593, p1198[3]);
    v1593.beginPath();
    v1593.lineCap = "round";
    v1593.lineJoin = "round";
    v1593.moveTo(p1197 * 99, p1197 * 55);
    v1593.bezierCurveTo(p1197 * 107, p1197 * 43, p1197 * 113, p1197 * 39, p1197 * 121, p1197 * 34);
    v1593.bezierCurveTo(p1197 * 130, p1197 * 29, p1197 * 130, p1197 * 34, p1197 * 130, p1197 * 42);
    v1593.bezierCurveTo(p1197 * 131, p1197 * 57, p1197 * 128, p1197 * 61, p1197 * 129, p1197 * 63);
    v1593.bezierCurveTo(p1197 * 124, p1197 * 62, p1197 * 124, p1197 * 62, p1197 * 119, p1197 * 61);
    v1593.bezierCurveTo(p1197 * 119, p1197 * 56, p1197 * 120, p1197 * 61, p1197 * 118, p1197 * 52);
    v1593.bezierCurveTo(p1197 * 115, p1197 * 55, p1197 * 111, p1197 * 59, p1197 * 111, p1197 * 58);
    v1593.bezierCurveTo(p1197 * 110, p1197 * 54, p1197 * 109, p1197 * 57, p1197 * 109, p1197 * 51);
    v1593.closePath();
    f90(v1593, p1198[3]);
    return v1592;
  }
  function f292(p1199, p1200, p1201) {
    var v1594 = document.createElement("canvas");
    var v1595 = v1594.getContext("2d");
    v1594.width = p1199 * 167;
    v1594.height = p1199 * 136;
    v1595.globalAlpha = 0.5;
    v1595.save();
    v1595.translate(p1199 * 76.71426391601562, p1199 * 67.85713195800781);
    f87(v1595, p1199 * -57.5, p1199 * -54.5, p1199 * 115, p1199 * 109, p1199 * 15);
    v1595.restore();
    f90(v1595, p1201[0]);
    v1595.globalAlpha = 0.8;
    v1595.save();
    v1595.translate(p1199 * 76.71426391601562, p1199 * 67.85713195800781);
    f87(v1595, p1199 * -57.5, p1199 * -54.5, p1199 * 115, p1199 * 109, p1199 * 15);
    v1595.restore();
    f90(v1595, undefined, p1201[1], p1199 * 7);
    v1595.globalAlpha = 0.5;
    v1595.save();
    v1595.translate(p1199 * 91.21426391601562, p1199 * 67.35713195800781);
    f87(v1595, p1199 * -56, p1199 * -55, p1199 * 115, p1199 * 109, p1199 * 15);
    v1595.restore();
    f90(v1595, p1201[0]);
    v1595.globalAlpha = 1;
    v1595.save();
    v1595.translate(p1199 * 91.21426391601562, p1199 * 67.35713195800781);
    f87(v1595, p1199 * -56, p1199 * -55, p1199 * 115, p1199 * 109, p1199 * 15);
    v1595.restore();
    f90(v1595, undefined, p1201[1], p1199 * 7);
    v1595.beginPath();
    v1595.lineCap = "round";
    v1595.lineJoin = "round";
    v1595.moveTo(p1199 * 131.21426391601562, p1199 * 70.35713195800781);
    v1595.bezierCurveTo(p1199 * 133.21426391601562, p1199 * 95.35713195800781, p1199 * 128.21426391601562, p1199 * 109.35713195800781, p1199 * 108.21426391601562, p1199 * 108.35713195800781);
    f90(v1595, undefined, p1201[1], p1199 * 10);
    return v1594;
  }
  function f293(p1202, p1203, p1204) {
    var v1596 = document.createElement("canvas");
    var v1597 = v1596.getContext("2d");
    v1596.width = p1202 * 106;
    v1596.height = p1202 * 681;
    v1597.translate(p1202 * 20, p1202 * 20);
    v1597.globalAlpha = p1203 ? 0.5 : 1;
    v1597.save();
    v1597.translate(p1202 * 52.5, p1202 * 395);
    v1597.rotate(0);
    f87(v1597, p1202 * -11.5, p1202 * -226, p1202 * 23, p1202 * 452, p1202 * 10);
    v1597.restore();
    f90(v1597, p1204[0]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 35, p1202 * 588);
    v1597.bezierCurveTo(p1202 * 47, p1202 * 596, p1202 * 61, p1202 * 594, p1202 * 69, p1202 * 588);
    v1597.bezierCurveTo(p1202 * 79, p1202 * 615, p1202 * 78, p1202 * 632, p1202 * 59, p1202 * 643);
    v1597.bezierCurveTo(p1202 * 41, p1202 * 650, p1202 * 27, p1202 * 632, p1202 * 30, p1202 * 610);
    v1597.closePath();
    f90(v1597, p1204[0]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 135);
    v1597.bezierCurveTo(p1202 * 61.5, p1202 * 142, p1202 * 61.5, p1202 * 142, p1202 * 71, p1202 * 149);
    v1597.bezierCurveTo(p1202 * 69.5, p1202 * 166, p1202 * 69.5, p1202 * 166, p1202 * 68, p1202 * 183);
    v1597.bezierCurveTo(p1202 * 60.5, p1202 * 187.5, p1202 * 60.5, p1202 * 187.5, p1202 * 53, p1202 * 192);
    v1597.bezierCurveTo(p1202 * 45, p1202 * 187.5, p1202 * 45, p1202 * 187.5, p1202 * 37, p1202 * 183);
    v1597.bezierCurveTo(p1202 * 35.5, p1202 * 167, p1202 * 35.5, p1202 * 167, p1202 * 34, p1202 * 151);
    v1597.closePath();
    f90(v1597, p1204[0]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 64, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 63, p1202 * 164, p1202 * 63, p1202 * 164, p1202 * 62, p1202 * 178);
    v1597.bezierCurveTo(p1202 * 58, p1202 * 181, p1202 * 58, p1202 * 181, p1202 * 54, p1202 * 184);
    v1597.bezierCurveTo(p1202 * 48.5, p1202 * 181.5, p1202 * 48.5, p1202 * 181.5, p1202 * 43, p1202 * 179);
    v1597.bezierCurveTo(p1202 * 42, p1202 * 164.5, p1202 * 42, p1202 * 164.5, p1202 * 41, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 46, p1202 * 152.5, p1202 * 46, p1202 * 152.5, p1202 * 51, p1202 * 155);
    v1597.closePath();
    f90(v1597, p1204[0]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 39);
    v1597.bezierCurveTo(p1202 * 65.5, p1202 * 82, p1202 * 65.5, p1202 * 82, p1202 * 79, p1202 * 125);
    v1597.bezierCurveTo(p1202 * 66, p1202 * 137.5, p1202 * 66, p1202 * 137.5, p1202 * 53, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 39, p1202 * 138, p1202 * 39, p1202 * 138, p1202 * 25, p1202 * 126);
    v1597.closePath();
    f90(v1597, p1204[0]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 64);
    v1597.bezierCurveTo(p1202 * 60, p1202 * 92.5, p1202 * 60, p1202 * 92.5, p1202 * 68, p1202 * 121);
    v1597.bezierCurveTo(p1202 * 61, p1202 * 127.5, p1202 * 61, p1202 * 127.5, p1202 * 54, p1202 * 134);
    v1597.bezierCurveTo(p1202 * 46.5, p1202 * 127.5, p1202 * 46.5, p1202 * 127.5, p1202 * 39, p1202 * 121);
    v1597.closePath();
    f90(v1597, p1204[0]);
    v1597.translate(p1202 * -20, p1202 * -20);
    v1597.globalAlpha = 1;
    v1597.save();
    v1597.translate(p1202 * 52.5, p1202 * 395);
    v1597.rotate(0);
    f87(v1597, p1202 * -11.5, p1202 * -226, p1202 * 23, p1202 * 452, p1202 * 10);
    v1597.restore();
    f90(v1597, p1204[1], p1204[2], p1202 * 8);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 35, p1202 * 588);
    v1597.bezierCurveTo(p1202 * 47, p1202 * 596, p1202 * 61, p1202 * 594, p1202 * 69, p1202 * 588);
    v1597.bezierCurveTo(p1202 * 79, p1202 * 615, p1202 * 78, p1202 * 632, p1202 * 59, p1202 * 643);
    v1597.bezierCurveTo(p1202 * 41, p1202 * 650, p1202 * 27, p1202 * 632, p1202 * 30, p1202 * 610);
    v1597.closePath();
    f90(v1597, p1204[3], p1204[4], p1202 * 8);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 135);
    v1597.bezierCurveTo(p1202 * 61.5, p1202 * 142, p1202 * 61.5, p1202 * 142, p1202 * 71, p1202 * 149);
    v1597.bezierCurveTo(p1202 * 69.5, p1202 * 166, p1202 * 69.5, p1202 * 166, p1202 * 68, p1202 * 183);
    v1597.bezierCurveTo(p1202 * 60.5, p1202 * 187.5, p1202 * 60.5, p1202 * 187.5, p1202 * 53, p1202 * 192);
    v1597.bezierCurveTo(p1202 * 45, p1202 * 187.5, p1202 * 45, p1202 * 187.5, p1202 * 37, p1202 * 183);
    v1597.bezierCurveTo(p1202 * 35.5, p1202 * 167, p1202 * 35.5, p1202 * 167, p1202 * 34, p1202 * 151);
    v1597.closePath();
    f90(v1597, p1204[3], p1204[4], p1202 * 8);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 64, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 63, p1202 * 164, p1202 * 63, p1202 * 164, p1202 * 62, p1202 * 178);
    v1597.bezierCurveTo(p1202 * 58, p1202 * 181, p1202 * 58, p1202 * 181, p1202 * 54, p1202 * 184);
    v1597.bezierCurveTo(p1202 * 48.5, p1202 * 181.5, p1202 * 48.5, p1202 * 181.5, p1202 * 43, p1202 * 179);
    v1597.bezierCurveTo(p1202 * 42, p1202 * 164.5, p1202 * 42, p1202 * 164.5, p1202 * 41, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 46, p1202 * 152.5, p1202 * 46, p1202 * 152.5, p1202 * 51, p1202 * 155);
    v1597.closePath();
    f90(v1597, p1204[5]);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 39);
    v1597.bezierCurveTo(p1202 * 65.5, p1202 * 82, p1202 * 65.5, p1202 * 82, p1202 * 79, p1202 * 125);
    v1597.bezierCurveTo(p1202 * 66, p1202 * 137.5, p1202 * 66, p1202 * 137.5, p1202 * 53, p1202 * 150);
    v1597.bezierCurveTo(p1202 * 39, p1202 * 138, p1202 * 39, p1202 * 138, p1202 * 25, p1202 * 126);
    v1597.closePath();
    f90(v1597, p1204[6], p1204[7], p1202 * 8);
    v1597.beginPath();
    v1597.lineCap = "round";
    v1597.lineJoin = "round";
    v1597.moveTo(p1202 * 52, p1202 * 64);
    v1597.bezierCurveTo(p1202 * 60, p1202 * 92.5, p1202 * 60, p1202 * 92.5, p1202 * 68, p1202 * 121);
    v1597.bezierCurveTo(p1202 * 61, p1202 * 127.5, p1202 * 61, p1202 * 127.5, p1202 * 54, p1202 * 134);
    v1597.bezierCurveTo(p1202 * 46.5, p1202 * 127.5, p1202 * 46.5, p1202 * 127.5, p1202 * 39, p1202 * 121);
    v1597.closePath();
    f90(v1597, p1204[8]);
    return v1596;
  }
  function f294() {
    if (!v2885.ᐃⵠᐃΔ.open && !v2885.ΔⲆⵠᐃᐃ.open) {
      v2885.ΔⵠⵠΔ.open = vVVV31;
      var v1598 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1599 = 100;
      if (v1598) {
        for (var v1600 = 0; v1600 < v2329.length; v1600++) {
          for (var v1601 = v2329[v1600][0], v1602 = v2329[v1600][1], v1603 = 0; v2884.ᐃᐃΔ[v1601].length > v1603; v1603++) {
            var v1604 = v2884.ᐃᐃΔ[v1601][v1603];
            var v1605 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1604, v1598);
            if (v1605 < v1599) {
              v1599 = v1605;
              v2885.ΔⵠⵠΔ.ⲆᐃᐃᐃΔⲆⵠ = v1602;
              v2885.ΔⵠⵠΔ.type = v1601;
              v2885.ΔⵠⵠΔ.open = vV306;
              v2885.ΔⵠⵠΔ.ⲆⵠⲆⲆⵠΔⵠ = v1604.info & 255;
              v2885.ΔⵠⵠΔ.ΔΔΔⵠΔⲆΔ = (v1604.info & 65280) >> 8;
              v2885.ΔⵠⵠΔ.ᐃΔⲆⵠ = v1604.ᐃΔⲆⵠ;
              v2885.ΔⵠⵠΔ.ᐃᐃᐃⵠⵠ = v1604.id;
            }
          }
        }
        if (v1599 < 100) {
          var v1606;
          var v1607 = ΔΔ[875];
          var v1608 = (v1609 = v3081.ⲆᐃⵠΔⵠⵠΔ).info.translate.x - 33;
          f304(v419, v1607, v1608, 0);
          if (v2885.ΔⵠⵠΔ.ⲆⵠⲆⲆⵠΔⵠ > 0) {
            v1609.ᐃᐃΔⵠ(v419);
            if ((v1606 = v2885.ΔⵠⵠΔ.ⲆⵠⲆⲆⵠΔⵠ) > 1) {
              f295(v1606, v1609);
            }
          }
          switch (v2885.ΔⵠⵠΔ.ⲆᐃᐃᐃΔⲆⵠ) {
            case 199:
              var v1609 = v3081.ⵠᐃᐃⵠΔᐃΔ;
              break;
            case 202:
              v1609 = v3081.ⲆᐃⲆⵠᐃⵠΔ;
              break;
            case 203:
              v1609 = v3081.ΔⲆᐃⲆᐃᐃⵠ;
              break;
            case 212:
              v1609 = v3081.ᐃᐃΔⲆⲆⲆⵠ;
              break;
            case 304:
              v1609 = v3081.ⲆⵠⲆⵠΔᐃⵠ;
              break;
            case 344:
              v1609 = v3081.ⵠⲆⵠΔΔⵠᐃ;
              break;
            case 306:
              v1609 = v3081.ΔⵠΔⲆⲆⲆΔ;
              break;
            case 307:
              v1609 = v3081.ⵠⵠᐃΔⵠⵠΔ;
              break;
            case 308:
              v1609 = v3081.ⲆⲆᐃⵠΔⵠⵠ;
              break;
            case 309:
              v1609 = v3081.ⵠᐃⵠᐃᐃⲆᐃ;
              break;
            case 310:
              v1609 = v3081.ΔⵠⵠΔⵠΔⲆ;
              break;
            case 311:
              v1609 = v3081.ⵠΔΔΔⲆΔΔ;
              break;
            case 312:
              v1609 = v3081.ΔⵠᐃⵠⵠᐃΔ;
              break;
            case 313:
              v1609 = v3081.ⵠΔⲆΔΔΔΔ;
          }
          if (v2885.ΔⵠⵠΔ.ΔΔΔⵠΔⲆΔ > 0) {
            v1609.ᐃᐃΔⵠ(v419);
            if ((v1606 = v2885.ΔⵠⵠΔ.ΔΔΔⵠΔⲆΔ) > 1) {
              f295(v1606, v1609);
            }
          }
        }
      }
    }
  }
  function f295(p1205, p1206) {
    if (!ΔΔ[393][p1205]) {
      ΔΔ[393][p1205] = f166(v427, "x" + p1205, 17, "#FFF");
    }
    var v1610 = ΔΔ[393][p1205];
    var v1611 = p1206.info.translate.x + p1206.info.Δᐃ[0].width - v1610.width - v427 * 14;
    var v1612 = p1206.info.translate.y + p1206.info.Δᐃ[0].height - v1610.height - v427 * 19;
    if (v2289 == p1206.info.state) {
      v1612 += v427 * 5;
    }
    f304(v419, v1610, v1611, v1612);
  }
  function f296() {
    var v1613 = v3081.ΔΔⵠΔΔ;
    var v1614 = v1613.id;
    if (v1613.ⲆᐃⲆⵠⵠ === 1 && v1613.display === 1) {
      if (ΔᐃᐃΔΔⵠⲆ[v1614] === vVUndefined8) {
        ΔᐃᐃΔΔⵠⲆ[v1614] = function (p1207) {
          var v1615 = document.createElement("canvas");
          var v1616 = v1615.getContext("2d");
          var v1617 = v809[p1207];
          v1616.font = "20px Baloo Paaji";
          var v1618 = 0;
          if (v1617.length >= 1) {
            v1618 = Math.max(0, v1616.measureText(v1617[0]).width);
          }
          v1616.font = "17px Baloo Paaji";
          if (v1617.length >= 2) {
            v1618 = Math.max(v1618, v1616.measureText(v1617[1]).width);
          }
          v1616.font = "14px Baloo Paaji";
          v817 = 2;
          for (; v817 < v1617.length; v817++) {
            v1618 = Math.max(v1618, v1616.measureText(v1617[v817]).width);
          }
          var v1619 = v1618 + 35;
          var v1620 = 0;
          v1620 = v1617.length === 1 ? 55 : v1617.length === 2 ? 85 : (v1617.length - 2) * 26 + 85;
          v1615.width = v1619;
          v1615.height = v1620;
          f87(v1616, 0, 0, v1619, v1620, 10);
          v1616.fillStyle = "#000000";
          v1616.globalAlpha = 0.5;
          v1616.fill();
          if (v1617.length >= 1) {
            v1616.textBaseline = "middle";
            v1616.font = "20px Baloo Paaji";
            v1616.globalAlpha = 1;
            v1616.fillStyle = "#e2c340";
            v1616.fillText(v1617[0], 15, 28);
          }
          if (v1617.length >= 2) {
            v1616.font = "17px Baloo Paaji";
            v1616.fillStyle = "#ffffff";
            v1616.fillText(v1617[1], 15, 55);
            v1620 = 55;
          }
          if (v1617.length >= 3) {
            v1616.font = "14px Baloo Paaji";
            v1616.globalAlpha = 0.7;
            v817 = 2;
            for (; v817 < v1617.length; v817++) {
              v1616.fillText(v1617[v817], 15, v1620 + 28);
              v1620 += 26;
            }
          }
          return v1615;
        }(v1614);
      }
      if (v1613.ⲆΔⲆΔ === 1) {
        f304(v419, ΔᐃᐃΔΔⵠⲆ[v1614], v1613.x, v1613.y);
      } else if (v420 < v1613.x - 80 + ΔᐃᐃΔΔⵠⲆ[v1614].width) {
        f304(v419, ΔᐃᐃΔΔⵠⲆ[v1614], v420 - ΔᐃᐃΔΔⵠⲆ[v1614].width - 10, v1613.y - ΔᐃᐃΔΔⵠⲆ[v1614].height - 10);
      } else {
        f304(v419, ΔᐃᐃΔΔⵠⲆ[v1614], v1613.x - 80, v1613.y - ΔᐃᐃΔΔⵠⲆ[v1614].height - 10);
      }
    }
  }
  function f297() {
    v2885.ⵠⵠⵠᐃᐃ.id = -1;
    v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ = -1;
    if (!v2885.ⲆⵠΔⵠᐃⲆΔ && !v2885.ⵠⵠⵠᐃᐃ.wait && !v2885.ᐃΔⵠᐃⵠ) {
      var v1621 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1622 = 100;
      if (v1621) {
        for (var v1623 = 0; v1623 < v2884.ᐃᐃΔ[38].length; v1623++) {
          var v1624 = v2884.ᐃᐃΔ[38][v1623];
          var v1625 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1624, v1621);
          if (v1622 > v1625) {
            v1622 = v1625;
            v2885.ⵠⵠⵠᐃᐃ.id = v1624.id;
            v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ = v1624.ᐃΔⲆⵠ;
            v2885.ⵠⵠⵠᐃᐃ.info = v1624.info;
            v2885.ⵠⵠⵠᐃᐃ.lock = (v1624.info & 16) >> 4;
          }
        }
      }
      var v1626 = v3081.ⲆᐃⵠΔΔ;
      v3081.ⲆᐃⵠΔΔ = -1;
      if (v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ == -1 || v2885.ΔⲆΔᐃᐃ.length != 0 && v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ != v2885.id) {
        if (v2885.ΔⲆΔᐃᐃ.length != 0 && v2885.ΔⲆΔᐃᐃ[0] != v2885.id) {
          v3081.ⲆᐃⵠΔΔ = 2;
        } else if (v2885.ΔⲆΔᐃᐃ.length != 0 && v2885.id == v2885.ΔⲆΔᐃᐃ[0]) {
          v3081.ⲆᐃⵠΔΔ = 1;
        } else if (v2885.ΔⲆΔᐃᐃ.length != 0) {
          v3081.ⲆᐃⵠΔΔ = 3;
        }
      } else if (v2885.ΔⲆΔᐃᐃ.length == 0 && v2885.ⵠⵠⵠᐃᐃ.info >= 8) {
        v3081.ⲆᐃⵠΔΔ = 4;
      } else if (v2885.ΔⲆΔᐃᐃ.length == 0) {
        v3081.ⲆᐃⵠΔΔ = 3;
      } else {
        v3081.ⲆᐃⵠΔΔ = 0;
      }
      if (v3081.ⲆᐃⵠΔΔ != -1) {
        v3081.ⵠⲆⲆᐃⲆ[v3081.ⲆᐃⵠΔΔ].button.ᐃᐃΔⵠ(v419);
      }
      var v1627 = document.getElementById("team_box").style;
      if (v3081.ⲆᐃⵠΔΔ != -1 && v3081.ⲆᐃⵠΔΔ != v1626 && v1627.display == "inline-block") {
        v3081.ⵠⲆⲆᐃⲆ[v3081.ⲆᐃⵠΔΔ].action();
      }
    }
  }
  function f298() {
    if (!v2885.ᐃⵠᐃΔ.open && !v2885.ΔⲆⵠᐃᐃ.open && !v2885.ΔⵠⲆⵠ.open && !v2885.ᐃᐃᐃⵠ.open && !v2885.ΔⵠⵠΔ.open) {
      v2885.sign.open = vVV316;
      var v1628 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1629 = 100;
      if (v1628) {
        for (var v1630 = 0; v2884.ᐃᐃΔ[45].length > v1630; v1630++) {
          var v1631 = v2884.ᐃᐃΔ[45][v1630];
          var v1632 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1631, v1628);
          if (v1632 < v1629 && v1631.info === 0 && v1631.ᐃΔⲆⵠ === v2885.id) {
            v2885.sign.open = vVVV3024;
            v1629 = v1632;
            v2885.sign.ᐃᐃᐃⵠⵠ = v1631.id;
          }
        }
        if (v1629 < 100) {
          v3081.sign.button.ᐃᐃΔⵠ(v419);
        }
      }
    }
  }
  function f299() {
    v2885.ᐃⵠⲆⲆΔ.open = vVV313;
    var v1633 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
    var v1634 = 100;
    if (v1633) {
      for (var v1635 = 0; v2884.ᐃᐃΔ[22].length > v1635; v1635++) {
        var v1636 = v2884.ᐃᐃΔ[22][v1635];
        var v1637 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1636, v1633);
        if (v1637 < v1634) {
          v1634 = v1637;
          v2885.ᐃⵠⲆⲆΔ.open = vVVV3024;
          v2885.ᐃⵠⲆⲆΔ.ᐃΔⲆⵠ = v1636.ᐃΔⲆⵠ;
          v2885.ᐃⵠⲆⲆΔ.ᐃᐃᐃⵠⵠ = v1636.id;
        }
      }
      if (v1634 < 100) {
        v3081.ᐃⵠⲆⲆΔ.ᐃᐃΔⵠ(v419);
      }
    }
  }
  function f300() {
    if (!v2885.ᐃⵠᐃΔ.open && !v2885.ΔⲆⵠᐃᐃ.open) {
      v2885.ΔⵠⲆⵠ.open = vVV312;
      var v1638 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1639 = 100;
      if (v1638) {
        for (var v1640 = 0; v2884.ᐃᐃΔ[41].length > v1640; v1640++) {
          var v1641 = v2884.ᐃᐃΔ[41][v1640];
          var v1642 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1641, v1638);
          if (v1639 > v1642) {
            v1639 = v1642;
            v2885.ΔⵠⲆⵠ.open = vVV3022;
            v2885.ΔⵠⲆⵠ.ΔᐃⵠⵠΔᐃⵠ = v1641.info & 255;
            v2885.ΔⵠⲆⵠ.ᐃᐃᐃΔΔΔΔ = (v1641.info & 65280) >> 8;
            v2885.ΔⵠⲆⵠ.ᐃΔⲆⵠ = v1641.ᐃΔⲆⵠ;
            v2885.ΔⵠⲆⵠ.ᐃᐃᐃⵠⵠ = v1641.id;
          }
        }
        if (v1639 < 100) {
          var v1643 = ΔΔ[874];
          var v1644 = (v1646 = v3081.ΔⲆΔⲆⵠⵠⲆ).info.translate.x - 33;
          f304(v419, v1643, v1644, 0);
          if (v2885.ΔⵠⲆⵠ.ΔᐃⵠⵠΔᐃⵠ > 0) {
            v1646.ᐃᐃΔⵠ(v419);
            if ((v1645 = v2885.ΔⵠⲆⵠ.ΔᐃⵠⵠΔᐃⵠ) > 1) {
              f295(v1645, v1646);
            }
          }
          var v1645;
          var v1646 = v3081.ⲆᐃⵠΔΔⵠⲆ;
          if (v2885.ΔⵠⲆⵠ.ᐃᐃᐃΔΔΔΔ > 0) {
            v1646.ᐃᐃΔⵠ(v419);
            if ((v1645 = v2885.ΔⵠⲆⵠ.ᐃᐃᐃΔΔΔΔ) > 1) {
              f295(v1645, v1646);
            }
          }
        }
      }
    }
  }
  function f301() {
    if (v2885.reconnect.enabled) {
      v419.globalAlpha = 0.9;
      v419.fillStyle = "#000";
      f87(v419, v424 - 150, v425 - 90, 300, 180, 15);
      v419.fill();
      v419.globalAlpha = 1;
      var v1647 = ΔΔ[412];
      v419.save();
      v2885.reconnect.rotate = (v2885.reconnect.rotate + v3116 * 2) % (Math.PI * 2);
      v419.translate(v420 / 2, v421 / 2 - 25);
      v419.rotate(v2885.reconnect.rotate);
      f304(v419, v1647, -v1647.width / 2, -v1647.height / 2);
      v419.restore();
      v1647 = ΔΔ[663];
      f304(v419, v1647, (v420 - v1647.width) / 2, (v421 - v1647.height) / 2 + 25);
    }
  }
  function f302() {
    if (v2885.ⵠⲆⵠᐃΔᐃᐃ) {
      v419.globalAlpha = 0.5;
      v419.fillStyle = "#000";
      v419.fillRect(0, 0, v420, v421);
      v419.globalAlpha = 0.8;
      var v1648 = ΔΔ[654][v2884.time];
      var v1649 = v424 - v1648.width / 2;
      var v1650 = v425 - v1648.height / 2;
      f304(v419, v1648, v1649, v1650);
      v419.globalAlpha = 1;
      if (v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.x > -1) {
        v419.fillStyle = "#660000";
        f93(v419, v1649 + v427 * (v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.x * 3), v1650 + v427 * (v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.y * 3), v427 * 14);
        v419.fill();
      }
      for (var v1651 = v3081.ⲆⵠΔΔΔ.ⵠⵠΔⵠ, v1652 = 0; v1652 < v1651.length; v1652++) {
        var v1653 = v1651[v1652];
        v2884.time;
        v419.fillStyle = "#ff0000";
        f93(v419, v1649 + v427 * (v1653.x / (v2884.ⵠⲆⵠΔᐃ * 100) * 600), v1650 + v427 * (v1653.y / (v2884.ⲆⲆΔⵠⲆ * 100) * 600), v427 * 6);
        v419.fill();
      }
      var v1654 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      if (v1654) {
        v419.fillStyle = v2884.time ? "#fff" : "#e39716";
        f93(v419, v1649 + v427 * (v1654.x / (v2884.ⵠⲆⵠΔᐃ * 100) * 600), v1650 + v427 * (v1654.y / (v2884.ⲆⲆΔⵠⲆ * 100) * 600), v427 * 12);
        v419.fill();
      }
    }
  }
  function f303() {
    if (v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length > 0) {
      var v1655 = {
        x: v3081.ⲆⵠΔΔΔ.translate.x,
        y: v3081.ⲆⵠΔΔΔ.translate.y - v427 * 120
      };
    } else {
      v1655 = {
        x: v3081.ⲆⵠΔΔΔ.translate.x,
        y: v3081.ⲆⵠΔΔΔ.translate.y - v427 * 50
      };
    }
    v419.globalAlpha = 0.8;
    var v1656 = ΔΔ[369][v2884.time];
    f304(v419, v1656, v1655.x, v1655.y);
    v419.globalAlpha = 1;
    if (v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.x > -1) {
      v419.fillStyle = "#660000";
      f93(v419, v1655.x + v427 * v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.x, v1655.y + v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.y * v427, v427 * 5);
      v419.fill();
    }
    var vV427 = v427;
    for (var v1657 = v3081.ⲆⵠΔΔΔ.ⵠⵠΔⵠ, v1658 = 0; v1657.length > v1658; v1658++) {
      var v1659 = v1657[v1658];
      v2884.time;
      v419.fillStyle = "#ff0000";
      f93(v419, v1655.x + v1659.x / (v2884.ⵠⲆⵠΔᐃ * 100) * 193 * v427, v1655.y + v1659.y / (v2884.ⲆⲆΔⵠⲆ * 100) * 193 * v427, v427 * 2);
      v419.fill();
    }
    var v1660 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
    if (v1660) {
      v419.fillStyle = v2884.time ? "#fff" : "#e39716";
      f93(v419, v1655.x + v1660.x / (v2884.ⵠⲆⵠΔᐃ * 100) * 193 * v427, v1655.y + v427 * (v1660.y / (v2884.ⲆⲆΔⵠⲆ * 100) * 193), v427 * 4);
      v419.fill();
    }
    v427 = vV427;
  }
  function f304(p1208, p1209, p1210, p1211, p1212, p1213, p1214, p1215, p1216, p1217) {
    if (p1209.ᐃⲆᐃⵠⲆⲆⲆ === undefined || p1209.ᐃⲆᐃⵠⲆⲆⲆ() === 1) {
      if (p1217 !== undefined) {
        p1208.drawImage(p1209, p1210, p1211, Math.max(1, p1212), Math.max(1, p1213), p1214, p1215, p1216, p1217);
      } else if (p1213 !== undefined) {
        p1208.drawImage(p1209, p1210, p1211, p1212, p1213);
      } else {
        p1208.drawImage(p1209, p1210, p1211);
      }
    }
  }
  function f305() {
    if (!v2885.ᐃⵠᐃΔ.open && !v2885.ΔⲆⵠᐃᐃ.open && !v2885.ΔⵠⲆⵠ.open && !v2885.ΔⵠⵠΔ.open) {
      v2885.ᐃᐃᐃⵠ.open = false;
      var v1661 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1662 = 100;
      if (v1661) {
        for (var v1663 = 0; v2884.ᐃᐃΔ[43].length > v1663; v1663++) {
          var v1664 = v2884.ᐃᐃΔ[43][v1663];
          var v1665 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1664, v1661);
          if (v1665 < v1662) {
            v1662 = v1665;
            v2885.ᐃᐃᐃⵠ.open = vV306;
            v2885.ᐃᐃᐃⵠ.ⲆⵠⲆⲆⵠΔⵠ = v1664.info & 31;
            v2885.ᐃᐃᐃⵠ.ᐃᐃᐃΔΔΔΔ = (v1664.info & 992) >> 5;
            v2885.ᐃᐃᐃⵠ.ⲆΔⲆⲆⵠΔⲆ = (v1664.info & 31744) >> 10;
            v2885.ᐃᐃᐃⵠ.ᐃΔⲆⵠ = v1664.ᐃΔⲆⵠ;
            v2885.ᐃᐃᐃⵠ.ᐃᐃᐃⵠⵠ = v1664.id;
          }
        }
        if (v1662 < 100) {
          var v1666 = ΔΔ[971];
          var v1667 = (v1668 = v3081.ᐃΔᐃΔΔⵠΔ).info.translate.x - 32;
          f304(v419, v1666, v1667, 0);
          if (v2885.ᐃᐃᐃⵠ.ⲆⵠⲆⲆⵠΔⵠ > 0) {
            v1668.ᐃᐃΔⵠ(v419);
            if ((v1669 = v2885.ᐃᐃᐃⵠ.ⲆⵠⲆⲆⵠΔⵠ) > 1) {
              f295(v1669, v1668);
            }
          }
          var v1668 = v3081.ᐃΔⲆⵠᐃΔⵠ;
          if (v2885.ᐃᐃᐃⵠ.ⲆΔⲆⲆⵠΔⲆ > 0) {
            v1668.ᐃᐃΔⵠ(v419);
            if ((v1669 = v2885.ᐃᐃᐃⵠ.ⲆΔⲆⲆⵠΔⲆ) > 1) {
              f295(v1669, v1668);
            }
          }
          var v1669;
          v1668 = v3081.ⵠᐃΔΔᐃΔΔ;
          if (v2885.ᐃᐃᐃⵠ.ᐃᐃᐃΔΔΔΔ > 0) {
            v1668.ᐃᐃΔⵠ(v419);
            if ((v1669 = v2885.ᐃᐃᐃⵠ.ᐃᐃᐃΔΔΔΔ) > 1) {
              f295(v1669, v1668);
            }
          }
        }
      }
    }
  }
  function f306() {
    if (!v2885.ᐃⵠᐃΔ.open) {
      v2885.ΔⲆⵠᐃᐃ.ⵠⵠΔΔ = 0;
      v2885.ΔⲆⵠᐃᐃ.open = vVV314;
      var v1670 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v1671 = 100;
      if (v1670) {
        for (var v1672 = 0; v2884.ᐃᐃΔ[18].length > v1672; v1672++) {
          var v1673 = v2884.ᐃᐃΔ[18][v1672];
          var v1674 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1673, v1670);
          if (v1671 > v1674) {
            v1671 = v1674;
            v2885.ΔⲆⵠᐃᐃ.open = true;
            v2885.ΔⲆⵠᐃᐃ.ⵠⵠΔΔ = v1673.info;
            v2885.ΔⲆⵠᐃᐃ.ᐃΔⲆⵠ = v1673.ᐃΔⲆⵠ;
            v2885.ΔⲆⵠᐃᐃ.ᐃᐃᐃⵠⵠ = v1673.id;
          }
        }
        if (v1671 < 100) {
          var v1675 = ΔΔ[522];
          var v1676 = v3081.ⲆᐃⵠᐃⵠⲆⵠ;
          var v1677 = Math.floor(v1676.info.translate.x + (v1676.info.Δᐃ[0].width - v1675.width) / 2);
          var v1678 = Math.floor(v1676.info.translate.y + (v1676.info.Δᐃ[0].height - v1675.height) / 2) + 3;
          f304(v419, v1675, v1677, v1678);
          if (v2885.ΔⲆⵠᐃᐃ.ⵠⵠΔΔ > 0) {
            v1676.ᐃᐃΔⵠ(v419);
            var v1679 = v2885.ΔⲆⵠᐃᐃ.ⵠⵠΔΔ;
            if (v1679 > 1) {
              f295(v1679, v1676);
            }
          }
        }
      }
    }
  }
  function f307() {
    v2885.ᐃⵠᐃΔ.id = -1;
    v2885.ᐃⵠᐃΔ.lock = false;
    v2885.ᐃⵠᐃΔ.locked = false;
    v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ = vVV315;
    v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ = false;
    v2885.ᐃⵠᐃΔ.open = false;
    var v1680 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
    var v1681 = 100;
    if (v1680) {
      for (var v1682 = 0; v1682 < v2884.ᐃᐃΔ[11].length; v1682++) {
        var v1683 = v2884.ᐃᐃΔ[11][v1682];
        var v1684 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1683, v1680);
        if (v1684 < v1681) {
          v1681 = v1684;
          v2885.ᐃⵠᐃΔ.open = true;
          v2885.ᐃⵠᐃΔ.id = v1683.action < 2 ? -1 : Math.floor((v1683.action - 1) / 2);
          v2885.ᐃⵠᐃΔ.ⵠⵠΔΔ = v1683.info;
          v2885.ᐃⵠᐃΔ.ᐃΔⲆⵠ = v1683.ᐃΔⲆⵠ;
          v2885.ᐃⵠᐃΔ.ᐃᐃᐃⵠⵠ = v1683.id;
          v2885.ᐃⵠᐃΔ.locked = v1683.lock;
          v2885.ᐃⵠᐃΔ.lock = !!v1683.lock && v2885.id != v1683.ᐃΔⲆⵠ && !v2885.ᐃⵠᐃⵠΔⲆⲆ(v1683.ᐃΔⲆⵠ) || vV312;
          v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ = v2885.id !== v1683.ᐃΔⲆⵠ || v2885.ᐃⵠᐃΔ.locked || v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(241) == -1 ? vVV314 : v30;
          if (v2885.ᐃⵠᐃΔ.locked && v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(260) != -1) {
            v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ = vV304;
          }
        }
      }
      if (v1681 < 100) {
        var v1685 = ΔΔ[450];
        var v1686 = v3081.ΔΔᐃ[0];
        var v1687 = Math.floor(v1686.info.translate.x + (v1686.info.Δᐃ[0].width - v1685.width) / 2);
        var v1688 = Math.floor(v1686.info.translate.y + (v1686.info.Δᐃ[0].height - v1685.height) / 2) + 3;
        f304(v419, v1685, v1687, v1688);
        if ((!v2885.ᐃⵠᐃΔ.lock || v2885.ᐃⵠᐃΔ.ᐃΔⲆⵠ === v2885.id) && v2885.ᐃⵠᐃΔ.id >= 0) {
          (v1686 = v3081.ΔΔᐃ[v2885.ᐃⵠᐃΔ.id]).ᐃᐃΔⵠ(v419);
          var v1689 = v2885.ᐃⵠᐃΔ.ⵠⵠΔΔ;
          if (v1689 > 1) {
            f295(v1689, v1686);
          }
        }
        if (v2885.ᐃⵠᐃΔ.lock) {
          v3081.ᐃΔᐃᐃᐃⵠⲆ.ᐃᐃΔⵠ(v419);
        } else if (v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ) {
          v3081.Ⲇⵠⵠᐃᐃᐃⵠ.ᐃᐃΔⵠ(v419);
        }
        if (v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ) {
          v3081.ⲆΔⵠⵠΔⲆⵠ.ᐃᐃΔⵠ(v419);
        }
      }
    }
  }
  function f308(p1218, p1219, p1220) {
    var v1690 = ΔΔ[603][p1218];
    var v1691 = p1219.info.translate.x + v427 * 5;
    var v1692 = p1219.info.translate.y + v427 * 5;
    if (p1219.info.state == v2289 || p1220) {
      v1692 += v427 * 5;
    }
    f304(v419, v1690, v1691, v1692);
  }
  ΔᐃᐃΔΔⵠⲆ = [];
  ᐃⲆᐃᐃⵠᐃᐃ = [];
  var v1693 = [];
  function f309() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vV315) {
        this.ΔΔΔ.ᐃⲆⲆ = v31;
      }
      var v1694 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
      var v1695 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1694;
      var v1696 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1694;
    } else {
      v1695 = 0;
      v1696 = 0;
    }
    Δᐃ = ΔΔ[269][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1695, -ΔᐃⲆ / 2 + v1696, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.lock) {
      Δᐃ = ΔΔ[241][v2884.time];
      ⵠⲆⵠ = -Δᐃ.width;
      ΔᐃⲆ = -Δᐃ.height;
      f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1695 - v427 * 1, -ΔᐃⲆ / 2 + v1696, ⵠⲆⵠ, ΔᐃⲆ);
    }
    v419.restore();
  }
  function f310(p1221) {
    if (!((p1221 = p1221 / 100) > 0.8)) {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vV313) {
          this.ΔΔΔ.ᐃⲆⲆ = vVVVV316;
        }
        var v1697 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
        var v1698 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1697;
        var v1699 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1697;
      } else {
        v1698 = 0;
        v1699 = 0;
      }
      v419.globalAlpha = 0.5;
      f89(v419, v1698, v1699, v427 * 18, p1221);
      f90(v419, null, "#000000", v427 * 18);
      v419.globalAlpha = 1;
      f89(v419, v1698, v1699, v427 * 18, p1221);
      f90(v419, null, v624.ᐃⵠΔᐃⵠΔⵠ[v2884.time], v427 * 6);
      v419.restore();
    }
  }
  function f311(p1222) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vVVVV316 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV313;
      }
      var v1700 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1701 = v1700 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1702 = v1700 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1701 = 0;
      v1702 = 0;
    }
    var v1703 = ΔΔ[p1222][v2884.time];
    ⵠⲆⵠ = -v1703.width;
    ΔᐃⲆ = -v1703.height;
    f304(v419, v1703, -ⵠⲆⵠ / 2 + v1701, -ΔᐃⲆ / 2 + v1702, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f312() {
    var v1704 = v2885.ⵠⵠⵠᐃᐃ;
    if (v1704.wait) {
      var v1705 = v1704.timeout.ᐃⲆⲆ();
      v419.save();
      var v1706 = ΔΔ[727];
      var v1707 = ΔΔ[675].height + v427 * 25;
      v419.translate(v1706.width, v3081.ᐃⲆⵠΔ.translate.y - v427 * 188 - v1707);
      var v1708 = -v1706.width / 2 - 2;
      var v1709 = -v1706.height / 2 - 4;
      f304(v419, v1706, v1708 + 2, v1709);
      v419.beginPath();
      v419.lineWidth = v427 * 5;
      v419.strokeStyle = v624.ⲆΔⵠΔⵠⲆⵠ[v2884.time];
      v419.lineCap = "round";
      v419.arc(0, v1709 + v1706.height / 2, v427 * 25, 0, Math.PI * 2 * v1704.timeout.ⵠᐃᐃ);
      v419.stroke();
      v419.restore();
      if (v1705) {
        v1704.wait = vVV3152;
        v1704.timeout.ⵠᐃᐃ = 0;
        v1704.timeout.ⲆⲆΔ = vVVV31;
      }
    }
  }
  function f313() {
    var v1710 = v2885.ᐃⲆᐃᐃⵠ;
    if (v1710.wait) {
      var v1711 = v1710.timeout.ᐃⲆⲆ();
      v419.save();
      var v1712 = ΔΔ[1041];
      v419.translate(v1712.width - v427 * 2, v3081.ᐃⲆⵠΔ.translate.y - v427 * 125);
      var v1713 = -v1712.width / 2 + 10;
      var v1714 = -v1712.height / 2 - 4;
      f304(v419, v1712, v1713, v1714);
      v419.beginPath();
      v419.lineWidth = v427 * 5;
      v419.strokeStyle = v624.ᐃⵠⲆⲆⲆⲆΔ[v2884.time];
      v419.lineCap = "round";
      v419.arc(9, v1714 + v1712.height / 2, v427 * 25, 0, Math.PI * 2 * v1710.timeout.ⵠᐃᐃ);
      v419.stroke();
      v419.restore();
      if (v1711) {
        v1710.wait = vVV312;
        v1710.timeout.ⵠᐃᐃ = 0;
        v1710.timeout.ⲆⲆΔ = false;
      }
    }
  }
  function f314() {
    var v1715 = v2885.ⵠⵠⵠᐃⲆ;
    if (v1715.wait) {
      var v1716 = v1715.timeout.ᐃⲆⲆ();
      v419.save();
      var v1717 = ΔΔ[675];
      v419.translate(v1717.width - v427 * 2, v3081.ᐃⲆⵠΔ.translate.y - v427 * 60);
      var v1718 = -v1717.width / 2 - 2;
      var v1719 = -v1717.height / 2 - 4;
      f304(v419, v1717, v1718, v1719);
      v419.beginPath();
      v419.lineWidth = v427 * 5;
      v419.strokeStyle = v624.ⲆΔⵠΔⵠⲆⵠ[v2884.time];
      v419.lineCap = "round";
      v419.arc(0, v1719 + v1717.height / 2, v427 * 25, 0, v1715.timeout.ⵠᐃᐃ * (Math.PI * 2));
      v419.stroke();
      v419.restore();
      if (v1716) {
        v1715.wait = vV315;
        v1715.timeout.ⵠᐃᐃ = 0;
        v1715.timeout.ⲆⲆΔ = vV315;
      }
    }
  }
  function f315(p1223) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1720 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1721 = v1720 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1722 = v1720 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1721 = 0;
      v1722 = 0;
    }
    if (p1223 === 1189 && !v2884.transition) {
      var v1723 = 0;
      for (var v1724 = v2884.ᐃᐃΔ[0], v1725 = 0; v1724.length > v1725; v1725++) {
        var v1726 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v1724[v1725], this);
        if (v1726 < 140 && v1726 > 35) {
          v1723 = 0;
          break;
        }
        if (v1726 <= 35) {
          v1723 = 1;
        }
      }
      this.opacity = v1723 === 0 ? Math.max(0.5, this.opacity - v3116 / 1.5) : Math.min(1, this.opacity + v3116 / 1.5);
      v419.globalAlpha = this.opacity;
    }
    Δᐃ = ΔΔ[p1223][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1721, -ΔᐃⲆ / 2 + v1722, ⵠⲆⵠ, ΔᐃⲆ);
    v419.globalAlpha = 1;
    v419.restore();
  }
  function f316() {
    var v1727 = v2885.ⲆΔⲆΔ;
    if (v1727.ⲆΔⲆΔᐃ) {
      var v1728 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + v1728.x, v2885.ⲆΔⵠ.y + v1728.y);
      var v1729 = ΔΔ[435];
      var v1730 = -v1729.width / 2;
      var v1731 = -v1729.height / 2 - v427 * 125;
      f304(v419, v1729, v1730, v1731);
      v419.beginPath();
      v419.lineWidth = v427 * 5;
      v419.strokeStyle = v624.ΔⲆⲆΔᐃⲆᐃ[v2884.time];
      v419.lineCap = "round";
      v419.arc(0, v1731 + v1729.height / 2, v427 * 25, 0, Math.PI * 2 * v1727.timeout.ⵠᐃᐃ);
      v419.stroke();
      v419.restore();
    }
  }
  function f317(p1224) {
    if (!((p1224 = p1224 / 100) > 0.95)) {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVV3152) {
          this.ΔΔΔ.ᐃⲆⲆ = vVVV313;
        }
        var v1732 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
        var v1733 = v1732 * Math.sin(this.ΔΔΔ.angle - this.angle);
        var v1734 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1732;
      } else {
        v1733 = 0;
        v1734 = 0;
      }
      v419.globalAlpha = 0.5;
      f89(v419, v1733, v1734, v427 * 28, p1224);
      f90(v419, null, "#000000", v427 * 18);
      v419.globalAlpha = 1;
      f89(v419, v1733, v1734, v427 * 28, p1224);
      f90(v419, null, v624.ΔⲆⲆΔᐃⲆᐃ[v2884.time], v427 * 6);
      v419.restore();
    }
  }
  function f318(p1225) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vV314 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1735 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1736 = v1735 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1737 = v1735 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1736 = 0;
      v1737 = 0;
    }
    Δᐃ = ΔΔ[p1225][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1736, -ΔᐃⲆ / 2 + v1737, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f319(p1226) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vVV312 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV313;
      }
      var v1738 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
      var v1739 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1738;
      var v1740 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1738;
    } else {
      v1739 = 0;
      v1740 = 0;
    }
    var v1741 = ΔΔ[1102].length;
    Δᐃ = ΔΔ[1102][(this.ⵠᐃⲆᐃ + this.Ⲇⵠ % 2) % v1741][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    var v1742 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
    if (v1742 && (this.ᐃΔⲆⵠ === v2885.id || v2885.ᐃⵠᐃⵠΔⲆⲆ(this.ᐃΔⲆⵠ))) {
      if (ⵠⲆⲆ.ᐃⵠᐃⲆ(this, v1742) < 550) {
        this.opacity = Math.max(this.opacity - v3116, 0.3);
      } else {
        this.opacity = Math.min(this.opacity + v3116, 1);
      }
    } else if (v1742 && ⵠⲆⲆ.ᐃⵠᐃⲆ(this, v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ]) < 150) {
      this.opacity = Math.max(this.opacity - v3116, 0.3);
    } else {
      this.opacity = Math.min(this.opacity + v3116, 1);
    }
    var v1743 = v419.globalAlpha;
    v419.globalAlpha *= this.opacity;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1739, -ΔᐃⲆ / 2 + v1740, ⵠⲆⵠ, ΔᐃⲆ);
    v419.globalAlpha = v1743;
    v419.restore();
  }
  function f320() {
    var v1744 = -8;
    if (v2885.ᐃᐃⲆᐃⲆ.enabled) {
      var v1745 = ΔΔ[684];
      f304(v419, v1745, v2885.ᐃᐃⲆᐃⲆ.translate.x, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744);
      v1744 += 70;
    }
    if (v2885.ⲆⵠΔⵠΔⲆⵠ === 1) {
      v1745 = ΔΔ[687];
      f304(v419, v1745, v2885.ᐃᐃⲆᐃⲆ.translate.x, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744);
      v1744 += 70;
    } else if (v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.x < 0.25 || v2885.ᐃⲆⵠΔ.ΔⲆⲆΔⲆΔⵠ.x < 0.25 || v2885.ᐃⲆⵠΔ.ΔᐃΔΔᐃΔᐃ.x < 0.25 || v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.x < 0.25 || v2885.ᐃⲆⵠΔ.ᐃⲆᐃᐃΔᐃᐃ.x < 0.25) {
      v1745 = ΔΔ[686];
      f304(v419, v1745, v2885.ᐃᐃⲆᐃⲆ.translate.x, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744);
      v1744 += 70;
    }
    if (v2885.ΔⵠΔⲆⲆ > 0) {
      v1745 = ΔΔ[685];
      f304(v419, v1745, v2885.ᐃᐃⲆᐃⲆ.translate.x, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744);
      var v1746 = v1693[v2885.ΔⵠΔⲆⲆ];
      if (v1746 === undefined) {
        v1746 = f166(v427, v2885.ΔⵠΔⲆⲆ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
        v1693[v2885.ΔⵠΔⲆⲆ] = v1746;
      }
      if (v2885.ΔⵠΔⲆⲆ < 9) {
        f304(v419, v1746, v2885.ᐃᐃⲆᐃⲆ.translate.x - 39, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744 + 20);
      } else {
        f304(v419, v1746, v2885.ᐃᐃⲆᐃⲆ.translate.x - 46, v2885.ᐃᐃⲆᐃⲆ.translate.y + v1744 + 20);
      }
    }
  }
  function f321() {
    for (var v1747 = v2885.ΔⵠⵠⲆ, v1748 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ], v1749 = 0; v1747.ΔᐃΔΔⲆ.length > v1749; v1749++) {
      var v1750 = v1747.ΔᐃΔΔⲆ[v1749];
      var v1751 = false;
      if ((v1748 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ]) && (v1750.id == v1748.right || v1748.ⵠⵠⲆᐃᐃ == v1750.id && v1748.ⵠⵠⲆᐃᐃ > 0)) {
        v1751 = vV303;
        f304(v419, v1750.info.Δᐃ[2], v1750.info.translate.x, v1750.info.translate.y, v1750.info.width, v1750.info.height);
      } else {
        v1750.ᐃᐃΔⵠ(v419);
      }
      var v1752 = v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[v1750.id];
      if (v1752 > 1) {
        f295(v1752, v1750);
      }
      if (v1752 > 0) {
        f308(v1749, v1750, v1751);
      }
      var v1753 = v2885.ᐃⵠᐃΔ;
      if (v1753.open && (v1753.id < 0 || v1750.id == v1753.id) && (!v1753.lock || v1753.ᐃΔⲆⵠ == v2885.id)) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
      if (v2885.ΔⲆⵠᐃᐃ.open && v1750.id == 200) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
      if (v2885.ΔⲆᐃⵠᐃ.open && v1750.id == 282) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
      if (v2885.ΔⵠⲆⵠ.open && v1750.id == 227) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
      if (v2885.ΔⵠⵠΔ.open && v1750.id == 200) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
      if (!!v2885.ᐃᐃᐃⵠ.open && (v1750.id == 200 || v1750.id == 224)) {
        v3081.ΔⵠᐃΔⵠ[v1750.id].ᐃᐃΔⵠ(v419);
      }
    }
    if (v1750 && v1749 < v1747.max) {
      var v1754 = ΔΔ[445][2];
      Δⵠ = v1750.info.translate.x;
      ᐃⲆⵠ = v1750.info.translate.y;
      ⵠᐃⲆᐃ = 1;
      for (; v1749 < v1747.max; v1749++, ⵠᐃⲆᐃ++) {
        f304(v419, v1754, Δⵠ + ⵠᐃⲆᐃ * (v1754.width + 5), ᐃⲆⵠ);
      }
    }
  }
  function f322() {
    var v1755 = v2884.ᐃᐃᐃᐃΔ;
    var v1756 = ΔΔ[974][v2884.time];
    f304(v419, v1756, v1755.translate.x, v1755.translate.y);
    v419.save();
    v419.translate(v1755.translate.x + v1756.width / 2, v1755.translate.y + v1756.height / 2);
    v2884.ᐃᐃᐃᐃΔ.now = (new Date().getTime() - v1755.ⵠⵠᐃΔⵠ + v1755.ᐃⲆΔⵠΔ) % 480000;
    var v1757 = v2884.ᐃᐃᐃᐃΔ.now * (Math.PI * 2) / 480000 - Math.PI / 2;
    v419.rotate(v1757);
    f304(v419, ΔΔ[975], -v1756.width / 2, -v1756.height / 2);
    v419.restore();
  }
  function f323() {
    var v1758 = v2885.ᐃᐃᐃᐃⲆ;
    if (v1758.wait) {
      var v1759 = v1758.timeout.ᐃⲆⲆ();
      v419.save();
      var v1760 = ΔΔ[1043];
      v419.translate(v1760.width - v427 * 12, v3081.ᐃⲆⵠΔ.translate.y - v427 * 190);
      var v1761 = -v1760.width / 2 + 9;
      var v1762 = -v1760.height / 2 - 4;
      f304(v419, v1760, v1761, v1762);
      v419.beginPath();
      v419.lineWidth = v427 * 5;
      v419.strokeStyle = v624.ᐃⵠⲆⲆⲆⲆΔ[v2884.time];
      v419.lineCap = "round";
      v419.arc(9, v1762 + v1760.height / 2, v427 * 25, 0, Math.PI * 2 * v1758.timeout.ⵠᐃᐃ);
      v419.stroke();
      v419.restore();
      if (v1759) {
        v1758.wait = false;
        v1758.timeout.ⵠᐃᐃ = 0;
        v1758.timeout.ⲆⲆΔ = vVV315;
      }
    }
  }
  function f324() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[1086][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f325() {
    v419.save();
    var vV4272 = v427;
    if (v2885.ᐃⲆⵠΔ.ᐃΔΔΔᐃ.x < 0.25) {
      v419.globalAlpha = v2885.ᐃⲆⵠΔ.ᐃᐃΔΔⲆΔⵠ.ⵠᐃᐃ;
    }
    var v1763 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length > 0 ? -70 : 0;
    if (v2885.ᐃⵠᐃΔ.open || v2885.ΔⲆⵠᐃᐃ.open && v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(200) != -1 || v2885.ΔⵠⲆⵠ.open && v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(227) != -1 || v2885.ΔⵠⵠΔ.open && v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(200) != -1 || v2885.ΔⲆᐃⵠᐃ.open && v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(282) != -1 || v2885.ᐃᐃᐃⵠ.open && (v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(200) != -1 || v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(224) != -1)) {
      v1763 -= v427 * 50;
    }
    v419.translate((v420 - v427 * 950) / 2, v1763);
    v419.fillStyle = "#69A148";
    v419.fillRect(this.translate.x + v427 * 37, this.translate.y + v427 * 17, v427 * (v2885.ᐃⲆⵠΔ.ᐃΔΔΔᐃ.x * 178), v427 * 18);
    v419.globalAlpha = 1;
    if (v2885.ᐃⲆⵠΔ.ΔⲆⲆΔⲆΔⵠ.x < 0.35) {
      v419.fillStyle = "#8F050A";
      v419.globalAlpha = v2885.ᐃⲆⵠΔ.ΔᐃⵠⵠⲆⵠⵠ.ⵠᐃᐃ;
      v419.fillRect(this.translate.x + v427 * 277, this.translate.y + v427 * 17, v427 * 178, v427 * 18);
      v419.globalAlpha = 1;
    }
    v419.fillStyle = "#AF352A";
    v419.fillRect(this.translate.x + v427 * 277, this.translate.y + v427 * 17, v2885.ᐃⲆⵠΔ.ΔⲆⲆΔⲆΔⵠ.x * 178 * v427, v427 * 18);
    if (v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.x < 0.35) {
      v419.fillStyle = "#366B91";
      v419.globalAlpha = v2885.ᐃⲆⵠΔ.ⵠⵠⵠⲆᐃⵠⵠ.ⵠᐃᐃ;
      v419.fillRect(this.translate.x + v427 * 517, this.translate.y + v427 * 17, v427 * 178, v427 * 18);
      v419.globalAlpha = 1;
    }
    v419.fillStyle = "#669BB1";
    v419.fillRect(this.translate.x + v427 * 517, this.translate.y + v427 * 17, v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.x * 178 * v427, v427 * 18);
    if (v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.x > 0.99) {
      if (v2885.ᐃⲆⵠΔ.ᐃⲆᐃᐃΔᐃᐃ.x < 0.35) {
        v419.fillStyle = "#6C4036";
        v419.globalAlpha = v2885.ᐃⲆⵠΔ.ΔⲆⲆⵠⵠΔᐃ.ⵠᐃᐃ;
        v419.fillRect(this.translate.x + v427 * 517, this.translate.y + v427 * 17, v427 * 178, v427 * 18);
        v419.globalAlpha = 1;
      }
      v419.fillStyle = "#9C4036";
      v419.fillRect(this.translate.x + v427 * 517, this.translate.y + v427 * 17, (1 - v2885.ᐃⲆⵠΔ.ᐃⲆᐃᐃΔᐃᐃ.x) * 178 * v427, v427 * 18);
    }
    if (v2885.ᐃⲆⵠΔ.ΔᐃΔΔᐃΔᐃ.x < 0.35) {
      v419.fillStyle = "#001A57";
      v419.globalAlpha = v2885.ᐃⲆⵠΔ.ᐃᐃⲆⵠΔⲆΔ.ⵠᐃᐃ;
      v419.fillRect(this.translate.x + v427 * 757, this.translate.y + v427 * 17, v427 * 178, v427 * 18);
      v419.globalAlpha = 1;
    }
    v419.fillStyle = "#074A87";
    v419.fillRect(this.translate.x + v427 * 757, this.translate.y + v427 * 17, v2885.ᐃⲆⵠΔ.ΔᐃΔΔᐃΔᐃ.x * 178 * v427, v427 * 18);
    v427 = vV4272;
    f304(v419, this.Δᐃ, this.translate.x, this.translate.y);
    this.y = this.translate.y + v1763;
    v419.restore();
    if (v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.x < 0.99) {
      var v1764 = Math.floor(v424 - ΔΔ[827].width / 2);
      v1763 += this.translate.y - ΔΔ[827].height - v427 * 5;
      v419.fillStyle = "#BBE8EF";
      v419.fillRect(v1764 + 5, v1763 + v427 * 5, v427 * 588 * v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.x, v427 * 10);
      if (v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.x < 0.35) {
        v419.fillStyle = "#9BA8AF";
        v419.globalAlpha = v2885.ᐃⲆⵠΔ.ⲆⵠΔⵠⵠᐃⲆ.ⵠᐃᐃ;
        v419.fillRect(v1764 + 5, v1763 + 5, v427 * 588, v427 * 10);
        v419.globalAlpha = 1;
      }
      f304(v419, ΔΔ[827], v1764, v1763);
      this.y = v1763;
    }
  }
  function f326() {
    var v1765 = v2885.ⵠΔⵠΔⵠ;
    var v1766 = v3081.ⲆⲆⲆⲆⲆ;
    if (v1765.ᐃⲆⲆ) {
      v1765.ᐃⲆⲆ = false;
      var v1767 = v1765.Ⲇᐃᐃᐃⵠ;
      var v1768 = v1766.ΔΔⵠ.width;
      var v1769 = v1766.ΔΔⵠ.height;
      var v1770 = v1766.ᐃ;
      var v1771 = v2884.ⵠⵠΔⵠ;
      var vVVVVV316 = vVVVV316;
      v1770.clearRect(0, 0, v1768, v1769);
      v1770.drawImage(v1766.Δᐃ, 0, 0);
      for (var v1772 = 0; v1767.length > v1772; v1772++) {
        var v1773 = v1771[v1767[v1772]];
        if ((v2884.mode !== 1 || v1773.ΔΔΔⲆⲆ !== "spectator") && (v2884.mode !== 2 || v1773.ⵠⲆⲆΔ !== 0)) {
          if (v1767[v1772] == v2885.id) {
            vVVVVV316 = true;
            if (v2884.mode === 3 && v1773.ⵠⲆⲆΔ === 0) {
              ᐃⲆ = "#FF0000";
            } else {
              ᐃⲆ = "#FFF";
            }
          } else if (v2884.mode === 3 && v1773.ⵠⲆⲆΔ === 0) {
            ᐃⲆ = "#990000";
          } else {
            ᐃⲆ = "#A1BDCD";
          }
          v1770.drawImage(f166(v427, "" + (v1772 + 1), v427 * 15, ᐃⲆ), v427 * 20, (40 + v1772 * 22) * v427);
          if (!v1773.ᐃᐃⵠⲆⵠⲆΔ) {
            v1773.ᐃᐃⵠⲆⵠⲆΔ = f166(v427, v1773.ΔΔΔⲆⲆ, v427 * 15, ᐃⲆ, undefined, undefined, undefined, vVVVVUndefined132, v427 * 110);
          }
          v1770.drawImage(v1773.ᐃᐃⵠⲆⵠⲆΔ, v427 * 39, (40 + v1772 * 22) * v427);
          v1770.drawImage(f166(v427, ⵠⲆⲆ.ΔⲆᐃⲆⵠⵠⲆ(v1773.ⲆΔⲆᐃΔ), v427 * 15, ᐃⲆ), v427 * 156, (40 + v1772 * 22) * v427);
        }
      }
      if (!vVVVVV316) {
        if (v2884.mode === 0 || v2884.mode === 3 || v2884.mode === 4 || v2884.mode === 5 || v2884.mode === 7 || v2884.mode === 1 && !v2885.ⲆⵠΔⵠᐃⲆΔ || v2884.mode === 2 && !v2885.ᐃΔⵠᐃⵠ) {
          v1770.drawImage(ΔΔ[417], v427 * 15, (46 + v1772 * 22) * v427);
          v1770.drawImage(f166(v427, ⵠⲆⲆ.ΔⲆᐃⲆⵠⵠⲆ(v2884.ⵠⵠΔⵠ[v2885.id].ⲆΔⲆᐃΔ), v427 * 15, "#FFF"), v427 * 100, v427 * (46 + v1772 * 22));
        }
      }
    }
    f304(v419, v1766.ΔΔⵠ, v1766.translate.x, v1766.translate.y);
  }
  function f327() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[349][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f328() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[1060][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f329() {
    var v1774 = v2885.ⲆΔⲆΔ;
    if (!v1774.ⲆΔⲆΔᐃ && v1774.ⲆᐃⲆⲆ > 0) {
      var v1775 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      if (!v1775) {
        return;
      }
      v419.save();
      if (v628[v1774.ⲆᐃⲆⲆ].ⵠΔᐃ === 0 && v1774.mode === 0) {
        v419.translate(v2885.ⲆΔⵠ.x + v1775.x, v2885.ⲆΔⵠ.y + v1775.y);
        v419.rotate(v1775.angle);
        v419.translate(120, 0);
      } else {
        var v1776 = Math.floor(v1775.x + Math.sin(v1775.angle) * 120);
        var v1777 = Math.floor(v1775.y + Math.cos(v1775.angle) * 120);
        v1776 = v2885.ⲆΔⵠ.x + (v1776 - v1776 % 100 + 50);
        v1777 = v2885.ⲆΔⵠ.y + (v1777 - v1777 % 100 + 50);
        v419.translate(v1776, v1777);
      }
      var v1778 = ΔΔ[v1774.ⲆᐃⲆⲆ][v2884.time];
      v419.globalAlpha = 0.5;
      f304(v419, v1778, -v1778.width / 2, -v1778.height / 2);
      v419.globalAlpha = 1;
      v419.restore();
      if (v628[v1774.ⲆᐃⲆⲆ].ⵠΔᐃ === 0) {
        if (!v1774.label[v1774.mode]) {
          if (v1774.mode === 0) {
            v1774.label[0] = f166(v427, v809[2036], 20, "#e2c340");
          } else {
            v1774.label[1] = f166(v427, v809[2037], 20, "#e2c340");
          }
        }
        v1778 = v1774.label[v1774.mode];
        f304(v419, v1778, v424 + -v1778.width / 2, v3081.ᐃⲆⵠΔ.y - 26);
      }
    }
    if (v1774.ⲆΔⲆΔᐃ) {
      var v1779 = v1774.timeout.ᐃⲆⲆ();
      for (var v1780 = 0; v1780 < v1774.ᐃⲆΔⵠᐃ.length; v1780++) {
        var v1781 = v1774.ᐃⲆΔⵠᐃ[v1780];
        if (v1774.id == v1781.id) {
          var v1782 = v427 * 42;
          var v1783 = v427 * 17;
          f87(v419, v1781.info.translate.x, v1781.info.translate.y + (1 - v1774.timeout.ⵠᐃᐃ) * v1782, v1781.info.width, v1774.timeout.ⵠᐃᐃ * v1782 + v1783, v427 * 10);
          v419.fillStyle = "#55B973";
          v419.fill();
          v419.globalAlpha = 0.8;
          v1781.ᐃᐃΔⵠ(v419);
        } else {
          v419.globalAlpha = 0.5;
          v1781.ᐃᐃΔⵠ(v419);
        }
        v419.globalAlpha = 1;
      }
      if (v1779) {
        v1774.ⲆΔⲆΔᐃ = false;
        v1774.timeout.ⵠᐃᐃ = 0;
        v1774.timeout.ⲆⲆΔ = false;
      }
      return true;
    }
    for (v1780 = 0; v1780 < v1774.ᐃⲆΔⵠᐃ.length; v1780++) {
      v1774.ᐃⲆΔⵠᐃ[v1780].ᐃᐃΔⵠ(v419);
    }
    return false;
  }
  function f330() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[1097][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f331() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[432][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f332(p1227) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && v31 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV312;
      }
      var v1784 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
      var v1785 = v1784 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1786 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1784;
    } else {
      v1785 = 0;
      v1786 = 0;
    }
    if (this.ᐃⲆⵠⵠⵠ.ᐃⲆⲆ()) {
      this.color += 0.2 + Math.random() * 0.3;
    }
    Δᐃ = ΔΔ[1121][Math.floor(this.id + this.color) % 5][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width * this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ * -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2 + v1785, -ΔᐃⲆ / 2 + v1786, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  var v1787 = 0;
  function f333() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1788 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1789 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1788;
      var v1790 = v1788 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1789 = 0;
      v1790 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1789 += Math.random() * 2 - 1;
      v1790 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1789, v2885.ⲆΔⵠ.y + this.y + v1790);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[253][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1581][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f334() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1791 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1792 = v1791 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1793 = v1791 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1792 = 0;
      v1793 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1792 += Math.random() * 2 - 1;
      v1793 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1792, v2885.ⲆΔⵠ.y + this.y + v1793);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[250][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1569][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f335() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVVV313;
      }
      var v1794 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1795 = v1794 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1796 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1794;
    } else {
      v1795 = 0;
      v1796 = 0;
    }
    if (this.info & 31 && this.info & 992 && ~this.info & 31744) {
      v1797 = ΔΔ[965][v2884.time];
      f304(v419, v1797, -v1797.width / 2 + v1795, -v1797.height / 2 + v1796);
      this.up.ᐃⲆⲆ();
      var v1797 = ΔΔ[969][v2884.time];
      var v1798 = -v1797.width * this.up.ⵠᐃᐃ;
      var v1799 = this.up.ⵠᐃᐃ * -v1797.height;
      f304(v419, v1797, -v1798 / 2 + v427 * 1, -v1799 / 2 + v427 * 3, v1798, v1799);
    } else {
      v1797 = ΔΔ[237][v2884.time];
      f304(v419, v1797, -v1797.width / 2 + v1795, -v1797.height / 2 + v1796);
    }
    v419.restore();
  }
  function f336() {
    if (this.info !== 10) {
      for (var v1800 = this.info & 15, v1801 = 0; v1800 > v1801; v1801++) {
        this.ⵠᐃⵠΔ[v1801].ᐃᐃΔⵠ(317, this.x, this.y);
      }
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
          this.ΔΔΔ.ᐃⲆⲆ = false;
        }
        var v1802 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
        var v1803 = v1802 * Math.sin(this.ΔΔΔ.angle - this.angle);
        var v1804 = v1802 * Math.cos(this.ΔΔΔ.angle - this.angle);
      } else {
        v1803 = 0;
        v1804 = 0;
      }
      if (this.info & 16) {
        var v1805 = ΔΔ[1234][v2884.time];
      } else {
        v1805 = ΔΔ[1233][v2884.time];
      }
      f304(v419, v1805, -v1805.width / 2 + v1803, -v1805.width / 2 + v1804);
      v419.restore();
    }
  }
  function f337() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vV314 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1806 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1807 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1806;
      var v1808 = v1806 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1807 = 0;
      v1808 = 0;
    }
    var v1809 = this.info & 15;
    if (this.info === 10 || v1809 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1810 = ΔΔ[1098][v2884.time];
      } else {
        v1810 = ΔΔ[295][v2884.time];
      }
      var v1811 = -v1810.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      var v1812 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1810.height;
      f304(v419, v1810, -v1811 / 2 + v1807, -v1812 / 2 + v1808, v1811, v1812);
    } else {
      if (this.info & 16) {
        v1810 = ΔΔ[1118][v2884.time];
      } else {
        v1810 = ΔΔ[296][v2884.time];
      }
      v419.translate(0, v1810.height / 2);
      f304(v419, v1810, v1807 - v1810.width / 2, -v1810.height + v1808);
    }
    v419.restore();
  }
  function f338() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVV317) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV312;
      }
      var v1813 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1814 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1813;
      var v1815 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1813;
    } else {
      v1814 = 0;
      v1815 = 0;
    }
    var v1816 = this.info & 15;
    if (this.info === 10 || v1816 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1817 = ΔΔ[1745][v2884.time];
      } else {
        v1817 = ΔΔ[1739][v2884.time];
      }
      var v1818 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1817.width;
      var v1819 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1817.height;
      f304(v419, v1817, -v1818 / 2 + v1814, -v1819 / 2 + v1815, v1818, v1819);
    } else {
      if (this.info & 16) {
        v1817 = ΔΔ[1746][v2884.time];
      } else {
        v1817 = ΔΔ[1759][v2884.time];
      }
      v419.translate(0, v1817.height / 2);
      f304(v419, v1817, v1814 - v1817.width / 2, -v1817.height + v1815);
    }
    v419.restore();
  }
  function f339(p1228, p1229) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1820 = ΔΔ[p1228][v2884.time];
    ⵠⲆⵠ = -v1820.width;
    ΔᐃⲆ = -v1820.height;
    f304(v419, v1820, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1820 = ΔΔ[p1229];
      f304(v419, v1820, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f340() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVV315) {
        this.ΔΔΔ.ᐃⲆⲆ = vV31;
      }
      var v1821 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1822 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1821;
      var v1823 = v1821 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1822 = 0;
      v1823 = 0;
    }
    if (this.action == 2) {
      Δᐃ = ΔΔ[518][v2884.time];
    } else {
      Δᐃ = ΔΔ[210][v2884.time];
    }
    f304(v419, Δᐃ, -Δᐃ.width / 2 + v1822, -Δᐃ.height / 2 + v1823);
    v419.restore();
  }
  function f341() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vV315 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = vV313;
      }
      var v1824 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1825 = v1824 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1826 = v1824 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1825 = 0;
      v1826 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1825 += Math.random() * 2 - 1;
      v1826 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1825, v2885.ⲆΔⵠ.y + this.y + v1826);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[248][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1561][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f342() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ᐃⲆⵠⵠⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[1547][v2884.time];
    ⵠⲆⵠ = this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ * -Δᐃ.width;
    ΔᐃⲆ = this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ * -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f343() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    var v1827 = ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r);
    this.scale = v1827 > 350 ? Math.min(this.scale + v3116 / 2, 1.8) : Math.max(this.scale - v3116, 1);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    this.ΔᐃⵠΔ = v1827 < 350 ? Math.max(0, this.ΔᐃⵠΔ - v3116 * 2.2) : Math.min(1, this.ΔᐃⵠΔ + v3116 * 2.2);
    v1828 = (this.info & 1) === 0 ? ΔΔ[1460][v2884.time] : ΔΔ[1461][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1828.width * this.scale;
    ΔᐃⲆ = this.scale * (-v1828.height * this.ΔΔΔⵠ.ⵠᐃᐃ);
    v419.globalAlpha = 1 - this.ΔᐃⵠΔ;
    f304(v419, v1828, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    v1828 = (this.info & 1) === 0 ? ΔΔ[1446][v2884.time] : ΔΔ[1445][v2884.time];
    ⵠⲆⵠ = -v1828.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    ΔᐃⲆ = -v1828.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1828, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = (0.6 - this.ΔΔΔ.ⵠᐃᐃ) * (1 - this.ΔᐃⵠΔ);
      var v1828 = ΔΔ[1462];
      ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1828.width * this.scale;
      ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1828.height * this.scale;
      f304(v419, v1828, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = (0.6 - this.ΔΔΔ.ⵠᐃᐃ) * this.ΔᐃⵠΔ;
      v1828 = ΔΔ[1454];
      ⵠⲆⵠ = this.scale * (-v1828.width * this.ΔΔΔⵠ.ⵠᐃᐃ);
      ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1828.height * this.scale;
      f304(v419, v1828, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1828 = this.info & 1 ? ΔΔ[1448][v2884.time] : ΔΔ[1449][v2884.time];
    ⵠⲆⵠ = this.scale * (-v1828.width * this.ΔΔΔⵠ.ⵠᐃᐃ);
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1828.height);
    v419.save();
    v419.translate(v427 * -20, v427 * 0);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1828, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = this.ΔᐃⵠΔ * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      v1828 = ΔΔ[1455];
      f304(v419, v1828, v427 * -ⵠⲆⵠ / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1828 = (this.info & 1) === 0 ? ΔΔ[1452][v2884.time] : ΔΔ[1451][v2884.time];
    v419.save();
    v419.translate(v427 * 20, v427 * 0);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1828, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = this.ΔᐃⵠΔ * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      v1828 = ΔΔ[1456];
      f304(v419, v1828, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.globalAlpha = 1;
    v419.restore();
    v419.restore();
  }
  function f344(p1230) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
    v419.globalAlpha = 0.3;
    var v1829 = ΔΔ[392][v2884.time];
    var v1830 = -v1829.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
    var v1831 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1829.height;
    f304(v419, v1829, -v1830 / 2, -v1831 / 2, v1830, v1831);
    v419.globalAlpha = 1;
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVVV316) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV315;
      }
      var v1832 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1833 = v1832 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1834 = v1832 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1833 = 0;
      v1834 = 0;
    }
    v1829 = ΔΔ[p1230][v2884.time];
    f304(v419, v1829, -v1829.width / 2 + v1833, -v1829.height / 2 + v1834);
    v419.restore();
  }
  function f345(p1231, p1232) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    v1835 = ΔΔ[p1231][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1835.width;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1835.height;
    f304(v419, v1835, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && vVV3153 == this.ΔΔΔ.ⲆⲆΔ) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1835 = ΔΔ[p1232];
      f304(v419, v1835, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f346() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1836 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1837 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1836;
      var v1838 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1836;
    } else {
      v1837 = 0;
      v1838 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1837 += Math.random() * 2 - 1;
      v1838 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1837, v2885.ⲆΔⵠ.y + this.y + v1838);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[259][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1605][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f347() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVVV316) {
        this.ΔΔΔ.ᐃⲆⲆ = vVVV31;
      }
      var v1839 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1840 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1839;
      var v1841 = v1839 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1840 = 0;
      v1841 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1840 += Math.random() * 2 - 1;
      v1841 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1840, v2885.ⲆΔⵠ.y + this.y + v1841);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[256][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1593][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f348() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVVVV316) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1842 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1843 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1842;
      var v1844 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1842;
    } else {
      v1843 = 0;
      v1844 = 0;
    }
    this.ⵠⵠⵠΔᐃⲆⲆ = (this.ⵠⵠⵠΔᐃⲆⲆ + v3116 * 3) % (Math.PI * 2);
    this.ⲆⲆⲆΔΔⲆΔ = (this.ⲆⲆⲆΔΔⲆΔ - v3116 * 3) % (Math.PI * 2);
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1843, v2885.ⲆΔⵠ.y + this.y + v1844);
    v419.save();
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[245][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.save();
    v419.rotate(this.ⵠⵠⵠΔᐃⲆⲆ);
    Δᐃ = ΔΔ[1549][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.save();
    v419.rotate(this.ⲆⲆⲆΔΔⲆΔ);
    Δᐃ = ΔΔ[1548][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.restore();
  }
  function f349() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    var v1845 = ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r);
    this.scale = v1845 > 350 ? Math.min(this.scale + v3116 / 2, 1.8) : Math.max(this.scale - v3116, 1);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    this.ΔᐃⵠΔ = v1845 < 350 ? Math.max(0, this.ΔᐃⵠΔ - v3116 * 2.2) : Math.min(1, this.ΔᐃⵠΔ + v3116 * 2.2);
    v1846 = ΔΔ[1443][v2884.time];
    ⵠⲆⵠ = -v1846.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1846.height);
    v419.globalAlpha = 1 - this.ΔᐃⵠΔ;
    f304(v419, v1846, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    v1846 = ΔΔ[1427][v2884.time];
    ⵠⲆⵠ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1846.width);
    ΔᐃⲆ = -v1846.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1846, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = (1 - this.ΔᐃⵠΔ) * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      var v1846 = ΔΔ[1444];
      ⵠⲆⵠ = -v1846.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
      ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1846.height);
      f304(v419, v1846, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = (0.6 - this.ΔΔΔ.ⵠᐃᐃ) * this.ΔᐃⵠΔ;
      v1846 = ΔΔ[1436];
      ⵠⲆⵠ = -v1846.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
      ΔᐃⲆ = -v1846.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
      f304(v419, v1846, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1846 = ΔΔ[1430][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1846.width * this.scale;
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1846.height);
    v419.save();
    v419.translate(v427 * -40, v427 * 80);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1846, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = this.ΔᐃⵠΔ * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      v1846 = ΔΔ[1437];
      f304(v419, v1846, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1846 = ΔΔ[1433][v2884.time];
    v419.save();
    v419.translate(v427 * 40, v427 * 80);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1846, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = this.ΔᐃⵠΔ * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      v1846 = ΔΔ[1438];
      f304(v419, v1846, v427 * -ⵠⲆⵠ / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.globalAlpha = 1;
    v419.restore();
    v419.restore();
  }
  function f350() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVV3152) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV315;
      }
      var v1847 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1848 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1847;
      var v1849 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1847;
    } else {
      v1848 = 0;
      v1849 = 0;
    }
    var v1850 = this.info & 15;
    if (this.info === 10 || v1850 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1851 = ΔΔ[1246][v2884.time];
      } else {
        v1851 = ΔΔ[318][v2884.time];
      }
      var v1852 = -v1851.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      var v1853 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1851.height;
      f304(v419, v1851, -v1852 / 2 + v1848, -v1853 / 2 + v1849, v1852, v1853);
    } else {
      if (this.info & 16) {
        v1851 = ΔΔ[1247][v2884.time];
      } else {
        v1851 = ΔΔ[319][v2884.time];
      }
      v419.translate(0, v1851.height / 2);
      f304(v419, v1851, v1848 - v1851.width / 2, -v1851.height + v1849);
    }
    v419.restore();
  }
  function f351() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3116 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3116, 1);
    }
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    v1854 = this.info === 0 ? ΔΔ[343][v2884.time] : ΔΔ[1391][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1854.width * this.scale;
    ΔᐃⲆ = -v1854.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    f304(v419, v1854, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == vVV3153) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1854 = ΔΔ[1400];
      f304(v419, v1854, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1854 = this.info === 0 ? ΔΔ[1395][v2884.time] : ΔΔ[1394][v2884.time];
    ⵠⲆⵠ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1854.width);
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1854.height * this.scale;
    v419.save();
    v419.translate(v427 * -40, v427 * 10);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    f304(v419, v1854, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1854 = ΔΔ[1401];
      f304(v419, v1854, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1854 = this.info === 0 ? ΔΔ[1398][v2884.time] : ΔΔ[1397][v2884.time];
    v419.save();
    v419.translate(v427 * 40, v427 * 10);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    f304(v419, v1854, v427 * -ⵠⲆⵠ / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1854 = ΔΔ[1402];
      f304(v419, v1854, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.restore();
  }
  function f352() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vV314) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1855 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1856 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1855;
      var v1857 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1855;
    } else {
      v1856 = 0;
      v1857 = 0;
    }
    this.ⵠⵠⵠΔᐃⲆⲆ = (this.ⵠⵠⵠΔᐃⲆⲆ + v3116 * 3) % (Math.PI * 2);
    this.ⲆⲆⲆΔΔⲆΔ = (this.ⲆⲆⲆΔΔⲆΔ - v3116 * 3) % (Math.PI * 2);
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1856, v2885.ⲆΔⵠ.y + this.y + v1857);
    v419.save();
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[244][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.save();
    v419.rotate(this.ⵠⵠⵠΔᐃⲆⲆ);
    Δᐃ = ΔΔ[666][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.save();
    v419.rotate(this.ⲆⲆⲆΔΔⲆΔ);
    Δᐃ = ΔΔ[665][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.restore();
  }
  function f353() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVVV31;
      }
      var v1858 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1859 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1858;
      var v1860 = v1858 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1859 = 0;
      v1860 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1859 += Math.random() * 2 - 1;
      v1860 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1859, v2885.ⲆΔⵠ.y + this.y + v1860);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[254][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1585][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f354(p1233, p1234) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (p1233 === 1103) {
      p1233 = 360;
      this.info = 41;
    }
    Δᐃ = ΔΔ[p1233][this.info][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width / 2;
    ΔᐃⲆ = -Δᐃ.height / 2;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var vCv = f401(this.info, Δᐃ, ⵠᐃⲆᐃⵠⵠᐃᐃᐃ);
      f304(v419, vCv, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f355() {
    var v1861 = Math.PI / 2;
    var v1862 = Math.PI / 4;
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.ΔΔⵠΔΔΔⵠ.ᐃⲆⲆ();
    this.ⲆΔᐃΔᐃⵠᐃ.ᐃⲆⲆ();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1863 = this.info === 0 ? ΔΔ[341][v2884.time] : ΔΔ[1361][v2884.time];
    ⵠⲆⵠ = -v1863.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1863.height;
    f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && vVVV31 == this.ΔΔΔ.ⲆⲆΔ) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1863 = ΔΔ[1364];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.ⵠⲆΔⲆᐃ.ᐃⲆⲆ() && this.ⵠⲆΔⲆᐃ.ⲆⲆΔ == 0) {
        this.action -= 4;
      }
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1863 = ΔΔ[1373];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle + v1862);
    v419.translate(100, 0);
    v419.rotate(v1861);
    v1863 = this.info === 0 ? ΔΔ[1368][v2884.time] : ΔΔ[1367][v2884.time];
    ⵠⲆⵠ = -v1863.width * this.ΔΔⵠΔΔΔⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = -v1863.height * this.ΔΔⵠΔΔΔⵠ.ⵠᐃᐃ;
    f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1863 = ΔΔ[1365];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1863 = ΔΔ[1374];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle + v1861 + v1862);
    v419.translate(100, 0);
    v419.rotate(v1861);
    v1863 = this.info === 0 ? ΔΔ[1371][v2884.time] : ΔΔ[1370][v2884.time];
    ⵠⲆⵠ = this.ⲆΔᐃΔᐃⵠᐃ.ⵠᐃᐃ * -v1863.width;
    ΔᐃⲆ = -v1863.height * this.ⲆΔᐃΔᐃⵠᐃ.ⵠᐃᐃ;
    f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1863 = ΔΔ[1366];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1863 = ΔΔ[1375];
      f304(v419, v1863, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f356() {
    if (this.info !== 10) {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
          this.ΔΔΔ.ᐃⲆⲆ = vVV315;
        }
        var v1864 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
        var v1865 = v1864 * Math.sin(this.ΔΔΔ.angle - this.angle);
        var v1866 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1864;
      } else {
        v1865 = 0;
        v1866 = 0;
      }
      if (this.info & 16) {
        var v1867 = ΔΔ[842][v2884.time];
      } else {
        v1867 = ΔΔ[397][v2884.time];
      }
      f304(v419, v1867, -v1867.width / 2 + v1865, -v1867.width / 2 + v1866);
      v419.restore();
      for (var v1868 = this.info & 15, v1869 = 0; v1868 > v1869; v1869++) {
        this.ⵠᐃⵠΔ[v1869].ᐃᐃΔⵠ(404);
      }
    }
  }
  function f357() {
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1870 = this.info === 0 ? ΔΔ[358][v2884.time] : ΔΔ[1613][v2884.time];
    ⵠⲆⵠ = -v1870.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = -v1870.height * this.ΔΔΔⵠ.ⵠᐃᐃ;
    f304(v419, v1870, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && vVV313 == this.ΔΔΔ.ⲆⲆΔ) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1870 = ΔΔ[1614];
      f304(v419, v1870, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f358() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVVV31) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV316;
      }
      var v1871 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1872 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1871;
      var v1873 = v1871 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1872 = 0;
      v1873 = 0;
    }
    var v1874 = this.info & 15;
    if (this.info === 10 || v1874 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1875 = ΔΔ[1087][v2884.time];
      } else {
        v1875 = ΔΔ[293][v2884.time];
      }
      var v1876 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1875.width;
      var v1877 = -v1875.height * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      f304(v419, v1875, -v1876 / 2 + v1872, -v1877 / 2 + v1873, v1876, v1877);
    } else {
      if (this.info & 16) {
        v1875 = ΔΔ[1088][v2884.time];
      } else {
        v1875 = ΔΔ[294][v2884.time];
      }
      v419.translate(0, v1875.height / 2);
      f304(v419, v1875, v1872 - v1875.width / 2, -v1875.height + v1873);
    }
    v419.restore();
  }
  function f359() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vVV3152) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1878 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1879 = v1878 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1880 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1878;
    } else {
      v1879 = 0;
      v1880 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1879 += Math.random() * 2 - 1;
      v1880 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1879, v2885.ⲆΔⵠ.y + this.y + v1880);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[257][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1597][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f360(p1235, p1236, p1237, p1238, p1239, p1240, p1241, p1242 = 0, p1243) {
    for (var vP1235 = p1235; p1236 >= vP1235; vP1235++) {
      for (var vP1237 = p1237; p1238 >= vP1237; vP1237++) {
        var v1881 = v2881.ⲆᐃᐃⲆ[vP1235][vP1237];
        if (vVVUndefined13 !== v1881 && vVVUndefined83 !== v1881[p1240]) {
          var v1882 = v1881[p1240];
          var v1883 = ΔΔ[p1239][v2884.time][v1882.ⲆⲆⵠΔΔᐃⲆ];
          f304(v419, v1883, v2885.ⲆΔⵠ.x + v1882.x - v1883.width / (ⵠⲆⲆΔΔ * 4), v2885.ⲆΔⵠ.y + v1882.y - v1883.height / (ⵠⲆⲆΔΔ * 4), v1883.width / (ⵠⲆⲆΔΔ * 2), v1883.height / (ⵠⲆⲆΔΔ * 2));
          if (v2883.ⲆⲆⲆΔⵠ) {
            var v1884 = 2147483648;
            var v1885 = ((vP1235 * 1000 + vP1237) * 1103515245 + 12345) % v1884 / v1884;
            if (v1885 < 0.2) {
              v1885 = Math.floor(ΔΔ[1333][v2884.time][v1882.ⲆⲆⵠΔΔᐃⲆ].length * (v1885 * 5));
              v1883 = ΔΔ[1333][v2884.time][v1882.ⲆⲆⵠΔΔᐃⲆ][v1885];
              f304(v419, v1883, v2885.ⲆΔⵠ.x + v1882.x - v1883.width / (ⵠⲆⲆΔΔ * 4), v2885.ⲆΔⵠ.y + v1882.y - v1883.height / (ⵠⲆⲆΔΔ * 4), v1883.width / (ⵠⲆⲆΔΔ * 2), v1883.height / (ⵠⲆⲆΔΔ * 2));
            } else if (v1882.ᐃⲆⲆⲆⲆΔᐃ !== 0) {
              v1883 = ΔΔ[1334][v2884.time];
              var v1886 = (v1787 + vP1235 % 2 * 30) % 60;
              v419.globalAlpha = v1886 < 30 ? v1886 / 30 : 1 - (v1886 - 30) / 30;
              f304(v419, v1883, v2885.ⲆΔⵠ.x + v1882.x - v1883.width / (ⵠⲆⲆΔΔ * 4), v2885.ⲆΔⵠ.y + v1882.y - v1883.height / (ⵠⲆⲆΔΔ * 4) - 30 + v1886, v1883.width / (ⵠⲆⲆΔΔ * 2), v1883.height / (ⵠⲆⲆΔΔ * 2));
              v419.globalAlpha = 1;
            }
          }
        }
      }
    }
  }
  function f361() {
    var vUndefined3 = undefined;
    var vUndefined4 = undefined;
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    if (this.ᐃΔᐃΔᐃ >= 0.1 && this.ᐃΔᐃΔᐃ <= 1.1) {
      if ((v1887 = Math.max(0, Math.min(1, this.ᐃΔᐃΔᐃ - 0.1))) < 0.2) {
        v1887 *= 5;
      } else {
        v1887 = v1887 > 0.8 ? (1 - v1887) * 5 : 1;
      }
      vUndefined3 = ΔΔ[1478][v2884.time];
      ⵠⲆⵠ = -vUndefined3.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
      ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -vUndefined3.height;
      v419.globalAlpha = v1887;
      f304(v419, vUndefined3, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      vUndefined4 = ΔΔ[1479];
    }
    if (this.ᐃΔᐃΔᐃ >= 0.9) {
      var v1887;
      if ((v1887 = Math.max(0, Math.min(1, this.ᐃΔᐃΔᐃ - 0.9))) < 0.2) {
        v1887 *= 5;
      } else {
        v1887 = 1;
      }
      vUndefined3 = ΔΔ[1480][v2884.time];
      ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -vUndefined3.width;
      ΔᐃⲆ = -vUndefined3.height * this.ΔΔΔⵠ.ⵠᐃᐃ;
      v419.globalAlpha = v1887;
      f304(v419, vUndefined3, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      vUndefined4 = ΔΔ[1481];
    }
    if (this.action & 2 && vUndefined4 !== undefined) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = v1887 * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -vUndefined4.width;
      ΔᐃⲆ = -vUndefined4.height * this.ΔΔΔⵠ.ⵠᐃᐃ;
      f304(v419, vUndefined4, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    }
    v419.globalAlpha = 1;
    v419.restore();
  }
  function f362() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vVV31 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV312;
      }
      var v1888 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1889 = v1888 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1890 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1888;
    } else {
      v1889 = 0;
      v1890 = 0;
    }
    if (this.info === 0) {
      Δᐃ = ΔΔ[285][v2884.time];
    } else {
      Δᐃ = ΔΔ[1051][v2884.time][this.info - 1];
    }
    f304(v419, Δᐃ, -Δᐃ.width / 2 + v1889, -Δᐃ.height / 2 + v1890);
    v419.restore();
  }
  function f363(p1244, p1245, p1246) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + p1245, v2885.ⲆΔⵠ.y + p1246);
    v419.rotate(this.angle);
    v419.translate(this.x - p1245, this.y - p1246);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[p1244][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -Δᐃ.width;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f364(p1247, p1248, p1249) {
    if (p1247 >= 0) {
      Δᐃ = ΔΔ[p1247][v2884.time];
      switch (p1247) {
        case 1:
        case 3:
        case 4:
        case 8:
        case 49:
        case 50:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 51:
        case 58:
        case 59:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - (45 + p1248) * v427, -Δᐃ.height / 2 + (p1249 + 22) * v427);
          break;
        case 167:
        case 168:
        case 169:
        case 170:
        case 174:
        case 175:
        case 176:
        case 177:
        case 178:
        case 180:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (52 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 20));
          break;
        case 171:
        case 172:
        case 173:
        case 179:
        case 181:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (57 + p1248) * v427, -Δᐃ.height / 4 + (p1249 + 20) * v427);
          break;
        case 103:
        case 0:
        case 5:
        case 6:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 110:
        case 117:
        case 118:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (47 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 45));
          break;
        case 48:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (52 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 45));
          break;
        case 28:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (47 + p1248) * v427, -Δᐃ.height / 4 + (p1249 + 44) * v427);
          break;
        case 9:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - (47 + p1248) * v427, -Δᐃ.height / 2 + (p1249 + 44) * v427);
          break;
        case 108:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - v427 * (40 + p1248), -Δᐃ.height / 2 + v427 * (p1249 + 65));
          break;
        case 12:
        case 61:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - v427 * (37 + p1248), -Δᐃ.height / 4 + (p1249 + 85) * v427);
          break;
        case 100:
        case 99:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - v427 * (26 + p1248), -Δᐃ.height / 4 + v427 * (p1249 + 77));
          break;
        case 17:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (37 + p1248) * v427, -Δᐃ.height / 4 + (p1249 + 85) * v427);
          break;
        case 109:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (47 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 44));
          break;
        case 119:
        case 120:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 127:
        case 128:
        case 129:
        case 130:
        case 131:
        case 132:
        case 126:
        case 133:
        case 134:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (37 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 30));
          break;
        case 102:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - v427 * (47 + p1248), -Δᐃ.height / 4 + (p1249 + 35) * v427);
          break;
        case 165:
        case 166:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (47 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 40));
          break;
        case 162:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - v427 * (47 + p1248), -Δᐃ.height / 4 + (p1249 + 34) * v427);
          break;
        case 13:
        case 14:
        case 15:
        case 60:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 19:
        case 26:
        case 27:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (37 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 90));
          break;
        case 18:
          f416(p1247, Δᐃ, -Δᐃ.width / 4 - (40 + p1248) * v427, -Δᐃ.height / 4 + v427 * (p1249 + 85));
          break;
        case 16:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - (39 + p1248) * v427, -Δᐃ.height / 2 + (p1249 + 90) * v427);
          break;
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 72:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 73:
        case 80:
        case 81:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - v427 * (46 + p1248), -Δᐃ.height / 2 + (p1249 + 35) * v427);
          break;
        case 85:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - v427 * (47 + p1248), -Δᐃ.height / 2 + v427 * (p1249 + 54));
          break;
        case 82:
        case 86:
        case 87:
        case 88:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 90:
        case 89:
        case 97:
        case 98:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - (46 + p1248) * v427, -Δᐃ.height / 2 + (p1249 + 35) * v427);
          break;
        case 101:
          f430(p1247, Δᐃ, -Δᐃ.width / 2 - v427 * (47 + p1248), -Δᐃ.height / 2 + (p1249 + 20) * v427);
      }
    }
  }
  function f365() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1891 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1892 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1891;
      var v1893 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1891;
    } else {
      v1892 = 0;
      v1893 = 0;
    }
    var v1894 = this.info & 15;
    if (this.info === 10 || v1894 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1895 = ΔΔ[1229][v2884.time];
      } else {
        v1895 = ΔΔ[314][v2884.time];
      }
      var v1896 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1895.width;
      var v1897 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1895.height;
      f304(v419, v1895, -v1896 / 2 + v1892, -v1897 / 2 + v1893, v1896, v1897);
    } else {
      if (this.info & 16) {
        v1895 = ΔΔ[1230][v2884.time];
      } else {
        v1895 = ΔΔ[315][v2884.time];
      }
      v419.translate(0, v1895.height / 2);
      f304(v419, v1895, v1892 - v1895.width / 2, -v1895.height + v1893);
    }
    v419.restore();
  }
  function f366(p1250, p1251, p1252) {
    if (p1250 >= 0) {
      Δᐃ = ΔΔ[p1250][v2884.time];
      switch (p1250) {
        case 135:
        case 136:
        case 137:
          f416(p1250, Δᐃ, -Δᐃ.width / 4 - (0 + p1251) * v427, -Δᐃ.height / 4 + v427 * (p1252 + 35));
          break;
        case 138:
          f416(p1250, Δᐃ, -Δᐃ.width / 4 - v427 * (1 + p1251), -Δᐃ.height / 4 + (p1252 + 45) * v427);
          break;
        case 139:
        case 140:
        case 142:
        case 143:
        case 144:
        case 145:
        case 146:
        case 147:
        case 141:
        case 148:
        case 149:
          f416(p1250, Δᐃ, -Δᐃ.width / 4 - (1 + p1251) * v427, -Δᐃ.height / 4 + v427 * (p1252 + 40));
      }
    }
  }
  function f367() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV317;
      }
      var v1898 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1899 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1898;
      var v1900 = v1898 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1899 = 0;
      v1900 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1899 += Math.random() * 2 - 1;
      v1900 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1899, v2885.ⲆΔⵠ.y + this.y + v1900);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[258][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1601][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f368() {
    var v1901 = Math.PI / 2;
    var v1902 = Math.PI / 4;
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.ΔΔⵠΔΔΔⵠ.ᐃⲆⲆ();
    this.ⲆΔᐃΔᐃⵠᐃ.ᐃⲆⲆ();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1903 = this.info === 0 ? ΔΔ[1163][v2884.time] : ΔΔ[1162][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1903.width;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1903.height;
    f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == vVV317) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1903 = ΔΔ[1164];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.ⵠⲆΔⲆᐃ.ᐃⲆⲆ() && this.ⵠⲆΔⲆᐃ.ⲆⲆΔ == vVV316) {
        this.action -= 4;
      }
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1903 = ΔΔ[1167];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle + v1902);
    v419.translate(55, 0);
    v419.rotate(v1901);
    v1903 = this.info === 0 ? ΔΔ[1170][v2884.time] : ΔΔ[1172][v2884.time];
    ⵠⲆⵠ = this.ΔΔⵠΔΔΔⵠ.ⵠᐃᐃ * -v1903.width;
    ΔᐃⲆ = this.ΔΔⵠΔΔΔⵠ.ⵠᐃᐃ * -v1903.height;
    f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1903 = ΔΔ[1165];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1903 = ΔΔ[1168];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle + v1901 + v1902);
    v419.translate(55, 0);
    v419.rotate(v1901);
    v1903 = this.info === 0 ? ΔΔ[1171][v2884.time] : ΔΔ[1173][v2884.time];
    ⵠⲆⵠ = -v1903.width * this.ⲆΔᐃΔᐃⵠᐃ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ⲆΔᐃΔᐃⵠᐃ.ⵠᐃᐃ * -v1903.height;
    f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1903 = ΔΔ[1166];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    if (this.action & 4) {
      v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
      v1903 = ΔΔ[1169];
      f304(v419, v1903, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f369() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      var v1904 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1905 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1904;
      var v1906 = v1904 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1905 = 0;
      v1906 = 0;
    }
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 0.5) % (Math.PI * 2);
    }
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1905, v2885.ⲆΔⵠ.y + this.y + v1906);
    v419.save();
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[860][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.save();
    v419.rotate(this.ΔⲆᐃⵠᐃⵠⲆΔᐃ);
    Δᐃ = ΔΔ[861][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
    v419.restore();
  }
  function f370() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV31;
      }
      var v1907 = v427 * ((1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600);
      var v1908 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1907;
      var v1909 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1907;
    } else {
      v1908 = 0;
      v1909 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1908 += Math.random() * 2 - 1;
      v1909 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1908, v2885.ⲆΔⵠ.y + this.y + v1909);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[255][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1589][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f371() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1910 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
      var v1911 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1910;
      var v1912 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1910;
    } else {
      v1911 = 0;
      v1912 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1911 += Math.random() * 2 - 1;
      v1912 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1911, v2885.ⲆΔⵠ.y + this.y + v1912);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[251][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1573][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f372() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (this.info & 31 && this.info & 992 && ~this.info & 31744 && (this.ⵠΔΔᐃⲆ.length == 0 || this.ⵠΔΔᐃⲆ[this.ⵠΔΔᐃⲆ.length - 1] <= v624.ᐃᐃⵠᐃⲆΔⵠ)) {
      this.ⵠΔΔᐃⲆ.push(v624.ΔᐃⲆⵠᐃⵠⵠ);
    }
    for (var v1913 = 0; this.ⵠΔΔᐃⲆ.length > v1913; v1913++) {
      this.ⵠΔΔᐃⲆ[v1913] = Math.max(0, this.ⵠΔΔᐃⲆ[v1913] - v3116 * v624.ⵠΔⵠⵠⵠⲆΔ);
      v419.globalAlpha = this.ⵠΔΔᐃⲆ[v1913] / 1.3;
      var v1914 = (1 - this.ⵠΔΔᐃⲆ[v1913]) * 40;
      var v1915 = (1 - this.ⵠΔΔᐃⲆ[v1913]) * 35 + 10;
      f93(v419, v427 * -68 + Math.sin(-this.angle - Math.PI / 2) * v1914, v427 * -20 + v1914 * Math.cos(-this.angle - Math.PI / 2), v1915);
      f90(v419, "#333333");
    }
    v419.globalAlpha = 1;
    if (this.ⵠΔΔᐃⲆ.length > 0 && this.ⵠΔΔᐃⲆ[0] === 0) {
      this.ⵠΔΔᐃⲆ.shift();
    }
    v419.restore();
  }
  function f373() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ⲆⵠΔᐃΔ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[398][v2884.time];
    ⵠⲆⵠ = this.ⲆⵠΔᐃΔ.ⵠᐃᐃ * -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height * this.ⲆⵠΔᐃΔ.ⵠᐃᐃ;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    this.ᐃⲆⵠⵠⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[399][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width * this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ * -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f374() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVVV31;
      }
      var v1916 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1917 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1916;
      var v1918 = v1916 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1917 = 0;
      v1918 = 0;
    }
    var v1919 = this.info & 15;
    if (this.info === 10 || v1919 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1920 = ΔΔ[1261][v2884.time];
      } else {
        v1920 = ΔΔ[320][v2884.time];
      }
      var v1921 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1920.width;
      var v1922 = -v1920.height * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      f304(v419, v1920, -v1921 / 2 + v1917, -v1922 / 2 + v1918, v1921, v1922);
    } else {
      if (this.info & 16) {
        v1920 = ΔΔ[1262][v2884.time];
      } else {
        v1920 = ΔΔ[321][v2884.time];
      }
      v419.translate(0, v1920.height / 2);
      f304(v419, v1920, v1917 - v1920.width / 2, -v1920.height + v1918);
    }
    v419.restore();
  }
  function f375() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    var v1923 = ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r);
    this.scale = v1923 > 350 ? Math.min(this.scale + v3116 / 2, 1.8) : Math.max(this.scale - v3116, 1);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    this.ΔᐃⵠΔ = v1923 < 350 ? Math.max(0, this.ΔᐃⵠΔ - v3116 * 2.2) : Math.min(1, this.ΔᐃⵠΔ + v3116 * 2.2);
    v1924 = (this.info & 1) === 0 ? ΔΔ[1421][v2884.time] : ΔΔ[1422][v2884.time];
    ⵠⲆⵠ = this.scale * (-v1924.width * this.ΔΔΔⵠ.ⵠᐃᐃ);
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.height);
    v419.globalAlpha = 1 - this.ΔᐃⵠΔ;
    f304(v419, v1924, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    v1924 = this.info & 1 ? ΔΔ[1406][v2884.time] : ΔΔ[345][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.width * this.scale;
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.height);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1924, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = (1 - this.ΔᐃⵠΔ) * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      var v1924 = ΔΔ[1423];
      ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.width * this.scale;
      ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.height);
      f304(v419, v1924, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = (0.6 - this.ΔΔΔ.ⵠᐃᐃ) * this.ΔᐃⵠΔ;
      v1924 = ΔΔ[1415];
      ⵠⲆⵠ = this.scale * (-v1924.width * this.ΔΔΔⵠ.ⵠᐃᐃ);
      ΔᐃⲆ = -v1924.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
      f304(v419, v1924, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1924 = this.info & 1 ? ΔΔ[1409][v2884.time] : ΔΔ[1410][v2884.time];
    ⵠⲆⵠ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.width);
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1924.height);
    v419.save();
    v419.translate(v427 * -20, v427 * 0);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1924, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = (0.6 - this.ΔΔΔ.ⵠᐃᐃ) * this.ΔᐃⵠΔ;
      v1924 = ΔΔ[1416];
      f304(v419, v1924, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1924 = this.info & 1 ? ΔΔ[1412][v2884.time] : ΔΔ[1413][v2884.time];
    v419.save();
    v419.translate(v427 * 20, v427 * 0);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    v419.globalAlpha = this.ΔᐃⵠΔ;
    f304(v419, v1924, v427 * -ⵠⲆⵠ / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = this.ΔᐃⵠΔ * (0.6 - this.ΔΔΔ.ⵠᐃᐃ);
      v1924 = ΔΔ[1417];
      f304(v419, v1924, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.globalAlpha = 1;
    v419.restore();
    v419.restore();
  }
  function f376() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3116 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3116, 1);
    }
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    v1925 = ΔΔ[587][v2884.time];
    ⵠⲆⵠ = -v1925.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1925.height * this.scale;
    f304(v419, v1925, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1925 = ΔΔ[601];
      f304(v419, v1925, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v1925 = ΔΔ[589][v2884.time];
    ⵠⲆⵠ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1925.width);
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1925.height * this.scale;
    v419.save();
    v419.translate(v427 * -30, v427 * 70);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    f304(v419, v1925, v427 * -10, v427 * -40, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1925 = ΔΔ[604];
      f304(v419, v1925, v427 * -10, v427 * -40, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1925 = ΔΔ[590][v2884.time];
    v419.save();
    v419.translate(v427 * 30, v427 * 70);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    f304(v419, v1925, v427 * 10 - ⵠⲆⵠ, v427 * -40, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1925 = ΔΔ[605];
      f304(v419, v1925, v427 * 10 - ⵠⲆⵠ, v427 * -40, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.restore();
  }
  function f377() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ᐃⲆⵠⵠⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[399][v2884.time];
    ⵠⲆⵠ = this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ * -Δᐃ.width;
    ΔᐃⲆ = -Δᐃ.height * this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f378() {
    if (~this.info & 1) {
      this.ᐃΔᐃΔᐃ = Math.max(this.ᐃΔᐃΔᐃ - v3116, 0);
      this.ⵠⵠΔⵠⵠⵠⵠ += v3116;
      if (this.ⵠⵠΔⵠⵠⵠⵠ > 0.1) {
        this.ⵠⵠΔⵠⵠⵠⵠ = 0;
        var v1926 = {
          x: this.x + Math.random() * 60 - 30,
          y: this.y + Math.random() * 60 - 30,
          a: 0,
          r: Math.random() * 30 + 30
        };
        this.ⲆⲆᐃᐃ.push(v1926);
      }
    } else {
      this.ᐃΔᐃΔᐃ = Math.min(this.ᐃΔᐃΔᐃ + v3116, 2.2);
    }
    for (var v1927 = 0; this.ⲆⲆᐃᐃ.length > v1927; v1927++) {
      v1926 = this.ⲆⲆᐃᐃ[v1927];
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + v1926.x, v2885.ⲆΔⵠ.y + v1926.y);
      v1926.a = Math.min(1, 0 + v3116 / 2);
      var v1928 = 0;
      if (v1928 < 0.2) {
        v1928 *= 5;
      } else {
        v1928 = v1928 > 0.8 ? (1 - v1928) * 5 : 1;
      }
      v419.globalAlpha = v1928 * 0.8;
      f93(v419, 0, 0, v1926.r);
      f90(v419, v624.ⵠᐃᐃΔΔⲆⵠ[v2884.time]);
      v419.restore();
      if (0 === 1) {
        this.ⲆⲆᐃᐃ.splice(v1927, 1);
        v1927--;
      }
    }
  }
  function f379() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
    v419.globalAlpha = 0.3;
    var v1929 = ΔΔ[392][v2884.time];
    var v1930 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1929.width;
    var v1931 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1929.height;
    f304(v419, v1929, -v1930 / 2, -v1931 / 2, v1930, v1931);
    v419.globalAlpha = 1;
    v419.restore();
  }
  function f380() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3116 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3116, 1);
    }
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    v1932 = this.info === 0 ? ΔΔ[342][v2884.time] : ΔΔ[1376][v2884.time];
    ⵠⲆⵠ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1932.width);
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1932.height * this.scale;
    f304(v419, v1932, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == vV313) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1932 = ΔΔ[1385];
      f304(v419, v1932, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1932 = this.info === 0 ? ΔΔ[1380][v2884.time] : ΔΔ[1379][v2884.time];
    ⵠⲆⵠ = -v1932.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1932.height);
    v419.save();
    v419.translate(v427 * -40, v427 * 10);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    f304(v419, v1932, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1932 = ΔΔ[1386];
      f304(v419, v1932, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1932 = this.info === 0 ? ΔΔ[1383][v2884.time] : ΔΔ[1382][v2884.time];
    v419.save();
    v419.translate(v427 * 40, v427 * 10);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    f304(v419, v1932, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1932 = ΔΔ[1387];
      f304(v419, v1932, -ⵠⲆⵠ * v427 / 4, v427 * -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.restore();
  }
  function f381() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == vV312) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV31;
      }
      var v1933 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1934 = v1933 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1935 = v1933 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1934 = 0;
      v1935 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1934 += Math.random() * 2 - 1;
      v1935 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1934, v2885.ⲆΔⵠ.y + this.y + v1935);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[246][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1553][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f382() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1936 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1937 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1936;
      var v1938 = v1936 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1937 = 0;
      v1938 = 0;
    }
    var v1939 = this.info & 15;
    if (this.info === 10 || v1939 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1940 = ΔΔ[887][v2884.time];
      } else {
        v1940 = ΔΔ[225][v2884.time];
      }
      var v1941 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1940.width;
      var v1942 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1940.height;
      f304(v419, v1940, -v1941 / 2 + v1937, -v1942 / 2 + v1938, v1941, v1942);
    } else {
      this.ΔᐃᐃΔⵠᐃⲆ.ᐃⲆⲆ();
      if (this.info & 16) {
        v1940 = ΔΔ[857][v2884.time];
      } else {
        v1940 = ΔΔ[227][v2884.time];
      }
      v419.translate(0, v1940.height / 2);
      v419.rotate(this.ΔᐃᐃΔⵠᐃⲆ.ⵠᐃᐃ);
      f304(v419, v1940, v1937 - v1940.width / 2, -v1940.height + v1938);
    }
    v419.restore();
  }
  function f383() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV3152;
      }
      var v1943 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1944 = v1943 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1945 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1943;
    } else {
      v1944 = 0;
      v1945 = 0;
    }
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1944, v2885.ⲆΔⵠ.y + this.y + v1945);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[228][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f384(p1253, p1254) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    v1946 = ΔΔ[p1253][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1946.width;
    ΔᐃⲆ = -v1946.height * this.ΔΔΔⵠ.ⵠᐃᐃ;
    f304(v419, v1946, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1946 = ΔΔ[p1254];
      f304(v419, v1946, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f385() {
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1947 = this.info === 0 ? ΔΔ[1350][v2884.time] : ΔΔ[1352][v2884.time];
    ⵠⲆⵠ = -v1947.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1947.height;
    f304(v419, v1947, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && vVVV31 == this.ΔΔΔ.ⲆⲆΔ) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1947 = ΔΔ[1353];
      f304(v419, v1947, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f386() {
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    v1948 = this.info === 0 ? ΔΔ[1323][v2884.time] : ΔΔ[1331][v2884.time];
    ⵠⲆⵠ = -v1948.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1948.height;
    f304(v419, v1948, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && vVVV31 == this.ΔΔΔ.ⲆⲆΔ) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1948 = ΔΔ[1325];
      f304(v419, v1948, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
  }
  function f387() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == v31) {
        this.ΔΔΔ.ᐃⲆⲆ = vVV3152;
      }
      var v1949 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1950 = v1949 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1951 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1949;
    } else {
      v1950 = 0;
      v1951 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1950 += Math.random() * 2 - 1;
      v1951 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1950, v2885.ⲆΔⵠ.y + this.y + v1951);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[249][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1565][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f388() {
    if (!(this.info < 10)) {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vV315 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
          this.ΔΔΔ.ᐃⲆⲆ = false;
        }
        var v1952 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
        var v1953 = v1952 * Math.sin(this.ΔΔΔ.angle - this.angle);
        var v1954 = v1952 * Math.cos(this.ΔΔΔ.angle - this.angle);
      } else {
        v1953 = 0;
        v1954 = 0;
      }
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      var v1955 = ΔΔ[206][v2884.time];
      var v1956 = -v1955.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      var v1957 = -v1955.height * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      f304(v419, v1955, -v1956 / 2 + v1953, -v1957 / 2 + v1954, v1956, v1957);
      v419.restore();
    }
  }
  function f389() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1958 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1959 = v1958 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1960 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1958;
    } else {
      v1959 = 0;
      v1960 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1959 += Math.random() * 2 - 1;
      v1960 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1959, v2885.ⲆΔⵠ.y + this.y + v1960);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[252][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1577][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f390() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vVVV316 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1961 = (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * v3116 * 600 * v427;
      var v1962 = Math.sin(this.ΔΔΔ.angle - this.angle) * v1961;
      var v1963 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1961;
    } else {
      v1962 = 0;
      v1963 = 0;
    }
    var v1964 = this.info & 15;
    if (this.info === 10 || v1964 === 0) {
      v419.rotate(this.angle);
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      if (this.info & 16) {
        var v1965 = ΔΔ[1061][v2884.time];
      } else {
        v1965 = ΔΔ[290][v2884.time];
      }
      var v1966 = -v1965.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      var v1967 = -v1965.height * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      f304(v419, v1965, -v1966 / 2 + v1962, -v1967 / 2 + v1963, v1966, v1967);
    } else {
      if (this.info & 16) {
        v1965 = ΔΔ[1062][v2884.time];
      } else {
        v1965 = ΔΔ[291][v2884.time];
      }
      v419.translate(0, v1965.height / 2);
      f304(v419, v1965, v1962 - v1965.width / 2, -v1965.height + v1963);
    }
    v419.restore();
  }
  function f391() {
    if (this.ΔΔΔ.ᐃⲆⲆ) {
      if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ == 0) {
        this.ΔΔΔ.ᐃⲆⲆ = false;
      }
      var v1968 = v427 * (v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600);
      var v1969 = v1968 * Math.sin(this.ΔΔΔ.angle - this.angle);
      var v1970 = v1968 * Math.cos(this.ΔΔΔ.angle - this.angle);
    } else {
      v1969 = 0;
      v1970 = 0;
    }
    v419.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1969 += Math.random() * 2 - 1;
      v1970 += Math.random() * 2 - 1;
    }
    v419.translate(v2885.ⲆΔⵠ.x + this.x + v1969, v2885.ⲆΔⵠ.y + this.y + v1970);
    v419.rotate(this.angle);
    Δᐃ = ΔΔ[247][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3116 * 3) % (Math.PI * 2);
    }
    v419.rotate(this.rotate);
    Δᐃ = ΔΔ[1557][v2884.time];
    f304(v419, Δᐃ, -Δᐃ.width / 2, -Δᐃ.height / 2);
    v419.restore();
  }
  function f392() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    if (ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3116 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3116, 1);
    }
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    this.rotate.ᐃⲆⲆ();
    v1971 = ΔΔ[588][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -v1971.width * this.scale;
    ΔᐃⲆ = this.scale * (this.ΔΔΔⵠ.ⵠᐃᐃ * -v1971.height);
    f304(v419, v1971, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == vVV316) {
        this.action -= 2;
      }
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      var v1971 = ΔΔ[602];
      f304(v419, v1971, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v1971 = ΔΔ[591][v2884.time];
    ⵠⲆⵠ = -v1971.width * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    ΔᐃⲆ = -v1971.height * this.ΔΔΔⵠ.ⵠᐃᐃ * this.scale;
    v419.save();
    v419.translate(v427 * -60, v427 * 20);
    v419.rotate(this.rotate.ⵠᐃᐃ);
    f304(v419, v1971, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1971 = ΔΔ[606];
      f304(v419, v1971, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v1971 = ΔΔ[592][v2884.time];
    v419.save();
    v419.translate(v427 * 60, v427 * 20);
    v419.rotate(-this.rotate.ⵠᐃᐃ);
    f304(v419, v1971, -ⵠⲆⵠ * v427 / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
    if (this.action & 2) {
      v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
      v1971 = ΔΔ[607];
      f304(v419, v1971, v427 * -ⵠⲆⵠ / 4, -ΔᐃⲆ * v427 / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
      v419.globalAlpha = 1;
    }
    v419.restore();
    v419.restore();
  }
  function f393() {
    if (!(this.info < 10)) {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.angle);
      if (this.ΔΔΔ.ᐃⲆⲆ) {
        if (this.ΔΔΔ.ᐃⲆᐃᐃ.ᐃⲆⲆ() && vVVV31 == this.ΔΔΔ.ᐃⲆᐃᐃ.ⲆⲆΔ) {
          this.ΔΔΔ.ᐃⲆⲆ = false;
        }
        var v1972 = v3116 * (1 - this.ΔΔΔ.ᐃⲆᐃᐃ.ⵠᐃᐃ) * 600 * v427;
        var v1973 = v1972 * Math.sin(this.ΔΔΔ.angle - this.angle);
        var v1974 = Math.cos(this.ΔΔΔ.angle - this.angle) * v1972;
      } else {
        v1973 = 0;
        v1974 = 0;
      }
      this.ⲆⲆᐃᐃ.ᐃⲆⲆ();
      var v1975 = ΔΔ[316][v2884.time];
      var v1976 = -v1975.width * this.ⲆⲆᐃᐃ.ⵠᐃᐃ;
      var v1977 = this.ⲆⲆᐃᐃ.ⵠᐃᐃ * -v1975.height;
      f304(v419, v1975, -v1976 / 2 + v1973, -v1977 / 2 + v1974, v1976, v1977);
      v419.restore();
    }
  }
  function f394(p1255) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[p1255][v2884.time];
    ⵠⲆⵠ = this.ΔΔΔⵠ.ⵠᐃᐃ * -Δᐃ.width;
    ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -Δᐃ.height;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  function f395() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ᐃΔⵠΔⵠᐃΔ = Math.min(1, this.ᐃΔⵠΔⵠᐃΔ + v3116 * 2);
    v419.globalAlpha = this.ᐃΔⵠΔⵠᐃΔ * Math.min(1, Math.max(0, ⵠⲆⲆ.ᐃⵠᐃⲆ(this, this.r) / 80));
    this.ΔΔΔⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[357][v2884.time][this.ⲆᐃᐃᐃΔⵠⵠ];
    if (this.ⲆᐃᐃᐃΔⵠⵠ < 2) {
      ⵠⲆⵠ = -Δᐃ.width * this.ΔΔΔⵠ.ⵠᐃᐃ;
      ΔᐃⲆ = this.ΔΔΔⵠ.ⵠᐃᐃ * -Δᐃ.height;
    } else if (this.ΔⲆΔᐃΔⲆⲆ === 0) {
      ⵠⲆⵠ = -Δᐃ.width;
      ΔᐃⲆ = -Δᐃ.height;
    } else {
      ⵠⲆⵠ = -Δᐃ.width * 1.35;
      ΔᐃⲆ = -Δᐃ.height * 1.35;
    }
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.globalAlpha = 1;
    v419.restore();
  }
  function f396() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    v419.rotate(this.angle);
    this.ᐃⲆⵠⵠⵠ.ᐃⲆⲆ();
    Δᐃ = ΔΔ[664][v2884.time];
    ⵠⲆⵠ = -Δᐃ.width * this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ;
    ΔᐃⲆ = -Δᐃ.height * this.ᐃⲆⵠⵠⵠ.ⵠᐃᐃ;
    f304(v419, Δᐃ, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
    v419.restore();
  }
  (function f397() {
    const v1978 = {
      ᐃΔΔᐃΔᐃⲆⲆᐃ: 0
    };
    let v1979 = 0;
    for (let v1980 in v1978) {
      v1979 = v1980;
    }
    const v1981 = [];
    for (let v1982 = 0; v1982 < 12; v1982++) {
      v1981.push(vWindow.Math.floor(1 + vWindow.Math.random() * 10));
    }
    let v1983 = "for (let " + v1979 + " = 0 ; " + v1979 + " < " + v1981[0] + " ; " + v1979 + "++) {";
    for (let v1984 = 0; v1984 < v1981[1]; v1984++) {
      v1983 += v1981[v1984] + ";debugger;";
    }
    for (let v1985 = 0; v1985 < v1981[2]; v1985++) {
      v1983 += "debugger;";
    }
    v1983 += "}";
    const v1986 = new vWindow.Function(v1983);
    vWindow.setTimeout(f397, 10000);
    v1986();
  })();
  function f398(p1256) {
    if (p1256 > 0) {
      var v1987 = ΔΔ[p1256][v2884.time];
      switch (p1256) {
        case 104:
          f430(p1256, v1987, -v1987.width / 2 + v427 * 2, -v1987.height / 2 - v427 * 5);
          break;
        case 10:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 18);
          break;
        case 11:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 10);
          break;
        case 32:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 19);
          break;
        case 33:
          f416(p1256, v1987, -v1987.width / 4, -v1987.height / 4 - v427 * 20);
          break;
        case 34:
          f430(p1256, v1987, -v1987.width / 2 - v427 * 1, -v1987.height / 2 - v427 * 23);
          break;
        case 35:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 5);
          break;
        case 36:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 2);
          break;
        case 70:
          f430(p1256, v1987, -v1987.width / 2 + v427 * 1.5, -v1987.height / 2 - v427 * 1);
          break;
        case 71:
        case 29:
        case 30:
        case 31:
        case 153:
        case 154:
        case 155:
        case 106:
        case 163:
        case 161:
        case 160:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
          f416(p1256, v1987, -v1987.width / 4, -v1987.height / 4 + v427 * 2);
          break;
        case 68:
        case 69:
          f430(p1256, v1987, -v1987.width / 2 - v427 * 5, -v1987.height / 2 - v427 * 2);
          break;
        case 67:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 2);
          break;
        case 158:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 2);
          break;
        case 84:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 2);
          break;
        case 83:
          f430(p1256, v1987, -v1987.width / 2 + v427 * 2, -v1987.height / 2);
          break;
        case 105:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 5);
          break;
        case 150:
        case 151:
        case 152:
          f430(p1256, v1987, -v1987.width / 2 - v427 * 1, -v1987.height / 2);
          break;
        case 156:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 + v427 * 2);
          break;
        case 157:
        case 159:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 + v427 * 8);
          break;
        case 107:
          f430(p1256, v1987, -v1987.width / 2, -v1987.height / 2 - v427 * 4);
      }
    }
  }
  function f399() {
    if (!this.ⵠⲆᐃⲆΔ && this.ΔⵠΔΔ !== 0) {
      if (this.x != this.r.x || this.r.y != this.y) {
        var v1988 = (ⵠⲆⲆ.ΔᐃⵠΔᐃⵠΔ(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (Math.PI * 2);
        this.ⵠⲆⲆᐃⵠ = ⵠⲆⲆ.Ⲇᐃᐃⵠⵠᐃᐃ(v1988, this.ⵠⲆⲆᐃⵠ);
        this.ⵠⲆⲆᐃⵠ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ⵠⲆⲆᐃⵠ, v1988, 0.018);
      }
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v419.rotate(this.ⵠⲆⲆᐃⵠ);
      if (this.ΔⵠΔΔ === 333) {
        if (this.ⲆⵠΔⲆᐃ > 50 || this.ᐃΔⵠⲆ > 0) {
          if (this.ⲆⵠΔⲆᐃ > 50) {
            this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116);
          } else {
            this.ᐃΔⵠⲆ = Math.max(0, this.ᐃΔⵠⲆ - v3116);
          }
          v419.globalAlpha = this.ᐃΔⵠⲆ;
          var v1989 = ΔΔ[335][v2884.time];
          f416(335, v1989, -v1989.width / 4, -v1989.height / 4);
          v419.globalAlpha = 1;
        }
        v1989 = ΔΔ[333][v2884.time];
        f416(333, v1989, -v1989.width / 4, -v1989.height / 4);
      } else if (this.ΔⵠΔΔ === 339) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        this.ΔᐃⵠⲆᐃ.ᐃⲆⲆ();
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0.1, this.ᐃΔⵠⲆ - v3116);
        }
        v1989 = ΔΔ[1408][v2884.time];
        f416(1408, v1989, -v1989.width / 4, -v1989.height / 4);
        v1989 = ΔΔ[1411][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        v419.save();
        v419.translate(v427 * -20, v427 * -20);
        v419.rotate(this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ * this.ᐃΔⵠⲆ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
        v1989 = ΔΔ[1414][v2884.time];
        v419.save();
        v419.translate(v427 * 20, v427 * -20);
        v419.rotate(-this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ * this.ᐃΔⵠⲆ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
      } else if (this.ΔⵠΔΔ === 355) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        this.ΔᐃⵠⲆᐃ.ᐃⲆⲆ();
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0.1, this.ᐃΔⵠⲆ - v3116);
        }
        v1989 = ΔΔ[1429][v2884.time];
        f416(1429, v1989, -v1989.width / 4, -v1989.height / 4);
        v1989 = ΔΔ[1432][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        v419.save();
        v419.translate(v427 * -20, v427 * -20);
        v419.rotate(this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ * this.ᐃΔⵠⲆ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
        v1989 = ΔΔ[1435][v2884.time];
        v419.save();
        v419.translate(v427 * 20, v427 * -20);
        v419.rotate(this.ᐃΔⵠⲆ * -this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
      } else if (this.ΔⵠΔΔ === 354) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        this.ΔᐃⵠⲆᐃ.ᐃⲆⲆ();
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0.1, this.ᐃΔⵠⲆ - v3116);
        }
        v1989 = ΔΔ[1447][v2884.time];
        f416(1447, v1989, -v1989.width / 4, -v1989.height / 4);
        v1989 = ΔΔ[1450][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        v419.save();
        v419.translate(v427 * -20, v427 * -20);
        v419.rotate(this.ᐃΔⵠⲆ * this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
        v1989 = ΔΔ[1453][v2884.time];
        v419.save();
        v419.translate(v427 * 20, v427 * -20);
        v419.rotate(this.ᐃΔⵠⲆ * -this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
      } else if (this.ΔⵠΔΔ === 338) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        this.ΔᐃⵠⲆᐃ.ᐃⲆⲆ();
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0.1, this.ᐃΔⵠⲆ - v3116);
        }
        v1989 = ΔΔ[1393][v2884.time];
        f416(1393, v1989, -v1989.width / 4, -v1989.height / 4);
        v1989 = ΔΔ[1396][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        v419.save();
        v419.translate(v427 * -40, v427 * -45);
        v419.rotate(this.ᐃΔⵠⲆ * this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
        v1989 = ΔΔ[1399][v2884.time];
        v419.save();
        v419.translate(v427 * 40, v427 * -45);
        v419.rotate(-this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ * this.ᐃΔⵠⲆ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
      } else if (this.ΔⵠΔΔ === 337) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        this.ΔᐃⵠⲆᐃ.ᐃⲆⲆ();
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0.1, this.ᐃΔⵠⲆ - v3116);
        }
        v1989 = ΔΔ[1378][v2884.time];
        f416(1378, v1989, -v1989.width / 4, -v1989.height / 4);
        v1989 = ΔΔ[1381][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        v419.save();
        v419.translate(v427 * -40, v427 * -45);
        v419.rotate(this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ * this.ᐃΔⵠⲆ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
        v1989 = ΔΔ[1384][v2884.time];
        v419.save();
        v419.translate(v427 * 40, v427 * -45);
        v419.rotate(this.ᐃΔⵠⲆ * -this.ΔᐃⵠⲆᐃ.ⵠᐃᐃ);
        f304(v419, v1989, -ⵠⲆⵠ / 4, -ΔᐃⲆ / 4, ⵠⲆⵠ / 2, ΔᐃⲆ / 2);
        v419.restore();
      } else if (this.ΔⵠΔΔ === 164) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        v1989 = ΔΔ[164][v2884.time];
        f416(164, v1989, -v1989.width / 4, -v1989.height / 4);
      } else if (this.ΔⵠΔΔ === 340) {
        this.ᐃΔⲆⲆⲆ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(this.ᐃΔⲆⲆⲆ, this.ⲆⵠΔⲆᐃ, 0.018);
        v1989 = ΔΔ[346][v2884.time];
        f416(346, v1989, -v1989.width / 4, -v1989.height / 4);
      } else if (this.ΔⵠΔΔ === 334) {
        v1989 = ΔΔ[334][v2884.time];
        f416(334, v1989, -v1989.width / 4, -v1989.height / 4);
      } else if (this.ΔⵠΔΔ === 349) {
        v1989 = ΔΔ[1612][v2884.time];
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0, this.ᐃΔⵠⲆ - v3116);
        }
        this.ⲆᐃᐃⲆⲆ += v3116 * 60;
        if (this.ⲆᐃᐃⲆⲆ > 60) {
          this.ⲆᐃᐃⲆⲆ -= 60;
        }
        var v1990 = this.ᐃΔⵠⲆ * ((this.ⲆᐃᐃⲆⲆ < 30 ? this.ⲆᐃᐃⲆⲆ / 30 : 1 - (this.ⲆᐃᐃⲆⲆ - 30) / 30) * 12 - 6);
        f416(1612, v1989, -v1989.width / 4, -v1989.height / 4 + v1990);
      } else if (this.ΔⵠΔΔ === 335) {
        v1989 = ΔΔ[1351][v2884.time];
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0, this.ᐃΔⵠⲆ - v3116);
        }
        this.ⲆᐃᐃⲆⲆ += v3116 * 60;
        if (this.ⲆᐃᐃⲆⲆ > 60) {
          this.ⲆᐃᐃⲆⲆ -= 60;
        }
        v1990 = this.ᐃΔⵠⲆ * ((this.ⲆᐃᐃⲆⲆ < 30 ? this.ⲆᐃᐃⲆⲆ / 30 : 1 - (this.ⲆᐃᐃⲆⲆ - 30) / 30) * 12 - 6);
        f416(1351, v1989, -v1989.width / 4, -v1989.height / 4 + v1990);
      } else if (this.ΔⵠΔΔ === 358) {
        v1989 = ΔΔ[1327][v2884.time];
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0, this.ᐃΔⵠⲆ - v3116);
        }
        this.ⲆᐃᐃⲆⲆ += v3116 * 60;
        if (this.ⲆᐃᐃⲆⲆ > 60) {
          this.ⲆᐃᐃⲆⲆ -= 60;
        }
        v1990 = this.ᐃΔⵠⲆ * ((this.ⲆᐃᐃⲆⲆ < 30 ? this.ⲆᐃᐃⲆⲆ / 30 : 1 - (this.ⲆᐃᐃⲆⲆ - 30) / 30) * 12 - 6);
        f416(1327, v1989, -v1989.width / 4, -v1989.height / 4 + v1990);
      } else if (this.ΔⵠΔΔ === 336) {
        var v1991 = Math.PI / 2;
        var v1992 = Math.PI / 4;
        v1989 = ΔΔ[1363][v2884.time];
        if (this.ⲆⵠΔⲆᐃ > 85) {
          this.ᐃΔⵠⲆ = Math.min(1, this.ᐃΔⵠⲆ + v3116 / 4);
        } else {
          this.ᐃΔⵠⲆ = Math.max(0, this.ᐃΔⵠⲆ - v3116);
        }
        this.ⲆᐃᐃⲆⲆ += v3116 * 60;
        if (this.ⲆᐃᐃⲆⲆ > 60) {
          this.ⲆᐃᐃⲆⲆ -= 60;
        }
        v1990 = this.ᐃΔⵠⲆ * ((this.ⲆᐃᐃⲆⲆ < 30 ? this.ⲆᐃᐃⲆⲆ / 30 : 1 - (this.ⲆᐃᐃⲆⲆ - 30) / 30) * 12 - 6);
        f416(1363, v1989, -v1989.width / 4 + v1990, -v1989.height / 4);
        v419.restore();
        v419.save();
        v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
        v419.rotate(Math.PI + this.ⵠⲆⲆᐃⵠ + v1992);
        v419.translate(120, v1990);
        v419.rotate(v1991);
        v1989 = ΔΔ[1368][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        f304(v419, v1989, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
        v419.restore();
        v419.save();
        v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
        v419.rotate(Math.PI + this.ⵠⲆⲆᐃⵠ + v1991 + v1992);
        v419.translate(120, v1990);
        v419.rotate(v1991);
        v1989 = ΔΔ[1371][v2884.time];
        ⵠⲆⵠ = -v1989.width;
        ΔᐃⲆ = -v1989.height;
        f304(v419, v1989, -ⵠⲆⵠ / 2, -ΔᐃⲆ / 2, ⵠⲆⵠ, ΔᐃⲆ);
      }
      v419.restore();
    }
  }
  function f400() {
    if (this.enabled && this.ᐃΔᐃᐃⲆ >= 0) {
      var v1993 = new Date().getTime() - this.ᐃΔᐃᐃⲆ;
      var v1994 = v1993 % 1000 / 1000;
      if (v1994 > 0.5) {
        v1994 = 1 - (v1994 - 0.5) * 2;
      } else {
        v1994 *= 2;
      }
      v1993 = Math.floor(v1993 / 1000);
      if (v1993 < 60) {
        v1993 = 60 - v1993;
        if (!this.label) {
          this.label = f166(v427, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        if (this.now != v1993 || !this.ΔⲆⵠΔⲆᐃΔ) {
          this.now = v1993;
          this.ΔⲆⵠΔⲆᐃΔ = f166(v427, "" + v1993, 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        f304(v419, this.label, (v420 - this.label.width) / 2, v427 * 100);
        v419.globalAlpha = v1994;
        f304(v419, this.ΔⲆⵠΔⲆᐃΔ, (v420 - this.label.width) / 2 - this.ΔⲆⵠΔⲆᐃΔ.width + v427 * 15, v427 * 100);
        v419.globalAlpha = 1;
      }
    }
  }
  function f401(p1257, p1258, p1259) {
    if (p1258.ᐃⲆᐃⵠⲆⲆⲆ() !== 1) {
      return p1258;
    }
    var v1995 = ΔᐃΔΔⲆᐃΔ[p1259][p1257];
    if (vVVVVUndefined823 === v1995) {
      var v1996 = (v1995 = document.createElement("canvas")).getContext("2d");
      var v1997 = p1258.width;
      var v1998 = p1258.height;
      v1995.width = v1997;
      v1995.height = v1998;
      v1996.drawImage(p1258, 0, 0);
      v1996.globalCompositeOperation = "source-in";
      v1996.fillStyle = ΔΔᐃⲆᐃⵠⲆᐃΔ[p1259];
      v1996.fillRect(0, 0, v1997, v1998);
      ΔᐃΔΔⲆᐃΔ[p1259][p1257] = v1995;
    }
    return v1995;
  }
  function f402() {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
    if (this.text.length > 0) {
      for (var v1999 = 0; this.text.length > v1999 && v1999 < 2; v1999++) {
        if (!this.label[v1999]) {
          this.label[v1999] = f92(v427, this.text[v1999]);
          this.ⵠᐃⵠᐃⵠⲆⵠ[v1999] = 0;
          this.ΔⵠᐃΔᐃⵠⲆ[v1999] = 0;
        }
        if (v1999 === 1) {
          this.ΔⵠᐃΔᐃⵠⲆ[0] = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(this.ΔⲆᐃᐃⵠⲆⲆ) * 30;
        }
      }
      this.ⵠᐃⵠᐃⵠⲆⵠ[0] += v3116;
      if (this.text.length > 1) {
        this.ΔⲆᐃᐃⵠⲆⲆ = Math.min(this.ΔⲆᐃᐃⵠⲆⲆ + v3116, 1);
        if (this.ⵠᐃⵠᐃⵠⲆⵠ[0] > 1 && this.ΔⲆᐃᐃⵠⲆⲆ > 0.5) {
          this.ⵠᐃⵠᐃⵠⲆⵠ[1] += v3116;
        }
      }
      for (v1999 = 0; v1999 < this.text.length && v1999 < 2; v1999++) {
        var v2000 = this.ⵠᐃⵠᐃⵠⲆⵠ[v1999];
        if (v2000 > 0) {
          v419.globalAlpha = v2000 < 0.25 ? v2000 * 4 : v2000 > 3.75 ? Math.max((4 - v2000) * 4, 0) : 1;
          f304(v419, this.label[v1999], -this.label[v1999].width / 2, -this.ΔⵠᐃΔᐃⵠⲆ[v1999] + -this.label[v1999].height / 2 - v427 * 110);
        }
      }
      if (this.ⵠᐃⵠᐃⵠⲆⵠ[0] > 4) {
        this.ⵠᐃⵠᐃⵠⲆⵠ.shift();
        this.text.shift();
        this.ΔⵠᐃΔᐃⵠⲆ.shift();
        this.label.shift();
        this.ΔⲆᐃᐃⵠⲆⲆ = 0;
      }
    }
    v419.restore();
  }
  function f403() {
    var v2001 = 0;
    switch (this.right) {
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
        v2001 = 1;
    }
    if (this.ⵠⲆᐃⲆΔ) {
      for (var v2002 = 0; v2002 < this.bubbles.length; v2002++) {
        var v2003 = this.bubbles[v2002];
        if (v2003.ᐃΔΔΔᐃ > 0.5) {
          var v2004 = 1 - (v2003.ᐃΔΔΔᐃ - 0.5) * 2;
        } else {
          v2004 = v2003.ᐃΔΔΔᐃ * 2;
        }
        v419.globalAlpha = v2004;
        var v2005 = ΔΔ[678][v2884.time][v2003.id];
        f304(v419, v2005, v2885.ⲆΔⵠ.x + v2003.x - v2005.width / 2, v2885.ⲆΔⵠ.y + v2003.y - v2005.height / 2);
        v419.globalAlpha = 1;
      }
    } else {
      v419.save();
      v419.translate(v2885.ⲆΔⵠ.x + this.x, v2885.ⲆΔⵠ.y + this.y);
      v2884.ᐃᐃⲆᐃᐃⵠΔⲆᐃ(this);
      if (this.action & 16) {
        (function (p1260) {
          if (p1260.right >= 0) {
            switch (p1260.right) {
              case 85:
                v419.save();
                var v2006 = p1260.attack.ⵠᐃᐃ * -3 / Math.PI;
                if (p1260.attack.ⲆⲆΔ) {
                  var v2007 = -Math.PI / 3 - (Math.PI / 3 + p1260.attack.ⵠᐃᐃ) / 3;
                } else {
                  v2007 = p1260.attack.ⵠᐃᐃ;
                }
                v419.rotate(p1260.angle - Math.PI / 2 + v2007);
                v419.globalAlpha = v2006 / 1.2;
                f93(v419, v427 * -40, v427 * 90, v427 * 5);
                f90(v419, "#0B6A84");
                v419.globalAlpha = v2006 / 1.2;
                f93(v419, v427 * -52, v427 * 100, v427 * 8);
                f90(v419, "#0B6A84");
                v419.globalAlpha = v2006 / 1.2;
                f93(v419, v427 * -30, v427 * 95, v427 * 4);
                f90(v419, "#0B6A84");
                v419.globalAlpha = 1;
                v419.restore();
                break;
              case 82:
              case 86:
              case 87:
              case 88:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 90:
              case 89:
              case 97:
              case 98:
                if (p1260.ΔⲆΔᐃΔⲆⲆ === 1) {
                  break;
                }
                if (p1260.ⵠⵠΔⵠᐃ > 0) {
                  var v2008 = v624.ⵠⵠΔΔⲆΔΔ[v2884.time];
                } else {
                  v2008 = p1260.ⲆⵠᐃⲆᐃⲆⲆ > 0 || p1260.ⵠⵠⵠⵠⵠ > 0 ? v624.ⵠⵠⵠᐃⲆΔⲆ[v2884.time] : v624.ᐃᐃⵠⵠⲆⲆᐃ[v2884.time];
                }
                v2006 = p1260.attack.ⵠᐃᐃ * -3 / Math.PI;
                v2007 = p1260.attack.ⲆⲆΔ ? Math.max(0.5 - v2006 / 2 + 0.5, 0) : Math.max(v2006 / 2, 0);
                if (v2007 === 0) {
                  p1260.ΔⵠΔⲆⲆᐃⵠ = p1260.angle;
                }
                v419.save();
                v419.rotate(p1260.ΔⵠΔⲆⲆᐃⵠ - Math.PI / 2);
                v419.globalAlpha = v2006;
                var v2009 = v427 * 25 + v2007 * 25;
                f93(v419, v2009, v427 * 80, v427 * 15);
                f90(v419, v2008);
                f93(v419, -v2009, v427 * 80, v427 * 15);
                f90(v419, v2008);
                v419.globalAlpha = 1;
                v419.restore();
            }
          }
        })(this);
      }
      v419.save();
      v419.rotate(this.angle - Math.PI / 2);
      if (!(this.action & 16)) {
        if (this.action & 64 || this.ΔⵠΔΔ !== 0) {
          this.ΔΔΔΔᐃᐃΔ.ᐃⲆⲆ();
        } else if (this.action & 32) {
          this.ⲆⵠᐃⵠΔⲆⲆ.ᐃⲆⲆ();
        }
      }
      var v2010;
      var v2011 = this.ΔΔΔΔᐃᐃΔ.ⵠᐃᐃ;
      var v2012 = this.ⲆⵠᐃⵠΔⲆⲆ.ⵠᐃᐃ;
      if (this.ⵠⵠⲆᐃᐃ === 158) {
        v2005 = ΔΔ[1042][v2884.time];
        v2010 = 1042;
      } else if (this.ⵠⵠⲆᐃᐃ === 29) {
        v2005 = ΔΔ[1196][v2884.time];
        v2010 = 1196;
      } else if (this.ⵠⵠⲆᐃᐃ === 30) {
        v2005 = ΔΔ[1200][v2884.time];
        v2010 = 1200;
      } else if (this.ⵠⵠⲆᐃᐃ === 31) {
        v2005 = ΔΔ[1204][v2884.time];
        v2010 = 1204;
      } else if (this.ⵠᐃΔΔᐃᐃⲆ) {
        v2005 = ΔΔ[1071][v2884.time];
        v2010 = 1071;
      } else {
        v2005 = ΔΔ[7][this.ⵠⲆⲆΔ][v2884.time];
        v2010 = 7;
      }
      ⵠᐃᐃΔ = ΔΔ[396][v2884.time];
      var vV2005 = v2005;
      var vV2010 = v2010;
      if (this.action & 16) {
        if (this.attack.ᐃⲆⲆ() && this.attack.ⲆⲆΔ == 0) {
          this.ⵠⵠⲆⲆⵠ = !this.ⵠⵠⲆⲆⵠ;
          this.action -= 16;
          if (this.ᐃⲆⲆΔ == v2885.ᐃⲆⲆΔ) {
            v2885.control.ⵠᐃⲆⲆ = 0;
          }
        }
        if (this.right >= 0) {
          this.ⵠⵠⲆⲆⵠ = true;
        }
        var v2013 = this.ⵠⵠⲆⲆⵠ ? this.attack.ⵠᐃᐃ : -this.attack.ⵠᐃᐃ / 3;
        var v2014 = this.ⵠⵠⲆⲆⵠ ? this.attack.ⵠᐃᐃ / 3 : -this.attack.ⵠᐃᐃ;
        if (this.ⵠᐃΔΔᐃᐃⲆ) {
          v419.save();
          v419.rotate(v2013);
          f430(v2010, v2005, -v2005.width / 2 - (66 + v2011) * v427, -v2005.height / 2 + (5 + v2012) * v427);
          v419.restore();
          v419.save();
          v419.rotate(v2014);
          f430(v2010, v2005, -v2005.width / 2 + (66 + v2011) * v427, -v2005.height / 2 + v427 * (5 + v2012));
          v419.restore();
        } else if (v2001 === 0) {
          if (this.right === 119) {
            v2013 = -ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ(-v2013);
          }
          v419.save();
          v419.rotate(v2013);
          f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 - (49 + v2011) * v427, -ⵠᐃᐃΔ.height / 2 + v427 * (15 + v2012));
          if (this.right === 46) {
            var v2015 = ΔΔ[this.right][this.ⵠᐃⵠᐃᐃ][v2884.time];
            f426(this.right, this.ⵠᐃⵠᐃᐃ, v2015, -v2015.width / 4 - v427 * (62 + v2011), -v2015.height / 4 + v427 * (v2012 + 18));
          } else {
            f364(this.right, v2011, v2012);
          }
          if (v2010 >= 1196) {
            f416(v2010, v2005, -v2005.width / 4 - v427 * (49 + v2011), -v2005.height / 4 + v427 * (11 + v2012));
          } else if (v2010 !== 1042) {
            f426(v2010, this.ⵠⲆⲆΔ, v2005, -v2005.width / 4 - v427 * (49 + v2011), -v2005.height / 4 + v427 * (11 + v2012));
          } else {
            f430(v2010, v2005, -v2005.width / 2 - v427 * (49 + v2011), -v2005.height / 2 + (11 + v2012) * v427);
          }
          v419.restore();
          v419.save();
          v419.rotate(v2014);
          f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 + v427 * (49 + v2011), -ⵠᐃᐃΔ.height / 2 + v427 * (15 + v2012));
          if (v2010 >= 1196) {
            f416(v2010, v2005, -v2005.width / 4 + (49 + v2011) * v427, -v2005.height / 4 + v427 * (11 + v2012));
          } else if (v2010 !== 1042) {
            f426(v2010, this.ⵠⲆⲆΔ, v2005, -v2005.width / 4 + v427 * (49 + v2011), -v2005.height / 4 + (11 + v2012) * v427);
          } else {
            f430(v2010, v2005, -v2005.width / 2 + (49 + v2011) * v427, -v2005.height / 2 + (11 + v2012) * v427);
          }
          v419.restore();
        }
      } else if (this.ⵠᐃΔΔᐃᐃⲆ) {
        f430(v2010, v2005, -v2005.width / 2 - (66 + v2011) * v427, -v2005.height / 2 + (5 + v2012) * v427);
        f430(v2010, v2005, -v2005.width / 2 + v427 * (66 + v2011), -v2005.height / 2 + v427 * (5 + v2012));
      } else if (v2001 === 0) {
        f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 - v427 * (49 + v2011), -ⵠᐃᐃΔ.height / 2 + (15 + v2012) * v427);
        if (this.right === 46) {
          v2015 = ΔΔ[this.right][this.ⵠᐃⵠᐃᐃ][v2884.time];
          f426(this.right, this.ⵠᐃⵠᐃᐃ, v2015, -v2015.width / 4 - (62 + v2011) * v427, -v2015.height / 4 + (v2012 + 18) * v427);
        } else {
          f364(this.right, v2011, v2012);
        }
        if (v2010 >= 1196) {
          f416(v2010, v2005, -v2005.width / 4 - (49 + v2011) * v427, -v2005.height / 4 + (11 + v2012) * v427);
        } else if (v2010 !== 1042) {
          f426(v2010, this.ⵠⲆⲆΔ, v2005, -v2005.width / 4 - v427 * (49 + v2011), -v2005.height / 4 + v427 * (11 + v2012));
        } else {
          f430(v2010, v2005, -v2005.width / 2 - (49 + v2011) * v427, -v2005.height / 2 + (11 + v2012) * v427);
        }
        f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 + v427 * (49 + v2011), -ⵠᐃᐃΔ.height / 2 + (15 + v2012) * v427);
        if (v2010 >= 1196) {
          f416(v2010, v2005, -v2005.width / 4 + (49 + v2011) * v427, -v2005.height / 4 + v427 * (11 + v2012));
        } else if (v2010 !== 1042) {
          f426(v2010, this.ⵠⲆⲆΔ, v2005, -v2005.width / 4 + v427 * (49 + v2011), -v2005.height / 4 + (11 + v2012) * v427);
        } else {
          f430(v2010, v2005, -v2005.width / 2 + (49 + v2011) * v427, -v2005.height / 2 + (11 + v2012) * v427);
        }
      }
      if (this.ⵠᐃᐃΔⵠ && this.ⵠⵠⲆᐃᐃ < 1) {
        v2005 = ΔΔ[47][this.ⵠⵠᐃⲆⵠᐃΔ][v2884.time];
        f426(47, this.ⵠⵠᐃⲆⵠᐃΔ, v2005, -v2005.width / 4, -v2005.height / 4 - v427 * 39);
      }
      if (this.ⵠᐃΔΔᐃᐃⲆ) {
        v2005 = ΔΔ[1069][v2884.time];
        f430(1069, v2005, -v2005.width / 2, -v2005.height / 2);
        this.ⵠΔⲆΔΔΔⲆ.ᐃⲆⲆ();
        v2005 = ΔΔ[1070][v2884.time];
        f430(1070, v2005, -v2005.width / 2, -v2005.height / 2 + this.ⵠΔⲆΔΔΔⲆ.ⵠᐃᐃ);
      } else {
        v2005 = ΔΔ[365][this.ⵠⲆⲆΔ][v2884.time];
        if (this.ⵠⵠⲆᐃᐃ !== 158 && (f426(365, this.ⵠⲆⲆΔ, v2005, -v2005.width / 4, -v2005.height / 4), this.ⲆⲆⵠΔΔ > 0)) {
          v2005 = ΔΔ[1045][this.ⲆⲆⵠΔΔ][v2884.time];
          f426(1045, this.ⲆⲆⵠΔΔ, v2005, -v2005.width / 4, -v2005.height / 4);
        }
      }
      if (this.action & 128) {
        if (this.ⵠⲆΔⲆᐃ.ᐃⲆⲆ() && this.ⵠⲆΔⲆᐃ.ⲆⲆΔ == 0) {
          this.action -= 128;
        }
        v419.globalAlpha = 0.6 - this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ;
        if (this.ⵠᐃΔΔᐃᐃⲆ) {
          v2005 = ΔΔ[1074];
          f304(v419, v2005, -v2005.width / 2, -v2005.height / 2);
        } else {
          v2005 = f401(this.ⵠⲆⲆΔ, ΔΔ[365][this.ⵠⲆⲆΔ][0], ⵠᐃΔᐃⵠΔⲆΔᐃ);
          f304(v419, v2005, v2005.width / 4, v2005.height / 4, -v2005.width / 2, -v2005.height / 2);
        }
        v419.globalAlpha = 1;
      }
      if (this.action & 256) {
        if (this.ΔΔⲆᐃᐃⲆⲆ.ᐃⲆⲆ() && this.ΔΔⲆᐃᐃⲆⲆ.ⲆⲆΔ == 0) {
          this.action -= 256;
        }
        v419.globalAlpha = 0.6 - this.ΔΔⲆᐃᐃⲆⲆ.ⵠᐃᐃ;
        v2005 = ΔΔ[376];
        f304(v419, v2005, -v2005.width / 2, -v2005.height / 2);
        v419.globalAlpha = 1;
      }
      if (this.action & 2) {
        if (this.ΔΔΔ.ᐃⲆⲆ() && this.ΔΔΔ.ⲆⲆΔ == 0) {
          this.action -= 2;
        }
        v419.globalAlpha = 0.6 - this.ΔΔΔ.ⵠᐃᐃ;
        if (this.ⵠᐃΔΔᐃᐃⲆ) {
          v2005 = ΔΔ[1072];
          f304(v419, v2005, -v2005.width / 2, -v2005.height / 2);
        } else {
          v2005 = f401(this.ⵠⲆⲆΔ, ΔΔ[365][this.ⵠⲆⲆΔ][0], ⵠΔⵠⵠΔⵠΔᐃᐃ);
          f304(v419, v2005, v2005.width / 4, v2005.height / 4, -v2005.width / 2, -v2005.height / 2);
        }
        v419.globalAlpha = 1;
      }
      if (this.action & 4) {
        if (this.freeze.ᐃⲆⲆ() && vVV3153 == this.freeze.ⲆⲆΔ) {
          this.action -= 4;
        }
        v419.globalAlpha = 0.6 - this.freeze.ⵠᐃᐃ;
        v2005 = f401(this.ⵠⲆⲆΔ, ΔΔ[365][this.ⵠⲆⲆΔ][0], ᐃΔⵠⵠⲆⲆᐃᐃᐃ);
        f304(v419, v2005, v2005.width / 4, v2005.height / 4, -v2005.width / 2, -v2005.height / 2);
        v419.globalAlpha = 1;
      }
      if (this.action & 8) {
        if (this.ΔⵠᐃΔᐃⲆΔ.ᐃⲆⲆ() && vVV31 == this.ΔⵠᐃΔᐃⲆΔ.ⲆⲆΔ) {
          this.action -= 8;
        }
        v419.globalAlpha = 0.6 - this.ΔⵠᐃΔᐃⲆΔ.ⵠᐃᐃ;
        if (this.ⵠᐃΔΔᐃᐃⲆ) {
          v2005 = ΔΔ[1073];
          f304(v419, v2005, -v2005.width / 2, -v2005.height / 2);
        } else {
          v2005 = f401(this.ⵠⲆⲆΔ, ΔΔ[365][this.ⵠⲆⲆΔ][0], ΔΔⲆⵠᐃⲆⵠΔⲆ);
          f304(v419, v2005, v2005.width / 4, v2005.height / 4, -v2005.width / 2, -v2005.height / 2);
        }
        v419.globalAlpha = 1;
      }
      f398(this.ⵠⵠⲆᐃᐃ);
      if (v2001 === 1) {
        if (this.action & 16) {
          v2011 += this.attack.ⵠᐃᐃ * 15;
        }
        f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 - v427 * 26, -ⵠᐃᐃΔ.height / 2 + v427 * (31 + v2012 + v2011));
        if (vV2010 >= 1196) {
          f416(vV2010, vV2005, -vV2005.width / 4 - v427 * 26, -vV2005.height / 4 + v427 * (27 + v2012 + v2011));
        } else if (vV2010 !== 1042) {
          f426(vV2010, this.ⵠⲆⲆΔ, vV2005, -vV2005.width / 4 - v427 * 26, -vV2005.height / 4 + (27 + v2012 + v2011) * v427);
        } else {
          f430(vV2010, vV2005, -vV2005.width / 2 - v427 * 26, -vV2005.height / 2 + v427 * (27 + v2012 + v2011));
        }
        f430(396, ⵠᐃᐃΔ, -ⵠᐃᐃΔ.width / 2 + v427 * 26, -ⵠᐃᐃΔ.height / 2 + v427 * (31 + v2012 + v2011));
        if (vV2010 >= 1196) {
          f416(vV2010, vV2005, -vV2005.width / 4 + v427 * 26, -vV2005.height / 4 + (27 + v2012 + v2011) * v427);
        } else if (vV2010 !== 1042) {
          f426(vV2010, this.ⵠⲆⲆΔ, vV2005, -vV2005.width / 4 + v427 * 26, -vV2005.height / 4 + (27 + v2012 + v2011) * v427);
        } else {
          f430(vV2010, vV2005, -vV2005.width / 2 + v427 * 26, -vV2005.height / 2 + (27 + v2012 + v2011) * v427);
        }
        f366(this.right, 0, v2012 + v2011);
      }
      v419.restore();
      if (this.ⵠⵠⲆᐃᐃ !== 156 && this.ⵠⵠⲆᐃᐃ !== 158) {
        if (this.ⵠⵠΔⵠᐃ > 0) {
          if (!this.ⲆⲆⵠᐃ.ᐃⲆⲆⲆΔⵠᐃ) {
            this.ⲆⲆⵠᐃ.ᐃⲆⲆⲆΔⵠᐃ = f166(v427, this.ⲆⲆⵠᐃ.ΔΔΔⲆⲆ, 20, "#187484", "#000", 2, null, null, v427 * 300);
          }
          v2005 = this.ⲆⲆⵠᐃ.ᐃⲆⲆⲆΔⵠᐃ;
        } else {
          this.ⲆⲆⵠᐃ.label ||= f166(v427, this.ⲆⲆⵠᐃ.ΔΔΔⲆⲆ, 20, "#FFF", "#000", 2, null, null, v427 * 300);
          v2005 = this.ⲆⲆⵠᐃ.label;
        }
        if (v2884.ⵠⵠᐃ == v624.Δⵠⵠ) {
          v419.globalAlpha = 0.5;
        }
        v2011 = Math.floor(-v2005.width / 2);
        v2012 = Math.floor(-v2005.height / 2 - v427 * 70);
        f304(v419, v2005, v2011, v2012);
        if (this.ⲆⲆⵠᐃ.level > 0) {
          var v2016 = v2011 + v2005.width + 5;
          v2005 = ΔΔ[1161];
          if (vVVVVUndefined82 === ᐃⲆᐃᐃⵠᐃᐃ[this.ⲆⲆⵠᐃ.level]) {
            ᐃⲆᐃᐃⵠᐃᐃ[this.ⲆⲆⵠᐃ.level] = f166(v427, "[" + this.ⲆⲆⵠᐃ.level + "]", 20, "#F9E8A2", "#000", 2, null, null, v427 * 50);
          }
          f304(v419, ᐃⲆᐃᐃⵠᐃᐃ[this.ⲆⲆⵠᐃ.level], v2016, v2012);
        }
        v419.globalAlpha = 1;
      } else {
        v2012 = Math.floor(v427 * -70);
        v2011 = Math.floor(ΔΔ[723].width / 1.5);
      }
      if (v2885.ᐃⵠᐃⵠΔⲆⲆ(this.ᐃΔⲆⵠ)) {
        if (v2885.ΔⲆΔᐃᐃ[0] == this.ᐃΔⲆⵠ) {
          v2005 = ΔΔ[724];
        } else {
          v2005 = ΔΔ[723];
        }
        f304(v419, v2005, v2011 - v2005.width - 5, v2012 - 6);
      }
      v419.restore();
    }
  }
  function f404(p1261, p1262) {
    if (this.text) {
      if (this.timeout.ⲆⲆΔ) {
        v419.globalAlpha = 1 - this.timeout.ⵠᐃᐃ;
      } else {
        v419.globalAlpha = 1;
      }
      if (!this.label) {
        this.label = f166(v427, this.text, 40, p1261, null, null, null, null, null, p1262, 10);
      }
      f304(v419, this.label, (v420 - this.label.width) / 2, v427 * 50);
      v419.globalAlpha = 1;
      if (this.timeout.ᐃⲆⲆ() && this.timeout.ⲆⲆΔ == 0) {
        this.text = this.list.shift();
        this.label = null;
      }
    }
  }
  function f405() {
    if (this.message !== vVVVVVUndefined1322) {
      var v2017 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length > 0 ? -95 : 0;
      f304(v419, this.message, 0, v421 - this.message.height + v2017);
    }
  }
  ⵠΔⵠⵠΔⵠΔᐃᐃ = 0;
  ⵠᐃΔᐃⵠΔⲆΔᐃ = 1;
  ᐃΔⵠⵠⲆⲆᐃᐃᐃ = 2;
  ΔΔⲆⵠᐃⲆⵠΔⲆ = 3;
  ⵠᐃⲆᐃⵠⵠᐃᐃᐃ = 4;
  ΔᐃΔΔⲆᐃΔ = [[], [], [], [], []];
  ΔΔᐃⲆᐃⵠⲆᐃΔ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
  var v2018 = 0;
  function f406(p1263, p1264, p1265, p1266, p1267, p1268, p1269, p1270) {
    if (p1270 === vVVUndefined82) {
      p1270 = 0;
    }
    for (var vP1269 = p1269; vP1269 >= p1270; vP1269--) {
      for (var vP1263 = p1263; p1264 >= vP1263; vP1263++) {
        for (var vP1265 = p1265; p1266 >= vP1265; vP1265++) {
          var v2019 = v2881.ⲆᐃᐃⲆ[vP1263][vP1265];
          if (v2019 && v2019[p1268]) {
            var v2020 = v2019[p1268][vP1269];
            if (v2020 !== undefined) {
              for (var v2021 = 0; v2021 < v2020.length; v2021++) {
                var v2022 = v2020[v2021];
                var v2023 = ΔΔ[p1267][v2884.time][vP1269];
                var v2024 = (v2018 + (vP1263 + vP1265) * 3) % 60;
                var v2025 = v2024 < 30 ? v2024 / 30 : 1 - (v2024 - 30) / 30;
                var v2026 = (1 + v2025 * 0.9 / 30) * -v2023.width;
                var v2027 = (1 + v2025 * 0.9 / 30) * -v2023.height;
                v2025 = (v2024 = (v2018 + (vP1263 + vP1265) * 7) % 60) < 30 ? v2024 / 30 : 1 - (v2024 - 30) / 30;
                var v2028 = v419.globalAlpha;
                v419.globalAlpha = v2028 * (0.9 + v2025 * 0.1);
                f304(v419, v2023, v2885.ⲆΔⵠ.x + v2022.x - v2026 / 2, v2885.ⲆΔⵠ.y + v2022.y - v2027 / 2, v2026, v2027);
                v419.globalAlpha = v2028;
              }
            }
          }
        }
      }
    }
  }
  function f407(p1271, p1272, p1273, p1274, p1275, p1276, p1277, p1278 = 0) {
    v2884.ΔΔΔⵠ[p1275].ᐃⲆⲆ();
    for (var vP1277 = p1277; vP1277 >= p1278; vP1277--) {
      for (var vP1271 = p1271; p1272 >= vP1271; vP1271++) {
        for (var vP1273 = p1273; p1274 >= vP1273; vP1273++) {
          var v2029 = v2881.ⲆᐃᐃⲆ[vP1271][vP1273];
          if (v2029 && v2029[p1276]) {
            var v2030 = v2029[p1276][vP1277];
            if (vVUndefined !== v2030) {
              for (var v2031 = 0; v2031 < v2030.length; v2031++) {
                var v2032 = v2030[v2031];
                if (v2032.ᐃⲆⲆ) {
                  if (v2032.ΔΔΔ.ᐃⲆⲆ() && v2032.ΔΔΔ.ⲆⲆΔ == vVV3153) {
                    v2032.ᐃⲆⲆ = false;
                  }
                  var v2033 = v3116 * (1 - v2032.ΔΔΔ.ⵠᐃᐃ) * 600 * v427;
                  var v2034 = Math.sin(v2032.angle) * v2033;
                  var v2035 = v2033 * Math.cos(v2032.angle);
                } else {
                  v2034 = 0;
                  v2035 = 0;
                }
                var v2036 = ΔΔ[p1275][v2884.time][vP1277];
                var v2037 = -v2036.width * v2884.ΔΔΔⵠ[p1275].ⵠᐃᐃ;
                var v2038 = v2884.ΔΔΔⵠ[p1275].ⵠᐃᐃ * -v2036.height;
                f304(v419, v2036, v2885.ⲆΔⵠ.x + v2032.x - v2037 / 2 + v2034, v2885.ⲆΔⵠ.y + v2032.y - v2038 / 2 + v2035, v2037, v2038);
              }
            }
          }
        }
      }
    }
  }
  var v2039 = [];
  for (v817 = 0; v817 < 100; v817++) {
    var v2040 = 1;
    if (Math.random() < 0.25) {
      v2040 = 0;
    }
    v2039.push(v2040);
  }
  function f408(p1279, p1280, p1281, p1282, p1283, p1284, p1285, p1286 = 0, p1287) {
    for (var vP1279 = p1279; vP1279 <= p1280; vP1279++) {
      for (var vP1281 = p1281; vP1281 <= p1282; vP1281++) {
        var v2041 = v2881.ⲆᐃᐃⲆ[vP1279][vP1281];
        if (v2041 !== undefined && v2041[p1284] !== undefined) {
          var v2042 = v2041[p1284];
          if (v2042 !== vVVVUndefined13) {
            if (v2042.scale === 1) {
              var v2043 = ΔΔ[p1283][v2884.time][v2042.ⲆᐃⵠⲆⲆ];
              v419.save();
              v419.translate(v2885.ⲆΔⵠ.x + v2042.x, v2885.ⲆΔⵠ.y + v2042.y);
              v419.rotate(v2042.angle);
              f304(v419, v2043, -v2043.width / 4, -v2043.height / 4, v2043.width / 2, v2043.height / 2);
              v419.restore();
            } else if (v2042.scale === 3) {
              for (var v2044 = 0; v2042.ⵠⲆΔ.length > v2044; v2044++) {
                v419.save();
                v419.translate(v2885.ⲆΔⵠ.x + v2042.x, v2885.ⲆΔⵠ.y + v2042.y);
                v419.rotate(v2042.ⵠⲆΔ[v2044].angle);
                v2043 = ΔΔ[p1283][v2884.time][v2042.ⵠⲆΔ[v2044].ⲆᐃⵠⲆⲆ];
                f304(v419, v2043, -v2043.width / 3 + v2042.ⵠⲆΔ[v2044].x, -v2043.height / 3 + v2042.ⵠⲆΔ[v2044].y, v2043.width / 1.5, v2043.height / 1.5);
                v419.restore();
              }
            } else {
              v2043 = ΔΔ[p1283][v2884.time][v2042.ⲆᐃⵠⲆⲆ];
              v419.save();
              v419.translate(v2885.ⲆΔⵠ.x + v2042.x, v2885.ⲆΔⵠ.y + v2042.y);
              v419.rotate(v2042.angle);
              f304(v419, v2043, -v2043.width / 2, -v2043.height / 2, v2043.width, v2043.height);
              v419.restore();
            }
          }
        }
      }
    }
  }
  function f409(p1288, p1289, p1290, p1291, p1292, p1293, p1294, p1295, p1296) {
    if (p1295 === vVVVVUndefined824) {
      p1295 = 0;
    }
    for (var vP1294 = p1294; vP1294 >= p1295; vP1294--) {
      for (var vP1288 = p1288; p1289 >= vP1288; vP1288++) {
        for (var vP1290 = p1290; p1291 >= vP1290; vP1290++) {
          var v2045 = v2881.ⲆᐃᐃⲆ[vP1288][vP1290];
          if (vVVUndefined13 !== v2045 && v2045[p1293] !== vVVVUndefined13) {
            var v2046 = v2045[p1293][vP1294];
            if (v2046 !== vVVVUndefined13) {
              for (var v2047 = 0; v2047 < v2046.length; v2047++) {
                var v2048 = v2046[v2047];
                if (v2048.ᐃⲆⲆ) {
                  if (v2048.ΔΔΔ.ᐃⲆⲆ() && vVV3152 == v2048.ΔΔΔ.ⲆⲆΔ) {
                    v2048.ᐃⲆⲆ = false;
                  }
                  var v2049 = v427 * ((1 - v2048.ΔΔΔ.ⵠᐃᐃ) * v3116 * 600);
                  var v2050 = v2049 * Math.sin(v2048.angle);
                  var v2051 = v2049 * Math.cos(v2048.angle);
                } else {
                  v2050 = 0;
                  v2051 = 0;
                }
                for (var v2052 = 0; ᐃᐃΔΔᐃΔⵠ[vP1294].ⵠⵠΔΔ > v2052; v2052++) {
                  if (v3115 !== v2884.ⲆⲆΔΔᐃ[v2052].ᐃⲆΔᐃᐃⵠⲆ) {
                    v2884.ⲆⲆΔΔᐃ[v2052].ᐃⲆⲆ();
                    v2884.ⲆⲆΔΔᐃ[v2052].ᐃⲆΔᐃᐃⵠⲆ = v3115;
                  }
                  var v2053 = ΔΔ[1217][v2884.time][ᐃᐃΔΔᐃΔⵠ[vP1294].ᐃΔⲆᐃ[v2052].Δᐃⵠ];
                  var v2054 = -v2053.width * v2884.ⲆⲆΔΔᐃ[v2052].ⵠᐃᐃ;
                  var v2055 = v2884.ⲆⲆΔΔᐃ[v2052].ⵠᐃᐃ * -v2053.height;
                  f304(v419, v2053, v2885.ⲆΔⵠ.x + v2048.x - v2054 / 4 + v2050 + ᐃᐃΔΔᐃΔⵠ[vP1294].ᐃΔⲆᐃ[v2052].x, v2885.ⲆΔⵠ.y + v2048.y - v2055 / 4 + v2051 + ᐃᐃΔΔᐃΔⵠ[vP1294].ᐃΔⲆᐃ[v2052].y, v2054 / 2, v2055 / 2);
                }
              }
            }
          }
        }
      }
    }
  }
  function f410(p1297, p1298, p1299, p1300, p1301, p1302, p1303, p1304 = 0, p1305) {
    for (var vP1303 = p1303; p1304 <= vP1303; vP1303--) {
      for (var vP1297 = p1297; vP1297 <= p1298; vP1297++) {
        for (var vP1299 = p1299; vP1299 <= p1300; vP1299++) {
          if (!(p1305 > 0) || v2039[(vP1297 + vP1299 * p1305) % v2039.length] !== 1) {
            var v2056 = v2881.ⲆᐃᐃⲆ[vP1297][vP1299];
            if (vVVUndefined132 !== v2056 && v2056[p1302] !== undefined) {
              var v2057 = v2056[p1302][vP1303];
              if (v2057 !== vVVVUndefined823) {
                for (var v2058 = 0; v2058 < v2057.length; v2058++) {
                  var v2059 = v2057[v2058];
                  if (v2059.ᐃⲆⲆ) {
                    if (v2059.ΔΔΔ.ᐃⲆⲆ() && v2059.ΔΔΔ.ⲆⲆΔ == 0) {
                      v2059.ᐃⲆⲆ = vVV313;
                    }
                    var v2060 = v427 * (v3116 * (1 - v2059.ΔΔΔ.ⵠᐃᐃ) * 600);
                    var v2061 = v2060 * Math.sin(v2059.angle);
                    var v2062 = v2060 * Math.cos(v2059.angle);
                  } else {
                    v2061 = 0;
                    v2062 = 0;
                  }
                  var v2063 = ΔΔ[p1301][v2884.time][vP1303];
                  f304(v419, v2063, v2885.ⲆΔⵠ.x + v2059.x - v2063.width / (ⵠⲆⲆΔΔ * 2) + v2061, v2885.ⲆΔⵠ.y + v2059.y - v2063.height / (ⵠⲆⲆΔΔ * 2) + v2062, v2063.width / ⵠⲆⲆΔΔ, v2063.height / ⵠⲆⲆΔΔ);
                }
              }
            }
          }
        }
      }
    }
  }
  ⵠⲆⲆΔΔ = 1;
  ᐃᐃΔΔᐃΔⵠ = [{
    ⵠⵠΔΔ: 10,
    ᐃΔⲆᐃ: [{
      y: -20,
      x: -128,
      Δᐃⵠ: 0
    }, {
      Δᐃⵠ: 1,
      y: -4,
      x: -86
    }, {
      x: -60,
      Δᐃⵠ: 2,
      y: -74
    }, {
      y: -144,
      Δᐃⵠ: 0,
      x: -22
    }, {
      y: 86,
      x: -58,
      Δᐃⵠ: 0
    }, {
      Δᐃⵠ: 0,
      x: 3,
      y: -30
    }, {
      y: -115,
      Δᐃⵠ: 1,
      x: 65
    }, {
      y: -50,
      x: 118,
      Δᐃⵠ: 0
    }, {
      Δᐃⵠ: 1,
      y: 15,
      x: 73
    }, {
      y: 79,
      x: 67,
      Δᐃⵠ: 0
    }]
  }, {
    ᐃΔⲆᐃ: [{
      Δᐃⵠ: 0,
      y: -26,
      x: -45
    }, {
      Δᐃⵠ: 2,
      y: 20,
      x: -45
    }, {
      Δᐃⵠ: 1,
      x: 10,
      y: -60
    }, {
      Δᐃⵠ: 1,
      y: -17,
      x: 52
    }, {
      x: 14,
      Δᐃⵠ: 0,
      y: 45
    }],
    ⵠⵠΔΔ: 5
  }, {
    ᐃΔⲆᐃ: [{
      x: -30,
      Δᐃⵠ: 2,
      y: 3
    }, {
      y: -38,
      Δᐃⵠ: 2,
      x: 7
    }, {
      Δᐃⵠ: 2,
      x: 37,
      y: 5
    }],
    ⵠⵠΔΔ: 3
  }, {
    ⵠⵠΔΔ: 11,
    ᐃΔⲆᐃ: [{
      x: -74,
      y: -87,
      Δᐃⵠ: 2
    }, {
      x: -11,
      y: -10,
      Δᐃⵠ: 1
    }, {
      y: 17,
      x: -99,
      Δᐃⵠ: 1
    }, {
      y: 84,
      Δᐃⵠ: 0,
      x: -66
    }, {
      Δᐃⵠ: 1,
      x: -55,
      y: 123
    }, {
      x: 10,
      Δᐃⵠ: 2,
      y: 81
    }, {
      y: 50,
      x: 52,
      Δᐃⵠ: 0
    }, {
      Δᐃⵠ: 1,
      y: 9,
      x: 138
    }, {
      Δᐃⵠ: 0,
      y: -28,
      x: 104
    }, {
      Δᐃⵠ: 2,
      x: 67,
      y: -56
    }, {
      y: -112,
      x: 5,
      Δᐃⵠ: 0
    }]
  }, {
    ᐃΔⲆᐃ: [{
      y: -66,
      Δᐃⵠ: 2,
      x: -33
    }, {
      x: -58,
      Δᐃⵠ: 0,
      y: 10
    }, {
      Δᐃⵠ: 1,
      x: -19,
      y: 44
    }, {
      x: 44,
      Δᐃⵠ: 0,
      y: 20
    }, {
      Δᐃⵠ: 2,
      x: 53,
      y: -36
    }, {
      y: -62,
      x: 7,
      Δᐃⵠ: 0
    }],
    ⵠⵠΔΔ: 6
  }, {
    ⵠⵠΔΔ: 3,
    ᐃΔⲆᐃ: [{
      x: -19,
      y: -25,
      Δᐃⵠ: 1
    }, {
      y: 13,
      Δᐃⵠ: 2,
      x: -29
    }, {
      x: 12,
      Δᐃⵠ: 0,
      y: 12
    }]
  }];
  var v2064 = 0;
  var v2065 = 0;
  var v2066 = 0;
  var v2067 = 0;
  function f411(p1306, p1307, p1308, p1309, p1310, p1311) {
    var v2068 = p1309.w1;
    var v2069 = p1309.w2;
    var v2070 = p1309.w3;
    var v2071 = v2885.ⲆΔⵠ.y + p1306 - 700;
    var v2072 = Math.max(v2885.ⲆΔⵠ.x + p1307, 0);
    var v2073 = Math.max(-v2885.ⲆΔⵠ.x + v420 - p1308 - 100, 0);
    var vV2072 = v2072;
    var v2074 = v420 - v2072 - v2073;
    if (p1311) {
      var v2075 = p1309.Δᐃⵠ(v2068).x;
    } else {
      v2075 = v2068.r.x;
    }
    var v2076 = v2071 + 0;
    0;
    v2076 += v2075 + 0 - 2;
    if (p1311) {
      v2075 = p1309.Δᐃⵠ(v2069).x;
    } else {
      v2075 = v2069.r.x;
    }
    var v2077 = v2071 + 250 - v2076 + v2075;
    var v2078 = (v2076 += v2077 - 2) - 2;
    if (p1311) {
      v2075 = p1309.Δᐃⵠ(v2070).x;
    } else {
      v2075 = v2070.r.x;
    }
    if (v2078 < v2076 + (v2077 = v2071 + 350 - v2076 + v2075) - 3) {
      v2076 += v2077 - 2;
    } else {
      v2076 = v2078;
    }
    v2077 = v2071 + 700 - v2076;
    if (p1311 > 0 && p1310.ΔⲆⲆⲆⵠᐃΔ === 1) {
      if (v2884.transition) {
        var v2079 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 77, 72, 252, 239, 187, v2079);
      } else {
        v419.fillStyle = v624.ⲆᐃᐃΔⲆᐃᐃ[v2884.time];
      }
      v419.fillRect(vV2072, v2076, v2074, v2077);
    } else {
      if (v2884.transition) {
        v2079 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(p1310.ⲆᐃΔ[0], p1310.ⲆᐃΔ[1], p1310.ⲆᐃΔ[2], p1310.ⵠⵠᐃ[0], p1310.ⵠⵠᐃ[1], p1310.ⵠⵠᐃ[2], v2079);
      } else {
        v419.fillStyle = p1310.ⵠΔⵠⵠᐃ[v2884.time];
      }
      v419.fillRect(vV2072, v2076, v2074, v2077);
    }
  }
  function f412(p1312) {
    v419.save();
    v419.translate(v2885.ⲆΔⵠ.x + p1312.x, v2885.ⲆΔⵠ.y + p1312.y);
    v419.rotate(p1312.angle);
    v419.globalAlpha = p1312.alpha;
    var v2080 = ΔΔ[p1312.id][v2884.time];
    f304(v419, v2080, -v2080.width / 2, -v2080.height / 2);
    v419.globalAlpha = 1;
    v419.restore();
  }
  function f413() {
    v419.globalAlpha = 1;
    if (v2884.transition) {
      var v2081 = v2884.ΔⲆᐃⲆ.ᐃⲆⲆ();
    }
    v2884.ⵠᐃΔᐃⵠⲆΔΔΔ(-v2885.ⲆΔⵠ.x, -v2885.ⲆΔⵠ.y);
    v2064 = Math.max(Math.floor(-v2885.ⲆΔⵠ.x / v2884.ᐃⲆᐃΔⲆᐃΔ) - 5, 0);
    v2065 = Math.min(Math.floor((-v2885.ⲆΔⵠ.x + v2885.ⲆΔⵠ.w) / v2884.ᐃⲆᐃΔⲆᐃΔ) + 4, v2884.ⵠⲆⵠΔᐃ - 1);
    v2066 = Math.max(Math.floor(-v2885.ⲆΔⵠ.y / v2884.ᐃⲆΔⵠᐃᐃΔ) - 3, 0);
    v2067 = Math.min(Math.floor((-v2885.ⲆΔⵠ.y + v2885.ⲆΔⵠ.ΔᐃⲆ) / v2884.ᐃⲆΔⵠᐃᐃΔ) + 3, v2884.ⲆⲆΔⵠⲆ - 1);
    (function () {
      for (var v2082 = v2884.ⵠΔⵠᐃ.length - 1; v2082 >= 0; v2082--) {
        var v2083 = v2884.ⵠΔⵠᐃ[v2082];
        if (v2884.ⵠΔⵠⵠΔ === v2083.Δᐃⵠ) {
          var v2084 = v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ];
          if (v2083.x1 - 230 - v420 <= -v2885.ⲆΔⵠ.x && v2083.x2 + 330 >= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.y >= v2083.y1 - v421 && v2083.y2 + 100 >= -v2885.ⲆΔⵠ.y) {
            var v2085 = v2083.x2;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              v2085 -= 610;
            }
            var v2086 = v2083.x1;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              v2086 += 610;
            }
            var v2087 = v2083.y2;
            if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
              v2087 -= 610;
            }
            var v2088 = v2083.y1;
            if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
              v2088 += 610;
            }
            if (v2884.transition) {
              var v2089 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
              v419.fillStyle = f420(v2084.ⲆᐃΔ[0], v2084.ⲆᐃΔ[1], v2084.ⲆᐃΔ[2], v2084.ⵠⵠᐃ[0], v2084.ⵠⵠᐃ[1], v2084.ⵠⵠᐃ[1], v2089);
            } else {
              v419.fillStyle = v2084.ⵠΔⵠⵠᐃ[v2884.time];
            }
            var v2090 = Math.max(v2885.ⲆΔⵠ.x + v2086 - 2 - 230, 0);
            var v2091 = Math.max(-v2885.ⲆΔⵠ.x + v420 - v2085 - 330 - 2, 0);
            var v2092 = Math.max(v2885.ⲆΔⵠ.y + v2088 - 2, 0);
            var v2093 = Math.max(-v2885.ⲆΔⵠ.y + v421 - v2087 - 100 - 2, 0);
            v419.beginPath();
            v419.fillRect(v2090, v2092, v420 - v2091 - v2090, v421 - v2092 - v2093);
          }
        }
      }
      for (v2082 = v2884.ⵠΔⵠᐃ.length - 1; v2082 >= 0; v2082--) {
        v2083 = v2884.ⵠΔⵠᐃ[v2082];
        if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
          v2085 = v2083.x2;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2085 -= 400;
          }
          v2086 = v2083.x1;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2086 += 400;
          }
          v2087 = v2083.y2;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2087 -= 300;
          }
          v2088 = v2083.y1;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2088 += 300;
          }
          if (!(v2083.ⵠᐃᐃ & 8) && -v2885.ⲆΔⵠ.x >= v2085 - v420 + 120 && v2085 + 820 >= -v2885.ⲆΔⵠ.x && v2088 + 88 - v421 <= -v2885.ⲆΔⵠ.y && v2087 + 50 >= -v2885.ⲆΔⵠ.y) {
            f425(v2085, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[0], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 8);
            f417(v2085, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[0], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 8);
          }
          if ((v2083.ⵠᐃᐃ & 4) === 0 && -v2885.ⲆΔⵠ.x >= v2086 - v420 - 700 && v2086 - 20 >= -v2885.ⲆΔⵠ.x && v2088 + 88 - v421 <= -v2885.ⲆΔⵠ.y && v2087 + 50 >= -v2885.ⲆΔⵠ.y) {
            f414(v2086, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[1], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 4);
            f428(v2086, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[1], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 4);
          }
          if (!(v2083.ⵠᐃᐃ & 2) && v2086 - 235 - v420 <= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.x <= v2085 + 350 && v2087 - v421 - 275 <= -v2885.ⲆΔⵠ.y && v2087 + 490 >= -v2885.ⲆΔⵠ.y) {
            f422(v2087 - 230, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[2], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 2);
            f427(v2087 - 230, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[2], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 2);
          }
          if (!(v2083.ⵠᐃᐃ & 1) && -v2885.ⲆΔⵠ.x >= v2086 - 235 - v420 && v2085 + 350 >= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.y >= v2088 - v421 - 390 && v2088 + 315 >= -v2885.ⲆΔⵠ.y) {
            f411(v2088 + 310, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[3], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 1);
            f423(v2088 + 310, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[3], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 1);
          }
        }
      }
      for (v2082 = v2884.ⵠΔⵠᐃ.length - 1; v2082 >= 0; v2082--) {
        if ((v2083 = v2884.ⵠΔⵠᐃ[v2082]).Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
          v2085 = v2083.x2;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2085 -= 400;
          }
          v2086 = v2083.x1;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2086 += 400;
          }
          v2087 = v2083.y2;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2087 -= 300;
          }
          v2088 = v2083.y1;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2088 += 300;
          }
          if ((v2083.ⵠᐃᐃ & 8) !== 0 && v2085 - v420 + 120 <= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.x <= v2085 + 820 && -v2885.ⲆΔⵠ.y >= v2088 + 88 - v421 && -v2885.ⲆΔⵠ.y <= v2087 + 50) {
            f425(v2085, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[0], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 8);
          }
          if (v2083.ⵠᐃᐃ & 4 && v2086 - v420 - 700 <= -v2885.ⲆΔⵠ.x && v2086 - 20 >= -v2885.ⲆΔⵠ.x && v2088 + 88 - v421 <= -v2885.ⲆΔⵠ.y && -v2885.ⲆΔⵠ.y <= v2087 + 50) {
            f414(v2086, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[1], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 4);
          }
          if ((v2083.ⵠᐃᐃ & 2) !== 0 && v2086 - 235 - v420 <= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.x <= v2085 + 350 && v2087 - v421 - 275 <= -v2885.ⲆΔⵠ.y && v2087 + 490 >= -v2885.ⲆΔⵠ.y) {
            f422(v2087 - 230, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[2], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 2);
          }
          if ((v2083.ⵠᐃᐃ & 1) !== 0 && -v2885.ⲆΔⵠ.x >= v2086 - 235 - v420 && -v2885.ⲆΔⵠ.x <= v2085 + 350 && v2088 - v421 - 390 <= -v2885.ⲆΔⵠ.y && -v2885.ⲆΔⵠ.y <= v2088 + 315) {
            f411(v2088 + 310, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[3], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 1);
          }
        }
      }
      for (v2082 = v2884.ⵠΔⵠᐃ.length - 1; v2082 >= 0; v2082--) {
        v2083 = v2884.ⵠΔⵠᐃ[v2082];
        if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
          v2084 = v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ];
          if (-v2885.ⲆΔⵠ.x >= v2083.x1 - 230 - v420 && -v2885.ⲆΔⵠ.x <= v2083.x2 + 330 && v2083.y1 - v421 <= -v2885.ⲆΔⵠ.y && -v2885.ⲆΔⵠ.y <= v2083.y2 + 100) {
            v2085 = v2083.x2;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              if ((v2083.ⵠᐃᐃ & 8) === 0) {
                v2085 -= 414;
              } else {
                v2085 -= 610;
              }
            }
            v2086 = v2083.x1;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              if ((v2083.ⵠᐃᐃ & 4) === 0) {
                v2086 += 414;
              } else {
                v2086 += 610;
              }
            }
            v2087 = v2083.y2;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              if (v2083.ⵠᐃᐃ & 2) {
                v2087 -= 610;
              } else {
                v2087 -= 414;
              }
            }
            v2088 = v2083.y1;
            if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
              if (v2083.ⵠᐃᐃ & 1) {
                v2088 += 610;
              } else {
                v2088 += 414;
              }
            }
            if (v2884.transition) {
              v2089 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
              v419.fillStyle = f420(v2084.ⲆᐃΔ[0], v2084.ⲆᐃΔ[1], v2084.ⲆᐃΔ[2], v2084.ⵠⵠᐃ[0], v2084.ⵠⵠᐃ[1], v2084.ⵠⵠᐃ[2], v2089);
            } else {
              v419.fillStyle = v2084.ⵠΔⵠⵠᐃ[v2884.time];
            }
            v2090 = Math.max(v2885.ⲆΔⵠ.x + v2086 - 2 - 230, 0);
            v2091 = Math.max(-v2885.ⲆΔⵠ.x + v420 - v2085 - 330 - 2, 0);
            v2092 = Math.max(v2885.ⲆΔⵠ.y + v2088 - 2, 0);
            v2093 = Math.max(-v2885.ⲆΔⵠ.y + v421 - v2087 - 100 - 2, 0);
            v419.beginPath();
            v419.fillRect(v2090, v2092, v420 - v2091 - v2090, v421 - v2092 - v2093);
          }
        }
      }
      if (v2883.ⲆⲆⲆΔⵠ) {
        f429(f407, v2066, v2067, v2064, v2065, 914, "isl", 2);
        f429(f407, v2066, v2067, v2064, v2065, 913, "isl", 2);
      }
      f429(f410, v2066, v2067, v2064, v2065, 911, "isl", 2);
      if (v2883.ⲆⲆⲆΔⵠ) {
        f429(f408, v2066, v2067, v2064, v2065, 353, "de");
      }
      var v2094 = v2884.ᐃᐃΔ[0];
      for (v2082 = 0; v2094.length > v2082; v2082++) {
        for (var v2095 = v2094[v2082], v2096 = 0; v2096 < v2095.ᐃᐃᐃᐃᐃ.length; v2096++) {
          f412(v2095.ᐃᐃᐃᐃᐃ[v2096]);
        }
      }
      if ((v1787 += v3116 * 40) > 60) {
        v1787 -= 60;
      }
      f429(f360, v2066, v2067, v2064, v2065, 1332, "r", 0);
      for (v2082 = 0; v2082 < v2884.ⵠΔⵠᐃ.length; v2082++) {
        if ((v2083 = v2884.ⵠΔⵠᐃ[v2082]).Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
          v2085 = v2083.x2;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2085 -= 400;
          }
          v2086 = v2083.x1;
          if (v2083.Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ) {
            v2086 += 400;
          }
          v2087 = v2083.y2;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2087 -= 300;
          }
          v2088 = v2083.y1;
          if (v2884.ⵠΔⵠⵠΔ !== v2083.Δᐃⵠ) {
            v2088 += 300;
          }
          if ((v2083.ⵠᐃᐃ & 8) > 0 && -v2885.ⲆΔⵠ.x >= v2085 - v420 + 120 && -v2885.ⲆΔⵠ.x <= v2085 + 820 && -v2885.ⲆΔⵠ.y >= v2088 + 88 - v421 && -v2885.ⲆΔⵠ.y <= v2087 + 50) {
            f417(v2085, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[0], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 8);
          }
          if ((v2083.ⵠᐃᐃ & 4) > 0 && v2086 - v420 - 700 <= -v2885.ⲆΔⵠ.x && v2086 - 20 >= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.y >= v2088 + 88 - v421 && v2087 + 50 >= -v2885.ⲆΔⵠ.y) {
            f428(v2086, v2088 + 88, v2087 - 88, v2885.ⲆⲆΔⵠ[1], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 4);
          }
          if ((v2083.ⵠᐃᐃ & 2) > 0 && -v2885.ⲆΔⵠ.x >= v2086 - 235 - v420 && v2085 + 350 >= -v2885.ⲆΔⵠ.x && v2087 - v421 - 275 <= -v2885.ⲆΔⵠ.y && v2087 + 490 >= -v2885.ⲆΔⵠ.y) {
            f427(v2087 - 230, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[2], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 2);
          }
          if ((v2083.ⵠᐃᐃ & 1) > 0 && v2086 - 235 - v420 <= -v2885.ⲆΔⵠ.x && v2085 + 350 >= -v2885.ⲆΔⵠ.x && -v2885.ⲆΔⵠ.y >= v2088 - v421 - 390 && -v2885.ⲆΔⵠ.y <= v2088 + 315) {
            f423(v2088 + 310, v2086 - 230, v2085 + 230, v2885.ⲆⲆΔⵠ[3], v2884.ⵠΔᐃΔⵠ[v2083.Δᐃⵠ], v2083.ⵠᐃᐃ & 1);
          }
        }
      }
    })();
    (function () {
      var vV2064 = v2064;
      var vV2065 = v2065;
      var vV2066 = v2066;
      var vV2067 = v2067;
      if (v2883.ⲆⲆⲆΔⵠ) {
        f429(f410, vV2066, vV2067, vV2064, vV2065, 840, "l", 2);
      }
      if (v2883.ⲆⲆⲆΔⵠ) {
        f429(f410, vV2066, vV2067, vV2064, vV2065, v624.ᐃⵠⵠⲆᐃ, "la", 5);
      }
      f429(f410, vV2066, vV2067, vV2064, vV2065, 305, "la", 5);
      f429(f407, vV2066, vV2067, vV2064, vV2065, 839, "l", 2);
      if (v2883.ⲆⲆⲆΔⵠ) {
        f429(f409, vV2066, vV2067, vV2064, vV2065, 305, "la", 5);
        f429(f407, vV2066, vV2067, vV2064, vV2065, 838, "l", 2);
      }
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1360, "ma", 4);
      for (var v2097 = v2884.ᐃᐃΔ[83], v2098 = 0; v2097.length > v2098; v2098++) {
        v2097[v2098].ⵠᐃΔΔⲆⵠΔ();
      }
      var v2099 = v2884.ᐃᐃΔ[0];
      for (v2098 = 0; v2099.length > v2098; v2098++) {
        for (var v2100 = v2099[v2098], v2101 = 0; v2101 < v2100.ᐃⵠᐃⲆΔ.length; v2101++) {
          f424(v2100.ᐃⵠᐃⲆΔ[v2101]);
        }
      }
      var v2102 = v2884.ᐃᐃΔ[39];
      for (v2098 = 0; v2098 < v2102.length; v2098++) {
        f418(v2102[v2098], 216);
        v2102[v2098].ⵠⵠΔⲆΔ(v2102[v2098].info);
      }
      var v2103 = v2884.ᐃᐃΔ[18];
      for (v2098 = 0; v2103.length > v2098; v2098++) {
        if (v2103[v2098].action == 2) {
          f415(v2103[v2098]);
        }
      }
      var v2104 = v2884.ᐃᐃΔ[1];
      for (v2098 = 0; v2104.length > v2098; v2098++) {
        f415(v2104[v2098], 204);
      }
      var v2105 = v2884.ᐃᐃΔ[22];
      for (v2098 = 0; v2098 < v2105.length; v2098++) {
        f415(v2105[v2098]);
      }
      var v2106 = v2884.ᐃᐃΔ[23];
      for (v2098 = 0; v2098 < v2106.length; v2098++) {
        f415(v2106[v2098]);
      }
      var v2107 = v2884.ᐃᐃΔ[6];
      for (v2098 = 0; v2098 < v2107.length; v2098++) {
        f415(v2107[v2098], 209);
      }
      var v2108 = v2884.ᐃᐃΔ[45];
      for (v2098 = 0; v2098 < v2108.length; v2098++) {
        f418(v2108[v2098]);
      }
      var v2109 = v2884.ᐃᐃΔ[42];
      for (v2098 = 0; v2109.length > v2098; v2098++) {
        f418(v2109[v2098], 234);
      }
      var v2110 = v2884.ᐃᐃΔ[3];
      for (v2098 = 0; v2098 < v2110.length; v2098++) {
        f415(v2110[v2098]);
      }
      v2110 = v2884.ᐃᐃΔ[52];
      v2098 = 0;
      for (; v2098 < v2110.length; v2098++) {
        f415(v2110[v2098]);
      }
      v2110 = v2884.ᐃᐃΔ[3];
      v2098 = 0;
      for (; v2098 < v2110.length; v2098++) {
        f419(v2110[v2098]);
      }
      var v2111 = v2884.ᐃᐃΔ[53];
      for (v2098 = 0; v2098 < v2111.length; v2098++) {
        if (!(v2111[v2098].info & 15) || v2111[v2098].info === 10) {
          f418(v2111[v2098]);
        }
      }
      var v2112 = v2884.ᐃᐃΔ[66];
      for (v2098 = 0; v2098 < v2112.length; v2098++) {
        if ((v2112[v2098].info & 15) === 0 || v2112[v2098].info === 10) {
          f418(v2112[v2098]);
        }
      }
      var v2113 = v2884.ᐃᐃΔ[63];
      for (v2098 = 0; v2113.length > v2098; v2098++) {
        if ((v2113[v2098].info & 15) === 0 || v2113[v2098].info === 10) {
          f418(v2113[v2098]);
        }
      }
      var v2114 = v2884.ᐃᐃΔ[64];
      for (v2098 = 0; v2114.length > v2098; v2098++) {
        if (!(v2114[v2098].info & 15) || v2114[v2098].info === 10) {
          f418(v2114[v2098]);
        }
      }
      var v2115 = v2884.ᐃᐃΔ[91];
      for (v2098 = 0; v2098 < v2115.length; v2098++) {
        f418(v2115[v2098], 225);
      }
      var v2116 = v2884.ᐃᐃΔ[48];
      for (v2098 = 0; v2116.length > v2098; v2098++) {
        if ((v2116[v2098].info & 15) === 0 || v2116[v2098].info === 10) {
          f418(v2116[v2098]);
        }
      }
      var v2117 = v2884.ᐃᐃΔ[49];
      for (v2098 = 0; v2098 < v2117.length; v2098++) {
        if ((v2117[v2098].info & 15) === 0 || v2117[v2098].info === 10) {
          f418(v2117[v2098]);
        }
      }
      var v2118 = v2884.ᐃᐃΔ[46];
      for (v2098 = 0; v2098 < v2118.length; v2098++) {
        if (!(v2118[v2098].info & 15) || v2118[v2098].info === 10) {
          f418(v2118[v2098]);
        }
      }
      v2115 = v2884.ᐃᐃΔ[40];
      v2098 = 0;
      for (; v2098 < v2115.length; v2098++) {
        f418(v2115[v2098]);
      }
      var v2119 = v2884.ᐃᐃΔ[98];
      for (v2098 = 0; v2119.length > v2098; v2098++) {
        f418(v2119[v2098], 360, 978);
      }
      var v2120 = v2884.ᐃᐃΔ[94];
      for (v2098 = 0; v2098 < v2120.length; v2098++) {
        f418(v2120[v2098], 360, 978);
      }
      var v2121 = v2884.ᐃᐃΔ[99];
      for (v2098 = 0; v2098 < v2121.length; v2098++) {
        f418(v2121[v2098], 1103, 1108);
      }
      var v2122 = v2884.ᐃᐃΔ[54];
      for (v2098 = 0; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info & 1) {
          f418(v2122[v2098], 447);
        }
      }
      v2122 = v2884.ᐃᐃΔ[55];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info & 1) {
          f418(v2122[v2098], 484);
        }
      }
      v2122 = v2884.ᐃᐃΔ[56];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 487);
        }
      }
      v2122 = v2884.ᐃᐃΔ[57];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 490);
        }
      }
      v2122 = v2884.ᐃᐃΔ[58];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 638);
        }
      }
      v2122 = v2884.ᐃᐃΔ[62];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 487);
        }
      }
      v2122 = v2884.ᐃᐃΔ[10];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info & 1) {
          f418(v2122[v2098], 447);
        }
      }
      v2122 = v2884.ᐃᐃΔ[15];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info & 1) {
          f418(v2122[v2098], 484);
        }
      }
      v2122 = v2884.ᐃᐃΔ[16];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 487);
        }
      }
      v2122 = v2884.ᐃᐃΔ[17];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 490);
        }
      }
      v2122 = v2884.ᐃᐃΔ[21];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 638);
        }
      }
      v2122 = v2884.ᐃᐃΔ[60];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (v2122[v2098].info) {
          f418(v2122[v2098], 487);
        }
      }
      var v2123 = v2884.ᐃᐃΔ[92];
      for (v2098 = 0; v2098 < v2123.length; v2098++) {
        f418(v2123[v2098], 374, 433);
      }
      var v2124 = v2884.ᐃᐃΔ[50];
      for (v2098 = 0; v2098 < v2124.length; v2098++) {
        f418(v2124[v2098], 300);
      }
      v2097 = v2884.ᐃᐃΔ[83];
      v2098 = 0;
      for (; v2098 < v2097.length; v2098++) {
        f418(v2097[v2098], v624.ⲆⵠΔⲆⲆⲆᐃ, v624.ⵠⵠΔⵠⵠⲆⵠᐃⵠ);
      }
      var v2125 = v2884.ᐃᐃΔ[103];
      for (v2098 = 0; v2125.length > v2098; v2098++) {
        if (v2125[v2098].ΔⲆΔᐃΔⲆⲆ === 0) {
          f418(v2125[v2098]);
        }
      }
      v2099 = v2884.ᐃᐃΔ[0];
      v2098 = 0;
      for (; v2099.length > v2098; v2098++) {
        v2100 = v2099[v2098];
        if (v2099[v2098].ΔⵠΔΔ !== 337 && v2099[v2098].ΔⵠΔΔ !== 338 && v2099[v2098].ΔⵠΔΔ !== 355 && v2099[v2098].ΔⵠΔΔ !== 354 && v2099[v2098].ΔⵠΔΔ !== 339 && v2099[v2098].ΔⵠΔΔ !== 340 && v2099[v2098].ΔⵠΔΔ !== 164 && v2099[v2098].ΔⵠΔΔ !== 358) {
          if (v2100.ᐃᐃᐃΔᐃΔⲆ === 0) {
            if (v2100.ⲆΔΔΔⵠΔᐃ > 0.001) {
              v2100.ⲆΔΔΔⵠΔᐃ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(v2100.ⲆΔΔΔⵠΔᐃ, 0, 0.018);
              var v2126 = 1 + Math.min(1, Math.max(v2100.ⲆΔΔΔⵠΔᐃ, 0) / 100) * 0.18;
              v419.save();
              v419.scale(v2126, v2126);
              v2885.ⲆΔⵠ.x /= v2126;
              v2885.ⲆΔⵠ.y /= v2126;
              v2100.x /= v2126;
              v2100.y /= v2126;
              v2100.r.x /= v2126;
              v2100.r.y /= v2126;
              v2100.ΔᐃΔᐃⵠⲆⲆ();
              v2100.ᐃᐃΔⵠ();
              v2885.ⲆΔⵠ.x *= v2126;
              v2885.ⲆΔⵠ.y *= v2126;
              v2100.x *= v2126;
              v2100.y *= v2126;
              v2100.r.x *= v2126;
              v2100.r.y *= v2126;
              v419.restore();
            } else {
              v2100.ΔⲆΔᐃΔⲆⲆ = 0;
              v2100.ΔᐃΔᐃⵠⲆⲆ();
              v2100.ᐃᐃΔⵠ();
            }
          }
        } else if (v2100.ⲆⵠΔⲆᐃ <= 180) {
          v419.save();
          v2126 = 1 + Math.min(1, Math.max(v2100.ᐃΔⲆⲆⲆ - 30, 0) / 180) * 0.35;
          v419.scale(v2126, v2126);
          v2885.ⲆΔⵠ.x /= v2126;
          v2885.ⲆΔⵠ.y /= v2126;
          v2100.x /= v2126;
          v2100.y /= v2126;
          v2100.r.x /= v2126;
          v2100.r.y /= v2126;
          v2100.ΔⲆΔᐃΔⲆⲆ = 0;
          v2100.ΔᐃΔᐃⵠⲆⲆ();
          v2100.ᐃᐃΔⵠ();
          v2885.ⲆΔⵠ.x *= v2126;
          v2885.ⲆΔⵠ.y *= v2126;
          v2100.x *= v2126;
          v2100.y *= v2126;
          v2100.r.x *= v2126;
          v2100.r.y *= v2126;
          v419.restore();
        }
      }
      v2124 = v2884.ᐃᐃΔ[50];
      v2098 = 0;
      for (; v2124.length > v2098; v2098++) {
        f418(v2124[v2098], 1189);
      }
      var v2127 = v2884.ᐃᐃΔ[74];
      for (v2098 = 0; v2098 < v2127.length; v2098++) {
        f418(v2127[v2098]);
      }
      var v2128 = v2884.ᐃᐃΔ[90];
      for (v2098 = 0; v2128.length > v2098; v2098++) {
        f418(v2128[v2098], 1324, 1326);
      }
      var v2129 = v2884.ᐃᐃΔ[69];
      for (v2098 = 0; v2129.length > v2098; v2098++) {
        f418(v2129[v2098], 530, 599);
      }
      var v2130 = v2884.ᐃᐃΔ[77];
      for (v2098 = 0; v2098 < v2130.length; v2098++) {
        f418(v2130[v2098]);
      }
      var v2131 = v2884.ᐃᐃΔ[87];
      for (v2098 = 0; v2098 < v2131.length; v2098++) {
        f418(v2131[v2098], 1751, 1752);
      }
      var v2132 = v2884.ᐃᐃΔ[67];
      for (v2098 = 0; v2098 < v2132.length; v2098++) {
        f418(v2132[v2098], 410, 437);
      }
      var v2133 = v2884.ᐃᐃΔ[79];
      for (v2098 = 0; v2133.length > v2098; v2098++) {
        f418(v2133[v2098], 342, 1385);
      }
      var v2134 = v2884.ᐃᐃΔ[80];
      for (v2098 = 0; v2098 < v2134.length; v2098++) {
        f418(v2134[v2098], 343, 1400);
      }
      v2132 = v2884.ᐃᐃΔ[88];
      v2098 = 0;
      for (; v2132.length > v2098; v2098++) {
        f418(v2132[v2098], 1747, 1748);
      }
      v2111 = v2884.ᐃᐃΔ[53];
      v2098 = 0;
      for (; v2098 < v2111.length; v2098++) {
        if ((v2111[v2098].info & 15) !== 0 && v2111[v2098].info !== 10) {
          f418(v2111[v2098]);
        }
      }
      v2112 = v2884.ᐃᐃΔ[66];
      v2098 = 0;
      for (; v2112.length > v2098; v2098++) {
        if ((v2112[v2098].info & 15) !== 0 && v2112[v2098].info !== 10) {
          f418(v2112[v2098]);
        }
      }
      v2113 = v2884.ᐃᐃΔ[63];
      v2098 = 0;
      for (; v2113.length > v2098; v2098++) {
        if ((v2113[v2098].info & 15) !== 0 && v2113[v2098].info !== 10) {
          f418(v2113[v2098]);
        }
      }
      v2114 = v2884.ᐃᐃΔ[101];
      v2098 = 0;
      for (; v2098 < v2114.length; v2098++) {
        f418(v2114[v2098], 349);
      }
      v2114 = v2884.ᐃᐃΔ[64];
      v2098 = 0;
      for (; v2114.length > v2098; v2098++) {
        if ((v2114[v2098].info & 15) !== 0 && v2114[v2098].info !== 10) {
          f418(v2114[v2098]);
        }
      }
      v2110 = v2884.ᐃᐃΔ[52];
      v2098 = 0;
      for (; v2110.length > v2098; v2098++) {
        f419(v2110[v2098]);
      }
      v2116 = v2884.ᐃᐃΔ[48];
      v2098 = 0;
      for (; v2116.length > v2098; v2098++) {
        if ((v2116[v2098].info & 15) !== 0 && v2116[v2098].info !== 10) {
          f418(v2116[v2098]);
        }
      }
      v2117 = v2884.ᐃᐃΔ[49];
      v2098 = 0;
      for (; v2117.length > v2098; v2098++) {
        if (v2117[v2098].info & 15 && v2117[v2098].info !== 10) {
          f418(v2117[v2098]);
        }
      }
      v2118 = v2884.ᐃᐃΔ[46];
      v2098 = 0;
      for (; v2118.length > v2098; v2098++) {
        if (v2118[v2098].info & 15 && v2118[v2098].info !== 10) {
          f418(v2118[v2098]);
        }
      }
      var v2135 = v2884.ᐃᐃΔ[93];
      for (v2098 = 0; v2098 < v2135.length; v2098++) {
        f418(v2135[v2098], 910, 916);
      }
      var v2136 = v2884.ᐃᐃΔ[73];
      for (v2098 = 0; v2098 < v2136.length; v2098++) {
        f418(v2136[v2098], 856, 906);
      }
      var v2137 = v2884.ᐃᐃΔ[72];
      for (v2098 = 0; v2137.length > v2098; v2098++) {
        f418(v2137[v2098], 892, 907);
      }
      var v2138 = v2884.ᐃᐃΔ[68];
      for (v2098 = 0; v2098 < v2138.length; v2098++) {
        f418(v2138[v2098], 370, 444);
      }
      var v2139 = v2884.ᐃᐃΔ[100];
      for (v2098 = 0; v2139.length > v2098; v2098++) {
        f418(v2139[v2098], 1341, 1342);
      }
      var v2140 = v2884.ᐃᐃΔ[70];
      for (v2098 = 0; v2098 < v2140.length; v2098++) {
        f418(v2140[v2098], 583, 600);
      }
      var v2141 = v2884.ᐃᐃΔ[89];
      for (v2098 = 0; v2141.length > v2098; v2098++) {
        f418(v2141[v2098], 1323, 1325);
      }
      var v2142 = v2884.ᐃᐃΔ[84];
      for (v2098 = 0; v2098 < v2142.length; v2098++) {
        f418(v2142[v2098]);
      }
      var v2143 = v2884.ᐃᐃΔ[75];
      for (v2098 = 0; v2098 < v2143.length; v2098++) {
        f418(v2143[v2098], 1194, 1195);
      }
      var v2144 = v2884.ᐃᐃΔ[78];
      for (v2098 = 0; v2098 < v2144.length; v2098++) {
        f418(v2144[v2098]);
      }
      var v2145 = v2884.ᐃᐃΔ[85];
      for (v2098 = 0; v2145.length > v2098; v2098++) {
        f418(v2145[v2098], 1609, 1610);
      }
      var v2146 = v2884.ᐃᐃΔ[71];
      for (v2098 = 0; v2146.length > v2098; v2098++) {
        if (v2146[v2098].scale === 1) {
          f418(v2146[v2098], 587, 601);
        }
      }
      v2146 = v2884.ᐃᐃΔ[76];
      v2098 = 0;
      for (; v2146.length > v2098; v2098++) {
        if (v2146[v2098].scale === 1) {
          f418(v2146[v2098], 588, 602);
        }
      }
      var v2147 = v2884.ᐃᐃΔ[11];
      for (v2098 = 0; v2098 < v2147.length; v2098++) {
        f418(v2147[v2098]);
      }
      var v2148 = v2884.ᐃᐃΔ[2];
      for (v2098 = 0; v2148.length > v2098; v2098++) {
        f418(v2148[v2098], 205);
      }
      v2103 = v2884.ᐃᐃΔ[18];
      v2098 = 0;
      for (; v2098 < v2103.length; v2098++) {
        f418(v2103[v2098]);
      }
      var v2149 = v2884.ᐃᐃΔ[43];
      for (v2098 = 0; v2098 < v2149.length; v2098++) {
        f418(v2149[v2098]);
      }
      v2122 = v2884.ᐃᐃΔ[10];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 268);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[15];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 273);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[16];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 274);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[17];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 275);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[21];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 215);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[60];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 328);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[54];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 322);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[55];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 323);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[56];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 324);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[57];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 325);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[58];
      v2098 = 0;
      for (; v2122.length > v2098; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 326);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      v2122 = v2884.ᐃᐃΔ[62];
      v2098 = 0;
      for (; v2098 < v2122.length; v2098++) {
        if (!(v2122[v2098].info & 1)) {
          f418(v2122[v2098], 330);
        }
        v2122[v2098].ⵠⵠΔⲆΔ(v2122[v2098].info >> 1);
      }
      var v2150 = v2884.ᐃᐃΔ[4];
      for (v2098 = 0; v2098 < v2150.length; v2098++) {
        f418(v2150[v2098], 264);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      v2150 = v2884.ᐃᐃΔ[7];
      v2098 = 0;
      for (; v2150.length > v2098; v2098++) {
        f418(v2150[v2098], 265);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      v2150 = v2884.ᐃᐃΔ[8];
      v2098 = 0;
      for (; v2098 < v2150.length; v2098++) {
        f418(v2150[v2098], 266);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      v2150 = v2884.ᐃᐃΔ[9];
      v2098 = 0;
      for (; v2150.length > v2098; v2098++) {
        f418(v2150[v2098], 267);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      v2150 = v2884.ᐃᐃΔ[19];
      v2098 = 0;
      for (; v2098 < v2150.length; v2098++) {
        f418(v2150[v2098], 213);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      v2150 = v2884.ᐃᐃΔ[59];
      v2098 = 0;
      for (; v2150.length > v2098; v2098++) {
        f418(v2150[v2098], 327);
        v2150[v2098].ⵠⵠΔⲆΔ(v2150[v2098].info);
      }
      var v2151 = v2884.ᐃᐃΔ[5];
      for (v2098 = 0; v2151.length > v2098; v2098++) {
        f418(v2151[v2098], 262);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      v2151 = v2884.ᐃᐃΔ[12];
      v2098 = 0;
      for (; v2151.length > v2098; v2098++) {
        f418(v2151[v2098], 270);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      v2151 = v2884.ᐃᐃΔ[13];
      v2098 = 0;
      for (; v2098 < v2151.length; v2098++) {
        f418(v2151[v2098], 271);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      v2151 = v2884.ᐃᐃΔ[14];
      v2098 = 0;
      for (; v2151.length > v2098; v2098++) {
        f418(v2151[v2098], 272);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      v2151 = v2884.ᐃᐃΔ[20];
      v2098 = 0;
      for (; v2098 < v2151.length; v2098++) {
        f418(v2151[v2098], 214);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      v2151 = v2884.ᐃᐃΔ[61];
      v2098 = 0;
      for (; v2098 < v2151.length; v2098++) {
        f418(v2151[v2098], 329);
        v2151[v2098].ⵠⵠΔⲆΔ(v2151[v2098].info);
      }
      var v2152 = v2884.ᐃᐃΔ[44];
      for (v2098 = 0; v2152.length > v2098; v2098++) {
        var v2153 = v2152[v2098];
        if (v2153.info > 0) {
          f418(v2153, 1037);
        } else {
          f418(v2153, 284);
        }
      }
      var v2154 = v2884.ᐃᐃΔ[38];
      for (v2098 = 0; v2098 < v2154.length; v2098++) {
        f418(v2154[v2098], 261);
      }
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1756, "jus", 0, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1756, "jus", 1, 1);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1756, "jus", 2, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 202, "g", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 526, "gw", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 203, "d", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 527, "dw", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 201, "p", 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1757, "jub", 1, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1739, "bap", 1, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 351, "m", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 212, "a", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 304, "re", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 306, "cop", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 307, "iro", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 308, "top", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 309, "sap", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 310, "jad", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 311, "rub", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 313, "aqu", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 312, "coa", 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 898, "cs", 3, 3);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 898, "cs", 2, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 898, "cs", 1, 1);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 898, "cs", 0, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 895, "cs", 3, 3);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 895, "cs", 2, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 895, "cs", 1, 1);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 895, "cs", 0, 0);
      var v2155 = v2884.ᐃᐃΔ[105];
      for (v2098 = 0; v2155.length > v2098; v2098++) {
        for (v2101 = 0; v2155[v2098].info > v2101; v2101++) {
          f418(v2155[v2098].ⵠᐃⵠΔ[v2101], 404);
        }
      }
      v2155 = v2884.ᐃᐃΔ[106];
      v2098 = 0;
      for (; v2155.length > v2098; v2098++) {
        for (v2101 = 0; v2155[v2098].info > v2101; v2101++) {
          f418(v2155[v2098].ⵠᐃⵠΔ[v2101], 405);
        }
      }
      v2155 = v2884.ᐃᐃΔ[104];
      v2098 = 0;
      for (; v2155.length > v2098; v2098++) {
        for (v2101 = 0; v2155[v2098].info > v2101; v2101++) {
          f418(v2155[v2098].ⵠᐃⵠΔ[v2101], 1759);
        }
      }
      f429(f410, vV2066, vV2067, vV2064, vV2065, 199, "s", 2);
      var v2156 = v2884.ᐃᐃΔ[24];
      for (v2098 = 0; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[25];
      v2098 = 0;
      for (; v2156.length > v2098; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[26];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[27];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[28];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[29];
      v2098 = 0;
      for (; v2156.length > v2098; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[30];
      v2098 = 0;
      for (; v2156.length > v2098; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[31];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[32];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[33];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[34];
      v2098 = 0;
      for (; v2156.length > v2098; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[35];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[36];
      v2098 = 0;
      for (; v2098 < v2156.length; v2098++) {
        f418(v2156[v2098]);
      }
      v2156 = v2884.ᐃᐃΔ[37];
      v2098 = 0;
      for (; v2156.length > v2098; v2098++) {
        f418(v2156[v2098]);
      }
      var v2157 = v2884.ᐃᐃΔ[41];
      for (v2098 = 0; v2157.length > v2098; v2098++) {
        f415(v2157[v2098]);
      }
      v2104 = v2884.ᐃᐃΔ[1];
      v2098 = 0;
      for (; v2104.length > v2098; v2098++) {
        f419(v2104[v2098]);
      }
      v2104 = v2884.ᐃᐃΔ[6];
      v2098 = 0;
      for (; v2098 < v2104.length; v2098++) {
        f419(v2104[v2098]);
      }
      v2103 = v2884.ᐃᐃΔ[18];
      v2098 = 0;
      for (; v2098 < v2103.length; v2098++) {
        if (v2103[v2098].action == 2) {
          f419(v2103[v2098]);
        }
      }
      v2149 = v2884.ᐃᐃΔ[43];
      v2098 = 0;
      for (; v2098 < v2149.length; v2098++) {
        f419(v2149[v2098]);
      }
      v2105 = v2884.ᐃᐃΔ[22];
      v2098 = 0;
      for (; v2098 < v2105.length; v2098++) {
        f419(v2105[v2098]);
      }
      v2106 = v2884.ᐃᐃΔ[23];
      v2098 = 0;
      for (; v2098 < v2106.length; v2098++) {
        f419(v2106[v2098]);
        v2106[v2098].ⵠⵠΔⲆΔ(v2106[v2098].info);
      }
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1265, "c", 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 200, "t", 5, 4);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 524, "f", 2, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 912, "plm", 0, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 418, "b", 3, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 200, "t", 3, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1755, "jut", 4, 4);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 418, "b", 1, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 524, "f", 1, 1);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 912, "plm", 1, 1);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 200, "t", 1, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1755, "jut", 3, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 524, "f", 0, 0);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 912, "plm", 2, 2);
      f429(f410, vV2066, vV2067, vV2064, vV2065, 1755, "jut", 1, 0);
      v2157 = v2884.ᐃᐃΔ[41];
      v2098 = 0;
      for (; v2098 < v2157.length; v2098++) {
        f419(v2157[v2098]);
      }
      var v2158 = v2884.ᐃᐃΔ[65];
      for (v2098 = 0; v2098 < v2158.length; v2098++) {
        f418(v2158[v2098], 331);
      }
      v2099 = v2884.ᐃᐃΔ[0];
      v2098 = 0;
      for (; v2098 < v2099.length; v2098++) {
        if ((v2100 = v2099[v2098]).ᐃᐃᐃΔᐃΔⲆ === 1 && (v2100.ⲆⵠΔⲆᐃ < 180 || v2100.ΔⵠΔΔ !== 337 && v2100.ΔⵠΔΔ !== 338 && v2100.ΔⵠΔΔ !== 164 && v2100.ΔⵠΔΔ !== 355 && v2100.ΔⵠΔΔ !== 354 && v2100.ΔⵠΔΔ !== 358 && v2100.ΔⵠΔΔ !== 339 && v2100.ΔⵠΔΔ !== 340)) {
          v2100.ⲆΔΔΔⵠΔᐃ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(v2100.ⲆΔΔΔⵠΔᐃ, 100, 0.018);
          v2126 = 1 + Math.min(1, Math.max(v2100.ⲆΔΔΔⵠΔᐃ, 0) / 100) * 0.18;
          v419.save();
          v419.scale(v2126, v2126);
          v2885.ⲆΔⵠ.x /= v2126;
          v2885.ⲆΔⵠ.y /= v2126;
          v2100.x /= v2126;
          v2100.y /= v2126;
          v2100.r.x /= v2126;
          v2100.r.y /= v2126;
          v2100.ΔᐃΔᐃⵠⲆⲆ();
          v2100.ᐃᐃΔⵠ();
          v2885.ⲆΔⵠ.x *= v2126;
          v2885.ⲆΔⵠ.y *= v2126;
          v2100.x *= v2126;
          v2100.y *= v2126;
          v2100.r.x *= v2126;
          v2100.r.y *= v2126;
          v419.restore();
        }
      }
      var v2159 = v2884.ᐃᐃΔ[47];
      for (v2098 = 0; v2159.length > v2098; v2098++) {
        f418(v2159[v2098], 292);
        v2159[v2098].ⵠⵠΔⲆΔ(v2159[v2098].info);
      }
      var v2160 = v2884.ᐃᐃΔ[102];
      for (v2098 = 0; v2098 < v2160.length; v2098++) {
        f418(v2160[v2098], 355, 356);
      }
      var v2161 = v2884.ᐃᐃΔ[51];
      for (v2098 = 0; v2161.length > v2098; v2098++) {
        f418(v2161[v2098], 303);
      }
      v2099 = v2884.ᐃᐃΔ[0];
      v2098 = 0;
      for (; v2099.length > v2098; v2098++) {
        v2100 = v2099[v2098];
        if ((v2100.ΔⵠΔΔ === 337 || v2100.ΔⵠΔΔ === 338 || v2100.ΔⵠΔΔ === 164 || v2100.ΔⵠΔΔ === 355 || v2100.ΔⵠΔΔ === 354 || v2100.ΔⵠΔΔ === 358 || v2100.ΔⵠΔΔ === 339 || v2100.ΔⵠΔΔ === 340) && v2100.ⲆⵠΔⲆᐃ > 180) {
          v2100.ΔⲆΔᐃΔⲆⲆ = 1;
          v419.save();
          v2126 = 1 + Math.min(1, Math.max(v2100.ᐃΔⲆⲆⲆ - 30, 0) / 180) * 0.35;
          v419.scale(v2126, v2126);
          v2885.ⲆΔⵠ.x /= v2126;
          v2885.ⲆΔⵠ.y /= v2126;
          v2100.x /= v2126;
          v2100.y /= v2126;
          v2100.r.x /= v2126;
          v2100.r.y /= v2126;
          v2100.ΔᐃΔᐃⵠⲆⲆ();
          v2100.ᐃᐃΔⵠ();
          v2885.ⲆΔⵠ.x *= v2126;
          v2885.ⲆΔⵠ.y *= v2126;
          v2100.x *= v2126;
          v2100.y *= v2126;
          v2100.r.x *= v2126;
          v2100.r.y *= v2126;
          v419.restore();
        }
      }
      v2125 = v2884.ᐃᐃΔ[103];
      v2098 = 0;
      for (; v2125.length > v2098; v2098++) {
        if (v2125[v2098].ΔⲆΔᐃΔⲆⲆ === 1) {
          f418(v2125[v2098]);
        }
      }
      v2146 = v2884.ᐃᐃΔ[71];
      v2098 = 0;
      for (; v2098 < v2146.length; v2098++) {
        if (v2146[v2098].scale > 1) {
          f418(v2146[v2098], 587, 601);
        }
      }
      v2146 = v2884.ᐃᐃΔ[76];
      v2098 = 0;
      for (; v2146.length > v2098; v2098++) {
        if (v2146[v2098].scale > 1) {
          f418(v2146[v2098], 588, 602);
        }
      }
      var v2162 = v2884.ᐃᐃΔ[86];
      for (v2098 = 0; v2098 < v2162.length; v2098++) {
        f418(v2162[v2098], 1446, 1454);
      }
      var v2163 = v2884.ᐃᐃΔ[81];
      for (v2098 = 0; v2163.length > v2098; v2098++) {
        f418(v2163[v2098], 345, 1415);
      }
      var v2164 = v2884.ᐃᐃΔ[82];
      for (v2098 = 0; v2164.length > v2098; v2098++) {
        f418(v2164[v2098], 348, 1436);
      }
      if ((v2018 += v3116 * 15) > 60) {
        v2018 -= 60;
      }
      f429(f406, vV2066, vV2067, vV2064, vV2065, 1349, "fo", 2);
      f429(f406, vV2066, vV2067, vV2064, vV2065, 354, "fod", 2);
    })();
    if (v2883.ⲆⲆⲆΔⵠ && v2884.mode !== 2 && v2884.mode !== 5) {
      (function () {
        var v2165 = v2885.ⲆⵠᐃⵠΔ;
        if (v2165.ⲆⲆᐃⲆᐃ === 0) {
          v2165.ᐃΔⲆⲆᐃ = Math.max(0, v2165.ᐃΔⲆⲆᐃ - v3116 / 10);
        } else {
          v2165.ᐃΔⲆⲆᐃ = Math.min(1, v2165.ᐃΔⲆⲆᐃ + v3116 / 10);
        }
        for (var v2166 = v2165.ⵠⵠᐃᐃΔ, v2167 = 0; v2166.length > v2167; v2167++) {
          var v2168 = v2166[v2167];
          v2165.ᐃⲆⲆ(v2168);
          f421(609, v2168.id, v2885.ⲆΔⵠ.x + v2168.x, v2885.ⲆΔⵠ.y + v2168.y, v2168.alpha);
        }
        for (v2167 = 0; v2166.length > v2167; v2167++) {
          if ((v2168 = v2166[v2167]).ᐃΔΔΔᐃ <= 0 || v2168.x > -v2885.ⲆΔⵠ.x + v420 || v2168.x < -v2885.ⲆΔⵠ.x - v2885.ⲆΔⵠ.w / 2 || -v2885.ⲆΔⵠ.y + v421 < v2168.y) {
            v2166.splice(v2167, 1);
          }
        }
        var v2169 = -v2885.ⲆΔⵠ.y;
        if (v2884.ⵠⵠⵠⵠⵠ > -1000) {
          v2165.add(v2169);
        }
      })();
      (function () {
        var v2170 = v2885.ᐃᐃΔΔⲆ;
        if (v2170.ⲆⲆᐃⲆᐃ === 0) {
          v2170.ᐃΔⲆⲆᐃ = Math.max(0, v2170.ᐃΔⲆⲆᐃ - v3116 / 10);
        } else {
          v2170.ᐃΔⲆⲆᐃ = Math.min(1, v2170.ᐃΔⲆⲆᐃ + v3116 / 10);
        }
        for (var v2171 = v2170.ⵠⵠᐃᐃΔ, v2172 = 0; v2172 < v2171.length; v2172++) {
          var v2173 = v2171[v2172];
          v2170.ᐃⲆⲆ(v2173);
          f421(608, v2173.id, v2885.ⲆΔⵠ.x + v2173.x, v2885.ⲆΔⵠ.y + v2173.y, v2173.alpha);
        }
        for (v2172 = 0; v2172 < v2171.length; v2172++) {
          if ((v2173 = v2171[v2172]).ᐃΔΔΔᐃ <= 0 || v2173.x > -v2885.ⲆΔⵠ.x + v420 || -v2885.ⲆΔⵠ.x > v2173.x || v2173.y > -v2885.ⲆΔⵠ.y + v421) {
            v2171.splice(v2172, 1);
          }
        }
        var v2174 = -v2885.ⲆΔⵠ.y;
        if (v2884.ⵠⵠΔⵠᐃ > -1000) {
          v2170.add(v2174);
        }
      })();
      (function () {
        var v2175 = v2885.ⵠᐃⵠⵠⲆⵠᐃ;
        for (var v2176 = v2175.ⵠⵠᐃᐃΔ, v2177 = 0; v2177 < v2176.length; v2177++) {
          var v2178 = v2176[v2177];
          v2175.ᐃⲆⲆ(v2178);
          f421(1218, v2178.id, v2885.ⲆΔⵠ.x + v2178.x, v2885.ⲆΔⵠ.y + v2178.y, v2178.alpha);
        }
        for (v2177 = 0; v2177 < v2176.length; v2177++) {
          if ((v2178 = v2176[v2177]).ᐃΔΔΔᐃ <= 0 || v2178.x > -v2885.ⲆΔⵠ.x + v420 || -v2885.ⲆΔⵠ.x > v2178.x || -v2885.ⲆΔⵠ.y + v421 < v2178.y) {
            v2176.splice(v2177, 1);
          }
        }
        var v2179 = -v2885.ⲆΔⵠ.y;
        if (v2884.ⵠᐃΔⲆⲆ > -1000) {
          v2175.add(v2179);
        }
      })();
    }
    if (v2884.transition && v2081) {
      v2884.transition = false;
      v2884.ΔⲆᐃⲆ.ⵠᐃᐃ = 0;
      v2884.ΔⲆᐃⲆ.ⲆⲆΔ = false;
    }
  }
  function f414(p1313, p1314, p1315, p1316, p1317, p1318) {
    var v2180 = p1316.w1;
    var v2181 = p1316.w2;
    var v2182 = p1316.w3;
    var v2183 = v2885.ⲆΔⵠ.x + p1313 - 700;
    var v2184 = Math.max(v2885.ⲆΔⵠ.y + p1314, 0);
    var v2185 = Math.max(-v2885.ⲆΔⵠ.y + v421 - p1315 - 100, 0);
    var vV2184 = v2184;
    var v2186 = v421 - v2184 - v2185;
    if (p1318) {
      var v2187 = p1316.Δᐃⵠ(v2180).x;
    } else {
      v2187 = v2180.r.x;
    }
    var v2188 = v2183 + 0;
    0;
    v2188 += v2187 + 0 - 2;
    if (p1318) {
      v2187 = p1316.Δᐃⵠ(v2181).x;
    } else {
      v2187 = v2181.r.x;
    }
    var v2189 = v2183 + 250 - v2188 + v2187;
    var v2190 = (v2188 += v2189 - 2) - 2;
    if (p1318) {
      v2187 = p1316.Δᐃⵠ(v2182).x;
    } else {
      v2187 = v2182.r.x;
    }
    if (v2190 < v2188 + (v2189 = v2183 + 350 - v2188 + v2187) - 3) {
      v2188 += v2189 - 2;
    } else {
      v2188 = v2190;
    }
    v2189 = v2183 + 700 - v2188;
    if (p1318 > 0 && p1317.ΔⲆⲆⲆⵠᐃΔ === 1) {
      if (v2884.transition) {
        var v2191 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 77, 72, 252, 239, 187, v2191);
      } else {
        v419.fillStyle = v624.ⲆᐃᐃΔⲆᐃᐃ[v2884.time];
      }
      v419.fillRect(v2188, vV2184, v2189, v2186);
    } else {
      if (v2884.transition) {
        v2191 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(p1317.ⲆᐃΔ[0], p1317.ⲆᐃΔ[1], p1317.ⲆᐃΔ[2], p1317.ⵠⵠᐃ[0], p1317.ⵠⵠᐃ[1], p1317.ⵠⵠᐃ[2], v2191);
      } else {
        v419.fillStyle = p1317.ⵠΔⵠⵠᐃ[v2884.time];
      }
      v419.fillRect(v2188, vV2184, v2189, v2186);
    }
  }
  function f415(p1319, p1320) {
    if (v2884.transition) {
      v419.globalAlpha = 1;
      p1319.ⲆⵠᐃᐃᐃΔᐃ(p1320);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      p1319.ⲆⵠᐃᐃᐃΔᐃ(p1320);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      p1319.ⲆⵠᐃᐃᐃΔᐃ(p1320);
    }
  }
  function f416(p1321, p1322, p1323, p1324) {
    var v2192 = p1322.width;
    var v2193 = p1322.height;
    var v2194 = Math.floor(v2192 / 2);
    var v2195 = Math.floor(v2193 / 2);
    if (v2884.transition) {
      v419.globalAlpha = 1;
      f304(v419, ΔΔ[p1321][v2884.time], 0, 0, v2192, v2193, p1323, p1324, v2194, v2195);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      f304(v419, ΔΔ[p1321][v2884.time], 0, 0, v2192, v2193, p1323, p1324, v2194, v2195);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      f304(v419, p1322, 0, 0, v2192, v2193, p1323, p1324, v2194, v2195);
    }
  }
  function f417(p1325, p1326, p1327, p1328, p1329, p1330) {
    var v2196 = p1328.w1;
    var v2197 = p1328.w2;
    var v2198 = p1328.w3;
    var v2199 = v2885.ⲆΔⵠ.x + p1325 + 820;
    var v2200 = Math.max(v2885.ⲆΔⵠ.y + p1326, 0);
    var v2201 = Math.max(-v2885.ⲆΔⵠ.y + v421 - p1327 - 100, 0);
    var vV2200 = v2200;
    var v2202 = v421 - v2200 - v2201;
    if (p1330) {
      var v2203 = p1328.Δᐃⵠ(v2196);
    } else {
      v2203 = v2196.r;
    }
    var v2204 = v2199 + 0;
    var vV2204 = v2204;
    var vVV2200 = vV2200;
    var v2205 = -v2203.x + 0;
    var vV2202 = v2202;
    var v2206 = v2204 += -v2203.x + 0 + 2;
    if (p1330) {
      v2203 = p1328.Δᐃⵠ(v2197);
    } else {
      v2203 = v2197.r;
    }
    var v2207 = v2199 - 250 - v2204 - v2203.x;
    var vV22042 = v2204;
    var vVV22002 = vV2200;
    var vV2207 = v2207;
    var vV22022 = v2202;
    var v2208 = (v2204 += v2207 + 2) - 2;
    if (p1330) {
      v2203 = p1328.Δᐃⵠ(v2198);
    } else {
      v2203 = v2198.r;
    }
    if (v2204 + (v2207 = v2199 - 350 - v2204 - v2203.x) < v2208) {
      var v2209 = true;
      var vV22043 = v2204;
      var vVV22003 = vV2200;
      var vV22072 = v2207;
      var vV22023 = v2202;
      var v2210 = v2204 += v2207 + 2;
    } else {
      v2209 = false;
      v2204 = v2208;
      v2210 = -1;
    }
    v2207 = v2199 - 700 - v2204;
    if (v2884.transition) {
      var v2211 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2211);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vV2204, vVV2200, v2205, vV2202);
    if (p1330) {
      if (v2884.transition) {
        v2211 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 70, 76, 42, 139, 155, v2211);
      } else {
        v419.fillStyle = v624.ΔΔⵠᐃΔΔⲆ[v2884.time];
      }
    } else if (v2884.transition) {
      v2211 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2211);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vV22042, vVV22002, vV2207, vV22022);
    if (v2209) {
      if (p1330) {
        if (v2884.transition) {
          v2211 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
          v419.fillStyle = f420(17, 94, 96, 169, 214, 211, v2211);
        } else {
          v419.fillStyle = v624.ᐃᐃΔΔⵠΔⵠ[v2884.time];
        }
      } else if (v2884.transition) {
        v2211 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2211);
      } else {
        v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
      }
      v419.fillRect(vV22043, vVV22003, vV22072, vV22023);
    }
    if (v2883.ⲆⲆⲆΔⵠ && p1330) {
      p1328.ⵠⵠᐃΔᐃⵠΔΔᐃ(v2208, v2210, v2206, v2199, -v2885.ⲆΔⵠ.y + vVV2200, -v2885.ⲆΔⵠ.y + vVV2200 + vV2202);
    }
  }
  function f418(p1331, p1332, p1333) {
    if (v2884.transition) {
      v419.globalAlpha = 1;
      p1331.ᐃᐃΔⵠ(p1332, p1333);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      p1331.ᐃᐃΔⵠ(p1332, p1333);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      p1331.ᐃᐃΔⵠ(p1332, p1333);
    }
  }
  function f419(p1334, p1335) {
    if (v2884.transition) {
      v419.globalAlpha = 1;
      p1334.ᐃΔΔᐃΔ(p1335);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      p1334.ᐃΔΔᐃΔ(p1335);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      p1334.ᐃΔΔᐃΔ(p1335);
    }
  }
  function f420(p1336, p1337, p1338, p1339, p1340, p1341, p1342) {
    var v2212;
    var v2213 = "#";
    v2213 += (v2212 = Math.floor(p1342 * p1339 + p1336 * (1 - p1342))) < 16 ? "0" + v2212.toString(16) : v2212.toString(16);
    v2213 += (v2212 = Math.floor(p1342 * p1340 + (1 - p1342) * p1337)) < 16 ? "0" + v2212.toString(16) : v2212.toString(16);
    return v2213 += (v2212 = Math.floor(p1342 * p1341 + p1338 * (1 - p1342))) < 16 ? "0" + v2212.toString(16) : v2212.toString(16);
  }
  function f421(p1343, p1344, p1345, p1346, p1347) {
    if (v2884.transition && p1347 == 1) {
      v419.globalAlpha = 1;
      f304(v419, ΔΔ[p1343][v2884.time][p1344], p1345, p1346);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      f304(v419, ΔΔ[p1343][v2884.time][p1344], p1345, p1346);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      v419.globalAlpha = p1347;
      f304(v419, ΔΔ[p1343][v2884.time][p1344], p1345, p1346);
      v419.globalAlpha = 1;
    }
  }
  function f422(p1348, p1349, p1350, p1351, p1352, p1353) {
    var v2214 = p1351.w1;
    var v2215 = p1351.w2;
    var v2216 = p1351.w3;
    var v2217 = v2885.ⲆΔⵠ.y + p1348 + 710;
    var v2218 = Math.max(v2885.ⲆΔⵠ.x + p1349, 0);
    var v2219 = Math.max(-v2885.ⲆΔⵠ.x + v420 - p1350 - 100, 0);
    var vV2218 = v2218;
    var v2220 = v420 - v2218 - v2219;
    if (p1353) {
      var v2221 = p1351.Δᐃⵠ(v2214).x;
    } else {
      v2221 = v2214.r.x;
    }
    var v2222 = v2217 + 0;
    0;
    v2222 += -v2221 + 0 + 2;
    if (p1353) {
      v2221 = p1351.Δᐃⵠ(v2215).x;
    } else {
      v2221 = v2215.r.x;
    }
    var v2223 = v2217 - 250 - v2222 - v2221;
    var v2224 = (v2222 += v2223 + 2) - 2;
    if (p1353) {
      v2221 = p1351.Δᐃⵠ(v2216).x;
    } else {
      v2221 = v2216.r.x;
    }
    if (v2224 > v2222 + (v2223 = v2217 - 350 - v2222 - v2221)) {
      v2222 += v2223 + 2;
    } else {
      v2222 = v2224;
    }
    v2223 = v2217 - 700 - v2222;
    if (p1353 > 0 && p1352.ΔⲆⲆⲆⵠᐃΔ === 1) {
      if (v2884.transition) {
        var v2225 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 77, 72, 252, 239, 187, v2225);
      } else {
        v419.fillStyle = v624.ⲆᐃᐃΔⲆᐃᐃ[v2884.time];
      }
      v419.fillRect(vV2218, v2222, v2220, v2223);
    } else {
      if (v2884.transition) {
        v2225 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(p1352.ⲆᐃΔ[0], p1352.ⲆᐃΔ[1], p1352.ⲆᐃΔ[2], p1352.ⵠⵠᐃ[0], p1352.ⵠⵠᐃ[1], p1352.ⵠⵠᐃ[2], v2225);
      } else {
        v419.fillStyle = p1352.ⵠΔⵠⵠᐃ[v2884.time];
      }
      v419.fillRect(vV2218, v2222, v2220, v2223);
    }
  }
  function f423(p1354, p1355, p1356, p1357, p1358, p1359) {
    var v2226 = p1357.w1;
    var v2227 = p1357.w2;
    var v2228 = p1357.w3;
    var v2229 = v2885.ⲆΔⵠ.y + p1354 - 700;
    var v2230 = Math.max(v2885.ⲆΔⵠ.x + p1355, 0);
    var v2231 = Math.max(-v2885.ⲆΔⵠ.x + v420 - p1356 - 100, 0);
    var vV2230 = v2230;
    var v2232 = v420 - v2230 - v2231;
    if (p1359) {
      var v2233 = p1357.Δᐃⵠ(v2226);
    } else {
      v2233 = v2226.r;
    }
    var v2234 = v2229 + 0;
    var vVV2230 = vV2230;
    var vV2234 = v2234;
    var v2235 = v2233.x + 0;
    var vV2232 = v2232;
    var v2236 = v2234 += v2233.x + 0 - 2;
    if (p1359) {
      v2233 = p1357.Δᐃⵠ(v2227);
    } else {
      v2233 = v2227.r;
    }
    var v2237 = v2229 + 250 - v2234 + v2233.x;
    var vV22342 = v2234;
    var vVV22302 = vV2230;
    var vV2237 = v2237;
    var vV22322 = v2232;
    var v2238 = (v2234 += v2237 - 2) - 2;
    if (p1359) {
      v2233 = p1357.Δᐃⵠ(v2228);
    } else {
      v2233 = v2228.r;
    }
    if (v2238 < v2234 + (v2237 = v2229 + 350 - v2234 + v2233.x) - 3) {
      var vVVVVV30 = vVVVV30;
      var vV22343 = v2234;
      var vVV22303 = vV2230;
      var vV22372 = v2237;
      var vV22323 = v2232;
      var v2239 = v2234 += v2237 - 2;
    } else {
      vVVVVV30 = vVV3152;
      v2234 = v2238;
      v2239 = -1;
    }
    v2237 = v2229 + 700 - v2234;
    if (v2884.transition) {
      var v2240 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2240);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vVV2230, vV2234, vV2232, v2235);
    if (p1359) {
      if (v2884.transition) {
        v2240 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 70, 76, 42, 139, 155, v2240);
      } else {
        v419.fillStyle = v624.ΔΔⵠᐃΔΔⲆ[v2884.time];
      }
    } else if (v2884.transition) {
      v2240 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2240);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vVV22302, vV22342, vV22322, vV2237);
    if (vVVVVV30) {
      if (p1359) {
        if (v2884.transition) {
          v2240 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
          v419.fillStyle = f420(17, 94, 96, 169, 214, 211, v2240);
        } else {
          v419.fillStyle = v624.ᐃᐃΔΔⵠΔⵠ[v2884.time];
        }
      } else if (v2884.transition) {
        v2240 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2240);
      } else {
        v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
      }
      v419.fillRect(vVV22303, vV22343, vV22323, vV22372);
    }
    if (v2883.ⲆⲆⲆΔⵠ && p1359) {
      p1357.ΔΔⵠΔΔΔⵠΔᐃ(v2238, v2239, v2236, v2229, -v2885.ⲆΔⵠ.x + vVV2230, -v2885.ⲆΔⵠ.x + vVV2230 + vV2232);
    }
  }
  function f424(p1360) {
    v419.globalAlpha = p1360.alpha;
    f93(v419, p1360.x + v2885.ⲆΔⵠ.x, p1360.y + v2885.ⲆΔⵠ.y, p1360.r);
    f90(v419, v624.ⲆᐃⲆⲆⲆⲆΔ[v2884.time]);
    v419.globalAlpha = 1;
  }
  function f425(p1361, p1362, p1363, p1364, p1365, p1366) {
    var v2241 = p1364.w1;
    var v2242 = p1364.w2;
    var v2243 = p1364.w3;
    var v2244 = v2885.ⲆΔⵠ.x + p1361 + 820;
    var v2245 = Math.max(v2885.ⲆΔⵠ.y + p1362, 0);
    var v2246 = Math.max(-v2885.ⲆΔⵠ.y + v421 - p1363 - 100, 0);
    var vV2245 = v2245;
    var v2247 = v421 - v2245 - v2246;
    if (p1366) {
      var v2248 = p1364.Δᐃⵠ(v2241).x;
    } else {
      v2248 = v2241.r.x;
    }
    var v2249 = v2244 + 0;
    0;
    v2249 += -v2248 + 0 + 2;
    if (p1366) {
      v2248 = p1364.Δᐃⵠ(v2242).x;
    } else {
      v2248 = v2242.r.x;
    }
    var v2250 = v2244 - 250 - v2249 - v2248;
    var v2251 = (v2249 += v2250 + 2) - 2;
    if (p1366) {
      v2248 = p1364.Δᐃⵠ(v2243).x;
    } else {
      v2248 = v2243.r.x;
    }
    if (v2249 + (v2250 = v2244 - 350 - v2249 - v2248) < v2251) {
      v2249 += v2250 + 2;
    } else {
      v2249 = v2251;
    }
    v2250 = v2244 - 700 - v2249;
    if (p1366 > 0 && p1365.ΔⲆⲆⲆⵠᐃΔ === 1) {
      if (v2884.transition) {
        var v2252 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 77, 72, 252, 239, 187, v2252);
      } else {
        v419.fillStyle = v624.ⲆᐃᐃΔⲆᐃᐃ[v2884.time];
      }
      v419.fillRect(v2249, vV2245, v2250, v2247);
    } else {
      if (v2884.transition) {
        v2252 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(p1365.ⲆᐃΔ[0], p1365.ⲆᐃΔ[1], p1365.ⲆᐃΔ[2], p1365.ⵠⵠᐃ[0], p1365.ⵠⵠᐃ[1], p1365.ⵠⵠᐃ[2], v2252);
      } else {
        v419.fillStyle = p1365.ⵠΔⵠⵠᐃ[v2884.time];
      }
      v419.fillRect(v2249, vV2245, v2250, v2247);
    }
  }
  function f426(p1367, p1368, p1369, p1370, p1371) {
    var v2253 = p1369.width;
    var v2254 = p1369.height;
    var v2255 = Math.floor(v2253 / 2);
    var v2256 = Math.floor(v2254 / 2);
    if (v2884.transition) {
      v419.globalAlpha = 1;
      f304(v419, ΔΔ[p1367][p1368][v2884.time], 0, 0, v2253, v2254, p1370, p1371, v2255, v2256);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      f304(v419, ΔΔ[p1367][p1368][v2884.time], 0, 0, v2253, v2254, p1370, p1371, v2255, v2256);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      f304(v419, ΔΔ[p1367][p1368][v2884.time], 0, 0, v2253, v2254, p1370, p1371, v2255, v2256);
    }
  }
  function f427(p1372, p1373, p1374, p1375, p1376, p1377) {
    var v2257 = p1375.w1;
    var v2258 = p1375.w2;
    var v2259 = p1375.w3;
    var v2260 = v2885.ⲆΔⵠ.y + p1372 + 710;
    var v2261 = Math.max(v2885.ⲆΔⵠ.x + p1373, 0);
    var v2262 = Math.max(-v2885.ⲆΔⵠ.x + v420 - p1374 - 100, 0);
    var vV2261 = v2261;
    var v2263 = v420 - v2261 - v2262;
    if (p1377) {
      var v2264 = p1375.Δᐃⵠ(v2257);
    } else {
      v2264 = v2257.r;
    }
    var v2265 = v2260 + 0;
    var vV2265 = v2265;
    var vVV2261 = vV2261;
    var v2266 = -v2264.x + 0;
    var vV2263 = v2263;
    var v2267 = v2265 += -v2264.x + 0 + 2;
    if (p1377) {
      v2264 = p1375.Δᐃⵠ(v2258);
    } else {
      v2264 = v2258.r;
    }
    var v2268 = v2260 - 250 - v2265 - v2264.x;
    var vV22652 = v2265;
    var vVV22612 = vV2261;
    var vV2268 = v2268;
    var vV22632 = v2263;
    var v2269 = (v2265 += v2268 + 2) - 2;
    if (p1377) {
      v2264 = p1375.Δᐃⵠ(v2259);
    } else {
      v2264 = v2259.r;
    }
    if (v2269 > v2265 + (v2268 = v2260 - 350 - v2265 - v2264.x)) {
      var vVVVVV302 = vVVVV30;
      var vV22653 = v2265;
      var vVV22613 = vV2261;
      var vV22682 = v2268;
      var vV22633 = v2263;
      var v2270 = v2265 += v2268 + 2;
    } else {
      vVVVVV302 = false;
      v2265 = v2269;
      v2270 = -1;
    }
    v2268 = v2260 - 700 - v2265;
    if (v2884.transition) {
      var v2271 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2271);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vVV2261, vV2265, vV2263, v2266);
    if (p1377) {
      if (v2884.transition) {
        v2271 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 70, 76, 42, 139, 155, v2271);
      } else {
        v419.fillStyle = v624.ΔΔⵠᐃΔΔⲆ[v2884.time];
      }
    } else if (v2884.transition) {
      v2271 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2271);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vVV22612, vV22652, vV22632, vV2268);
    if (vVVVVV302) {
      if (p1377) {
        if (v2884.transition) {
          v2271 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
          v419.fillStyle = f420(17, 94, 96, 169, 214, 211, v2271);
        } else {
          v419.fillStyle = v624.ᐃᐃΔΔⵠΔⵠ[v2884.time];
        }
      } else if (v2884.transition) {
        v2271 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2271);
      } else {
        v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
      }
      v419.fillRect(vVV22613, vV22653, vV22633, vV22682);
    }
    if (v2883.ⲆⲆⲆΔⵠ && p1377) {
      p1375.ᐃᐃᐃⲆᐃᐃΔⲆⲆ(v2269, v2270, v2267, v2260, -v2885.ⲆΔⵠ.x + vVV2261, -v2885.ⲆΔⵠ.x + vVV2261 + vV2263);
    }
  }
  function f428(p1378, p1379, p1380, p1381, p1382, p1383) {
    var v2272 = p1381.w1;
    var v2273 = p1381.w2;
    var v2274 = p1381.w3;
    var v2275 = v2885.ⲆΔⵠ.x + p1378 - 700;
    var v2276 = Math.max(v2885.ⲆΔⵠ.y + p1379, 0);
    var v2277 = Math.max(-v2885.ⲆΔⵠ.y + v421 - p1380 - 100, 0);
    var vV2276 = v2276;
    var v2278 = v421 - v2276 - v2277;
    if (p1383) {
      var v2279 = p1381.Δᐃⵠ(v2272);
    } else {
      v2279 = v2272.r;
    }
    var v2280 = v2275 + 0;
    var vV2280 = v2280;
    var vVV2276 = vV2276;
    var v2281 = v2279.x + 0;
    var vV2278 = v2278;
    var v2282 = v2280 += v2279.x + 0 - 2;
    if (p1383) {
      v2279 = p1381.Δᐃⵠ(v2273);
    } else {
      v2279 = v2273.r;
    }
    var v2283 = v2275 + 250 - v2280 + v2279.x;
    var vV22802 = v2280;
    var vVV22762 = vV2276;
    var vV2283 = v2283;
    var vV22782 = v2278;
    var v2284 = (v2280 += v2283 - 2) - 2;
    if (p1383) {
      v2279 = p1381.Δᐃⵠ(v2274);
    } else {
      v2279 = v2274.r;
    }
    if (v2284 < v2280 + (v2283 = v2275 + 350 - v2280 + v2279.x) - 3) {
      var vVV305 = vV30;
      var vV22803 = v2280;
      var vVV22763 = vV2276;
      var vV22832 = v2283;
      var vV22783 = v2278;
      var v2285 = v2280 += v2283 - 2;
    } else {
      vVV305 = false;
      v2280 = v2284;
      v2285 = -1;
    }
    v2283 = v2275 + 700 - v2280;
    if (v2884.transition) {
      var v2286 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2286);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vV2280, vVV2276, v2281, vV2278);
    if (p1383) {
      if (v2884.transition) {
        v2286 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(15, 70, 76, 42, 139, 155, v2286);
      } else {
        v419.fillStyle = v624.ΔΔⵠᐃΔΔⲆ[v2884.time];
      }
    } else if (v2884.transition) {
      v2286 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2286);
    } else {
      v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
    }
    v419.fillRect(vV22802, vVV22762, vV2283, vV22782);
    if (vVV305) {
      if (p1383) {
        if (v2884.transition) {
          v2286 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
          v419.fillStyle = f420(17, 94, 96, 169, 214, 211, v2286);
        } else {
          v419.fillStyle = v624.ᐃᐃΔΔⵠΔⵠ[v2884.time];
        }
      } else if (v2884.transition) {
        v2286 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
        v419.fillStyle = f420(9, 55, 63, 11, 106, 132, v2286);
      } else {
        v419.fillStyle = v624.ΔⲆᐃΔⵠ[v2884.time];
      }
      v419.fillRect(vV22803, vVV22763, vV22832, vV22783);
    }
    if (v2883.ⲆⲆⲆΔⵠ && p1383) {
      p1381.ᐃΔᐃⵠᐃⲆⲆⲆⲆ(v2284, v2285, v2282, v2275, -v2885.ⲆΔⵠ.y + vVV2276, -v2885.ⲆΔⵠ.y + vVV2276 + vV2278);
    }
  }
  function f429(p1384, p1385, p1386, p1387, p1388, p1389, p1390, p1391, p1392, p1393) {
    if (v2884.transition) {
      v419.globalAlpha = 1;
      p1384(p1385, p1386, p1387, p1388, p1389, p1390, p1391, p1392, p1393);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      p1384(p1385, p1386, p1387, p1388, p1389, p1390, p1391, p1392, p1393);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      p1384(p1385, p1386, p1387, p1388, p1389, p1390, p1391, p1392, p1393);
    }
  }
  function f430(p1394, p1395, p1396, p1397) {
    if (v2884.transition) {
      v419.globalAlpha = 1;
      f304(v419, ΔΔ[p1394][v2884.time], p1396, p1397);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
      f304(v419, ΔΔ[p1394][v2884.time], p1396, p1397);
      v2884.time = v2884.time ? 0 : 1;
      v419.globalAlpha = 1;
    } else {
      f304(v419, p1395, p1396, p1397);
    }
  }
  var v2287 = 0;
  var v2288 = 1;
  var v2289 = 2;
  function f431(p1398, p1399, p1400, p1401, p1402) {
    var v2290 = {
      x: p1400,
      y: p1401,
      ⵠⵠⲆᐃⲆ: p1400,
      ⵠⵠᐃΔΔ: p1401
    };
    return {
      translate: v2290,
      ᐃᐃΔⵠ: function (p1403) {
        f304(p1403, p1398, v2290.x, v2290.y, p1398.width / 2, p1398.height / 2);
      },
      active: p1399,
      position: p1402
    };
  }
  function f432(p1404, p1405, p1406, p1407, p1408, p1409, p1410, p1411, p1412, p1413, p1414, p1415, p1416, p1417, p1418) {
    if (p1404.length === 0) {
      p1404 = " ";
    }
    if (vVVVUndefined823 === p1410) {
      p1410 = 0;
    }
    if (vVVVUndefined824 === p1411) {
      p1411 = 0;
    }
    if (vVVVVVUndefined1322 === p1412) {
      p1412 = 0;
    }
    if (p1417 === undefined) {
      p1417 = 0;
    }
    var v2291 = document.createElement("canvas");
    var v2292 = v2291.getContext("2d");
    v2292.textBaseline = "middle";
    v2292.font = (p1418 !== vVVVVVUndefined1322 ? p1418 + " " : "") + p1407 + "px " + p1405;
    p1408 = p1408 !== vVUndefined13 ? Math.min(v2292.measureText(p1404).width, p1408) : v2292.measureText(p1404).width;
    v2291.width = p1408 + p1410;
    v2291.height = p1407 + p1411;
    if (vUndefined !== p1409) {
      if (p1414 !== vVVVUndefined822) {
        v2292.globalAlpha = p1414;
      }
      v2292.fillStyle = p1409;
      if (vVVUndefined13 !== p1415) {
        ⵠᐃⲆⵠⲆⲆᐃᐃΔ(v2292, p1412 + 2, p1412, p1408 + p1410 - p1412 * 2 - 4, p1407 + p1411 - p1412 * 2, p1415);
        v2292.fill();
      } else {
        v2292.fillRect(p1412, p1412, p1408 + p1410 - p1412 * 2, p1407 + p1411 - p1412 * 2);
      }
      v2292.globalAlpha = 1;
      if (p1412 !== 0) {
        v2292.lineWidth = p1412;
        v2292.strokeStyle = p1413;
        v2292.stroke();
      }
    }
    v2292.textBaseline = "middle";
    v2292.font = (vUndefined !== p1418 ? p1418 + " " : "") + p1407 + "px " + p1405;
    if (p1416 !== undefined) {
      v2292.strokeStyle = p1416;
      v2292.lineWidth = p1417;
      v2292.lineJoin = "miter";
      v2292.miterLimit = 2;
      v2292.strokeText(p1404, Math.floor(p1410 / 2), Math.floor(p1411 / 2) + Math.floor(p1407 / 2), p1408);
    }
    v2292.fillStyle = p1406;
    v2292.fillText(p1404, Math.floor(p1410 / 2), Math.floor(p1411 / 2) + Math.floor(p1407 / 2), p1408);
    v2291.w2 = v2291.width / 2;
    v2291.ⵠᐃⲆⵠΔ = v2291.height / 2;
    return v2291;
  }
  function f433(p1419, p1420) {
    var v2293 = p1419.getBoundingClientRect();
    return {
      x: p1420.clientX - v2293.left,
      y: p1420.clientY - v2293.top
    };
  }
  function f434(p1421, p1422, p1423, p1424, p1425, p1426) {
    const v2294 = ~(p1421 & 16682) & (p1421 | 16682);
    const v2295 = (p1422 | 45681) & ~(p1422 & 45681);
    const v2296 = (0 << (p1423 & 255)) + (24 << (p1423 >> 8 & 255)) + (16 << (p1423 >> 16 & 255)) + (8 << (p1423 >> 24 & 255));
    const v2297 = p1424 ^ 26960;
    const v2298 = (1 + (28239 + p1426) * 22695477) % 4294967296;
    const vF153 = f15(v2294, v2295, v2296, v2297, ((p1425 + 53397) * 214013 + 2531011) % 4294967296);
    f15(v2298, v2294, v2295, v2296, v2297);
    return ~(vF153 & 8310) & vF153 | ~(vF153 & 8310) & 8310;
  }
  function f435(p1427, p1428, p1429, p1430, p1431, p1432, p1433, p1434 = 0, p1435 = 0, p1436 = 0, p1437) {
    if (p1437 === vVVVVVUndefined1322) {
      p1437 = 1;
    }
    if (p1432 !== 1) {
      p1432 = 0;
    }
    if (p1430) {
      var vP1430 = p1430;
    }
    var v2299;
    var v2300 = {
      width: p1427,
      height: p1428,
      Δᐃ: vP1430,
      state: 0,
      translate: {
        x: p1434,
        y: p1435,
        ⵠⵠⲆᐃⲆ: p1434,
        ⵠⵠᐃΔΔ: p1435
      },
      ΔᐃΔΔᐃᐃⵠΔᐃ: p1432,
      ΔΔΔⵠ: 0,
      callback: p1433,
      position: p1436,
      active: p1437
    };
    function f436() {
      return v2300.Δᐃ[0];
    }
    function f437(p1438) {
      var v2301 = v2300.translate;
      if (v2300.width === 0 || v2300.height === 0) {
        v2300.width = v2300.Δᐃ[0].width;
        v2300.height = v2300.Δᐃ[0].height;
      }
      return p1438.x > v2301.x && p1438.x < v2301.x + v2300.width / p1431 && p1438.y > v2301.y && p1438.y < v2301.y + v2300.height / p1431;
    }
    p1432 = function () {
      var v2302 = 0;
      if (v2300.ΔᐃΔΔᐃᐃⵠΔᐃ === 1) {
        if (1 === 0 || v2289 === 0) {
          v2300.ΔΔΔⵠ = (0 + v3116 * 1000) % 1000;
        } else if (0 < 0) {
          v2300.ΔΔΔⵠ = 0 > 500 ? 0 + v3116 * 1000 : 0 - v3116 * 1000;
          if (0 > 0 || 0 > 1000) {
            v2300.ΔΔΔⵠ = 0;
          }
        }
        v2302 = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(0 > 500 ? 2 : 0) * 0.2;
      }
      return v2302;
    };
    if ((p1431 = p1431 === 3 ? 3 : p1431 === 1 ? 2 : 1) === 2) {
      v2299 = function (p1439) {
        var v2303 = 1 + p1432();
        var vF436 = f436();
        var v2304 = v2303 * v2300.width / 2;
        var v2305 = v2303 * v2300.height / 2;
        var v2306 = (v2304 - v2300.width / 2) / 2;
        var v2307 = (v2305 - v2300.height / 2) / 2;
        f304(p1439, vF436, v2300.translate.x - v2306, v2300.translate.y - v2307, v2304, v2305);
      };
    } else if (p1431 === 3) {
      v2299 = function (p1440) {
        var vF4362 = f436();
        var v2308 = v2300.width;
        var v2309 = v2300.height;
        var v2310 = (v2308 - v2300.width) / 2;
        var v2311 = (v2309 - v2300.height) / 2;
        f304(p1440, vF4362, v2300.translate.x - v2310, v2300.translate.y - v2311, v2308, v2309);
      };
      p1431 = 1;
    } else {
      v2299 = function (p1441) {
        f304(p1441, f436(), v2300.translate.x, v2300.translate.y);
      };
    }
    return {
      info: v2300,
      ΔⵠΔⵠ: function (p1442, p1443, p1444) {
        if (f437(p1443)) {
          if (v2288 == p1444) {
            v2300.state = v2289;
          } else if (p1444 == 2 || v2287 == p1444 && v2289 != 0) {
            v2300.state = 1;
          }
          return vVVVV30;
        } else {
          v2300.state = 0;
          return false;
        }
      },
      ᐃᐃΔⵠ: v2299,
      ΔᐃⵠᐃⲆΔⲆ: f437
    };
  }
  function f438(p1445, p1446, p1447) {
    vVVUndefined5(v802, p1445, p1446, p1447);
    const vF75 = f75(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    const vF752 = f75(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2]);
    return (0 << ((vF75 ^ vF752) >> 16 & 255)) + (8 << ((vF75 ^ vF752) >> 24 & 255)) + (24 << ((vF75 ^ vF752) >> 8 & 255)) + (16 << ((vF75 ^ vF752) & 255));
  }
  var v2312 = "send";
  var v2313 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("id") === "1" ? 1 : 0;
  var v2314 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("password");
  var v2315 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("debug") || undefined;
  if (v2315 !== undefined) {
    v2315 = JSON.parse(vWindow.decodeURIComponent(v2315));
  }
  var v2316 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("server") || vVVVUndefined132;
  var v2317 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("region") || undefined;
  var v2318 = "starve.io";
  var v2319 = "https://" + v2318;
  var v2320 = {
    ΔⲆⲆⵠ: 2,
    ⲆΔⵠⵠⵠᐃⵠ: 8,
    ᐃᐃⵠⵠᐃ: 4,
    ⵠⲆⲆⲆᐃΔⵠ: 32,
    ⵠⵠᐃᐃᐃᐃᐃ: 16,
    ⵠⵠΔⲆᐃᐃⵠ: 128,
    ΔⵠΔΔΔⵠᐃⲆΔ: 1,
    IDLE: 64,
    ⲆⲆᐃⵠΔᐃⲆ: 256
  };
  var v2321 = [{
    ⲆⵠΔΔⲆ: 1000,
    items: [[2, 204], [1, 208], [8, 201], [1, 236]]
  }, {
    ⲆⵠΔΔⲆ: 2000,
    items: [[2, 209], [1, 8], [2, 208], [16, 201], [2, 236]]
  }, {
    ⲆⵠΔΔⲆ: 4000,
    items: [[3, 209], [1, 1], [4, 208], [20, 201], [4, 236], [1, 205], [80, 199], [140, 200]]
  }, {
    ⲆⵠΔΔⲆ: 8000,
    items: [[1, 47], [4, 209], [1, 3], [6, 208], [30, 201], [6, 236], [1, 205], [150, 199], [200, 200], [60, 202], [2, 218]]
  }, {
    ⲆⵠΔΔⲆ: 16000,
    items: [[1, 47], [1, 4], [1, 300], [7, 229], [2, 218], [2, 209], [1, 210], [15, 265], [2, 273], [1, 261], [1, 101], [200, 199], [300, 200]]
  }, {
    ⲆⵠΔΔⲆ: 16000,
    items: [[1, 47], [1, 11], [1, 86], [1, 3], [10, 229], [4, 218], [6, 209], [3, 297], [1, 46], [200, 199], [300, 200]]
  }, {
    ⲆⵠΔΔⲆ: 16000,
    items: [[1, 47], [1, 156], [1, 63], [3, 297], [1, 0], [1, 3], [7, 229], [2, 218], [4, 209], [150, 199], [200, 200], [1, 260]]
  }, {
    ⲆⵠΔΔⲆ: 16000,
    items: [[1, 47], [1, 157], [1, 3], [7, 229], [2, 218], [4, 209], [2, 228], [4, 237], [10, 234], [6, 225], [4, 206], [1, 85], [500, 200]]
  }, {
    ⲆⵠΔΔⲆ: 16000,
    items: [[1, 47], [1, 3], [16, 231], [1, 218], [6, 209], [3, 297], [1, 84], [1, 0], [16, 216], [150, 199], [200, 200]]
  }, {
    ⲆⵠΔΔⲆ: 20000,
    items: [[1, 47], [1, 3], [1, 229], [1, 218], [3, 209], [3, 297], [1, 35], [1, 5], [1, 15], [2, 271], [50, 199], [100, 200]]
  }];
  const v2322 = [];
  let v2323 = 0;
  var v2324 = {
    ⵠⵠᐃᐃᐃᐃᐃ: 0.2,
    ΔⲆᐃᐃⲆᐃᐃⵠᐃ: 5,
    ⵠⲆᐃⲆΔⲆᐃ: 0.2,
    ⲆᐃᐃᐃⵠⲆᐃⲆⵠ: 50,
    ᐃᐃΔⵠⵠⵠᐃ: 4,
    ᐃⵠΔⲆᐃⲆⲆΔΔ: 8000,
    ⲆⲆΔⲆΔΔⵠΔΔ: 3,
    ΔᐃᐃⲆᐃᐃΔ: 1,
    ⵠΔⵠΔΔΔⲆ: 3,
    ⲆᐃⵠⲆᐃΔᐃΔⵠ: 200,
    ᐃΔΔΔⵠⲆⲆᐃⲆ: 3,
    ΔᐃⲆᐃⵠⲆᐃᐃᐃ: 60000,
    ᐃᐃⲆⵠⵠΔᐃⲆⲆ: "[15]",
    ᐃΔⵠⲆⵠᐃᐃ: 2,
    ᐃⵠⲆⵠⵠΔⲆΔΔ: 5,
    ⵠΔᐃΔΔΔⵠᐃΔ: 14,
    ⲆⵠᐃᐃᐃᐃΔⵠⲆ: 0.58,
    ΔΔΔⲆᐃΔΔ: 600000,
    ΔⵠᐃΔⵠᐃⲆᐃΔ: 20,
    ΔⵠⵠⵠᐃᐃⲆ: 4,
    ᐃⲆΔⲆᐃⵠⲆ: 52,
    ᐃᐃᐃΔⵠⵠⲆᐃΔ: 125000,
    ᐃᐃⲆΔΔΔⲆΔⵠ: 2000,
    ⲆⵠⲆⵠⲆΔΔΔⵠ: 14,
    ⲆⵠⲆᐃΔΔⲆ: 0
  };
  var v2325 = {
    Ⲇⵠᐃ: 480000,
    ⵠᐃΔΔⵠᐃΔ: 10,
    ⵠᐃΔⲆⲆⲆⵠ: 16,
    ᐃⲆᐃΔᐃᐃⵠ: 6,
    ᐃⵠΔⲆⲆⵠⵠⲆⲆ: 40,
    ᐃᐃⵠⲆⲆΔΔ: 60,
    ⵠⲆⲆⲆΔ: 1,
    ⵠⲆⲆⵠⵠ: 2,
    ΔᐃΔⲆⲆ: 4,
    ᐃᐃⵠᐃΔ: 8,
    ⵠⲆᐃⲆΔⲆᐃ: 10,
    ⵠⲆⵠⲆᐃᐃᐃ: 100,
    ⵠⵠΔⵠΔᐃⲆ: 100,
    ⲆΔⵠᐃⵠΔᐃ: 100,
    ΔⲆᐃᐃⵠⵠⵠΔⲆ: 100,
    ᐃⲆⵠΔⲆΔⲆ: 100,
    ᐃⵠⲆⵠⲆⵠⲆ: 100,
    ⲆᐃⵠⲆⵠΔⵠΔⵠ: 100,
    ᐃⵠⲆⵠⲆⵠⲆ: 100,
    ΔΔᐃⲆⵠΔᐃ: 100,
    ΔⲆⲆᐃΔⲆᐃ: 100,
    ⲆΔᐃᐃⲆ: 0,
    ⵠⵠᐃΔⲆⵠΔ: 1,
    ΔⵠⲆⲆⲆ: 2,
    ΔⲆⲆⲆⵠ: 3,
    ᐃΔᐃⵠⲆⵠᐃ: 4,
    ⵠⲆⲆⵠⵠᐃⲆ: 5,
    ᐃᐃⵠⵠΔ: 6,
    ⲆΔΔΔᐃ: 7,
    ⲆⵠⵠΔⲆⲆⵠᐃⵠ: {
      sydney: "Sydney",
      osaka: "Osaka",
      losangeles: "Los Angeles",
      frankfurt: "Frankfurt",
      atlanta: "Atlanta"
    },
    ΔΔⵠΔΔᐃⵠ: {
      0: "normal",
      2: "zombies",
      3: "vampires",
      4: "forest",
      6: "community",
      7: "experimental"
    },
    ΔᐃⲆⵠΔᐃᐃ: 0,
    ΔΔᐃΔⲆΔⲆ: 0,
    ΔⵠᐃᐃⲆⲆⲆ: 30,
    ⵠΔⲆⵠⵠⲆⵠᐃᐃ: 2,
    ᐃᐃⵠⲆⲆΔΔ: 60000,
    ⵠΔⵠᐃΔⵠᐃΔⵠ: 0,
    ᐃⲆⲆⵠⵠΔⵠΔᐃ: 0,
    ⵠΔᐃᐃⵠΔΔⵠⵠ: 50,
    ᐃⵠᐃᐃᐃⲆᐃⲆⲆ: 0,
    ⲆΔⵠᐃᐃΔᐃⵠⲆ: 40,
    ⵠΔⵠⲆⲆᐃⲆⲆⲆ: 39,
    ΔΔΔⵠᐃⵠΔΔⵠ: 830,
    ⵠᐃᐃᐃⵠΔΔ: 25,
    ΔΔⵠⲆⵠⵠΔ: 8,
    ᐃⵠⵠᐃΔ: 0,
    ΔᐃᐃΔⵠ: 0,
    ΔΔᐃΔⵠΔΔ: 200,
    ΔⲆΔⲆⵠΔⲆ: 0,
    ⲆⵠⲆᐃⲆ: 250,
    ⵠⲆⲆᐃⵠᐃⲆ: 150,
    ⲆᐃⵠⵠⲆΔⵠ: 0,
    ΔΔⲆᐃᐃ: 350,
    ΔᐃΔⲆΔᐃΔ: 100,
    ⲆⵠᐃΔᐃⲆⲆ: 700,
    ⲆⲆᐃⵠΔ: 39879
  };
  var v2326 = [];
  for (v817 = 0; v817 < 1000; v817++) {
    v2326[v817] = 0;
  }
  v2326[83] = 1;
  v2326[103] = 1;
  v2326[0] = 1;
  v2326[5] = 1;
  v2326[6] = 1;
  v2326[48] = 1;
  v2326[28] = 1;
  v2326[9] = 1;
  v2326[108] = 1;
  v2326[109] = 1;
  v2326[110] = 1;
  v2326[111] = 1;
  v2326[112] = 1;
  v2326[113] = 1;
  v2326[114] = 1;
  v2326[115] = 1;
  v2326[116] = 1;
  v2326[117] = 1;
  v2326[118] = 1;
  v2326[13] = 1;
  v2326[14] = 1;
  v2326[15] = 1;
  v2326[60] = 1;
  v2326[61] = 1;
  v2326[16] = 1;
  v2326[17] = 1;
  v2326[12] = 1;
  v2326[18] = 1;
  v2326[19] = 1;
  v2326[20] = 1;
  v2326[21] = 1;
  v2326[22] = 1;
  v2326[23] = 1;
  v2326[24] = 1;
  v2326[25] = 1;
  v2326[26] = 1;
  v2326[27] = 1;
  var v2327 = [{
    time: 2880000
  }, {
    time: 1440000
  }, {
    time: 1920000
  }, {
    time: 1440000
  }, {
    time: 2880000
  }, {
    time: 2400000
  }, {
    time: 2400000
  }, {
    time: 4800000
  }, {
    time: 2880000
  }, {
    time: 3360000
  }, {
    time: 2880000
  }, {
    time: 3840000
  }, {
    time: 3360000
  }];
  v623 = 0;
  var v2328 = {
    ᐃⵠⲆⵠᐃ: 0,
    ᐃᐃⲆᐃⵠ: 1,
    ᐃᐃⵠΔⵠ: 2,
    ⲆⲆᐃⵠΔ: 3,
    ⵠᐃΔⲆⵠ: 4,
    ᐃⵠΔⲆΔ: 5,
    ᐃⲆΔⲆⵠ: 6,
    ΔⵠᐃⵠΔ: 7,
    ⵠᐃΔⲆΔ: 8,
    ΔᐃⲆⵠΔ: 9,
    ΔⵠⲆᐃⲆ: 10,
    ⵠᐃΔⲆᐃ: 11,
    ᐃⵠⵠΔᐃ: 12,
    ᐃΔⵠΔᐃ: 13,
    ⵠᐃⵠΔΔ: 14,
    ⲆⲆΔⲆᐃ: 15,
    ΔⲆⲆⲆⲆ: 16,
    ⵠⲆΔⲆⵠ: 17,
    ⲆΔΔⲆⲆ: 18,
    ΔⵠⲆᐃΔ: 19,
    ⵠⵠⲆⵠⲆ: 20,
    ΔⵠⲆⲆΔ: 21,
    ᐃⲆᐃᐃⲆ: 22,
    ⲆΔⵠⲆⲆ: 23,
    ⲆΔⵠⲆᐃ: 24,
    ⲆᐃⲆⵠᐃ: 25,
    ΔⵠΔΔᐃ: 26,
    ΔⵠΔⵠΔ: 27,
    ᐃᐃᐃⵠⲆ: 28,
    ᐃᐃⲆⵠⵠ: 29,
    ΔΔᐃΔΔ: 30,
    ᐃⵠᐃᐃᐃ: 31,
    ⲆΔΔⵠᐃ: 32,
    ΔᐃΔᐃΔ: 33,
    ΔⵠᐃⲆΔ: 34,
    ⵠⵠⲆⵠᐃ: 35,
    ΔᐃᐃⲆⵠ: 36,
    ⵠⵠⵠⵠΔ: 37,
    ᐃΔⲆᐃⲆ: 38,
    ᐃᐃΔᐃᐃ: 39,
    ⲆᐃΔⵠⲆ: 40,
    ΔⲆΔᐃⲆ: 41,
    ⲆⲆΔᐃⵠ: 42,
    ΔᐃⲆᐃⲆ: 43,
    ⲆᐃᐃᐃΔ: 44,
    ΔᐃⵠⵠΔ: 45,
    ᐃΔᐃⲆΔ: 46,
    ᐃⲆⲆⲆⵠ: 47,
    ⲆⵠⵠΔΔ: 48,
    ΔΔΔᐃᐃ: 49,
    ⵠⵠᐃΔⲆ: 50,
    ᐃⵠΔᐃΔ: 51,
    ᐃⵠⵠⲆΔ: 52,
    ⲆⲆⲆᐃᐃ: 53,
    ᐃᐃΔⲆᐃ: 54,
    ⵠΔᐃⵠⲆ: 55,
    ⲆΔᐃⲆΔ: 56,
    ⲆᐃⵠⲆᐃ: 57,
    ᐃⲆᐃΔᐃ: 58,
    ⲆⵠΔᐃᐃ: 59,
    ⵠⵠⵠⲆᐃ: 60,
    ⵠⲆⲆᐃᐃ: 61,
    ΔⵠⵠⲆⵠ: 62,
    ΔⵠⵠΔⲆ: 63,
    ⵠⲆΔⲆΔ: 64,
    ᐃᐃΔⲆⵠ: 65,
    ⲆᐃΔᐃⲆ: 66,
    ᐃⲆᐃⵠⲆ: 67,
    ⵠΔⲆΔᐃ: 68,
    ΔⲆⲆⵠⲆ: 69,
    ⵠᐃⲆΔⵠ: 70,
    ⲆⵠⲆΔΔ: 71,
    ⵠⵠΔᐃᐃ: 72,
    ΔᐃᐃΔΔ: 73,
    ᐃᐃⵠΔᐃ: 74,
    ᐃᐃⲆⲆᐃ: 75,
    ΔΔⵠⵠⲆ: 76,
    ᐃⵠⵠΔⵠ: 77,
    ᐃΔⵠΔⵠ: 78,
    Δⵠᐃᐃᐃ: 79,
    ΔⲆΔⵠΔ: 80,
    Ⲇᐃⵠᐃⵠ: 81,
    ⵠΔΔⲆⲆ: 82,
    ⲆⵠΔⲆⲆⲆᐃ: 83,
    ΔΔΔΔⵠ: 84,
    ΔΔΔΔᐃ: 85,
    ᐃΔΔⲆⵠ: 86,
    ⲆᐃΔⵠⵠ: 87,
    ΔⲆⵠᐃΔ: 88,
    ⲆΔⲆⵠⵠ: 89,
    ⲆΔⵠΔⲆ: 90,
    ΔΔⲆΔᐃᐃⵠ: 91,
    ⲆⵠⵠⲆⲆ: 92,
    ΔᐃΔᐃᐃᐃⲆ: 93,
    ⲆⵠⲆⵠⵠⲆᐃ: 94,
    ⲆᐃⵠΔⲆᐃΔ: 95,
    ⲆⲆⲆⵠᐃⲆⲆ: 96,
    ΔⲆΔᐃⲆΔⲆ: 97,
    ⵠⵠΔΔΔ: 98,
    ΔⲆΔᐃⵠ: 99,
    ᐃⵠⲆΔⲆ: 100,
    ⲆⲆⲆⵠΔⵠᐃ: 101,
    ⵠⲆᐃⵠᐃ: 102,
    ⲆⵠⵠᐃΔ: 103,
    ΔᐃⲆᐃⵠ: 104,
    ᐃⲆⵠⲆⵠ: 105,
    ΔⲆⲆⲆᐃΔᐃ: 106
  };
  var v2329 = [[24, 199], [25, 202], [26, 203], [27, 212], [28, 304], [29, 344], [30, 306], [31, 307], [32, 308], [33, 309], [34, 310], [35, 311], [36, 312], [37, 313]];
  function f439(p1448, p1449, p1450, p1451, p1452, p1453, p1454, p1455, p1456, p1457, p1458) {
    this.type = p1448;
    this.ᐃΔⲆⵠ = p1449;
    this.id = p1450;
    this.x = p1451;
    this.y = p1452;
    this.angle = p1453;
    this.ⲆⲆⲆΔⲆΔΔ = p1453;
    this.action = p1454;
    this.info = p1455;
    this.ΔⵠⵠΔΔⲆᐃ = p1458;
    this.ΔᐃΔⵠΔ = p1457;
    this.r = {
      x: p1451,
      y: p1452
    };
    this.ⲆⵠΔⲆᐃ = p1456;
    if (v2884) {
      this.ᐃⲆⲆΔ = v2884.ⲆᐃⲆᐃΔᐃⲆ * p1449 + p1450;
    }
    switch (p1448) {
      case 0:
        this.ⲆⲆⵠᐃ = v2884.ⵠⵠΔⵠ[this.ᐃΔⲆⵠ];
        this.ⵠⲆⲆΔ = this.ⲆⲆⵠᐃ.ⵠⲆⲆΔ;
        this.ⵠⵠᐃⲆⵠᐃΔ = this.ⲆⲆⵠᐃ.ⵠⵠᐃⲆⵠᐃΔ;
        this.ⵠᐃⵠᐃᐃ = this.ⲆⲆⵠᐃ.ⵠᐃⵠᐃᐃ;
        this.ⲆⲆⵠΔΔ = this.ⲆⲆⵠᐃ.ⲆⲆⵠΔΔ;
        this.ᐃΔⵠⲆΔΔΔ = -1000000;
        this.ΔᐃⵠⵠΔⵠΔ = -1000000;
        this.ⵠᐃΔⲆⲆ = -1000000;
        this.ⵠⵠΔⵠᐃ = -1000000;
        this.ⵠⵠⵠⵠⵠ = -1000000;
        this.ΔΔΔᐃⲆΔᐃ = -1000000;
        this.ⲆⵠᐃⲆᐃⲆⲆ = -1000000;
        this.ΔᐃⵠΔᐃ = -1000000;
        this.ᐃΔⵠᐃⵠ = v2884.mode === 2 && this.ⵠⲆⲆΔ === 0 && v30;
        this.ⲆⲆᐃΔⵠⵠⲆ = v2884.mode === 3 && this.ⵠⲆⲆΔ === 0 && vV306;
        this.ⵠᐃΔΔᐃᐃⲆ = !!this.ᐃΔⵠᐃⵠ && this.ⲆⲆⵠᐃ.ΔΔΔⲆⲆ === "  " || vVV314;
        this.ᐃᐃᐃᐃᐃ = [];
        this.ᐃᐃᐃΔᐃΔⲆ = 0;
        this.ᐃⲆΔⲆ = vVV3032;
        this.ⲆΔᐃⵠⵠΔᐃ = 0;
        this.ΔⲆΔᐃΔⲆⲆ = 0;
        this.ᐃⵠᐃⲆΔ = [];
        this.r = {
          x: p1451,
          y: p1452
        };
        this.ᐃᐃΔⵠ = f403;
        this.ΔᐃΔᐃⵠⲆⲆ = f399;
        this.ᐃΔⵠⲆ = 0;
        this.ⵠⲆⲆᐃⵠ = 0;
        this.ⲆᐃᐃⲆⲆ = 0;
        this.ΔᐃⵠⲆᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃΔⲆⲆⲆ = 0;
        this.ⲆΔΔΔⵠΔᐃ = 0;
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.ⵠⲆΔⲆᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV312, 0.6, 0.6, 0, 5, 3);
        this.freeze = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.ΔⵠᐃΔᐃⲆΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.ΔΔΔΔᐃᐃΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV3024, 0, 2.25, -1.5, 3.75, 7.5);
        this.ⲆⵠᐃⵠΔⲆⲆ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV304, 0, 7.5, -3, 22.5, 33.75);
        this.attack = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 3, 6, 9);
        this.ᐃᐃⲆⵠΔⵠⵠΔⵠ = 0;
        this.ΔΔⲆᐃᐃⲆⲆ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV315, 0.6, 0.6, 0, 1, 3);
        this.ⵠΔⲆΔΔΔⲆ = this.ⵠᐃΔΔᐃᐃⲆ ? new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;
        this.ΔⵠΔⲆⲆᐃⵠ = 0;
        this.ΔⲆᐃᐃⵠⲆⲆ = 0;
        this.ⵠᐃⵠᐃⵠⲆⵠ = [];
        this.ΔⵠᐃΔᐃⵠⲆ = [];
        this.text = [];
        this.label = [];
        this.ⵠᐃᐃⵠⲆⵠⲆ = f402;
        this.ⵠⵠⲆⲆⵠ = true;
        this.right = -1;
        this.ΔⵠΔΔ = -1;
        this.action = 64;
        this.ΔⲆΔⲆᐃᐃⵠ = vV31;
        this.ⵠⵠⲆᐃᐃ = 0;
        this.ⵠⲆᐃⲆΔ = vV312;
        this.bubbles = [];
        this.ⵠᐃᐃΔⵠ = 0;
        this.ΔⲆΔⲆⲆ = -1;
        this.ᐃⲆⲆ = function (p1459) {
          if (this.info & 32768) {
            this.ΔⲆΔⲆᐃᐃⵠ = true;
            this.info = this.info & -32769;
          } else {
            this.ΔⲆΔⲆᐃᐃⵠ = vVVV313;
          }
          if (this.info & 16384) {
            this.info = this.info & -16385;
            this.ⵠᐃᐃΔⵠ = 1;
          } else {
            this.ⵠᐃᐃΔⵠ = 0;
          }
          this.ⵠⵠⲆᐃᐃ = this.ΔⵠⵠΔΔⲆᐃ;
          if (this.info === 7 || this.ⵠᐃΔΔᐃᐃⲆ) {
            this.right = -1;
          } else {
            this.right = this.info;
          }
          this.ᐃᐃᐃΔᐃΔⲆ = v2884.ⵠᐃⲆᐃⲆⵠⵠᐃᐃ(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));
          this.ΔⵠΔΔ = this.ΔᐃΔⵠΔ & 65535;
          if (this.right === 2) {
            this.ⵠⲆᐃⲆΔ = true;
          } else {
            this.ⵠⲆᐃⲆΔ = vV315;
          }
          if (v2326[this.right]) {
            this.ⵠⵠⵠᐃⲆ = true;
          } else {
            this.ⵠⵠⵠᐃⲆ = false;
          }
          if (p1459 & 256) {
            this.ΔΔⲆᐃᐃⲆⲆ.ⲆⲆΔ = vVV316;
            this.ΔΔⲆᐃᐃⲆⲆ.ⵠᐃᐃ = 0.6;
          } else if (p1459 & 4) {
            this.freeze.ⲆⲆΔ = vVV314;
            this.freeze.ⵠᐃᐃ = 0.6;
          } else if (p1459 & 128) {
            this.ⵠⲆΔⲆᐃ.ⲆⲆΔ = vV315;
            this.ⵠⲆΔⲆᐃ.ⵠᐃᐃ = 0.6;
          }
          if (p1459 & 8) {
            this.ΔⵠᐃΔᐃⲆΔ.ⲆⲆΔ = vVV3153;
            this.ΔⵠᐃΔᐃⲆΔ.ⵠᐃᐃ = 0.6;
          }
          if (p1459 & 2) {
            this.ΔΔΔ.ⲆⲆΔ = false;
            this.ΔΔΔ.ⵠᐃᐃ = 0.6;
          }
          if (p1459 & 16) {
            this.ᐃᐃⲆⵠΔⵠⵠΔⵠ = 0.58;
            if (v3082.ⲆΔⲆΔⲆ && this.ΔⲆΔⲆⲆ !== -1) {
              v3082.ⵠⵠΔⵠ[this.ΔⲆΔⲆⲆ].ᐃⲆⲆⲆᐃⲆⲆΔⲆ(v2851[this.right]);
            }
          }
        };
        this.ᐃⲆⲆ();
        break;
      case 23:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV312, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ⲆⵠᐃᐃᐃΔᐃ = f342;
        this.ᐃΔΔᐃΔ = f348;
        this.ᐃⲆⵠⵠⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ⵠⵠⵠΔᐃⲆⲆ = 0;
        this.ⲆⲆⲆΔΔⲆΔ = 0;
        this.ⵠⵠΔⲆΔ = f317;
        break;
      case 22:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ⲆⵠᐃᐃᐃΔᐃ = f396;
        this.ᐃΔΔᐃΔ = f352;
        this.ᐃⲆⵠⵠⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 1, 1.23, 1.18, 0.01, 0.01);
        this.ⵠⵠⵠΔᐃⲆⲆ = 0;
        this.ⲆⲆⲆΔΔⲆΔ = 0;
        break;
      case 1:
      case 6:
        this.ⲆⵠᐃᐃᐃΔᐃ = f344;
        this.ᐃΔΔᐃΔ = f373;
        this.ⲆⵠΔᐃΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 1, 1.03, 0.98, 0.3, 0.3);
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV312, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃⲆⵠⵠⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 52:
        this.ⲆⵠᐃᐃᐃΔᐃ = f393;
        this.ᐃΔΔᐃΔ = f336;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV312, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV317,
          angle: 0
        };
        this.ⵠᐃⵠΔ = [];
        for (var v2330 = 0; v2330 < 3; v2330++) {
          this.ⵠᐃⵠΔ.push({
            ᐃᐃΔⵠ: f363,
            ΔΔΔⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ⵠᐃⵠΔ[0].x = this.x - 16.5;
        this.ⵠᐃⵠΔ[0].y = this.y - 15.5;
        this.ⵠᐃⵠΔ[0].angle = this.angle;
        this.ⵠᐃⵠΔ[1].x = this.x + 36;
        this.ⵠᐃⵠΔ[1].y = this.y + 17;
        this.ⵠᐃⵠΔ[1].angle = this.angle;
        this.ⵠᐃⵠΔ[2].x = this.x - 18.5;
        this.ⵠᐃⵠΔ[2].y = this.y + 39;
        this.ⵠᐃⵠΔ[2].angle = this.angle;
        break;
      case 3:
        this.ⲆⵠᐃᐃᐃΔᐃ = f388;
        this.ᐃΔΔᐃΔ = f356;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV317, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ⵠᐃⵠΔ = [];
        for (v2330 = 0; v2330 < 3; v2330++) {
          this.ⵠᐃⵠΔ.push({
            ᐃᐃΔⵠ: f394,
            ΔΔΔⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV316, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ⵠᐃⵠΔ[0].x = this.x - 16.5;
        this.ⵠᐃⵠΔ[0].y = this.y - 15.5;
        this.ⵠᐃⵠΔ[1].x = this.x - 5.5;
        this.ⵠᐃⵠΔ[1].y = this.y + 7.5;
        this.ⵠᐃⵠΔ[2].x = this.x + 18;
        this.ⵠᐃⵠΔ[2].y = this.y - 5;
        break;
      case 84:
        this.ᐃᐃΔⵠ = f357;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 89:
        this.ᐃᐃΔⵠ = f386;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV315, 0.6, 0.6, 0, 5, 3);
        break;
      case 77:
        this.ᐃᐃΔⵠ = f385;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV313, 0.6, 0.6, 0, 5, 3);
        break;
      case 78:
        this.ᐃᐃΔⵠ = f355;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔⵠΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⲆΔᐃΔᐃⵠᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.ⵠⲆΔⲆᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 0.6, 0.6, 0, 5, 3);
        break;
      case 74:
        this.ᐃᐃΔⵠ = f368;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV316, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔⵠΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV313, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⲆΔᐃΔᐃⵠᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 0.6, 0.6, 0, 5, 3);
        this.ⵠⲆΔⲆᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV316, 0.6, 0.6, 0, 5, 3);
        break;
      case 90:
      case 75:
        this.ᐃᐃΔⵠ = f345;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV312, 0.6, 0.6, 0, 5, 3);
        break;
      case 102:
        this.ᐃᐃΔⵠ = f384;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.5, 0.5);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 103:
        this.ⲆᐃᐃᐃΔⵠⵠ = this.ΔⵠⵠΔΔⲆᐃ;
        this.ΔⲆΔᐃΔⲆⲆ = this.ΔᐃΔⵠΔ & 1;
        this.ᐃΔⵠΔⵠᐃΔ = 0;
        this.x = this.info;
        this.y = this.ΔᐃΔⵠΔ;
        this.ᐃᐃΔⵠ = f395;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV317, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.6, 0.6);
        break;
      case 92:
      case 67:
      case 68:
      case 69:
      case 70:
      case 85:
      case 72:
      case 73:
      case 100:
      case 87:
      case 88:
        this.ᐃᐃΔⵠ = f384;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 45:
        this.ᐃᐃΔⵠ = f362;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV316, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV316,
          angle: 0
        };
        break;
      case 43:
        this.ᐃΔΔᐃΔ = f372;
        this.ᐃᐃΔⵠ = f335;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV312,
          angle: 0
        };
        this.up = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.03, 0.98, 0.1, 0.1);
        this.ⵠΔΔᐃⲆ = [];
        break;
      case 99:
        this.angle = Math.PI * Math.random() / 2;
      case 98:
      case 94:
        this.ᐃᐃΔⵠ = f354;
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 0.6, 0.6, 0, 5, 3);
        break;
      case 93:
        this.ᐃᐃΔⵠ = f339;
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 0.6, 0.6, 0, 5, 3);
        break;
      case 76:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f392;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3153, 0.6, 0.6, 0, 5, 3);
        break;
      case 83:
        this.ᐃΔᐃΔᐃ = 0;
        this.ⲆⲆᐃᐃ = [];
        this.ⵠⵠΔⵠⵠⵠⵠ = 0;
        this.ⵠᐃΔΔⲆⵠΔ = f378;
        this.ᐃᐃΔⵠ = f361;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 82:
        this.x = this.info;
        this.y = this.ΔᐃΔⵠΔ;
        this.scale = 1;
        this.ΔᐃⵠΔ = 0;
        this.ᐃᐃΔⵠ = f349;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV31, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 81:
        this.x = this.info;
        this.y = this.ΔᐃΔⵠΔ;
        this.scale = 1;
        this.ΔᐃⵠΔ = 0;
        this.ᐃᐃΔⵠ = f375;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV316, 0.6, 0.6, 0, 5, 3);
        break;
      case 86:
        this.x = this.info;
        this.y = this.ΔᐃΔⵠΔ;
        this.scale = 1;
        this.ΔᐃⵠΔ = 0;
        this.ᐃᐃΔⵠ = f343;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV315, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 80:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f351;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 79:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f380;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV314, 0.6, 0.6, 0, 5, 3);
        break;
      case 71:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f376;
        this.ΔΔΔⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV312, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔΔΔ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV31, 0.6, 0.6, 0, 5, 3);
        break;
      case 104:
        this.ⵠᐃⵠΔ = [];
        for (v2330 = 0; v2330 < 5; v2330++) {
          this.ⵠᐃⵠΔ.push({
            ᐃᐃΔⵠ: f394,
            ΔΔΔⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ⵠᐃⵠΔ[0].x = this.x - 20.5;
        this.ⵠᐃⵠΔ[0].y = this.y - 22.5;
        this.ⵠᐃⵠΔ[0].angle = -0.1 + Math.PI;
        this.ⵠᐃⵠΔ[1].x = this.x - 35.5;
        this.ⵠᐃⵠΔ[1].y = this.y + 7.5;
        this.ⵠᐃⵠΔ[1].angle = 0.1 + Math.PI;
        this.ⵠᐃⵠΔ[2].x = this.x + 7.5;
        this.ⵠᐃⵠΔ[2].y = this.y - 30;
        this.ⵠᐃⵠΔ[2].angle = -0.2 + Math.PI;
        this.ⵠᐃⵠΔ[3].x = this.x + 22.5;
        this.ⵠᐃⵠΔ[3].y = this.y;
        this.ⵠᐃⵠΔ[3].angle = -0.2 + Math.PI;
        this.ⵠᐃⵠΔ[4].x = this.x - 7.5;
        this.ⵠᐃⵠΔ[4].y = this.y + 14.5;
        this.ⵠᐃⵠΔ[4].angle = 0.15 + Math.PI;
        break;
      case 105:
      case 106:
        this.ⵠᐃⵠΔ = [];
        for (v2330 = 0; v2330 < 5; v2330++) {
          this.ⵠᐃⵠΔ.push({
            ᐃᐃΔⵠ: f394,
            ΔΔΔⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3152, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        switch (this.id % 3) {
          case 0:
            this.ⵠᐃⵠΔ[0].x = this.x - 20.5;
            this.ⵠᐃⵠΔ[0].y = this.y - 22.5;
            this.ⵠᐃⵠΔ[1].x = this.x - 35.5;
            this.ⵠᐃⵠΔ[1].y = this.y + 7.5;
            this.ⵠᐃⵠΔ[2].x = this.x + 7.5;
            this.ⵠᐃⵠΔ[2].y = this.y - 30;
            this.ⵠᐃⵠΔ[3].x = this.x + 22.5;
            this.ⵠᐃⵠΔ[3].y = this.y;
            this.ⵠᐃⵠΔ[4].x = this.x - 7.5;
            this.ⵠᐃⵠΔ[4].y = this.y + 14.5;
            break;
          case 1:
            this.ⵠᐃⵠΔ[0].x = this.x - 30.5;
            this.ⵠᐃⵠΔ[0].y = this.y - 22.5;
            this.ⵠᐃⵠΔ[1].x = this.x - 15.5;
            this.ⵠᐃⵠΔ[1].y = this.y + 7.5;
            this.ⵠᐃⵠΔ[2].x = this.x + 15.5;
            this.ⵠᐃⵠΔ[2].y = this.y - 30;
            this.ⵠᐃⵠΔ[3].x = this.x + 12.5;
            this.ⵠᐃⵠΔ[3].y = this.y + 5;
            this.ⵠᐃⵠΔ[4].x = this.x - 40.5;
            this.ⵠᐃⵠΔ[4].y = this.y + 14.5;
            break;
          case 2:
            this.ⵠᐃⵠΔ[0].x = this.x - 20.5;
            this.ⵠᐃⵠΔ[0].y = this.y - 20.5;
            this.ⵠᐃⵠΔ[1].x = this.x - 35.5;
            this.ⵠᐃⵠΔ[1].y = this.y + 15.5;
            this.ⵠᐃⵠΔ[2].x = this.x + 7.5;
            this.ⵠᐃⵠΔ[2].y = this.y - 17;
            this.ⵠᐃⵠΔ[3].x = this.x + 22.5;
            this.ⵠᐃⵠΔ[3].y = this.y + 5;
            this.ⵠᐃⵠΔ[4].x = this.x - 7.5;
            this.ⵠᐃⵠΔ[4].y = this.y + 1.5;
        }
        break;
      case 40:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV312, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVVV316,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f382;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ΔᐃᐃΔⵠᐃⲆ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV312, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);
        break;
      case 49:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f337;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV314, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 48:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV3152,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f358;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 53:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVV31,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f365;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 64:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVV313,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f374;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 63:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV312,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f350;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 66:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f338;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 46:
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f390;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 24:
        this.ᐃᐃΔⵠ = f381;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: v31,
          angle: 0
        };
        break;
      case 25:
        this.ᐃᐃΔⵠ = f391;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV315, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVV316,
          angle: 0
        };
        break;
      case 26:
        this.ᐃᐃΔⵠ = f341;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV312, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV314,
          angle: 0
        };
        break;
      case 27:
        this.ᐃᐃΔⵠ = f387;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 28:
        this.ᐃᐃΔⵠ = f334;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3153, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV312,
          angle: 0
        };
        break;
      case 29:
        this.ᐃᐃΔⵠ = f371;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV317, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV315,
          angle: 0
        };
        break;
      case 30:
        this.ᐃᐃΔⵠ = f389;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 31:
        this.ᐃᐃΔⵠ = f333;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 32:
        this.ᐃᐃΔⵠ = f353;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVV31,
          angle: 0
        };
        break;
      case 33:
        this.ᐃᐃΔⵠ = f370;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVV31,
          angle: 0
        };
        break;
      case 34:
        this.ᐃᐃΔⵠ = f347;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV316, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV314,
          angle: 0
        };
        break;
      case 35:
        this.ᐃᐃΔⵠ = f359;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVVV316,
          angle: 0
        };
        break;
      case 36:
        this.ᐃᐃΔⵠ = f367;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV31, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV316,
          angle: 0
        };
        break;
      case 37:
        this.ᐃᐃΔⵠ = f346;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 41:
        this.ⲆⵠᐃᐃᐃΔᐃ = f383;
        this.ᐃΔΔᐃΔ = f369;
        this.rotate = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV316, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vVVVV316,
          angle: 0
        };
        break;
      case 47:
        this.ᐃᐃΔⵠ = f319;
        this.ⵠᐃⲆᐃ = Math.floor(this.x / 100);
        this.Ⲇⵠ = Math.floor(this.y / 100);
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV313, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.opacity = 1;
        this.ⵠⵠΔⲆΔ = f310;
        break;
      case 51:
        this.ᐃᐃΔⵠ = f332;
        this.ᐃⲆⵠⵠⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.15, 1, 0.3, 0.3);
        this.color = 0;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 42:
      case 2:
      case 65:
      case 44:
      case 38:
        this.ᐃᐃΔⵠ = f318;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        break;
      case 39:
        this.ᐃᐃΔⵠ = f318;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV315,
          angle: 0
        };
        this.ⵠⵠΔⲆΔ = f310;
        break;
      case 4:
      case 7:
      case 8:
      case 9:
      case 19:
      case 59:
      case 5:
      case 12:
      case 13:
      case 14:
      case 20:
      case 61:
        this.ᐃᐃΔⵠ = f318;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: v31,
          angle: 0
        };
        this.ⵠⵠΔⲆΔ = f317;
        break;
      case 50:
        this.ᐃᐃΔⵠ = f315;
        this.opacity = 1;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV31,
          angle: 0
        };
        var v2331 = this.angle % (Math.PI / 2);
        if (Math.PI / 4 > v2331) {
          this.angle -= v2331;
        } else {
          this.angle += Math.PI / 2 - v2331;
        }
        break;
      case 91:
        this.ᐃᐃΔⵠ = f331;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 101:
        this.ᐃᐃΔⵠ = f327;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 95:
        this.ᐃᐃΔⵠ = f328;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 96:
        this.ᐃᐃΔⵠ = f324;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 97:
        this.ᐃᐃΔⵠ = f330;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 11:
        this.ᐃⲆⲆ = function (p1460) {
          this.lock = this.info & 8192 ? 1 : 0;
          this.info = this.info & 8191;
          this.action = p1460;
        };
        this.ᐃᐃΔⵠ = f309;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV312, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.lock = 0;
        this.ᐃⲆⲆ(this.action);
        break;
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 62:
      case 10:
      case 15:
      case 16:
      case 17:
      case 21:
      case 60:
        this.ᐃᐃΔⵠ = f311;
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: vV314,
          angle: 0
        };
        this.ⵠⵠΔⲆΔ = f317;
        break;
      case 18:
        this.ⲆⵠᐃᐃᐃΔᐃ = f379;
        this.ᐃᐃΔⵠ = f340;
        this.ᐃΔΔᐃΔ = f377;
        this.ⲆⲆᐃᐃ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV314, 1, 1.23, 1.18, 0.02, 0.02);
        this.ᐃⲆⵠⵠⵠ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 1, 1.23, 1.18, 0.04, 0.04);
        this.ΔΔΔ = {
          ᐃⲆᐃᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10),
          ᐃⲆⲆ: false,
          angle: 0
        };
        this.ᐃⲆⲆ = function (p1461) {
          this.action = p1461;
        };
    }
  }
  function f440(p1462, p1463, p1464, p1465) {
    this.id = p1462;
    this.ⲆⵠΔⲆᐃ = (p1462 + 5) * 8;
    this.ᐃΔΔΔᐃ = v420 / 1366;
    this.x = p1463;
    this.y = p1464;
    this.c = Math.sin(p1465);
    this.ΔⵠⲆⲆ = Math.cos(p1465);
    this.alpha = 0;
  }
  function f441() {
    this.ΔΔΔⲆⲆ = "";
    this.ⵠⲆⲆΔ = 0;
    this.ⲆⲆⵠΔΔ = 0;
    this.ⵠᐃᐃΔⵠ = 0;
    this.ⵠⵠᐃⲆⵠᐃΔ = 0;
    this.ⵠᐃⵠᐃᐃ = 0;
    this.ΔⲆⵠᐃⲆ = 0;
    this.ⵠᐃΔΔΔ = 0;
    this.level = 0;
    this.label = null;
    this.ᐃⲆⲆⲆΔⵠᐃ = null;
    this.ᐃᐃⵠⲆⵠⲆΔ = null;
    this.ⲆⵠΔⵠⲆ = false;
    this.ⲆΔⲆᐃΔ = 0;
  }
  function f442(p1466) {
    this.mode = 0;
    this.ⲆᐃⲆᐃΔᐃⲆ = p1466;
    this.ΔⵠⲆᐃᐃ = 0;
    this.ⲆΔⲆⵠΔΔΔ = 6;
    this.ⵠⵠΔⵠ = [];
    this.ᐃᐃΔ = [];
    var v2332 = 185;
    if (v2332 > 9) {
      v2332 = 207;
    }
    this.ᐃᐃΔ[0] = [];
    this.ᐃᐃΔ[105] = [];
    this.ᐃᐃΔ[106] = [];
    this.ᐃᐃΔ[104] = [];
    this.ᐃᐃΔ[92] = [];
    this.ᐃᐃΔ[67] = [];
    this.ᐃᐃΔ[74] = [];
    this.ᐃᐃΔ[77] = [];
    this.ᐃᐃΔ[84] = [];
    this.ᐃᐃΔ[78] = [];
    this.ᐃᐃΔ[79] = [];
    this.ⵠΔⵠⵠᐃⵠⵠ = 193;
    this.ⵠⵠⲆⲆⵠΔⵠ = 174;
    this.ⵠⵠⲆⲆⵠΔⵠ;
    this.ⵠΔⵠⵠᐃⵠⵠ;
    this.ᐃᐃΔ[80] = [];
    this.ᐃᐃΔ[81] = [];
    this.ᐃᐃΔ[86] = [];
    this.ᐃᐃΔ[88] = [];
    this.ᐃᐃΔ[89] = [];
    this.ᐃᐃΔ[90] = [];
    this.ᐃᐃΔ[87] = [];
    this.ᐃᐃΔ[72] = [];
    this.ᐃᐃΔ[73] = [];
    this.ᐃᐃΔ[69] = [];
    this.ᐃᐃΔ[100] = [];
    this.ᐃᐃΔ[103] = [];
    this.ⵠⲆⲆΔΔⲆⲆΔΔ = true;
    this.ᐃᐃΔ[102] = [];
    this.ⲆΔΔΔⵠᐃⲆ = 207;
    this.ᐃΔᐃΔⵠⲆⲆ = 126;
    this.ᐃΔᐃΔⵠⲆⲆ;
    this.ⲆΔΔΔⵠᐃⲆ;
    this.ΔⵠⵠⲆⵠᐃⲆ = {};
    this.ΔⵠⵠⲆⵠᐃⲆ.ⵠⵠᐃᐃᐃΔⵠ = 7;
    this.ᐃᐃΔ[70] = [];
    this.ᐃᐃΔ[85] = [];
    this.ᐃᐃΔ[71] = [];
    this.ᐃᐃΔ[76] = [];
    this.ᐃᐃΔ[75] = [];
    this.ᐃᐃΔ[91] = [];
    this.ᐃᐃΔ[101] = [];
    this.ᐃᐃΔ[95] = [];
    var v2333 = 85;
    if (v2333 == 12) {
      v2333 = 32;
    }
    this.ᐃᐃΔ[96] = [];
    this.ᐃᐃΔ[97] = [];
    this.ᐃᐃΔ[93] = [];
    this.ᐃᐃΔ[94] = [];
    this.ᐃᐃΔ[98] = [];
    this.ᐃᐃΔ[43] = [];
    this.ᐃᐃΔ[45] = [];
    this.ᐃᐃΔ[68] = [];
    this.ᐃᐃΔ[2] = [];
    this.ᐃᐃΔ[1] = [];
    this.ᐃᐃΔ[6] = [];
    this.ⵠΔⲆᐃⲆⲆᐃΔΔ = 54;
    this.ⲆⲆⲆⲆᐃΔᐃ = 110;
    this.ⵠΔⲆᐃⲆⲆᐃΔΔ;
    this.ⲆⲆⲆⲆᐃΔᐃ;
    this.ᐃᐃΔ[3] = [];
    this.ᐃᐃΔ[5] = [];
    this.ᐃᐃΔ[12] = [];
    this.ᐃᐃΔ[13] = [];
    this.ᐃᐃΔ[14] = [];
    this.ᐃᐃΔ[20] = [];
    this.ᐃᐃΔ[61] = [];
    this.ᐃᐃΔ[4] = [];
    this.ᐃᐃΔ[7] = [];
    this.ᐃᐃΔ[8] = [];
    this.ᐃᐃΔ[9] = [];
    this.ᐃᐃΔ[19] = [];
    this.ᐃᐃΔ[59] = [];
    this.ᐃᐃΔ[50] = [];
    this.ᐃᐃΔ[10] = [];
    this.ᐃᐃΔ[15] = [];
    this.ᐃᐃΔ[16] = [];
    this.ᐃᐃΔ[17] = [];
    this.ᐃᐃΔ[21] = [];
    this.ᐃᐃΔ[60] = [];
    this.ᐃᐃΔ[54] = [];
    this.ᐃᐃΔ[55] = [];
    this.ᐃᐃΔ[56] = [];
    this.ᐃᐃΔ[57] = [];
    this.ᐃᐃΔ[58] = [];
    this.ᐃᐃΔ[62] = [];
    this.ᐃᐃΔ[18] = [];
    this.ᐃᐃΔ[38] = [];
    this.ᐃᐃΔ[65] = [];
    this.ᐃᐃΔ[11] = [];
    this.ᐃᐃΔ[22] = [];
    this.ᐃᐃΔ[23] = [];
    this.ᐃᐃΔ[39] = [];
    this.ᐃᐃΔ[47] = [];
    this.ᐃᐃΔ[42] = [];
    this.ᐃᐃΔ[40] = [];
    this.ᐃᐃΔ[64] = [];
    this.ᐃᐃΔ[46] = [];
    this.ᐃᐃΔ[52] = [];
    this.ᐃᐃΔ[53] = [];
    this.ᐃᐃΔ[63] = [];
    this.ᐃᐃΔ[66] = [];
    this.ᐃᐃΔ[48] = [];
    this.ᐃᐃΔ[49] = [];
    this.ᐃᐃΔ[41] = [];
    this.ᐃᐃΔ[24] = [];
    this.ᐃᐃΔ[25] = [];
    this.ᐃᐃΔ[26] = [];
    this.ᐃᐃΔ[27] = [];
    this.ᐃᐃΔ[28] = [];
    this.ᐃᐃΔ[29] = [];
    this.ᐃᐃΔ[30] = [];
    this.ᐃᐃΔ[31] = [];
    this.ᐃᐃΔ[32] = [];
    this.ᐃᐃΔ[33] = [];
    this.ᐃᐃΔ[34] = [];
    this.ᐃᐃΔ[35] = [];
    this.ᐃᐃΔ[36] = [];
    this.ᐃᐃΔ[37] = [];
    var v2334 = 108;
    function a(p1467, p1468, p1469) {
      var vP1468 = p1468;
      for (var vP1469 = p1469; v2884.ⲆⲆΔⵠⲆ > vP1469; vP1469++) {
        for (var vP14682 = p1468; vP14682 < v2884.ⵠⲆⵠΔᐃ && (p1469 === vP1469 && (vP1468 = Math.max(vP14682, vP1468)), !(vP14682 > vP1468)) && p1467[vP1469][vP14682] !== 1; vP14682++) {
          p1467[vP1469][vP14682] = 1;
        }
        if (vP14682 < vP1468) {
          break;
        }
      }
      v2884.ⵠΔⵠᐃ.push(new v2884.ΔᐃⵠᐃⵠᐃⲆ(v2884.ⵠΔⵠⵠΔ, p1468, p1469, vP1468 - p1468 + 1, vP1469 - p1469, 15));
    }
    function o(p1470, p1471, p1472, p1473, p1474) {
      var v2335 = p1471 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * p1473);
      var v2336 = p1472 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * p1473);
      var v2337 = 10 + Math.floor((v2884.ⵠⲆⵠΔᐃ - v2335 - 20) * v2884.ⲆⲆⵠⲆΔ.get());
      var v2338 = 10 + Math.floor((v2884.ⲆⲆΔⵠⲆ - v2336 - 20) * v2884.ⲆⲆⵠⲆΔ.get());
      var v2339 = v2337 + v2335;
      var v2340 = v2338 + v2336;
      for (var v2341 = 0; v2341 < v2884.ⵠΔⵠᐃ.length; v2341++) {
        var v2342 = v2884.ⵠΔⵠᐃ[v2341];
        if (ⵠⲆⲆ.ⵠⲆΔΔΔᐃⵠ(v2337, v2339, v2338, v2340, v2342.x1 / 100 - p1474, v2342.x2 / 100 + p1474, v2342.y1 / 100 - p1474, v2342.y2 / 100 + p1474) === 1) {
          return 0;
        }
      }
      v2884.ⵠΔⵠᐃ.push(new v2884.ΔᐃⵠᐃⵠᐃⲆ(p1470, v2337, v2338, v2335, v2336, 15));
      return 1;
    }
    function r(p1475, p1476, p1477, p1478, p1479) {
      for (var v2343 = 0; v2343 < p1479 && o(p1475, p1476, p1477, p1478, 8) !== 1; v2343++);
      if (p1479 === v2343) {
        return 0;
      } else {
        return 1;
      }
    }
    function s(p1480, p1481) {
      var v2344 = v2884.ⵠΔⵠᐃ[p1480];
      var v2345 = Math.floor(v2344.y1 / 100);
      var v2346 = Math.floor(v2344.x1 / 100);
      var v2347 = Math.floor(v2344.ΔᐃⲆ / 100);
      var v2348 = v2346 + (v2354 = Math.floor(v2344.w / 100));
      var v2349 = 2;
      var vV2347 = v2347;
      var vV2345 = v2345;
      for (var v2350 = v2346 + 10 + Math.floor((v2354 - 20) * v2884.ⲆⲆⵠⲆΔ.get()), v2351 = v2350 - 4; v2351 < v2350 + 4; v2351++) {
        f450(v2345 - 1, v2351, "wtb", 0, 1);
      }
      while (vV2347 > 0) {
        if (v2349 !== 2) {
          if (vV2347 < 10) {
            for (v2356 = 1; vV2347 > 0; v2356++) {
              g(vV2345, v2350, 1, 1, 0, p1481, v2356, 1);
              vV2347 -= 1;
              vV2345 += 1;
            }
          } else if (v2349 !== 1) {
            v2349 = 1;
            var v2352 = Math.floor(1 + v2884.ⲆⲆⵠⲆΔ.get() * 2);
            var v2353 = 1 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 4);
            if (v2350 < v2346 + 16) {
              g(vV2345, v2350, v2352, 0, 1, p1481, v2353, v2353);
              v2350 += v2352;
            } else if (v2348 - 16 < v2350) {
              g(vV2345, v2350, v2352, 0, -1, p1481, v2353, v2353);
              v2350 -= v2352;
            } else if (v2884.ⲆⲆⵠⲆΔ.get() > 0.5) {
              g(vV2345, v2350, v2352, 0, 1, p1481, v2353, v2353);
              v2350 += v2352;
            } else {
              g(vV2345, v2350, v2352, 0, -1, p1481, v2353, v2353);
              v2350 -= v2352;
            }
          } else {
            var v2354;
            var v2355 = Math.min(vV2347, Math.floor(1 + v2884.ⲆⲆⵠⲆΔ.get() * 4));
            g(vV2345, v2350, v2355, 1, 0, p1481, v2354 = 1 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 4), v2354);
            v2349 = 0;
            vV2347 -= v2355;
            vV2345 += v2355;
          }
        } else {
          for (var v2356 = 10; v2356 > 1; v2356--) {
            g(vV2345, v2350, 1, 1, 0, p1481, v2356, 1);
            vV2347 -= 1;
            vV2345 += 1;
          }
          v2349 = 0;
        }
      }
      for (v2351 = v2350 - 1; v2351 < v2350 + 2; v2351++) {
        f450(vV2345, v2351, "wtb", 0, 1);
      }
    }
    function f447(p1482, p1483) {
      for (var v2357 = 0; p1483.length > v2357; v2357++) {
        f453(p1483[v2357][0], p1483[v2357][1], p1482, p1483[v2357][2]);
      }
    }
    function g(p1484, p1485, p1486, p1487, p1488, p1489, p1490, p1491) {
      var v2358 = Math.floor(p1490 / 2);
      var v2359 = Math.max(1, Math.floor(p1490 / 2));
      var v2360 = Math.floor(p1491 / 2);
      var v2361 = Math.max(1, Math.floor(p1491 / 2));
      for (var v2362 = 0; p1486 > v2362; v2362++) {
        for (var v2363 = p1484 - v2360; p1484 + v2361 > v2363; v2363++) {
          for (var v2364 = p1485 - v2358; p1485 + v2359 > v2364; v2364++) {
            if (f450(v2363, v2364, "wtb", 0, 1) === 1) {
              p1489.push([v2363, v2364, 1]);
            }
          }
        }
        p1484 += p1487;
        p1485 += p1488;
      }
    }
    function f449(p1492) {
      for (var v2365 = 0; v2365 < 3; v2365++) {
        f460(p1492, "s", v2365, 15);
      }
      for (v2365 = 0; v2365 < 3; v2365++) {
        f460(p1492, "a", v2365, 1);
      }
      for (v2365 = 0; v2365 < 3; v2365++) {
        f460(p1492, "d", v2365, 1);
      }
      f455(p1492);
    }
    function f450(p1493, p1494, p1495, p1496, p1497) {
      if (!(p1493 < 0) && !(p1494 < 0) && !(p1493 >= v2884.ⲆⲆΔⵠⲆ) && !(v2884.ⵠⲆⵠΔᐃ <= p1494)) {
        ⲆᐃᐃⲆ = v2881.ⲆᐃᐃⲆ;
        if (vVVUndefined83 === ⲆᐃᐃⲆ[p1493][p1494]) {
          ⲆᐃᐃⲆ[p1493][p1494] = {};
        }
        if (vVUndefined !== ⲆᐃᐃⲆ[p1493][p1494][p1495]) {
          return 0;
        } else {
          ⲆᐃᐃⲆ[p1493][p1494][p1495] = [];
          ⲆᐃᐃⲆ[p1493][p1494][p1495][p1496] = [{
            x: p1494 * 100 + 50,
            y: p1493 * 100 + 50
          }];
          if (p1497 === 1) {
            (function (p1498, p1499, p1500, p1501) {
              v829.push([p1498, p1499, p1500, p1501]);
            })(p1495, p1496, p1493, p1494);
          }
          return 1;
        }
      }
    }
    function f451(p1502, p1503) {
      return p1502 >= 0 && p1503 >= 0 && p1502 < v2884.ⲆⲆΔⵠⲆ && p1503 < v2884.ⵠⲆⵠΔᐃ;
    }
    function f452(p1504, p1505) {
      for (var v2366 = 0; v2366 < 6; v2366++) {
        f460(p1504, "t", v2366, Math.floor(p1505 * 20));
      }
      for (v2366 = 0; v2366 < 4; v2366++) {
        f460(p1504, "b", v2366, Math.floor(p1505 * 20));
      }
      for (v2366 = 0; v2366 < 3; v2366++) {
        f460(p1504, "s", v2366, Math.floor(p1505 * 20));
      }
      var v2367 = [];
      s(p1504, v2367);
      f447(p1504, v2367);
      v2367 = [];
      f460(p1504, "p", 0, Math.floor(p1505 * 24));
      for (v2366 = 0; v2366 < 3; v2366++) {
        f460(p1504, "g", v2366, Math.floor(p1505 * 5));
      }
      if (v2884.mode === 2) {
        for (v2366 = 0; v2366 < 3; v2366++) {
          f460(p1504, "d", v2366, Math.floor(p1505 * 3));
        }
        for (v2366 = 0; v2366 < 3; v2366++) {
          f460(p1504, "a", v2366, Math.floor(p1505 * 2));
        }
      }
      f455(p1504);
    }
    function f453(p1506, p1507, p1508, p1509) {
      if (f451(p1506, p1507) && (ⲆᐃᐃⲆ = v2881.ⲆᐃᐃⲆ, ⲆᐃᐃⲆ[p1506][p1507] === undefined && (ⲆᐃᐃⲆ[p1506][p1507] = {}), ⲆᐃᐃⲆ[p1506][p1507].r === undefined)) {
        var v2368 = 0;
        if (f451(p1506 - 1, p1507) && vVVVUndefined132 !== ⲆᐃᐃⲆ[p1506 - 1][p1507] && ⲆᐃᐃⲆ[p1506 - 1][p1507].wtb !== vVVVUndefined822) {
          v2368 += 2;
        }
        if (f451(p1506, p1507 - 1) && ⲆᐃᐃⲆ[p1506][p1507 - 1] !== undefined && ⲆᐃᐃⲆ[p1506][p1507 - 1].wtb !== undefined) {
          v2368 += 8;
        }
        if (f451(p1506, p1507 + 1) && vVUndefined13 !== ⲆᐃᐃⲆ[p1506][p1507 + 1] && vVVVVVUndefined1322 !== ⲆᐃᐃⲆ[p1506][p1507 + 1].wtb) {
          v2368 += 16;
        }
        if (f451(p1506 + 1, p1507) && ⲆᐃᐃⲆ[p1506 + 1][p1507] !== undefined && ⲆᐃᐃⲆ[p1506 + 1][p1507].wtb !== undefined) {
          v2368 += 64;
        }
        if (!!f451(p1506 - 1, p1507 - 1) && !(~v2368 & 10) && ⲆᐃᐃⲆ[p1506 - 1][p1507 - 1] !== undefined && ⲆᐃᐃⲆ[p1506 - 1][p1507 - 1].wtb !== undefined) {
          v2368 += 1;
        }
        if (f451(p1506 - 1, p1507 + 1) && !(~v2368 & 18) && ⲆᐃᐃⲆ[p1506 - 1][p1507 + 1] !== undefined && ⲆᐃᐃⲆ[p1506 - 1][p1507 + 1].wtb !== undefined) {
          v2368 += 4;
        }
        if (!!f451(p1506 + 1, p1507 - 1) && !(~v2368 & 72) && ⲆᐃᐃⲆ[p1506 + 1][p1507 - 1] !== vVUndefined && ⲆᐃᐃⲆ[p1506 + 1][p1507 - 1].wtb !== undefined) {
          v2368 += 32;
        }
        if (f451(p1506 + 1, p1507 + 1) && (v2368 & 80) == 80 && vVUndefined13 !== ⲆᐃᐃⲆ[p1506 + 1][p1507 + 1] && ⲆᐃᐃⲆ[p1506 + 1][p1507 + 1].wtb !== undefined) {
          v2368 += 128;
        }
        ⲆᐃᐃⲆ[p1506][p1507].r = {};
        ⲆᐃᐃⲆ[p1506][p1507].r.ⲆⲆⵠΔΔᐃⲆ = v2368;
        ⲆᐃᐃⲆ[p1506][p1507].r.ᐃⲆⲆⲆⲆΔᐃ = p1509;
        ⲆᐃᐃⲆ[p1506][p1507].r.ᐃⵠᐃⲆ = v2884.ⵠᐃᐃΔⲆ(p1508, p1507 * 100 + 50, p1506 * 100 + 50) - 400;
        ⲆᐃᐃⲆ[p1506][p1507].r.x = p1507 * 100 + 50;
        ⲆᐃᐃⲆ[p1506][p1507].r.y = p1506 * 100 + 50;
      }
    }
    function f454(p1510, p1511) {
      (function (p1512, p1513) {
        var v2369 = v2884.ⵠΔⵠᐃ[p1513];
        for (var v2370 = 0, v2371 = 0; v2370 < p1512 && v2371 < 10000; v2371++) {
          var v2372 = v2369.y1 + v2369.ΔᐃⲆ * v2884.ⲆⲆⵠⲆΔ.get();
          var v2373 = v2369.x1 + v2884.ⲆⲆⵠⲆΔ.get() * v2369.w;
          var v2374 = Math.floor(v2372 / 100);
          var v2375 = Math.floor(v2373 / 100);
          if (!(v2884.ⵠᐃᐃΔⲆ(p1513, v2375 * 100 + 50, v2374 * 100 + 50) < 600)) {
            for (var v2376 = 1, v2377 = v2374 - 4; v2376 === 1 && v2377 <= v2374 + 4; v2377++) {
              for (var v2378 = v2375 - 4; v2376 === 1 && v2375 + 4 >= v2378; v2378++) {
                if (v2881.ⲆᐃᐃⲆ[v2377][v2378] !== undefined) {
                  v2376 = 0;
                }
              }
            }
            if (v2376 !== 0) {
              f450(v2374, v2375, "la", v2370 % 6, 0);
              v2370++;
            }
          }
        }
      })(p1511 * 80, p1510);
      for (var v2379 = 0; v2379 < 3; v2379++) {
        f460(p1510, "s", v2379, Math.floor(p1511 * 12));
      }
      for (v2379 = 0; v2379 < 3; v2379++) {
        f460(p1510, "g", v2379, Math.floor(p1511 * 6));
      }
      for (v2379 = 0; v2379 < 3; v2379++) {
        f460(p1510, "re", v2379, Math.max(1, Math.floor(p1511 * 1)), 0.2);
      }
      for (v2379 = 0; v2379 < 3; v2379++) {
        f460(p1510, "a", v2379, Math.max(1, Math.floor(p1511 * 2)));
      }
      f455(p1510);
    }
    function f455(p1514) {
      var v2380 = v2884.ⵠΔⵠᐃ[p1514];
      f450(-3 + Math.floor(v2380.y2 / 100), -1 + Math.floor(v2380.x2 / 100), "s", 0, 0);
      f450(3 + Math.floor(v2380.y1 / 100), -1 + Math.floor(v2380.x2 / 100), "s", 0, 0);
      f450(-3 + Math.floor(v2380.y2 / 100), 1 + Math.floor(v2380.x1 / 100), "s", 0, 0);
      f450(3 + Math.floor(v2380.y1 / 100), 1 + Math.floor(v2380.x1 / 100), "s", 0, 0);
    }
    function f456(p1515, p1516) {
      for (var v2381 = 0; v2381 < 3; v2381++) {
        f460(p1515, "s", v2381, Math.floor(p1516 * 12));
      }
      for (v2381 = 0; v2381 < 3; v2381++) {
        f460(p1515, "m", v2381, Math.max(1, Math.floor(p1516 * 1)), 0.2);
      }
      f460(p1515, "c", 0, Math.floor(p1516 * 36));
      var v2382 = [];
      (function (p1517, p1518) {
        var v2383 = v2884.ⵠΔⵠᐃ[p1517];
        var v2384 = Math.floor(v2383.y1 / 100);
        var v2385 = Math.floor(v2383.x1 / 100);
        var v2386 = Math.floor(v2383.ΔᐃⲆ / 100);
        var v2387 = Math.floor(v2383.w / 100);
        var v2388 = v2384 + Math.floor(v2386 / 2);
        var v2389 = v2385 + Math.floor(v2387 / 2);
        for (var v2390 = 0; v2390 < 3; v2390++) {
          f450(v2391 = Math.floor(v2388 - 3 + v2884.ⲆⲆⵠⲆΔ.get() * 6), v2392 = Math.floor(v2389 - 3 + v2884.ⲆⲆⵠⲆΔ.get() * 6), "plm", v2390, 1);
        }
        for (v2390 = 0; v2390 < 80; v2390++) {
          var v2391;
          var v2392;
          if (f450(v2391 = Math.floor(v2388 - 3 + v2884.ⲆⲆⵠⲆΔ.get() * 6), v2392 = Math.floor(v2389 - 3 + v2884.ⲆⲆⵠⲆΔ.get() * 6), "wtb", 0, 1) === 1) {
            p1518.push([v2391, v2392, 0]);
          }
        }
      })(p1515, v2382);
      f447(p1515, v2382);
      v2382 = [];
    }
    function f457(p1519, p1520) {
      for (var v2393 = 0; v2393 < 5; v2393++) {
        f460(p1519, "jut", v2393, Math.floor(p1520 * 160));
      }
      for (v2393 = 0; v2393 < 2; v2393++) {
        f460(p1519, "jub", v2393, Math.floor(p1520 * 20));
      }
      for (v2393 = 0; v2393 < 1; v2393++) {
        f460(p1519, "bap", v2393, Math.floor(p1520 * 40));
      }
      for (v2393 = 0; v2393 < 3; v2393++) {
        f460(p1519, "jus", v2393, Math.floor(p1520 * 80));
      }
      for (v2393 = 0; v2393 < 3; v2393++) {
        f460(p1519, "cop", v2393, Math.floor(p1520 * 20));
        f460(p1519, "iro", v2393, Math.floor(p1520 * 20));
        f460(p1519, "top", v2393, Math.floor(p1520 * 20));
        f460(p1519, "sap", v2393, Math.floor(p1520 * 20));
        f460(p1519, "jad", v2393, Math.floor(p1520 * 20));
        f460(p1519, "rub", v2393, Math.floor(p1520 * 20));
        f460(p1519, "aqu", v2393, Math.floor(p1520 * 20));
        f460(p1519, "coa", v2393, Math.floor(p1520 * 20));
      }
      var v2394 = [];
      for (v2393 = 0; v2393 < 6; v2393++) {
        s(p1519, v2394);
      }
      f447(p1519, v2394);
      v2394 = [];
      f455(p1519);
    }
    function f458(p1521, p1522) {
      for (var v2395 = 0; v2395 < 3; v2395++) {
        f460(p1521, "s", v2395, Math.floor(p1522 * 18));
      }
      for (v2395 = 0; v2395 < 3; v2395++) {
        f460(p1521, "f", v2395, Math.floor(p1522 * 24));
      }
      for (v2395 = 0; v2395 < 3; v2395++) {
        f460(p1521, "d", v2395, Math.max(1, Math.floor(p1522 * 2)), 0.3);
      }
      for (v2395 = 0; v2395 < 3; v2395++) {
        f460(p1521, "g", v2395, Math.floor(p1522 * 6));
      }
      f455(p1521);
    }
    function f459(p1523, p1524) {
      for (var v2396 = 0; v2396 < 6; v2396++) {
        f460(p1523, "t", v2396, Math.floor(p1524 * 80));
      }
      for (v2396 = 0; v2396 < 4; v2396++) {
        f460(p1523, "b", v2396, Math.floor(p1524 * 80));
      }
      for (v2396 = 0; v2396 < 3; v2396++) {
        f460(p1523, "s", v2396, Math.floor(p1524 * 50));
      }
      var v2397 = [];
      for (v2396 = 0; v2396 < 6; v2396++) {
        s(p1523, v2397);
      }
      f447(p1523, v2397);
      v2397 = [];
      f460(p1523, "p", 0, Math.floor(p1524 * 28));
      for (v2396 = 0; v2396 < 3; v2396++) {
        f460(p1523, "g", v2396, Math.floor(p1524 * 7));
      }
      for (v2396 = 0; v2396 < 3; v2396++) {
        f460(p1523, "d", v2396, Math.floor(p1524 * 2));
      }
      for (v2396 = 0; v2396 < 3; v2396++) {
        f460(p1523, "a", v2396, Math.floor(p1524 * 1));
      }
      for (v2396 = 0; v2396 < 3; v2396++) {
        f460(p1523, "m", v2396, Math.floor(p1524 * 1));
      }
      f460(p1523, "a", 0, Math.floor(p1524 * 1));
      f455(p1523);
    }
    function f460(p1525, p1526, p1527, p1528, p1529) {
      var v2398 = v2884.ⵠΔⵠᐃ[p1525];
      var v2399 = Math.floor(v2398.x1 / 100);
      var v2400 = Math.floor(v2398.y1 / 100);
      var v2401 = Math.floor(v2398.w / 100);
      var v2402 = Math.floor(v2398.ΔᐃⲆ / 100);
      if (vVVUndefined82 !== p1529) {
        p1529 = 1 - p1529;
        v2399 += Math.floor(v2401 * p1529 / 2);
        v2400 += Math.floor(p1529 * v2402 / 2);
        v2401 -= Math.floor(v2401 * p1529);
        v2402 -= Math.floor(p1529 * v2402);
      }
      var v2403 = v2881.ⲆᐃᐃⲆ;
      for (var v2404 = 0, v2405 = 0; v2405 < p1528 && !(v2404 > 50000); v2404++) {
        var v2406;
        var v2407 = v2400 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * v2402);
        var v2408 = v2399 + Math.floor(v2401 * v2884.ⲆⲆⵠⲆΔ.get());
        if (!(v2884.ⵠᐃᐃΔⲆ(p1525, v2408 * 100 + 50, v2407 * 100 + 50) < 400) && ((v2406 = v2403[v2407][v2408 + 1]) === undefined || v2406[p1526] === undefined || v2406[p1526][p1527] === undefined) && ((v2406 = v2403[v2407][v2408 - 1]) === vVVUndefined13 || v2406[p1526] === vUndefined || vVVVVVUndefined132 === v2406[p1526][p1527]) && ((v2406 = v2403[v2407 + 1][v2408]) === vVVVVVUndefined1322 || v2406[p1526] === vVVUndefined83 || v2406[p1526][p1527] === vVVVUndefined132) && ((v2406 = v2403[v2407 - 1][v2408]) === undefined || v2406[p1526] === undefined || v2406[p1526][p1527] === undefined) && ((v2406 = v2403[v2407 + 1][v2408 - 1]) === undefined || vVVUndefined82 === v2406[p1526] || vVVVUndefined132 === v2406[p1526][p1527]) && ((v2406 = v2403[v2407 - 1][v2408 + 1]) === undefined || v2406[p1526] === vVUndefined8 || v2406[p1526][p1527] === undefined) && ((v2406 = v2403[v2407 + 1][v2408 + 1]) === undefined || v2406[p1526] === undefined || vVVUndefined83 === v2406[p1526][p1527]) && ((v2406 = v2403[v2407 - 1][v2408 - 1]) === vVVVUndefined13 || vVVVVUndefined132 === v2406[p1526] || v2406[p1526][p1527] === vVVVUndefined824)) {
          if (vVVVUndefined822 === v2403[v2407][v2408]) {
            f450(v2407, v2408, p1526, p1527, 1);
            v2405++;
          }
        }
      }
    }
    function f461(p1530, p1531, p1532) {
      if (p1530[p1531]) {
        for (v160 = 0; v160 < p1530[p1531].length; v160++) {
          if (p1530[p1531][v160]) {
            for (ⵠⲆΔⵠ = 0; p1530[p1531][v160].length > ⵠⲆΔⵠ; ⵠⲆΔⵠ++) {
              p1530[p1531][v160][ⵠⲆΔⵠ].ΔΔΔ = p1532;
              p1530[p1531][v160][ⵠⲆΔⵠ].ᐃⲆⲆ = vVV314;
              p1530[p1531][v160][ⵠⲆΔⵠ].time = 0;
              p1530[p1531][v160][ⵠⲆΔⵠ].angle = 0;
            }
          }
        }
      }
    }
    if (v2334 === 14) {
      v2334 = 21;
    }
    this.ᐃᐃΔ[44] = [];
    this.ᐃᐃΔ[99] = [];
    this.ᐃᐃΔ[51] = [];
    this.ᐃᐃΔⲆΔ = [];
    this.ⵠⲆⵠΔᐃ = 260;
    this.ⲆⲆΔⵠⲆ = 260;
    this.ᐃⲆᐃΔⲆᐃΔ = 100;
    this.ᐃⲆΔⵠᐃᐃΔ = 100;
    this.w = this.ⵠⲆⵠΔᐃ * this.ᐃⲆᐃΔⲆᐃΔ;
    this.ΔᐃⲆ = this.ᐃⲆΔⵠᐃᐃΔ * this.ⲆⲆΔⵠⲆ;
    this.ⲆⲆⵠⲆΔ = new v595.ᐃᐃⲆΔⲆΔΔ();
    this.ⵠΔⵠᐃ = [];
    this.ΔⲆᐃⲆ = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3152, 0, 1, 0, 1, 1);
    this.transition = vVVVV316;
    this.ⵠΔᐃΔⵠ = [];
    this.ΔⲆⵠΔᐃᐃᐃ = 0;
    this.ΔΔⲆⲆᐃⵠⲆ = 1;
    this.ᐃⲆⵠⵠᐃΔᐃ = 2;
    this.ⵠᐃᐃᐃᐃΔᐃ = 3;
    this.ⵠΔⵠⵠΔ = 4;
    this.ᐃⲆᐃⵠⵠᐃⲆ = 10;
    this.ⲆⵠⵠⲆᐃⵠᐃ = 11;
    this.ⵠΔᐃΔⵠ[this.ΔⲆⵠΔᐃᐃᐃ] = {
      ΔⲆⲆⲆⵠᐃΔ: 1,
      ⵠⵠᐃ: [19, 58, 43],
      ⲆᐃΔ: [4, 43, 48],
      ⵠΔⵠⵠᐃ: ["#133a2b", "#042b30"]
    };
    this.ⵠΔᐃΔⵠ[this.ⲆⵠⵠⲆᐃⵠᐃ] = {
      ΔⲆⲆⲆⵠᐃΔ: 1,
      ⲆᐃΔ: [9, 43, 31],
      ⵠⵠᐃ: [19, 73, 30],
      ⵠΔⵠⵠᐃ: ["#13491E", "#092D1F"]
    };
    this.ⵠΔᐃΔⵠ[this.ⵠΔⵠⵠΔ] = {
      ΔⲆⲆⲆⵠᐃΔ: 0,
      ⵠⵠᐃ: [11, 106, 132],
      ⲆᐃΔ: [9, 55, 63],
      ⵠΔⵠⵠᐃ: ["#0B6A84", "#09373F"]
    };
    this.ⵠΔᐃΔⵠ[this.ΔΔⲆⲆᐃⵠⲆ] = {
      ΔⲆⲆⲆⵠᐃΔ: 0,
      ⵠⵠᐃ: [235, 242, 240],
      ⲆᐃΔ: [19, 97, 103],
      ⵠΔⵠⵠᐃ: ["#EBF2F0", "#136167"]
    };
    this.ⵠΔᐃΔⵠ[this.ᐃⲆⵠⵠᐃΔᐃ] = {
      ⵠΔⵠⵠᐃ: ["#2D2017", "#031C1E"],
      ⲆᐃΔ: [3, 28, 30],
      ⵠⵠᐃ: [45, 32, 23],
      ΔⲆⲆⲆⵠᐃΔ: 0
    };
    this.ⵠΔᐃΔⵠ[this.ⵠᐃᐃᐃᐃΔᐃ] = {
      ⵠΔⵠⵠᐃ: ["#4A4A4A", "#183D3C"],
      ⲆᐃΔ: [24, 61, 60],
      ΔⲆⲆⲆⵠᐃΔ: 0,
      ⵠⵠᐃ: [74, 74, 74]
    };
    this.ⵠΔᐃΔⵠ[this.ᐃⲆᐃⵠⵠᐃⲆ] = {
      ⲆᐃΔ: [9, 61, 56],
      ΔⲆⲆⲆⵠᐃΔ: 0,
      ⵠΔⵠⵠᐃ: ["#EBD8A6", "#093D38"],
      ⵠⵠᐃ: [235, 216, 166]
    };
    this.ΔᐃⵠᐃⵠᐃⲆ = function (p1533, p1534, p1535, p1536, p1537, p1538) {
      this.x1 = p1534 * 100;
      this.y1 = p1535 * 100;
      this.w = p1536 * 100;
      this.ΔᐃⲆ = p1537 * 100;
      this.x2 = (p1534 + p1536) * 100;
      this.y2 = (p1535 + p1537) * 100;
      this.Δᐃⵠ = p1533;
      this.ⵠᐃᐃ = p1538 === undefined ? 15 : p1538;
    };
    this.ⵠᐃⲆⵠⲆ = -1000000;
    this.ⵠⵠΔⵠᐃ = this.ⵠᐃⲆⵠⲆ;
    this.ⵠⵠⵠⵠⵠ = this.ⵠᐃⲆⵠⲆ;
    this.ⵠᐃΔⲆⲆ = this.ⵠᐃⲆⵠⲆ;
    this.ᐃΔⵠⲆΔΔΔ = this.ⵠᐃⲆⵠⲆ;
    this.ΔᐃⵠⵠΔⵠΔ = this.ⵠᐃⲆⵠⲆ;
    this.ΔΔΔᐃⲆΔᐃ = this.ⵠᐃⲆⵠⲆ;
    this.ΔᐃⵠΔᐃ = this.ⵠᐃⲆⵠⲆ;
    this.ᐃᐃⲆᐃᐃⵠΔⲆᐃ = function (p1539) {
      var v2409 = p1539.r.x;
      var v2410 = p1539.r.y;
      var v2411 = Math.floor(v2410 / 100);
      var v2412 = Math.floor(v2409 / 100);
      p1539.ⵠⵠΔⵠᐃ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ⵠⵠⵠⵠⵠ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ⵠᐃΔⲆⲆ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ᐃΔⵠⲆΔΔΔ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ΔᐃⵠⵠΔⵠΔ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ΔᐃⵠΔᐃ = v2884.ⵠᐃⲆⵠⲆ;
      p1539.ⲆⵠᐃⲆᐃⲆⲆ = v2884.ⵠᐃⲆⵠⲆ;
      for (var v2413 = 0; v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ; v2413++) {
        if (v2884.ΔⲆⵠΔᐃᐃᐃ === v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ) {
          var v2414 = v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410);
          p1539.ᐃΔⵠⲆΔΔΔ = Math.max(p1539.ᐃΔⵠⲆΔΔΔ, v2414);
          if (v2414 > 0 && v2884.ⲆⲆΔⲆⲆⵠⵠ(v2413, v2409, v2410) === 1) {
            p1539.ⲆⵠᐃⲆᐃⲆⲆ = 1;
          }
        } else if (v2884.ⲆⵠⵠⲆᐃⵠᐃ === v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ) {
          v2414 = v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410);
          p1539.ΔᐃⵠⵠΔⵠΔ = Math.max(p1539.ΔᐃⵠⵠΔⵠΔ, v2414);
          if (v2414 > 0 && v2884.ⲆⲆΔⲆⲆⵠⵠ(v2413, v2409, v2410) === 1) {
            p1539.ⲆⵠᐃⲆᐃⲆⲆ = 1;
          }
        } else if (v2884.ΔΔⲆⲆᐃⵠⲆ === v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ) {
          p1539.ⵠⵠΔⵠᐃ = Math.max(p1539.ⵠⵠΔⵠᐃ, v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410));
        } else if (v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ === v2884.ᐃⲆᐃⵠⵠᐃⲆ) {
          p1539.ⵠⵠⵠⵠⵠ = Math.max(p1539.ⵠⵠⵠⵠⵠ, v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410));
        } else if (v2884.ᐃⲆⵠⵠᐃΔᐃ === v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ) {
          p1539.ⵠᐃΔⲆⲆ = Math.max(p1539.ⵠᐃΔⲆⲆ, v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410));
        } else if (v2884.ⵠᐃᐃᐃᐃΔᐃ === v2884.ⵠΔⵠᐃ[v2413].Δᐃⵠ) {
          p1539.ΔᐃⵠΔᐃ = Math.max(p1539.ΔᐃⵠΔᐃ, v2884.ⵠᐃᐃΔⲆ(v2413, v2409, v2410));
        }
      }
      if (v2881.ⲆᐃᐃⲆ[v2411][v2412].iblk) {
        p1539.ⲆⵠᐃⲆᐃⲆⲆ = 1;
      }
      if (v2884.ΔⵠᐃⵠⲆᐃⵠᐃⲆ(v2412, v2411)) {
        p1539.ΔΔΔᐃⲆΔᐃ = p1539.ⵠᐃⲆⵠⲆ;
      } else if (v2881.ⲆᐃᐃⲆ[v2411][v2412].wtb || p1539.ⵠⵠΔⵠᐃ < 0 && p1539.ⵠᐃΔⲆⲆ < 0 && p1539.ᐃΔⵠⲆΔΔΔ < 0 && p1539.ⲆⵠᐃⲆᐃⲆⲆ < 0 && p1539.ΔᐃⵠΔᐃ < 0 && p1539.ⵠⵠⵠⵠⵠ < 0 && p1539.ΔᐃⵠⵠΔⵠΔ < 0) {
        p1539.ΔΔΔᐃⲆΔᐃ = 1;
      } else {
        p1539.ΔΔΔᐃⲆΔᐃ = p1539.ⵠᐃⲆⵠⲆ;
      }
    };
    this.ⵠᐃΔᐃⵠⲆΔΔΔ = function (p1540, p1541) {
      v2884.ⵠⵠΔⵠᐃ = v2884.ⵠᐃⲆⵠⲆ;
      v2884.ⵠⵠⵠⵠⵠ = v2884.ⵠᐃⲆⵠⲆ;
      v2884.ⵠᐃΔⲆⲆ = v2884.ⵠᐃⲆⵠⲆ;
      v2884.ΔᐃⵠΔᐃ = v2884.ⵠᐃⲆⵠⲆ;
      v2884.ᐃΔⵠⲆΔΔΔ = v2884.ⵠᐃⲆⵠⲆ;
      v2884.ΔᐃⵠⵠΔⵠΔ = v2884.ⵠᐃⲆⵠⲆ;
      for (var v2415 = 0; v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ !== v2884.ⵠΔⵠⵠΔ; v2415++) {
        if (v2884.ΔⲆⵠΔᐃᐃᐃ === v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ) {
          v2884.ᐃΔⵠⲆΔΔΔ = Math.max(v2884.ᐃΔⵠⲆΔΔΔ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        } else if (v2884.ⲆⵠⵠⲆᐃⵠᐃ === v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ) {
          v2884.ΔᐃⵠⵠΔⵠΔ = Math.max(v2884.ΔᐃⵠⵠΔⵠΔ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        } else if (v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ === v2884.ΔΔⲆⲆᐃⵠⲆ) {
          v2884.ⵠⵠΔⵠᐃ = Math.max(v2884.ⵠⵠΔⵠᐃ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        } else if (v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ === v2884.ᐃⲆᐃⵠⵠᐃⲆ) {
          v2884.ⵠⵠⵠⵠⵠ = Math.max(v2884.ⵠⵠⵠⵠⵠ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        } else if (v2884.ᐃⲆⵠⵠᐃΔᐃ === v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ) {
          v2884.ⵠᐃΔⲆⲆ = Math.max(v2884.ⵠᐃΔⲆⲆ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        } else if (v2884.ⵠΔⵠᐃ[v2415].Δᐃⵠ === v2884.ⵠᐃᐃᐃᐃΔᐃ) {
          v2884.ΔᐃⵠΔᐃ = Math.max(v2884.ΔᐃⵠΔᐃ, v2884.ⵠᐃᐃΔⲆ(v2415, p1540, p1541));
        }
      }
      if (v2884.ⵠⵠΔⵠᐃ < 0 && v2884.ΔᐃⵠΔᐃ < 0 && v2884.ᐃΔⵠⲆΔΔΔ < 0 && v2884.ΔᐃⵠΔᐃ < 0 && v2884.ⵠⵠⵠⵠⵠ < 0 && v2884.ΔᐃⵠⵠΔⵠΔ < 0) {
        v2884.ΔΔΔᐃⲆΔᐃ = 1;
      } else {
        v2884.ΔΔΔᐃⲆΔᐃ = v2884.ⵠᐃⲆⵠⲆ;
      }
    };
    this.ⲆⲆΔⲆⲆⵠⵠ = function (p1542, p1543, p1544) {
      var v2416 = v2884.ⵠΔⵠᐃ[p1542];
      var v2417 = 0;
      ⵠΔᐃᐃ = v2416.x1 + 30 + ((v2416.ⵠᐃᐃ & 4) === 0 ? 150 : 0);
      var v2418 = p1543 - ⵠΔᐃᐃ;
      if ((v2416.ⵠᐃᐃ & 4) > 0 && v2418 > 0 && v2418 < 320) {
        v2417 = 1;
      }
      ⵠⲆΔΔ = v2416.y1 + 250 + (v2416.ⵠᐃᐃ & 1 ? 0 : 150);
      v2418 = p1544 - ⵠⲆΔΔ;
      if ((v2416.ⵠᐃᐃ & 1) > 0 && v2418 > 0 && v2418 < 320) {
        v2417 = 1;
      }
      ⲆⲆΔⲆ = v2416.x2 + 80 + ((v2416.ⵠᐃᐃ & 8) === 0 ? -200 : 0);
      v2418 = ⲆⲆΔⲆ - p1543;
      if ((v2416.ⵠᐃᐃ & 8) > 0 && v2418 > 0 && v2418 < 320) {
        v2417 = 1;
      }
      ᐃⵠⵠⲆ = v2416.y2 - 200 + (v2416.ⵠᐃᐃ & 2 ? 0 : -200);
      v2418 = ᐃⵠⵠⲆ - p1544;
      if ((v2416.ⵠᐃᐃ & 2) > 0 && v2418 > 0 && v2418 < 320) {
        v2417 = 1;
      }
      if (p1543 >= ⵠΔᐃᐃ && ⲆⲆΔⲆ >= p1543 && ⵠⲆΔΔ <= p1544 && p1544 <= ᐃⵠⵠⲆ) {
        return v2417;
      } else {
        return 0;
      }
    };
    this.ⵠᐃᐃΔⲆ = function (p1545, p1546, p1547) {
      var v2419 = v2884.ⵠΔⵠᐃ[p1545];
      ⵠΔᐃᐃ = v2419.x1 + 30;
      ⵠⲆΔΔ = v2419.y1 + 250;
      ⲆⲆΔⲆ = v2419.x2 + 80;
      ᐃⵠⵠⲆ = v2419.y2 - 200;
      if (ⵠΔᐃᐃ <= p1546 && p1546 <= ⲆⲆΔⲆ && p1547 >= ⵠⲆΔΔ && p1547 <= ᐃⵠⵠⲆ) {
        return Math.min(p1546 - ⵠΔᐃᐃ, ⲆⲆΔⲆ - p1546, p1547 - ⵠⲆΔΔ, ᐃⵠⵠⲆ - p1547);
      }
      var v2420 = -1000000;
      if (p1546 - ⵠΔᐃᐃ < 0) {
        v2420 = Math.max(v2420, p1546 - ⵠΔᐃᐃ);
      } else if (ⲆⲆΔⲆ - p1546 < 0) {
        v2420 = Math.max(v2420, ⲆⲆΔⲆ - p1546);
      }
      ⲆᐃᐃΔⵠΔⲆ = -1000000;
      if (p1547 < ⵠⲆΔΔ || p1547 > ᐃⵠⵠⲆ) {
        if (p1547 - ⵠⲆΔΔ < 0) {
          ⲆᐃᐃΔⵠΔⲆ = Math.max(ⲆᐃᐃΔⵠΔⲆ, p1547 - ⵠⲆΔΔ);
        } else {
          ⲆᐃᐃΔⵠΔⲆ = Math.max(ⲆᐃᐃΔⵠΔⲆ, ᐃⵠⵠⲆ - p1547);
        }
        v2420 = v2420 !== -1000000 && ⲆᐃᐃΔⵠΔⲆ !== -1000000 ? Math.min(v2420, ⲆᐃᐃΔⵠΔⲆ) : ⲆᐃᐃΔⵠΔⲆ;
      }
      return v2420;
    };
    this.ⵠΔⲆᐃⲆⵠΔ = function (p1548, p1549, p1550) {
      var vP1550 = p1550;
      var vP1549 = p1549;
      f450(vP1550, vP1549, "isl", p1548, 1);
      for (var v2421 = 0; v2421 < 4; v2421++) {
        for (var v2422 = 0; v2422 < 3; v2422++) {
          f450(vP1550 - v2422, vP1549 - v2421, "iblk", 0);
          f450(vP1550 + v2422, vP1549 - v2421, "iblk", 0);
          f450(vP1550 + v2422, vP1549 + v2421, "iblk", 0);
          f450(vP1550 - v2422, vP1549 + v2421, "iblk", 0);
        }
      }
      if (p1548 === 0) {
        for (v2421 = 0; v2421 < 2; v2421++) {
          f450(vP1550 - v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 - v2421, vP1549 + 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 + 4, "iblk", 0);
        }
        for (v2421 = 0; v2421 < 3; v2421++) {
          f450(vP1550 - 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 - 3, vP1549 - v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 - v2421, "iblk", 0);
        }
        f450(vP1550 - 2, vP1549 - 4, "iblk", 0);
        f450(vP1550 - 3, vP1549 - 3, "iblk", 0);
        f450(vP1550 + 2, vP1549 + 4, "iblk", 0);
        f450(vP1550 + 3, vP1549 + 3, "iblk", 0);
      } else if (p1548 === 1) {
        for (v2421 = 0; v2421 < 3; v2421++) {
          f450(vP1550 - v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 - v2421, vP1549 + 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 + 4, "iblk", 0);
        }
        for (v2421 = 0; v2421 < 4; v2421++) {
          f450(vP1550 - 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 - 3, vP1549 - v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 - v2421, "iblk", 0);
        }
      } else if (p1548 === 2) {
        for (v2421 = 0; v2421 < 2; v2421++) {
          f450(vP1550 - v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 - 4, "iblk", 0);
          f450(vP1550 - v2421, vP1549 + 4, "iblk", 0);
          f450(vP1550 + v2421, vP1549 + 4, "iblk", 0);
        }
        for (v2421 = 0; v2421 < 3; v2421++) {
          f450(vP1550 - 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 + v2421, "iblk", 0);
          f450(vP1550 - 3, vP1549 - v2421, "iblk", 0);
          f450(vP1550 + 3, vP1549 - v2421, "iblk", 0);
        }
      }
    };
    this.ⵠΔⵠⵠⵠⵠⲆᐃᐃ = function (p1551) {
      for (var v2423 = 0; v2884.ⵠΔⵠᐃ.length > v2423 && p1551 > 0; v2423++) {
        var v2424 = v2884.ⵠΔⵠᐃ[v2423];
        if (v2424.Δᐃⵠ === v2884.ⵠΔⵠⵠΔ && v2424.w > 1800 && v2424.ΔᐃⲆ > 1000) {
          var v2425 = Math.floor((v2424.x1 + v2424.w / 2) / 100);
          var v2426 = Math.floor((v2424.y1 + v2424.ΔᐃⲆ / 2) / 100);
          v2884.ⵠΔⲆᐃⲆⵠΔ(p1551 % 3, v2425, v2426);
          for (var v2427 = 0; v2427 < 3; v2427++) {
            var v2428 = v2426 - 2 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 4);
            var v2429 = v2425 - 3 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 6);
            if (v2881.ⲆᐃᐃⲆ[v2428][v2429].s === vVVVVVUndefined132) {
              f450(v2428, v2429, "plm", v2427);
            }
            v2428 = v2426 - 2 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 4);
            v2429 = v2425 - 3 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 6);
            if (v2881.ⲆᐃᐃⲆ[v2428][v2429].plm === vVVVVUndefined132) {
              f450(v2428, v2429, "s", v2427);
            }
          }
          v2428 = v2426 - 2 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 4);
          v2429 = v2425 - 3 + Math.floor(v2884.ⲆⲆⵠⲆΔ.get() * 6);
          if (vVVVVVUndefined1322 === v2881.ⲆᐃᐃⲆ[v2428][v2429].plm && v2881.ⲆᐃᐃⲆ[v2428][v2429].s === vVVVVUndefined824) {
            f450(v2428, v2429, "p", 0, 1);
          }
          p1551--;
        }
      }
    };
    this.ᐃⲆⵠⲆᐃᐃΔⲆΔ = function (p1552) {
      v2884.ⲆⲆⵠⲆΔ.ⵠⵠᐃΔⵠ(p1552);
      var v2430 = 0;
      while (true) {
        if (++v2430 > 10000) {
          return;
        }
        v2884.ⵠΔⵠᐃ = [];
        if (v2884.ΔⵠⲆᐃᐃ === 0 && (v2884.mode === 3 || v2884.mode === 7 || v2884.mode === 0)) {
          v2884.ΔⵠⲆᐃᐃ = v602;
        }
        if (v2884.mode === 2) {
          v2884.ⵠΔⵠᐃ.push(new v2884.ΔᐃⵠᐃⵠᐃⲆ(v2884.ΔⲆⵠΔᐃᐃᐃ, 2, 2, 80, 80, 15));
        } else if (v2884.ΔⵠⲆᐃᐃ !== 0 && v2884.ΔⵠⲆᐃᐃ.length > 0 && v2884.ΔⵠⲆᐃᐃ[0].length > 3) {
          for (var v2431 = 0; v2884.ΔⵠⲆᐃᐃ.length > v2431; v2431++) {
            if ((v2442 = v2884.ΔⵠⲆᐃᐃ[v2431])[0] !== 0) {
              break;
            }
            var v2432 = v2325.ΔⲆⵠΔᐃᐃᐃ;
            switch (v2442[1]) {
              case "FOREST":
                v2432 = v2884.ΔⲆⵠΔᐃᐃᐃ;
                break;
              case "JUNGLE":
                v2432 = v2884.ⲆⵠⵠⲆᐃⵠᐃ;
                break;
              case "WINTER":
                v2432 = v2884.ΔΔⲆⲆᐃⵠⲆ;
                break;
              case "DESERT":
                v2432 = v2884.ᐃⲆᐃⵠⵠᐃⲆ;
                break;
              case "LAVA":
                v2432 = v2884.ᐃⲆⵠⵠᐃΔᐃ;
                break;
              case "DRAGON":
                v2432 = v2884.ⵠᐃᐃᐃᐃΔᐃ;
            }
            v2884.ⵠΔⵠᐃ.push(new v2884.ΔᐃⵠᐃⵠᐃⲆ(v2432, v2442[2], v2442[3], v2442[4], v2442[5], v2442[6], v2442[7]));
          }
        } else if (v2884.ΔⵠⲆᐃᐃ !== 0) {
          for (v2431 = 0; v2431 < v2884.ΔⵠⲆᐃᐃ.length; v2431++) {
            var v2433 = v2884.ΔⵠⲆᐃᐃ[v2431];
            v2432 = v2325.ΔⲆⵠΔᐃᐃᐃ;
            switch (v2433[0]) {
              case "FOREST":
                v2432 = v2884.ΔⲆⵠΔᐃᐃᐃ;
                break;
              case "JUNGLE":
                v2432 = v2884.ⲆⵠⵠⲆᐃⵠᐃ;
                break;
              case "WINTER":
                v2432 = v2884.ΔΔⲆⲆᐃⵠⲆ;
                break;
              case "DESERT":
                v2432 = v2884.ᐃⲆᐃⵠⵠᐃⲆ;
                break;
              case "LAVA":
                v2432 = v2884.ᐃⲆⵠⵠᐃΔᐃ;
                break;
              case "DRAGON":
                v2432 = v2884.ⵠᐃᐃᐃᐃΔᐃ;
            }
            if (r(v2432, v2433[1], v2433[2], 0, (v2431 + 1) * 10) === 0) {
              break;
            }
          }
          if (v2884.ΔⵠⲆᐃᐃ.length !== v2431) {
            continue;
          }
        }
        break;
      }
      ⲆΔᐃᐃⲆⵠⵠⲆⲆ();
      var v2434 = [];
      for (var v2435 = 0; v2435 < v2884.ⲆⲆΔⵠⲆ; v2435++) {
        v2434[v2435] = new Array(v2884.ⵠⲆⵠΔᐃ);
        for (var v2436 = 0; v2884.ⵠⲆⵠΔᐃ > v2436; v2436++) {
          v2434[v2435][v2436] = 0;
        }
      }
      for (v2435 = 0; v2435 < v2884.ⵠΔⵠᐃ.length; v2435++) {
        for (var v2437 = (v2433 = v2884.ⵠΔⵠᐃ[v2435]).x2 / 100, v2438 = v2433.y2 / 100, v2439 = v2433.x1 / 100; v2439 <= v2437; v2439++) {
          for (var v2440 = v2433.y1 / 100; v2440 <= v2438; v2440++) {
            v2434[v2440][v2439] = 1;
          }
        }
      }
      for (v2440 = 0; v2884.ⲆⲆΔⵠⲆ > v2440; v2440++) {
        for (v2439 = 0; v2439 < v2884.ⵠⲆⵠΔᐃ; v2439++) {
          if (v2434[v2440][v2439] === 0) {
            a(v2434, v2439, v2440);
          }
        }
      }
      v2881 = {
        w: v2884.ⵠⲆⵠΔᐃ,
        ΔᐃⲆ: v2884.ⲆⲆΔⵠⲆ,
        ⲆᐃᐃⲆ: []
      };
      for (v2435 = 0; v2435 < v2884.ⲆⲆΔⵠⲆ; v2435++) {
        v2881.ⲆᐃᐃⲆ[v2435] = [];
      }
      if (v2884.ΔⵠⲆᐃᐃ !== 0 && v2884.ΔⵠⲆᐃᐃ.length > 0 && v2884.ΔⵠⲆᐃᐃ[0].length > 3) {
        for (v2431 = 0; v2431 < v2884.ΔⵠⲆᐃᐃ.length; v2431++) {
          if ((v2442 = v2884.ΔⵠⲆᐃᐃ[v2431])[1] === "isl") {
            v2884.ⵠΔⲆᐃⲆⵠΔ(v2442[2], v2442[3], v2442[4]);
          }
        }
      } else {
        v2884.ⵠΔⵠⵠⵠⵠⲆᐃᐃ(v2884.ⲆΔⲆⵠΔΔΔ);
      }
      if (v2884.ΔⵠⲆᐃᐃ !== 0 && v2884.ΔⵠⲆᐃᐃ.length > 0 && v2884.ΔⵠⲆᐃᐃ[0].length > 3) {
        var v2441 = [];
        for (v2431 = 0; v2884.ΔⵠⲆᐃᐃ.length > v2431; v2431++) {
          var v2442;
          if ((v2442 = v2884.ΔⵠⲆᐃᐃ[v2431])[0] === 1) {
            if (v2442[1] === "r") {
              f450(v2442[3], v2442[2], "wtb", 0, 1);
              v2441.push([v2442[3], v2442[2], v2442[4]]);
            } else {
              f450(v2442[4], v2442[3], v2442[1], v2442[2], v2442[5]);
            }
          }
        }
        f447(0, v2441);
        v2441 = [];
      } else {
        for (v2435 = 0; v2884.ⵠΔⵠᐃ.length > v2435; v2435++) {
          v2433 = v2884.ⵠΔⵠᐃ[v2435];
          if (v2884.ΔⲆⵠΔᐃᐃᐃ === v2433.Δᐃⵠ) {
            if (v2884.mode === 4) {
              f459(v2435, v2433.w / 10000);
            } else {
              f452(v2435, v2433.w / 10000);
            }
          }
          if (v2884.ⲆⵠⵠⲆᐃⵠᐃ === v2433.Δᐃⵠ) {
            f457(v2435, v2433.w / 10000);
          }
          if (v2433.Δᐃⵠ === v2884.ᐃⲆⵠⵠᐃΔᐃ) {
            f454(v2435, v2433.w / 10000);
          }
          if (v2884.ΔΔⲆⲆᐃⵠⲆ === v2433.Δᐃⵠ) {
            f458(v2435, v2433.w / 10000);
          }
          if (v2433.Δᐃⵠ === v2884.ᐃⲆᐃⵠⵠᐃⲆ) {
            f456(v2435, v2433.w / 10000);
          }
          if (v2884.ⵠᐃᐃᐃᐃΔᐃ === v2433.Δᐃⵠ) {
            f449(v2435);
          }
        }
      }
      f86("isl", 1);
      f86("wtb", 20);
      f86("la", 1);
      f86("c", 1);
      f86("s", 1);
      f86("jus", 1);
      f86("f", 1);
      f86("p", 1);
      f86("bap", 1);
      f86("jub", 1);
      f86("g", 1);
      f86("d", 1);
      f86("a", 1);
      f86("re", 1);
      f86("m", 1);
      f86("cop", 1);
      f86("iro", 1);
      f86("top", 1);
      f86("sap", 1);
      f86("jad", 1);
      f86("rub", 1);
      f86("aqu", 1);
      f86("coa", 1);
      v829 = [];
      v2884.ⲆⵠΔΔΔΔⵠⲆⵠ(v2881);
    };
    this.ⲆΔⵠⲆ = f450;
    this.ⲆⵠΔΔΔΔⵠⲆⵠ = function (p1553) {
      for (var v2443 = 0; v2443 < this.ⲆⲆΔⵠⲆ; v2443++) {
        for (var v2444 = 0; this.ⵠⲆⵠΔᐃ > v2444; v2444++) {
          if (!p1553.ⲆᐃᐃⲆ[v2443]) {
            p1553.ⲆᐃᐃⲆ[v2443] = [];
          }
          if (p1553.ⲆᐃᐃⲆ[v2443][v2444]) {
            var v2445 = p1553.ⲆᐃᐃⲆ[v2443][v2444];
            if (v2445.de && v2445.de.length > 0) {
              for (var v2446 = 0; v2446 < v2445.de.length; v2446++) {
                if (v2445.de[v2446] && v2445.de[v2446].length > 0) {
                  v2445.de = v2445.de[v2446][0];
                  if (v2446 >= 41 && v2446 <= 49) {
                    v2445.de.scale = 3;
                    var v2447 = Math.floor(Math.random() * 3 + 1);
                    v2445.de.ⵠⲆΔ = [];
                    for (var v2448 = 0; v2447 > v2448; v2448++) {
                      v2445.de.ⵠⲆΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.random() * Math.PI * 2,
                        ⲆᐃⵠⲆⲆ: 41 + Math.floor(Math.random() * 9)
                      });
                    }
                  } else if (v2446 >= 19 && v2446 <= 26) {
                    v2445.de.scale = 3;
                    v2447 = Math.floor(Math.random() * 3 + 1);
                    v2445.de.ⵠⲆΔ = [];
                    for (v2448 = 0; v2447 > v2448; v2448++) {
                      v2445.de.ⵠⲆΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.PI * Math.random() * 2,
                        ⲆᐃⵠⲆⲆ: 19 + Math.floor(Math.random() * 8)
                      });
                    }
                  } else if (v2446 <= 15 || v2446 >= 27 && v2446 <= 40) {
                    v2445.de.angle = 0;
                    v2445.de.scale = 2;
                    v2445.de.ⲆᐃⵠⲆⲆ = v2446;
                  } else {
                    v2445.de.angle = Math.PI * Math.random() * 2;
                    v2445.de.scale = 1;
                    v2445.de.ⲆᐃⵠⲆⲆ = v2446;
                  }
                }
              }
            }
            f461(v2445, "p", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "t", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV31, 1, 1, 0, 10, 10));
            f461(v2445, "s", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 1, 1, 0, 10, 10));
            f461(v2445, "g", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 1, 1, 0, 10, 10));
            f461(v2445, "d", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 1, 1, 0, 10, 10));
            f461(v2445, "b", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "f", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "sw", new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 1, 1, 0, 10, 10));
            f461(v2445, "gw", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "dw", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "a", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV314, 1, 1, 0, 10, 10));
            f461(v2445, "cs", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "plm", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "re", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "c", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV313, 1, 1, 0, 10, 10));
            f461(v2445, "m", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1, 0, 10, 10));
            f461(v2445, "coa", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "cop", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "iro", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1, 0, 10, 10));
            f461(v2445, "top", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "sap", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 1, 1, 0, 10, 10));
            f461(v2445, "jad", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV31, 1, 1, 0, 10, 10));
            f461(v2445, "rub", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "aqu", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "jut", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV313, 1, 1, 0, 10, 10));
            f461(v2445, "jub", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
            f461(v2445, "jus", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV314, 1, 1, 0, 10, 10));
            f461(v2445, "jus", new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3153, 1, 1, 0, 10, 10));
            f461(v2445, "bap", new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1, 0, 10, 10));
          } else {
            p1553.ⲆᐃᐃⲆ[v2443][v2444] = [];
          }
        }
      }
    };
    this.time = v624.Ⲇⵠᐃ;
    this.ᐃᐃᐃᐃΔ = {
      translate: {
        x: 0,
        y: 0
      },
      now: 0,
      ⵠⵠᐃΔⵠ: 0,
      ᐃⲆΔⵠΔ: 0
    };
    this.ⲆᐃΔΔⲆᐃⲆⵠⵠ = function () {
      this.ᐃᐃΔⲆΔ = [];
      this.ᐃᐃΔ[0] = [];
      this.ᐃᐃΔ[2] = [];
      this.ᐃᐃΔ[1] = [];
      this.ᐃᐃΔ[6] = [];
      this.ᐃᐃΔ[3] = [];
      this.ᐃᐃΔ[5] = [];
      this.ᐃᐃΔ[12] = [];
      this.ᐃᐃΔ[13] = [];
      this.ᐃᐃΔ[14] = [];
      this.ᐃᐃΔ[20] = [];
      this.ᐃᐃΔ[61] = [];
      this.ᐃᐃΔ[39] = [];
      this.ᐃᐃΔ[65] = [];
      this.ᐃᐃΔ[47] = [];
      this.ᐃᐃΔ[42] = [];
      this.ᐃᐃΔ[40] = [];
      this.ᐃᐃΔ[64] = [];
      this.ᐃᐃΔ[46] = [];
      this.ᐃᐃΔ[52] = [];
      this.ᐃᐃΔ[53] = [];
      this.ᐃᐃΔ[63] = [];
      this.ᐃᐃΔ[66] = [];
      this.ᐃᐃΔ[48] = [];
      this.ᐃᐃΔ[49] = [];
      this.ᐃᐃΔ[41] = [];
      this.ᐃᐃΔ[24] = [];
      this.ᐃᐃΔ[25] = [];
      this.ᐃᐃΔ[26] = [];
      this.ᐃᐃΔ[27] = [];
      this.ᐃᐃΔ[28] = [];
      this.ᐃᐃΔ[29] = [];
      this.ᐃᐃΔ[30] = [];
      this.ᐃᐃΔ[31] = [];
      this.ᐃᐃΔ[32] = [];
      this.ᐃᐃΔ[33] = [];
      this.ᐃᐃΔ[34] = [];
      this.ᐃᐃΔ[35] = [];
      this.ᐃᐃΔ[36] = [];
      this.ᐃᐃΔ[37] = [];
      this.ᐃᐃΔ[44] = [];
      this.ᐃᐃΔ[4] = [];
      this.ᐃᐃΔ[7] = [];
      this.ᐃᐃΔ[8] = [];
      this.ᐃᐃΔ[9] = [];
      this.ᐃᐃΔ[19] = [];
      this.ᐃᐃΔ[59] = [];
      this.ᐃᐃΔ[50] = [];
      this.ᐃᐃΔ[10] = [];
      this.ᐃᐃΔ[15] = [];
      this.ᐃᐃΔ[16] = [];
      this.ᐃᐃΔ[17] = [];
      this.ᐃᐃΔ[21] = [];
      this.ᐃᐃΔ[60] = [];
      this.ᐃᐃΔ[54] = [];
      this.ᐃᐃΔ[55] = [];
      this.ᐃᐃΔ[56] = [];
      this.ᐃᐃΔ[57] = [];
      this.ᐃᐃΔ[58] = [];
      this.ᐃᐃΔ[62] = [];
      this.ᐃᐃΔ[18] = [];
      this.ᐃᐃΔ[38] = [];
      this.ᐃᐃΔ[65] = [];
      this.ᐃᐃΔ[11] = [];
      this.ᐃᐃΔ[22] = [];
      this.ᐃᐃΔ[23] = [];
      this.ᐃᐃΔ[105] = [];
      this.ᐃᐃΔ[106] = [];
      this.ᐃᐃΔ[104] = [];
      this.ᐃᐃΔ[92] = [];
      this.ᐃᐃΔ[67] = [];
      this.ᐃᐃΔ[74] = [];
      this.ᐃᐃΔ[77] = [];
      this.ᐃᐃΔ[84] = [];
      this.ᐃᐃΔ[78] = [];
      this.ᐃᐃΔ[79] = [];
      this.ᐃᐃΔ[80] = [];
      this.ᐃᐃΔ[81] = [];
      this.ᐃᐃΔ[86] = [];
      this.ᐃᐃΔ[88] = [];
      this.ᐃᐃΔ[89] = [];
      this.ᐃᐃΔ[90] = [];
      this.ᐃᐃΔ[87] = [];
      this.ᐃᐃΔ[72] = [];
      this.ᐃᐃΔ[73] = [];
      this.ᐃᐃΔ[69] = [];
      this.ᐃᐃΔ[100] = [];
      this.ᐃᐃΔ[103] = [];
      this.ᐃᐃΔ[102] = [];
      this.ᐃᐃΔ[70] = [];
      this.ᐃᐃΔ[85] = [];
      this.ᐃᐃΔ[82] = [];
      this.ᐃᐃΔ[83] = [];
      this.ᐃᐃΔ[71] = [];
      this.ᐃᐃΔ[76] = [];
      this.ᐃᐃΔ[75] = [];
      this.ᐃᐃΔ[91] = [];
      this.ᐃᐃΔ[101] = [];
      this.ᐃᐃΔ[95] = [];
      this.ᐃᐃΔ[96] = [];
      this.ᐃᐃΔ[97] = [];
      this.ᐃᐃΔ[93] = [];
      this.ᐃᐃΔ[94] = [];
      this.ᐃᐃΔ[98] = [];
      this.ᐃᐃΔ[43] = [];
      this.ᐃᐃΔ[45] = [];
      this.ᐃᐃΔ[68] = [];
      this.ᐃᐃΔ[99] = [];
      this.ᐃᐃΔ[51] = [];
    };
    this.ΔⲆΔⲆΔΔⵠⲆⵠ = function (p1554) {
      if (this.ᐃᐃΔⲆΔ[p1554]) {
        ⵠΔΔᐃ = this.ᐃᐃΔⲆΔ[p1554].type;
        this.ᐃᐃΔⲆΔ[p1554] = null;
        for (var v2449 = this.ᐃᐃΔ[ⵠΔΔᐃ], v2450 = 0; v2449.length > v2450; v2450++) {
          if (p1554 == v2449[v2450].ᐃⲆⲆΔ) {
            v2449.splice(v2450, 1);
            return;
          }
        }
      }
    };
    this.ⵠᐃⲆᐃⲆⵠⵠᐃᐃ = function (p1555, p1556) {
      for (var v2451 = 0; v2451 < this.ᐃᐃΔ[65].length; v2451++) {
        var v2452 = this.ᐃᐃΔ[65][v2451];
        if (p1556 === Math.floor(v2452.x / 100) && p1555 === Math.floor(v2452.y / 100)) {
          return 1;
        }
      }
      return 0;
    };
    this.ΔⵠᐃⵠⲆᐃⵠᐃⲆ = function (p1557, p1558) {
      for (var v2453 = 0; this.ᐃᐃΔ[39].length > v2453; v2453++) {
        var v2454 = this.ᐃᐃΔ[39][v2453];
        if (Math.floor(v2454.x / 100) == p1557 && Math.floor(v2454.y / 100) == p1558) {
          return vV303;
        }
      }
      return false;
    };
    this.ΔΔⵠᐃⵠ = function (p1559) {
      for (var v2455 = 0; v2455 < p1559.length; v2455++) {
        ᐃⵠⵠΔ = p1559[v2455];
        if (ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ != ᐃⵠⵠΔ.angle) {
          var v2456 = Math.PI * 2;
          ᐃⵠⵠΔ.angle = (ᐃⵠⵠΔ.angle + v2456) % v2456;
          ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ = (ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ + v2456) % v2456;
          if (ᐃⵠⵠΔ.angle != ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ) {
            var v2457 = ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ - ᐃⵠⵠΔ.angle;
            var v2458 = Math.abs(v2457);
            if (Math.PI < v2458) {
              v2458 = Math.PI * 2 - v2458;
            }
            var v2459 = v2458 / Math.PI * 3 * 10 * v3116;
            if (v2457 > Math.PI) {
              ᐃⵠⵠΔ.angle -= v2459;
            } else if (-Math.PI > v2457) {
              ᐃⵠⵠΔ.angle += v2459;
            } else if (v2457 < 0) {
              ᐃⵠⵠΔ.angle -= v2459;
            } else {
              ᐃⵠⵠΔ.angle += v2459;
            }
            ᐃⵠⵠΔ.angle = (ᐃⵠⵠΔ.angle + v2456) % v2456;
            if (Math.abs(ᐃⵠⵠΔ.angle - ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ) < v2459) {
              ᐃⵠⵠΔ.angle = ᐃⵠⵠΔ.ⲆⲆⲆΔⲆΔΔ;
            }
          }
        }
        Math.floor(ᐃⵠⵠΔ.r.y / 100);
        Math.floor(ᐃⵠⵠΔ.r.x / 100);
        if (ᐃⵠⵠΔ.r.x != ᐃⵠⵠΔ.x || ᐃⵠⵠΔ.y != ᐃⵠⵠΔ.r.y) {
          if (ᐃⵠⵠΔ.action & 64) {
            ᐃⵠⵠΔ.action -= 64;
          }
          ᐃⵠⵠΔ.action |= 32;
          var v2460 = ⵠⲆⲆ.ⵠⵠᐃⵠᐃⲆⲆ(ᐃⵠⵠΔ, ᐃⵠⵠΔ.r) + Math.PI;
          var v2461 = ᐃⵠⵠΔ.ⲆⵠΔⲆᐃ * v3116;
          var v2462 = ⵠⲆⲆ.ᐃⲆⲆⲆⵠⵠⵠ(v2461, v2460);
          if (ⵠⲆⲆ.ⲆⵠⵠΔⵠⵠⵠ(ⵠⲆⲆ.ⲆⲆΔⵠΔΔⵠ(ᐃⵠⵠΔ, ᐃⵠⵠΔ.r)) > ⵠⲆⲆ.ⲆⵠⵠΔⵠⵠⵠ(v2462)) {
            ⵠⲆⲆ.ⵠⵠⵠᐃⲆΔΔ(ᐃⵠⵠΔ, v2462);
          } else {
            if (ᐃⵠⵠΔ.action & 32) {
              ᐃⵠⵠΔ.action -= 32;
            }
            ᐃⵠⵠΔ.action |= 64;
            ⵠⲆⲆ.ΔⲆΔⲆᐃⵠⵠ(ᐃⵠⵠΔ.r, ᐃⵠⵠΔ);
          }
        }
        if (ᐃⵠⵠΔ.ⵠⲆᐃⲆΔ) {
          var v2463 = ᐃⵠⵠΔ.bubbles;
          if ((v2467 = v2463.length) === 0 || v2467 < v624.ⵠⲆᐃⵠⵠΔΔ && v2463[v2467 - 1].ᐃΔΔΔᐃ < 0.95) {
            v2463.push({
              id: Math.floor(Math.random() * ΔΔ[678][0].length),
              x: Math.floor(ᐃⵠⵠΔ.x + Math.random() * 80 - 40),
              y: Math.floor(ᐃⵠⵠΔ.y + Math.random() * 80 - 40),
              ᐃΔΔΔᐃ: 1
            });
          }
          for (var v2464 = 0; v2467 > v2464; v2464++) {
            v2463[v2464].ᐃΔΔΔᐃ = Math.max(0, v2463[v2464].ᐃΔΔΔᐃ - v3116);
          }
          for (v2464 = 0; v2464 < v2467; v2464++) {
            if (v2463[v2464].ᐃΔΔΔᐃ === 0) {
              v2463.splice(v2464, 1);
              break;
            }
          }
        }
        var v2465 = 0;
        if (ᐃⵠⵠΔ.ᐃⲆΔⲆ && v2883.ⲆⲆⲆΔⵠ) {
          var v2466 = ᐃⵠⵠΔ.ᐃⵠᐃⲆΔ;
          var v2467 = v2466.length;
          if (ᐃⵠⵠΔ.ΔΔΔᐃⲆΔᐃ > 0 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 337 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 338 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 340 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 355 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 354 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 339 && ᐃⵠⵠΔ.ΔⵠΔΔ !== 164 && !ᐃⵠⵠΔ.ⵠⲆᐃⲆΔ && (v2465 = 1, v2467 === 0 || v624.ⲆᐃᐃᐃⵠⲆΔ < ⵠⲆⲆ.ᐃⵠᐃⲆ(v2466[v2467 - 1], ᐃⵠⵠΔ))) {
            var v2468 = -ᐃⵠⵠΔ.angle;
            var v2469 = v427 * (Math.cos(v2468) * 45);
            var v2470 = Math.sin(v2468) * 45 * v427;
            v2466.push({
              x: ᐃⵠⵠΔ.x + v2469,
              y: ᐃⵠⵠΔ.y + v2470,
              r: 8,
              alpha: 0.8
            });
            v2466.push({
              x: ᐃⵠⵠΔ.x - v2469,
              y: ᐃⵠⵠΔ.y - v2470,
              r: 8,
              alpha: 0.8
            });
            v2466.push({
              x: ᐃⵠⵠΔ.x,
              y: ᐃⵠⵠΔ.y,
              r: 24,
              alpha: 1
            });
          }
          for (v2464 = 0; v2467 > v2464; v2464++) {
            v2466[v2464].alpha = Math.max(0, v2466[v2464].alpha - v3116 / 2.2);
            v2466[v2464].r += v3116 * 20;
          }
          if (v2466.length > 0 && v2466[0].alpha === 0) {
            v2466.splice(0, 1);
          }
          var v2471 = ᐃⵠⵠΔ.ᐃᐃᐃᐃᐃ;
          v2467 = v2471.length;
          var v2472 = -1;
          var v2473 = Math.max(0, Math.sign(ᐃⵠⵠΔ.ⲆⵠᐃⲆᐃⲆⲆ));
          var v2474 = Math.max(0, Math.sign(ᐃⵠⵠΔ.ⵠⵠΔⵠᐃ));
          Math.max(0, Math.sign(ᐃⵠⵠΔ.ⵠⵠⵠⵠⵠ));
          var v2475 = Math.max(0, Math.sign(ᐃⵠⵠΔ.ⵠᐃΔⲆⲆ));
          var v2476 = Math.max(0, Math.sign(ᐃⵠⵠΔ.ΔᐃⵠΔᐃ));
          if (ᐃⵠⵠΔ.ⲆⵠᐃⲆᐃⲆⲆ > 0 || ᐃⵠⵠΔ.ⵠⵠⵠⵠⵠ > 0) {
            v2472 = 821;
          } else if (ᐃⵠⵠΔ.ΔᐃⵠΔᐃ > 0) {
            v2472 = 899;
          } else if (ᐃⵠⵠΔ.ⵠⵠΔⵠᐃ > 0) {
            v2472 = 613;
          } else if (ᐃⵠⵠΔ.ⵠᐃΔⲆⲆ > 0) {
            v2472 = 614;
          }
          if (ᐃⵠⵠΔ.ΔⵠΔΔ === 335 && (v2473 | v2474 | v2475 | v2476) === 1) {
            v2472 = 338;
            var v2477 = ᐃⵠⵠΔ.ⵠⲆⲆᐃⵠ - Math.PI / 2;
            var v2478 = 15;
            var v2479 = 11;
            var v2480 = v624.ΔⵠⲆΔΔⵠⵠ;
          } else if (ᐃⵠⵠΔ.ΔⵠΔΔ === 349 && (v2473 | v2474 | v2475 | v2476) === 1) {
            v2472 = 359;
            v2477 = ᐃⵠⵠΔ.ⵠⲆⲆᐃⵠ - Math.PI / 2;
            v2478 = 21;
            v2479 = 16;
            v2480 = v624.ΔⵠⲆΔΔⵠⵠ;
          } else if (ᐃⵠⵠΔ.ΔⵠΔΔ === 336 && (v2473 | v2474 | v2475 | v2476) == 1) {
            v2472 = 344;
            v2477 = ᐃⵠⵠΔ.ⵠⲆⲆᐃⵠ - Math.PI / 2;
            var v2481 = Math.random() * 50;
            v2478 = 10 + v2481;
            v2479 = 0 + v2481;
            v2480 = v624.ΔⵠⲆΔΔⵠⵠ * 0.9;
          } else {
            v2477 = ᐃⵠⵠΔ.angle;
            v2478 = 15;
            v2479 = 11;
            v2480 = v624.ΔⵠⲆΔΔⵠⵠ;
          }
          if (ᐃⵠⵠΔ.ΔⵠΔΔ === 337 || ᐃⵠⵠΔ.ΔⵠΔΔ === 338 || ᐃⵠⵠΔ.ΔⵠΔΔ === 354 || ᐃⵠⵠΔ.ΔⵠΔΔ === 355 || ᐃⵠⵠΔ.ΔⵠΔΔ === 164 || ᐃⵠⵠΔ.ΔⵠΔΔ === 339 || ᐃⵠⵠΔ.ΔⵠΔΔ === 340 || ᐃⵠⵠΔ.ⵠⲆᐃⲆΔ) ;else if (ᐃⵠⵠΔ.ΔⵠΔΔ === 334) {
            if (v2467 === 0 || v624.ᐃᐃⵠΔⵠⲆⵠ < ⵠⲆⲆ.ᐃⵠᐃⲆ(v2471[v2467 - 1], ᐃⵠⵠΔ)) {
              v2471.push({
                x: ᐃⵠⵠΔ.x,
                y: ᐃⵠⵠΔ.y,
                angle: ᐃⵠⵠΔ.ⵠⲆⲆᐃⵠ,
                alpha: 1,
                id: 336
              });
            }
          } else if (v2472 != -1 && v2465 === 0 && (v2467 === 0 || v2480 < ⵠⲆⲆ.ᐃⵠᐃⲆ(v2471[v2467 - 1], ᐃⵠⵠΔ))) {
            ᐃⵠⵠΔ.ⲆΔᐃⵠⵠΔᐃ++;
            if (Math.abs(ᐃⵠⵠΔ.x - ᐃⵠⵠΔ.r.x) > 1 && Math.abs(ᐃⵠⵠΔ.y - ᐃⵠⵠΔ.r.y) > 1) {
              if (ᐃⵠⵠΔ.r.x > ᐃⵠⵠΔ.x && ᐃⵠⵠΔ.r.y < ᐃⵠⵠΔ.y || ᐃⵠⵠΔ.r.x < ᐃⵠⵠΔ.x && ᐃⵠⵠΔ.y < ᐃⵠⵠΔ.r.y) {
                if (ᐃⵠⵠΔ.ⲆΔᐃⵠⵠΔᐃ % 2) {
                  v2469 = -v2479 * v427;
                  v2470 = v427 * -v2479;
                } else {
                  v2470 = v427 * v2479;
                  v2469 = v427 * v2479;
                }
              } else if (ᐃⵠⵠΔ.ⲆΔᐃⵠⵠΔᐃ % 2) {
                v2469 = v427 * v2479;
                v2470 = v427 * -v2479;
              } else {
                v2470 = v427 * v2479;
                v2469 = v427 * -v2479;
              }
            } else if (ᐃⵠⵠΔ.ⲆΔᐃⵠⵠΔᐃ % 2) {
              v2469 = Math.cos(v2477) * v2478 * v427;
              v2470 = v2478 * Math.sin(v2477) * v427;
            } else {
              v2469 = v427 * (-Math.cos(v2477) * v2478);
              v2470 = v427 * (-Math.sin(v2477) * v2478);
            }
            v2471.push({
              x: ᐃⵠⵠΔ.x + v2469,
              y: ᐃⵠⵠΔ.y + v2470,
              angle: v2477 + Math.PI / 2,
              alpha: 1,
              id: v2472
            });
          }
          for (v2464 = 0; v2467 > v2464; v2464++) {
            if (v2471[v2464].id === 336) {
              v2471[v2464].alpha = Math.max(0, v2471[v2464].alpha - v3116 * 1.5);
            } else {
              v2471[v2464].alpha = Math.max(0, v2471[v2464].alpha - v3116 / 2.85);
            }
          }
          if (v2471.length > 0 && v2471[0].alpha === 0) {
            v2471.splice(0, 1);
          }
        }
      }
    };
    this.ᐃⲆⲆ = function () {
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[0]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[92]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[67]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[74]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[77]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[84]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[78]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[79]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[80]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[81]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[86]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[88]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[89]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[90]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[87]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[68]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[69]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[100]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[103]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[102]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[70]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[85]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[82]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[83]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[71]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[75]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[72]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[73]);
      this.ΔΔⵠᐃⵠ(this.ᐃᐃΔ[76]);
    };
    this.ΔΔΔⵠ = [];
    this.ΔΔΔⵠ[839] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV31, 1, 1.05, 1, 0.008, 0.008);
    this.ΔΔΔⵠ[838] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.08, 1, 0.006, 0.006);
    this.ΔΔΔⵠ[913] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 1, 1.02, 1, 0.008, 0.008);
    this.ΔΔΔⵠ[914] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV313, 1, 1.08, 1, 0.006, 0.006);
    this.ⲆⲆΔΔᐃ = [];
    this.ⲆⲆΔΔᐃ[0] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.1, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[1] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV313, 0.4, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[2] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3153, 0.3, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[3] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV31, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[4] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.3, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[5] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV31, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[6] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.5, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[7] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.9, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[8] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[9] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.2, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[10] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.6, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[11] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0.4, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[12] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV316, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[13] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(v31, 0.2, 1, 0, 0.6, 0.6);
    this.ⲆⲆΔΔᐃ[14] = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV315, 0.7, 1, 0, 0.6, 0.6);
  }
  function f464() {
    Math.random();
    return "o";
  }
  function f472() {
    Math.random();
    return "t";
  }
  function f464() {
    Math.random();
    return "o";
  }
  function f465() {
    Math.random();
    return "r";
  }
  function f466() {
    Math.random();
    return "e";
  }
  function f471() {
    Math.random();
    return "p";
  }
  function f468() {
    Math.random();
    return "n";
  }
  function f469() {
    this.ⵠⵠᐃΔⵠ = function () {};
    this.ᐃⵠⲆⲆΔ = {
      open: vVVV316,
      ᐃΔⲆⵠ: 1,
      ᐃᐃᐃⵠⵠ: 1
    };
    this.ΔⲆᐃⵠᐃ = {
      ᐃΔⲆⵠ: 1,
      ᐃᐃᐃⵠⵠ: -1,
      open: false
    };
    this.ΔⵠⲆⵠ = {
      open: false,
      ᐃᐃᐃⵠⵠ: -1,
      ΔᐃⵠⵠΔᐃⵠ: 0,
      ᐃᐃᐃΔΔΔΔ: 0,
      ᐃΔⲆⵠ: 1
    };
    this.ΔⵠⵠΔ = {
      ᐃΔⲆⵠ: 1,
      ⲆⵠⲆⲆⵠΔⵠ: 0,
      type: 0,
      ΔΔΔⵠΔⲆΔ: 0,
      ⲆᐃᐃᐃΔⲆⵠ: 0,
      open: vV316,
      ᐃᐃᐃⵠⵠ: -1
    };
    this.ᐃᐃᐃⵠ = {
      ⲆⵠⲆⲆⵠΔⵠ: 0,
      ⲆΔⲆⲆⵠΔⲆ: 0,
      ᐃᐃᐃΔΔΔΔ: 0,
      ᐃΔⲆⵠ: 1,
      ᐃᐃᐃⵠⵠ: -1,
      open: vV313
    };
    this.sign = {
      open: vVV316,
      ᐃᐃᐃⵠⵠ: -1
    };
    this.ΔⲆⵠᐃᐃ = {
      ⵠⵠΔΔ: 0,
      ᐃΔⲆⵠ: 1,
      ᐃᐃᐃⵠⵠ: -1,
      open: false
    };
    this.ⵠⲆᐃⲆΔ = {
      enabled: vVVV316,
      ᐃΔᐃᐃⲆ: -1,
      label: vVV315,
      now: -1,
      ᐃᐃΔⵠ: f400
    };
    this.ᐃⵠᐃΔ = {
      id: -1,
      ⵠⵠΔΔ: 0,
      ᐃΔⲆⵠ: 1,
      ᐃᐃᐃⵠⵠ: -1,
      open: vVVVV316,
      lock: false,
      locked: vVV316,
      ᐃΔⲆΔᐃΔⲆ: false,
      ΔⲆⵠⵠᐃᐃⵠ: vVVVV316
    };
    this.ⲆⵠΔⵠⲆ = vVVVV30;
    this.reconnect = {
      enabled: vVVV31,
      rotate: 0
    };
    this.key = ⵠⲆⲆ.ΔᐃⵠΔⵠⲆᐃ("key", vWindow.location.href);
    var v2482 = ⵠⲆⲆ.ΔᐃⵠΔⵠⲆᐃ("egg", vWindow.location.href);
    if (v2482) {
      v2883.ⵠⲆⲆΔ = parseInt(v2482);
    }
    this.beta = vWindow.location.href.indexOf("http://starve.io/beta") === 0 ? 1 : 0;
    if (this.key && this.beta) {
      Δⵠⵠᐃ.set("starve_beta", this.key);
    } else if (this.beta) {
      this.key = Δⵠⵠᐃ.get("starve_beta");
    }
    this.ⲆΔΔᐃΔ = Δⵠⵠᐃ.get("starve_token") ? Δⵠⵠᐃ.get("starve_token") : ⵠⲆⲆ.ΔⵠΔΔΔᐃᐃ(14);
    vWindow.baguette();
    var v2483 = vWindow.kot2;
    this.ⲆΔΔᐃΔ = v2483.substring(0, 6) + this.ⲆΔΔᐃΔ.substring(6);
    var v2484 = 178;
    if (v2484 > 7) {
      v2484 = 64;
    }
    this.ⵠΔⵠΔⲆⲆᐃ = Δⵠⵠᐃ.get("starve_token_id") ? Δⵠⵠᐃ.get("starve_token_id") : "";
    this.id = 0;
    this.ᐃⲆⲆΔ = 0;
    this.ⵠⵠᐃ = 0;
    this.ᐃᐃΔΔⲆΔⲆ = {
      ⲆΔⲆΔⲆΔᐃ: "",
      ᐃᐃᐃΔΔⲆⵠ: 0,
      ⵠⲆᐃⲆⵠⵠⲆ: 0,
      ⲆΔⲆᐃΔ: 0
    };
    this.ᐃᐃⲆΔⲆⲆᐃⵠΔ = {
      connected: 0,
      ᐃⲆΔᐃᐃⵠⲆ: new Date().getTime()
    };
    this.ⵠΔⲆΔΔⵠΔ = 153;
    this.ΔⲆΔⲆᐃⵠΔ = 52;
    this.ⵠΔⲆΔΔⵠΔ;
    this.ΔⲆΔⲆᐃⵠΔ;
    var v2485 = 49;
    this.ⲆᐃⲆΔⲆⵠᐃ = 270;
    if (v2485 == 7) {
      v2485 = 86;
    }
    this.ΔⲆΔᐃᐃ = [];
    this.ᐃⵠᐃⵠΔⲆⲆ = function (p1560) {
      for (var v2486 = 0; this.ΔⲆΔᐃᐃ.length > v2486; v2486++) {
        if (p1560 == this.ΔⲆΔᐃᐃ[v2486]) {
          return true;
        }
      }
      return vVVV313;
    };
    this.ⵠⵠⲆᐃΔ = {
      ᐃΔᐃᐃⲆ: 0,
      time: 0,
      value: 0,
      open: vVV314,
      ᐃᐃΔⵠ: function () {
        if (this.open) {
          var v2487 = new Date().getTime();
          this.time = Math.floor((v2487 - this.ᐃΔᐃᐃⲆ) / 1000);
          if (this.time < 60) {
            v3081.ⵠⵠⲆᐃΔ.button.ᐃᐃΔⵠ(v419);
          } else {
            document.getElementById("shop_starterkit").style.display = "none";
            this.open = false;
          }
        }
      }
    };
    this.ⵠⵠⵠᐃᐃ = {
      id: -1,
      ᐃΔⲆⵠ: -1,
      lock: 0,
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV31, 0, 1, 0, 1 / 30, 1),
      wait: vVV316
    };
    this.ᐃⲆᐃᐃⵠ = {
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 0.2, 1),
      wait: vV316
    };
    this.ᐃᐃᐃᐃⲆ = {
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1, 1),
      wait: false
    };
    this.ⵠⵠⵠᐃⲆ = {
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV313, 0, 1, 0, 1 / 10, 1),
      wait: false
    };
    this.ⲆΔΔⲆᐃⵠⵠ = 141;
    this.ᐃⲆΔΔⵠⲆᐃΔΔ = 7;
    this.ᐃⲆΔΔⵠⲆᐃΔΔ;
    this.ⲆΔΔⲆᐃⵠⵠ;
    this.ⲆΔⵠ = new ⵠⲆⲆ.ⲆⵠⲆⵠᐃΔᐃ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 0.4, 0, 0, v424, v425, v424, v425);
    this.ⲆΔⵠ.ᐃΔᐃᐃⲆ = 0;
    this.ⲆΔⵠ.ᐃⵠⵠᐃⲆΔΔ = 0;
    this.ⲆΔⵠ.ᐃⲆⲆ = function () {
      if (this.ᐃⵠⵠᐃⲆΔΔ > 0) {
        this.ᐃⵠⵠᐃⲆΔΔ -= v3116;
      } else {
        var v2488 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
        if (v2488) {
          this.ᐃΔᐃᐃⲆ = 0;
          var v2489 = Math.max(Math.min(v424 - v2488.x, -2), 2 - v2884.w + v420);
          var v2490 = Math.max(Math.min(v425 - v2488.y, -2), -v2884.ΔᐃⲆ + 2 + v421);
          this.ⲆΔⵠΔⵠⲆΔ({
            x: v2489,
            y: v2490
          });
        } else {
          this.ᐃΔᐃᐃⲆ += v3116;
          if (this.ᐃΔᐃᐃⲆ > 3) {
            this.ᐃΔᐃᐃⲆ = 0;
            if (!v2885.reconnect.enabled) {
              v2887.ΔⵠΔᐃΔⲆⵠΔⵠ();
            }
          }
        }
      }
    };
    this.ⲆΔⵠ.w = screen.width;
    this.ⲆΔⵠ.ΔᐃⲆ = screen.height;
    this.ⲆΔⵠ.ⵠᐃⵠⵠⲆᐃⲆ = this.ⲆΔⵠ.w;
    this.ⲆΔⵠ.ⵠⲆΔⲆⵠᐃΔ = this.ⲆΔⵠ.ΔᐃⲆ;
    this.ⲆΔⵠ.rx = 0;
    this.ⲆΔⵠ.ry = 0;
    this.ⲆΔⵠ.ᐃᐃⵠᐃΔΔⲆⲆᐃ = 0;
    this.ᐃⵠⵠⵠΔΔΔ = 107;
    this.ⲆⲆⵠⵠⲆᐃⲆ = 91;
    this.ᐃⵠⵠⵠΔΔΔ;
    this.ⲆⲆⵠⵠⲆᐃⲆ;
    this.ⲆΔⵠ.ⵠΔᐃⵠⲆⲆᐃⲆΔ = 0;
    this.ⲆΔⵠ.ⲆⵠⲆΔᐃ = function (p1561, p1562) {
      this.x = -Math.min(Math.max(-v2884.ᐃⲆᐃΔⲆᐃΔ * 2, p1561 - v2884.ᐃⲆᐃΔⲆᐃΔ - this.ⵠᐃⵠⵠⲆᐃⲆ / 2), v2884.w - this.ⵠᐃⵠⵠⲆᐃⲆ);
      this.y = -Math.min(Math.max(-v2884.ᐃⲆΔⵠᐃᐃΔ * 2, p1562 - (v2884.ᐃⲆΔⵠᐃᐃΔ + this.ⵠⲆΔⲆⵠᐃΔ) / 2), v2884.ΔᐃⲆ - this.ⵠⲆΔⲆⵠᐃΔ + v2884.ᐃⲆΔⵠᐃᐃΔ);
      this.ⵠⵠᐃⵠᐃ = this.x;
      this.ⵠΔⵠΔⵠⵠΔ = this.y;
    };
    this.control = {
      angle: 0,
      timeout: 0,
      ΔΔⲆⲆⲆⲆⲆ: 0,
      ⵠᐃⲆⲆ: 0,
      attack: 0,
      ᐃⲆⲆ: function () {
        var v2491 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
        if (v2491) {
          var v2492 = {
            x: v2885.ⲆΔⵠ.x + v2491.x,
            y: v2885.ⲆΔⵠ.y + v2491.y
          };
        } else {
          v2492 = v426;
        }
        var v2493 = ⵠⲆⲆ.ⵠⵠᐃⵠᐃⲆⲆ(v3114.ᐃΔⲆᐃ, v2492);
        var vVV3162 = vV316;
        this.ⵠᐃⲆⲆ += v3116;
        if (!v3114.state) {
          if (v2491 && !(v2491.action & 16) && this.ⵠᐃⲆⲆ > 0.2) {
            this.attack = 1;
            vVV3162 = true;
            this.ⵠᐃⲆⲆ = 0;
            v2887.ΔⲆⲆⲆⲆⵠΔΔⲆ(v2493);
          }
        }
        if (v2491) {
          v2491.angle = v2493;
          v2491.ⲆⲆⲆΔⲆΔΔ = v2493;
        }
        if (!vVV3162) {
          this.timeout += v3116;
          if (this.timeout > 0.2) {
            this.timeout = 0;
            if (Math.abs(this.angle - v2493) > 0.005) {
              v2887.ᐃⲆᐃᐃᐃⲆΔⲆⵠ(v2493);
              this.angle = v2493;
            }
          }
        }
        if (!v2885.ΔΔᐃᐃᐃ.open && !v2885.Ⲇⵠⵠⵠⵠ.open) {
          var v2494 = 0;
          if (v3110.ⵠⵠⲆᐃⲆⲆⵠ()) {
            v2494 |= 1;
          }
          if (v3110.ⵠⲆⲆⵠᐃⵠⲆ()) {
            v2494 |= 2;
          }
          if (v3110.ⵠⲆΔⵠⵠⲆⲆ()) {
            v2494 |= 4;
          }
          if (v3110.ᐃⵠⲆᐃᐃⵠᐃ()) {
            v2494 |= 8;
          }
          if (this.ΔΔⲆⲆⲆⲆⲆ != v2494) {
            v2887.ⲆⵠᐃⲆΔᐃⵠⲆⵠ(v2494);
          }
          this.ΔΔⲆⲆⲆⲆⲆ = v2494;
        }
      }
    };
    this.ᐃⲆⵠΔ = {
      c: 1,
      ⵠⲆΔⵠ: 1,
      ΔᐃⲆ: 1,
      Δᐃⵠ: 1,
      ⲆⲆΔ: 1,
      ⲆΔⵠΔⲆᐃⵠ: 1,
      ⵠⵠⵠⲆᐃⵠⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 1, 0, 3, 3),
      ᐃᐃΔΔⲆΔⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 1, 0, 2, 2),
      ΔᐃⵠⵠⲆⵠⵠ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 1, 0, 3, 3),
      ᐃᐃⲆⵠΔⲆΔ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 1, 0, 3, 3),
      ⲆⵠΔⵠⵠᐃⲆ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVV3024, 0, 1, 0, 3, 3),
      ΔⲆⲆⵠⵠΔᐃ: new ⵠⲆⲆ.ᐃⵠᐃᐃ(true, 0, 1, 0, 3, 3),
      ⲆΔᐃⲆᐃ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ᐃΔΔΔᐃ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ΔⲆⲆΔⲆΔⵠ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ΔᐃΔΔᐃΔᐃ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ⲆΔΔⵠⵠΔΔ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ᐃⲆᐃᐃΔᐃᐃ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆΔⵠⵠᐃⲆᐃ, 0, 1, 0, 0, 1),
      ᐃⲆⲆ: function () {
        this.ⵠⵠⵠⲆᐃⵠⵠ.ᐃⲆⲆ();
        this.ᐃᐃΔΔⲆΔⵠ.ᐃⲆⲆ();
        this.ΔᐃⵠⵠⲆⵠⵠ.ᐃⲆⲆ();
        this.ᐃᐃⲆⵠΔⲆΔ.ᐃⲆⲆ();
        this.ⲆⵠΔⵠⵠᐃⲆ.ᐃⲆⲆ();
        this.ΔⲆⲆⵠⵠΔᐃ.ᐃⲆⲆ();
        this.ⲆΔᐃⲆᐃ.ⲆΔⵠΔⵠⲆΔ(this.c);
        this.ᐃΔΔΔᐃ.ⲆΔⵠΔⵠⲆΔ(this.ⵠⲆΔⵠ);
        this.ΔⲆⲆΔⲆΔⵠ.ⲆΔⵠΔⵠⲆΔ(this.ΔᐃⲆ);
        this.ΔᐃΔΔᐃΔᐃ.ⲆΔⵠΔⵠⲆΔ(this.Δᐃⵠ);
        this.ⲆΔΔⵠⵠΔΔ.ⲆΔⵠΔⵠⲆΔ(this.ⲆⲆΔ);
        this.ᐃⲆᐃᐃΔᐃᐃ.ⲆΔⵠΔⵠⲆΔ(this.ⲆΔⵠΔⲆᐃⵠ);
      }
    };
    this.ⵠⲆⵠᐃΔᐃᐃ = false;
    this.ⵠⲆⲆⵠⲆΔⲆ = 46;
    this.ⲆⲆΔᐃΔΔᐃⵠⵠ = 122;
    this.ⵠⲆⲆⵠⲆΔⲆ;
    this.ⲆⲆΔᐃΔΔᐃⵠⵠ;
    this.ΔⵠⲆᐃΔⵠⵠ = 204;
    this.ᐃⵠΔⲆᐃⲆΔ = 72;
    this.ᐃⵠΔⲆᐃⲆΔ;
    this.ΔⵠⲆᐃΔⵠⵠ;
    this.ᐃΔΔⵠᐃΔⵠ = {};
    this.ᐃΔΔⵠᐃΔⵠ.ⵠΔⵠⲆᐃᐃⲆᐃⲆ = 7;
    this.ⲆⵠΔⵠᐃⲆΔ = false;
    this.ᐃΔⵠᐃⵠ = false;
    this.ⲆⲆᐃΔⵠⵠⲆ = false;
    function f470() {
      this.seed = 1;
      this.ΔⵠᐃᐃΔⲆᐃ = 2;
      this.ΔᐃΔᐃⵠᐃⵠ = 3;
      this.ⲆᐃⲆⵠᐃᐃⲆᐃⵠ = 1;
      this.ⵠⵠⵠΔΔᐃΔⵠᐃ = 2;
      this.ⲆⵠⲆΔⲆⲆᐃⲆⲆ = 3;
      this.ΔΔⲆⵠᐃⵠᐃ = function (p1563) {
        this.seed = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠᐃΔΔΔΔⵠ = function (p1564) {
        this.ΔⵠᐃᐃΔⲆᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃᐃΔⲆⵠⲆΔ = function (p1565) {
        this.ΔᐃΔᐃⵠᐃⵠ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠᐃΔⵠⵠⲆⲆⵠⵠ = function (p1566) {
        this.ⲆᐃⲆⵠᐃᐃⲆᐃⵠ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆⲆⲆⲆⲆⵠᐃⵠⲆ = function (p1567) {
        this.ⵠⵠⵠΔΔᐃΔⵠᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆΔⵠΔᐃⲆⲆᐃΔ = function (p1568) {
        this.ⲆⵠⲆΔⲆⲆᐃⲆⲆ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠΔⲆΔⵠⲆⲆ = function (p1569, p1570, p1571, p1572, p1573, p1574, p1575) {
        for (var v2495 = 1; p1575 > v2495;) {
          var v2496 = p1571 * v2495 % ΔⲆⵠⲆΔᐃΔ;
          var v2497 = ⵠΔⵠᐃᐃⲆΔ[v2496];
          if (v2497 < 0.1) {
            v2498 += 50;
            v2495 += 50;
          } else {
            var v2498 = Math.floor(v2497 * p1572 + p1573);
            if (v2495 > p1574 && v2495 < p1575) {
              var v2499 = Math.random() > 0.5 ? v3116 * -10 : v3116 * 10;
              var v2500 = v2498 * p1570;
              this.ⲆⲆⵠⵠⲆⵠⵠ[v2496] = Math.max(-25, Math.min(25, this.ⲆⲆⵠⵠⲆⵠⵠ[v2496] + v2499));
              this.ⲆⲆⵠᐃⵠⲆⲆ[v2496] = Math.max(-8, Math.min(8, this.ⲆⲆⵠᐃⵠⲆⲆ[v2496] + v2499));
              if (v2500 > 0) {
                v419.beginPath();
                v419.arc(v2495 + v2885.ⲆΔⵠ.x + this.ⲆⲆⵠᐃⵠⲆⲆ[v2496], p1569 + this.ⲆⲆⵠⵠⲆⵠⵠ[v2496] - 20, v2500, 0, Math.PI * 2);
                if (v2884.transition) {
                  var v2501 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
                  v419.fillStyle = f420(83, 156, 160, 236, 247, 249, v2501);
                } else {
                  v419.fillStyle = v624.ⵠⲆⲆⲆⲆᐃᐃ[v2884.time];
                }
                v419.fill();
              }
            }
            v2495 += v2498 * 2;
          }
        }
      };
      this.ᐃⵠⵠΔⲆᐃⵠ = function (p1576, p1577, p1578, p1579, p1580, p1581, p1582) {
        for (var v2502 = 1; p1582 > v2502;) {
          var v2503 = p1578 * v2502 % ΔⲆⵠⲆΔᐃΔ;
          var v2504 = ⵠΔⵠᐃᐃⲆΔ[v2503];
          if (v2504 < 0.1) {
            v2505 += 50;
            v2502 += 50;
          } else {
            var v2505 = Math.floor(p1579 * v2504 + p1580);
            if (v2502 > p1581 && v2502 < p1582) {
              var v2506 = Math.random() > 0.5 ? v3116 * -10 : v3116 * 10;
              var v2507 = v2505 * p1577;
              this.ⲆΔᐃΔⲆ[v2503] = Math.max(-25, Math.min(25, this.ⲆΔᐃΔⲆ[v2503] + v2506));
              this.ⲆΔⵠⵠⲆ[v2503] = Math.max(-8, Math.min(8, this.ⲆΔⵠⵠⲆ[v2503] + v2506));
              if (v2507 > 0) {
                v419.beginPath();
                v419.arc(p1576 + this.ⲆΔᐃΔⲆ[v2503] - 20, v2502 + v2885.ⲆΔⵠ.y + this.ⲆΔⵠⵠⲆ[v2503], v2507, 0, Math.PI * 2);
                if (v2884.transition) {
                  var v2508 = v2884.time ? 1 - v2884.ΔⲆᐃⲆ.ⵠᐃᐃ : v2884.ΔⲆᐃⲆ.ⵠᐃᐃ;
                  v419.fillStyle = f420(83, 156, 160, 236, 247, 249, v2508);
                } else {
                  v419.fillStyle = v624.ⵠⲆⲆⲆⲆᐃᐃ[v2884.time];
                }
                v419.fill();
              }
            }
            v2502 += v2505 * 2;
          }
        }
      };
      this.ᐃᐃᐃⲆᐃᐃΔⲆⲆ = function (p1583, p1584, p1585, p1586, p1587, p1588) {
        var v2509;
        p1587 -= 30;
        p1588 += 30;
        if ((v2509 = -(p1585 - 0 - p1586 - 2) / 200) === 0) {
          this.ᐃᐃΔⲆⵠⲆΔ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2509);
        this.ⵠΔⲆΔⵠⲆⲆ(p1585, v2509, this.ΔᐃΔᐃⵠᐃⵠ, 18, 16, p1587, p1588);
        v419.globalAlpha = 1;
        if ((v2509 = -(p1583 - 250 - p1586 + 500) / 150) === 0) {
          this.ΔΔⲆⵠᐃⵠᐃ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2509);
        this.ⵠΔⲆΔⵠⲆⲆ(p1583, v2509, this.seed, 12, 10, p1587, p1588);
        v419.globalAlpha = 1;
        if (p1584 !== -1) {
          if ((v2509 = -(p1584 - 350 - p1586 + 698) / 100) <= 0.01) {
            this.ⵠᐃΔΔΔΔⵠ();
          }
          v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2509);
          this.ⵠΔⲆΔⵠⲆⲆ(p1584, v2509, this.ΔⵠᐃᐃΔⲆᐃ, 6, 6, p1587, p1588);
          v419.globalAlpha = 1;
        }
      };
      this.ΔΔⵠΔΔΔⵠΔᐃ = function (p1589, p1590, p1591, p1592, p1593, p1594) {
        var v2510;
        p1593 -= 30;
        p1594 += 30;
        if ((v2510 = -(-p1591 + 0 + p1592 + 2) / 200) === 0) {
          this.ᐃᐃΔⲆⵠⲆΔ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2510);
        this.ⵠΔⲆΔⵠⲆⲆ(p1591, v2510, this.ΔᐃΔᐃⵠᐃⵠ, 18, 16, p1593, p1594);
        v419.globalAlpha = 1;
        if ((v2510 = -(-p1589 + 250 + p1592) / 150) === 0) {
          this.ΔΔⲆⵠᐃⵠᐃ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2510);
        this.ⵠΔⲆΔⵠⲆⲆ(p1589, v2510, this.seed, 12, 10, p1593, p1594);
        v419.globalAlpha = 1;
        if (p1590 !== -1) {
          if ((v2510 = -(-p1590 + 350 + p1592) / 100) <= 0.01) {
            this.ⵠᐃΔΔΔΔⵠ();
          }
          v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2510);
          this.ⵠΔⲆΔⵠⲆⲆ(p1590, v2510, this.ΔⵠᐃᐃΔⲆᐃ, 6, 6, p1593, p1594);
          v419.globalAlpha = 1;
        }
      };
      this.ᐃΔᐃⵠᐃⲆⲆⲆⲆ = function (p1595, p1596, p1597, p1598, p1599, p1600) {
        var v2511;
        p1599 -= 30;
        p1600 += 30;
        if ((v2511 = -(-p1597 + 0 + p1598 + 2) / 200) === 0) {
          this.ᐃᐃΔⲆⵠⲆΔ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2511);
        this.ᐃⵠⵠΔⲆᐃⵠ(p1597, v2511, this.ΔᐃΔᐃⵠᐃⵠ, 18, 16, p1599, p1600);
        v419.globalAlpha = 1;
        if ((v2511 = -(-p1595 + 250 + p1598) / 150) === 0) {
          this.ΔΔⲆⵠᐃⵠᐃ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2511);
        this.ᐃⵠⵠΔⲆᐃⵠ(p1595, v2511, this.seed, 12, 10, p1599, p1600);
        v419.globalAlpha = 1;
        if (p1596 !== -1) {
          if ((v2511 = -(-p1596 + 350 + p1598) / 100) <= 0.01) {
            this.ⵠᐃΔΔΔΔⵠ();
          }
          v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2511);
          this.ᐃⵠⵠΔⲆᐃⵠ(p1596, v2511, this.ΔⵠᐃᐃΔⲆᐃ, 6, 6, p1599, p1600);
          v419.globalAlpha = 1;
        }
      };
      this.ⵠⵠᐃΔᐃⵠΔΔᐃ = function (p1601, p1602, p1603, p1604, p1605, p1606) {
        p1605 -= 30;
        p1606 += 30;
        if ((v2512 = -(p1603 - 0 - p1604 - 2) / 200) === 0) {
          this.ᐃᐃΔⲆⵠⲆΔ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2512);
        this.ᐃⵠⵠΔⲆᐃⵠ(p1603, v2512, this.ΔᐃΔᐃⵠᐃⵠ, 18, 16, p1605, p1606);
        v419.globalAlpha = 1;
        var v2512 = -(p1601 - 250 - p1604 + 500) / 150;
        if (v2512 === 0) {
          this.ΔΔⲆⵠᐃⵠᐃ();
        }
        v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2512);
        this.ᐃⵠⵠΔⲆᐃⵠ(p1601, v2512, this.seed, 12, 10, p1605, p1606);
        v419.globalAlpha = 1;
        if (p1602 !== -1) {
          if ((v2512 = -(p1602 - 350 - p1604 + 698) / 100) <= 0.01) {
            this.ⵠᐃΔΔΔΔⵠ();
          }
          v419.globalAlpha = ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(v2512);
          this.ᐃⵠⵠΔⲆᐃⵠ(p1602, v2512, this.ΔⵠᐃᐃΔⲆᐃ, 6, 6, p1605, p1606);
          v419.globalAlpha = 1;
        }
      };
      this.w1 = {
        r: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ΔⵠⵠⲆΔᐃᐃ, 0, 10, 0, 0, 200),
        ⵠⲆΔⵠ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ΔΔΔⵠⵠⵠΔ, 0, 10, 200, 200, 0)
      };
      this.w2 = {
        r: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⵠⲆⵠΔᐃⲆᐃ, 0, 10, 0, 0, 150),
        ⵠⲆΔⵠ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆⲆⲆᐃⲆ, 0, 10, 150, 150, 0)
      };
      this.w3 = {
        r: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ᐃᐃᐃⲆⵠⲆᐃ, 0, 10, 0, 0, 100),
        ⵠⲆΔⵠ: new ⵠⲆⲆ.ⵠᐃⵠᐃΔ(ⵠⲆⲆ.ⲆⲆⲆᐃⲆ, 0, 10, 100, 100, 0)
      };
      this.ⵠⲆⲆᐃⵠᐃⲆᐃᐃ = function (p1607) {
        if (p1607.r.ⵠⵠᐃⵠᐃ === p1607.r.x) {
          if (p1607.ⵠⲆΔⵠ.ⵠⵠᐃⵠᐃ === p1607.ⵠⲆΔⵠ.x) {
            return p1607.r;
          } else {
            return p1607.ⵠⲆΔⵠ;
          }
        } else {
          return p1607.r;
        }
      };
      this.Δᐃⵠ = function (p1608) {
        var v2513;
        if (p1608.r.ⵠⵠᐃⵠᐃ === p1608.r.x) {
          if (p1608.ⵠⲆΔⵠ.ⵠⵠᐃⵠᐃ === p1608.ⵠⲆΔⵠ.x) {
            p1608.r.ⵠᐃⲆΔⲆⲆᐃ();
            p1608.ⵠⲆΔⵠ.ⵠᐃⲆΔⲆⲆᐃ();
            v2513 = p1608.r;
          } else {
            v2513 = p1608.ⵠⲆΔⵠ;
          }
        } else {
          v2513 = p1608.r;
        }
        v2513.ⲆΔⵠΔⵠⲆΔ(v2513.ⵠⵠᐃⵠᐃ);
        return v2513;
      };
      this.ⲆΔᐃΔⲆ = [];
      this.ⲆΔⵠⵠⲆ = [];
      this.ⲆⲆⵠⵠⲆⵠⵠ = [];
      this.ⲆⲆⵠᐃⵠⲆⲆ = [];
      this.ⵠⵠᐃΔⵠ = function () {
        for (var v2514 = 0; ΔⲆⵠⲆΔᐃΔ > v2514; v2514++) {
          this.ⲆΔᐃΔⲆ[v2514] = Math.floor(ⵠΔⵠᐃᐃⲆΔ[v2514] * 25);
          this.ⲆΔⵠⵠⲆ[v2514] = Math.floor(ⵠΔⵠᐃᐃⲆΔ[v2514] * 8);
          this.ⲆⲆⵠⵠⲆⵠⵠ[v2514] = Math.floor(ⵠΔⵠᐃᐃⲆΔ[v2514] * 25);
          this.ⲆⲆⵠᐃⵠⲆⲆ[v2514] = Math.floor(ⵠΔⵠᐃᐃⲆΔ[v2514] * 8);
        }
        this.w1.r.x = this.w1.r.ⵠⵠᐃⵠᐃ;
        this.w2.r.ⵠⵠⲆⵠⵠ = 3.5;
        this.w3.r.ⵠⵠⲆⵠⵠ = 2;
      };
      this.ⵠⵠᐃΔⵠ();
    }
    this.ΔᐃⵠⲆΔᐃⵠ = 196;
    this.ᐃᐃⲆᐃᐃᐃΔ = 54;
    this.ΔᐃⵠⲆΔᐃⵠ;
    this.ᐃᐃⲆᐃᐃᐃΔ;
    this.ΔⵠⵠⲆ = {
      max: 10,
      ⲆⲆᐃⵠⲆⲆⵠ: 0,
      ⵠᐃᐃΔⵠ: 0,
      ᐃⲆⵠᐃ: [],
      ΔᐃΔΔⲆ: [],
      ⵠⵠⵠᐃΔΔΔ: function (p1609, p1610) {
        if (p1609 === 1) {
          this.ⵠᐃᐃΔⵠ = 6;
        }
        this.ⲆⲆᐃⵠⲆⲆⵠ += p1610;
        this.max = 10 + this.ⲆⲆᐃⵠⲆⲆⵠ + this.ⵠᐃᐃΔⵠ;
      },
      ⵠᐃᐃᐃⵠⲆᐃ: {
        item: -1,
        Δᐃ: null,
        ⲆⲆΔΔᐃⵠⲆ: 0,
        ⵠΔⲆΔΔΔᐃ: 0,
        ⵠⵠⲆᐃⲆ: -1,
        ⵠⵠᐃΔΔ: -1,
        ⲆⲆⲆⲆⵠ: function (p1611) {
          if (!!this.ⲆⲆΔΔᐃⵠⲆ && (p1611.x !== this.ⵠⵠⲆᐃⲆ || p1611.y !== this.ⵠⵠᐃΔΔ)) {
            this.ⵠΔⲆΔΔΔᐃ = 1;
          }
        },
        start: function (p1612, p1613) {
          this.ⵠⵠⲆᐃⲆ = p1613.x;
          this.ⵠⵠᐃΔΔ = p1613.y;
          this.item = p1612;
          this.Δᐃ = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ[p1612].info.Δᐃ[2];
          this.ⲆⲆΔΔᐃⵠⲆ = 1;
        },
        stop: function () {
          this.ⲆⲆΔΔᐃⵠⲆ = 0;
          this.ⵠΔⲆΔΔΔᐃ = 0;
          this.ⵠⵠⲆᐃⲆ = -1;
          this.ⵠⵠᐃΔΔ = -1;
        },
        release: function () {
          var v2515 = -1;
          var v2516 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ;
          var v2517 = 0;
          if (this.ⲆⲆΔΔᐃⵠⲆ && this.ⵠΔⲆΔΔΔᐃ) {
            for (var v2518 = 0; v2518 < v2516.length; v2518++) {
              if (v2516[v2518].info.state === 1) {
                v2515 = v2518;
                break;
              }
            }
            if (v2515 !== -1 && v2515 !== this.item && v2516[this.item]) {
              v2517 = 1;
              var v2519 = v2516[v2515];
              v2516[v2515] = v2516[this.item];
              v2516[this.item] = v2519;
              v3081.ΔᐃΔⵠᐃⲆⵠ();
            }
          }
          this.stop();
          return v2517;
        },
        ᐃᐃΔⵠ: function (p1614, p1615) {
          if (this.ⲆⲆΔΔᐃⵠⲆ && this.ⵠΔⲆΔΔΔᐃ) {
            f304(v419, this.Δᐃ, Math.floor(p1614 - this.Δᐃ.width / 2), Math.floor(p1615 - this.Δᐃ.height / 2));
          }
        }
      },
      ΔⵠⲆΔᐃⵠⵠⲆⵠ: function (p1616) {
        for (v2566 = 0; v2566 < p1616.length; v2566++) {
          if (this.ᐃⲆⵠᐃ[p1616[v2566][0]] == p1616[v2566][1]) {
            return vVV30;
          }
        }
        return false;
      },
      ΔⵠᐃⲆⵠ: function (p1617) {
        for (var v2520 = 0; v2520 < this.ΔᐃΔΔⲆ.length; v2520++) {
          if (this.ΔᐃΔΔⲆ[v2520].id == p1617) {
            return v2520;
          }
        }
        return -1;
      },
      ⵠΔⵠⲆⵠᐃΔ: function (p1618, p1619) {
        this.ᐃⲆⵠᐃ[p1618] = 0;
        this.ΔᐃΔΔⲆ.splice(p1619, 1);
        v3081.ΔᐃΔⵠᐃⲆⵠ();
      },
      ⲆᐃΔᐃⲆⵠⵠ: function (p1620, p1621, p1622) {
        ᐃⲆⲆ = true;
        this.ᐃⲆⵠᐃ[p1620] = Math.max(0, this.ᐃⲆⵠᐃ[p1620] - p1621);
        if (!this.ᐃⲆⵠᐃ[p1620] && p1622 >= 0) {
          this.ⵠΔⵠⲆⵠᐃΔ(p1620, p1622);
        }
      }
    };
    this.ΔᐃᐃΔⵠΔᐃ = {
      enabled: false,
      translate: {
        y: 0,
        x: 0
      },
      ᐃᐃⲆⵠⲆⲆⵠ: function () {
        if (v2884.mode == 1 && !v2885.ⲆⵠΔⵠᐃⲆΔ) {
          v2885.ΔᐃᐃΔⵠΔᐃ.enabled = !v2885.ΔᐃᐃΔⵠΔᐃ.enabled;
          if (v2885.ΔᐃᐃΔⵠΔᐃ.enabled) {
            v3081.options.ⲆΔⲆΔⲆΔⵠ.display = "inline-block";
          } else {
            v3081.options.ⲆΔⲆΔⲆΔⵠ.display = "none";
          }
        }
      }
    };
    v3081.options.ⲆΔⲆΔⲆΔⵠ.display = "none";
    this.ᐃᐃⲆᐃⲆ = {
      enabled: vVVVV316,
      translate: {
        x: 0,
        y: 0
      },
      ᐃΔᐃᐃⲆ: 0,
      ᐃᐃⲆⵠⲆⲆⵠ: function () {
        v2885.ᐃᐃⲆᐃⲆ.enabled = !v2885.ᐃᐃⲆᐃⲆ.enabled;
        if (v2885.ᐃᐃⲆᐃⲆ.enabled) {
          v3081.options.ᐃΔᐃΔᐃⲆⵠ.display = "inline-block";
        } else {
          v3081.options.ᐃΔᐃΔᐃⲆⵠ.display = "none";
        }
      },
      ᐃⲆⲆ: function () {
        if (!!this.enabled && !(v2885.ⲆΔⲆΔ.id >= 0) && !v3081.ⵠᐃΔᐃ.open) {
          this.ᐃΔᐃᐃⲆ += v3116;
          if (this.ᐃΔᐃᐃⲆ > 2) {
            this.ᐃΔᐃᐃⲆ = 0;
            if (v2885.ᐃⲆⵠΔ.ΔᐃⲆ < 0.35) {
              if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[201]) {
                v2887.ⵠΔᐃⲆⲆ(201, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(201));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[356]) {
                v2887.ⵠΔᐃⲆⲆ(356, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(356));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[294]) {
                v2887.ⵠΔᐃⲆⲆ(294, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(294));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[298]) {
                v2887.ⵠΔᐃⲆⲆ(298, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(298));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[291]) {
                v2887.ⵠΔᐃⲆⲆ(291, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(291));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[317]) {
                v2887.ⵠΔᐃⲆⲆ(317, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(317));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[315]) {
                v2887.ⵠΔᐃⲆⲆ(315, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(315));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[319]) {
                v2887.ⵠΔᐃⲆⲆ(319, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(319));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[236]) {
                v2887.ⵠΔᐃⲆⲆ(236, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(236));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[208]) {
                v2887.ⵠΔᐃⲆⲆ(208, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(208));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[231]) {
                v2887.ⵠΔᐃⲆⲆ(231, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(231));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[226]) {
                v2887.ⵠΔᐃⲆⲆ(226, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(226));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[238]) {
                v2887.ⵠΔᐃⲆⲆ(238, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(238));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[229]) {
                v2887.ⵠΔᐃⲆⲆ(229, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(229));
              } else if (v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[299]) {
                v2887.ⵠΔᐃⲆⲆ(299, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(299));
              }
            } else if (v2885.ᐃⲆⵠΔ.Δᐃⵠ < 0.35 && v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[218]) {
              v2887.ⵠΔᐃⲆⲆ(218, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(218));
            }
          }
        }
      }
    };
    v3081.options.ᐃΔᐃΔᐃⲆⵠ.display = "none";
    this.ⲆΔⲆΔ = {
      id: -1,
      ⵠⵠᐃⲆ: -1,
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1, 1),
      ⲆΔⲆΔᐃ: vV312,
      ⲆᐃⲆⲆ: -1,
      mode: 0,
      label: [],
      ᐃⲆΔⵠᐃ: [],
      ΔⵠⲆⲆⵠ: false,
      ⲆⵠΔᐃΔ: false,
      ᐃⵠΔΔᐃᐃᐃ: false,
      ΔⲆᐃⵠᐃ: vVV312,
      ⲆⵠⵠⵠΔⲆⲆⲆⲆ: function () {
        this.mode = this.mode === 0 ? 1 : 0;
      },
      ᐃⵠⲆᐃΔⲆⵠᐃΔ: function (p1623) {
        this.ΔⵠⲆⲆⵠ = p1623;
        var v2521 = v3081.ⵠᐃΔᐃ;
        if (v2521.open) {
          v2521.ᐃΔⲆⲆᐃᐃᐃ(v2521.button);
        }
        this.ᐃⲆⲆ();
      },
      ⵠⲆΔⲆⵠΔΔⲆⵠ: function (p1624) {
        var v2522 = v768[p1624];
        this.id = p1624;
        this.ⲆΔⲆΔᐃ = vV30;
        v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
        this.timeout.ᐃᐃⵠⵠⵠⲆᐃ = v2522.time * 8;
        this.ⵠⵠᐃⲆ = v2522.ⵠⵠᐃⲆ;
      },
      ΔΔᐃⵠⲆᐃᐃⲆⲆ: function (p1625) {
        var v2523 = v768[p1625];
        this.id = p1625;
        this.ⲆΔⲆΔᐃ = true;
        var v2524 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
        if (v2524 && v2524.right == 46) {
          this.timeout.ᐃᐃⵠⵠⵠⲆᐃ = v2523.time * 3;
        } else {
          this.timeout.ᐃᐃⵠⵠⵠⲆᐃ = v2523.time;
        }
        this.ⵠⵠᐃⲆ = v2523.ⵠⵠᐃⲆ;
        for (var v2525 = 0; v2525 < v2523.r.length; v2525++) {
          var v2526 = v2523.r[v2525];
          v2885.ΔⵠⵠⲆ.ⲆᐃΔᐃⲆⵠⵠ(v2526[0], v2526[1], v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(v2526[0]));
        }
        v3081.ΔᐃΔⵠᐃⲆⵠ();
      },
      ᐃⲆⲆ: function () {
        this.ᐃⲆΔⵠᐃ = [];
        if (v3081.ΔΔⵠΔΔ.ⲆΔⲆΔ === 1) {
          v3081.ΔΔⵠΔΔ.display = 0;
        }
        for (var v2527 in v768) {
          var v2528 = v768[v2527];
          if (v2528) {
            var vVV3052 = vV305;
            if (v2528.r) {
              for (var v2529 = 0; v2529 < v2528.r.length; v2529++) {
                if (v2885.ΔⵠⵠⲆ.max >= 16 && v2528.id === 47) {
                  vVV3052 = vV31;
                  break;
                }
                if (v2528.w > this.ΔⵠⲆⲆⵠ || v2528.f > this.ⲆⵠΔᐃΔ || v2528.ⲆⲆΔ > this.ᐃⵠΔΔᐃᐃᐃ || v2528.e > this.ΔⲆᐃⵠᐃ) {
                  vVV3052 = false;
                  break;
                }
                var v2530 = v2528.r[v2529];
                if (!v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[v2530[0]] || v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[v2530[0]] < v2530[1]) {
                  vVV3052 = false;
                  break;
                }
              }
              if (vVV3052) {
                this.ᐃⲆΔⵠᐃ.push(v3081.ⵠΔⵠ[v2528.id]);
              }
            }
          }
        }
        v3081.ΔΔⵠⵠⵠⲆᐃ();
        v3081.ᐃΔⲆⲆⵠⲆⲆ();
        v3081.ⵠⵠᐃⲆᐃⲆΔ();
        v3081.ᐃᐃᐃᐃΔΔΔ();
        v3081.ⵠⲆΔⵠΔΔⵠ();
        v3081.ⵠΔᐃⵠᐃᐃᐃ();
        v3081.sign.ᐃⵠΔⲆᐃⵠᐃ();
      },
      ⵠᐃⲆΔⲆⲆᐃ: function () {
        this.id = -1;
        this.ⲆΔⲆΔᐃ = vV314;
        this.timeout.ⵠᐃᐃ = 0;
        this.timeout.ⲆⲆΔ = false;
        this.ᐃⲆⲆ();
      }
    };
    this.ⵠᐃᐃⲆᐃⵠᐃ = {
      message: undefined,
      ᐃᐃΔⵠ: f405
    };
    this.alert = {
      timeout: new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVV3153, 1, 1, 0, 4, 0.3),
      text: "",
      label: null,
      ᐃᐃΔⵠ: f404,
      list: []
    };
    this.ⵠΔⵠΔⵠ = {
      ΔΔⵠ: document.createElement("canvas"),
      Ⲇᐃᐃᐃⵠ: [],
      ᐃⲆⲆ: vV304,
      translate: {
        y: 0,
        x: 0
      },
      sort: function () {
        var v2531 = [];
        for (var v2532 = v2884.ⵠⵠΔⵠ, v2533 = 0; v2533 < v2532.length; v2533++) {
          if (v2532[v2533].ⲆⵠΔⵠⲆ) {
            v2531.push({
              id: v2533,
              ΔⵠⲆⲆ: v2532[v2533].ⲆΔⲆᐃΔ
            });
          }
        }
        v2531.sort(function (p1626, p1627) {
          return p1627.ΔⵠⲆⲆ - p1626.ΔⵠⲆⲆ;
        });
        this.Ⲇᐃᐃᐃⵠ = [];
        for (v2533 = 0; v2533 < v2531.length && v2533 < 10; v2533++) {
          this.Ⲇᐃᐃᐃⵠ.push(v2531[v2533].id);
        }
        this.ᐃⲆⲆ = vVV3024;
      },
      ⵠⵠᐃΔⵠ: function (p1628) {
        for (var v2534 = v2884.ⵠⵠΔⵠ, v2535 = 0; v2535 < v2534.length; v2535++) {
          v2534[v2535].ⲆΔⲆᐃΔ = 0;
        }
        v2534[v2885.id].ⲆΔⲆᐃΔ = ⵠⲆⲆ.ΔᐃⵠᐃΔΔⵠ(p1628[1]);
        this.Ⲇᐃᐃᐃⵠ = [];
        for (v2535 = 2; v2535 < p1628.length; v2535 += 2) {
          this.Ⲇᐃᐃᐃⵠ.push(p1628[v2535]);
          v2534[p1628[v2535]].ⲆΔⲆᐃΔ = ⵠⲆⲆ.ΔᐃⵠᐃΔΔⵠ(p1628[v2535 + 1]);
        }
        this.ᐃⲆⲆ = true;
      }
    };
    this.ⵠΔⵠΔⵠ.ΔΔⵠ.width = v427 * 180;
    this.ⵠΔⵠΔⵠ.ΔΔⵠ.height = v427 * 300;
    this.ⵠΔⵠΔⵠ.ᐃ = this.ⵠΔⵠΔⵠ.ΔΔⵠ.getContext("2d");
    this.Ⲇⵠⵠⵠⵠ = {
      open: false,
      input: document.getElementById("commandInput"),
      ΔⲆᐃⵠΔᐃᐃ: document.getElementById("commandsBox"),
      style: document.getElementById("commandMainBox").style,
      ΔⵠΔⲆⵠⵠⵠᐃⲆ: function (p1629) {
        this.ΔⲆᐃⵠΔᐃᐃ.innerHTML += p1629;
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v420 / 2 - 300) + "px";
        this.style.top = Math.floor(v421 / 2 - 250) + "px";
      },
      ΔⲆΔΔⲆⵠⵠᐃᐃ: function () {
        this.ΔⲆᐃⵠΔᐃᐃ.innerHTML = "";
      },
      ⵠΔⵠᐃΔ: function () {
        this.open = false;
        this.style.display = "none";
      },
      ⲆⵠⲆΔᐃΔⲆ: function (p1630) {
        var v2536 = "<table class=\"tableList\">";
        for (var v2537 = 0; v2537 < p1630.length; v2537++) {
          if (v2537 % 3 == 0) {
            v2536 += "<tr>";
          }
          v2536 += "<td class=\"tableList\">" + p1630[v2537] + "</td>";
          if ((v2537 + 1) % 3 === 0 || v2537 + 1 === p1630.length) {
            v2536 += "</tr>";
          }
        }
        return v2536 += "</table>";
      },
      ⵠⲆᐃⲆⲆ: function (p1631, p1632, p1633, p1634) {
        var v2538 = "<div class=commandWritten>" + (p1631 = p1631 || "");
        v2538 += (p1632 = p1632 || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>";
        v2538 += (p1633 = p1633 || "") + "</div>" + (p1634 = p1634 || "") + "</div>";
        this.ΔⵠΔⲆⵠⵠⵠᐃⲆ(v2538);
        this.ᐃᐃΔⲆᐃᐃⵠΔΔ();
      },
      ᐃᐃΔⲆᐃᐃⵠΔΔ: function () {
        this.ΔⲆᐃⵠΔᐃᐃ.scrollTop = this.ΔⲆᐃⵠΔᐃᐃ.scrollHeight;
      },
      ΔᐃΔΔᐃⲆⵠ: function (p1635) {
        switch (p1635) {
          case "clean":
            this.ΔⲆΔΔⲆⵠⵠᐃᐃ();
            return true;
          case "list":
            var v2539 = "";
            const v2540 = vWindow.document.createElement("div");
            for (var v2541 = v2884.ⵠⵠΔⵠ, v2542 = 0; v2542 < v2541.length; v2542++) {
              var v2543 = v2541[v2542];
              if (v2543.ⲆⵠΔⵠⲆ) {
                v2540.innerText = v2543.ΔΔΔⲆⲆ;
                v2539 += v2540.innerHTML + " <span style=\"color:green\">#" + v2542 + "</span><br />";
              }
            }
            this.ⵠⲆᐃⲆⲆ("list", 1, "List all connected players", v2539);
            return true;
          case "weapon-list":
            this.ⵠⲆᐃⲆⲆ("Weapons", 1, "List all weapons in the game", this.ⲆⵠⲆΔᐃΔⲆ(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "sword_copper", "sword_iron", "sword_topaz", "sword_sapphire", "sword_jade", "sword_ruby", "sword_emerald", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "copper_spear", "iron_spear", "topaz_spear", "sapphire_spear", "jade_spear", "ruby_spear", "emerald_spear", "wood_bow", "wood_arrow", "wood_axe", "stone_axe", "gold_axe", "diamond_axe", "amethyst_axe", "reidite_axe", "emerald_axe", "copper_axe", "iron_axe", "topaz_axe", "sapphire_axe", "jade_axe", "ruby_axe", "coal_axe", "aquamarine_axe"]));
            return vVV303;
          case "tool-list":
            this.ⵠⲆᐃⲆⲆ("Tools", 1, "List all tools in the game", this.ⲆⵠⲆΔᐃΔⲆ(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "pick_copper", "pick_iron", "pick_topaz", "pick_sapphire", "pick_jade", "pick_ruby", "pick_emerald", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "hammer_copper", "hammer_iron", "hammer_topaz", "hammer_sapphire", "hammer_jade", "hammer_ruby", "hammer_emerald", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "shovel_reidite", "shovel_copper", "shovel_iron", "shovel_topaz", "shovel_sapphire", "shovel_jade", "shovel_ruby", "shovel_emerald", "pitchfork", "pitchfork2", "spanner", "book"]));
            return true;
          case "survival-list":
            this.ⵠⲆᐃⲆⲆ("Survival Items", 1, "List all survival items in the game", this.ⲆⵠⲆΔᐃΔⲆ(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite", "extractor_emerald", "extractor_copper", "extractor_iron", "extractor_topaz", "extractor_sapphire", "extractor_jade", "extractor_ruby", "extractor_coal", "extractor_aquamarine"]));
            return vVVV3024;
          case "resource-list":
            this.ⵠⲆᐃⲆⲆ("Resources", 1, "List all resources in the game", this.ⲆⵠⲆΔᐃΔⲆ(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "copper", "iron", "topaz", "sapphire", "jade", "ruby", "emerald", "coal", "aquamarine", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
            return true;
          case "food-list":
            this.ⵠⲆᐃⲆⲆ("Food", 1, "List all food in the game", this.ⲆⵠⲆΔᐃΔⲆ(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus", "banana"]));
            return vV303;
          case "hat-list":
            this.ⵠⲆᐃⲆⲆ("Hats", 1, "List all hats in the game", this.ⲆⵠⲆΔᐃΔⲆ(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "emerald_helmet", "copper_helmet", "iron_helmet", "topaz_helmet", "sapphire_helmet", "jade_helmet", "ruby_helmet", "coal_helmet", "aquamarine_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
            return vVV302;
          case "building-list":
            this.ⵠⲆᐃⲆⲆ("Buildings", 1, "List all buildings in the game", this.ⲆⵠⲆΔᐃΔⲆ(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
            return vVVVV30;
          case "biome-list":
            this.ⵠⲆᐃⲆⲆ("Biomes list", 1, "List all available biomes in the game", this.ⲆⵠⲆΔᐃΔⲆ(["forest", "winter", "lava", "sea", "beach", "island", "dragon", "jungle"]));
            return vVVV30;
          case "help-config":
            this.ⵠⲆᐃⲆⲆ("Help Configuration", 1, "Learn how to build your customized map", "<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.");
            return true;
          case "pos":
            v2541 = v2884.ᐃᐃΔ[0];
            v2542 = 0;
            for (; v2542 < v2541.length; v2542++) {
              var v2544 = v2541[v2542];
              if (v2544.ᐃΔⲆⵠ === v2885.id) {
                this.ⵠⲆᐃⲆⲆ("pos", 1, "Your position is " + Math.floor(v2544.x / 100) + ":" + Math.floor(v2544.y / 100));
                return vVV3024;
              }
            }
            break;
          case "help-admin":
            this.ⵠⲆᐃⲆⲆ("help-admin", 1, "List all available commands for admin only", this.ⲆⵠⲆΔᐃΔⲆ(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "dst | disable-steal", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
            return vV305;
          case "help":
            this.ⵠⲆᐃⲆⲆ("help", 1, "List all available commands", this.ⲆⵠⲆΔᐃΔⲆ(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
            return vV306;
        }
        return false;
      },
      ⲆⲆΔΔᐃⵠΔⵠΔ: function () {
        if (!this.open) {
          this.open = vVV3024;
          this.style.display = "inline-block";
          this.input.focus();
        }
      },
      ⲆᐃᐃⵠⵠΔⵠ: function () {
        var v2545 = this.input.value;
        if (v2545 && v2545.length > 0) {
          if (!this.ΔᐃΔΔᐃⲆⵠ(v2545)) {
            v2887.ΔⲆⲆᐃⵠᐃΔΔᐃ(this.input.value);
          }
          this.input.value = "";
        }
      }
    };
    this.ΔΔᐃᐃᐃ = {
      open: false,
      input: document.getElementById("chat_input"),
      style: document.getElementById("chat_block").style,
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v420 / 2 - 150) + "px";
        this.style.top = Math.floor(v421 / 2 + 80) + "px";
      },
      ⵠΔⵠᐃΔ: function () {
        this.open = false;
        this.style.display = "none";
        this.input.value = "";
      },
      prefix: "!",
      cmd: {
        hud: function (p1636) {
          if (p1636 === "off") {
            var v2546 = "Enter \"!hud\" without the quotes to restore the HUD";
            if (v2885.alert.text) {
              v2885.alert.list.push(v2546);
            } else {
              v2885.alert.text = v2546;
            }
            v3081.ᐃⵠⵠᐃΔⲆⲆ = 0;
          } else {
            v3081.ᐃⵠⵠᐃΔⲆⲆ = 1;
          }
        }
      },
      ΔᐃΔΔᐃⲆⵠ: function (p1637) {
        if (p1637.charAt(0) == this.prefix) {
          var v2547 = "";
          var v2548 = "";
          for (var v2549 = 1; v2549 < p1637.length && p1637.charAt(v2549) != " "; v2549++) {
            v2547 += p1637.charAt(v2549);
          }
          for (v2549++; v2549 < p1637.length; v2549++) {
            v2548 += p1637.charAt(v2549);
          }
          var v2550 = this.cmd[v2547];
          if (v2550) {
            v2550(v2548);
          }
          return true;
        }
        return false;
      },
      ⲆΔⲆΔⲆ: function () {
        if (this.open) {
          this.open = false;
          this.style.display = "none";
          var v2551 = this.input.value;
          if (v2551) {
            if (!this.ΔᐃΔΔᐃⲆⵠ(v2551)) {
              v2887.ᐃᐃⵠΔᐃⲆⲆᐃⲆ(this.input.value);
            }
            this.input.value = "";
          }
        } else {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      }
    };
    this.ⵠᐃⵠⵠⲆⵠᐃ = {
      ⵠⵠᐃᐃΔ: [],
      ᐃⲆⲆ: function (p1638) {
        p1638.y += v3116 * 80 * p1638.ΔⵠⲆⲆ;
        p1638.x += v3116 * 80 * p1638.c;
        p1638.ᐃΔΔΔᐃ -= v3116 / 6;
        if (p1638.ᐃΔΔΔᐃ > 0.2) {
          p1638.alpha = Math.min(p1638.alpha + v3116 * 3, 1);
        } else {
          p1638.alpha = Math.max(p1638.alpha - v3116 * 1, 0);
        }
      },
      add: function (p1639) {
        var v2552 = Math.floor(Math.min(v624.ⵠᐃⲆⲆΔΔᐃ * (v420 / 1366), v624.ⵠᐃⲆⲆΔΔᐃ + 10) * Math.max(Math.min(v2884.ⵠᐃΔⲆⲆ + 1000, 3000) / 3000, 0));
        if (this.ⵠⵠᐃᐃΔ.length < v2552) {
          var v2553 = Math.floor(Math.random() * v624.ⲆᐃΔᐃⵠΔⵠ);
          var v2554 = -v2885.ⲆΔⵠ.x + Math.floor(Math.random() * v2885.ⲆΔⵠ.w);
          var v2555 = -v2885.ⲆΔⵠ.y + Math.floor(Math.random() * v2885.ⲆΔⵠ.ΔᐃⲆ);
          var v2556 = Math.random(Math.PI);
          this.ⵠⵠᐃᐃΔ.push(new f440(v2553, v2554, v2555, v2556));
        }
      }
    };
    this.ⲆⵠΔⵠΔⲆⵠ = 0;
    this.ΔⵠΔⲆⲆ = 0;
    this.ⲆⵠᐃⵠΔ = {
      ⵠⵠᐃᐃΔ: [],
      ⲆⲆᐃⲆᐃ: 0,
      ᐃΔⲆⲆᐃ: 0,
      ᐃⲆⲆ: function (p1640) {
        p1640.y += v3116 * (200 + this.ᐃΔⲆⲆᐃ * 800) * p1640.ΔⵠⲆⲆ;
        p1640.x += v3116 * (200 + this.ᐃΔⲆⲆᐃ * 800) * p1640.c;
        p1640.ᐃΔΔΔᐃ -= v3116 / 6;
        if (p1640.ᐃΔΔΔᐃ > 0.2) {
          p1640.alpha = Math.min(p1640.alpha + v3116 * 3, 1);
        } else {
          p1640.alpha = Math.max(p1640.alpha - v3116 * 1, 0);
        }
      },
      add: function (p1641) {
        var v2557 = Math.floor(Math.min((this.ᐃΔⲆⲆᐃ + 0.1) * v624.ᐃⲆⲆⵠⵠⲆΔ * (v420 / 1366), (this.ᐃΔⲆⲆᐃ + 0.1) * v624.ᐃⲆⲆⵠⵠⲆΔ + 10) * Math.max(Math.min(v2884.ⵠⵠⵠⵠⵠ + 1000, 3000) / 3000, 0));
        if (this.ⵠⵠᐃᐃΔ.length < v2557) {
          var v2558 = Math.floor(Math.random() * v624.ⲆᐃΔᐃⵠΔⵠ);
          var v2559 = -v2885.ⲆΔⵠ.x + Math.floor(Math.random() * v2885.ⲆΔⵠ.w);
          var v2560 = -v2885.ⲆΔⵠ.y + Math.floor(Math.random() * v2885.ⲆΔⵠ.ΔᐃⲆ);
          var v2561 = Math.random(Math.PI);
          if (v2885.ⲆⵠᐃⵠΔ.ⲆⲆᐃⲆᐃ !== 0) {
            v2559 -= v2885.ⲆΔⵠ.w / 2;
          }
          this.ⵠⵠᐃᐃΔ.push(new f440(v2558, v2559, v2560, v2561));
        }
      }
    };
    this.ᐃᐃΔΔⲆ = {
      ⵠⵠᐃᐃΔ: [],
      ⲆⲆᐃⲆᐃ: 0,
      ᐃΔⲆⲆᐃ: 0,
      ᐃⲆⲆ: function (p1642) {
        if (v3110.ⵠⲆΔⵠⵠⲆⲆ()) {
          p1642.y += v3116 * p1642.ⲆⵠΔⲆᐃ * (5.5 + this.ᐃΔⲆⲆᐃ * 10);
        } else {
          p1642.y += v3116 * p1642.ⲆⵠΔⲆᐃ * (5 + this.ᐃΔⲆⲆᐃ * 10);
        }
        p1642.ᐃΔΔΔᐃ -= v3116 / 2;
        if (v3110.ⵠⵠⲆᐃⲆⲆⵠ()) {
          p1642.x += v3116 * (100 + this.ᐃΔⲆⲆᐃ * 400);
        } else if (v3110.ⵠⲆⲆⵠᐃⵠⲆ()) {
          p1642.x -= v3116 * (130 - this.ᐃΔⲆⲆᐃ * 400);
        } else {
          p1642.x -= v3116 * (30 - this.ᐃΔⲆⲆᐃ * 400);
        }
        if (p1642.ᐃΔΔΔᐃ > 0.2) {
          p1642.alpha = Math.min(p1642.alpha + v3116 * 3, 1);
        } else {
          p1642.alpha = Math.max(p1642.alpha - v3116 * 5, 0);
        }
      },
      add: function (p1643) {
        var v2562 = Math.floor(Math.min((this.ᐃΔⲆⲆᐃ * 1.5 + 0.5) * v624.ΔᐃⲆΔᐃⵠⲆ * (v420 / 1366), (this.ᐃΔⲆⲆᐃ * 1.5 + 0.5) * v624.ΔᐃⲆΔᐃⵠⲆ + 10) * Math.max(Math.min(v2884.ⵠⵠΔⵠᐃ + 1000, 3000) / 3000, 0));
        if (this.ⵠⵠᐃᐃΔ.length < v2562) {
          var v2563 = Math.floor(Math.random() * v624.ᐃΔΔⵠΔΔᐃ);
          var v2564 = -v2885.ⲆΔⵠ.x + Math.floor(Math.random() * v2885.ⲆΔⵠ.w);
          var v2565 = -v2885.ⲆΔⵠ.y + Math.floor(Math.random() * 400 * v427 - v427 * 200);
          this.ⵠⵠᐃᐃΔ.push(new f440(v2563, v2564, v2565, 0));
        }
      }
    };
    this.ⲆⲆΔⵠ = [];
    for (var v2566 = 0; v2566 < 4; v2566++) {
      this.ⲆⲆΔⵠ.push(new f470());
    }
  }
  function f471() {
    Math.random();
    return "p";
  }
  function f472() {
    Math.random();
    return "t";
  }
  function f474() {
    Math.random();
    return "a";
  }
  function f474() {
    Math.random();
    return "a";
  }
  function f475() {
    Math.random();
    return "s";
  }
  function f476() {
    Math.random();
    return "i";
  }
  function f477() {
    Math.random();
    return "g";
  }
  function f478() {
    Math.random();
    return "d";
  }
  function f479() {
    Math.random();
    return "C";
  }
  ⲆᐃΔⵠⲆⲆᐃⲆᐃ = 1;
  setTimeout(function f480() {
    var v2567 = f468() + f474() + f472() + f476();
    var v2568 = function () {
      Math.random();
      return "W";
    }() + f466() + function () {
      Math.random();
      return "b";
    }() + function () {
      Math.random();
      return "S";
    }() + f464() + function () {
      Math.random();
      return "c";
    }() + (Math.random(), "k") + f466() + f472();
    if (vWindow[v2568].toString().indexOf(v2567) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    var v2569 = f475() + f466() + f468() + f478();
    var v2570 = f471() + f465() + f464() + f472() + f464() + f472() + (Math.random(), "y") + f471() + f466();
    if (vWindow[v2568][v2570][v2569].toString().indexOf(v2567) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    v2568 = f478() + f465() + f474() + function () {
      Math.random();
      return "w";
    }() + function () {
      Math.random();
      return "I";
    }() + (Math.random(), "m") + f474() + f477() + f466();
    v2569 = f479() + f474() + f468() + function () {
      Math.random();
      return "v";
    }() + f474() + f475() + function () {
      Math.random();
      return "R";
    }() + f466() + f468() + f478() + f466() + f465() + f476() + f468() + f477() + f479() + f464() + f468() + f472() + f466() + function () {
      Math.random();
      return "x";
    }() + f472() + function () {
      Math.random();
      return "2";
    }() + function () {
      Math.random();
      return "D";
    }();
    if (vWindow[v2569][v2570][v2568].toString().indexOf(v2567) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    setTimeout(f480, 100000);
  }, 100000);
  function f481() {
    ⵠⲆⲆ.ⲆΔⲆⵠⵠⲆΔ("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
  }
  function f482(p1644, p1645) {
    this.ΔΔⵠ = p1644;
    this.ᐃ = p1645;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ᐃⲆΔΔⲆᐃⲆ = "default";
      this.ᐃᐃΔⵠⵠᐃΔ = "pointer";
    } else {
      this.ᐃⲆΔΔⲆᐃⲆ = "url('img/cursor0.png'), default";
      this.ᐃᐃΔⵠⵠᐃΔ = "url('img/cursor1.png'), pointer";
    }
    var vThis = this;
    this.waiting = false;
    this.ΔⲆᐃⵠΔΔΔ = 0;
    this.ᐃΔΔⲆᐃᐃΔ = -1;
    this.ΔⵠᐃⵠⲆᐃΔ = {
      translate: {
        x: 0,
        y: 0
      },
      angle: 0,
      Δᐃ: ΔΔ[412],
      ᐃᐃΔⵠ: function () {
        this.angle += v3116 * 2;
        p1645.save();
        p1645.translate(this.translate.x + this.Δᐃ.width / 2, this.translate.y + this.Δᐃ.height / 2);
        p1645.rotate(this.angle);
        f304(p1645, this.Δᐃ, -this.Δᐃ.width / 2, -this.Δᐃ.height / 2);
        p1645.restore();
      }
    };
    this.ᐃⵠᐃⲆᐃⵠⲆ = {
      id: document.getElementById("langselect"),
      style: document.getElementById("langselect").style,
      translate: {
        y: 0,
        x: 0
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(this.translate.x) + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ᐃⵠⲆΔΔ = 0;
    this.ΔᐃΔΔⲆⵠⵠ = -1;
    this.ᐃᐃᐃⲆᐃⵠⵠ = vVVVVVUndefined132;
    this.ⲆᐃΔΔⲆⵠⵠ = "";
    this.ⵠⵠᐃΔⵠⵠⵠ = "";
    this.ⲆΔⵠΔᐃⲆᐃ = vVVVVUndefined823;
    this.ⵠⵠΔⵠⵠ = 0;
    this.ⵠⵠⵠⲆⲆⲆⲆ = -1;
    this.ᐃⵠᐃΔᐃⵠⵠ = vVVVUndefined82;
    this.ᐃᐃᐃᐃᐃΔⵠ = false;
    var v2571 = 225;
    if (v2571 > 0) {
      v2571 = 90;
    }
    this.ΔΔΔⵠᐃⵠΔ = 0;
    this.ΔⲆⵠΔⲆⵠᐃ = 0;
    this.ⲆΔᐃᐃΔΔⲆ = 0;
    this.ⵠⲆᐃⲆⵠⵠⲆ = 0;
    this.ᐃΔΔᐃⵠᐃⵠ = 0;
    this.time = 0;
    this.ⲆΔⲆᐃΔ = 0;
    this.ᐃΔΔΔΔΔΔ = 0;
    this.ΔᐃΔⵠⵠΔⲆ = 0;
    this.ΔⵠΔᐃⲆΔΔ = 0;
    this.ⵠⵠᐃΔᐃΔΔ = 0;
    this.ⵠⵠⲆᐃⵠⵠΔ = [];
    this.ⲆⲆⵠΔⲆⵠᐃ = -1;
    this.ΔΔⲆᐃⵠΔΔ = -1;
    this.ⲆⲆΔᐃⵠΔᐃ = -1;
    this.ⵠᐃᐃᐃΔⲆⲆ = vVVVUndefined82;
    this.ΔⵠΔⵠⲆΔᐃ = undefined;
    this.ⲆⵠⵠⲆⵠᐃᐃ = -1;
    this.ᐃᐃΔⵠⲆⲆⵠ = -1;
    this.ᐃⵠⵠⵠᐃᐃᐃ = -1;
    var v2572 = 60;
    function o(p1646, p1647, p1648, p1649, p1650) {
      var vThis2 = this;
      for (var v2573 = p1647 + 9, v2574 = 0, vP1649 = p1649, vP1647 = p1647; vP1647 < v2573; vP1647++) {
        vThis.buttons[vP1647].info.callback = f485;
        vThis.buttons[vP1647].info.ΔᐃⲆⲆⲆⲆΔⵠΔ = p1646;
      }
      function f484() {
        var v2575 = p1646[vP1649];
        v2883.ⵠⲆΔⲆᐃΔⵠ = f432(v2575.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, vVVUndefined13, 10, 8);
        if (vVVVVUndefined823 !== v2575.level) {
          v2883.ᐃΔᐃⲆⲆⵠⵠ = f432("Level " + v2575.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
        } else {
          v2883.ᐃΔᐃⲆⲆⵠⵠ = f432("by " + v2575.ᐃⲆΔ, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, vVVVVVUndefined132, 10, 8);
        }
      }
      function f485() {
        if (this.ΔⲆⲆⵠΔΔⵠ !== vP1649 && this.ΔⲆⲆⵠΔΔⵠ !== -1) {
          if (this.ⵠΔⵠⲆᐃⲆΔ > 0) {
            if (p1647 === ⵠΔⵠⲆᐃᐃⵠ) {
              f490(v2616, v2682, "none");
            } else {
              f490(v2617, v2682, "none");
            }
          } else if (p1647 === ⵠΔⵠⲆᐃᐃⵠ) {
            f490(v2616, v2683, "inline-block");
          } else {
            f490(v2617, v2683, "inline-block");
          }
          vP1649 = this.ΔⲆⲆⵠΔΔⵠ;
          p1648(this.ΔⲆⲆⵠΔΔⵠ);
          f484();
        }
      }
      this.ᐃΔᐃᐃᐃⵠΔ = function () {
        for (var vP16472 = p1647, v2576 = v2574 * 3; vP16472 < v2573 && v2576 < p1646.length; vP16472++, v2576++) {
          if (ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ !== p1646[v2576].ᐃⵠⵠ || p1650[v2576] !== 0) {
            vThis.buttons[vP16472].info.ΔⲆⲆⵠΔΔⵠ = v2576;
            for (var v2577 = 0; v2577 < 3; v2577++) {
              vThis.buttons[vP16472].info.Δᐃ[v2577] = ᐃᐃΔⲆⵠⵠᐃ[p1646[v2576].ᐃⵠⵠ][v2577];
              vThis.buttons[vP16472].info.active = v2683;
              vThis.buttons[vP16472].info.ⵠΔⵠⲆᐃⲆΔ = p1650[v2576];
            }
          } else {
            vThis.buttons[vP16472].info.ΔⲆⲆⵠΔΔⵠ = -1;
            vThis.buttons[vP16472].info.active = v2682;
          }
        }
        for (; v2573 > vP16472; vP16472++) {
          vThis.buttons[vP16472].info.ΔⲆⲆⵠΔΔⵠ = -1;
          vThis.buttons[vP16472].info.active = v2682;
        }
        f484();
      };
      vThis.buttons[v2573].info.callback = function () {
        if (v2574 > 0) {
          v2574--;
        }
        vThis2.ᐃΔᐃᐃᐃⵠΔ();
      };
      vThis.buttons[v2573 + 1].info.callback = function () {
        if (p1646.length > v2574 * 3 + 9) {
          v2574++;
        }
        vThis2.ᐃΔᐃᐃᐃⵠΔ();
      };
    }
    function r() {
      var vNumber = Number(Δⵠⵠᐃ.get("starve_crate"));
      var vNumber2 = Number(Δⵠⵠᐃ.get("starve_dead"));
      var vNumber3 = Number(Δⵠⵠᐃ.get("starve_book"));
      var vNumber4 = Number(Δⵠⵠᐃ.get("starve_bag"));
      var vNumber5 = Number(Δⵠⵠᐃ.get("starve_skin"));
      var vNumber6 = Number(Δⵠⵠᐃ.get("starve_accessory"));
      vThis.ⵠⲆⲆΔ = vNumber5 || 0;
      vThis.ⵠᐃⵠᐃᐃ = vNumber3 || 0;
      vThis.ΔⲆⵠᐃⲆ = vNumber || 1;
      vThis.ⲆⲆⵠΔΔ = vNumber6 || 0;
      vThis.ⵠᐃᐃΔⵠ = vNumber4 || 0;
      vThis.ⵠᐃΔΔΔ = vNumber2 || 0;
    }
    function f487() {
      for (var v2578 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ, v2579 = 0; v2578.length > v2579; v2579++) {
        if (v2578[v2579].ᐃⵠⵠ === ⵠᐃⵠ.ⵠᐃⲆᐃᐃ) {
          vThis.unlock.ⵠⲆⲆΔ[v2579] = 1;
        } else {
          vThis.unlock.ⵠⲆⲆΔ[v2579] = 0;
        }
      }
      v2578 = ᐃⵠᐃⵠ.ΔⲆⲆΔΔ;
      v2579 = 0;
      for (; v2578.length > v2579; v2579++) {
        if (ⵠᐃⵠ.ⵠᐃⲆᐃᐃ === v2578[v2579].ᐃⵠⵠ) {
          vThis.unlock.ⲆⲆⵠΔΔ[v2579] = 1;
        } else {
          vThis.unlock.ⲆⲆⵠΔΔ[v2579] = 0;
        }
      }
      v2578 = ᐃⵠᐃⵠ.ⵠΔΔⵠ;
      v2579 = 0;
      for (; v2579 < v2578.length; v2579++) {
        if (ⵠᐃⵠ.ⵠᐃⲆᐃᐃ === v2578[v2579].ᐃⵠⵠ) {
          vThis.unlock.ⵠᐃᐃΔⵠ[v2579] = 1;
        } else {
          vThis.unlock.ⵠᐃᐃΔⵠ[v2579] = 0;
        }
      }
      v2578 = ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ;
      v2579 = 0;
      for (; v2578.length > v2579; v2579++) {
        if (ⵠᐃⵠ.ⵠᐃⲆᐃᐃ === v2578[v2579].ᐃⵠⵠ) {
          vThis.unlock.ⵠᐃⵠᐃᐃ[v2579] = 1;
        } else {
          vThis.unlock.ⵠᐃⵠᐃᐃ[v2579] = 0;
        }
      }
      v2578 = ᐃⵠᐃⵠ.ⵠⵠΔΔΔ;
      v2579 = 0;
      for (; v2578.length > v2579; v2579++) {
        if (v2578[v2579].ᐃⵠⵠ === ⵠᐃⵠ.ⵠᐃⲆᐃᐃ) {
          vThis.unlock.ΔⲆⵠᐃⲆ[v2579] = 1;
          vThis.unlock.ⵠᐃΔΔΔ[v2579] = 1;
        } else {
          vThis.unlock.ΔⲆⵠᐃⲆ[v2579] = 0;
          vThis.unlock.ⵠᐃΔΔΔ[v2579] = 0;
        }
      }
    }
    if (v2572 >= 10) {
      v2572 = 105;
    }
    this.ᐃΔⵠⵠⵠⵠᐃ = -1;
    this.Ⲇⵠᐃⵠᐃᐃᐃ = undefined;
    this.ΔⵠⵠᐃⲆⲆᐃ = undefined;
    this.ⵠᐃⵠᐃⲆΔᐃ = undefined;
    this.ΔⵠⲆᐃΔⵠⵠ = 252;
    this.ⵠⲆΔⲆᐃΔⵠ = vVVVUndefined13;
    this.ᐃΔᐃⲆⲆⵠⵠ = undefined;
    this.ⵠΔⵠⵠᐃⵠⵠ = 143;
    this.ⵠΔⵠⵠᐃⵠⵠ.ⵠⵠᐃⲆΔⲆΔ = 13;
    this.ΔⲆⲆΔᐃⲆⲆ = undefined;
    this.ⵠΔⲆΔΔⲆΔ = undefined;
    this.ΔᐃⲆⵠⲆⵠⵠ = vVVUndefined82;
    this.ⲆⵠᐃⵠⵠΔΔ = undefined;
    this.ⲆᐃⲆⲆⵠⵠΔ = 6;
    this.ΔΔΔⵠ = 0;
    this.ⲆⵠⵠⲆᐃⲆᐃᐃⲆ = vV313;
    this.ⲆⲆⲆΔⵠ = Δⵠⵠᐃ.get("starve_quality") ? Δⵠⵠᐃ.get("starve_quality") : "high";
    if (this.ⲆⲆⲆΔⵠ === "high") {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      this.ⲆⲆⲆΔⵠ = 1;
    } else {
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      this.ⲆⲆⲆΔⵠ = 0;
    }
    this.ⵠᐃⵠᐃᐃⲆⲆΔΔ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      Δⵠⵠᐃ.set("starve_quality", "high", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 1;
      v3081.ⲆᐃⵠᐃᐃⲆⲆ();
      v2883.ⲆⲆⲆΔⵠ = 1;
    };
    this.ΔⲆΔⲆᐃⲆᐃⵠΔ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      Δⵠⵠᐃ.set("starve_quality", "low", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 0.5 / (v489 / v490);
      v3081.ⲆᐃⵠᐃᐃⲆⲆ();
      v2883.ⲆⲆⲆΔⵠ = 0;
    };
    if (vVVVVVUndefined132 === Δⵠⵠᐃ.get("starve_mapping") && v584 === "FR") {
      v3110.ΔΔΔⵠⵠΔᐃ();
      this.ΔᐃΔΔΔΔᐃ = "azerty";
    } else {
      this.ΔᐃΔΔΔΔᐃ = Δⵠⵠᐃ.get("starve_mapping") ? Δⵠⵠᐃ.get("starve_mapping") : "qwerty";
    }
    if (this.ΔᐃΔΔΔΔᐃ == "azerty") {
      v3110.ΔΔΔⵠⵠΔᐃ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
    } else {
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
    }
    this.ΔΔΔⵠⵠΔᐃ = function () {
      v3110.ΔΔΔⵠⵠΔᐃ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
      Δⵠⵠᐃ.set("starve_mapping", "azerty", {
        expires: 30
      });
    };
    this.ΔᐃΔⲆᐃⵠᐃ = function () {
      v3110.ΔᐃΔⲆᐃⵠᐃ();
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      Δⵠⵠᐃ.set("starve_mapping", "qwerty", {
        expires: 30
      });
    };
    this.ΔⵠⵠⲆΔⵠΔ = {
      id: document.getElementById("all_rights_reserved"),
      style: document.getElementById("all_rights_reserved").style,
      translate: {
        y: 0,
        x: 0
      },
      ᐃⲆⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    r();
    this.unlock = {};
    this.unlock.ⵠⲆⲆΔ = [];
    this.unlock.ⵠᐃᐃΔⵠ = [];
    this.unlock.ⵠᐃⵠᐃᐃ = [];
    this.unlock.ΔⲆⵠᐃⲆ = [];
    this.unlock.ⵠᐃΔΔΔ = [];
    this.unlock.ⲆⲆⵠΔΔ = [];
    this.ᐃᐃΔᐃΔⵠᐃ = 0;
    this.ΔΔⲆᐃᐃΔⵠ = f487;
    f487();
    this.ⲆΔΔⵠΔⵠΔ = {
      id: document.getElementById("trevda"),
      style: document.getElementById("trevda").style,
      translate: {
        y: 0,
        x: 0
      },
      ᐃⲆⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    var v2580;
    var v2581 = 0;
    function f488() {
      vThis.ᐃⲆⲆ();
      if (++v2581 == 30) {
        vThis.ⵠΔᐃΔᐃᐃⵠ();
        vThis.ΔⲆᐃⵠΔΔΔ = v30;
        vThis.ᐃⲆⲆ();
        return;
      }
      vWindow.setTimeout(f488, 33);
    }
    this.ⵠΔⵠᐃΔ = function (p1651) {
      v2580 = p1651;
      vThis.ᐃΔΔⵠⵠᐃᐃ();
      vThis.ΔⲆᐃⵠΔΔΔ = 0;
      v2582 = -1;
      f489();
    };
    var v2582 = -1;
    function f489() {
      vThis.ᐃⲆⲆ();
      if (++v2582 == 30) {
        Δⵠⵠᐃ.set("starve_nickname", vThis.ΔΔΔⲆⲆ.input.value, {
          expires: 30
        });
        vThis.ΔΔΔⲆⲆ.style.display = "none";
        vThis.ⲆᐃᐃΔⲆ.style.display = "none";
        vThis.ᐃⵠᐃⲆᐃⵠⲆ.style.display = "none";
        vThis.ΔⵠⵠⲆΔⵠΔ.style.display = "none";
        vThis.ⲆΔΔⵠΔⵠΔ.style.display = "none";
        vThis.stop();
        v2580();
        return;
      }
      vWindow.setTimeout(f489, 33);
    }
    this.ⲆΔᐃⵠⵠ = false;
    this.stop = function () {
      this.ⲆΔᐃⵠⵠ = false;
    };
    this.ⲆΔⲆΔⲆ = function () {
      f529();
      document.getElementById("game_body").style.backgroundColor = v624.ΔΔΔⲆᐃ[v2882.time];
      vThis.ΔΔΔⲆⲆ.style.display = "inline-block";
      vThis.ⲆᐃᐃΔⲆ.style.display = "inline-block";
      vThis.ᐃⵠᐃⲆᐃⵠⲆ.style.display = "inline-block";
      vThis.ΔⵠⵠⲆΔⵠΔ.style.display = "inline-block";
      vThis.ⲆΔΔⵠΔⵠΔ.style.display = "inline-block";
      vThis.waiting = false;
      vThis.ⲆΔᐃⵠⵠ = true;
      v2582 = -1;
      v2581 = 0;
      f488();
    };
    this.ΔᐃΔⲆⵠΔⵠ = function (p1652, p1653) {
      p1653 = p1653 < 0 ? -p1653 : p1653;
      if ((p1652.position & v2680) === v2680) {
        if (v2676 === (p1652.position & v2676)) {
          p1652.translate.x = v424 + p1652.translate.ⵠⵠⲆᐃⲆ - p1653;
        } else if ((p1652.position & v2677) === v2677) {
          p1652.translate.x = v424 + p1652.translate.ⵠⵠⲆᐃⲆ + p1653;
        } else {
          p1652.translate.x = v424 + p1652.translate.ⵠⵠⲆᐃⲆ;
        }
      } else if (v2676 === (p1652.position & v2676)) {
        p1652.translate.x = p1652.translate.ⵠⵠⲆᐃⲆ - p1653;
      } else if ((p1652.position & v2677) === v2677) {
        p1652.translate.x = v420 - p1652.translate.ⵠⵠⲆᐃⲆ + p1653;
      } else {
        p1652.translate.x = p1652.translate.ⵠⵠⲆᐃⲆ;
      }
      if (v2681 === (p1652.position & v2681)) {
        if (v2678 === (p1652.position & v2678)) {
          p1652.translate.y = v425 + p1652.translate.ⵠⵠᐃΔΔ - p1653;
        } else if ((p1652.position & v2679) === v2679) {
          p1652.translate.y = v425 + p1652.translate.ⵠⵠᐃΔΔ + p1653;
        } else {
          p1652.translate.y = v425 + p1652.translate.ⵠⵠᐃΔΔ;
        }
      } else if ((p1652.position & v2678) === v2678) {
        p1652.translate.y = p1652.translate.ⵠⵠᐃΔΔ - p1653;
      } else if (v2679 === (p1652.position & v2679)) {
        p1652.translate.y = v421 + p1652.translate.ⵠⵠᐃΔΔ + p1653;
      } else {
        p1652.translate.y = p1652.translate.ⵠⵠᐃΔΔ;
      }
      if (p1652.style !== vVUndefined13) {
        p1652.style.left = Math.floor(p1652.translate.x) + "px";
        p1652.style.top = Math.floor(p1652.translate.y) + "px";
      }
    };
    this.ᐃⲆⲆ = function () {
      var v2583 = 0;
      if (v2581 != 30 || v2582 != -1) {
        if (v2581 != 30) {
          v2583 = 1500 / (v2581 + 1) - 50;
        }
        if (v2582 != -1) {
          v2583 = -(1750 / (30 - v2582 + 1) - 48);
        }
      }
      for (var v2584 = 0; v2584 < this.ΔΔⵠⲆ.length; v2584++) {
        this.ΔᐃΔⲆⵠΔⵠ(this.ΔΔⵠⲆ[v2584], v2583);
      }
      for (v2584 = 0; this.buttons.length > v2584; v2584++) {
        this.ΔᐃΔⲆⵠΔⵠ(this.buttons[v2584].info, v2583);
      }
      for (v2584 = 0; v2584 < this.ΔᐃΔⲆⲆⵠΔ.length; v2584++) {
        this.ΔᐃΔⲆⵠΔⵠ(this.ΔᐃΔⲆⲆⵠΔ[v2584], v2583);
      }
      this.ΔⵠᐃⵠⲆᐃΔ.translate.x = (v420 - this.ΔⵠᐃⵠⲆᐃΔ.Δᐃ.width) / 2;
      this.ΔⵠᐃⵠⲆᐃΔ.translate.y = 0;
      this.ᐃⵠᐃⲆᐃⵠⲆ.translate.x = v420 - 450;
      this.ᐃⵠᐃⲆᐃⵠⲆ.translate.y = v421 - 40;
      this.ΔⵠⵠⲆΔⵠΔ.translate.x = v420 - 340;
      this.ΔⵠⵠⲆΔⵠΔ.translate.y = v421 - 25;
      this.ⲆΔΔⵠΔⵠΔ.translate.x = v420 - 320;
      this.ⲆΔΔⵠΔⵠΔ.translate.y = 80;
      if (v2581 != 30 || v2582 != -1) {
        var v2585 = 0;
        if (v2581 != 30) {
          v2585 = 1500 / (v2581 + 1) - 50;
        }
        if (v2582 != -1) {
          v2585 = -(1750 / (30 - v2582 + 1) - 48);
        }
        this.ΔⵠᐃⵠⲆᐃΔ.translate.y -= v2585 > 0 ? v2585 : -v2585;
        this.ᐃⵠᐃⲆᐃⵠⲆ.translate.y -= v2585 < 0 ? v2585 : -v2585;
        this.ΔⵠⵠⲆΔⵠΔ.translate.y -= v2585 < 0 ? v2585 : -v2585;
      }
      this.ᐃⵠᐃⲆᐃⵠⲆ.ᐃⲆⲆ();
      this.ΔⵠⵠⲆΔⵠΔ.ᐃⲆⲆ();
      this.ⲆΔΔⵠΔⵠΔ.ᐃⲆⲆ();
    };
    this.ⵠⲆᐃⲆΔᐃᐃ = function (p1654) {
      var v2586 = document.createElement("canvas");
      var v2587 = v2586.getContext("2d");
      v2586.width = 342;
      v2586.height = 342;
      var v2588 = -Math.PI / 2;
      for (var v2589 = 0; v2589 < p1654.length; v2589++) {
        var v2590 = p1654[v2589][0];
        var v2591 = Math.PI * p1654[v2589][1] / 180;
        v2587.beginPath();
        v2587.arc(171, 171, 170, v2588, v2588 + v2591, false);
        v2587.lineTo(171, 171);
        v2587.fillStyle = v2590;
        v2587.fill();
        v2588 += v2591;
      }
      return v2586;
    };
    this.ⲆΔΔⵠᐃⲆⵠⲆⲆ = function () {
      this.ⲆᐃΔΔⲆⵠⵠ = document.getElementById("account_nickname_input").value;
      if (this.ⵠⵠᐃΔⵠⵠⵠ !== this.ⲆᐃΔΔⲆⵠⵠ) {
        this.ⵠⵠᐃΔⵠⵠⵠ = this.ⲆᐃΔΔⲆⵠⵠ;
        this.ⲆΔⵠΔᐃⲆᐃ = f432(this.ⲆᐃΔΔⲆⵠⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550);
      }
    };
    this.ᐃᐃΔⵠ = function () {
      f290();
      v2883.ΔΔΔⵠᐃⵠΔ = ⵠⲆⲆ.ΔⵠⵠΔᐃ(v2883.ΔΔΔⵠᐃⵠΔ, v2883.ΔⲆⵠΔⲆⵠᐃ, 0.03);
      this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.x = this.ΔΔⵠⲆ[0].translate.x + -72 + v2883.ΔΔΔⵠᐃⵠΔ * 165;
      this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.ⵠⵠⲆᐃⲆ = this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.x;
      this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.y = this.ΔΔⵠⲆ[0].translate.y + 30;
      this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.ⵠⵠᐃΔΔ = this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ].translate.y;
      for (var v2592 = 2; this.ΔΔⵠⲆ.length > v2592; v2592++) {
        if (v2683 === this.ΔΔⵠⲆ[v2592].active) {
          this.ΔΔⵠⲆ[v2592].ᐃᐃΔⵠ(p1645);
        }
      }
      var v2593;
      if ((v2593 = this.ⲆⲆⵠΔⲆⵠᐃ - Date.now()) > 0) {
        var v2594 = Math.floor(v2593 / 60000);
        var v2595 = Math.floor(v2594 / 60);
        v2594 %= 60;
        if (this.ⲆⲆΔᐃⵠΔᐃ !== v2594) {
          this.ⲆⲆΔᐃⵠΔᐃ = v2594;
          v2594 = v2594 < 10 ? "0" + v2594 : "" + v2594;
          vThis.ⵠᐃᐃᐃΔⲆⲆ = f432(v2594, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2595 !== this.ΔΔⲆᐃⵠΔΔ) {
          this.ΔΔⲆᐃⵠΔΔ = v2595;
          v2595 = v2595 < 10 ? "0" + v2595 : "" + v2595;
          vThis.ΔⵠΔⵠⲆΔᐃ = f432(v2595, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2597 = this.ΔΔⵠⲆ[ⵠⵠⵠⲆᐃⲆⲆ]).ᐃᐃΔⵠ(p1645);
        var v2596 = this.ΔⵠΔⵠⲆΔᐃ;
        f304(p1645, v2596, v2597.translate.x - v2596.width / 4 + 182, v2597.translate.y - v2596.height / 4 + 40, v2596.width / 2, v2596.height / 2);
        v2596 = this.ⵠᐃᐃᐃΔⲆⲆ;
        f304(p1645, v2596, v2597.translate.x - v2596.width / 4 + 251, v2597.translate.y - v2596.height / 4 + 40, v2596.width / 2, v2596.height / 2);
      }
      if ((v2593 = this.ⲆⵠⵠⲆⵠᐃᐃ - Date.now()) > 0) {
        v2594 = Math.floor(v2593 / 60000);
        v2595 = Math.floor(v2594 / 60);
        var v2597;
        var v2598 = Math.floor(v2595 / 24);
        v2594 %= 60;
        v2595 %= 24;
        if (this.ᐃΔⵠⵠⵠⵠᐃ !== v2594) {
          this.ᐃΔⵠⵠⵠⵠᐃ = v2594;
          v2594 = v2594 < 10 ? "0" + v2594 : "" + v2594;
          vThis.Ⲇⵠᐃⵠᐃᐃᐃ = f432(v2594, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2595 !== this.ᐃⵠⵠⵠᐃᐃᐃ) {
          this.ᐃⵠⵠⵠᐃᐃᐃ = v2595;
          v2595 = v2595 < 10 ? "0" + v2595 : "" + v2595;
          vThis.ΔⵠⵠᐃⲆⲆᐃ = f432(v2595, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (this.ᐃᐃΔⵠⲆⲆⵠ !== v2598) {
          this.ᐃᐃΔⵠⲆⲆⵠ = v2598;
          v2598 = v2598 < 10 ? "0" + v2598 : "" + v2598;
          vThis.ⵠᐃⵠᐃⲆΔᐃ = f432(v2598, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2597 = this.ΔΔⵠⲆ[ⵠᐃⲆⵠⲆΔⵠ]).ᐃᐃΔⵠ(p1645);
        v2596 = this.ⵠᐃⵠᐃⲆΔᐃ;
        f304(p1645, v2596, v2597.translate.x - v2596.width / 4 + 113, v2597.translate.y - v2596.height / 4 + 40, v2596.width / 2, v2596.height / 2);
        v2596 = this.ΔⵠⵠᐃⲆⲆᐃ;
        f304(p1645, v2596, v2597.translate.x - v2596.width / 4 + 182, v2597.translate.y - v2596.height / 4 + 40, v2596.width / 2, v2596.height / 2);
        v2596 = this.Ⲇⵠᐃⵠᐃᐃᐃ;
        f304(p1645, v2596, v2597.translate.x - v2596.width / 4 + 251, v2597.translate.y - v2596.height / 4 + 40, v2596.width / 2, v2596.height / 2);
      }
      if (v2608 === (this.ΔⵠΔⲆᐃ & v2608)) {
        this.buttons[ΔⲆΔⵠᐃΔⵠ].info.state = v2289;
      } else if (v2614 === (this.ΔⵠΔⲆᐃ & v2614)) {
        this.buttons[ⵠΔΔΔΔⵠᐃ].info.state = v2289;
      } else if (v2611 === (this.ΔⵠΔⲆᐃ & v2611)) {
        this.buttons[ⵠⵠᐃΔⲆⲆΔ].info.state = v2289;
      } else if ((this.ΔⵠΔⲆᐃ & v2609) === v2609) {
        this.buttons[ΔⲆΔⵠⲆΔⲆ].info.state = v2289;
      } else if (v2613 === (this.ΔⵠΔⲆᐃ & v2613)) {
        this.buttons[ⲆΔⲆᐃΔⲆΔ].info.state = v2289;
      } else if (v2610 === (this.ΔⵠΔⲆᐃ & v2610)) {
        this.buttons[ΔᐃᐃΔΔΔⵠ].info.state = v2289;
      } else if (v2612 === (this.ΔⵠΔⲆᐃ & v2612) || v2618 === (this.ΔⵠΔⲆᐃ & v2618) || (this.ΔⵠΔⲆᐃ & v2619) === v2619 || (this.ΔⵠΔⲆᐃ & v2620) === v2620 || v2621 === (this.ΔⵠΔⲆᐃ & v2621) || v2622 === (this.ΔⵠΔⲆᐃ & v2622) || (this.ΔⵠΔⲆᐃ & v2623) === v2623) {
        this.buttons[ⵠᐃΔⵠⵠᐃΔ].info.state = v2289;
      } else if (v2624 === (this.ΔⵠΔⲆᐃ & v2624) || (this.ΔⵠΔⲆᐃ & v2626) === v2626 || (this.ΔⵠΔⲆᐃ & v2625) === v2625 || (this.ΔⵠΔⲆᐃ & v2627) === v2627 || (this.ΔⵠΔⲆᐃ & v2628) === v2628 || (this.ΔⵠΔⲆᐃ & v2629) === v2629) {
        this.buttons[ⵠⵠᐃΔⲆⲆΔ].info.state = v2289;
      } else if ((this.ΔⵠΔⲆᐃ & v2632) === v2632 || (this.ΔⵠΔⲆᐃ & v2633) === v2633 || v2634 === (this.ΔⵠΔⲆᐃ & v2634)) {
        this.buttons[ΔⲆᐃⲆᐃΔⲆ].info.state = v2289;
      } else if ((this.ΔⵠΔⲆᐃ & v2635) === v2635) {
        this.buttons[ΔⲆΔⵠⲆΔⲆ].info.state = v2289;
      }
      if (v2614 === (this.ΔⵠΔⲆᐃ & v2614)) {
        if (this.ᐃⲆᐃΔⲆⲆᐃ === this.ⵠΔⲆΔΔⲆΔ) {
          this.ΔⲆⲆΔᐃⲆⲆ = this.ΔⲆⲆᐃⵠΔⲆ;
          this.buttons[this.ΔⲆⲆᐃⵠΔⲆ].info.active = v2682;
          this.buttons[this.ⵠⵠᐃᐃᐃⵠⲆ].info.active = v2682;
          this.buttons[this.ⲆⲆⵠⲆΔᐃⲆ].info.active = v2682;
        } else {
          this.buttons[this.ΔⲆⲆᐃⵠΔⲆ].info.active = v2683;
          this.buttons[this.ⵠⵠᐃᐃᐃⵠⲆ].info.active = v2683;
          this.buttons[this.ⲆⲆⵠⲆΔᐃⲆ].info.active = v2683;
        }
        if (this.ⵠΔⲆΔΔⲆΔ === this.ⵠⲆᐃⵠΔⲆᐃ) {
          this.buttons[this.ⵠⲆᐃⵠΔⲆᐃ].info.state = v2289;
        } else if (this.ᐃΔΔⵠⵠⵠⲆ === this.ⵠΔⲆΔΔⲆΔ) {
          this.buttons[this.ᐃΔΔⵠⵠⵠⲆ].info.state = v2289;
        } else if (this.ⵠΔⲆΔΔⲆΔ === this.ᐃⲆᐃΔⲆⲆᐃ) {
          this.buttons[this.ᐃⲆᐃΔⲆⲆᐃ].info.state = v2289;
        } else if (this.ⲆⲆΔⲆⲆⵠᐃ === this.ⵠΔⲆΔΔⲆΔ) {
          this.buttons[this.ⲆⲆΔⲆⲆⵠᐃ].info.state = v2289;
        } else if (this.ⵠΔⲆΔΔⲆΔ === this.ᐃᐃᐃⵠᐃⲆⵠ) {
          this.buttons[this.ᐃᐃᐃⵠᐃⲆⵠ].info.state = v2289;
        }
        if (this.ΔⲆⲆᐃⵠΔⲆ === this.ΔⲆⲆΔᐃⲆⲆ) {
          this.buttons[this.ΔⲆⲆᐃⵠΔⲆ].info.state = v2289;
        } else if (this.ΔⲆⲆΔᐃⲆⲆ === this.ⵠⵠᐃᐃᐃⵠⲆ) {
          this.buttons[this.ⵠⵠᐃᐃᐃⵠⲆ].info.state = v2289;
        } else if (this.ⲆⲆⵠⲆΔᐃⲆ === this.ΔⲆⲆΔᐃⲆⲆ) {
          this.buttons[this.ⲆⲆⵠⲆΔᐃⲆ].info.state = v2289;
        }
        if (this.ΔᐃⲆⵠⲆⵠⵠ === this.ᐃⲆⵠᐃⲆⲆⲆ) {
          this.buttons[this.ᐃⲆⵠᐃⲆⲆⲆ].info.state = v2289;
        } else if (this.ⵠⲆⲆⵠⲆΔⵠ === this.ΔᐃⲆⵠⲆⵠⵠ) {
          this.buttons[this.ⵠⲆⲆⵠⲆΔⵠ].info.state = v2289;
        } else if (this.ΔΔⵠΔᐃΔⵠ === this.ΔᐃⲆⵠⲆⵠⵠ) {
          this.buttons[this.ΔΔⵠΔᐃΔⵠ].info.state = v2289;
        }
        if (this.ⲆⵠᐃⵠⵠΔΔ === this.ⵠΔⵠΔⲆΔⵠ) {
          this.buttons[this.ⵠΔⵠΔⲆΔⵠ].info.state = v2289;
        } else if (this.ⲆⲆΔⲆᐃᐃⲆ === this.ⲆⵠᐃⵠⵠΔΔ) {
          this.buttons[this.ⲆⲆΔⲆᐃᐃⲆ].info.state = v2289;
        } else if (this.ΔΔᐃΔⵠΔⵠ === this.ⲆⵠᐃⵠⵠΔΔ) {
          this.buttons[this.ΔΔᐃΔⵠΔⵠ].info.state = v2289;
        } else if (this.ⵠⵠᐃΔⲆΔⵠ === this.ⲆⵠᐃⵠⵠΔΔ) {
          this.buttons[this.ⵠⵠᐃΔⲆΔⵠ].info.state = v2289;
        } else if (this.ⲆⵠᐃⵠⵠΔΔ === this.ᐃⵠᐃᐃⵠΔⵠ) {
          this.buttons[this.ᐃⵠᐃᐃⵠΔⵠ].info.state = v2289;
        } else if (this.ⲆⲆⵠⵠⵠΔⲆ === this.ⲆⵠᐃⵠⵠΔΔ) {
          this.buttons[this.ⲆⲆⵠⵠⵠΔⲆ].info.state = v2289;
        } else if (this.ᐃⲆΔⲆⵠᐃΔ === this.ⲆⵠᐃⵠⵠΔΔ) {
          this.buttons[this.ᐃⲆΔⲆⵠᐃΔ].info.state = v2289;
        }
      }
      if (v2609 === (this.ΔⵠΔⲆᐃ & v2609)) {
        if (this.ᐃΔΔⲆᐃᐃΔ === -1) {
          this.buttons[vV26078].info.state = v2289;
        } else if (this.ᐃΔΔⲆᐃᐃΔ === 0) {
          this.buttons[vV26079].info.state = v2289;
        } else if (this.ᐃΔΔⲆᐃᐃΔ === 2) {
          this.buttons[vV260711].info.state = v2289;
        } else if (this.ᐃΔΔⲆᐃᐃΔ === 3) {
          this.buttons[vV260712].info.state = v2289;
        } else if (this.ᐃΔΔⲆᐃᐃΔ === 4) {
          this.buttons[vV260710].info.state = v2289;
        }
        if (this.ⲆᐃⲆⲆⵠⵠΔ === 0) {
          this.buttons[vV2607].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 1) {
          this.buttons[vV26072].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 2) {
          this.buttons[vV26073].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 3) {
          this.buttons[vV26074].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 4) {
          this.buttons[vV26075].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 5) {
          this.buttons[vV26076].info.state = v2289;
        } else if (this.ⲆᐃⲆⲆⵠⵠΔ === 6) {
          this.buttons[vV26077].info.state = v2289;
        }
      }
      if ((this.ΔⵠΔⲆᐃ & v2608) === v2608 && v2887.ΔⲆᐃΔⲆᐃΔ === 0) {
        if (this.buttons[v2689].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2689].hint = Math.min(1, this.buttons[v2689].hint + v3116 * 1.5);
        } else {
          this.buttons[v2689].hint = Math.max(0, this.buttons[v2689].hint - v3116 * 1.5);
        }
        if (this.buttons[v2690].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2690].hint = Math.min(1, this.buttons[v2690].hint + v3116 * 1.5);
        } else {
          this.buttons[v2690].hint = Math.max(0, this.buttons[v2690].hint - v3116 * 1.5);
        }
        if (this.buttons[v2691].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2691].hint = Math.min(1, this.buttons[v2691].hint + v3116 * 1.5);
        } else {
          this.buttons[v2691].hint = Math.max(0, this.buttons[v2691].hint - v3116 * 1.5);
        }
        if (this.buttons[v2694].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2694].hint = Math.min(1, this.buttons[v2694].hint + v3116 * 1.5);
        } else {
          this.buttons[v2694].hint = Math.max(0, this.buttons[v2694].hint - v3116 * 1.5);
        }
        if (this.buttons[v2692].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2692].hint = Math.min(1, this.buttons[v2692].hint + v3116 * 1.5);
        } else {
          this.buttons[v2692].hint = Math.max(0, this.buttons[v2692].hint - v3116 * 1.5);
        }
        if (this.buttons[v2693].ΔᐃⵠᐃⲆΔⲆ(v3114.ᐃΔⲆᐃ)) {
          this.buttons[v2693].hint = Math.min(1, this.buttons[v2693].hint + v3116 * 1.5);
        } else {
          this.buttons[v2693].hint = Math.max(0, this.buttons[v2693].hint - v3116 * 1.5);
        }
      }
      var v2599 = 1;
      if ((this.ΔⵠΔⲆᐃ & (v2618 | v2619 | v2620 | v2621 | v2622 | v2623)) > 1) {
        v2596 = ⵠᐃ.ⵠⵠⲆⵠⲆⲆΔ;
        p1645.save();
        p1645.translate(v424, v2688 + v2596.height / 4);
        if (this.ΔⵠᐃⵠⲆ === 1) {
          this.ⲆⲆᐃᐃΔⵠⲆ += v3116 / 3;
          v2599 = this.ΔΔⲆΔⵠⵠᐃ - 100 / Math.pow(1 + this.ⲆⲆᐃᐃΔⵠⲆ, 1 + this.ⲆⲆᐃᐃΔⵠⲆ);
          p1645.rotate(v2599);
        }
        f304(p1645, v2596, -v2596.width / 4, -v2596.height / 4, v2596.width / 2, v2596.height / 2);
        p1645.restore();
      }
      if (v2887.ΔⲆᐃΔⲆᐃΔ === 0) {
        if (v2887.ᐃΔΔΔⲆ === 0) {
          this.buttons[v2689].info.state = v2289;
        } else if (v2887.ᐃΔΔΔⲆ === 4) {
          this.buttons[v2690].info.state = v2289;
        } else if (v2887.ᐃΔΔΔⲆ === 2) {
          this.buttons[v2692].info.state = v2289;
        } else if (v2887.ᐃΔΔΔⲆ === 3) {
          this.buttons[v2693].info.state = v2289;
        } else if (v2887.ᐃΔΔΔⲆ === 6) {
          this.buttons[v2691].info.state = v2289;
        } else if (v2887.ᐃΔΔΔⲆ === 7) {
          this.buttons[v2694].info.state = v2289;
        }
      }
      for (v2592 = 1; this.buttons.length > v2592; v2592++) {
        if (v2683 === this.buttons[v2592].info.active) {
          this.buttons[v2592].ᐃᐃΔⵠ(p1645);
        }
      }
      this.ΔΔⵠⲆ[0].ᐃᐃΔⵠ(p1645);
      if ((this.ΔⵠΔⲆᐃ & (v2631 | v2630)) > 0) {
        v2596 = this.ⲆΔⵠΔᐃⲆᐃ;
        f304(p1645, v2596, v424 - v2596.width / 4, 138, v2596.width / 2, v2596.height / 2);
      }
      var v2600 = Math.max(1, Math.min(18, Math.floor((v2883.ⵠⵠΔⵠⵠ + 3) / 2)));
      this.ΔΔⵠⲆ[v2600].active = v2683;
      this.ΔΔⵠⲆ[v2600].ᐃᐃΔⵠ(p1645);
      this.ΔΔⵠⲆ[v2600].active = v2682;
      this.buttons[0].ᐃᐃΔⵠ(p1645);
      if ((this.ΔⵠΔⲆᐃ & (v2611 | v2626 | v2627 | v2624 | v2628)) > 1) {
        var v2601 = (this.ΔⵠΔⲆᐃ & (v2626 | v2627 | v2624 | v2628)) > 1 ? -190 : 0;
        v2596 = ΔΔ[47][this.ⵠᐃᐃΔⵠ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 + v2601, 183, v2596.width / 2, v2596.height / 2);
        this.ΔΔΔⵠ = (this.ΔΔΔⵠ + v3116 * 1000) % 2000;
        var v2602 = (this.ΔΔΔⵠ < 1000) * 4.5 ? this.ΔΔΔⵠ / 1000 : (2000 - this.ΔΔΔⵠ) / 1000;
        v2596 = ΔΔ[46][this.ⵠᐃⵠᐃᐃ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 - 62 + v2602 + v2601, 240, v2596.width / 2, v2596.height / 2);
        v2596 = ΔΔ[7][this.ⵠⲆⲆΔ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 - 54 + v2602 + v2601, 272, v2596.width / 2, v2596.height / 2);
        f304(p1645, v2596, v424 - v2596.width / 4 + 54 - v2602 + v2601, 272, v2596.width / 2, v2596.height / 2);
        v2596 = ΔΔ[365][this.ⵠⲆⲆΔ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 + v2601, 222, v2596.width / 2, v2596.height / 2);
        v2596 = ΔΔ[1045][this.ⲆⲆⵠΔΔ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 + v2601, 222, v2596.width / 2, v2596.height / 2);
      }
      if (v2611 === (this.ΔⵠΔⲆᐃ & v2611)) {
        v2596 = ΔΔ[360][this.ΔⲆⵠᐃⲆ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 - 61, 406 - v2596.height / 4, v2596.width / 2, v2596.height / 2);
        v2596 = ΔΔ[360][this.ⵠᐃΔΔΔ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 + 53, 406 - v2596.height / 4, v2596.width / 2, v2596.height / 2);
      }
      if (v2625 === (this.ΔⵠΔⲆᐃ & v2625)) {
        v2596 = ΔΔ[360][this.ⵠᐃΔΔΔ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 - 200, 268 - v2596.height / 4, v2596.width / 2, v2596.height / 2);
      }
      if ((this.ΔⵠΔⲆᐃ & v2629) === v2629) {
        v2596 = ΔΔ[360][this.ΔⲆⵠᐃⲆ][this.ᐃᐃΔᐃΔⵠᐃ];
        f304(p1645, v2596, v424 - v2596.width / 4 - 200, 268 - v2596.height / 4, v2596.width / 2, v2596.height / 2);
      }
      if ((this.ΔⵠΔⲆᐃ & (v2626 | v2627 | v2624 | v2628 | v2625 | v2629)) > 1) {
        for (v2592 = 1; v2592 < this.buttons.length; v2592++) {
          if (this.buttons[v2592].view & this.ΔⵠΔⲆᐃ) {
            var v2603 = this.buttons[v2592].info;
            if (v2603.ΔⲆⲆⵠΔΔⵠ >= 0) {
              v2596 = v2603.ΔᐃⲆⲆⲆⲆΔⵠΔ[v2603.ΔⲆⲆⵠΔΔⵠ].ⵠⵠᐃ;
              f304(p1645, v2596, v2603.translate.x - v2596.width / 8 + 44.5, v2603.translate.y - v2596.height / 8 + 45.5, v2596.width / 4, v2596.height / 4);
              if (v2603.ⵠΔⵠⲆᐃⲆΔ !== 1) {
                v2596 = ⵠᐃ.ⵠΔⵠᐃⵠⲆⲆ;
                f304(p1645, v2596, v2603.translate.x - v2596.width / 4 + 44.5, v2603.translate.y - v2596.height / 4 + 44.5, v2596.width / 2, v2596.height / 2);
              }
            }
          }
        }
        v2596 = this.ⵠⲆΔⲆᐃΔⵠ;
        f304(p1645, v2596, v424 - 312, 375, v2596.width / 2, v2596.height / 2);
        v2596 = this.ᐃΔᐃⲆⲆⵠⵠ;
        f304(p1645, v2596, v424 - 312, 395, v2596.width / 2, v2596.height / 2);
      }
      if (this.ᐃⵠⲆΔΔ !== this.ΔᐃΔΔⲆⵠⵠ) {
        this.ΔᐃΔΔⲆⵠⵠ = this.ᐃⵠⲆΔΔ;
        this.ᐃᐃᐃⲆᐃⵠⵠ = f432("" + this.ᐃⵠⲆΔΔ, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250);
      }
      f304(p1645, this.ᐃᐃᐃⲆᐃⵠⵠ, this.ΔΔⵠⲆ[0].translate.x + 350, 15, this.ᐃᐃᐃⲆᐃⵠⵠ.w2, this.ᐃᐃᐃⲆᐃⵠⵠ.ⵠᐃⲆⵠΔ);
      if (this.ⵠⵠⵠⲆⲆⲆⲆ !== this.ⵠⵠΔⵠⵠ) {
        this.ⵠⵠⵠⲆⲆⲆⲆ = this.ⵠⵠΔⵠⵠ;
        this.ᐃⵠᐃΔᐃⵠⵠ = f432("LVL " + (this.ⵠⵠΔⵠⵠ + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, undefined, 30, 24, vVUndefined, vVUndefined13, vVVVUndefined13, vVVVUndefined824, "#3F3019", 20);
      }
      f304(p1645, this.ᐃⵠᐃΔᐃⵠⵠ, this.ΔΔⵠⲆ[0].translate.x + 94, 0, this.ᐃⵠᐃΔᐃⵠⵠ.w2, this.ᐃⵠᐃΔᐃⵠⵠ.ⵠᐃⲆⵠΔ);
      if (v2887.ΔⲆᐃΔⲆᐃΔ === 0) {
        var v2604;
        if ((v2604 = this.buttons[v2689].hint) > 0) {
          v2596 = ⵠᐃ.ⵠΔᐃⲆⵠⵠⲆ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) * v2596.height / 2, v2596.width / 2, v2596.height / 2);
        }
        if ((v2604 = this.buttons[v2690].hint) > 0) {
          v2596 = ⵠᐃ.ⲆⲆΔΔⵠⵠⵠ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - v2596.height * ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) / 2, v2596.width / 2, v2596.height / 2);
        }
        if ((v2604 = this.buttons[v2691].hint) > 0) {
          v2596 = ⵠᐃ.ᐃΔΔⲆⵠΔⲆ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) * v2596.height / 2, v2596.width / 2, v2596.height / 2);
        }
        if ((v2604 = this.buttons[v2694].hint) > 0) {
          v2596 = ⵠᐃ.ⲆⵠⲆⵠⵠΔᐃ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - v2596.height * ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) / 2, v2596.width / 2, v2596.height / 2);
        }
        if ((v2604 = this.buttons[v2693].hint) > 0) {
          v2596 = ⵠᐃ.ΔⲆⲆᐃⲆⵠΔ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) * v2596.height / 2, v2596.width / 2, v2596.height / 2);
        }
        if ((v2604 = this.buttons[v2692].hint) > 0) {
          v2596 = ⵠᐃ.ⲆᐃⲆⲆⲆΔⲆ;
          f304(p1645, v2596, v424 - v2596.width / 4, -36 - v2596.height * ⵠⲆⲆ.ⲆⲆⲆᐃⲆ(1 - v2604) / 2, v2596.width / 2, v2596.height / 2);
        }
      }
      if (this.ΔⵠᐃⵠⲆ === 1 && Math.abs(v2599 - this.ΔΔⲆΔⵠⵠᐃ) < 0.006) {
        p1645.globalAlpha = Math.min(1, this.ⵠᐃΔΔⵠΔⲆ * 3);
        v2596 = ⵠᐃ.ⲆΔᐃⲆⲆⵠΔ;
        p1645.save();
        p1645.translate(v424, 260);
        this.ⵠᐃΔΔⵠΔⲆ += v3116;
        p1645.rotate(this.ⵠᐃΔΔⵠΔⲆ);
        f304(p1645, v2596, -v2596.width / 2, -v2596.height / 2, v2596.width, v2596.height);
        p1645.restore();
        v2602 = 1.05 + Math.cos(this.ⵠᐃΔΔⵠΔⲆ * 5) * 0.05;
        if (this.ⲆΔᐃⵠⲆⲆᐃ === 0) {
          var v2605 = (v2596 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[this.ⵠᐃᐃⲆᐃΔΔ].ⵠⵠᐃ).width * v2602;
          var v2606 = v2596.height * v2602;
          f304(p1645, v2596, v424 - v2605 / 2, 260 - v2606 / 2, v2605, v2606);
        } else if (this.ⲆΔᐃⵠⲆⲆᐃ === 1) {
          v2605 = (v2596 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[0].ⵠⵠᐃ).width * v2602;
          v2606 = v2602 * v2596.height;
          f304(p1645, v2596, v424 - v2605 / 2, 260 - v2606 / 2, v2605, v2606);
          v2605 = v2602 * (v2596 = ᐃⵠᐃⵠ.ΔⲆⲆΔΔ[this.ⵠᐃᐃⲆᐃΔΔ].ⵠⵠᐃ).width;
          v2606 = v2596.height * v2602;
          f304(p1645, v2596, v424 - v2605 / 2, 260 - v2606 / 2, v2605, v2606);
        } else if (this.ⲆΔᐃⵠⲆⲆᐃ === 2) {
          v2605 = (v2596 = ᐃⵠᐃⵠ.ⵠΔΔⵠ[this.ⵠᐃᐃⲆᐃΔΔ].ⵠⵠᐃ).width * v2602;
          v2606 = v2596.height * v2602;
          f304(p1645, v2596, v424 - v2605 / 2, 180 - v2606 / 2, v2605, v2606);
          v2605 = v2602 * (v2596 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[0].ⵠⵠᐃ).width;
          v2606 = v2596.height * v2602;
          f304(p1645, v2596, v424 - v2605 / 2, 260 - v2606 / 2, v2605, v2606);
        } else if (this.ⲆΔᐃⵠⲆⲆᐃ === 3) {
          v2605 = (v2596 = ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ[this.ⵠᐃᐃⲆᐃΔΔ].ⵠⵠᐃ).width * v2602;
          v2606 = v2596.height * v2602;
          p1645.save();
          p1645.translate(v424, 260);
          p1645.rotate(Math.PI);
          f304(p1645, v2596, -v2605 / 2, -v2606 / 2, v2605, v2606);
          p1645.restore();
        } else if (this.ⲆΔᐃⵠⲆⲆᐃ === 4) {
          v2605 = (v2596 = ᐃⵠᐃⵠ.ⵠⵠΔΔΔ[this.ⵠᐃᐃⲆᐃΔΔ].ⵠⵠᐃ).width * v2602;
          v2606 = v2602 * v2596.height;
          f304(p1645, v2596, v424 - v2605 / 2, 260 - v2606 / 2, v2605, v2606);
        }
        v2596 = this.ΔⲆΔⲆᐃⲆⵠ;
        f304(p1645, v2596, v424 - v2596.width / 4, 340, v2596.width / 2, v2596.height / 2);
        v2596 = this.ΔΔⵠⲆΔΔᐃ;
        f304(p1645, v2596, v424 - v2596.width / 4, 365, v2596.width / 2, v2596.height / 2);
        if (this.ⵠᐃΔΔⵠΔⲆ > 6) {
          this.ΔⵠᐃⵠⲆ = 0;
          f491(v2612);
        }
        p1645.globalAlpha = 1;
      }
      v2885.alert.ᐃᐃΔⵠ("#FFF", "#000");
      if (vThis.waiting) {
        this.ΔⵠᐃⵠⲆᐃΔ.ᐃᐃΔⵠ();
      }
    };
    var v2607 = 0;
    var v2608 = Math.pow(2, v2607++);
    var v2609 = Math.pow(2, v2607++);
    this.ᐃΔᐃⵠⵠ = v2609;
    var v2610 = Math.pow(2, v2607++);
    var v2611 = Math.pow(2, v2607++);
    var v2612 = Math.pow(2, v2607++);
    var v2613 = Math.pow(2, v2607++);
    var v2614 = Math.pow(2, v2607++);
    var v2615 = Math.pow(2, v2607++);
    this.ⲆⲆⵠΔⵠ = v2615;
    var v2616 = Math.pow(2, v2607++);
    var v2617 = Math.pow(2, v2607++);
    var v2618 = Math.pow(2, v2607++);
    var v2619 = Math.pow(2, v2607++);
    var v2620 = Math.pow(2, v2607++);
    var v2621 = Math.pow(2, v2607++);
    var v2622 = Math.pow(2, v2607++);
    var v2623 = Math.pow(2, v2607++);
    var v2624 = Math.pow(2, v2607++);
    var v2625 = Math.pow(2, v2607++);
    var v2626 = Math.pow(2, v2607++);
    var v2627 = Math.pow(2, v2607++);
    var v2628 = Math.pow(2, v2607++);
    var v2629 = Math.pow(2, v2607++);
    var v2630 = Math.pow(2, v2607++);
    var v2631 = Math.pow(2, v2607++);
    var v2632 = Math.pow(2, v2607++);
    this.ΔΔⲆⵠⲆ = v2632;
    var v2633 = Math.pow(2, v2607++);
    this.ⲆΔⲆⵠⲆᐃⵠ = v2633;
    var v2634 = Math.pow(2, v2607++);
    this.ⲆᐃΔᐃΔ = v2634;
    var v2635 = Math.pow(2, v2607++);
    function f490(p1655, p1656, p1657) {
      for (var v2636 = 0; vThis.ΔΔⵠⲆ.length > v2636; v2636++) {
        if ((vThis.ΔΔⵠⲆ[v2636].view & p1655) !== 0) {
          vThis.ΔΔⵠⲆ[v2636].active = p1656;
        }
      }
      for (v2636 = 0; v2636 < vThis.buttons.length; v2636++) {
        if (vThis.buttons[v2636].view & p1655) {
          vThis.buttons[v2636].info.active = p1656;
        }
      }
      for (v2636 = 0; vThis.ΔᐃΔⲆⲆⵠΔ.length > v2636; v2636++) {
        if (vThis.ΔᐃΔⲆⲆⵠΔ[v2636].view & p1655) {
          vThis.ΔᐃΔⲆⲆⵠΔ[v2636].style.display = p1657;
        }
      }
    }
    this.ΔⵠΔⲆᐃ = v2608;
    function f491(p1658) {
      if (vThis.ΔⲆᐃⵠΔΔΔ !== false) {
        f490(v2616, v2682, "none");
        f490(v2617, v2682, "none");
        f492();
        if (vThis.ΔⵠΔⲆᐃ !== p1658 && !(vThis.ΔⵠᐃⵠⲆ >= 1)) {
          vThis.ⲆΔΔⵠΔⵠΔ.style.display = v2608 === p1658 || v2612 === p1658 || v2609 === p1658 || p1658 === v2614 || p1658 === v2611 || p1658 === v2613 ? "inline-block" : "none";
          f490(vThis.ΔⵠΔⲆᐃ, v2682, "none");
          vThis.ΔⵠΔⲆᐃ = p1658;
          f490(vThis.ΔⵠΔⲆᐃ, v2683, "inline-block");
        }
      }
    }
    function f492() {
      var vNumber7 = Number(Δⵠⵠᐃ.get("starve_crate"));
      var vNumber8 = Number(Δⵠⵠᐃ.get("starve_dead"));
      var vNumber9 = Number(Δⵠⵠᐃ.get("starve_book"));
      var vNumber10 = Number(Δⵠⵠᐃ.get("starve_bag"));
      var vNumber11 = Number(Δⵠⵠᐃ.get("starve_skin"));
      var vNumber12 = Number(Δⵠⵠᐃ.get("starve_accessory"));
      if (!(v2883.unlock.ⵠⲆⲆΔ[v2883.ⵠⲆⲆΔ] > 0)) {
        v2883.ⵠⲆⲆΔ = v2883.unlock.ⵠⲆⲆΔ[vNumber11] > 0 ? vNumber11 : 0;
      }
      if (!(v2883.unlock.ⵠᐃⵠᐃᐃ[v2883.ⵠᐃⵠᐃᐃ] > 0)) {
        v2883.ⵠᐃⵠᐃᐃ = v2883.unlock.ⵠᐃⵠᐃᐃ[vNumber9] > 0 ? vNumber9 : 0;
      }
      if (!(v2883.unlock.ⵠᐃΔΔΔ[v2883.ⵠᐃΔΔΔ] > 0)) {
        v2883.ⵠᐃΔΔΔ = v2883.unlock.ⵠᐃΔΔΔ[vNumber8] > 0 ? vNumber8 : 0;
      }
      if (!(v2883.unlock.ΔⲆⵠᐃⲆ[v2883.ΔⲆⵠᐃⲆ] > 0)) {
        v2883.ΔⲆⵠᐃⲆ = v2883.unlock.ΔⲆⵠᐃⲆ[vNumber7] > 0 ? vNumber7 : 0;
      }
      if (!(v2883.unlock.ⲆⲆⵠΔΔ[v2883.ⲆⲆⵠΔΔ] > 0)) {
        v2883.ⲆⲆⵠΔΔ = v2883.unlock.ⲆⲆⵠΔΔ[vNumber12] > 0 ? vNumber12 : 0;
      }
      if (!(v2883.unlock.ⵠᐃᐃΔⵠ[v2883.ⵠᐃᐃΔⵠ] > 0)) {
        v2883.ⵠᐃᐃΔⵠ = v2883.unlock.ⵠᐃᐃΔⵠ[vNumber10] > 0 ? vNumber10 : 0;
      }
    }
    function f493(p1659) {
      if (v2885.ΔΔⵠⵠⵠⵠⵠ !== vVUndefined8 && v2885.ⵠⲆⵠᐃⵠⲆΔ !== undefined && v2885.ᐃᐃΔⵠⲆΔⲆ !== undefined && v2885.ⵠΔⵠⵠᐃⲆⵠ !== undefined) {
        p1659();
      }
    }
    function f494(p1660, p1661, p1662) {
      const v2637 = new XMLHttpRequest();
      v2637.open("GET", p1660);
      v2637.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v2637.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          if (vVUndefined !== p1661) {
            p1661(v2637.responseText);
          }
        } else if (this.readyState == 4 && p1662 !== vVVVUndefined824) {
          p1662();
        }
      };
      v2637.send();
    }
    function f495() {
      f492();
      if (v3129 % 2 || vVVVUndefined822 === vWindow.Widget) {
        console.log(vVVVVVUndefined1322);
        v2887.connect();
      } else {
        console.log(undefined);
        if (vWindow.Widget.isBlocked === 1) {
          vWindow.Widget.createAdPlayer(v2887.connect.bind(v2887), v2887.connect.bind(v2887));
        } else {
          vWindow.Widget.preroll();
          vWindow.Widget.play = v2887.connect.bind(v2887);
        }
      }
    }
    this.ΔΔᐃⲆΔΔⲆ = 0;
    this.ⵠᐃᐃᐃ = f491;
    this.ᐃⲆⲆᐃⵠΔΔ = function (p1663, p1664) {
      let v2638 = "0";
      let v2639 = 0;
      if (vVUndefined14) {
        v2638 = vVUndefined14 + vF25.ⵠΔⲆᐃᐃⵠⲆ();
      }
      if (v2885.ΔΔⵠⵠⵠⵠⵠ) {
        f493(p1663);
      } else {
        f494(`${v3131}token?id=${v2638}`, function (p1665) {
          if (v2639 === 1) {
            return;
          }
          const v2640 = p1665.split("_");
          const v2641 = v2640[0] + "_";
          const vNumber13 = Number(v2640[1]);
          const v2642 = Math.abs(f32(vNumber13));
          v2885.ΔΔⵠⵠⵠⵠⵠ = v2641 + v2642;
          f493(p1663);
        }, function () {
          if (v2639 !== 1) {
            if (p1664 === 1) {
              v2639 = 1;
              p1663();
              return;
            } else {
              vThis.waiting = false;
              return;
            }
          }
        });
      }
      f494(`${v3132}let`, function (p1666) {
        if (v2639 === 1) {
          return;
        }
        p1666 = p1666.split(":");
        {
          var v2643 = 70;
          if (v2643 == 8) {
            v2643 = 108;
          }
          var v2644 = 30;
          var v2645 = 18;
          if (v2645 === 12) {
            v2645 = 254;
          }
          ({}).ⵠⲆⲆⵠⲆⵠΔⵠΔ = 14;
          if (215 <= 168) {
            173;
          }
          if (v2644 >= 3) {
            v2644 = 250;
          }
          0;
          var v2646 = 198;
          if (v2646 == 10) {
            v2646 = 37;
          }
          var v2647 = 186;
          if (159 > 135) {
            75;
          }
          if (190 == 5) {
            250;
          }
          var v2648 = 120;
          if (v2648 == 3) {
            v2648 = 47;
          }
          if (50 == 25) {
            192;
          }
          if (11 === 111) {
            187;
          }
          if (v2647 === 11) {
            v2647 = 19;
          }
          const v2649 = p1666[0].split("_");
          const v2650 = v2649[0] + "_";
          172 .ᐃᐃΔⵠΔⵠⵠΔΔ = 12;
          var v2651 = 22;
          if (v2651 >= 13) {
            v2651 = 30;
          }
          const vNumber14 = Number(v2649[1]);
          if (136 == 33) {
            143;
          }
          const v2652 = Math.abs(f71(vNumber14));
          var v2653 = 172;
          var v2654 = 175;
          if (v2654 == 3) {
            v2654 = 99;
          }
          if (248 <= 178) {
            161;
          }
          if (v2653 === 4) {
            v2653 = 231;
          }
          if (49 >= 150) {
            211;
          }
          v2885.ⵠⲆⵠᐃⵠⲆΔ = v2650 + v2652;
          v2885.ᐃⲆⲆⲆΔⲆΔ = v2652;
        }
        var v2655 = 156;
        if (v2655 == 1) {
          v2655 = 93;
        }
        {
          const v2656 = p1666[1].split("_");
          var v2657 = 188;
          var v2658 = 197;
          130 .ⲆⵠᐃᐃⲆⲆΔⲆⵠ = 13;
          if (v2658 === 1) {
            v2658 = 221;
          }
          if (122 < 197) {
            175;
          }
          if (247 >= 179) {
            80;
          }
          if (v2657 == 13) {
            v2657 = 200;
          }
          const v2659 = 141;
          const v2660 = 162;
          Math.floor(141[v2659.ΔᐃΔⵠⵠⲆΔ]);
          Math.floor(162[v2660.ⵠⵠⲆΔᐃⲆⲆ]);
          const v2661 = v2656[0] + "_";
          if (210 === 224) {
            92;
          }
          const vNumber15 = Number(v2656[1]);
          var v2662 = 80;
          if (v2662 === 3) {
            v2662 = 198;
          }
          var v2663 = 164;
          if (v2663 === 8) {
            v2663 = 113;
          }
          const v2664 = 200;
          Math.floor(200[v2664.ΔⲆⲆΔᐃᐃᐃ]);
          const v2665 = Math.abs(f11(vNumber15));
          var v2666 = 249;
          if (201 > 201) {
            5;
          }
          var v2667 = 75;
          if (v2667 == 8) {
            v2667 = 216;
          }
          if (v2666 === 12) {
            v2666 = 181;
          }
          if (150 >= 185) {
            126;
          }
          if (80 == 227) {
            48;
          }
          if (76 < 28) {
            237;
          }
          ({}).ⲆΔΔⲆΔΔⲆⵠⲆ = 9;
          if (236 === 176) {
            26;
          }
          v2885.ᐃᐃΔⵠⲆΔⲆ = v2661 + v2665;
          if (209 > 250) {
            204;
          }
          v2885.ⲆᐃⲆⲆᐃᐃⵠᐃⲆ = v2665;
        }
        {
          const v2668 = 218;
          Math.floor(218[v2668.ⵠⲆᐃⲆᐃΔᐃ]);
          if (188 == 139) {
            156;
          }
          const v2669 = p1666[2].split("_");
          const v2670 = v2669[0] + "_";
          const vNumber16 = Number(v2669[1]);
          const v2671 = Math.abs(f11(vNumber16));
          v2885.ⵠΔⵠⵠᐃⲆⵠ = v2670 + v2671;
          v2885.ᐃⲆⵠᐃᐃⵠΔⲆⲆ = v2671;
          if (12 == 59) {
            41;
          }
          let v2672 = 224;
          var v2673 = 104;
          if (v2673 >= 10) {
            v2673 = 187;
          }
          const v2674 = 196;
          if (72 < 135) {
            25;
          }
          Math.floor(196[v2674.ⵠⲆΔⵠⲆᐃⵠ]);
          v2672.ⲆᐃⵠⲆⲆΔᐃᐃⵠ = 1;
        }
        f493(p1663);
        var v2675 = 76;
        if (v2675 == 7) {
          v2675 = 122;
        }
      }, function () {
        if (v2639 !== 1) {
          if (p1664 === 1) {
            v2639 = 1;
            p1663();
            return;
          } else {
            vThis.waiting = vVV3153;
            return;
          }
        }
      });
    };
    this.ᐃⲆⵠⵠⲆᐃᐃ = function () {
      if (vVVVV316 === vThis.waiting) {
        v2885.reconnect.enabled = vV31;
        vThis.waiting = vVV306;
        vThis.ᐃⲆⲆᐃⵠΔΔ(f495);
      }
    };
    var v2676 = 1;
    var v2677 = 2;
    var v2678 = 4;
    var v2679 = 8;
    var v2680 = 16;
    var v2681 = 32;
    var v2682 = 0;
    var v2683 = 1;
    if (vWindow.innerWidth < 1300) {
      this.ΔΔΔⲆⲆ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2683,
        position: v2678 | v2676,
        view: v2608,
        translate: {
          ⵠⵠᐃΔΔ: 184,
          ⵠⵠⲆᐃⲆ: 200,
          x: 0,
          y: 0
        }
      };
    } else {
      this.ΔΔΔⲆⲆ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2683,
        position: v2678 | v2680,
        view: v2608,
        translate: {
          ⵠⵠⲆᐃⲆ: -180,
          x: 0,
          ⵠⵠᐃΔΔ: 184,
          y: 0
        }
      };
    }
    this.ΔΔΔⲆⲆ.id.addEventListener("keyup", function (p1667) {
      p1667.preventDefault();
      if (p1667.keyCode == 13 && !vThis.waiting && !vThis.ⲆⵠⵠⲆᐃⲆᐃᐃⲆ) {
        vThis.ᐃⲆⵠⵠⲆᐃᐃ();
      }
    });
    this.ΔΔΔⲆⲆ.input.value = Δⵠⵠᐃ.get("starve_nickname") ? Δⵠⵠᐃ.get("starve_nickname") : "";
    this.ⲆⵠᐃΔᐃΔᐃΔΔ = {
      id: document.getElementById("account_nickname_block"),
      style: document.getElementById("account_nickname_block").style,
      input: document.getElementById("account_nickname_input"),
      active: v2682,
      position: v2678 | v2680,
      view: v2609,
      translate: {
        x: 0,
        y: 0,
        ⵠⵠⲆᐃⲆ: -122,
        ⵠⵠᐃΔΔ: 110
      }
    };
    if (vWindow.innerWidth < 1300) {
      this.ⲆᐃᐃΔⲆ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2683,
        position: v2678 | v2676,
        view: v2608,
        translate: {
          x: 0,
          ⵠⵠᐃΔΔ: 225,
          y: 0,
          ⵠⵠⲆᐃⲆ: 208
        }
      };
    } else {
      this.ⲆᐃᐃΔⲆ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2683,
        position: v2678 | v2680,
        view: v2608,
        translate: {
          x: 0,
          y: 0,
          ⵠⵠᐃΔΔ: 225,
          ⵠⵠⲆᐃⲆ: -180
        }
      };
    }
    this.ⲆⲆⲆⲆⲆ = {
      id: document.getElementById("leaderboard"),
      style: document.getElementById("leaderboard").style,
      active: v2682,
      position: v2678 | v2680,
      view: v2614,
      translate: {
        y: 0,
        ⵠⵠⲆᐃⲆ: -294.5,
        x: 0,
        ⵠⵠᐃΔΔ: 190
      }
    };
    this.ᐃⲆⵠⲆᐃⲆⵠⵠΔ = {
      id: document.getElementById("stats_box"),
      style: document.getElementById("stats_box").style,
      active: v2682,
      position: v2678 | v2680,
      view: v2609,
      translate: {
        ⵠⵠᐃΔΔ: 187,
        x: 0,
        y: 0,
        ⵠⵠⲆᐃⲆ: 125
      }
    };
    this.ΔᐃⲆⵠΔᐃⲆⵠΔ = {
      id: document.getElementById("serverAddressBlock"),
      style: document.getElementById("serverAddressBlock").style,
      input: document.getElementById("serverAddressInput"),
      active: v2682,
      position: v2678 | v2680,
      view: v2634,
      translate: {
        ⵠⵠᐃΔΔ: 350,
        x: 0,
        ⵠⵠⲆᐃⲆ: -260,
        y: 0
      }
    };
    v2607 = 0;
    this.ΔᐃΔⲆⲆⵠΔ = [];
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ΔΔΔⲆⲆ;
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ⲆᐃᐃΔⲆ;
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ⲆⲆⲆⲆⲆ;
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ⲆⵠᐃΔᐃΔᐃΔΔ;
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ᐃⲆⵠⲆᐃⲆⵠⵠΔ;
    this.ΔᐃΔⲆⲆⵠΔ[v2607++] = this.ΔᐃⲆⵠΔᐃⲆⵠΔ;
    v2607 = 0;
    this.ΔΔⵠⲆ = [];
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ᐃⵠⲆⲆⲆⲆⵠ, v2683, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔᐃⵠΔⲆⲆⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⲆⲆⵠⵠΔⲆΔ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⲆⲆⵠⵠᐃⲆⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⲆⲆᐃⵠΔⲆΔ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⵠΔⲆⵠᐃⲆΔ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔⵠΔⵠⵠΔⲆ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ᐃᐃⵠΔΔⵠⲆ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⵠⵠⲆᐃΔⵠΔ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⵠᐃⵠⲆⵠⵠᐃ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔᐃⲆᐃⲆᐃᐃ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⲆⵠᐃΔⲆⲆᐃ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔΔΔⵠᐃᐃⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⵠΔᐃΔⵠᐃⲆ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ᐃΔΔᐃⲆⵠⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔᐃⵠⵠΔⵠⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ⲆⲆⵠⵠⲆᐃⵠ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔΔᐃᐃᐃΔⲆ, v2682, 0, 0, v2676);
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ᐃⲆⵠⲆΔⵠΔ, v2682, 0, 0, v2676);
    if (vWindow.innerWidth < 1300) {
      this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆⵠⲆΔⲆᐃᐃ, v2683, 200, 100, v2678 | v2676);
    } else {
      this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆⵠⲆΔⲆᐃᐃ, v2683, -753 / 4, 100, v2678 | v2680);
    }
    this.ΔΔⵠⲆ[v2607++].view = v2608;
    this.ΔΔⵠⲆ[v2607++] = f431(ⵠᐃ.ΔⵠᐃⵠⲆⵠᐃ, v2683, 403, -10, v2677);
    if (vWindow.innerWidth > 1300) {
      this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔᐃⵠⲆⵠΔⵠ, v2683, -885 / 4, -159.5, v2679 | v2680);
      this.ΔΔⵠⲆ[v2607++].view = v2608;
    }
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃΔΔⵠⵠⵠΔ, v2682, -323.25, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2609;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠΔⵠᐃΔΔⲆ, v2682, -356.25, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2611;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠⵠⲆⲆᐃΔⲆ, v2682, -905 / 4, 50, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2610;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠΔⵠⲆᐃΔΔ, v2682, -402, 130, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2612;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃⲆⲆΔⵠⵠΔ, v2682, -279.25, 130, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2632;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔᐃΔΔⲆΔᐃ, v2682, -1222 / 4, 130, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2633;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔⵠΔΔΔᐃⵠ, v2682, -305.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2634;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃⲆⲆᐃⲆΔᐃ, v2682, -ⵠᐃ.ᐃⲆⲆᐃⲆΔᐃ.width / 4 - 350, -15, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2635;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆΔⵠᐃᐃⵠᐃ, v2682, -374.25, 110, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2613;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔᐃᐃΔᐃⵠΔ, v2682, -306.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2614;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠⵠⵠᐃᐃΔᐃ, v2682, -345.25, 80, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2615;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠΔᐃΔⵠΔΔ, v2682, -385.5, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2618;
    var v2684 = 3.6;
    var v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2618;
    this.ΔⲆⵠᐃᐃⲆⲆⲆᐃ = function (p1668, p1669, p1670) {
      var v2686;
      vThis.ΔⵠᐃⵠⲆ = 1;
      vThis.ⲆⲆᐃᐃΔⵠⲆ = 0;
      vThis.ⵠᐃΔΔⵠΔⲆ = 0;
      vThis.ΔΔⲆΔⵠⵠᐃ = p1668;
      vThis.ⲆΔᐃⵠⲆⲆᐃ = p1669;
      var v2687 = 0;
      if (p1669 === 0) {
        for (v2687 = 0; ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ.length > v2687 && ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v2687].id !== p1670; v2687++);
        v2686 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ[v2687];
        vThis.unlock.ⵠⲆⲆΔ[v2687] = 1;
      } else if (p1669 === 1) {
        for (v2687 = 0; ᐃⵠᐃⵠ.ΔⲆⲆΔΔ.length > v2687 && ᐃⵠᐃⵠ.ΔⲆⲆΔΔ[v2687].id !== p1670; v2687++);
        v2686 = ᐃⵠᐃⵠ.ΔⲆⲆΔΔ[v2687];
        vThis.unlock.ⲆⲆⵠΔΔ[v2687] = 1;
      } else if (p1669 === 2) {
        for (v2687 = 0; v2687 < ᐃⵠᐃⵠ.ⵠΔΔⵠ.length && ᐃⵠᐃⵠ.ⵠΔΔⵠ[v2687].id !== p1670; v2687++);
        v2686 = ᐃⵠᐃⵠ.ⵠΔΔⵠ[v2687];
        vThis.unlock.ⵠᐃᐃΔⵠ[v2687] = 1;
      } else if (p1669 === 3) {
        for (v2687 = 0; v2687 < ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ.length && p1670 !== ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ[v2687].id; v2687++);
        v2686 = ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ[v2687];
        vThis.unlock.ⵠᐃⵠᐃᐃ[v2687] = 1;
      } else if (p1669 === 4) {
        for (v2687 = 0; v2687 < ᐃⵠᐃⵠ.ⵠⵠΔΔΔ.length && ᐃⵠᐃⵠ.ⵠⵠΔΔΔ[v2687].id !== p1670; v2687++);
        v2686 = ᐃⵠᐃⵠ.ⵠⵠΔΔΔ[v2687];
        vThis.unlock.ΔⲆⵠᐃⲆ[v2687] = 1;
        vThis.unlock.ⵠᐃΔΔΔ[v2687] = 1;
      }
      vThis.ⵠᐃᐃⲆᐃΔΔ = v2687;
      vThis.ΔΔⵠⲆΔΔᐃ = f432("by " + v2686.ᐃⲆΔ, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, vVVVUndefined822, 30, 24, undefined, undefined, vVVVVVUndefined1322, undefined, "#000000", 24);
      vThis.ΔⲆΔⲆᐃⲆⵠ = f432(v2686.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, vVUndefined8, 30, 24, undefined, undefined, vVVVUndefined824, vVVVVUndefined82, "#000000", 20);
    };
    this.ΔⵠᐃⵠⲆ = 0;
    this.ⲆⲆᐃᐃΔⵠⲆ = 0;
    this.ΔΔⲆΔⵠⵠᐃ = 0;
    this.ⲆΔᐃⵠⲆⲆᐃ = 0;
    this.ⵠᐃΔΔⵠΔⲆ = 0;
    this.ΔΔⵠⲆΔΔᐃ = vVVVVVUndefined132;
    this.ΔⲆΔⲆᐃⲆⵠ = undefined;
    var v2688 = 197;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔⲆⵠᐃᐃⲆⲆ, v2682, -385.5, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2622;
    v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2622;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⵠΔⲆᐃⵠΔΔ, v2682, -385.5, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2620;
    v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2620;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆᐃΔⵠⲆᐃⲆ, v2682, -1542 / 4, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2621;
    v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2621;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ΔⵠⲆⵠⲆⲆⲆ, v2682, -385.5, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2619;
    v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2619;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆΔΔⲆⲆᐃⲆ, v2682, -1542 / 4, 150, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2623;
    v2685 = this.ⵠⲆᐃⲆΔᐃᐃ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2684 * 57]]);
    this.ΔΔⵠⲆ[v2607] = f431(v2685, v2682, -v2685.width / 4, 178, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2623;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆⲆⵠΔⲆᐃΔ, v2682, -341.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2624;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃⲆⵠⲆΔⲆΔ, v2682, -341.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2628;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃⲆᐃᐃⵠΔⵠ, v2682, -341.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2626;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃΔᐃⵠΔⵠᐃ, v2682, -341.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2627;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆΔⲆΔΔⲆⲆ, v2682, -1366 / 4, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2625;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆⵠΔⵠⵠΔᐃ, v2682, -341.5, 100, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2629;
    ⵠⵠⵠⲆᐃⲆⲆ = v2607++;
    this.ΔΔⵠⲆ[ⵠⵠⵠⲆᐃⲆⲆ] = f431(ⵠᐃ.ⵠⵠⵠⲆᐃⲆⲆ, v2682, 484, 0, v2678);
    ⵠᐃⲆⵠⲆΔⵠ = v2607++;
    this.ΔΔⵠⲆ[ⵠᐃⲆⵠⲆΔⵠ] = f431(ⵠᐃ.ⵠᐃⲆⵠⲆΔⵠ, v2682, 812.5, 0, v2678);
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.Ⲇⵠᐃⵠᐃᐃⵠ, v2682, -189.5, -5, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2617;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆΔᐃⵠΔᐃΔ, v2682, -189.5, -5, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2616;
    ⵠᐃⵠΔⵠΔⲆ = v2607++;
    this.ΔΔⵠⲆ[ⵠᐃⵠΔⵠΔⲆ] = f431(ⵠᐃ.ᐃⲆⵠΔΔΔᐃ, v2683, 93, 30, v2678);
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ᐃⵠⲆⵠΔⵠⲆ, v2682, -173, 110, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2630;
    this.ΔΔⵠⲆ[v2607] = f431(ⵠᐃ.ⲆⲆᐃΔΔᐃΔ, v2682, -173, 110, v2678 | v2680);
    this.ΔΔⵠⲆ[v2607++].view = v2631;
    v2607 = 0;
    this.buttons = [];
    this.buttons[v2607] = f435(50, 57, 0, [ⵠᐃ.ⲆᐃΔΔⲆᐃⲆ, ⵠᐃ.ⲆΔⲆⵠⲆᐃᐃ, ⵠᐃ.ⲆⲆⵠⵠΔⵠⲆ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f491(v2615);
      } else {
        f491(v2610);
      }
    }, 320, 0, v2676, v2683);
    v2607++;
    if (vWindow.innerWidth < 1300) {
      this.buttons[v2607] = f435(202, 97, 0, [ⵠᐃ.ⲆᐃᐃΔⲆⵠᐃ, ⵠᐃ.ΔᐃⵠⲆᐃⵠⲆ, ⵠᐃ.ΔΔⲆᐃΔΔΔ], 1, 0, this.ᐃⲆⵠⵠⲆᐃᐃ, 462, 235, v2678 | v2676, v2683);
    } else {
      this.buttons[v2607] = f435(202, 97, 0, [ⵠᐃ.ⲆᐃᐃΔⲆⵠᐃ, ⵠᐃ.ΔᐃⵠⲆᐃⵠⲆ, ⵠᐃ.ΔΔⲆᐃΔΔΔ], 1, 0, this.ᐃⲆⵠⵠⲆᐃᐃ, 74, 235, v2678 | v2680, v2683);
    }
    this.buttons[v2607].view = v2608;
    v2607++;
    if (vWindow.innerWidth > 1300) {
      this.buttons[v2607] = f435(355, 168, 0, [ⵠᐃ.ᐃᐃⲆⲆⵠᐃⵠ, ⵠᐃ.ᐃᐃⲆⲆⵠᐃⵠ, ⵠᐃ.ᐃᐃⲆⲆⵠᐃⵠ], 1, 0, function () {
        vWindow.open("./changelog.html", "_blank");
      }, -195, -115, v2679 | v2680, v2683);
      this.buttons[v2607++].view = v2608;
      this.buttons[v2607] = f435(355, 168, 0, [ⵠᐃ.ΔΔⲆΔⵠⵠΔ, ⵠᐃ.ΔΔⲆΔⵠⵠΔ, ⵠᐃ.ΔΔⲆΔⵠⵠΔ], 1, 0, function () {
        vWindow.open("https://taming.io", "_blank");
      }, 20, -115, v2679 | v2680, v2683);
      this.buttons[v2607++].view = v2608;
    }
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ᐃⲆΔⲆⵠΔᐃ, ⵠᐃ.ΔⵠⵠⵠᐃᐃΔ, ⵠᐃ.ᐃᐃᐃⵠⲆⵠᐃ], 1, 0, function () {
      vWindow.open("https://lapamauve.creator-spring.com/", "_blank");
    }, 380, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ⲆⲆᐃⲆΔΔΔ, ⵠᐃ.ᐃⵠΔⲆⲆᐃⲆ, ⵠᐃ.ⵠᐃᐃᐃᐃⵠⵠ], 1, 0, function () {
      vWindow.open("https://discord.gg/starveio", "_blank");
    }, 330, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ⲆᐃΔΔΔⵠⲆ, ⵠᐃ.ΔΔΔⲆᐃᐃⵠ, ⵠᐃ.ΔΔᐃⲆΔⵠⲆ], 1, 0, function () {
      vWindow.open("https://reddit.com/r/starveio", "_blank");
    }, 280, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ⵠⵠᐃⲆΔⵠⲆ, ⵠᐃ.ᐃⲆⵠΔΔⲆⵠ, ⵠᐃ.ᐃΔⵠᐃⵠⲆᐃ], 1, 0, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, 230, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ⵠΔᐃⲆⵠⵠⵠ, ⵠᐃ.ⲆᐃΔⲆⵠⲆⲆ, ⵠᐃ.ᐃⲆᐃΔⵠⲆΔ], 1, 0, function () {
      vWindow.open("https://www.facebook.com/LapaMauve/", "_blank");
    }, 155, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ΔⵠⲆⵠⲆᐃⵠ, ⵠᐃ.ᐃⲆΔᐃⵠⵠⵠ, ⵠᐃ.ΔΔᐃΔⵠⲆⵠ], 1, 0, function () {
      vWindow.open("https://twitter.com/lapamauve", "_blank");
    }, 105, 10, v2677, v2683);
    this.buttons[v2607++] = f435(80, 80, 0, [ⵠᐃ.ᐃᐃᐃⲆᐃⵠᐃ, ⵠᐃ.ⵠⵠⲆⲆⲆᐃΔ, ⵠᐃ.ⲆᐃⲆⵠΔΔΔ], 1, 0, function () {
      vWindow.open("https://www.youtube.com/@lapamauveofficial", "_blank");
    }, 55, 10, v2677, v2683);
    ⵠΔΔΔΔⵠᐃ = v2607++;
    this.buttons[ⵠΔΔΔΔⵠᐃ] = f435(232, 142, 0, [ⵠᐃ.ⲆⲆⵠᐃᐃΔⵠ, ⵠᐃ.ⲆⲆΔⵠᐃⲆΔ, ⵠᐃ.ⲆⵠΔΔⵠΔᐃ], 1, 0, function () {
      f491(v2614);
      f537(v2883.ΔⲆⲆᐃⵠΔⲆ, v2883.ᐃⲆᐃΔⲆⲆᐃ, v2883.ⵠⲆⲆⵠⲆΔⵠ, v2883.ᐃⲆΔⲆⵠᐃΔ);
    }, -5, 573, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ΔⲆⲆⵠⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⵠΔΔ], 1, 1, function () {
      f491(v2614);
    }, -5, 566, v2676, v2683);
    ⲆΔⲆᐃΔⲆΔ = v2607++;
    this.buttons[ⲆΔⲆᐃΔⲆΔ] = f435(236, 165, 0, [ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ, ⵠᐃ.ᐃΔΔΔΔΔⵠ, ⵠᐃ.ᐃΔⵠⵠⵠᐃⵠ], 1, 0, function () {
      f491(v2613);
    }, -5, 494, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ᐃⵠΔΔⵠᐃⵠ, ⵠᐃ.ᐃⵠΔΔⵠᐃⵠ, ⵠᐃ.ᐃⵠΔΔⵠᐃⵠ], 1, 1, function () {
      f491(v2613);
    }, -5, 494, v2676, v2683);
    ΔⲆᐃⲆᐃΔⲆ = v2607++;
    this.buttons[ΔⲆᐃⲆᐃΔⲆ] = f435(236, 165, 0, [ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ, ⵠᐃ.ᐃΔΔΔΔΔⵠ, ⵠᐃ.ᐃΔⵠⵠⵠᐃⵠ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        if (v2883.ⲆⵠⵠⲆⵠᐃᐃ - Date.now() > 0) {
          f491(v2634);
        } else {
          f491(v2632);
        }
      } else {
        f491(v2610);
      }
    }, -5, 415, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ΔΔⲆⲆⵠΔⵠ, ⵠᐃ.ΔΔⲆⲆⵠΔⵠ, ⵠᐃ.ΔΔⲆⲆⵠΔⵠ], 1, 1, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        if (v2883.ⲆⵠⵠⲆⵠᐃᐃ - Date.now() > 0) {
          f491(v2634);
        } else {
          f491(v2632);
        }
      } else {
        f491(v2610);
      }
    }, -5, 415, v2676, v2683);
    ⵠᐃΔⵠⵠᐃΔ = v2607++;
    this.buttons[ⵠᐃΔⵠⵠᐃΔ] = f435(236, 165, 0, [ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ, ⵠᐃ.ᐃΔΔΔΔΔⵠ, ⵠᐃ.ᐃΔⵠⵠⵠᐃⵠ], 1, 0, function () {
      f491(v2612);
    }, -5, 336, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ᐃᐃΔⲆᐃⲆⵠ, ⵠᐃ.ᐃᐃΔⲆᐃⲆⵠ, ⵠᐃ.ᐃᐃΔⲆᐃⲆⵠ], 1, 1, function () {
      f491(v2612);
    }, -5, 336, v2676, v2683);
    ⵠⵠᐃΔⲆⲆΔ = v2607++;
    this.buttons[ⵠⵠᐃΔⲆⲆΔ] = f435(236, 165, 0, [ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ, ⵠᐃ.ᐃΔΔΔΔΔⵠ, ⵠᐃ.ᐃΔⵠⵠⵠᐃⵠ], 1, 0, function () {
      f491(v2611);
    }, -5, 257, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ᐃΔᐃΔⵠᐃᐃ, ⵠᐃ.ᐃΔᐃΔⵠᐃᐃ, ⵠᐃ.ᐃΔᐃΔⵠᐃᐃ], 1, 1, function () {
      f491(v2611);
    }, -5, 257, v2676, v2683);
    ΔⲆΔⵠᐃΔⵠ = v2607++;
    this.buttons[ΔⲆΔⵠᐃΔⵠ] = f435(236, 165, 0, [ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ, ⵠᐃ.ᐃΔΔΔΔΔⵠ, ⵠᐃ.ᐃΔⵠⵠⵠᐃⵠ], 1, 0, function () {
      f491(v2608);
    }, -5, 178, v2676, v2683);
    this.buttons[v2607++] = f435(236, 165, 0, [ⵠᐃ.ⵠⲆⵠⲆΔᐃⵠ, ⵠᐃ.ⵠⲆⵠⲆΔᐃⵠ, ⵠᐃ.ⵠⲆⵠⲆΔᐃⵠ], 1, 1, function () {
      f491(v2608);
    }, -5, 178, v2676, v2683);
    ΔᐃᐃΔΔΔⵠ = v2607++;
    this.ΔᐃᐃΔΔΔⵠ = ΔᐃᐃΔΔΔⵠ;
    this.buttons[ΔᐃᐃΔΔΔⵠ] = f435(324, 222, 0, [ⵠᐃ.ⲆⲆⲆᐃⲆⵠΔ, ⵠᐃ.ᐃΔⵠⲆᐃⵠᐃ, ⵠᐃ.ⵠⲆᐃⵠⵠⵠᐃ], 1, 0, function () {
      f491(v2610);
    }, 0, 70, v2676, v2683);
    ΔⲆΔⵠⲆΔⲆ = v2607++;
    ⲆᐃᐃⵠᐃⲆⲆ = v2607++;
    this.ΔⲆΔⵠⲆΔⲆ = ΔⲆΔⵠⲆΔⲆ;
    this.ⲆᐃᐃⵠᐃⲆⲆ = ⲆᐃᐃⵠᐃⲆⲆ;
    this.buttons[ΔⲆΔⵠⲆΔⲆ] = f435(324, 222, 0, [ⵠᐃ.ⵠⵠⵠⲆΔⲆⵠ, ⵠᐃ.ⲆⲆᐃΔᐃⵠⲆ, ⵠᐃ.ⲆⲆⵠⵠᐃᐃᐃ], 1, 0, function () {
      f491(v2609);
      f496(-1);
    }, 0, 70, v2676, v2682);
    this.buttons[ⲆᐃᐃⵠᐃⲆⲆ] = f435(324, 222, 0, [ⵠᐃ.ΔᐃⵠⵠⲆΔᐃ, ⵠᐃ.ΔᐃⵠⵠⲆΔᐃ, ⵠᐃ.ΔᐃⵠⵠⲆΔᐃ], 1, 1, function () {
      f491(v2609);
      f496(-1);
    }, 0, 70, v2676, v2682);
    if (v2887.ΔⲆᐃΔⲆᐃΔ === 0) {
      var v2689 = v2607++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2689] = f435(266, 176, 0, [ⵠᐃ.ΔᐃⲆΔᐃⲆⲆ, ⵠᐃ.ⵠⵠΔⵠⲆᐃⵠ, ⵠᐃ.ⵠΔᐃᐃᐃᐃᐃ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(0);
        }, 150, 300, v2676 | v2678, v2683);
      } else {
        this.buttons[v2689] = f435(266, 176, 0, [ⵠᐃ.ΔᐃⲆΔᐃⲆⲆ, ⵠᐃ.ⵠⵠΔⵠⲆᐃⵠ, ⵠᐃ.ⵠΔᐃᐃᐃᐃᐃ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(0);
        }, -340, 100, v2680 | v2678, v2683);
      }
      this.buttons[v2689].view = v2608;
      this.buttons[v2689].hint = 0;
      var v2690 = v2607++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2690] = f435(266, 176, 0, [ⵠᐃ.ⲆⲆⵠΔΔⵠᐃ, ⵠᐃ.ⵠΔΔΔⵠⲆᐃ, ⵠᐃ.ⲆⵠⵠᐃⲆⲆⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(4);
        }, 150, 400, v2676 | v2678, v2683);
      } else {
        this.buttons[v2690] = f435(266, 176, 0, [ⵠᐃ.ⲆⲆⵠΔΔⵠᐃ, ⵠᐃ.ⵠΔΔΔⵠⲆᐃ, ⵠᐃ.ⲆⵠⵠᐃⲆⲆⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(4);
        }, -340, 200, v2680 | v2678, v2683);
      }
      this.buttons[v2690].view = v2608;
      this.buttons[v2690].hint = 0;
      var v2691 = v2607++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2691] = f435(266, 176, 0, [ⵠᐃ.ⲆΔᐃᐃΔⵠⲆ, ⵠᐃ.ᐃΔΔΔⲆΔⵠ, ⵠᐃ.ΔⵠΔⲆⵠⵠⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(6);
        }, 450, 300, v2676 | v2678, v2683);
      } else {
        this.buttons[v2691] = f435(266, 176, 0, [ⵠᐃ.ⲆΔᐃᐃΔⵠⲆ, ⵠᐃ.ᐃΔΔΔⲆΔⵠ, ⵠᐃ.ΔⵠΔⲆⵠⵠⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(6);
        }, -340, 300, v2680 | v2678, v2683);
      }
      this.buttons[v2691].view = v2608;
      this.buttons[v2691].hint = 0;
      var v2692 = v2607++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2692] = f435(266, 176, 0, [ⵠᐃ.ⲆⵠⵠⵠΔⵠⲆ, ⵠᐃ.ⲆΔⲆⵠᐃᐃΔ, ⵠᐃ.ⲆΔΔᐃⵠΔᐃ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(2);
        }, 300, 300, v2676 | v2678, v2683);
      } else {
        this.buttons[v2692] = f435(266, 176, 0, [ⵠᐃ.ⲆⵠⵠⵠΔⵠⲆ, ⵠᐃ.ⲆΔⲆⵠᐃᐃΔ, ⵠᐃ.ⲆΔΔᐃⵠΔᐃ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(2);
        }, 204, 100, v2680 | v2678, v2683);
      }
      this.buttons[v2692].view = v2608;
      this.buttons[v2692].hint = 0;
      var v2693 = v2607++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2693] = f435(266, 176, 0, [ⵠᐃ.ⲆⲆΔᐃΔⲆΔ, ⵠᐃ.Ⲇⵠⵠⵠⵠᐃᐃ, ⵠᐃ.ΔᐃᐃⲆᐃⵠⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(3);
        }, 300, 400, v2676 | v2678, v2683);
      } else {
        this.buttons[v2693] = f435(266, 176, 0, [ⵠᐃ.ⲆⲆΔᐃΔⲆΔ, ⵠᐃ.Ⲇⵠⵠⵠⵠᐃᐃ, ⵠᐃ.ΔᐃᐃⲆᐃⵠⵠ], 1, 0, function () {
          v2887.ᐃⵠᐃᐃᐃⵠΔ(3);
        }, 204, 200, v2680 | v2678, v2683);
      }
      this.buttons[v2693].view = v2608;
      this.buttons[v2693].hint = 0;
      var v2694 = v2607++;
      this.buttons[v2694] = f435(266, 176, 0, [ⵠᐃ.ⵠⲆΔΔⵠⲆⵠ, ⵠᐃ.ΔⵠⵠᐃΔⲆⲆ, ⵠᐃ.ⲆⲆⲆΔⵠΔⵠ], 1, 0, function () {
        v2887.ᐃⵠᐃᐃᐃⵠΔ(7);
      }, vWindow.innerWidth < 1300 ? 450 : 204, vWindow.innerWidth < 1300 ? 400 : 300, (vWindow.innerWidth < 1300 ? v2676 : v2680) | v2678, v2683);
      this.buttons[v2694].view = v2608;
      this.buttons[v2694].hint = 0;
    }
    function f496(p1671, p1672) {
      if (p1672 !== vVVUndefined13) {
        v2883.ⲆᐃⲆⲆⵠⵠΔ = p1672;
        var v2695 = v2883.ⵠⵠⲆᐃⵠⵠΔ[p1672];
        v2883.ⲆΔⲆᐃΔ = v2695.score;
        v2883.ⵠⲆᐃⲆⵠⵠⲆ = v2695.kill;
        v2883.ᐃΔΔᐃⵠᐃⵠ = v2695.death;
        v2883.time = v2695.time;
        v2883.ⵠⵠᐃΔᐃΔΔ = v2695.bestScore;
        v2883.ΔᐃΔⵠⵠΔⲆ = v2695.bestKill;
        v2883.ΔⵠΔᐃⲆΔΔ = v2695.bestTime;
        v2883.ᐃΔΔΔΔΔΔ = v2695.scoreTotal;
      }
      if (p1671 === vVUndefined) {
        p1671 = v2883.ᐃΔΔⲆᐃᐃΔ;
      }
      v2883.ᐃΔΔⲆᐃᐃΔ = p1671;
      if (p1671 >= 0) {
        document.getElementById("stats_box_time").innerHTML = v2883.ΔⵠΔᐃⲆΔΔ[p1671];
        document.getElementById("stats_box_kill").innerHTML = v2883.ΔᐃΔⵠⵠΔⲆ[p1671];
        document.getElementById("stats_box_score").innerHTML = v2883.ⵠⵠᐃΔᐃΔΔ[p1671];
      } else {
        var v2696 = 0;
        for (var v2697 = 0; v2883.ⵠⲆᐃⲆⵠⵠⲆ.length > v2697; v2697++) {
          v2696 += v2883.ⵠⲆᐃⲆⵠⵠⲆ[v2697];
        }
        var v2698 = 0;
        for (v2697 = 0; v2883.time.length > v2697; v2697++) {
          v2698 += v2883.time[v2697];
        }
        document.getElementById("stats_box_time").innerHTML = v2698;
        document.getElementById("stats_box_kill").innerHTML = v2696;
        document.getElementById("stats_box_score").innerHTML = v2883.ⲆΔⲆᐃΔ;
      }
    }
    this.buttons[v2607] = f435(87, 78, 0, [ⵠᐃ.ᐃΔⵠⵠⲆᐃⲆ, ⵠᐃ.ⲆⵠⵠΔⲆᐃᐃ, ⵠᐃ.ⵠⲆⵠⲆΔⲆᐃ], 1, 0, function () {
      v2883.ⲆΔΔⵠᐃⲆⵠⲆⲆ();
      if (v2883.ⲆΔᐃᐃΔΔⲆ === 0) {
        f491(v2631);
      } else {
        f491(v2630);
      }
    }, 127, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    this.buttons[v2607] = f435(87, 78, 0, [ⵠᐃ.ΔⵠᐃⲆⵠⲆⵠ, ⵠᐃ.ΔΔⵠⲆⲆΔⵠ, ⵠᐃ.ⲆᐃΔΔᐃᐃⲆ], 1, 0, function () {
      const v2699 = vWindow.document.createElement("textarea");
      v2699.value = vVUndefined14;
      vWindow.document.body.appendChild(v2699);
      v2699.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2699);
    }, 182, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    this.buttons[v2607] = f435(87, 78, 0, [ⵠᐃ.ⵠΔᐃⵠΔΔᐃ, ⵠᐃ.ⲆΔᐃⲆⵠⵠⵠ, ⵠᐃ.ⲆⵠΔᐃΔⵠΔ], 1, 0, function () {
      if (v3134 === vUndefined5 && vWindow.FB && vWindow.FB.getUserID()) {
        vWindow.FB.logout();
      }
      if (vUndefined5 === v3133 && vUndefined7 !== undefined) {
        vWindow.gapi.auth2.getAuthInstance().signOut();
        vUndefined7 = vVUndefined13;
      }
      vVUndefined14 = undefined;
      vVVVVVUndefined82 = undefined;
      vUndefined5 = undefined;
      v2883.ⲆⲆⵠΔⲆⵠᐃ = 0;
      v2883.ᐃⵠⲆΔΔ = 0;
      v2883.ⲆΔⲆᐃΔ = 0;
      v2883.ΔΔⲆᐃᐃΔⵠ();
      ΔᐃΔⵠᐃΔᐃⲆᐃ();
    }, 255, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    this.buttons[v2607] = f435(58, 64, 0, [ⵠᐃ.ⵠΔΔⲆᐃⵠⲆ, ⵠᐃ.ⲆⵠⵠΔⲆΔⲆ, ⵠᐃ.ⵠᐃⲆΔᐃᐃᐃ], 1, 0, function () {
      f491(v2608);
    }, 189, 118, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2610;
    this.buttons[v2607] = f435(497, 72, 0, [ⵠᐃ.ᐃⵠᐃⵠⵠⵠⲆ, ⵠᐃ.ⲆⵠⵠᐃΔⲆⵠ, ⵠᐃ.ⲆΔΔΔⲆΔⲆ], 1, 0, function () {
      (function () {
        if (v2315) {
          vVVVVVUndefined82 = ⵠⲆⲆ.ΔⵠΔΔΔᐃᐃ(40);
          vUndefined5 = v3135;
          vVUndefined14 = v2315.userId;
          vWindow.ⵠⵠⲆⲆΔΔⵠ();
          return;
        }
        vWindow.gapi.auth2.getAuthInstance().signIn();
      })();
    }, -130, 390, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2610;
    this.buttons[v2607] = f435(497, 72, 0, [ⵠᐃ.ⵠΔᐃⵠⵠⲆⲆ, ⵠᐃ.ⲆⲆΔΔᐃΔᐃ, ⵠᐃ.ⲆⵠⵠⵠΔⲆⵠ], 1, 0, function () {
      vWindow.FB.login(function (p1673) {
        if (p1673.authResponse) {
          vWindow.FB.api("/me", function (p1674) {
            vUndefined5 = v3134;
            vVVVVVUndefined82 = vWindow.FB.getAuthResponse().accessToken;
            f543();
            vWindow.ⵠⵠⲆⲆΔΔⵠ();
          });
        }
      });
    }, -130, 430, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2610;
    ΔᐃᐃΔⲆᐃⵠ = 20000;
    this.ⲆⵠⵠΔᐃΔᐃ = function (p1675) {
      var v2700 = v2883.ⲆⲆΔⲆᐃᐃⵠ(p1675);
      var v2701 = v2700 * v2700 * ΔᐃᐃΔⲆᐃⵠ;
      return (p1675 -= v2701) / ((v2700 + 1) * (v2700 + 1) * ΔᐃᐃΔⲆᐃⵠ - v2701);
    };
    this.ⲆⲆΔⲆᐃᐃⵠ = function (p1676) {
      return Math.floor(Math.sqrt(p1676 / ΔᐃᐃΔⲆᐃⵠ));
    };
    this.ΔᐃⲆⲆΔᐃⵠΔᐃ = function (p1677) {
      v2883.ⵠⵠΔⵠⵠ = v2883.ⲆⲆΔⲆᐃᐃⵠ(p1677);
      v2883.ΔⲆⵠΔⲆⵠᐃ = v2883.ⲆⵠⵠΔᐃΔᐃ(p1677);
      v2883.ΔΔΔⵠᐃⵠΔ = 0;
      v2883.ⲆΔⲆᐃΔ = p1677;
    };
    this.ⵠᐃⲆᐃᐃᐃⲆⲆⵠ = function (p1678) {
      v2883.buttons[v2883.ΔᐃᐃΔΔΔⵠ].info.active = 0;
      v2883.buttons[v2883.ΔⲆΔⵠⲆΔⲆ].info.active = 1;
      v2883.buttons[v2883.ⲆᐃᐃⵠᐃⲆⲆ].info.active = 1;
      r();
      if (p1678.name.indexOf("Starver#") === -1) {
        document.getElementById("account_nickname_input").value = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(p1678.name)));
      } else {
        document.getElementById("account_nickname_input").value = p1678.name;
      }
      v2883.ᐃⵠⲆΔΔ = p1678.bread;
      var v2702 = p1678.seasons;
      var v2703 = v2702[v2702.length - 1];
      v2883.ⵠⵠⲆᐃⵠⵠΔ = v2702;
      vThis.ΔᐃⲆⲆΔᐃⵠΔᐃ(v2703.score);
      v2883.ⲆΔⲆᐃΔ = v2703.score;
      v2883.ⵠⲆᐃⲆⵠⵠⲆ = v2703.kill;
      v2883.ᐃΔΔᐃⵠᐃⵠ = v2703.death;
      v2883.time = v2703.time;
      v2883.ⵠⵠᐃΔᐃΔΔ = v2703.bestScore;
      v2883.ΔᐃΔⵠⵠΔⲆ = v2703.bestKill;
      v2883.ΔⵠΔᐃⲆΔΔ = v2703.bestTime;
      v2883.ᐃΔΔΔΔΔΔ = v2703.scoreTotal;
      v2883.ⲆΔᐃᐃΔΔⲆ = p1678.firstName;
      document.getElementById("serverAddressInput").value = p1678.privateServerRegion + " : " + p1678.privateServer;
      if (v2883.ⲆΔᐃᐃΔΔⲆ === undefined) {
        v2883.ⲆΔᐃᐃΔΔⲆ = 0;
      }
      v2883.ⲆⵠⵠⲆⵠᐃᐃ = Date.now() + p1678.privateServerTime;
      if (Number(p1678.privateServerTime) > 0) {
        v2883.ⲆⵠⵠⲆⵠᐃᐃ = Date.now() + Number(p1678.privateServerTime);
      }
      v2883.ⲆⲆⵠΔⲆⵠᐃ = Date.now() + p1678.kit;
      if (Number(p1678.kit) > 0) {
        v2883.ⲆⲆⵠΔⲆⵠᐃ = Date.now() + Number(p1678.kit);
      }
      var v2704 = ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ;
      for (var v2705 = 0; p1678.skins.length > v2705; v2705++) {
        if ((v2707 = p1678.skins[v2705]) > 0) {
          for (var v2706 = 0; v2704.length > v2706; v2706++) {
            if (v2705 === v2704[v2706].id) {
              vThis.unlock.ⵠⲆⲆΔ[v2706] = 1;
            }
          }
        }
      }
      v2704 = ᐃⵠᐃⵠ.ΔⲆⲆΔΔ;
      v2705 = 0;
      for (; v2705 < p1678.accessories.length; v2705++) {
        if ((v2707 = p1678.accessories[v2705]) > 0) {
          for (v2706 = 0; v2704.length > v2706; v2706++) {
            if (v2705 === v2704[v2706].id) {
              vThis.unlock.ⲆⲆⵠΔΔ[v2706] = 1;
            }
          }
        }
      }
      v2704 = ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ;
      v2705 = 0;
      for (; p1678.books.length > v2705; v2705++) {
        var v2707 = p1678.books[v2705];
        if (v2707 > 0) {
          for (v2706 = 0; v2704.length > v2706; v2706++) {
            if (v2704[v2706].id === v2705) {
              vThis.unlock.ⵠᐃⵠᐃᐃ[v2706] = 1;
            }
          }
        }
      }
      v2704 = ᐃⵠᐃⵠ.ⵠΔΔⵠ;
      v2705 = 0;
      for (; p1678.bags.length > v2705; v2705++) {
        if ((v2707 = p1678.bags[v2705]) > 0) {
          for (v2706 = 0; v2706 < v2704.length; v2706++) {
            if (v2705 === v2704[v2706].id) {
              vThis.unlock.ⵠᐃᐃΔⵠ[v2706] = 1;
            }
          }
        }
      }
      v2704 = ᐃⵠᐃⵠ.ⵠⵠΔΔΔ;
      v2705 = 0;
      for (; v2705 < p1678.crates.length; v2705++) {
        v2707 = p1678.crates[v2705];
        if (v2707 > 0) {
          for (v2706 = 0; v2706 < v2704.length; v2706++) {
            if (v2705 === v2704[v2706].id) {
              vThis.unlock.ΔⲆⵠᐃⲆ[v2706] = 1;
              vThis.unlock.ⵠᐃΔΔΔ[v2706] = 1;
            }
          }
        }
      }
    };
    this.ᐃᐃᐃᐃⲆⲆΔᐃⲆ = function () {
      vWindow.ⵠⵠⲆⲆΔΔⵠ = function () {
        f491(v2608);
        (function (p1679) {
          var v2708 = new XMLHttpRequest();
          v2708.open("GET", v3131 + "login?token=" + vVVVVVUndefined82 + "&type=" + vUndefined5 + (v2315 ? "&userId=" + v2315.userId + "&userInfo=" + v2315.userInfo : ""));
          v2708.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2708.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200 && v2708.responseText !== "0") {
              p1679(JSON.parse(v2708.responseText));
            }
          };
          v2708.send();
        })(vThis.ⵠᐃⲆᐃᐃᐃⲆⲆⵠ);
      };
      if (v3136 === 1) {
        vWindow.ⵠⵠⲆⲆΔΔⵠ();
      }
    };
    vWindow.ΔᐃΔⵠᐃΔᐃⲆᐃ = function () {
      v2883.buttons[v2883.ΔᐃᐃΔΔΔⵠ].info.active = 1;
      v2883.buttons[v2883.ΔⲆΔⵠⲆΔⲆ].info.active = 0;
      v2883.buttons[v2883.ⲆᐃᐃⵠᐃⲆⲆ].info.active = 0;
      f491(v2608);
    };
    this.ⲆᐃᐃⵠΔ = function () {
      return v2883.buttons[v2883.ΔⲆΔⵠⲆΔⲆ].info.active;
    };
    this.buttons[v2607] = f435(461, 105, 0, [ⵠᐃ.ⵠΔΔⵠⲆΔⲆ, ⵠᐃ.ᐃⲆᐃⵠΔⵠⲆ, ⵠᐃ.ᐃᐃᐃⲆⲆᐃᐃ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f491(v2615);
      } else {
        f491(v2610);
      }
    }, -100, 80, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(157, 158, 0, [ⵠᐃ.ᐃⵠᐃΔⲆⲆΔ, ⵠᐃ.ⵠΔⲆⵠⵠⲆΔ, ⵠᐃ.ⲆⵠⲆΔⵠⲆⲆ], 1, 0, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, -35, 125, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2613;
    this.buttons[v2607] = f435(66, 73, 0, [ⵠᐃ.ΔᐃⵠᐃⲆᐃⵠ, ⵠᐃ.ⵠᐃᐃᐃΔΔΔ, ⵠᐃ.ⵠⲆΔⲆⲆⵠⲆ], 1, 0, vVVVUndefined132, -68, 340, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2613;
    this.buttons[v2607] = f435(66, 73, 0, [ⵠᐃ.ⵠⲆΔⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠⲆᐃⲆⲆ, ⵠᐃ.ⵠⲆⲆᐃᐃⵠᐃ], 1, 0, undefined, -30, 340, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2613;
    this.ΔⲆⲆⲆⲆⲆⵠᐃΔ = v2607;
    this.buttons[v2607] = f435(97, 66, 0, [ⵠᐃ.ⵠΔΔᐃⲆΔᐃ, ⵠᐃ.ⵠⵠⵠΔΔⲆⲆ, ⵠᐃ.ⲆᐃⵠⲆⲆⵠᐃ], 1, 0, function () {
      f537(undefined, undefined, v2883.ⵠⲆⲆⵠⲆΔⵠ);
    }, -14, 151, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ᐃⲆⵠᐃⲆⲆⲆ = v2607;
    this.buttons[v2607] = f435(135, 66, 0, [ⵠᐃ.ᐃΔⲆᐃⲆΔⲆ, ⵠᐃ.ⲆⲆᐃΔᐃⲆᐃ, ⵠᐃ.ᐃⵠᐃⵠᐃᐃⲆ], 1, 0, function () {
      f537(vVUndefined8, vVVVVUndefined82, v2883.ᐃⲆⵠᐃⲆⲆⲆ);
    }, 37.5, 151, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ΔΔⵠΔᐃΔⵠ = v2607;
    this.buttons[v2607] = f435(160, 66, 0, [ⵠᐃ.ᐃⲆᐃΔⲆⲆⲆ, ⵠᐃ.ⲆᐃⲆⵠⲆΔⲆ, ⵠᐃ.ⵠⲆⲆⲆⵠⲆᐃ], 1, 0, function () {
      f537(undefined, vVVVUndefined132, v2883.ΔΔⵠΔᐃΔⵠ);
    }, 107.5, 151, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⵠⲆⲆⵠⲆΔⵠ = v2607;
    this.buttons[v2607] = f435(207, 66, 0, [ⵠᐃ.ΔᐃΔᐃⲆᐃⲆ, ⵠᐃ.ⵠᐃⲆⲆⲆⵠᐃ, ⵠᐃ.ΔⵠΔΔⲆᐃΔ], 1, 0, function () {
      f537(vVVUndefined83, undefined, v2883.ⵠⲆⲆⵠⲆΔⵠ);
    }, 190.5, 151, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⲆⲆⵠⲆΔᐃⲆ = v2607;
    this.buttons[v2607] = f435(144, 66, 0, [ⵠᐃ.ᐃΔⵠⵠⵠΔᐃ, ⵠᐃ.ⵠⵠⲆᐃⵠⲆΔ, ⵠᐃ.ᐃᐃⵠⵠᐃⲆᐃ], 1, 0, function () {
      f537(v2883.ⲆⲆⵠⲆΔᐃⲆ);
    }, 103.5, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⵠⵠᐃᐃᐃⵠⲆ = v2607;
    this.buttons[v2607] = f435(124, 66, 0, [ⵠᐃ.ᐃⵠⲆᐃΔᐃΔ, ⵠᐃ.ⵠᐃᐃΔⲆΔᐃ, ⵠᐃ.ΔⲆΔⵠΔⵠᐃ], 1, 0, function () {
      f537(v2883.ⵠⵠᐃᐃᐃⵠⲆ);
    }, 177.5, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ΔⲆⲆᐃⵠΔⲆ = v2607;
    this.buttons[v2607] = f435(104, 66, 0, [ⵠᐃ.ⵠⵠᐃⵠⵠᐃⲆ, ⵠᐃ.ⲆΔᐃᐃⵠⲆⲆ, ⵠᐃ.ⲆⵠᐃΔⲆᐃᐃ], 1, 0, function () {
      f537(v2883.ΔⲆⲆᐃⵠΔⲆ);
    }, 242, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⵠΔⵠΔⲆΔⵠ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⲆⲆΔⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃᐃⲆ, ⵠᐃ.ⵠⲆᐃⵠᐃΔᐃ], 1, 0, function () {
      f537(undefined, undefined, vVVVUndefined823, v2883.ⵠΔⵠΔⲆΔⵠ);
    }, -185, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⲆⲆΔⲆᐃᐃⲆ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⵠᐃᐃΔⵠⲆᐃ, ⵠᐃ.ᐃⵠΔᐃᐃΔᐃ, ⵠᐃ.ΔⵠᐃⲆᐃⲆⵠ], 1, 0, function () {
      f537(vVVVVVUndefined1322, vUndefined, vVVVUndefined132, v2883.ⲆⲆΔⲆᐃᐃⲆ);
    }, -149, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ΔΔᐃΔⵠΔⵠ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔⲆⵠⲆᐃΔⵠ, ⵠᐃ.ⵠΔⲆΔⵠΔⲆ, ⵠᐃ.ⲆⵠᐃᐃⲆⲆᐃ], 1, 0, function () {
      f537(vVVVUndefined823, vVVUndefined132, undefined, v2883.ΔΔᐃΔⵠΔⵠ);
    }, -113, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⵠⵠᐃΔⲆΔⵠ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⲆΔⲆⵠⵠⲆⵠ, ⵠᐃ.ΔᐃᐃΔⲆⵠⵠ, ⵠᐃ.ⵠΔᐃΔⲆⲆⵠ], 1, 0, function () {
      f537(undefined, vVUndefined8, vVUndefined8, v2883.ⵠⵠᐃΔⲆΔⵠ);
    }, -77, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ᐃⵠᐃᐃⵠΔⵠ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ᐃΔΔⲆⲆᐃΔ, ⵠᐃ.ⲆᐃᐃⲆⲆΔⲆ, ⵠᐃ.ⵠⵠᐃⲆᐃⵠⲆ], 1, 0, function () {
      f537(vVVVVVUndefined1322, undefined, vVVVVUndefined132, v2883.ᐃⵠᐃᐃⵠΔⵠ);
    }, -41, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⲆⲆⵠⵠⵠΔⲆ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔⲆⲆᐃᐃⵠΔ, ⵠᐃ.ᐃⵠΔⲆⵠΔᐃ, ⵠᐃ.ΔⵠᐃⵠᐃⵠΔ], 1, 0, function () {
      f537(vVVVUndefined82, undefined, vVVVVUndefined824, v2883.ⲆⲆⵠⵠⵠΔⲆ);
    }, -5, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ᐃⲆΔⲆⵠᐃΔ = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔΔᐃᐃΔΔΔ, ⵠᐃ.ⲆᐃⵠΔΔΔᐃ, ⵠᐃ.ⲆᐃΔⲆⵠⵠⵠ], 1, 0, function () {
      f537(undefined, vVVVUndefined13, vVVUndefined82, v2883.ᐃⲆΔⲆⵠᐃΔ);
    }, 25, 528, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.buttons[v2607] = f435(232, 352, 0, [ⵠᐃ.ᐃⲆⵠⵠⵠⵠᐃ, ⵠᐃ.ⲆⲆⵠⲆⲆᐃᐃ, ⵠᐃ.ⲆᐃᐃΔⲆⲆⲆ], 1, 0, function () {
      f539(300);
    }, -330, 135, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(232, 352, 0, [ⵠᐃ.ⲆΔⵠᐃⲆⲆⵠ, ⵠᐃ.ⵠⲆΔⵠⵠΔᐃ, ⵠᐃ.ΔᐃⵠᐃⵠΔⲆ], 1, 0, function () {
      f539(600);
    }, -195, 135, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(243, 374, 0, [ⵠᐃ.ΔⲆⲆⵠΔΔΔ, ⵠᐃ.ⲆᐃⲆΔᐃⵠΔ, ⵠᐃ.ⲆⲆⵠⲆⲆⵠΔ], 1, 0, function () {
      f539(2600);
    }, -60, 130, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(232, 352, 0, [ⵠᐃ.ⲆᐃΔᐃⲆᐃⵠ, ⵠᐃ.ⵠΔΔⲆⲆΔⵠ, ⵠᐃ.ⲆⲆⲆΔᐃⲆⵠ], 1, 0, function () {
      f539(7000);
    }, 78, 135, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(243, 374, 0, [ⵠᐃ.ΔᐃⲆΔⵠΔΔ, ⵠᐃ.ⵠⵠⵠᐃᐃΔⵠ, ⵠᐃ.ⵠⵠⵠᐃⵠᐃⵠ], 1, 0, function () {
      f539(20000);
    }, 213, 130, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(58, 64, 0, [ⵠᐃ.ⵠΔΔⲆᐃⵠⲆ, ⵠᐃ.ⲆⵠⵠΔⲆΔⲆ, ⵠᐃ.ⵠᐃⲆΔᐃᐃᐃ], 1, 0, function () {
      f491(v2612);
    }, 300, 88, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2615;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ⵠᐃΔΔⵠⵠⲆ, ⵠᐃ.ᐃⵠⵠⵠⵠΔⵠ, ⵠᐃ.ⵠᐃΔᐃΔⵠⵠ], 1, 0, function () {
      f491(v2624);
      v2715.ᐃΔᐃᐃᐃⵠΔ();
    }, -315, 185, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ⲆᐃᐃⲆᐃᐃⵠ, ⵠᐃ.ΔⲆᐃᐃΔⵠᐃ, ⵠᐃ.ΔᐃᐃᐃᐃᐃΔ], 1, 0, function () {
      f491(v2628);
      v2720.ᐃΔᐃᐃᐃⵠΔ();
    }, -315, 321, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ⵠⵠⲆⲆΔᐃⵠ, ⵠᐃ.ᐃΔΔᐃᐃⵠⵠ, ⵠᐃ.ΔⵠᐃⵠΔᐃⲆ], 1, 0, function () {
      f491(v2626);
      v2716.ᐃΔᐃᐃᐃⵠΔ();
    }, 153, 185, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ᐃⲆⵠⵠΔΔᐃ, ⵠᐃ.ᐃᐃⵠΔΔⵠΔ, ⵠᐃ.ΔΔᐃⵠΔⲆΔ], 1, 0, function () {
      f491(v2627);
      v2717.ᐃΔᐃᐃᐃⵠΔ();
    }, 153, 321, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ΔⵠΔⲆⵠΔᐃ, ⵠᐃ.ΔᐃⵠⲆᐃᐃᐃ, ⵠᐃ.ᐃᐃⲆⲆᐃᐃⲆ], 1, 0, function () {
      f491(v2625);
      v2718.ᐃΔᐃᐃᐃⵠΔ();
    }, 153, 463, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(323, 112, 0, [ⵠᐃ.ᐃΔⵠⵠⵠᐃᐃ, ⵠᐃ.ΔⲆⲆⵠⵠᐃⲆ, ⵠᐃ.ΔⵠⲆⵠⵠⵠᐃ], 1, 0, function () {
      f491(v2629);
      v2719.ᐃΔᐃᐃᐃⵠΔ();
    }, -315, 463, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2611;
    this.buttons[v2607] = f435(327, 117, 0, [ⵠᐃ.ⲆⲆΔΔᐃⵠⵠ, ⵠᐃ.ⵠᐃΔᐃⲆⵠⵠ, ⵠᐃ.ⲆΔⵠⲆⲆᐃΔ], 1, 0, function () {
      f491(v2635);
    }, 155, 70, v2676, v2683);
    this.buttons[v2607++].view = v2608;
    this.buttons[v2607] = f435(130, 129, 0, [ⵠᐃ.ⵠⵠΔⲆᐃΔⵠ, ⵠᐃ.ⲆΔᐃⲆⵠΔⲆ, ⵠᐃ.ⲆᐃᐃⵠⵠΔⲆ], 1, 0, function () {
      f490(v2616, v2682, "none");
      f491(v2612);
    }, 10, 40, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2616;
    this.buttons[v2607] = f435(130, 129, 0, [ⵠᐃ.ⵠⵠΔⲆᐃΔⵠ, ⵠᐃ.ⲆΔᐃⲆⵠΔⲆ, ⵠᐃ.ⲆᐃᐃⵠⵠΔⲆ], 1, 0, function () {
      f490(v2617, v2682, "none");
      f491(v2612);
    }, 10, 40, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2617;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 200, 140, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(524, 110, 0, [ⵠᐃ.ⲆⲆⵠΔΔⲆⲆ, ⵠᐃ.ΔΔⵠΔΔⵠᐃ, ⵠᐃ.ᐃᐃⵠᐃⵠⲆᐃ], 1, 0, function () {
      f538("Atlanta");
    }, -265, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(523, 110, 0, [ⵠᐃ.ⲆⲆᐃᐃⵠⵠⵠ, ⵠᐃ.ΔⵠᐃⲆᐃⵠⲆ, ⵠᐃ.ΔᐃⲆΔΔⲆⲆ], 1, 0, function () {
      f538("LosAngeles");
    }, 5, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(344, 110, 0, [ⵠᐃ.ⲆⵠⲆⵠⲆⲆΔ, ⵠᐃ.ⲆΔᐃΔΔⲆΔ, ⵠᐃ.ᐃⲆⵠⵠᐃΔⵠ], 1, 0, function () {
      f538("Frankfurt");
    }, -265, 365, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(344, 110, 0, [ⵠᐃ.ⲆᐃᐃΔⵠᐃΔ, ⵠᐃ.ᐃⲆⲆⵠⵠⵠΔ, ⵠᐃ.ΔΔᐃⲆΔΔΔ], 1, 0, function () {
      f538("Osaka");
    }, 100, 365, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(344, 110, 0, [ⵠᐃ.ᐃⵠΔⲆΔⵠᐃ, ⵠᐃ.ᐃⵠⵠᐃᐃΔⲆ, ⵠᐃ.ⲆⵠᐃⲆⵠΔᐃ], 1, 0, function () {
      f538("Sydney");
    }, -86, 365, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2632;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2632);
    }, 224, 140, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2633;
    this.buttons[v2607] = f435(230, 352, 0, [ⵠᐃ.ΔⲆᐃⵠᐃⵠᐃ, ⵠᐃ.ⲆᐃⵠⲆΔⵠΔ, ⵠᐃ.ⲆⲆⵠΔᐃⲆΔ], 1, 0, function () {
      f539(350);
    }, -280, 240, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2633;
    this.buttons[v2607] = f435(230, 352, 0, [ⵠᐃ.ⵠⲆᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔᐃⵠᐃΔᐃ, ⵠᐃ.ΔΔⲆᐃΔⵠᐃ], 1, 0, function () {
      f539(700);
    }, -130, 240, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2633;
    this.buttons[v2607] = f435(230, 352, 0, [ⵠᐃ.ᐃΔΔⵠΔⵠⵠ, ⵠᐃ.ΔᐃΔⲆᐃᐃᐃ, ⵠᐃ.ⲆΔⲆⵠⲆⵠΔ], 1, 0, function () {
      f539(1400);
    }, 20, 240, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2633;
    this.buttons[v2607] = f435(230, 352, 0, [ⵠᐃ.ⲆⲆⵠᐃᐃⵠⲆ, ⵠᐃ.ᐃᐃᐃᐃⵠⵠⵠ, ⵠᐃ.ⲆⵠⵠΔᐃⵠᐃ], 1, 0, function () {
      f539(3000);
    }, 170, 240, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2633;
    this.buttons[v2607] = f435(105, 119, 0, [ⵠᐃ.ⲆⵠⵠΔⵠᐃΔ, ⵠᐃ.ᐃΔⲆΔᐃᐃΔ, ⵠᐃ.ᐃᐃΔⲆΔΔᐃ], 1, 0, function () {
      const v2709 = document.getElementById("serverAddressInput").value.split(" : ");
      const v2710 = vWindow.document.createElement("textarea");
      v2710.value = v2319 + "?server=" + v2709[1] + "&region=" + v2709[0];
      vWindow.document.body.appendChild(v2710);
      v2710.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2710);
    }, 105, 310, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2634;
    this.buttons[v2607] = f435(105, 119, 0, [ⵠᐃ.ΔⲆᐃΔᐃⵠⲆ, ⵠᐃ.ⵠⲆΔⲆΔⲆⲆ, ⵠᐃ.ΔΔⵠᐃⲆⲆΔ], 1, 0, function () {
      (function () {
        var v2711 = new XMLHttpRequest();
        v2711.open("GET", v3131 + "rebootServer?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14);
        v2711.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2711.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2711.responseText !== "0") {
            const v2712 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2319 + "?server=" + v2712[1] + "&region=" + v2712[0];
          }
        };
        v2711.send();
      })();
    }, 235, 310, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2634;
    this.buttons[v2607] = f435(105, 119, 0, [ⵠᐃ.ΔΔⵠⵠⵠᐃᐃ, ⵠᐃ.ⲆΔΔⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔᐃⲆᐃᐃ], 1, 0, function () {
      (function () {
        var v2713 = new XMLHttpRequest();
        v2713.open("GET", v3131 + "restartServer?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14);
        v2713.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2713.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2713.responseText !== "0") {
            const v2714 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2319 + "?server=" + v2714[1] + "&region=" + v2714[0];
          }
        };
        v2713.send();
      })();
    }, 170, 310, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2634;
    this.buttons[v2607] = f435(204, 115, 0, [ⵠᐃ.ⲆΔΔᐃⲆⵠΔ, ⵠᐃ.ΔⵠⲆᐃⵠΔᐃ, ⵠᐃ.ΔⲆᐃⲆΔⲆⲆ], 1, 0, function () {
      vWindow.open("./commands.html", "_blank");
    }, -265, 490, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2634;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ᐃⵠᐃΔᐃᐃΔ, ⵠᐃ.ΔⲆⵠⵠⲆⲆΔ, ⵠᐃ.ΔⲆᐃΔΔΔⲆ], 1, 0, function () {
      f491(v2618);
    }, -210, 170, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ΔᐃᐃᐃⵠΔⵠ, ⵠᐃ.ᐃΔⲆΔΔᐃΔ, ⵠᐃ.ᐃⵠᐃⲆⵠⵠⵠ], 1, 0, function () {
      f491(v2621);
    }, 70, 170, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ΔⵠΔⵠᐃᐃⲆ, ⵠᐃ.ⲆⲆᐃᐃⵠΔⵠ, ⵠᐃ.ΔⲆⵠΔΔⵠⲆ], 1, 0, function () {
      f491(v2619);
    }, 70, 204, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ⲆⲆᐃᐃᐃⲆⵠ, ⵠᐃ.ⵠΔΔᐃⵠΔΔ, ⵠᐃ.ⲆᐃᐃⵠΔΔΔ], 1, 0, function () {
      f491(v2622);
    }, -210, 204, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ⲆⲆᐃᐃᐃⲆⵠ, ⵠᐃ.ⵠΔΔᐃⵠΔΔ, ⵠᐃ.ⲆᐃᐃⵠΔΔΔ], 1, 0, function () {
      f491(v2623);
    }, 70, 238, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ⲆⲆᐃᐃᐃⲆⵠ, ⵠᐃ.ⵠΔΔᐃⵠΔΔ, ⵠᐃ.ⲆᐃᐃⵠΔΔΔ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f542(0, 300);
      } else {
        f491(v2610);
      }
    }, 307, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ⵠΔⲆⲆⲆⲆⲆ, ⵠᐃ.ΔⲆΔⲆΔΔⲆ, ⵠᐃ.ⲆⵠⲆⵠᐃⲆⵠ], 1, 0, function () {
      f491(v2620);
    }, -210, 238, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(145, 69, 0, [ⵠᐃ.ⵠΔⲆⲆⲆⲆⲆ, ⵠᐃ.ΔⲆΔⲆΔΔⲆ, ⵠᐃ.ⲆⵠⲆⵠᐃⲆⵠ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f542(1, 600);
      } else {
        f491(v2610);
      }
    }, 307, 239, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    this.buttons[v2607] = f435(192, 101, 0, [ⵠᐃ.ⲆⵠⲆᐃⲆⵠⲆ, ⵠᐃ.ⵠⵠΔᐃⵠᐃΔ, ⵠᐃ.ᐃⵠᐃⵠᐃⵠⵠ], 1, 0, function () {
      f541();
    }, -100, 250, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2631;
    this.buttons[v2607] = f435(192, 104, 0, [ⵠᐃ.ᐃⵠᐃᐃⵠⲆⵠ, ⵠᐃ.ⲆΔᐃΔⲆΔᐃ, ⵠᐃ.ⲆⲆΔᐃⲆⲆⲆ], 1, 0, function () {
      f541();
    }, -100, 239, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2630;
    this.buttons[v2607] = f435(192, 101, 0, [ⵠᐃ.ᐃⲆᐃᐃⲆᐃᐃ, ⵠᐃ.ⲆΔⵠⲆᐃⲆΔ, ⵠᐃ.ΔΔΔΔⵠⵠᐃ], 1, 0, function () {
      f491(v2609);
    }, 10, 250, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2631;
    this.buttons[v2607] = f435(192, 104, 0, [ⵠᐃ.ᐃΔᐃΔⲆΔⲆ, ⵠᐃ.ΔⲆⵠᐃΔⲆᐃ, ⵠᐃ.ΔⵠΔⲆΔΔⲆ], 1, 0, function () {
      f491(v2609);
    }, 10, 239, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2630;
    ᐃᐃΔⲆⵠⵠᐃ = [];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ⵠᐃⲆᐃᐃ] = [ⵠᐃ.ⵠⵠⲆᐃᐃⵠᐃ, ⵠᐃ.ⵠᐃᐃΔⲆⵠΔ, ⵠᐃ.ⵠⲆⵠⲆⲆΔⲆ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ⵠⵠᐃΔ] = [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ⵠⵠⲆⲆ] = [ⵠᐃ.ⲆᐃΔⲆΔΔΔ, ⵠᐃ.ᐃΔⲆⵠᐃᐃⲆ, ⵠᐃ.ⲆⵠⵠⲆᐃⲆΔ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ⵠᐃⵠᐃ] = [ⵠᐃ.ΔⲆⵠᐃΔⵠⲆ, ⵠᐃ.ᐃᐃᐃΔᐃⵠΔ, ⵠᐃ.ᐃⵠᐃⵠⲆⲆᐃ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ⵠᐃⲆⵠ] = [ⵠᐃ.ⲆᐃᐃΔⵠⲆⲆ, ⵠᐃ.ᐃᐃⵠΔΔᐃᐃ, ⵠᐃ.ΔⵠΔⲆᐃⲆⲆ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ΔⲆⵠΔ] = [ⵠᐃ.ⲆⵠᐃⵠⵠⲆᐃ, ⵠᐃ.ΔᐃᐃΔΔΔⲆ, ⵠᐃ.ΔΔΔⲆΔΔᐃ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ᐃΔᐃΔ] = [ⵠᐃ.ⲆΔΔᐃⵠΔΔ, ⵠᐃ.ΔⵠΔᐃᐃΔⲆ, ⵠᐃ.ᐃⵠⲆⵠᐃᐃΔ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ᐃⵠⲆⲆᐃ] = [ⵠᐃ.ⲆᐃⲆᐃΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔΔΔᐃ, ⵠᐃ.ΔᐃᐃΔⲆⵠⲆ];
    ᐃᐃΔⲆⵠⵠᐃ[ⵠᐃⵠ.ΔᐃⲆΔΔΔᐃ] = [ⵠᐃ.ⵠᐃΔⲆᐃΔⵠ, ⵠᐃ.ᐃᐃΔⲆⲆΔⵠ, ⵠᐃ.ΔⲆᐃᐃΔⲆⲆ];
    ⵠΔⵠⲆᐃᐃⵠ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVUndefined8, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined82, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined13, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, vVVUndefined13, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, vVUndefined8, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2624;
    ΔᐃⲆⵠⲆⵠⲆⲆΔ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVVUndefined1322, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined824, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined822, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined13, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, undefined, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, undefined, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2628;
    ⵠⵠᐃΔⵠᐃⵠΔΔ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVUndefined8, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined132, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined82, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined83, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined82, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined823, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVVUndefined1322, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, vVUndefined13, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, undefined, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2629;
    ᐃΔⲆΔᐃⲆⲆⲆⲆ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined823, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVUndefined8, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined824, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined83, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined132, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, undefined, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, vVVVUndefined824, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2626;
    ⲆᐃᐃΔⵠᐃΔΔᐃ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined82, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined82, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined83, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVVUndefined82, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, vVVVVUndefined132, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, undefined, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2627;
    ΔΔΔⲆⵠⲆᐃⵠᐃ = v2607;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, -29, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined82, -29, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 65, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVVUndefined824, 65, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined13, 65, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVUndefined, 159, 205, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, vVVUndefined83, 159, 300, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(178, 182, 0, [ⵠᐃ.ⲆⵠⵠΔ, ⵠᐃ.ⵠᐃⲆΔ, ⵠᐃ.ΔΔⵠᐃ], 1, 0, undefined, 159, 395, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ⲆⵠΔⵠⲆⵠⲆ, ⵠᐃ.ⲆⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⵠΔⵠⵠᐃᐃΔ], 1, 0, vVVVVUndefined823, -61, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(39, 122, 0, [ⵠᐃ.ΔΔⲆᐃᐃΔⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆΔΔ, ⵠᐃ.ⲆⵠⲆᐃⵠⲆᐃ], 1, 0, vVVVUndefined824, 260, 315, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2611);
    }, -320, 470, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2625;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ᐃᐃⵠⲆⲆⵠᐃ, ⵠᐃ.ΔᐃΔᐃⲆⵠⲆ, ⵠᐃ.ⲆⲆΔⲆᐃⲆⲆ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(3, 50);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2621;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2621;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ⲆᐃΔⵠⲆⲆΔ, ⵠᐃ.ΔⲆΔⲆⵠᐃⲆ, ⵠᐃ.ⵠⵠΔⵠΔΔᐃ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(0, 100);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2618;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2618;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ⵠΔᐃⵠⵠΔⲆ, ⵠᐃ.ΔⵠᐃⲆⵠΔᐃ, ⵠᐃ.ⲆΔᐃⲆΔⵠⲆ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(4, 150);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2619;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2619;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ⵠⵠⲆⲆᐃⵠⵠ, ⵠᐃ.ᐃⵠⵠⲆⲆᐃΔ, ⵠᐃ.ⵠⵠⲆⵠⲆΔΔ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(1, 300);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2622;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2622;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ⲆᐃⵠᐃΔΔⵠ, ⵠᐃ.ⵠⵠᐃᐃΔᐃⵠ, ⵠᐃ.ⲆᐃⲆⵠᐃΔⲆ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(2, 600);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2620;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2620;
    this.buttons[v2607] = f435(260, 260, 0, [ⵠᐃ.ⵠⵠⲆⲆᐃⵠⵠ, ⵠᐃ.ᐃⵠⵠⲆⲆᐃΔ, ⵠᐃ.ⵠⵠⲆⵠⲆΔΔ], 1, 0, function () {
      if (vThis.ⲆᐃᐃⵠΔ()) {
        f540(5, 300);
      } else {
        f491(v2610);
      }
    }, -65, 197, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2623;
    this.buttons[v2607] = f435(115, 73, 0, [ⵠᐃ.ᐃΔⵠΔⲆ, ⵠᐃ.ⵠΔΔΔⲆ, ⵠᐃ.Δᐃⵠⵠⵠ], 1, 0, function () {
      f491(v2612);
    }, 309, 180, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2623;
    var vV2607 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔⲆᐃⲆΔΔᐃ, ⵠᐃ.ᐃⲆΔΔΔⵠⵠ, ⵠᐃ.ΔⵠⲆᐃΔΔⲆ], 1, 0, function () {
      f496(vUndefined, 0);
    }, -305, 132, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26072 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⲆⵠⲆᐃⵠΔⲆ, ⵠᐃ.ⲆⲆΔᐃⲆⵠᐃ, ⵠᐃ.ⲆᐃⵠΔᐃⵠⲆ], 1, 0, function () {
      f496(undefined, 1);
    }, -273, 132, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26073 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⵠᐃᐃⵠⵠⵠⲆ, ⵠᐃ.ΔᐃᐃⵠΔΔᐃ, ⵠᐃ.ΔΔⲆⲆⵠᐃΔ], 1, 0, function () {
      f496(vVVVVUndefined132, 2);
    }, -241, 132, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26074 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ⵠΔᐃⲆⲆᐃΔ, ⵠᐃ.ᐃΔⵠΔΔΔΔ, ⵠᐃ.ΔⵠᐃⲆΔΔⵠ], 1, 0, function () {
      f496(vVVUndefined13, 3);
    }, -305, 165, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26075 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔᐃⲆⵠᐃΔⵠ, ⵠᐃ.ᐃᐃⵠΔⲆΔᐃ, ⵠᐃ.ᐃⵠⲆᐃⲆⲆΔ], 1, 0, function () {
      f496(undefined, 4);
    }, -273, 165, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26076 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ᐃⵠⲆΔⵠⲆΔ, ⵠᐃ.ⲆⵠᐃᐃᐃⵠⲆ, ⵠᐃ.ⲆᐃᐃᐃⲆΔΔ], 1, 0, function () {
      f496(vVVVVUndefined824, 5);
    }, -241, 165, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26077 = v2607;
    this.buttons[v2607] = f435(46, 51, 0, [ⵠᐃ.ΔᐃΔᐃⲆⵠⵠ, ⵠᐃ.ᐃⲆⲆⲆⲆΔⵠ, ⵠᐃ.ⵠⵠΔⲆΔᐃᐃ], 1, 0, function () {
      f496(vVVVVVUndefined132, 6);
    }, -305, 198, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26078 = v2607;
    this.buttons[v2607] = f435(460, 73, 0, [ⵠᐃ.ᐃᐃⲆΔᐃⵠᐃ, ⵠᐃ.ⲆΔΔⲆᐃᐃⲆ, ⵠᐃ.ⵠᐃΔᐃΔⲆⲆ], 1, 0, function () {
      f496(-1);
    }, -180, 170, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV26079 = v2607;
    this.buttons[v2607] = f435(222, 68, 0, [ⵠᐃ.ⵠⲆⲆᐃᐃⲆΔ, ⵠᐃ.ΔΔⲆⵠΔᐃᐃ, ⵠᐃ.ᐃᐃⲆⵠⲆⲆᐃ], 1, 0, function () {
      f496(0);
    }, -180, 215, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV260710 = v2607;
    this.buttons[v2607] = f435(222, 68, 0, [ⵠᐃ.ⲆΔⲆⲆⲆⲆⲆ, ⵠᐃ.ΔⲆᐃᐃΔⵠⵠ, ⵠᐃ.ⲆⵠΔᐃⲆⵠⵠ], 1, 0, function () {
      f496(4);
    }, -180, 260, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV260711 = v2607;
    this.buttons[v2607] = f435(222, 68, 0, [ⵠᐃ.ᐃⲆΔⵠΔⲆⵠ, ⵠᐃ.ΔᐃⲆⵠᐃΔᐃ, ⵠᐃ.ⲆⲆᐃⵠΔΔᐃ], 1, 0, function () {
      f496(2);
    }, -60, 215, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    var vV260712 = v2607;
    this.buttons[v2607] = f435(222, 68, 0, [ⵠᐃ.ⵠᐃⲆΔᐃⵠᐃ, ⵠᐃ.ⵠᐃⲆΔᐃⵠⲆ, ⵠᐃ.ⵠⵠⵠⵠⲆⵠⵠ], 1, 0, function () {
      f496(3);
    }, -60, 260, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2609;
    this.ᐃⲆᐃΔⲆⲆᐃ = v2607;
    this.buttons[v2607] = f435(143, 66, 0, [ⵠᐃ.ᐃᐃⲆⲆⲆΔΔ, ⵠᐃ.ⵠⲆⲆΔⲆⲆᐃ, ⵠᐃ.ᐃⵠΔⵠⲆⲆᐃ], 1, 0, function () {
      f537(undefined, v2883.ᐃⲆᐃΔⲆⲆᐃ);
    }, -298, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⵠⲆᐃⵠΔⲆᐃ = v2607;
    this.buttons[v2607] = f435(104, 66, 0, [ⵠᐃ.ᐃᐃΔΔⵠᐃᐃ, ⵠᐃ.ⲆⲆⵠⵠⲆⲆⵠ, ⵠᐃ.ⵠⲆᐃᐃᐃΔΔ], 1, 0, function () {
      f537(vVUndefined13, v2883.ⵠⲆᐃⵠΔⲆᐃ);
    }, -223, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ᐃᐃᐃⵠᐃⲆⵠ = v2607;
    this.buttons[v2607] = f435(110, 66, 0, [ⵠᐃ.ᐃⵠᐃᐃᐃⲆⵠ, ⵠᐃ.ΔΔΔᐃᐃⵠᐃ, ⵠᐃ.ᐃⵠⲆⵠΔΔⲆ], 1, 0, function () {
      f537(vVVUndefined83, v2883.ᐃᐃᐃⵠᐃⲆⵠ);
    }, -168, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ⲆⲆΔⲆⲆⵠᐃ = v2607;
    this.buttons[v2607] = f435(88, 66, 0, [ⵠᐃ.ΔᐃᐃᐃΔΔⲆ, ⵠᐃ.ΔⵠⲆⲆⲆΔᐃ, ⵠᐃ.ᐃΔᐃⲆⵠᐃΔ], 1, 0, function () {
      f537(undefined, v2883.ⲆⲆΔⲆⲆⵠᐃ);
    }, -110, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.ᐃΔΔⵠⵠⵠⲆ = v2607;
    this.buttons[v2607] = f435(88, 66, 0, [ⵠᐃ.ⵠᐃⵠⵠΔΔΔ, ⵠᐃ.ⲆᐃΔᐃⵠᐃⵠ, ⵠᐃ.ⲆΔᐃⵠΔⵠⵠ], 1, 0, function () {
      f537(vVUndefined13, v2883.ᐃΔΔⵠⵠⵠⲆ);
    }, -63, 110, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2614;
    this.buttons[v2607] = f435(86, 44, 0, [ⵠᐃ.ᐃΔⲆⵠᐃΔⲆ, ⵠᐃ.ᐃⵠᐃΔᐃⲆΔ, ⵠᐃ.ⲆΔⲆⵠΔᐃⲆ], 1, 0, function () {
      vWindow.open("./terms.html", "_blank");
    }, 349, 290, v2680 | v2678, v2682);
    this.buttons[v2607++].view = v2612;
    var v2715 = new o(ᐃⵠᐃⵠ.ⵠⲆⲆⲆⵠ, ⵠΔⵠⲆᐃᐃⵠ, function (p1680) {
      v2883.ⵠⲆⲆΔ = p1680;
      if (v2883.unlock.ⵠⲆⲆΔ[p1680] === 1) {
        Δⵠⵠᐃ.set("starve_skin", "" + p1680, {
          expires: 30
        });
      }
    }, this.ⵠⲆⲆΔ, this.unlock.ⵠⲆⲆΔ);
    var v2716 = new o(ᐃⵠᐃⵠ.ⵠΔΔⵠ, ᐃΔⲆΔᐃⲆⲆⲆⲆ, function (p1681) {
      v2883.ⵠᐃᐃΔⵠ = p1681;
      if (v2883.unlock.ⵠᐃᐃΔⵠ[p1681] === 1) {
        Δⵠⵠᐃ.set("starve_bag", "" + p1681, {
          expires: 30
        });
      }
    }, this.ⵠᐃᐃΔⵠ, this.unlock.ⵠᐃᐃΔⵠ);
    var v2717 = new o(ᐃⵠᐃⵠ.ⵠΔⵠⲆⵠ, ⲆᐃᐃΔⵠᐃΔΔᐃ, function (p1682) {
      v2883.ⵠᐃⵠᐃᐃ = p1682;
      if (v2883.unlock.ⵠᐃⵠᐃᐃ[p1682] === 1) {
        Δⵠⵠᐃ.set("starve_book", "" + p1682, {
          expires: 30
        });
      }
    }, this.ⵠᐃⵠᐃᐃ, this.unlock.ⵠᐃⵠᐃᐃ);
    var v2718 = new o(ᐃⵠᐃⵠ.ⵠⵠΔΔΔ, ΔΔΔⲆⵠⲆᐃⵠᐃ, function (p1683) {
      v2883.ⵠᐃΔΔΔ = p1683;
      if (v2883.unlock.ⵠᐃΔΔΔ[p1683] === 1) {
        Δⵠⵠᐃ.set("starve_dead", "" + p1683, {
          expires: 30
        });
      }
    }, this.ⵠᐃΔΔΔ, this.unlock.ⵠᐃΔΔΔ);
    var v2719 = new o(ᐃⵠᐃⵠ.ⵠⵠΔΔΔ, ⵠⵠᐃΔⵠᐃⵠΔΔ, function (p1684) {
      v2883.ΔⲆⵠᐃⲆ = p1684;
      if (v2883.unlock.ΔⲆⵠᐃⲆ[p1684] === 1) {
        Δⵠⵠᐃ.set("starve_crate", "" + p1684, {
          expires: 30
        });
      }
    }, this.ΔⲆⵠᐃⲆ, this.unlock.ΔⲆⵠᐃⲆ);
    var v2720 = new o(ᐃⵠᐃⵠ.ΔⲆⲆΔΔ, ΔᐃⲆⵠⲆⵠⲆⲆΔ, function (p1685) {
      v2883.ⲆⲆⵠΔΔ = p1685;
      if (v2883.unlock.ⲆⲆⵠΔΔ[p1685] === 1) {
        Δⵠⵠᐃ.set("starve_accessory", "" + p1685, {
          expires: 30
        });
      }
    }, this.ⲆⲆⵠΔΔ, this.unlock.ⲆⲆⵠΔΔ);
    this.ⵠᐃΔΔΔᐃΔ = function (p1686) {
      v3114.ᐃΔⲆᐃ = f433(vThis.ΔΔⵠ, p1686);
      for (var v2721 = 0; v2721 < vThis.buttons.length; v2721++) {
        if (v2683 === vThis.buttons[v2721].info.active) {
          vThis.buttons[v2721].ΔⵠΔⵠ(vThis.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        }
      }
    };
    this.ⲆᐃⵠᐃⲆⲆⲆ = function (p1687) {
      v3114.ᐃΔⲆᐃ = f433(vThis.ΔΔⵠ, p1687);
      for (var v2722 = 0; vThis.buttons.length > v2722; v2722++) {
        var v2723 = vThis.buttons[v2722];
        if (v2683 === v2723.info.active && v2723.ΔⵠΔⵠ(vThis.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
          v2723.info.callback();
          return;
        }
      }
    };
    this.ⲆⵠᐃΔⲆᐃΔ = vV313;
    this.ᐃⵠΔΔᐃΔⲆ = function (p1688) {
      v3114.ᐃΔⲆᐃ = f433(vThis.ΔΔⵠ, p1688);
      var v2724 = false;
      for (var v2725 = 0; vThis.buttons.length > v2725; v2725++) {
        if (v2683 === vThis.buttons[v2725].info.active) {
          v2724 |= vThis.buttons[v2725].ΔⵠΔⵠ(vThis.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        }
      }
      if (v2724 !== vThis.ⲆⵠᐃΔⲆᐃΔ) {
        vThis.ⲆⵠᐃΔⲆᐃΔ = v2724;
        p1644.style.cursor = v2724 ? vThis.ᐃᐃΔⵠⵠᐃΔ : vThis.ᐃⲆΔΔⲆᐃⲆ;
      }
    };
    this.ⵠΔᐃΔᐃᐃⵠ = function () {
      vWindow.addEventListener("mousedown", this.ⵠᐃΔΔΔᐃΔ, false);
      vWindow.addEventListener("mouseup", this.ⲆᐃⵠᐃⲆⲆⲆ, false);
      vWindow.addEventListener("mousemove", this.ᐃⵠΔΔᐃΔⲆ, vVV3152);
    };
    this.ᐃΔΔⵠⵠᐃᐃ = function () {
      vWindow.removeEventListener("mousedown", this.ⵠᐃΔΔΔᐃΔ, false);
      vWindow.removeEventListener("mouseup", this.ⲆᐃⵠᐃⲆⲆⲆ, false);
      vWindow.removeEventListener("mousemove", this.ᐃⵠΔΔᐃΔⲆ, vV312);
    };
  }
  function f497() {
    ⵠⲆⲆ.ⲆΔⲆⵠⵠⲆΔ("https://twitter.com/intent/tweet?text=I%20survived%20" + v2885.ⵠⵠᐃ + "%20days%20with%20" + v2885.ᐃᐃΔΔⲆΔⲆ.ⲆΔⲆᐃΔ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
  }
  function f498(p1689, p1690, p1691, p1692) {
    const v2726 = ((p1691 + 22759) * 1664525 + 1013904223) % 4294967296;
    const v2727 = (12345 + (59653 + (p1689 ^ 8534 ^ (p1690 | 22668) & ~(p1690 & 22668))) * 1103515245) % 2147483648;
    const v2728 = (24 << ((v2727 ^ v2726) & 255)) + (8 << ((v2727 ^ v2726) >> 8 & 255)) + (16 << ((v2727 ^ v2726) >> 16 & 255)) + (0 << ((v2727 ^ v2726) >> 24 & 255));
    return ~(v2728 & 44463) & (v2728 | 44463);
  }
  function f499(p1693, p1694) {
    var vThis3 = this;
    this.ΔΔⵠ = p1693;
    this.ᐃ = p1694;
    this.ⵠⵠᐃΔⵠᐃΔ = 111;
    this.ⵠⲆᐃⲆᐃⲆⲆ = 17;
    this.ⵠⲆᐃⲆᐃⲆⲆ;
    this.ⵠⵠᐃΔⵠᐃΔ;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ᐃⲆΔΔⲆᐃⲆ = "default";
      this.ᐃᐃΔⵠⵠᐃΔ = "pointer";
    } else {
      this.ᐃⲆΔΔⲆᐃⲆ = "url('img/cursor0.png'), default";
      this.ᐃᐃΔⵠⵠᐃΔ = "url('img/cursor1.png'), pointer";
    }
    this.ᐃⵠⵠᐃΔⲆⲆ = 1;
    this.ⵠⲆΔⵠⲆⵠⲆ = 1;
    this.ᐃᐃⵠᐃΔⲆⵠ = 1;
    this.ᐃΔΔᐃⵠΔⲆ = 1;
    this.ᐃᐃᐃᐃᐃΔⵠ = 0;
    this.ᐃᐃᐃᐃᐃΔⵠ.ᐃⵠΔⲆᐃⲆΔ = 10;
    this.ΔⵠΔᐃΔᐃⵠᐃΔ = {
      id: document.getElementById("team_box"),
      style: document.getElementById("team_box").style,
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 125) + "px";
        this.style.top = "110px";
      }
    };
    this.ᐃᐃⵠΔ = {
      ᐃⵠᐃᐃᐃⵠⲆ: f435(60, 60, 0, ΔΔ[1031]),
      ⵠᐃΔᐃΔᐃᐃ: f435(60, 60, 0, ΔΔ[1032])
    };
    this.sign = {
      open: vVV314,
      ΔⲆΔⵠⲆⲆΔΔⲆ: 0,
      ᐃᐃᐃⲆⲆⲆⲆ: document.getElementById("sign_object"),
      ⵠᐃⲆⲆⵠⵠΔ: 0,
      id: document.getElementById("sign_window"),
      style: document.getElementById("sign_window").style,
      button: f435(60, 60, 0, ΔΔ[1052]),
      ᐃⵠΔⲆᐃⵠᐃ: function () {
        var v2729 = Math.floor(Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) * (10 + ΔΔ[427][0].width) + 35);
        this.button.info.translate.x = v2729;
        this.button.info.translate.y = 22;
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 150) + "px";
        this.style.top = Math.floor(v425 - 115) + "px";
      },
      ⵠΔⵠᐃΔ: function () {
        v3081.sign.style.display = "none";
        v3081.sign.open = false;
      },
      select: function () {
        v3081.sign.open = !v3081.sign.open;
        if (v3081.sign.open) {
          v3081.sign.style.display = "inline-block";
        } else {
          v3081.sign.style.display = "none";
        }
      },
      ok: function () {
        v2887.ᐃᐃⵠΔᐃⲆⵠᐃΔ(v2885.sign.ᐃᐃᐃⵠⵠ, v3081.sign.ⵠᐃⲆⲆⵠⵠΔ);
        v3081.sign.select();
      },
      up: function () {
        v3081.sign.ⵠᐃⲆⲆⵠⵠΔ = v3081.sign.ⵠᐃⲆⲆⵠⵠΔ === 0 ? 3 : v3081.sign.ⵠᐃⲆⲆⵠⵠΔ - 1;
        v3081.sign.ᐃᐃᐃⲆⲆⲆⲆ.src = "./img/sign" + v3081.sign.ⵠᐃⲆⲆⵠⵠΔ + ".png";
      },
      down: function () {
        v3081.sign.ⵠᐃⲆⲆⵠⵠΔ = (v3081.sign.ⵠᐃⲆⲆⵠⵠΔ + 1) % 4;
        v3081.sign.ᐃᐃᐃⲆⲆⲆⲆ.src = "./img/sign" + v3081.sign.ⵠᐃⲆⲆⵠⵠΔ + ".png";
      }
    };
    document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, false);
    document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, vV314);
    document.getElementById("sign_up").addEventListener("mouseup", this.sign.up, false);
    document.getElementById("sign_down").addEventListener("mouseup", this.sign.down, false);
    this.ᐃΔⵠⵠⲆ = {
      open: false,
      id: document.getElementById("shop_market"),
      style: document.getElementById("shop_market").style,
      items: [{
        id: 0,
        name: "wood",
        ⲆⲆᐃᐃⵠ: 1,
        b: 1,
        a: 3,
        ᐃΔⲆᐃⵠ: 427
      }, {
        id: 1,
        name: "stone",
        ⲆⲆᐃᐃⵠ: 1,
        b: 1,
        a: 4,
        ᐃΔⲆᐃⵠ: 426
      }, {
        id: 2,
        name: "gold",
        ⲆⲆᐃᐃⵠ: 1,
        b: 1,
        a: 6,
        ᐃΔⲆᐃⵠ: 408
      }, {
        id: 3,
        name: "diamond",
        ⲆⲆᐃᐃⵠ: 4,
        b: 4,
        a: 1,
        ᐃΔⲆᐃⵠ: 409
      }, {
        id: 4,
        name: "amethyst",
        ⲆⲆᐃᐃⵠ: 8,
        b: 8,
        a: 1,
        ᐃΔⲆᐃⵠ: 529
      }, {
        id: 5,
        name: "reidite",
        ⲆⲆᐃᐃⵠ: 16,
        b: 16,
        a: 1,
        ᐃΔⲆᐃⵠ: 1214
      }, {
        id: 6,
        name: "pumpkin_seed",
        ⲆⲆᐃᐃⵠ: 10,
        b: 10,
        a: 1,
        ᐃΔⲆᐃⵠ: 1057
      }, {
        id: 7,
        name: "carrot_seed",
        ⲆⲆᐃᐃⵠ: 16,
        b: 16,
        a: 1,
        ᐃΔⲆᐃⵠ: 1225
      }, {
        id: 8,
        name: "tomato_seed",
        ⲆⲆᐃᐃⵠ: 20,
        b: 20,
        a: 1,
        ᐃΔⲆᐃⵠ: 1235
      }, {
        id: 9,
        name: "thornbush_seed",
        ⲆⲆᐃᐃⵠ: 30,
        b: 30,
        a: 1,
        ᐃΔⲆᐃⵠ: 1094
      }, {
        id: 10,
        name: "garlic_seed",
        ⲆⲆᐃᐃⵠ: 40,
        b: 40,
        a: 1,
        ᐃΔⲆᐃⵠ: 1083
      }, {
        id: 11,
        name: "watermelon_seed",
        ⲆⲆᐃᐃⵠ: 60,
        b: 60,
        a: 1,
        ᐃΔⲆᐃⵠ: 1242
      }],
      button: f435(60, 60, 0, ΔΔ[1044]),
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 450) + "px";
        this.style.top = Math.floor(v425 - 270) + "px";
      },
      select: function () {
        v3081.ᐃΔⵠⵠⲆ.open = !v3081.ᐃΔⵠⵠⲆ.open;
        if (v3081.ᐃΔⵠⵠⲆ.open) {
          v3081.ᐃΔⵠⵠⲆ.style.display = "inline-block";
        } else {
          v3081.ᐃΔⵠⵠⲆ.style.display = "none";
        }
      },
      ⵠΔⵠᐃΔ: function () {
        v3081.ᐃΔⵠⵠⲆ.style.display = "none";
        v3081.ᐃΔⵠⵠⲆ.open = vVV3152;
      },
      ⲆᐃⵠᐃᐃΔΔ: function () {
        v2887.ᐃΔΔⲆⲆᐃⵠⲆᐃ(this.ᐃᐃⲆᐃⵠᐃΔ);
      },
      ⲆⵠⲆΔᐃ: function () {
        this.id;
        if (this.ᐃᐃⲆᐃⵠᐃΔ.a === 1) {
          var v2730 = Math.floor(Number(this.value) * this.ᐃᐃⲆᐃⵠᐃΔ.b);
          this.ᐃᐃⲆᐃⵠᐃΔ.ⲆⲆᐃᐃⵠ = v2730;
          document.getElementById(this.ᐃᐃⲆᐃⵠᐃΔ.name + "_trad_number").innerHTML = v2730 + "";
        } else {
          v2730 = Math.floor(Number(this.value) / this.ᐃᐃⲆᐃⵠᐃΔ.a);
          this.ᐃᐃⲆᐃⵠᐃΔ.ⲆⲆᐃᐃⵠ = v2730;
          document.getElementById(this.ᐃᐃⲆᐃⵠᐃΔ.name + "_trad_number").innerHTML = v2730 + "";
        }
      }
    };
    document.getElementById("quit_market").addEventListener("mouseup", this.ᐃΔⵠⵠⲆ.ⵠΔⵠᐃΔ, vVVV316);
    var v2731 = [["mouseup", this.ᐃΔⵠⵠⲆ.ⲆᐃⵠᐃᐃΔΔ, "buy_"], ["click", this.ᐃΔⵠⵠⲆ.ⲆⵠⲆΔᐃ, ""], ["change", this.ᐃΔⵠⵠⲆ.ⲆⵠⲆΔᐃ, ""], ["keypress", this.ᐃΔⵠⵠⲆ.keypress, ""]];
    for (var v2732 = 0; this.ᐃΔⵠⵠⲆ.items.length > v2732; v2732++) {
      var v2733 = this.ᐃΔⵠⵠⲆ.items[v2732];
      document.getElementById(v2733.name + "_market").src = ΔΔ[v2733.ᐃΔⲆᐃⵠ][0].ΔΔⲆⲆⵠ === vVVVUndefined823 ? ΔΔ[v2733.ᐃΔⲆᐃⵠ][0].src : ΔΔ[v2733.ᐃΔⲆᐃⵠ][0].ΔΔⲆⲆⵠ;
      if (v2733.a === 1) {
        document.getElementById(v2733.name + "_trad_number").innerHTML = v2733.b;
        document.getElementById(v2733.name + "_number").value = 1;
        document.getElementById(v2733.name + "_number").step = 1;
        document.getElementById(v2733.name + "_number").min = 1;
        document.getElementById(v2733.name + "_number").max = Math.floor(255 / v2733.b);
      } else {
        document.getElementById(v2733.name + "_trad_number").innerHTML = 1;
        document.getElementById(v2733.name + "_number").value = v2733.a;
        document.getElementById(v2733.name + "_number").step = v2733.a;
        document.getElementById(v2733.name + "_number").min = v2733.a;
      }
      document.getElementById("buy_" + v2733.name + "_number").ᐃᐃⲆᐃⵠᐃΔ = v2733;
      document.getElementById(v2733.name + "_number").ᐃᐃⲆᐃⵠᐃΔ = v2733;
      for (var v2734 = 0; v2731.length > v2734; v2734++) {
        document.getElementById(v2731[v2734][2] + v2733.name + "_number").addEventListener(v2731[v2734][0], v2731[v2734][1], vVVV313);
      }
    }
    $("[type='number']").keypress(function (p1695) {
      p1695.preventDefault();
    });
    this.options = {
      open: false,
      id: document.getElementById("option_in_game"),
      style: document.getElementById("option_in_game").style,
      ⲆΔᐃᐃΔ: document.getElementById("agree_ing").style,
      ⵠⵠΔⵠⲆΔᐃ: document.getElementById("cancel_agree_ing").style,
      ᐃⲆⵠⲆΔΔᐃ: document.getElementById("quest_agree_ing").style,
      ⲆΔⲆΔⲆΔⵠ: document.getElementById("spectator_agree_ing").style,
      ᐃΔᐃΔᐃⲆⵠ: document.getElementById("auto_feed_agree_ing").style,
      ΔΔΔᐃᐃᐃⵠ: document.getElementById("info_agree_ing").style,
      ⵠⲆᐃⵠⵠⲆᐃ: document.getElementById("pixelated_agree_ing").style,
      button: f435(60, 60, 0, ΔΔ[976]),
      ᐃⲆⲆⲆⲆᐃⲆᐃΔ: function () {
        v3081.options.open = !v3081.options.open;
        if (v3081.options.open) {
          v3081.options.style.display = "inline-block";
        } else {
          v3081.options.style.display = "none";
        }
      },
      ⲆᐃᐃΔᐃΔΔᐃΔ: function () {
        v2883.ΔΔΔⵠⵠΔᐃ();
      },
      ⵠⵠⲆΔΔᐃⵠⲆⲆ: function () {
        v2883.ΔᐃΔⲆᐃⵠᐃ();
      },
      high: function () {
        v2883.ⵠᐃⵠᐃᐃⲆⲆΔΔ();
      },
      low: function () {
        v2883.ΔⲆΔⲆᐃⲆᐃⵠΔ();
      },
      ΔⵠᐃΔⲆ: function () {
        v3081.ⵠᐃΔᐃ.ΔⵠᐃΔⲆ();
      },
      ⵠⵠⵠⵠⵠⲆⲆⵠⵠ: function () {
        v3081.ⵠᐃᐃⲆΔ.ΔⵠᐃΔⲆ();
      },
      ⲆⵠⲆⲆⵠᐃᐃΔⲆ: function () {
        v3081.ΔΔᐃᐃ.ΔⵠᐃΔⲆ();
      },
      ⵠⲆᐃΔⲆᐃᐃⲆⲆ: function () {
        v2885.ΔᐃᐃΔⵠΔᐃ.ᐃᐃⲆⵠⲆⲆⵠ();
      },
      ᐃΔⲆⲆΔΔⲆⵠⵠ: function () {
        v2885.ᐃᐃⲆᐃⲆ.ᐃᐃⲆⵠⲆⲆⵠ();
      },
      ⵠΔⵠᐃΔ: function () {
        v3081.options.style.display = "none";
        v3081.options.open = false;
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 235) + "px";
        this.style.top = Math.floor(v425 - 170) + "px";
      }
    };
    document.getElementById("azerty_ing").addEventListener("mouseup", this.options.ⲆᐃᐃΔᐃΔΔᐃΔ, vVV317);
    document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.ⵠⵠⲆΔΔᐃⵠⲆⲆ, false);
    document.getElementById("low_ing").addEventListener("mouseup", this.options.low, vV31);
    document.getElementById("high_ing").addEventListener("mouseup", this.options.high, false);
    document.getElementById("quit_opt").addEventListener("mouseup", this.options.ⵠΔⵠᐃΔ, vVV316);
    document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.ΔⵠᐃΔⲆ, false);
    document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.ⲆⵠⲆⲆⵠᐃᐃΔⲆ, vVV31);
    document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.ⵠⵠⵠⵠⵠⲆⲆⵠⵠ, false);
    document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.ⵠⲆᐃΔⲆᐃᐃⲆⲆ, vVVV316);
    document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.ᐃΔⲆⲆΔΔⲆⵠⵠ, vV312);
    this.ⵠᐃᐃⲆΔ = {
      open: false,
      ⲆᐃⲆⵠⵠ: Δⵠⵠᐃ.get("starve_cancel") && Δⵠⵠᐃ.get("starve_cancel") === "0" ? 0 : 1,
      id: document.getElementById("cancel_sure_delete"),
      style: document.getElementById("cancel_sure_delete").style,
      ⲆΔᐃᐃΔ: document.getElementById("cancel_agree").style,
      button: 0,
      Ⲇⵠ: 0,
      ⵠΔⵠᐃΔ: function () {
        v3081.ⵠᐃᐃⲆΔ.style.display = "none";
        v3081.ⵠᐃᐃⲆΔ.open = false;
      },
      ⵠᐃⵠⵠΔⵠᐃ: function () {
        if (v2885.ⲆΔⲆΔ.ⲆΔⲆΔᐃ) {
          v2887.ⵠⵠⵠⵠⵠΔΔᐃⲆ();
        }
        v3081.ⵠᐃᐃⲆΔ.ⵠΔⵠᐃΔ();
      },
      ΔⵠᐃΔⲆ: function () {
        if (v3081.ⵠᐃᐃⲆΔ.ⲆᐃⲆⵠⵠ) {
          Δⵠⵠᐃ.set("starve_cancel", "0");
          v3081.ⵠᐃᐃⲆΔ.ⲆΔᐃᐃΔ.display = "inline-block";
          v3081.options.ⵠⵠΔⵠⲆΔᐃ.display = "none";
        } else {
          Δⵠⵠᐃ.set("starve_cancel", "1");
          v3081.ⵠᐃᐃⲆΔ.ⲆΔᐃᐃΔ.display = "none";
          v3081.options.ⵠⵠΔⵠⲆΔᐃ.display = "inline-block";
        }
        v3081.ⵠᐃᐃⲆΔ.ⲆᐃⲆⵠⵠ = !v3081.ⵠᐃᐃⲆΔ.ⲆᐃⲆⵠⵠ;
      },
      ᐃΔⲆⲆᐃᐃᐃ: function () {
        if (this.ⲆᐃⲆⵠⵠ) {
          this.style.display = "inline-block";
          this.open = vVV303;
        } else {
          this.ⵠᐃⵠⵠΔⵠᐃ();
        }
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 235) + "px";
        this.style.top = Math.floor(v425 - 130) + "px";
      }
    };
    this.ⵠᐃᐃⲆΔ.id.oncontextmenu = function () {
      return vV312;
    };
    this.ⵠᐃᐃⲆΔ.ⲆΔᐃᐃΔ.display = "none";
    if (this.ⵠᐃᐃⲆΔ.ⲆᐃⲆⵠⵠ) {
      this.options.ⵠⵠΔⵠⲆΔᐃ.display = "inline-block";
    } else {
      this.options.ⵠⵠΔⵠⲆΔᐃ.display = "none";
    }
    document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.ⵠᐃᐃⲆΔ.ⵠᐃⵠⵠΔⵠᐃ, false);
    document.getElementById("cancel_no_delete").addEventListener("mouseup", this.ⵠᐃᐃⲆΔ.ⵠΔⵠᐃΔ, vVV313);
    document.getElementById("cancel_case_agree").addEventListener("mouseup", this.ⵠᐃᐃⲆΔ.ΔⵠᐃΔⲆ, false);
    document.addEventListener("cancel_sure_delete", function (p1696) {
      p1696.preventDefault();
    }, vVV31);
    this.ᐃᐃΔᐃΔᐃⲆ = {
      ⲆᐃⲆⵠⵠ: Δⵠⵠᐃ.get("starve_aliasing") ? Δⵠⵠᐃ.get("starve_aliasing") === "0" ? 0 : 1 : 1,
      ᐃᐃⵠⵠᐃΔΔ: function (p1697) {
        document.getElementById("game_canvas").style.imageRendering = p1697 ? "pixelated" : "auto";
      },
      ΔⵠᐃΔⲆ: function () {
        if (v3081.ᐃᐃΔᐃΔᐃⲆ.ⲆᐃⲆⵠⵠ === 0) {
          Δⵠⵠᐃ.set("starve_aliasing", "1");
          v3081.ᐃᐃΔᐃΔᐃⲆ.ᐃᐃⵠⵠᐃΔΔ(1);
          v3081.options.ⵠⲆᐃⵠⵠⲆᐃ.display = "inline-block";
        } else {
          Δⵠⵠᐃ.set("starve_aliasing", "0");
          v3081.ᐃᐃΔᐃΔᐃⲆ.ᐃᐃⵠⵠᐃΔΔ(0);
          v3081.options.ⵠⲆᐃⵠⵠⲆᐃ.display = "none";
        }
        v3081.ᐃᐃΔᐃΔᐃⲆ.ⲆᐃⲆⵠⵠ = (v3081.ᐃᐃΔᐃΔᐃⲆ.ⲆᐃⲆⵠⵠ + 1) % 2;
      }
    };
    if (this.ᐃᐃΔᐃΔᐃⲆ.ⲆᐃⲆⵠⵠ === 1) {
      this.options.ⵠⲆᐃⵠⵠⲆᐃ.display = "inline-block";
    } else {
      this.ᐃᐃΔᐃΔᐃⲆ.ᐃᐃⵠⵠᐃΔΔ(0);
      this.options.ⵠⲆᐃⵠⵠⲆᐃ.display = "none";
    }
    document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.ᐃᐃΔᐃΔᐃⲆ.ΔⵠᐃΔⲆ, vV314);
    this.ΔΔⵠΔΔ = {
      ⲆᐃⲆⵠⵠ: Δⵠⵠᐃ.get("starve_info_box") && Δⵠⵠᐃ.get("starve_info_box") === "0" ? 0 : 1,
      display: 0,
      x: 0,
      y: 0,
      id: 0,
      ⲆΔⲆΔ: 0,
      ΔⵠᐃΔⲆ: function () {
        if (v3081.ΔΔⵠΔΔ.ⲆᐃⲆⵠⵠ === 0) {
          Δⵠⵠᐃ.set("starve_info_box", "1");
          v3081.options.ΔΔΔᐃᐃᐃⵠ.display = "inline-block";
        } else {
          Δⵠⵠᐃ.set("starve_info_box", "0");
          v3081.options.ΔΔΔᐃᐃᐃⵠ.display = "none";
        }
        v3081.ΔΔⵠΔΔ.ⲆᐃⲆⵠⵠ = (v3081.ΔΔⵠΔΔ.ⲆᐃⲆⵠⵠ + 1) % 2;
      },
      ΔⵠΔⵠ: function (p1698, p1699, p1700) {
        if (p1698 && this.ⲆᐃⲆⵠⵠ) {
          this.display = 1;
          this.id = p1700 === 0 ? p1699.id : v768[p1699.id].ⵠⵠᐃⲆ;
          this.x = p1699.info.translate.x + 80;
          this.y = p1699.info.translate.y;
          this.ⲆΔⲆΔ = p1700;
        }
        return p1698;
      }
    };
    if (this.ΔΔⵠΔΔ.ⲆᐃⲆⵠⵠ === 1) {
      this.options.ΔΔΔᐃᐃᐃⵠ.display = "inline-block";
    } else {
      this.options.ΔΔΔᐃᐃᐃⵠ.display = "none";
    }
    document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.ΔΔⵠΔΔ.ΔⵠᐃΔⲆ, vVV312);
    if (Δⵠⵠᐃ.get("starve_scale")) {
      v429 = Number(Δⵠⵠᐃ.get("starve_scale"));
      document.getElementById("input_ratio").value = v429;
      v429 *= v489 / v490;
      f49();
    }
    this.ⲆᐃⵠᐃᐃⲆⲆ = function () {
      Δⵠⵠᐃ.set("starve_scale", "" + document.getElementById("input_ratio").value);
      v429 = document.getElementById("input_ratio").value * (v489 / v490);
      f49();
    };
    document.getElementById("input_ratio").addEventListener("input", this.ⲆᐃⵠᐃᐃⲆⲆ, false);
    this.ⵠᐃΔᐃ = {
      open: false,
      ⲆᐃⲆⵠⵠ: Δⵠⵠᐃ.get("starve_safe") ? Δⵠⵠᐃ.get("starve_safe") === "0" ? 0 : 1 : 1,
      id: document.getElementById("sure_delete"),
      style: document.getElementById("sure_delete").style,
      ⲆΔᐃᐃΔ: document.getElementById("agree").style,
      button: 0,
      Ⲇⵠ: 0,
      ⵠΔⵠᐃΔ: function () {
        v3081.ⵠᐃΔᐃ.style.display = "none";
        v3081.ⵠᐃΔᐃ.open = false;
      },
      all: function () {
        if (!v2885.ᐃᐃᐃᐃⲆ.wait) {
          if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⲆΔⲆΔ.id < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled) {
            v2887.ⵠᐃⵠⲆΔᐃⵠⵠⵠ(v3081.ⵠᐃΔᐃ.button);
          }
          v3081.ⵠᐃΔᐃ.ⵠΔⵠᐃΔ();
        }
      },
      Ⲇⵠⵠ: function () {
        if (v2885.ⲆΔⲆΔ.ΔⵠⲆⲆⵠ && !v2885.ᐃᐃᐃᐃⲆ.wait) {
          if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⲆΔⲆΔ.id < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled) {
            v2887.ᐃⵠΔⲆⵠⲆⲆⲆΔ(v3081.ⵠᐃΔᐃ.button);
          }
          v3081.ⵠᐃΔᐃ.ⵠΔⵠᐃΔ();
        }
      },
      ⵠⲆΔⲆΔⵠⵠΔᐃ: function () {
        if (!v2885.ᐃᐃᐃᐃⲆ.wait) {
          if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⲆΔⲆΔ.id < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled) {
            v2887.ΔΔᐃᐃⵠΔΔⵠΔ(v3081.ⵠᐃΔᐃ.button);
          }
          v3081.ⵠᐃΔᐃ.ⵠΔⵠᐃΔ();
        }
      },
      ΔⵠᐃΔⲆ: function () {
        if (v3081.ⵠᐃΔᐃ.ⲆᐃⲆⵠⵠ) {
          Δⵠⵠᐃ.set("starve_safe", "0");
          v3081.ⵠᐃΔᐃ.ⲆΔᐃᐃΔ.display = "inline-block";
          v3081.options.ⲆΔᐃᐃΔ.display = "none";
        } else {
          Δⵠⵠᐃ.set("starve_safe", "1");
          v3081.ⵠᐃΔᐃ.ⲆΔᐃᐃΔ.display = "none";
          v3081.options.ⲆΔᐃᐃΔ.display = "inline-block";
        }
        v3081.ⵠᐃΔᐃ.ⲆᐃⲆⵠⵠ = !v3081.ⵠᐃΔᐃ.ⲆᐃⲆⵠⵠ;
      },
      ᐃΔⲆⲆᐃᐃᐃ: function (p1701) {
        this.button = p1701;
        document.getElementById("item_to_del").src = ΔΔ[v628[p1701].Δᐃ][0].ΔΔⲆⲆⵠ === vVUndefined ? ΔΔ[v628[p1701].Δᐃ][0].src : ΔΔ[v628[p1701].Δᐃ][0].ΔΔⲆⲆⵠ;
        if (v628[p1701].Ⲇⵠⵠ && !v2885.ᐃΔⵠᐃⵠ && v2885.ⲆΔⲆΔ.ΔⵠⲆⲆⵠ) {
          document.getElementById("recycle_delete").style.display = "inline-block";
        } else {
          document.getElementById("recycle_delete").style.display = "none";
        }
        if (this.ⲆᐃⲆⵠⵠ) {
          this.style.display = "inline-block";
          this.open = vV306;
        } else {
          this.all();
        }
      },
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 235) + "px";
        this.style.top = Math.floor(v425 - 175) + "px";
      }
    };
    this.ⵠᐃΔᐃ.ⲆΔᐃᐃΔ.display = "none";
    if (this.ⵠᐃΔᐃ.ⲆᐃⲆⵠⵠ) {
      this.options.ⲆΔᐃᐃΔ.display = "inline-block";
    } else {
      this.options.ⲆΔᐃᐃΔ.display = "none";
    }
    document.getElementById("one_delete").addEventListener("mouseup", this.ⵠᐃΔᐃ.ⵠⲆΔⲆΔⵠⵠΔᐃ, false);
    document.getElementById("yes_delete").addEventListener("mouseup", this.ⵠᐃΔᐃ.all, vVV3153);
    document.getElementById("recycle_delete").addEventListener("mouseup", this.ⵠᐃΔᐃ.Ⲇⵠⵠ, false);
    document.getElementById("no_delete").addEventListener("mouseup", this.ⵠᐃΔᐃ.ⵠΔⵠᐃΔ, vVVV316);
    document.getElementById("case_agree").addEventListener("mouseup", this.ⵠᐃΔᐃ.ΔⵠᐃΔⲆ, false);
    this.ⵠⵠⲆᐃΔ = {
      open: false,
      ⲆⲆⵠΔⲆⵠᐃ: -1,
      button: f435(60, 60, 0, ΔΔ[811]),
      id: document.getElementById("shop_starterkit"),
      style: document.getElementById("shop_starterkit").style,
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 300) + "px";
        this.style.top = Math.floor(v425 - 215) + "px";
      },
      ⵠΔⵠᐃΔ: function () {
        v3081.ⵠⵠⲆᐃΔ.open = false;
        v3081.ⵠⵠⲆᐃΔ.style.display = "none";
      },
      select: function () {
        v3081.ⵠⵠⲆᐃΔ.open = !v3081.ⵠⵠⲆᐃΔ.open;
        if (v3081.ⵠⵠⲆᐃΔ.open) {
          v3081.ⵠⵠⲆᐃΔ.style.display = "inline-block";
        } else {
          v3081.ⵠⵠⲆᐃΔ.style.display = "none";
        }
      },
      ⲆᐃⵠᐃᐃΔΔ: function () {
        if (v3081.ⵠⵠⲆᐃΔ.ⲆⲆⵠΔⲆⵠᐃ >= 0) {
          v2887.ⵠᐃⵠⲆᐃⵠᐃⵠⲆ(v3081.ⵠⵠⲆᐃΔ.ⲆⲆⵠΔⲆⵠᐃ);
          v3081.ⵠⵠⲆᐃΔ.ⵠΔⵠᐃΔ();
          if (ga) {
            ga("send", "event", "Game", "kit", "" + v3081.ⵠⵠⲆᐃΔ.ⲆⲆⵠΔⲆⵠᐃ);
          }
        }
      },
      ⵠⵠᐃΔⵠ: function () {
        var v2735 = v2885.ⵠⵠⲆᐃΔ.value;
        document.getElementById("points_bank").innerHTML = ⵠⲆⲆ.ΔⲆᐃⲆⵠⵠⲆ(v2735) + " points";
        for (var v2736 = 0; v2736 < v2321.length; v2736++) {
          if (v2321[v2736].ⲆⵠΔΔⲆ > v2735) {
            document.getElementById("starter" + (v2736 + 1)).style.opacity = "0.4";
          } else {
            document.getElementById("starter" + (v2736 + 1)).style.opacity = "1";
          }
        }
        for (v2736 = 1; v2736 < 13; v2736++) {
          document.getElementById("inv_shop" + v2736).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2736).innerHTML = "";
        }
        document.getElementById("buy_kit").style.opacity = "0.2";
      },
      ΔᐃⲆⵠⵠΔⲆΔⵠ: function () {
        if (this.id.length > 8) {
          var vNumber17 = Number(this.id.charAt(7) + this.id.charAt(8));
        } else {
          vNumber17 = Number(this.id.charAt(7));
        }
        var v2737 = v2321[vNumber17 - 1];
        if (v2885.ⵠⵠⲆᐃΔ.value >= v2737.ⲆⵠΔΔⲆ) {
          v3081.ⵠⵠⲆᐃΔ.ⲆⲆⵠΔⲆⵠᐃ = vNumber17;
          document.getElementById("buy_kit").style.opacity = "1";
        } else {
          v3081.ⵠⵠⲆᐃΔ.ⲆⲆⵠΔⲆⵠᐃ = -1;
          document.getElementById("buy_kit").style.opacity = "0.2";
        }
        v2737 = v2737.items;
        for (var v2738 = 1, v2739 = 1; v2738 < v2737.length + 1; v2738++) {
          if (v2737[v2738 - 1][1] !== 47) {
            document.getElementById("inv_shop" + v2739).style.display = "inline-block";
            document.getElementById("inv_shop" + v2739).src = ΔΔ[v628[v2737[v2738 - 1][1]].Δᐃ][0].ΔΔⲆⲆⵠ === undefined ? ΔΔ[v628[v2737[v2738 - 1][1]].Δᐃ][0].src : ΔΔ[v628[v2737[v2738 - 1][1]].Δᐃ][0].ΔΔⲆⲆⵠ;
            document.getElementById("amount_shop" + v2739).innerHTML = "" + v2737[v2738 - 1][0];
            v2739++;
          }
        }
        for (; v2739 < 13; v2739++) {
          document.getElementById("inv_shop" + v2739).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2739).innerHTML = "";
        }
      }
    };
    document.getElementById("quit3").addEventListener("mouseup", this.ⵠⵠⲆᐃΔ.ⵠΔⵠᐃΔ, false);
    document.getElementById("buy_kit").addEventListener("mouseup", this.ⵠⵠⲆᐃΔ.ⲆᐃⵠᐃᐃΔΔ, false);
    for (v2734 = 1; v2734 < 11; v2734++) {
      document.getElementById("starter" + v2734).addEventListener("mouseup", this.ⵠⵠⲆᐃΔ.ΔᐃⲆⵠⵠΔⲆΔⵠ, vVVV313);
    }
    this.ΔΔᐃᐃ = {
      open: false,
      ⲆᐃⲆⵠⵠ: Δⵠⵠᐃ.get("starve_quests") ? Δⵠⵠᐃ.get("starve_quests") === "1" ? 1 : 0 : 0,
      button: f435(60, 60, 0, ΔΔ[1004]),
      id: document.getElementById("chronoquest"),
      style: document.getElementById("chronoquest").style,
      ᐃⲆⲆ: function () {
        this.style.left = Math.floor(v424 - 420) + "px";
        this.style.top = Math.floor(v425 - 270) + "px";
      },
      ⵠΔⵠᐃΔ: function () {
        v3081.ΔΔᐃᐃ.style.display = "none";
        v3081.ΔΔᐃᐃ.open = vVV314;
      },
      select: function () {
        v3081.ΔΔᐃᐃ.open = !v3081.ΔΔᐃᐃ.open;
        if (v3081.ΔΔᐃᐃ.open) {
          v3081.ΔΔᐃᐃ.style.display = "inline-block";
        } else {
          v3081.ΔΔᐃᐃ.style.display = "none";
        }
      },
      list: [],
      reset: function () {
        for (var v2740 = 0; v2740 < v2327.length; v2740++) {
          this.list[v2740] = 1;
          document.getElementById("timeremain_" + v2740).style.display = "inline-block";
          document.getElementById("time_finished_" + v2740).style.display = "none";
          document.getElementById("claim_reward_" + v2740).style.display = "none";
        }
      },
      ⵠΔΔⵠᐃΔⲆ: 0,
      ᐃΔⵠΔⵠᐃΔ: 0,
      ⲆᐃⵠⵠⵠᐃⵠⵠΔ: function () {
        if (v3081.ΔΔᐃᐃ.open) {
          var v2741 = new Date().getTime();
          if (!(v2741 - this.ⵠΔΔⵠᐃΔⲆ < 1000)) {
            this.ⵠΔΔⵠᐃΔⲆ = v2741;
            for (var v2742 = 0; v2742 < v2327.length; v2742++) {
              if (v3081.ΔΔᐃᐃ.list[v2742]) {
                var v2743 = v2327[v2742].time - (v2741 - v2884.ᐃᐃᐃᐃΔ.ⵠⵠᐃΔⵠ + v3081.ΔΔᐃᐃ.ᐃΔⵠΔⵠᐃΔ);
                document.getElementById("timeremain_" + v2742).innerHTML = v2743 > 960000 ? Math.floor(v2743 / 480000) + " days" : v2743 > 480000 ? Math.floor(v2743 / 480000) + " day" : v2743 > 60000 ? Math.floor(v2743 / 60000) + " min" : Math.floor(v2743 / 1000) + " sec";
              }
            }
          }
        }
      },
      restore: function (p1702) {
        for (var v2744 = 0; v2744 < p1702.length; v2744++) {
          if (p1702[v2744] != 1) {
            v3081.ΔΔᐃᐃ.ⲆⵠᐃᐃⵠⲆΔ(v2744, p1702[v2744]);
          }
        }
      },
      ⲆⵠᐃᐃⵠⲆΔ: function (p1703, p1704) {
        if (p1704 === 3 && (p1703 === 11 || p1703 === 12)) {
          v2885.ΔⵠⵠⲆ.ⵠⵠⵠᐃΔΔΔ(0, 1);
          v3081.ΔᐃΔⵠᐃⲆⵠ();
        }
        document.getElementById("timeremain_" + p1703).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        if (p1704 > 1) {
          document.getElementById("time_finished_" + p1703).innerHTML = "SUCCEED";
          document.getElementById("timeremain_" + p1703).style.display = "none";
        } else if (p1704 === 0) {
          document.getElementById("time_finished_" + p1703).innerHTML = "FAILED";
          document.getElementById("timeremain_" + p1703).style.display = "none";
        }
        document.getElementById("claim_reward_" + p1703).style.display = p1704 === 2 ? "inline-block" : "none";
        document.getElementById("time_finished_" + p1703).style.display = "inline";
        v3081.ΔΔᐃᐃ.list[p1703] = 0;
      },
      modify: function (p1705, p1706) {
        v3081.ΔΔᐃᐃ.ⲆⵠᐃᐃⵠⲆΔ(p1705, p1706);
        if (v3081.ΔΔᐃᐃ.ⲆᐃⲆⵠⵠ) {
          v3081.ΔΔᐃᐃ.open = true;
          v3081.ΔΔᐃᐃ.style.display = "inline-block";
        }
      },
      ΔⵠᐃΔⲆ: function () {
        if (v3081.ΔΔᐃᐃ.ⲆᐃⲆⵠⵠ) {
          Δⵠⵠᐃ.set("starve_quests", "0");
          v3081.options.ᐃⲆⵠⲆΔΔᐃ.display = "none";
        } else {
          Δⵠⵠᐃ.set("starve_quests", "1");
          v3081.options.ᐃⲆⵠⲆΔΔᐃ.display = "inline-block";
        }
        v3081.ΔΔᐃᐃ.ⲆᐃⲆⵠⵠ = !v3081.ΔΔᐃᐃ.ⲆᐃⲆⵠⵠ;
      },
      ᐃⲆΔⲆⲆΔΔΔᐃ: function () {
        var vNumber18 = Number(this.id.charAt(13));
        var vNumber19 = Number(this.id.charAt(14));
        if (this.id.charAt(14) !== "" && vNumber19 >= 0 && vNumber19 <= 9) {
          vNumber18 = vNumber18 * 10 + vNumber19;
        }
        v2887.ᐃΔΔⵠⵠΔⲆΔⲆ(vNumber18);
      }
    };
    if (this.ΔΔᐃᐃ.ⲆᐃⲆⵠⵠ) {
      this.options.ᐃⲆⵠⲆΔΔᐃ.display = "inline-block";
    } else {
      this.options.ᐃⲆⵠⲆΔΔᐃ.display = "none";
    }
    document.getElementById("quit_chronoquest").addEventListener("mouseup", this.ΔΔᐃᐃ.ⵠΔⵠᐃΔ, vVVV313);
    for (v2734 = 0; v2327.length > v2734; v2734++) {
      document.getElementById("claim_reward_" + v2734).addEventListener("mouseup", this.ΔΔᐃᐃ.ᐃⲆΔⲆⲆΔΔΔᐃ, vVVV31);
    }
    function f500(p1707) {
      document.getElementById("img_" + p1707).addEventListener("mousedown", function () {
        v3081.ⵠΔᐃΔΔ.list.ᐃⲆᐃΔⲆⲆΔᐃⲆ(p1707 - 1);
      }, false);
    }
    this.ⵠΔᐃΔΔ = {
      open: v31,
      button: f435(60, 60, 0, ΔΔ[957]),
      list: {
        id: document.getElementById("recipe_craft"),
        style: document.getElementById("recipe_craft").style,
        Ⲇⵠᐃⵠᐃ: [],
        ⵠΔⲆΔᐃΔΔ: 0,
        ᐃⲆⲆ: function () {
          this.style.left = Math.floor(v424 - 335) + "px";
          this.style.top = Math.floor(v425 - 215) + "px";
        },
        ⵠΔⵠᐃΔ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          v3081.ⵠΔᐃΔΔ.open = false;
        },
        ΔΔⲆⲆⲆⲆⲆ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          document.getElementById("home_craft").style.display = "inline-block";
        },
        ᐃⲆᐃΔⲆⲆΔᐃⲆ: function (p1708) {
          if ((v2745 = this.Ⲇⵠᐃⵠᐃ[p1708]).ⲆⲆΔ) {
            document.getElementById("watercraft").style.display = "inline-block";
          } else {
            document.getElementById("watercraft").style.display = "none";
          }
          if (v2745.f) {
            document.getElementById("firecraft").style.display = "inline-block";
          } else {
            document.getElementById("firecraft").style.display = "none";
          }
          if (v2745.w) {
            document.getElementById("workcraft").style.display = "inline-block";
          } else {
            document.getElementById("workcraft").style.display = "none";
          }
          if (v2745.e) {
            document.getElementById("wellcraft").style.display = "inline-block";
          } else {
            document.getElementById("wellcraft").style.display = "none";
          }
          for (var v2745 = v2745.r, v2746 = (p1708 = 0, 1); p1708 < v2745.length; p1708++) {
            document.getElementById("inv" + v2746).style.display = "inline-block";
            document.getElementById("inv" + v2746).src = ΔΔ[v628[v2745[p1708][0]].Δᐃ][0].ΔΔⲆⲆⵠ === undefined ? ΔΔ[v628[v2745[p1708][0]].Δᐃ][0].src : ΔΔ[v628[v2745[p1708][0]].Δᐃ][0].ΔΔⲆⲆⵠ;
            document.getElementById("numb" + v2746).innerHTML = "" + v2745[p1708][1];
            v2746++;
          }
          for (; v2746 < 6; v2746++) {
            document.getElementById("inv" + v2746).style.display = "none";
            document.getElementById("numb" + v2746).innerHTML = "";
          }
        },
        ΔΔⵠⵠⵠᐃⲆΔΔ: function (p1709) {
          const v2747 = {};
          for (let v2748 in p1709) {
            const v2749 = p1709[v2748];
            v2747[v2749.id] = v2749;
          }
          const v2750 = new vWindow.Set(p1709.map(function (p1710) {
            return p1710.id;
          }));
          const v2751 = [];
          const v2752 = [];
          for (const v2753 of p1709) {
            let v2754 = false;
            for (let v2755 = 0; v2755 < v2753.r.length; v2755++) {
              const v2756 = v2753.r[v2755][0];
              if (v2750.has(v2756)) {
                v2754 = true;
                break;
              }
            }
            if (v2754) {
              v2752.push(v2753);
            } else {
              v2751.push(v2753);
            }
          }
          p1709 = v2751.concat(v2752);
          const v2757 = {};
          for (let v2758 in p1709) {
            const v2759 = p1709[v2758];
            v2757[v2759.id] = new vWindow.Set();
            for (let v2760 = 0; v2760 < v2759.r.length; v2760++) {
              const v2761 = v2759.r[v2760][0];
              if (v2747[v2761]) {
                v2757[v2759.id].add(v2761);
              }
            }
          }
          const v2762 = new vWindow.Set();
          const v2763 = new vWindow.Set();
          const v2764 = [];
          function f501(p1711) {
            if (v2763.has(p1711)) {
              return p1709;
            }
            if (!v2762.has(p1711)) {
              v2763.add(p1711);
              for (const v2765 of v2757[p1711]) {
                f501(v2765);
              }
              v2763.delete(p1711);
              v2762.add(p1711);
              v2764.push(v2747[p1711]);
            }
          }
          for (let v2766 in p1709) {
            const v2767 = p1709[v2766];
            if (!v2762.has(v2767.id)) {
              f501(v2767.id);
            }
          }
          return v2764;
        },
        select: function (p1712) {
          this.ⵠΔⲆΔᐃΔΔ = p1712;
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("workcraft").style.display = "none";
          document.getElementById("firecraft").style.display = "none";
          document.getElementById("watercraft").style.display = "none";
          document.getElementById("wellcraft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "inline-block";
          document.getElementById("inv1").style.display = "none";
          document.getElementById("inv2").style.display = "none";
          document.getElementById("inv3").style.display = "none";
          document.getElementById("inv4").style.display = "none";
          document.getElementById("inv5").style.display = "none";
          document.getElementById("numb1").innerHTML = "";
          document.getElementById("numb2").innerHTML = "";
          document.getElementById("numb3").innerHTML = "";
          document.getElementById("numb4").innerHTML = "";
          document.getElementById("numb5").innerHTML = "";
          let v2768 = [];
          for (var v2769 = 0; v2769 < v768.length; v2769++) {
            var v2770 = v768[v2769];
            if (v2770 !== vVVUndefined83 && v2770 !== null && p1712 === v2770.Δᐃⵠ) {
              v2768.push(v768[v2769]);
            }
          }
          v2768 = this.ΔΔⵠⵠⵠᐃⲆΔΔ(v2768);
          v2769 = 0;
          var v2771 = 0;
          for (; v2769 < v2768.length; v2769++) {
            const v2772 = v2768[v2769];
            this.Ⲇⵠᐃⵠᐃ[v2771] = v2768[v2769];
            v2771++;
            document.getElementById("img_" + v2771).style.display = "inline-block";
            document.getElementById("img_" + v2771).src = ΔΔ[v628[v2772.ⵠⵠᐃⲆ].Δᐃ][0].ΔΔⲆⲆⵠ === undefined ? ΔΔ[v628[v2772.ⵠⵠᐃⲆ].Δᐃ][0].src : ΔΔ[v628[v2772.ⵠⵠᐃⲆ].Δᐃ][0].ΔΔⲆⲆⵠ;
          }
          for (v2771++; v2771 < 91; v2771++) {
            document.getElementById("img_" + v2771).style.display = "none";
          }
        }
      },
      ⲆΔⲆⲆᐃⲆⵠ: {
        id: document.getElementById("home_craft"),
        style: document.getElementById("home_craft").style,
        ᐃⲆⲆ: function () {
          this.style.left = Math.floor(v424 - 285) + "px";
          this.style.top = Math.floor(v425 - 170) + "px";
        },
        ⵠΔⵠᐃΔ: function () {
          document.getElementById("home_craft").style.display = "none";
          v3081.ⵠΔᐃΔΔ.open = vV314;
        }
      },
      ᐃⵠΔⲆⵠΔΔΔᐃ: function () {
        this.open = !this.open;
        if (this.open) {
          document.getElementById("home_craft").style.display = "inline-block";
        } else {
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "none";
        }
      }
    };
    document.getElementById("quit").addEventListener("mouseup", this.ⵠΔᐃΔΔ.ⲆΔⲆⲆᐃⲆⵠ.ⵠΔⵠᐃΔ, vVVVV316);
    document.getElementById("quitmenu").addEventListener("mouseup", this.ⵠΔᐃΔΔ.list.ⵠΔⵠᐃΔ, false);
    document.getElementById("backhome").addEventListener("mouseup", this.ⵠΔᐃΔΔ.list.ΔΔⲆⲆⲆⲆⲆ, vVV312);
    document.getElementById("hatcategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(2);
    }, false);
    document.getElementById("weaponcategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(1);
    }, false);
    document.getElementById("toolcategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(0);
    }, vVV3152);
    document.getElementById("foodcategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(3);
    }, vVVV316);
    document.getElementById("placeablecategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(4);
    }, vV316);
    document.getElementById("constructioncategory").addEventListener("mouseup", function () {
      v3081.ⵠΔᐃΔΔ.list.select(5);
    }, vVV31);
    for (let v2773 = 1; v2773 <= 90; v2773++) {
      f500(v2773);
    }
    this.ⲆⵠΔΔΔ = {
      translate: {
        x: 0,
        y: 0
      },
      ᐃΔⵠⲆᐃᐃᐃ: {
        x: -1,
        y: -1
      },
      ⵠⵠΔⵠ: [],
      focus: function (p1713) {
        var v2774 = this.translate.y + (v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length > 0 ? -120 : -50);
        if (p1713.x > this.translate.x && p1713.x < this.translate.x + 193 && p1713.y > v2774 && p1713.y < v2774 + 193) {
          this.ᐃΔⵠⲆᐃᐃᐃ.x = p1713.x - this.translate.x;
          this.ᐃΔⵠⲆᐃᐃᐃ.y = p1713.y - v2774;
        }
      }
    };
    this.ⲆⲆⲆⲆⲆ = {
      translate: {
        y: 0,
        x: 0
      },
      Δᐃ: ΔΔ[388],
      ΔΔⵠ: document.createElement("canvas")
    };
    this.ⲆⲆⲆⲆⲆ.ΔΔⵠ.width = this.ⲆⲆⲆⲆⲆ.Δᐃ.width;
    this.ⲆⲆⲆⲆⲆ.ΔΔⵠ.height = this.ⲆⲆⲆⲆⲆ.Δᐃ.height;
    this.ⲆⲆⲆⲆⲆ.ᐃ = this.ⲆⲆⲆⲆⲆ.ΔΔⵠ.getContext("2d");
    this.ᐃⲆⵠΔ = {
      translate: {
        y: 0,
        x: 0
      },
      Δᐃ: ΔΔ[377],
      ᐃᐃΔⵠ: f325,
      y: 0
    };
    var v2775 = vWindow.document.createElement("div");
    this.ΔΔⵠⲆᐃⵠΔ = function () {
      ⵠΔΔⵠΔ = document.getElementById("team_box");
      ⵠΔΔⵠΔ.innerHTML = "";
      ⵠΔΔⵠΔ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[0]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div";
      for (var v2776 = 1; v2885.ΔⲆΔᐃᐃ.length > v2776; v2776++) {
        ⵠΔΔⵠΔ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[v2776]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div></div>";
      }
      ⵠΔΔⵠΔ.innerHTML += "<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>";
      ⵠΔΔⵠΔ.style.display = "inline-block";
      document.getElementById("leave").addEventListener("click", v2887.ΔΔⵠⲆᐃⵠΔ, false);
    };
    this.ΔΔᐃΔⲆⵠⲆⵠⲆ = function () {
      ⵠΔΔⵠΔ = document.getElementById("team_box");
      ⵠΔΔⵠΔ.innerHTML = "";
      ⵠΔΔⵠΔ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[0]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div";
      for (var v2777 = 1; v2777 < v2885.ΔⲆΔᐃᐃ.length; v2777++) {
        ⵠΔΔⵠΔ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[v2777]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div></div>";
      }
      ⵠΔΔⵠΔ.innerHTML += "</div>";
      ⵠΔΔⵠΔ.style.display = "inline-block";
    };
    this.ⲆᐃⵠⵠᐃⲆⲆᐃⵠ = function () {
      ⵠΔΔⵠΔ = document.getElementById("team_box");
      ⵠΔΔⵠΔ.innerHTML = "";
      ⵠΔΔⵠΔ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[0]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div";
      for (var v2778 = 1; v2778 < v2885.ΔⲆΔᐃᐃ.length; v2778++) {
        ⵠΔΔⵠΔ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2775.innerText = v2884.ⵠⵠΔⵠ[v2885.ΔⲆΔᐃᐃ[v2778]].ΔΔΔⲆⲆ) && v2775.innerHTML) + "</div><div class=\"eject_member\" id=\"eject_member" + v2778 + "\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>";
      }
      if (v2885.ⵠⵠⵠᐃᐃ.lock === 0) {
        ⵠΔΔⵠΔ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>";
      } else {
        ⵠΔΔⵠΔ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>";
      }
      document.getElementById("lock_team").addEventListener("click", v2887.ⵠⵠⵠⲆⲆᐃⲆᐃᐃ, false);
      ⵠΔΔⵠΔ.style.display = "inline-block";
      for (v2778 = 1; v2885.ΔⲆΔᐃᐃ.length > v2778; v2778++) {
        switch (v2778) {
          case 1:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(1);
            }, vVV314);
            break;
          case 2:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(2);
            }, false);
            break;
          case 3:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(3);
            }, false);
            break;
          case 4:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(4);
            }, vVVV313);
            break;
          case 5:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(5);
            }, vVV31);
            break;
          case 6:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(6);
            }, false);
            break;
          case 7:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(7);
            }, false);
            break;
          case 8:
            document.getElementById("eject_member" + v2778).addEventListener("click", function () {
              v2887.ⲆᐃⵠⲆⵠⵠⵠ(8);
            }, false);
        }
      }
    };
    this.ⵠⲆⲆᐃⲆ = [];
    this.ⵠⲆⲆᐃⲆ[2] = {
      button: f435(60, 60, 0, ΔΔ[721]),
      action: this.ΔΔⵠⲆᐃⵠΔ
    };
    this.ⵠⲆⲆᐃⲆ[3] = {
      button: f435(60, 60, 0, ΔΔ[721]),
      action: v2887.ⵠⵠᐃΔΔⲆⲆΔᐃ
    };
    this.ⵠⲆⲆᐃⲆ[0] = {
      button: f435(60, 60, 0, ΔΔ[722]),
      action: this.ⲆᐃⵠⵠᐃⲆⲆᐃⵠ
    };
    this.ⵠⲆⲆᐃⲆ[1] = {
      button: f435(60, 60, 0, ΔΔ[726]),
      action: this.ΔΔᐃΔⲆⵠⲆⵠⲆ
    };
    this.ⵠⲆⲆᐃⲆ[4] = {
      button: f435(60, 60, 0, ΔΔ[725]),
      action: function () {}
    };
    this.ⲆᐃⵠΔΔ = -1;
    this.ᐃΔᐃΔΔⵠΔ = f435(60, 60, 0, ΔΔ[972]);
    this.ᐃΔⲆⵠᐃΔⵠ = f435(60, 60, 0, ΔΔ[973]);
    this.ⵠᐃΔΔᐃΔΔ = f435(60, 60, 0, ΔΔ[877]);
    this.ΔⲆΔⲆⵠⵠⲆ = f435(60, 60, 0, ΔΔ[876]);
    this.ⲆᐃⵠΔΔⵠⲆ = f435(60, 60, 0, ΔΔ[877]);
    this.ⲆᐃⵠΔⵠⵠΔ = f435(60, 60, 0, ΔΔ[427]);
    this.ⵠᐃᐃⵠΔᐃΔ = f435(60, 60, 0, ΔΔ[426]);
    this.ⲆᐃⲆⵠᐃⵠΔ = f435(60, 60, 0, ΔΔ[408]);
    this.ΔⲆᐃⲆᐃᐃⵠ = f435(60, 60, 0, ΔΔ[409]);
    this.ᐃᐃΔⲆⲆⲆⵠ = f435(60, 60, 0, ΔΔ[529]);
    this.ⲆⵠⲆⵠΔᐃⵠ = f435(60, 60, 0, ΔΔ[1214]);
    this.ⵠⲆⵠΔΔⵠᐃ = f435(60, 60, 0, ΔΔ[1484]);
    this.ΔⵠΔⲆⲆⲆΔ = f435(60, 60, 0, ΔΔ[1722]);
    this.ⵠⵠᐃΔⵠⵠΔ = f435(60, 60, 0, ΔΔ[1724]);
    this.ⲆⲆᐃⵠΔⵠⵠ = f435(60, 60, 0, ΔΔ[1726]);
    this.ⵠᐃⵠᐃᐃⲆᐃ = f435(60, 60, 0, ΔΔ[1728]);
    this.ΔⵠⵠΔⵠΔⲆ = f435(60, 60, 0, ΔΔ[1730]);
    this.ⵠΔΔΔⲆΔΔ = f435(60, 60, 0, ΔΔ[1732]);
    this.ΔⵠᐃⵠⵠᐃΔ = f435(60, 60, 0, ΔΔ[1734]);
    this.ⵠΔⲆΔΔΔΔ = f435(60, 60, 0, ΔΔ[1736]);
    this.ⲆᐃⵠᐃⵠⲆⵠ = f435(60, 60, 0, ΔΔ[523]);
    this.Ⲇⵠⵠᐃᐃᐃⵠ = f435(60, 60, 0, ΔΔ[674]);
    this.ⲆΔⵠⵠΔⲆⵠ = f435(60, 60, 0, ΔΔ[673]);
    this.ᐃΔᐃᐃᐃⵠⲆ = f435(60, 60, 0, ΔΔ[676]);
    this.ᐃⵠⲆⲆΔ = f435(120, 120, 0, ΔΔ[242]);
    this.ᐃⵠⲆⲆΔ.info.translate.x = 10;
    this.ᐃⵠⲆⲆΔ.info.translate.y = 10;
    this.ΔΔᐃ = [];
    this.ΔΔᐃ[0] = f435(68, 68, 0, ΔΔ[451], 3);
    this.ΔΔᐃ[0].id = 0;
    this.ΔΔᐃ[1] = f435(68, 68, 0, ΔΔ[452], 3);
    this.ΔΔᐃ[1].id = 1;
    this.ΔΔᐃ[199] = f435(68, 68, 0, ΔΔ[453], 3);
    this.ΔΔᐃ[199].id = 199;
    this.ΔΔᐃ[200] = f435(68, 68, 0, ΔΔ[454], 3);
    this.ΔΔᐃ[200].id = 200;
    this.ΔΔᐃ[201] = f435(68, 68, 0, ΔΔ[379], 3);
    this.ΔΔᐃ[201].id = 201;
    this.ΔΔᐃ[343] = f435(68, 68, 0, ΔΔ[1483], 3);
    this.ΔΔᐃ[343].id = 343;
    this.ΔΔᐃ[202] = f435(68, 68, 0, ΔΔ[380], 3);
    this.ΔΔᐃ[202].id = 202;
    this.ΔΔᐃ[203] = f435(68, 68, 0, ΔΔ[381], 3);
    this.ΔΔᐃ[203].id = 203;
    this.ΔΔᐃ[3] = f435(68, 68, 0, ΔΔ[382], 3);
    this.ΔΔᐃ[3].id = 3;
    this.ΔΔᐃ[4] = f435(68, 68, 0, ΔΔ[455], 3);
    this.ΔΔᐃ[4].id = 4;
    this.ΔΔᐃ[5] = f435(68, 68, 0, ΔΔ[456], 3);
    this.ΔΔᐃ[5].id = 5;
    this.ΔΔᐃ[103] = f435(68, 68, 0, ΔΔ[1080], 3);
    this.ΔΔᐃ[103].id = 103;
    this.ΔΔᐃ[6] = f435(68, 68, 0, ΔΔ[457], 3);
    this.ΔΔᐃ[6].id = 6;
    this.ΔΔᐃ[204] = f435(68, 68, 0, ΔΔ[383], 3);
    this.ΔΔᐃ[204].id = 204;
    this.ΔΔᐃ[205] = f435(68, 68, 0, ΔΔ[469], 3);
    this.ΔΔᐃ[205].id = 205;
    this.ΔΔᐃ[206] = f435(68, 68, 0, ΔΔ[459], 3);
    this.ΔΔᐃ[206].id = 206;
    this.ΔΔᐃ[264] = f435(68, 68, 0, ΔΔ[460], 3);
    this.ΔΔᐃ[264].id = 264;
    this.ΔΔᐃ[262] = f435(68, 68, 0, ΔΔ[461], 3);
    this.ΔΔᐃ[262].id = 262;
    this.ΔΔᐃ[8] = f435(68, 68, 0, ΔΔ[384], 3);
    this.ΔΔᐃ[8].id = 8;
    this.ΔΔᐃ[208] = f435(68, 68, 0, ΔΔ[462], 3);
    this.ΔΔᐃ[208].id = 208;
    this.ΔΔᐃ[207] = f435(68, 68, 0, ΔΔ[385], 3);
    this.ΔΔᐃ[207].id = 207;
    this.ΔΔᐃ[209] = f435(68, 68, 0, ΔΔ[386], 3);
    this.ΔΔᐃ[209].id = 209;
    this.ΔΔᐃ[297] = f435(68, 68, 0, ΔΔ[463], 3);
    this.ΔΔᐃ[297].id = 297;
    this.ΔΔᐃ[263] = f435(68, 68, 0, ΔΔ[464], 3);
    this.ΔΔᐃ[263].id = 263;
    this.ΔΔᐃ[265] = f435(68, 68, 0, ΔΔ[465], 3);
    this.ΔΔᐃ[265].id = 265;
    this.ΔΔᐃ[266] = f435(68, 68, 0, ΔΔ[466], 3);
    this.ΔΔᐃ[266].id = 266;
    this.ΔΔᐃ[267] = f435(68, 68, 0, ΔΔ[467], 3);
    this.ΔΔᐃ[267].id = 267;
    this.ΔΔᐃ[268] = f435(68, 68, 0, ΔΔ[468], 3);
    this.ΔΔᐃ[268].id = 268;
    this.ΔΔᐃ[269] = f435(68, 68, 0, ΔΔ[470], 3);
    this.ΔΔᐃ[269].id = 269;
    this.ΔΔᐃ[270] = f435(68, 68, 0, ΔΔ[493], 3);
    this.ΔΔᐃ[270].id = 270;
    this.ΔΔᐃ[271] = f435(68, 68, 0, ΔΔ[494], 3);
    this.ΔΔᐃ[271].id = 271;
    this.ΔΔᐃ[272] = f435(68, 68, 0, ΔΔ[495], 3);
    this.ΔΔᐃ[272].id = 272;
    this.ΔΔᐃ[2] = f435(68, 68, 0, ΔΔ[497], 3);
    this.ΔΔᐃ[2].id = 2;
    this.ΔΔᐃ[347] = f435(68, 68, 0, ΔΔ[1491], 3);
    this.ΔΔᐃ[347].id = 347;
    this.ΔΔᐃ[276] = f435(68, 68, 0, ΔΔ[505], 3);
    this.ΔΔᐃ[276].id = 276;
    this.ΔΔᐃ[353] = f435(68, 68, 0, ΔΔ[1753], 3);
    this.ΔΔᐃ[353].id = 353;
    this.ΔΔᐃ[351] = f435(68, 68, 0, ΔΔ[1749], 3);
    this.ΔΔᐃ[351].id = 351;
    this.ΔΔᐃ[332] = f435(68, 68, 0, ΔΔ[1344], 3);
    this.ΔΔᐃ[332].id = 332;
    this.ΔΔᐃ[341] = f435(68, 68, 0, ΔΔ[1346], 3);
    this.ΔΔᐃ[341].id = 341;
    this.ΔΔᐃ[342] = f435(68, 68, 0, ΔΔ[1348], 3);
    this.ΔΔᐃ[342].id = 342;
    this.ΔΔᐃ[352] = f435(68, 68, 0, ΔΔ[1464], 3);
    this.ΔΔᐃ[352].id = 352;
    this.ΔΔᐃ[344] = f435(68, 68, 0, ΔΔ[1485], 3);
    this.ΔΔᐃ[344].id = 344;
    this.ΔΔᐃ[10] = f435(68, 68, 0, ΔΔ[498], 3);
    this.ΔΔᐃ[10].id = 10;
    this.ΔΔᐃ[273] = f435(68, 68, 0, ΔΔ[499], 3);
    this.ΔΔᐃ[273].id = 273;
    this.ΔΔᐃ[274] = f435(68, 68, 0, ΔΔ[500], 3);
    this.ΔΔᐃ[274].id = 274;
    this.ΔΔᐃ[275] = f435(68, 68, 0, ΔΔ[501], 3);
    this.ΔΔᐃ[275].id = 275;
    this.ΔΔᐃ[11] = f435(68, 68, 0, ΔΔ[502], 3);
    this.ΔΔᐃ[11].id = 11;
    this.ΔΔᐃ[12] = f435(68, 68, 0, ΔΔ[514], 3);
    this.ΔΔᐃ[12].id = 12;
    this.ΔΔᐃ[13] = f435(68, 68, 0, ΔΔ[508], 3);
    this.ΔΔᐃ[13].id = 13;
    this.ΔΔᐃ[14] = f435(68, 68, 0, ΔΔ[511], 3);
    this.ΔΔᐃ[14].id = 14;
    this.ΔΔᐃ[15] = f435(68, 68, 0, ΔΔ[517], 3);
    this.ΔΔᐃ[15].id = 15;
    this.ΔΔᐃ[16] = f435(68, 68, 0, ΔΔ[1124], 3);
    this.ΔΔᐃ[16].id = 16;
    this.ΔΔᐃ[210] = f435(68, 68, 0, ΔΔ[521], 3);
    this.ΔΔᐃ[210].id = 210;
    this.ΔΔᐃ[32] = f435(68, 68, 0, ΔΔ[533], 3);
    this.ΔΔᐃ[32].id = 32;
    this.ΔΔᐃ[33] = f435(68, 68, 0, ΔΔ[536], 3);
    this.ΔΔᐃ[33].id = 33;
    this.ΔΔᐃ[160] = f435(68, 68, 0, ΔΔ[1620], 3);
    this.ΔΔᐃ[160].id = 160;
    this.ΔΔᐃ[161] = f435(68, 68, 0, ΔΔ[1623], 3);
    this.ΔΔᐃ[161].id = 161;
    this.ΔΔᐃ[153] = f435(68, 68, 0, ΔΔ[1467], 3);
    this.ΔΔᐃ[153].id = 153;
    this.ΔΔᐃ[154] = f435(68, 68, 0, ΔΔ[1470], 3);
    this.ΔΔᐃ[154].id = 154;
    this.ΔΔᐃ[183] = f435(68, 68, 0, ΔΔ[1495], 3);
    this.ΔΔᐃ[183].id = 183;
    this.ΔΔᐃ[119] = f435(68, 68, 0, ΔΔ[763], 3);
    this.ΔΔᐃ[119].id = 119;
    this.ΔΔᐃ[135] = f435(68, 68, 0, ΔΔ[1631], 3);
    this.ΔΔᐃ[135].id = 135;
    this.ΔΔᐃ[184] = f435(68, 68, 0, ΔΔ[1498], 3);
    this.ΔΔᐃ[184].id = 184;
    this.ΔΔᐃ[120] = f435(68, 68, 0, ΔΔ[766], 3);
    this.ΔΔᐃ[120].id = 120;
    this.ΔΔᐃ[136] = f435(68, 68, 0, ΔΔ[1634], 3);
    this.ΔΔᐃ[136].id = 136;
    this.ΔΔᐃ[185] = f435(68, 68, 0, ΔΔ[1501], 3);
    this.ΔΔᐃ[185].id = 185;
    this.ΔΔᐃ[121] = f435(68, 68, 0, ΔΔ[769], 3);
    this.ΔΔᐃ[121].id = 121;
    this.ΔΔᐃ[137] = f435(68, 68, 0, ΔΔ[1637], 3);
    this.ΔΔᐃ[137].id = 137;
    this.ΔΔᐃ[186] = f435(68, 68, 0, ΔΔ[1504], 3);
    this.ΔΔᐃ[186].id = 186;
    this.ΔΔᐃ[122] = f435(68, 68, 0, ΔΔ[772], 3);
    this.ΔΔᐃ[122].id = 122;
    this.ΔΔᐃ[138] = f435(68, 68, 0, ΔΔ[1640], 3);
    this.ΔΔᐃ[138].id = 138;
    this.ΔΔᐃ[187] = f435(68, 68, 0, ΔΔ[1507], 3);
    this.ΔΔᐃ[187].id = 187;
    this.ΔΔᐃ[123] = f435(68, 68, 0, ΔΔ[775], 3);
    this.ΔΔᐃ[123].id = 123;
    this.ΔΔᐃ[139] = f435(68, 68, 0, ΔΔ[1643], 3);
    this.ΔΔᐃ[139].id = 139;
    this.ΔΔᐃ[188] = f435(68, 68, 0, ΔΔ[1510], 3);
    this.ΔΔᐃ[188].id = 188;
    this.ΔΔᐃ[124] = f435(68, 68, 0, ΔΔ[778], 3);
    this.ΔΔᐃ[124].id = 124;
    this.ΔΔᐃ[140] = f435(68, 68, 0, ΔΔ[1646], 3);
    this.ΔΔᐃ[140].id = 140;
    this.ΔΔᐃ[189] = f435(68, 68, 0, ΔΔ[1513], 3);
    this.ΔΔᐃ[189].id = 189;
    this.ΔΔᐃ[125] = f435(68, 68, 0, ΔΔ[781], 3);
    this.ΔΔᐃ[125].id = 125;
    this.ΔΔᐃ[167] = f435(68, 68, 0, ΔΔ[1676], 3);
    this.ΔΔᐃ[167].id = 167;
    this.ΔΔᐃ[168] = f435(68, 68, 0, ΔΔ[1679], 3);
    this.ΔΔᐃ[168].id = 168;
    this.ΔΔᐃ[169] = f435(68, 68, 0, ΔΔ[1682], 3);
    this.ΔΔᐃ[169].id = 169;
    this.ΔΔᐃ[170] = f435(68, 68, 0, ΔΔ[1685], 3);
    this.ΔΔᐃ[170].id = 170;
    this.ΔΔᐃ[171] = f435(68, 68, 0, ΔΔ[1688], 3);
    this.ΔΔᐃ[171].id = 171;
    this.ΔΔᐃ[172] = f435(68, 68, 0, ΔΔ[1691], 3);
    this.ΔΔᐃ[172].id = 172;
    this.ΔΔᐃ[104] = f435(68, 68, 0, ΔΔ[1077], 3);
    this.ΔΔᐃ[104].id = 104;
    this.ΔΔᐃ[34] = f435(68, 68, 0, ΔΔ[542], 3);
    this.ΔΔᐃ[34].id = 34;
    this.ΔΔᐃ[35] = f435(68, 68, 0, ΔΔ[545], 3);
    this.ΔΔᐃ[35].id = 35;
    this.ΔΔᐃ[36] = f435(68, 68, 0, ΔΔ[548], 3);
    this.ΔΔᐃ[36].id = 36;
    this.ΔΔᐃ[46] = f435(68, 68, 0, ΔΔ[578], 3);
    this.ΔΔᐃ[46].id = 46;
    this.ΔΔᐃ[211] = f435(68, 68, 0, ΔΔ[581], 3);
    this.ΔΔᐃ[211].id = 211;
    this.ΔΔᐃ[47] = f435(68, 68, 0, ΔΔ[496], 3);
    this.ΔΔᐃ[47].id = 47;
    this.ΔΔᐃ[212] = f435(68, 68, 0, ΔΔ[584], 3);
    this.ΔΔᐃ[212].id = 212;
    this.ΔΔᐃ[48] = f435(68, 68, 0, ΔΔ[595], 3);
    this.ΔΔᐃ[48].id = 48;
    this.ΔΔᐃ[9] = f435(68, 68, 0, ΔΔ[1111], 3);
    this.ΔΔᐃ[9].id = 9;
    this.ΔΔᐃ[49] = f435(68, 68, 0, ΔΔ[597], 3);
    this.ΔΔᐃ[49].id = 49;
    this.ΔΔᐃ[50] = f435(68, 68, 0, ΔΔ[1294], 3);
    this.ΔΔᐃ[50].id = 50;
    this.ΔΔᐃ[60] = f435(68, 68, 0, ΔΔ[612], 3);
    this.ΔΔᐃ[60].id = 60;
    this.ΔΔᐃ[62] = f435(68, 68, 0, ΔΔ[617], 3);
    this.ΔΔᐃ[62].id = 62;
    this.ΔΔᐃ[63] = f435(68, 68, 0, ΔΔ[620], 3);
    this.ΔΔᐃ[63].id = 63;
    this.ΔΔᐃ[64] = f435(68, 68, 0, ΔΔ[623], 3);
    this.ΔΔᐃ[64].id = 64;
    this.ΔΔᐃ[65] = f435(68, 68, 0, ΔΔ[626], 3);
    this.ΔΔᐃ[65].id = 65;
    this.ΔΔᐃ[66] = f435(68, 68, 0, ΔΔ[629], 3);
    this.ΔΔᐃ[66].id = 66;
    this.ΔΔᐃ[213] = f435(68, 68, 0, ΔΔ[632], 3);
    this.ΔΔᐃ[213].id = 213;
    this.ΔΔᐃ[214] = f435(68, 68, 0, ΔΔ[635], 3);
    this.ΔΔᐃ[214].id = 214;
    this.ΔΔᐃ[215] = f435(68, 68, 0, ΔΔ[639], 3);
    this.ΔΔᐃ[215].id = 215;
    this.ΔΔᐃ[67] = f435(68, 68, 0, ΔΔ[642], 3);
    this.ΔΔᐃ[67].id = 67;
    this.ΔΔᐃ[239] = f435(68, 68, 0, ΔΔ[644], 3);
    this.ΔΔᐃ[239].id = 239;
    this.ΔΔᐃ[350] = f435(68, 68, 0, ΔΔ[1625], 3);
    this.ΔΔᐃ[350].id = 350;
    this.ΔΔᐃ[240] = f435(68, 68, 0, ΔΔ[652], 3);
    this.ΔΔᐃ[240].id = 240;
    this.ΔΔᐃ[241] = f435(68, 68, 0, ΔΔ[658], 3);
    this.ΔΔᐃ[241].id = 241;
    this.ΔΔᐃ[242] = f435(68, 68, 0, ΔΔ[660], 3);
    this.ΔΔᐃ[242].id = 242;
    this.ΔΔᐃ[243] = f435(68, 68, 0, ΔΔ[662], 3);
    this.ΔΔᐃ[243].id = 243;
    this.ΔΔᐃ[244] = f435(68, 68, 0, ΔΔ[669], 3);
    this.ΔΔᐃ[244].id = 244;
    this.ΔΔᐃ[260] = f435(68, 68, 0, ΔΔ[672], 3);
    this.ΔΔᐃ[260].id = 260;
    this.ΔΔᐃ[261] = f435(68, 68, 0, ΔΔ[719], 3);
    this.ΔΔᐃ[261].id = 261;
    this.ΔΔᐃ[70] = f435(68, 68, 0, ΔΔ[681], 3);
    this.ΔΔᐃ[70].id = 70;
    this.ΔΔᐃ[72] = f435(68, 68, 0, ΔΔ[690], 3);
    this.ΔΔᐃ[72].id = 72;
    this.ΔΔᐃ[216] = f435(68, 68, 0, ΔΔ[825], 3);
    this.ΔΔᐃ[216].id = 216;
    this.ΔΔᐃ[331] = f435(68, 68, 0, ΔΔ[1628], 3);
    this.ΔΔᐃ[331].id = 331;
    this.ΔΔᐃ[333] = f435(68, 68, 0, ΔΔ[1337], 3);
    this.ΔΔᐃ[333].id = 333;
    this.ΔΔᐃ[334] = f435(68, 68, 0, ΔΔ[1340], 3);
    this.ΔΔᐃ[334].id = 334;
    this.ΔΔᐃ[340] = f435(68, 68, 0, ΔΔ[1426], 3);
    this.ΔΔᐃ[340].id = 340;
    this.ΔΔᐃ[162] = f435(68, 68, 0, ΔΔ[1355], 3);
    this.ΔΔᐃ[162].id = 162;
    this.ΔΔᐃ[335] = f435(68, 68, 0, ΔΔ[1358], 3);
    this.ΔΔᐃ[335].id = 335;
    this.ΔΔᐃ[337] = f435(68, 68, 0, ΔΔ[1389], 3);
    this.ΔΔᐃ[337].id = 337;
    this.ΔΔᐃ[349] = f435(68, 68, 0, ΔΔ[1616], 3);
    this.ΔΔᐃ[349].id = 349;
    this.ΔΔᐃ[338] = f435(68, 68, 0, ΔΔ[1404], 3);
    this.ΔΔᐃ[338].id = 338;
    this.ΔΔᐃ[339] = f435(68, 68, 0, ΔΔ[1419], 3);
    this.ΔΔᐃ[339].id = 339;
    this.ΔΔᐃ[355] = f435(68, 68, 0, ΔΔ[1440], 3);
    this.ΔΔᐃ[355].id = 355;
    this.ΔΔᐃ[354] = f435(68, 68, 0, ΔΔ[1458], 3);
    this.ΔΔᐃ[354].id = 354;
    this.ΔΔᐃ[358] = f435(68, 68, 0, ΔΔ[1329], 3);
    this.ΔΔᐃ[358].id = 358;
    this.ΔΔᐃ[336] = f435(68, 68, 0, ΔΔ[1545], 3);
    this.ΔΔᐃ[336].id = 336;
    this.ΔΔᐃ[217] = f435(68, 68, 0, ΔΔ[829], 3);
    this.ΔΔᐃ[217].id = 217;
    this.ΔΔᐃ[218] = f435(68, 68, 0, ΔΔ[834], 3);
    this.ΔΔᐃ[218].id = 218;
    this.ΔΔᐃ[221] = f435(68, 68, 0, ΔΔ[833], 3);
    this.ΔΔᐃ[221].id = 221;
    this.ΔΔᐃ[82] = f435(68, 68, 0, ΔΔ[836], 3);
    this.ΔΔᐃ[82].id = 82;
    this.ΔΔᐃ[86] = f435(68, 68, 0, ΔΔ[920], 3);
    this.ΔΔᐃ[86].id = 86;
    this.ΔΔᐃ[87] = f435(68, 68, 0, ΔΔ[922], 3);
    this.ΔΔᐃ[87].id = 87;
    this.ΔΔᐃ[88] = f435(68, 68, 0, ΔΔ[926], 3);
    this.ΔΔᐃ[88].id = 88;
    this.ΔΔᐃ[101] = f435(68, 68, 0, ΔΔ[959], 3);
    this.ΔΔᐃ[101].id = 101;
    this.ΔΔᐃ[222] = f435(68, 68, 0, ΔΔ[844], 3);
    this.ΔΔᐃ[222].id = 222;
    this.ΔΔᐃ[223] = f435(68, 68, 0, ΔΔ[847], 3);
    this.ΔΔᐃ[223].id = 223;
    this.ΔΔᐃ[224] = f435(68, 68, 0, ΔΔ[849], 3);
    this.ΔΔᐃ[224].id = 224;
    this.ΔΔᐃ[225] = f435(68, 68, 0, ΔΔ[852], 3);
    this.ΔΔᐃ[225].id = 225;
    this.ΔΔᐃ[226] = f435(68, 68, 0, ΔΔ[855], 3);
    this.ΔΔᐃ[226].id = 226;
    this.ΔΔᐃ[227] = f435(68, 68, 0, ΔΔ[859], 3);
    this.ΔΔᐃ[227].id = 227;
    this.ΔΔᐃ[228] = f435(68, 68, 0, ΔΔ[864], 3);
    this.ΔΔᐃ[228].id = 228;
    this.ΔΔᐃ[83] = f435(68, 68, 0, ΔΔ[867], 3);
    this.ΔΔᐃ[83].id = 83;
    this.ΔΔᐃ[84] = f435(68, 68, 0, ΔΔ[870], 3);
    this.ΔΔᐃ[84].id = 84;
    this.ΔΔᐃ[85] = f435(68, 68, 0, ΔΔ[872], 3);
    this.ΔΔᐃ[85].id = 85;
    this.ΔΔᐃ[229] = f435(68, 68, 0, ΔΔ[880], 3);
    this.ΔΔᐃ[229].id = 229;
    this.ΔΔᐃ[236] = f435(68, 68, 0, ΔΔ[908], 3);
    this.ΔΔᐃ[236].id = 236;
    this.ΔΔᐃ[230] = f435(68, 68, 0, ΔΔ[882], 3);
    this.ΔΔᐃ[230].id = 230;
    this.ΔΔᐃ[231] = f435(68, 68, 0, ΔΔ[884], 3);
    this.ΔΔᐃ[231].id = 231;
    this.ΔΔᐃ[232] = f435(68, 68, 0, ΔΔ[894], 3);
    this.ΔΔᐃ[232].id = 232;
    this.ΔΔᐃ[233] = f435(68, 68, 0, ΔΔ[901], 3);
    this.ΔΔᐃ[233].id = 233;
    this.ΔΔᐃ[234] = f435(68, 68, 0, ΔΔ[902], 3);
    this.ΔΔᐃ[234].id = 234;
    this.ΔΔᐃ[235] = f435(68, 68, 0, ΔΔ[905], 3);
    this.ΔΔᐃ[235].id = 235;
    this.ΔΔᐃ[237] = f435(68, 68, 0, ΔΔ[968], 3);
    this.ΔΔᐃ[237].id = 237;
    this.ΔΔᐃ[238] = f435(68, 68, 0, ΔΔ[980], 3);
    this.ΔΔᐃ[238].id = 238;
    this.ΔΔᐃ[105] = f435(68, 68, 0, ΔΔ[982], 3);
    this.ΔΔᐃ[105].id = 105;
    this.ΔΔᐃ[108] = f435(68, 68, 0, ΔΔ[730], 3);
    this.ΔΔᐃ[108].id = 108;
    this.ΔΔᐃ[287] = f435(68, 68, 0, ΔΔ[809], 3);
    this.ΔΔᐃ[287].id = 287;
    this.ΔΔᐃ[286] = f435(68, 68, 0, ΔΔ[1001], 3);
    this.ΔΔᐃ[286].id = 286;
    this.ΔΔᐃ[289] = f435(68, 68, 0, ΔΔ[810], 3);
    this.ΔΔᐃ[289].id = 289;
    this.ΔΔᐃ[288] = f435(68, 68, 0, ΔΔ[1003], 3);
    this.ΔΔᐃ[288].id = 288;
    this.ΔΔᐃ[150] = f435(68, 68, 0, ΔΔ[1006], 3);
    this.ΔΔᐃ[150].id = 150;
    this.ΔΔᐃ[277] = f435(68, 68, 0, ΔΔ[1008], 3);
    this.ΔΔᐃ[277].id = 277;
    this.ΔΔᐃ[278] = f435(68, 68, 0, ΔΔ[1012], 3);
    this.ΔΔᐃ[278].id = 278;
    this.ΔΔᐃ[151] = f435(68, 68, 0, ΔΔ[1010], 3);
    this.ΔΔᐃ[151].id = 151;
    this.ΔΔᐃ[279] = f435(68, 68, 0, ΔΔ[1015], 3);
    this.ΔΔᐃ[279].id = 279;
    this.ΔΔᐃ[152] = f435(68, 68, 0, ΔΔ[1014], 3);
    this.ΔΔᐃ[152].id = 152;
    this.ΔΔᐃ[156] = f435(68, 68, 0, ΔΔ[1018], 3);
    this.ΔΔᐃ[156].id = 156;
    this.ΔΔᐃ[157] = f435(68, 68, 0, ΔΔ[1022], 3);
    this.ΔΔᐃ[157].id = 157;
    this.ΔΔᐃ[280] = f435(68, 68, 0, ΔΔ[1023], 3);
    this.ΔΔᐃ[280].id = 280;
    this.ΔΔᐃ[281] = f435(68, 68, 0, ΔΔ[1024], 3);
    this.ΔΔᐃ[281].id = 281;
    this.ΔΔᐃ[159] = f435(68, 68, 0, ΔΔ[1027], 3);
    this.ΔΔᐃ[159].id = 159;
    this.ΔΔᐃ[158] = f435(68, 68, 0, ΔΔ[1030], 3);
    this.ΔΔᐃ[158].id = 158;
    this.ΔΔᐃ[282] = f435(68, 68, 0, ΔΔ[1035], 3);
    this.ΔΔᐃ[282].id = 282;
    this.ΔΔᐃ[283] = f435(68, 68, 0, ΔΔ[1036], 3);
    this.ΔΔᐃ[283].id = 283;
    this.ΔΔᐃ[284] = f435(68, 68, 0, ΔΔ[1039], 3);
    this.ΔΔᐃ[284].id = 284;
    this.ΔΔᐃ[285] = f435(68, 68, 0, ΔΔ[1050], 3);
    this.ΔΔᐃ[285].id = 285;
    this.ΔΔᐃ[290] = f435(68, 68, 0, ΔΔ[1059], 3);
    this.ΔΔᐃ[290].id = 290;
    this.ΔΔᐃ[291] = f435(68, 68, 0, ΔΔ[1064], 3);
    this.ΔΔᐃ[291].id = 291;
    this.ΔΔᐃ[292] = f435(68, 68, 0, ΔΔ[1093], 3);
    this.ΔΔᐃ[292].id = 292;
    this.ΔΔᐃ[293] = f435(68, 68, 0, ΔΔ[1085], 3);
    this.ΔΔᐃ[293].id = 293;
    this.ΔΔᐃ[294] = f435(68, 68, 0, ΔΔ[1090], 3);
    this.ΔΔᐃ[294].id = 294;
    this.ΔΔᐃ[295] = f435(68, 68, 0, ΔΔ[1096], 3);
    this.ΔΔᐃ[295].id = 295;
    this.ΔΔᐃ[296] = f435(68, 68, 0, ΔΔ[1100], 3);
    this.ΔΔᐃ[296].id = 296;
    this.ΔΔᐃ[316] = f435(68, 68, 0, ΔΔ[1237], 3);
    this.ΔΔᐃ[316].id = 316;
    this.ΔΔᐃ[317] = f435(68, 68, 0, ΔΔ[1250], 3);
    this.ΔΔᐃ[317].id = 317;
    this.ΔΔᐃ[314] = f435(68, 68, 0, ΔΔ[1227], 3);
    this.ΔΔᐃ[314].id = 314;
    this.ΔΔᐃ[315] = f435(68, 68, 0, ΔΔ[1232], 3);
    this.ΔΔᐃ[315].id = 315;
    this.ΔΔᐃ[318] = f435(68, 68, 0, ΔΔ[1244], 3);
    this.ΔΔᐃ[318].id = 318;
    this.ΔΔᐃ[319] = f435(68, 68, 0, ΔΔ[1249], 3);
    this.ΔΔᐃ[319].id = 319;
    this.ΔΔᐃ[320] = f435(68, 68, 0, ΔΔ[1259], 3);
    this.ΔΔᐃ[320].id = 320;
    this.ΔΔᐃ[321] = f435(68, 68, 0, ΔΔ[1264], 3);
    this.ΔΔᐃ[321].id = 321;
    this.ΔΔᐃ[68] = f435(68, 68, 0, ΔΔ[1157], 3);
    this.ΔΔᐃ[68].id = 68;
    this.ΔΔᐃ[69] = f435(68, 68, 0, ΔΔ[1159], 3);
    this.ΔΔᐃ[69].id = 69;
    this.ΔΔᐃ[12] = f435(68, 68, 0, ΔΔ[514], 3);
    this.ΔΔᐃ[12].id = 12;
    this.ΔΔᐃ[16] = f435(68, 68, 0, ΔΔ[1124], 3);
    this.ΔΔᐃ[16].id = 16;
    this.ΔΔᐃ[298] = f435(68, 68, 0, ΔΔ[1174], 3);
    this.ΔΔᐃ[298].id = 298;
    this.ΔΔᐃ[18] = f435(68, 68, 0, ΔΔ[1175], 3);
    this.ΔΔᐃ[18].id = 18;
    this.ΔΔᐃ[299] = f435(68, 68, 0, ΔΔ[1182], 3);
    this.ΔΔᐃ[299].id = 299;
    this.ΔΔᐃ[300] = f435(68, 68, 0, ΔΔ[1184], 3);
    this.ΔΔᐃ[300].id = 300;
    this.ΔΔᐃ[107] = f435(68, 68, 0, ΔΔ[1187], 3);
    this.ΔΔᐃ[107].id = 107;
    this.ΔΔᐃ[303] = f435(68, 68, 0, ΔΔ[1120], 3);
    this.ΔΔᐃ[303].id = 303;
    this.ΔΔᐃ[301] = f435(68, 68, 0, ΔΔ[1112], 3);
    this.ΔΔᐃ[301].id = 301;
    this.ΔΔᐃ[302] = f435(68, 68, 0, ΔΔ[1117], 3);
    this.ΔΔᐃ[302].id = 302;
    this.ΔⵠᐃΔⵠ = [];
    for (v2734 = 0; v2734 < 1000; v2734++) {
      this.ΔⵠᐃΔⵠ[v2734] = f435(0, 0, 0, ΔΔ[477]);
    }
    this.Ⲇᐃᐃ = [];
    this.Ⲇᐃᐃ[0] = f435(60, 60, 0, ΔΔ[371], 3);
    this.Ⲇᐃᐃ[0].id = 0;
    this.Ⲇᐃᐃ[1] = f435(60, 60, 0, ΔΔ[423], 3);
    this.Ⲇᐃᐃ[1].id = 1;
    this.Ⲇᐃᐃ[199] = f435(60, 60, 0, ΔΔ[426], 3);
    this.Ⲇᐃᐃ[199].id = 199;
    this.Ⲇᐃᐃ[199].info.Δᐃ[2] = this.Ⲇᐃᐃ[199].info.Δᐃ[0];
    this.Ⲇᐃᐃ[200] = f435(60, 60, 0, ΔΔ[427], 3);
    this.Ⲇᐃᐃ[200].id = 200;
    this.Ⲇᐃᐃ[200].info.Δᐃ[2] = this.Ⲇᐃᐃ[200].info.Δᐃ[0];
    this.Ⲇᐃᐃ[201] = f435(60, 60, 0, ΔΔ[387], 3);
    this.Ⲇᐃᐃ[201].id = 201;
    this.Ⲇᐃᐃ[343] = f435(60, 60, 0, ΔΔ[1482], 3);
    this.Ⲇᐃᐃ[343].id = 343;
    this.Ⲇᐃᐃ[202] = f435(60, 60, 0, ΔΔ[408], 3);
    this.Ⲇᐃᐃ[202].id = 202;
    this.Ⲇᐃᐃ[202].info.Δᐃ[2] = this.Ⲇᐃᐃ[202].info.Δᐃ[0];
    this.Ⲇᐃᐃ[203] = f435(60, 60, 0, ΔΔ[409], 3);
    this.Ⲇᐃᐃ[203].id = 203;
    this.Ⲇᐃᐃ[203].info.Δᐃ[2] = this.Ⲇᐃᐃ[203].info.Δᐃ[0];
    this.Ⲇᐃᐃ[3] = f435(60, 60, 0, ΔΔ[368], 3);
    this.Ⲇᐃᐃ[3].id = 3;
    this.Ⲇᐃᐃ[4] = f435(60, 60, 0, ΔΔ[407], 3);
    this.Ⲇᐃᐃ[4].id = 4;
    this.Ⲇᐃᐃ[5] = f435(60, 60, 0, ΔΔ[402], 3);
    this.Ⲇᐃᐃ[5].id = 5;
    this.Ⲇᐃᐃ[103] = f435(60, 60, 0, ΔΔ[1078], 3);
    this.Ⲇᐃᐃ[103].id = 103;
    this.Ⲇᐃᐃ[6] = f435(60, 60, 0, ΔΔ[403], 3);
    this.Ⲇᐃᐃ[6].id = 6;
    this.Ⲇᐃᐃ[204] = f435(60, 60, 0, ΔΔ[420], 3);
    this.Ⲇᐃᐃ[204].id = 204;
    this.Ⲇᐃᐃ[205] = f435(60, 60, 0, ΔΔ[421], 3);
    this.Ⲇᐃᐃ[205].id = 205;
    this.Ⲇᐃᐃ[206] = f435(60, 60, 0, ΔΔ[422], 3);
    this.Ⲇᐃᐃ[206].id = 206;
    this.Ⲇᐃᐃ[264] = f435(60, 60, 0, ΔΔ[428], 3);
    this.Ⲇᐃᐃ[264].id = 264;
    this.Ⲇᐃᐃ[262] = f435(60, 60, 0, ΔΔ[430], 3);
    this.Ⲇᐃᐃ[262].id = 262;
    this.Ⲇᐃᐃ[8] = f435(60, 60, 0, ΔΔ[424], 3);
    this.Ⲇᐃᐃ[8].id = 8;
    this.Ⲇᐃᐃ[208] = f435(60, 60, 0, ΔΔ[434], 3);
    this.Ⲇᐃᐃ[208].id = 208;
    this.Ⲇᐃᐃ[207] = f435(60, 60, 0, ΔΔ[411], 3);
    this.Ⲇᐃᐃ[207].id = 207;
    this.Ⲇᐃᐃ[209] = f435(60, 60, 0, ΔΔ[439], 3);
    this.Ⲇᐃᐃ[209].id = 209;
    this.Ⲇᐃᐃ[297] = f435(60, 60, 0, ΔΔ[414], 3);
    this.Ⲇᐃᐃ[297].id = 297;
    this.Ⲇᐃᐃ[263] = f435(60, 60, 0, ΔΔ[416], 3);
    this.Ⲇᐃᐃ[263].id = 263;
    this.Ⲇᐃᐃ[263].info.Δᐃ[2] = this.Ⲇᐃᐃ[263].info.Δᐃ[0];
    this.Ⲇᐃᐃ[265] = f435(60, 60, 0, ΔΔ[440], 3);
    this.Ⲇᐃᐃ[265].id = 265;
    this.Ⲇᐃᐃ[266] = f435(60, 60, 0, ΔΔ[441], 3);
    this.Ⲇᐃᐃ[266].id = 266;
    this.Ⲇᐃᐃ[267] = f435(60, 60, 0, ΔΔ[442], 3);
    this.Ⲇᐃᐃ[267].id = 267;
    this.Ⲇᐃᐃ[268] = f435(60, 60, 0, ΔΔ[446], 3);
    this.Ⲇᐃᐃ[268].id = 268;
    this.Ⲇᐃᐃ[269] = f435(60, 60, 0, ΔΔ[448], 3);
    this.Ⲇᐃᐃ[269].id = 269;
    this.Ⲇᐃᐃ[270] = f435(60, 60, 0, ΔΔ[472], 3);
    this.Ⲇᐃᐃ[270].id = 270;
    this.Ⲇᐃᐃ[271] = f435(60, 60, 0, ΔΔ[473], 3);
    this.Ⲇᐃᐃ[271].id = 271;
    this.Ⲇᐃᐃ[272] = f435(60, 60, 0, ΔΔ[475], 3);
    this.Ⲇᐃᐃ[272].id = 272;
    this.Ⲇᐃᐃ[47] = f435(60, 60, 0, ΔΔ[503], 3);
    this.Ⲇᐃᐃ[47].id = 47;
    this.Ⲇᐃᐃ[10] = f435(60, 60, 0, ΔΔ[480], 3);
    this.Ⲇᐃᐃ[10].id = 10;
    this.Ⲇᐃᐃ[273] = f435(60, 60, 0, ΔΔ[483], 3);
    this.Ⲇᐃᐃ[273].id = 273;
    this.Ⲇᐃᐃ[274] = f435(60, 60, 0, ΔΔ[486], 3);
    this.Ⲇᐃᐃ[274].id = 274;
    this.Ⲇᐃᐃ[275] = f435(60, 60, 0, ΔΔ[489], 3);
    this.Ⲇᐃᐃ[275].id = 275;
    this.Ⲇᐃᐃ[2] = f435(60, 60, 0, ΔΔ[479], 3);
    this.Ⲇᐃᐃ[2].id = 2;
    this.Ⲇᐃᐃ[2].info.Δᐃ[2] = this.Ⲇᐃᐃ[2].info.Δᐃ[0];
    this.Ⲇᐃᐃ[347] = f435(60, 60, 0, ΔΔ[1490], 3);
    this.Ⲇᐃᐃ[347].id = 347;
    this.Ⲇᐃᐃ[347].info.Δᐃ[2] = this.Ⲇᐃᐃ[347].info.Δᐃ[0];
    this.Ⲇᐃᐃ[276] = f435(60, 60, 0, ΔΔ[504], 3);
    this.Ⲇᐃᐃ[276].id = 276;
    this.Ⲇᐃᐃ[276].info.Δᐃ[2] = this.Ⲇᐃᐃ[276].info.Δᐃ[0];
    this.Ⲇᐃᐃ[353] = f435(60, 60, 0, ΔΔ[1754], 3);
    this.Ⲇᐃᐃ[353].id = 353;
    this.Ⲇᐃᐃ[353].info.Δᐃ[2] = this.Ⲇᐃᐃ[353].info.Δᐃ[0];
    this.Ⲇᐃᐃ[351] = f435(60, 60, 0, ΔΔ[1750], 3);
    this.Ⲇᐃᐃ[351].id = 351;
    this.Ⲇᐃᐃ[351].info.Δᐃ[2] = this.Ⲇᐃᐃ[351].info.Δᐃ[0];
    this.Ⲇᐃᐃ[332] = f435(60, 60, 0, ΔΔ[1343], 3);
    this.Ⲇᐃᐃ[332].id = 332;
    this.Ⲇᐃᐃ[341] = f435(60, 60, 0, ΔΔ[1345], 3);
    this.Ⲇᐃᐃ[341].id = 341;
    this.Ⲇᐃᐃ[342] = f435(60, 60, 0, ΔΔ[1347], 3);
    this.Ⲇᐃᐃ[342].id = 342;
    this.Ⲇᐃᐃ[352] = f435(60, 60, 0, ΔΔ[1463], 3);
    this.Ⲇᐃᐃ[352].id = 352;
    this.Ⲇᐃᐃ[344] = f435(60, 60, 0, ΔΔ[1484], 3);
    this.Ⲇᐃᐃ[344].id = 344;
    this.Ⲇᐃᐃ[10] = f435(60, 60, 0, ΔΔ[480], 3);
    this.Ⲇᐃᐃ[10].id = 10;
    this.Ⲇᐃᐃ[11] = f435(60, 60, 0, ΔΔ[492], 3);
    this.Ⲇᐃᐃ[11].id = 11;
    this.Ⲇᐃᐃ[12] = f435(60, 60, 0, ΔΔ[512], 3);
    this.Ⲇᐃᐃ[12].id = 12;
    this.Ⲇᐃᐃ[13] = f435(60, 60, 0, ΔΔ[506], 3);
    this.Ⲇᐃᐃ[13].id = 13;
    this.Ⲇᐃᐃ[14] = f435(60, 60, 0, ΔΔ[509], 3);
    this.Ⲇᐃᐃ[14].id = 14;
    this.Ⲇᐃᐃ[15] = f435(60, 60, 0, ΔΔ[515], 3);
    this.Ⲇᐃᐃ[15].id = 15;
    this.Ⲇᐃᐃ[16] = f435(60, 60, 0, ΔΔ[1123], 3);
    this.Ⲇᐃᐃ[16].id = 16;
    this.Ⲇᐃᐃ[210] = f435(60, 60, 0, ΔΔ[519], 3);
    this.Ⲇᐃᐃ[210].id = 210;
    this.Ⲇᐃᐃ[32] = f435(60, 60, 0, ΔΔ[531], 3);
    this.Ⲇᐃᐃ[32].id = 32;
    this.Ⲇᐃᐃ[33] = f435(60, 60, 0, ΔΔ[534], 3);
    this.Ⲇᐃᐃ[33].id = 33;
    this.Ⲇᐃᐃ[160] = f435(60, 60, 0, ΔΔ[1618], 3);
    this.Ⲇᐃᐃ[160].id = 160;
    this.Ⲇᐃᐃ[161] = f435(60, 60, 0, ΔΔ[1621], 3);
    this.Ⲇᐃᐃ[161].id = 161;
    this.Ⲇᐃᐃ[153] = f435(60, 60, 0, ΔΔ[1465], 3);
    this.Ⲇᐃᐃ[153].id = 153;
    this.Ⲇᐃᐃ[154] = f435(60, 60, 0, ΔΔ[1468], 3);
    this.Ⲇᐃᐃ[154].id = 154;
    this.Ⲇᐃᐃ[119] = f435(60, 60, 0, ΔΔ[761], 3);
    this.Ⲇᐃᐃ[119].id = 119;
    this.Ⲇᐃᐃ[183] = f435(60, 60, 0, ΔΔ[1494], 3);
    this.Ⲇᐃᐃ[183].id = 183;
    this.Ⲇᐃᐃ[135] = f435(60, 60, 0, ΔΔ[1630], 3);
    this.Ⲇᐃᐃ[135].id = 135;
    this.Ⲇᐃᐃ[120] = f435(60, 60, 0, ΔΔ[764], 3);
    this.Ⲇᐃᐃ[120].id = 120;
    this.Ⲇᐃᐃ[184] = f435(60, 60, 0, ΔΔ[1497], 3);
    this.Ⲇᐃᐃ[184].id = 184;
    this.Ⲇᐃᐃ[136] = f435(60, 60, 0, ΔΔ[1633], 3);
    this.Ⲇᐃᐃ[136].id = 136;
    this.Ⲇᐃᐃ[121] = f435(60, 60, 0, ΔΔ[767], 3);
    this.Ⲇᐃᐃ[121].id = 121;
    this.Ⲇᐃᐃ[185] = f435(60, 60, 0, ΔΔ[1500], 3);
    this.Ⲇᐃᐃ[185].id = 185;
    this.Ⲇᐃᐃ[137] = f435(60, 60, 0, ΔΔ[1636], 3);
    this.Ⲇᐃᐃ[137].id = 137;
    this.Ⲇᐃᐃ[122] = f435(60, 60, 0, ΔΔ[770], 3);
    this.Ⲇᐃᐃ[122].id = 122;
    this.Ⲇᐃᐃ[186] = f435(60, 60, 0, ΔΔ[1503], 3);
    this.Ⲇᐃᐃ[186].id = 186;
    this.Ⲇᐃᐃ[138] = f435(60, 60, 0, ΔΔ[1639], 3);
    this.Ⲇᐃᐃ[138].id = 138;
    this.Ⲇᐃᐃ[123] = f435(60, 60, 0, ΔΔ[773], 3);
    this.Ⲇᐃᐃ[123].id = 123;
    this.Ⲇᐃᐃ[187] = f435(60, 60, 0, ΔΔ[1506], 3);
    this.Ⲇᐃᐃ[187].id = 187;
    this.Ⲇᐃᐃ[139] = f435(60, 60, 0, ΔΔ[1642], 3);
    this.Ⲇᐃᐃ[139].id = 139;
    this.Ⲇᐃᐃ[124] = f435(60, 60, 0, ΔΔ[776], 3);
    this.Ⲇᐃᐃ[124].id = 124;
    this.Ⲇᐃᐃ[188] = f435(60, 60, 0, ΔΔ[1509], 3);
    this.Ⲇᐃᐃ[188].id = 188;
    this.Ⲇᐃᐃ[140] = f435(60, 60, 0, ΔΔ[1645], 3);
    this.Ⲇᐃᐃ[140].id = 140;
    this.Ⲇᐃᐃ[125] = f435(60, 60, 0, ΔΔ[779], 3);
    this.Ⲇᐃᐃ[125].id = 125;
    this.Ⲇᐃᐃ[189] = f435(60, 60, 0, ΔΔ[1512], 3);
    this.Ⲇᐃᐃ[189].id = 189;
    this.Ⲇᐃᐃ[167] = f435(60, 60, 0, ΔΔ[1675], 3);
    this.Ⲇᐃᐃ[167].id = 167;
    this.Ⲇᐃᐃ[168] = f435(60, 60, 0, ΔΔ[1678], 3);
    this.Ⲇᐃᐃ[168].id = 168;
    this.Ⲇᐃᐃ[169] = f435(60, 60, 0, ΔΔ[1681], 3);
    this.Ⲇᐃᐃ[169].id = 169;
    this.Ⲇᐃᐃ[170] = f435(60, 60, 0, ΔΔ[1684], 3);
    this.Ⲇᐃᐃ[170].id = 170;
    this.Ⲇᐃᐃ[171] = f435(60, 60, 0, ΔΔ[1687], 3);
    this.Ⲇᐃᐃ[171].id = 171;
    this.Ⲇᐃᐃ[172] = f435(60, 60, 0, ΔΔ[1690], 3);
    this.Ⲇᐃᐃ[172].id = 172;
    this.Ⲇᐃᐃ[104] = f435(60, 60, 0, ΔΔ[1075], 3);
    this.Ⲇᐃᐃ[104].id = 104;
    this.Ⲇᐃᐃ[34] = f435(60, 60, 0, ΔΔ[540], 3);
    this.Ⲇᐃᐃ[34].id = 34;
    this.Ⲇᐃᐃ[35] = f435(60, 60, 0, ΔΔ[543], 3);
    this.Ⲇᐃᐃ[35].id = 35;
    this.Ⲇᐃᐃ[36] = f435(60, 60, 0, ΔΔ[546], 3);
    this.Ⲇᐃᐃ[36].id = 36;
    this.Ⲇᐃᐃ[46] = f435(60, 60, 0, ΔΔ[576], 3);
    this.Ⲇᐃᐃ[46].id = 46;
    this.Ⲇᐃᐃ[211] = f435(60, 60, 0, ΔΔ[579], 3);
    this.Ⲇᐃᐃ[211].id = 211;
    this.Ⲇᐃᐃ[211].info.Δᐃ[2] = this.Ⲇᐃᐃ[211].info.Δᐃ[0];
    this.Ⲇᐃᐃ[47] = f435(60, 60, 0, ΔΔ[503], 3);
    this.Ⲇᐃᐃ[47].id = 47;
    this.Ⲇᐃᐃ[212] = f435(60, 60, 0, ΔΔ[529], 3);
    this.Ⲇᐃᐃ[212].id = 212;
    this.Ⲇᐃᐃ[212].info.Δᐃ[2] = this.Ⲇᐃᐃ[212].info.Δᐃ[0];
    this.Ⲇᐃᐃ[48] = f435(60, 60, 0, ΔΔ[593], 3);
    this.Ⲇᐃᐃ[48].id = 48;
    this.Ⲇᐃᐃ[9] = f435(60, 60, 0, ΔΔ[1109], 3);
    this.Ⲇᐃᐃ[9].id = 9;
    this.Ⲇᐃᐃ[49] = f435(60, 60, 0, ΔΔ[596], 3);
    this.Ⲇᐃᐃ[49].id = 49;
    this.Ⲇᐃᐃ[50] = f435(60, 60, 0, ΔΔ[1293], 3);
    this.Ⲇᐃᐃ[50].id = 50;
    this.Ⲇᐃᐃ[60] = f435(60, 60, 0, ΔΔ[610], 3);
    this.Ⲇᐃᐃ[60].id = 60;
    this.Ⲇᐃᐃ[62] = f435(60, 60, 0, ΔΔ[615], 3);
    this.Ⲇᐃᐃ[62].id = 62;
    this.Ⲇᐃᐃ[63] = f435(60, 60, 0, ΔΔ[618], 3);
    this.Ⲇᐃᐃ[63].id = 63;
    this.Ⲇᐃᐃ[64] = f435(60, 60, 0, ΔΔ[621], 3);
    this.Ⲇᐃᐃ[64].id = 64;
    this.Ⲇᐃᐃ[65] = f435(60, 60, 0, ΔΔ[624], 3);
    this.Ⲇᐃᐃ[65].id = 65;
    this.Ⲇᐃᐃ[66] = f435(60, 60, 0, ΔΔ[627], 3);
    this.Ⲇᐃᐃ[66].id = 66;
    this.Ⲇᐃᐃ[213] = f435(60, 60, 0, ΔΔ[630], 3);
    this.Ⲇᐃᐃ[213].id = 213;
    this.Ⲇᐃᐃ[214] = f435(60, 60, 0, ΔΔ[633], 3);
    this.Ⲇᐃᐃ[214].id = 214;
    this.Ⲇᐃᐃ[215] = f435(60, 60, 0, ΔΔ[637], 3);
    this.Ⲇᐃᐃ[215].id = 215;
    this.Ⲇᐃᐃ[67] = f435(60, 60, 0, ΔΔ[640], 3);
    this.Ⲇᐃᐃ[67].id = 67;
    this.Ⲇᐃᐃ[239] = f435(60, 60, 0, ΔΔ[643], 3);
    this.Ⲇᐃᐃ[239].id = 239;
    this.Ⲇᐃᐃ[239].info.Δᐃ[2] = this.Ⲇᐃᐃ[239].info.Δᐃ[0];
    this.Ⲇᐃᐃ[350] = f435(60, 60, 0, ΔΔ[1624], 3);
    this.Ⲇᐃᐃ[350].id = 350;
    this.Ⲇᐃᐃ[350].info.Δᐃ[2] = this.Ⲇᐃᐃ[350].info.Δᐃ[0];
    this.Ⲇᐃᐃ[240] = f435(60, 60, 0, ΔΔ[651], 3);
    this.Ⲇᐃᐃ[240].id = 240;
    this.Ⲇᐃᐃ[240].info.Δᐃ[2] = this.Ⲇᐃᐃ[240].info.Δᐃ[0];
    this.Ⲇᐃᐃ[241] = f435(60, 60, 0, ΔΔ[656], 3);
    this.Ⲇᐃᐃ[241].id = 241;
    this.Ⲇᐃᐃ[241].info.Δᐃ[2] = this.Ⲇᐃᐃ[241].info.Δᐃ[0];
    this.Ⲇᐃᐃ[242] = f435(60, 60, 0, ΔΔ[659], 3);
    this.Ⲇᐃᐃ[242].id = 242;
    this.Ⲇᐃᐃ[243] = f435(60, 60, 0, ΔΔ[661], 3);
    this.Ⲇᐃᐃ[243].id = 243;
    this.Ⲇᐃᐃ[244] = f435(60, 60, 0, ΔΔ[667], 3);
    this.Ⲇᐃᐃ[244].id = 244;
    this.Ⲇᐃᐃ[260] = f435(60, 60, 0, ΔΔ[670], 3);
    this.Ⲇᐃᐃ[260].id = 260;
    this.Ⲇᐃᐃ[261] = f435(60, 60, 0, ΔΔ[718], 3);
    this.Ⲇᐃᐃ[261].id = 261;
    this.Ⲇᐃᐃ[70] = f435(60, 60, 0, ΔΔ[679], 3);
    this.Ⲇᐃᐃ[70].id = 70;
    this.Ⲇᐃᐃ[72] = f435(60, 60, 0, ΔΔ[688], 3);
    this.Ⲇᐃᐃ[72].id = 72;
    this.Ⲇᐃᐃ[216] = f435(60, 60, 0, ΔΔ[824], 3);
    this.Ⲇᐃᐃ[216].id = 216;
    this.Ⲇᐃᐃ[331] = f435(60, 60, 0, ΔΔ[1627], 3);
    this.Ⲇᐃᐃ[331].id = 331;
    this.Ⲇᐃᐃ[333] = f435(60, 60, 0, ΔΔ[1336], 3);
    this.Ⲇᐃᐃ[333].id = 333;
    this.Ⲇᐃᐃ[334] = f435(60, 60, 0, ΔΔ[1339], 3);
    this.Ⲇᐃᐃ[334].id = 334;
    this.Ⲇᐃᐃ[340] = f435(60, 60, 0, ΔΔ[1425], 3);
    this.Ⲇᐃᐃ[340].id = 340;
    this.Ⲇᐃᐃ[162] = f435(60, 60, 0, ΔΔ[1354], 3);
    this.Ⲇᐃᐃ[162].id = 162;
    this.Ⲇᐃᐃ[335] = f435(60, 60, 0, ΔΔ[1357], 3);
    this.Ⲇᐃᐃ[335].id = 335;
    this.Ⲇᐃᐃ[336] = f435(60, 60, 0, ΔΔ[1544], 3);
    this.Ⲇᐃᐃ[336].id = 336;
    this.Ⲇᐃᐃ[337] = f435(60, 60, 0, ΔΔ[1388], 3);
    this.Ⲇᐃᐃ[337].id = 337;
    this.Ⲇᐃᐃ[349] = f435(60, 60, 0, ΔΔ[1615], 3);
    this.Ⲇᐃᐃ[349].id = 349;
    this.Ⲇᐃᐃ[338] = f435(60, 60, 0, ΔΔ[1403], 3);
    this.Ⲇᐃᐃ[338].id = 338;
    this.Ⲇᐃᐃ[339] = f435(60, 60, 0, ΔΔ[1418], 3);
    this.Ⲇᐃᐃ[339].id = 339;
    this.Ⲇᐃᐃ[355] = f435(60, 60, 0, ΔΔ[1439], 3);
    this.Ⲇᐃᐃ[355].id = 355;
    this.Ⲇᐃᐃ[354] = f435(60, 60, 0, ΔΔ[1457], 3);
    this.Ⲇᐃᐃ[354].id = 354;
    this.Ⲇᐃᐃ[358] = f435(60, 60, 0, ΔΔ[1328], 3);
    this.Ⲇᐃᐃ[358].id = 358;
    this.Ⲇᐃᐃ[217] = f435(60, 60, 0, ΔΔ[828], 3);
    this.Ⲇᐃᐃ[217].id = 217;
    this.Ⲇᐃᐃ[217].info.Δᐃ[2] = this.Ⲇᐃᐃ[217].info.Δᐃ[0];
    this.Ⲇᐃᐃ[218] = f435(60, 60, 0, ΔΔ[832], 3);
    this.Ⲇᐃᐃ[218].id = 218;
    this.Ⲇᐃᐃ[221] = f435(60, 60, 0, ΔΔ[831], 3);
    this.Ⲇᐃᐃ[221].id = 221;
    this.Ⲇᐃᐃ[82] = f435(60, 60, 0, ΔΔ[835], 3);
    this.Ⲇᐃᐃ[82].id = 82;
    this.Ⲇᐃᐃ[86] = f435(60, 60, 0, ΔΔ[918], 3);
    this.Ⲇᐃᐃ[86].id = 86;
    this.Ⲇᐃᐃ[87] = f435(60, 60, 0, ΔΔ[921], 3);
    this.Ⲇᐃᐃ[87].id = 87;
    this.Ⲇᐃᐃ[88] = f435(60, 60, 0, ΔΔ[924], 3);
    this.Ⲇᐃᐃ[88].id = 88;
    this.Ⲇᐃᐃ[101] = f435(60, 60, 0, ΔΔ[958], 3);
    this.Ⲇᐃᐃ[101].id = 101;
    this.Ⲇᐃᐃ[222] = f435(60, 60, 0, ΔΔ[843], 3);
    this.Ⲇᐃᐃ[222].id = 222;
    this.Ⲇᐃᐃ[222].info.Δᐃ[2] = this.Ⲇᐃᐃ[222].info.Δᐃ[0];
    this.Ⲇᐃᐃ[223] = f435(60, 60, 0, ΔΔ[845], 3);
    this.Ⲇᐃᐃ[223].id = 223;
    this.Ⲇᐃᐃ[224] = f435(60, 60, 0, ΔΔ[848], 3);
    this.Ⲇᐃᐃ[224].id = 224;
    this.Ⲇᐃᐃ[224].info.Δᐃ[2] = this.Ⲇᐃᐃ[224].info.Δᐃ[0];
    this.Ⲇᐃᐃ[225] = f435(60, 60, 0, ΔΔ[850], 3);
    this.Ⲇᐃᐃ[225].id = 225;
    this.Ⲇᐃᐃ[226] = f435(60, 60, 0, ΔΔ[853], 3);
    this.Ⲇᐃᐃ[226].id = 226;
    this.Ⲇᐃᐃ[227] = f435(60, 60, 0, ΔΔ[858], 3);
    this.Ⲇᐃᐃ[227].id = 227;
    this.Ⲇᐃᐃ[227].info.Δᐃ[2] = this.Ⲇᐃᐃ[227].info.Δᐃ[0];
    this.Ⲇᐃᐃ[228] = f435(60, 60, 0, ΔΔ[863], 3);
    this.Ⲇᐃᐃ[228].id = 228;
    this.Ⲇᐃᐃ[83] = f435(60, 60, 0, ΔΔ[865], 3);
    this.Ⲇᐃᐃ[83].id = 83;
    this.Ⲇᐃᐃ[84] = f435(60, 60, 0, ΔΔ[868], 3);
    this.Ⲇᐃᐃ[84].id = 84;
    this.Ⲇᐃᐃ[85] = f435(60, 60, 0, ΔΔ[871], 3);
    this.Ⲇᐃᐃ[85].id = 85;
    this.Ⲇᐃᐃ[229] = f435(60, 60, 0, ΔΔ[878], 3);
    this.Ⲇᐃᐃ[229].id = 229;
    this.Ⲇᐃᐃ[236] = f435(60, 60, 0, ΔΔ[236], 3);
    this.Ⲇᐃᐃ[236].id = 236;
    this.Ⲇᐃᐃ[230] = f435(60, 60, 0, ΔΔ[881], 3);
    this.Ⲇᐃᐃ[230].id = 230;
    this.Ⲇᐃᐃ[231] = f435(60, 60, 0, ΔΔ[883], 3);
    this.Ⲇᐃᐃ[231].id = 231;
    this.Ⲇᐃᐃ[232] = f435(60, 60, 0, ΔΔ[893], 3);
    this.Ⲇᐃᐃ[232].id = 232;
    this.Ⲇᐃᐃ[232].info.Δᐃ[2] = this.Ⲇᐃᐃ[232].info.Δᐃ[0];
    this.Ⲇᐃᐃ[233] = f435(60, 60, 0, ΔΔ[233], 3);
    this.Ⲇᐃᐃ[233].id = 233;
    this.Ⲇᐃᐃ[233].info.Δᐃ[2] = this.Ⲇᐃᐃ[233].info.Δᐃ[0];
    this.Ⲇᐃᐃ[234] = f435(60, 60, 0, ΔΔ[904], 3);
    this.Ⲇᐃᐃ[234].id = 234;
    this.Ⲇᐃᐃ[235] = f435(60, 60, 0, ΔΔ[235], 3);
    this.Ⲇᐃᐃ[235].id = 235;
    this.Ⲇᐃᐃ[235].info.Δᐃ[2] = this.Ⲇᐃᐃ[235].info.Δᐃ[0];
    this.Ⲇᐃᐃ[237] = f435(60, 60, 0, ΔΔ[966], 3);
    this.Ⲇᐃᐃ[237].id = 237;
    this.Ⲇᐃᐃ[238] = f435(60, 60, 0, ΔΔ[238], 3);
    this.Ⲇᐃᐃ[238].id = 238;
    this.Ⲇᐃᐃ[105] = f435(60, 60, 0, ΔΔ[981], 3);
    this.Ⲇᐃᐃ[105].id = 105;
    this.Ⲇᐃᐃ[108] = f435(60, 60, 0, ΔΔ[728], 3);
    this.Ⲇᐃᐃ[108].id = 108;
    this.Ⲇᐃᐃ[287] = f435(60, 60, 0, ΔΔ[362], 3);
    this.Ⲇᐃᐃ[287].id = 287;
    this.Ⲇᐃᐃ[287].info.Δᐃ[2] = this.Ⲇᐃᐃ[287].info.Δᐃ[0];
    this.Ⲇᐃᐃ[286] = f435(60, 60, 0, ΔΔ[1000], 3);
    this.Ⲇᐃᐃ[286].id = 286;
    this.Ⲇᐃᐃ[286].info.Δᐃ[2] = this.Ⲇᐃᐃ[286].info.Δᐃ[0];
    this.Ⲇᐃᐃ[17] = f435(60, 60, 0, ΔΔ[1126], 3);
    this.Ⲇᐃᐃ[17].id = 17;
    this.Ⲇᐃᐃ[109] = f435(60, 60, 0, ΔΔ[731], 3);
    this.Ⲇᐃᐃ[109].id = 109;
    this.Ⲇᐃᐃ[289] = f435(60, 60, 0, ΔΔ[363], 3);
    this.Ⲇᐃᐃ[289].id = 289;
    this.Ⲇᐃᐃ[289].info.Δᐃ[2] = this.Ⲇᐃᐃ[289].info.Δᐃ[0];
    this.Ⲇᐃᐃ[288] = f435(60, 60, 0, ΔΔ[1002], 3);
    this.Ⲇᐃᐃ[288].id = 288;
    this.Ⲇᐃᐃ[288].info.Δᐃ[2] = this.Ⲇᐃᐃ[288].info.Δᐃ[0];
    this.Ⲇᐃᐃ[150] = f435(60, 60, 0, ΔΔ[1005], 3);
    this.Ⲇᐃᐃ[150].id = 150;
    this.Ⲇᐃᐃ[277] = f435(60, 60, 0, ΔΔ[278], 3);
    this.Ⲇᐃᐃ[277].id = 277;
    this.Ⲇᐃᐃ[277].info.Δᐃ[2] = this.Ⲇᐃᐃ[277].info.Δᐃ[0];
    this.Ⲇᐃᐃ[278] = f435(60, 60, 0, ΔΔ[279], 3);
    this.Ⲇᐃᐃ[278].id = 278;
    this.Ⲇᐃᐃ[278].info.Δᐃ[2] = this.Ⲇᐃᐃ[278].info.Δᐃ[0];
    this.Ⲇᐃᐃ[151] = f435(60, 60, 0, ΔΔ[1009], 3);
    this.Ⲇᐃᐃ[151].id = 151;
    this.Ⲇᐃᐃ[279] = f435(60, 60, 0, ΔΔ[277], 3);
    this.Ⲇᐃᐃ[279].id = 279;
    this.Ⲇᐃᐃ[279].info.Δᐃ[2] = this.Ⲇᐃᐃ[279].info.Δᐃ[0];
    this.Ⲇᐃᐃ[152] = f435(60, 60, 0, ΔΔ[1013], 3);
    this.Ⲇᐃᐃ[152].id = 152;
    this.Ⲇᐃᐃ[156] = f435(60, 60, 0, ΔΔ[1016], 3);
    this.Ⲇᐃᐃ[156].id = 156;
    this.Ⲇᐃᐃ[157] = f435(60, 60, 0, ΔΔ[1020], 3);
    this.Ⲇᐃᐃ[157].id = 157;
    this.Ⲇᐃᐃ[280] = f435(60, 60, 0, ΔΔ[280], 3);
    this.Ⲇᐃᐃ[280].id = 280;
    this.Ⲇᐃᐃ[281] = f435(60, 60, 0, ΔΔ[281], 3);
    this.Ⲇᐃᐃ[281].id = 281;
    this.Ⲇᐃᐃ[159] = f435(60, 60, 0, ΔΔ[1025], 3);
    this.Ⲇᐃᐃ[159].id = 159;
    this.Ⲇᐃᐃ[158] = f435(60, 60, 0, ΔΔ[1028], 3);
    this.Ⲇᐃᐃ[158].id = 158;
    this.Ⲇᐃᐃ[282] = f435(60, 60, 0, ΔΔ[282], 3);
    this.Ⲇᐃᐃ[282].id = 282;
    this.Ⲇᐃᐃ[283] = f435(60, 60, 0, ΔΔ[283], 3);
    this.Ⲇᐃᐃ[283].id = 283;
    this.Ⲇᐃᐃ[284] = f435(60, 60, 0, ΔΔ[1038], 3);
    this.Ⲇᐃᐃ[284].id = 284;
    this.Ⲇᐃᐃ[285] = f435(60, 60, 0, ΔΔ[1049], 3);
    this.Ⲇᐃᐃ[285].id = 285;
    this.Ⲇᐃᐃ[290] = f435(60, 60, 0, ΔΔ[1057], 3);
    this.Ⲇᐃᐃ[290].id = 290;
    this.Ⲇᐃᐃ[291] = f435(60, 60, 0, ΔΔ[1063], 3);
    this.Ⲇᐃᐃ[291].id = 291;
    this.Ⲇᐃᐃ[293] = f435(60, 60, 0, ΔΔ[1083], 3);
    this.Ⲇᐃᐃ[293].id = 293;
    this.Ⲇᐃᐃ[294] = f435(60, 60, 0, ΔΔ[1089], 3);
    this.Ⲇᐃᐃ[294].id = 294;
    this.Ⲇᐃᐃ[292] = f435(60, 60, 0, ΔΔ[1091], 3);
    this.Ⲇᐃᐃ[292].id = 292;
    this.Ⲇᐃᐃ[295] = f435(60, 60, 0, ΔΔ[1094], 3);
    this.Ⲇᐃᐃ[295].id = 295;
    this.Ⲇᐃᐃ[296] = f435(60, 60, 0, ΔΔ[1099], 3);
    this.Ⲇᐃᐃ[296].id = 296;
    this.Ⲇᐃᐃ[314] = f435(60, 60, 0, ΔΔ[1225], 3);
    this.Ⲇᐃᐃ[314].id = 314;
    this.Ⲇᐃᐃ[315] = f435(60, 60, 0, ΔΔ[1231], 3);
    this.Ⲇᐃᐃ[315].id = 315;
    this.Ⲇᐃᐃ[316] = f435(60, 60, 0, ΔΔ[1235], 3);
    this.Ⲇᐃᐃ[316].id = 316;
    this.Ⲇᐃᐃ[317] = f435(60, 60, 0, ΔΔ[1241], 3);
    this.Ⲇᐃᐃ[317].id = 317;
    this.Ⲇᐃᐃ[318] = f435(60, 60, 0, ΔΔ[1242], 3);
    this.Ⲇᐃᐃ[318].id = 318;
    this.Ⲇᐃᐃ[319] = f435(60, 60, 0, ΔΔ[1248], 3);
    this.Ⲇᐃᐃ[319].id = 319;
    this.Ⲇᐃᐃ[320] = f435(60, 60, 0, ΔΔ[1257], 3);
    this.Ⲇᐃᐃ[320].id = 320;
    this.Ⲇᐃᐃ[321] = f435(60, 60, 0, ΔΔ[1263], 3);
    this.Ⲇᐃᐃ[321].id = 321;
    this.Ⲇᐃᐃ[68] = f435(60, 60, 0, ΔΔ[1156], 3);
    this.Ⲇᐃᐃ[68].id = 68;
    this.Ⲇᐃᐃ[69] = f435(60, 60, 0, ΔΔ[1158], 3);
    this.Ⲇᐃᐃ[69].id = 69;
    this.Ⲇᐃᐃ[12] = f435(60, 60, 0, ΔΔ[512], 3);
    this.Ⲇᐃᐃ[12].id = 12;
    this.Ⲇᐃᐃ[16] = f435(60, 60, 0, ΔΔ[1123], 3);
    this.Ⲇᐃᐃ[16].id = 16;
    this.Ⲇᐃᐃ[298] = f435(60, 60, 0, ΔΔ[298], 3);
    this.Ⲇᐃᐃ[298].id = 298;
    this.Ⲇᐃᐃ[18] = f435(60, 60, 0, ΔΔ[1177], 3);
    this.Ⲇᐃᐃ[18].id = 18;
    this.Ⲇᐃᐃ[299] = f435(60, 60, 0, ΔΔ[299], 3);
    this.Ⲇᐃᐃ[299].id = 299;
    this.Ⲇᐃᐃ[300] = f435(60, 60, 0, ΔΔ[1183], 3);
    this.Ⲇᐃᐃ[300].id = 300;
    this.Ⲇᐃᐃ[107] = f435(60, 60, 0, ΔΔ[1186], 3);
    this.Ⲇᐃᐃ[107].id = 107;
    this.Ⲇᐃᐃ[303] = f435(60, 60, 0, ΔΔ[1119], 3);
    this.Ⲇᐃᐃ[303].id = 303;
    this.Ⲇᐃᐃ[302] = f435(60, 60, 0, ΔΔ[302], 3);
    this.Ⲇᐃᐃ[302].id = 302;
    this.Ⲇᐃᐃ[301] = f435(60, 60, 0, ΔΔ[1114], 3);
    this.Ⲇᐃᐃ[301].id = 301;
    this.ⵠΔⵠ = [];
    this.ⵠΔⵠ[0] = f435(60, 60, 0, ΔΔ[364], 3);
    this.ⵠΔⵠ[0].id = 0;
    this.ⵠΔⵠ[1] = f435(60, 60, 0, ΔΔ[366], 3);
    this.ⵠΔⵠ[1].id = 1;
    this.ⵠΔⵠ[204] = f435(60, 60, 0, ΔΔ[413], 3);
    this.ⵠΔⵠ[204].id = 204;
    this.ⵠΔⵠ[205] = f435(60, 60, 0, ΔΔ[372], 3);
    this.ⵠΔⵠ[205].id = 205;
    this.ⵠΔⵠ[264] = f435(60, 60, 0, ΔΔ[429], 3);
    this.ⵠΔⵠ[264].id = 264;
    this.ⵠΔⵠ[262] = f435(60, 60, 0, ΔΔ[431], 3);
    this.ⵠΔⵠ[262].id = 262;
    this.ⵠΔⵠ[206] = f435(60, 60, 0, ΔΔ[394], 3);
    this.ⵠΔⵠ[206].id = 206;
    this.ⵠΔⵠ[3] = f435(60, 60, 0, ΔΔ[406], 3);
    this.ⵠΔⵠ[3].id = 3;
    this.ⵠΔⵠ[4] = f435(60, 60, 0, ΔΔ[367], 3);
    this.ⵠΔⵠ[4].id = 4;
    this.ⵠΔⵠ[5] = f435(60, 60, 0, ΔΔ[400], 3);
    this.ⵠΔⵠ[5].id = 5;
    this.ⵠΔⵠ[103] = f435(60, 60, 0, ΔΔ[1079], 3);
    this.ⵠΔⵠ[103].id = 103;
    this.ⵠΔⵠ[6] = f435(60, 60, 0, ΔΔ[401], 3);
    this.ⵠΔⵠ[6].id = 6;
    this.ⵠΔⵠ[8] = f435(60, 60, 0, ΔΔ[425], 3);
    this.ⵠΔⵠ[8].id = 8;
    this.ⵠΔⵠ[208] = f435(60, 60, 0, ΔΔ[436], 3);
    this.ⵠΔⵠ[208].id = 208;
    this.ⵠΔⵠ[209] = f435(60, 60, 0, ΔΔ[438], 3);
    this.ⵠΔⵠ[209].id = 209;
    this.ⵠΔⵠ[297] = f435(60, 60, 0, ΔΔ[415], 3);
    this.ⵠΔⵠ[297].id = 297;
    this.ⵠΔⵠ[265] = f435(60, 60, 0, ΔΔ[373], 3);
    this.ⵠΔⵠ[265].id = 265;
    this.ⵠΔⵠ[266] = f435(60, 60, 0, ΔΔ[375], 3);
    this.ⵠΔⵠ[266].id = 266;
    this.ⵠΔⵠ[267] = f435(60, 60, 0, ΔΔ[443], 3);
    this.ⵠΔⵠ[267].id = 267;
    this.ⵠΔⵠ[268] = f435(60, 60, 0, ΔΔ[378], 3);
    this.ⵠΔⵠ[268].id = 268;
    this.ⵠΔⵠ[269] = f435(60, 60, 0, ΔΔ[449], 3);
    this.ⵠΔⵠ[269].id = 269;
    this.ⵠΔⵠ[270] = f435(60, 60, 0, ΔΔ[471], 3);
    this.ⵠΔⵠ[270].id = 270;
    this.ⵠΔⵠ[271] = f435(60, 60, 0, ΔΔ[474], 3);
    this.ⵠΔⵠ[271].id = 271;
    this.ⵠΔⵠ[272] = f435(60, 60, 0, ΔΔ[476], 3);
    this.ⵠΔⵠ[272].id = 272;
    this.ⵠΔⵠ[47] = f435(60, 60, 0, ΔΔ[478], 3);
    this.ⵠΔⵠ[47].id = 47;
    this.ⵠΔⵠ[10] = f435(60, 60, 0, ΔΔ[481], 3);
    this.ⵠΔⵠ[10].id = 10;
    this.ⵠΔⵠ[273] = f435(60, 60, 0, ΔΔ[482], 3);
    this.ⵠΔⵠ[273].id = 273;
    this.ⵠΔⵠ[274] = f435(60, 60, 0, ΔΔ[485], 3);
    this.ⵠΔⵠ[274].id = 274;
    this.ⵠΔⵠ[275] = f435(60, 60, 0, ΔΔ[488], 3);
    this.ⵠΔⵠ[275].id = 275;
    this.ⵠΔⵠ[10] = f435(60, 60, 0, ΔΔ[481], 3);
    this.ⵠΔⵠ[10].id = 10;
    this.ⵠΔⵠ[11] = f435(60, 60, 0, ΔΔ[491], 3);
    this.ⵠΔⵠ[11].id = 11;
    this.ⵠΔⵠ[12] = f435(60, 60, 0, ΔΔ[513], 3);
    this.ⵠΔⵠ[12].id = 12;
    this.ⵠΔⵠ[13] = f435(60, 60, 0, ΔΔ[507], 3);
    this.ⵠΔⵠ[13].id = 13;
    this.ⵠΔⵠ[14] = f435(60, 60, 0, ΔΔ[510], 3);
    this.ⵠΔⵠ[14].id = 14;
    this.ⵠΔⵠ[15] = f435(60, 60, 0, ΔΔ[516], 3);
    this.ⵠΔⵠ[15].id = 15;
    this.ⵠΔⵠ[16] = f435(60, 60, 0, ΔΔ[1125], 3);
    this.ⵠΔⵠ[16].id = 16;
    this.ⵠΔⵠ[210] = f435(60, 60, 0, ΔΔ[520], 3);
    this.ⵠΔⵠ[210].id = 210;
    this.ⵠΔⵠ[32] = f435(60, 60, 0, ΔΔ[532], 3);
    this.ⵠΔⵠ[32].id = 32;
    this.ⵠΔⵠ[33] = f435(60, 60, 0, ΔΔ[535], 3);
    this.ⵠΔⵠ[33].id = 33;
    this.ⵠΔⵠ[160] = f435(60, 60, 0, ΔΔ[1619], 3);
    this.ⵠΔⵠ[160].id = 160;
    this.ⵠΔⵠ[161] = f435(60, 60, 0, ΔΔ[1622], 3);
    this.ⵠΔⵠ[161].id = 161;
    this.ⵠΔⵠ[153] = f435(60, 60, 0, ΔΔ[1466], 3);
    this.ⵠΔⵠ[153].id = 153;
    this.ⵠΔⵠ[154] = f435(60, 60, 0, ΔΔ[1469], 3);
    this.ⵠΔⵠ[154].id = 154;
    this.ⵠΔⵠ[119] = f435(60, 60, 0, ΔΔ[762], 3);
    this.ⵠΔⵠ[119].id = 119;
    this.ⵠΔⵠ[183] = f435(60, 60, 0, ΔΔ[1496], 3);
    this.ⵠΔⵠ[183].id = 183;
    this.ⵠΔⵠ[135] = f435(60, 60, 0, ΔΔ[1629], 3);
    this.ⵠΔⵠ[135].id = 135;
    this.ⵠΔⵠ[120] = f435(60, 60, 0, ΔΔ[765], 3);
    this.ⵠΔⵠ[120].id = 120;
    this.ⵠΔⵠ[184] = f435(60, 60, 0, ΔΔ[1499], 3);
    this.ⵠΔⵠ[184].id = 184;
    this.ⵠΔⵠ[136] = f435(60, 60, 0, ΔΔ[1632], 3);
    this.ⵠΔⵠ[136].id = 136;
    this.ⵠΔⵠ[121] = f435(60, 60, 0, ΔΔ[768], 3);
    this.ⵠΔⵠ[121].id = 121;
    this.ⵠΔⵠ[185] = f435(60, 60, 0, ΔΔ[1502], 3);
    this.ⵠΔⵠ[185].id = 185;
    this.ⵠΔⵠ[137] = f435(60, 60, 0, ΔΔ[1635], 3);
    this.ⵠΔⵠ[137].id = 137;
    this.ⵠΔⵠ[122] = f435(60, 60, 0, ΔΔ[771], 3);
    this.ⵠΔⵠ[122].id = 122;
    this.ⵠΔⵠ[186] = f435(60, 60, 0, ΔΔ[1505], 3);
    this.ⵠΔⵠ[186].id = 186;
    this.ⵠΔⵠ[167] = f435(60, 60, 0, ΔΔ[1674], 3);
    this.ⵠΔⵠ[167].id = 167;
    this.ⵠΔⵠ[168] = f435(60, 60, 0, ΔΔ[1677], 3);
    this.ⵠΔⵠ[168].id = 168;
    this.ⵠΔⵠ[169] = f435(60, 60, 0, ΔΔ[1680], 3);
    this.ⵠΔⵠ[169].id = 169;
    this.ⵠΔⵠ[170] = f435(60, 60, 0, ΔΔ[1683], 3);
    this.ⵠΔⵠ[170].id = 170;
    this.ⵠΔⵠ[171] = f435(60, 60, 0, ΔΔ[1686], 3);
    this.ⵠΔⵠ[171].id = 171;
    this.ⵠΔⵠ[172] = f435(60, 60, 0, ΔΔ[1689], 3);
    this.ⵠΔⵠ[172].id = 172;
    this.ⵠΔⵠ[138] = f435(60, 60, 0, ΔΔ[1638], 3);
    this.ⵠΔⵠ[138].id = 138;
    this.ⵠΔⵠ[123] = f435(60, 60, 0, ΔΔ[774], 3);
    this.ⵠΔⵠ[123].id = 123;
    this.ⵠΔⵠ[187] = f435(60, 60, 0, ΔΔ[1508], 3);
    this.ⵠΔⵠ[187].id = 187;
    this.ⵠΔⵠ[139] = f435(60, 60, 0, ΔΔ[1641], 3);
    this.ⵠΔⵠ[139].id = 139;
    this.ⵠΔⵠ[124] = f435(60, 60, 0, ΔΔ[777], 3);
    this.ⵠΔⵠ[124].id = 124;
    this.ⵠΔⵠ[188] = f435(60, 60, 0, ΔΔ[1511], 3);
    this.ⵠΔⵠ[188].id = 188;
    this.ⵠΔⵠ[140] = f435(60, 60, 0, ΔΔ[1644], 3);
    this.ⵠΔⵠ[140].id = 140;
    this.ⵠΔⵠ[125] = f435(60, 60, 0, ΔΔ[780], 3);
    this.ⵠΔⵠ[125].id = 125;
    this.ⵠΔⵠ[189] = f435(60, 60, 0, ΔΔ[1514], 3);
    this.ⵠΔⵠ[189].id = 189;
    this.ⵠΔⵠ[104] = f435(60, 60, 0, ΔΔ[1076], 3);
    this.ⵠΔⵠ[104].id = 104;
    this.ⵠΔⵠ[34] = f435(60, 60, 0, ΔΔ[541], 3);
    this.ⵠΔⵠ[34].id = 34;
    this.ⵠΔⵠ[35] = f435(60, 60, 0, ΔΔ[544], 3);
    this.ⵠΔⵠ[35].id = 35;
    this.ⵠΔⵠ[36] = f435(60, 60, 0, ΔΔ[547], 3);
    this.ⵠΔⵠ[36].id = 36;
    this.ⵠΔⵠ[46] = f435(60, 60, 0, ΔΔ[577], 3);
    this.ⵠΔⵠ[46].id = 46;
    this.ⵠΔⵠ[211] = f435(60, 60, 0, ΔΔ[580], 3);
    this.ⵠΔⵠ[211].id = 211;
    this.ⵠΔⵠ[47] = f435(60, 60, 0, ΔΔ[478], 3);
    this.ⵠΔⵠ[47].id = 47;
    this.ⵠΔⵠ[48] = f435(60, 60, 0, ΔΔ[594], 3);
    this.ⵠΔⵠ[48].id = 48;
    this.ⵠΔⵠ[9] = f435(60, 60, 0, ΔΔ[1110], 3);
    this.ⵠΔⵠ[9].id = 9;
    this.ⵠΔⵠ[49] = f435(60, 60, 0, ΔΔ[598], 3);
    this.ⵠΔⵠ[49].id = 49;
    this.ⵠΔⵠ[50] = f435(60, 60, 0, ΔΔ[1295], 3);
    this.ⵠΔⵠ[50].id = 50;
    this.ⵠΔⵠ[60] = f435(60, 60, 0, ΔΔ[611], 3);
    this.ⵠΔⵠ[60].id = 60;
    this.ⵠΔⵠ[62] = f435(60, 60, 0, ΔΔ[616], 3);
    this.ⵠΔⵠ[62].id = 62;
    this.ⵠΔⵠ[63] = f435(60, 60, 0, ΔΔ[619], 3);
    this.ⵠΔⵠ[63].id = 63;
    this.ⵠΔⵠ[64] = f435(60, 60, 0, ΔΔ[622], 3);
    this.ⵠΔⵠ[64].id = 64;
    this.ⵠΔⵠ[65] = f435(60, 60, 0, ΔΔ[625], 3);
    this.ⵠΔⵠ[65].id = 65;
    this.ⵠΔⵠ[66] = f435(60, 60, 0, ΔΔ[628], 3);
    this.ⵠΔⵠ[66].id = 66;
    this.ⵠΔⵠ[213] = f435(60, 60, 0, ΔΔ[631], 3);
    this.ⵠΔⵠ[213].id = 213;
    this.ⵠΔⵠ[214] = f435(60, 60, 0, ΔΔ[634], 3);
    this.ⵠΔⵠ[214].id = 214;
    this.ⵠΔⵠ[215] = f435(60, 60, 0, ΔΔ[636], 3);
    this.ⵠΔⵠ[215].id = 215;
    this.ⵠΔⵠ[67] = f435(60, 60, 0, ΔΔ[641], 3);
    this.ⵠΔⵠ[67].id = 67;
    this.ⵠΔⵠ[240] = f435(60, 60, 0, ΔΔ[653], 3);
    this.ⵠΔⵠ[240].id = 240;
    this.ⵠΔⵠ[241] = f435(60, 60, 0, ΔΔ[657], 3);
    this.ⵠΔⵠ[241].id = 241;
    this.ⵠΔⵠ[244] = f435(60, 60, 0, ΔΔ[668], 3);
    this.ⵠΔⵠ[244].id = 244;
    this.ⵠΔⵠ[260] = f435(60, 60, 0, ΔΔ[671], 3);
    this.ⵠΔⵠ[260].id = 260;
    this.ⵠΔⵠ[261] = f435(60, 60, 0, ΔΔ[720], 3);
    this.ⵠΔⵠ[261].id = 261;
    this.ⵠΔⵠ[70] = f435(60, 60, 0, ΔΔ[680], 3);
    this.ⵠΔⵠ[70].id = 70;
    this.ⵠΔⵠ[72] = f435(60, 60, 0, ΔΔ[689], 3);
    this.ⵠΔⵠ[72].id = 72;
    this.ⵠΔⵠ[216] = f435(60, 60, 0, ΔΔ[823], 3);
    this.ⵠΔⵠ[216].id = 216;
    this.ⵠΔⵠ[331] = f435(60, 60, 0, ΔΔ[1626], 3);
    this.ⵠΔⵠ[331].id = 331;
    this.ⵠΔⵠ[333] = f435(60, 60, 0, ΔΔ[1335], 3);
    this.ⵠΔⵠ[333].id = 333;
    this.ⵠΔⵠ[334] = f435(60, 60, 0, ΔΔ[1338], 3);
    this.ⵠΔⵠ[334].id = 334;
    this.ⵠΔⵠ[340] = f435(60, 60, 0, ΔΔ[1424], 3);
    this.ⵠΔⵠ[340].id = 340;
    this.ⵠΔⵠ[162] = f435(60, 60, 0, ΔΔ[1356], 3);
    this.ⵠΔⵠ[162].id = 162;
    this.ⵠΔⵠ[335] = f435(60, 60, 0, ΔΔ[1359], 3);
    this.ⵠΔⵠ[335].id = 335;
    this.ⵠΔⵠ[337] = f435(60, 60, 0, ΔΔ[1390], 3);
    this.ⵠΔⵠ[337].id = 337;
    this.ⵠΔⵠ[349] = f435(60, 60, 0, ΔΔ[1617], 3);
    this.ⵠΔⵠ[349].id = 349;
    this.ⵠΔⵠ[336] = f435(60, 60, 0, ΔΔ[1546], 3);
    this.ⵠΔⵠ[336].id = 336;
    this.ⵠΔⵠ[221] = f435(60, 60, 0, ΔΔ[830], 3);
    this.ⵠΔⵠ[221].id = 221;
    this.ⵠΔⵠ[218] = f435(60, 60, 0, ΔΔ[964], 3);
    this.ⵠΔⵠ[218].id = 218;
    this.ⵠΔⵠ[219] = f435(60, 60, 0, ΔΔ[964], 3);
    this.ⵠΔⵠ[219].id = 219;
    this.ⵠΔⵠ[220] = f435(60, 60, 0, ΔΔ[964], 3);
    this.ⵠΔⵠ[220].id = 220;
    this.ⵠΔⵠ[82] = f435(60, 60, 0, ΔΔ[837], 3);
    this.ⵠΔⵠ[82].id = 82;
    this.ⵠΔⵠ[86] = f435(60, 60, 0, ΔΔ[919], 3);
    this.ⵠΔⵠ[86].id = 86;
    this.ⵠΔⵠ[87] = f435(60, 60, 0, ΔΔ[923], 3);
    this.ⵠΔⵠ[87].id = 87;
    this.ⵠΔⵠ[88] = f435(60, 60, 0, ΔΔ[925], 3);
    this.ⵠΔⵠ[88].id = 88;
    this.ⵠΔⵠ[101] = f435(60, 60, 0, ΔΔ[960], 3);
    this.ⵠΔⵠ[101].id = 101;
    this.ⵠΔⵠ[223] = f435(60, 60, 0, ΔΔ[846], 3);
    this.ⵠΔⵠ[223].id = 223;
    this.ⵠΔⵠ[225] = f435(60, 60, 0, ΔΔ[851], 3);
    this.ⵠΔⵠ[225].id = 225;
    this.ⵠΔⵠ[226] = f435(60, 60, 0, ΔΔ[854], 3);
    this.ⵠΔⵠ[226].id = 226;
    this.ⵠΔⵠ[228] = f435(60, 60, 0, ΔΔ[862], 3);
    this.ⵠΔⵠ[228].id = 228;
    this.ⵠΔⵠ[83] = f435(60, 60, 0, ΔΔ[866], 3);
    this.ⵠΔⵠ[83].id = 83;
    this.ⵠΔⵠ[84] = f435(60, 60, 0, ΔΔ[869], 3);
    this.ⵠΔⵠ[84].id = 84;
    this.ⵠΔⵠ[85] = f435(60, 60, 0, ΔΔ[873], 3);
    this.ⵠΔⵠ[85].id = 85;
    this.ⵠΔⵠ[229] = f435(60, 60, 0, ΔΔ[879], 3);
    this.ⵠΔⵠ[229].id = 229;
    this.ⵠΔⵠ[236] = f435(60, 60, 0, ΔΔ[909], 3);
    this.ⵠΔⵠ[236].id = 236;
    this.ⵠΔⵠ[231] = f435(60, 60, 0, ΔΔ[885], 3);
    this.ⵠΔⵠ[231].id = 231;
    this.ⵠΔⵠ[234] = f435(60, 60, 0, ΔΔ[903], 3);
    this.ⵠΔⵠ[234].id = 234;
    this.ⵠΔⵠ[237] = f435(60, 60, 0, ΔΔ[967], 3);
    this.ⵠΔⵠ[237].id = 237;
    this.ⵠΔⵠ[238] = f435(60, 60, 0, ΔΔ[979], 3);
    this.ⵠΔⵠ[238].id = 238;
    this.ⵠΔⵠ[105] = f435(60, 60, 0, ΔΔ[983], 3);
    this.ⵠΔⵠ[105].id = 105;
    this.ⵠΔⵠ[108] = f435(60, 60, 0, ΔΔ[728], 3);
    this.ⵠΔⵠ[108].id = 108;
    this.ⵠΔⵠ[150] = f435(60, 60, 0, ΔΔ[1007], 3);
    this.ⵠΔⵠ[150].id = 150;
    this.ⵠΔⵠ[151] = f435(60, 60, 0, ΔΔ[1011], 3);
    this.ⵠΔⵠ[151].id = 151;
    this.ⵠΔⵠ[152] = f435(60, 60, 0, ΔΔ[1019], 3);
    this.ⵠΔⵠ[152].id = 152;
    this.ⵠΔⵠ[156] = f435(60, 60, 0, ΔΔ[1017], 3);
    this.ⵠΔⵠ[156].id = 156;
    this.ⵠΔⵠ[157] = f435(60, 60, 0, ΔΔ[1021], 3);
    this.ⵠΔⵠ[157].id = 157;
    this.ⵠΔⵠ[159] = f435(60, 60, 0, ΔΔ[1026], 3);
    this.ⵠΔⵠ[159].id = 159;
    this.ⵠΔⵠ[158] = f435(60, 60, 0, ΔΔ[1029], 3);
    this.ⵠΔⵠ[158].id = 158;
    this.ⵠΔⵠ[282] = f435(60, 60, 0, ΔΔ[1033], 3);
    this.ⵠΔⵠ[282].id = 282;
    this.ⵠΔⵠ[283] = f435(60, 60, 0, ΔΔ[1034], 3);
    this.ⵠΔⵠ[283].id = 283;
    this.ⵠΔⵠ[284] = f435(60, 60, 0, ΔΔ[1040], 3);
    this.ⵠΔⵠ[284].id = 284;
    this.ⵠΔⵠ[285] = f435(60, 60, 0, ΔΔ[1048], 3);
    this.ⵠΔⵠ[285].id = 285;
    this.ⵠΔⵠ[290] = f435(60, 60, 0, ΔΔ[1058], 3);
    this.ⵠΔⵠ[290].id = 290;
    this.ⵠΔⵠ[293] = f435(60, 60, 0, ΔΔ[1084], 3);
    this.ⵠΔⵠ[293].id = 293;
    this.ⵠΔⵠ[292] = f435(60, 60, 0, ΔΔ[1092], 3);
    this.ⵠΔⵠ[292].id = 292;
    this.ⵠΔⵠ[295] = f435(60, 60, 0, ΔΔ[1095], 3);
    this.ⵠΔⵠ[295].id = 295;
    this.ⵠΔⵠ[316] = f435(60, 60, 0, ΔΔ[1236], 3);
    this.ⵠΔⵠ[316].id = 316;
    this.ⵠΔⵠ[314] = f435(60, 60, 0, ΔΔ[1226], 3);
    this.ⵠΔⵠ[314].id = 314;
    this.ⵠΔⵠ[318] = f435(60, 60, 0, ΔΔ[1243], 3);
    this.ⵠΔⵠ[318].id = 318;
    this.ⵠΔⵠ[320] = f435(60, 60, 0, ΔΔ[1258], 3);
    this.ⵠΔⵠ[320].id = 320;
    this.ⵠΔⵠ[12] = f435(60, 60, 0, ΔΔ[513], 3);
    this.ⵠΔⵠ[12].id = 12;
    this.ⵠΔⵠ[16] = f435(60, 60, 0, ΔΔ[1125], 3);
    this.ⵠΔⵠ[16].id = 16;
    this.ⵠΔⵠ[18] = f435(60, 60, 0, ΔΔ[1176], 3);
    this.ⵠΔⵠ[18].id = 18;
    this.ⵠΔⵠ[300] = f435(60, 60, 0, ΔΔ[1185], 3);
    this.ⵠΔⵠ[300].id = 300;
    this.ⵠΔⵠ[107] = f435(60, 60, 0, ΔΔ[1188], 3);
    this.ⵠΔⵠ[107].id = 107;
    this.ΔΔᐃ[99] = f435(68, 68, 0, ΔΔ[1252], 3);
    this.ΔΔᐃ[99].id = 99;
    this.Ⲇᐃᐃ[99] = f435(60, 60, 0, ΔΔ[1251], 3);
    this.Ⲇᐃᐃ[99].id = 99;
    this.ⵠΔⵠ[99] = f435(60, 60, 0, ΔΔ[1253], 3);
    this.ⵠΔⵠ[99].id = 99;
    this.ΔΔᐃ[100] = f435(68, 68, 0, ΔΔ[1255], 3);
    this.ΔΔᐃ[100].id = 100;
    this.Ⲇᐃᐃ[100] = f435(60, 60, 0, ΔΔ[1254], 3);
    this.Ⲇᐃᐃ[100].id = 100;
    this.ⵠΔⵠ[100] = f435(60, 60, 0, ΔΔ[1256], 3);
    this.ⵠΔⵠ[100].id = 100;
    this.ΔΔᐃ[102] = f435(68, 68, 0, ΔΔ[962], 3);
    this.ΔΔᐃ[102].id = 102;
    this.Ⲇᐃᐃ[102] = f435(60, 60, 0, ΔΔ[961], 3);
    this.Ⲇᐃᐃ[102].id = 102;
    this.ⵠΔⵠ[102] = f435(60, 60, 0, ΔΔ[963], 3);
    this.ⵠΔⵠ[102].id = 102;
    this.ΔΔᐃ[155] = f435(68, 68, 0, ΔΔ[539], 3);
    this.ΔΔᐃ[155].id = 155;
    this.Ⲇᐃᐃ[155] = f435(60, 60, 0, ΔΔ[537], 3);
    this.Ⲇᐃᐃ[155].id = 155;
    this.ⵠΔⵠ[155] = f435(60, 60, 0, ΔΔ[538], 3);
    this.ⵠΔⵠ[155].id = 155;
    this.ΔΔᐃ[345] = f435(68, 68, 0, ΔΔ[1487], 3);
    this.ΔΔᐃ[345].id = 345;
    this.Ⲇᐃᐃ[345] = f435(60, 60, 0, ΔΔ[1486], 3);
    this.Ⲇᐃᐃ[345].id = 345;
    this.ΔΔᐃ[348] = f435(68, 68, 0, ΔΔ[1543], 3);
    this.ΔΔᐃ[348].id = 348;
    this.Ⲇᐃᐃ[348] = f435(60, 60, 0, ΔΔ[1542], 3);
    this.Ⲇᐃᐃ[348].id = 348;
    this.ΔΔᐃ[346] = f435(68, 68, 0, ΔΔ[1489], 3);
    this.ΔΔᐃ[346].id = 346;
    this.Ⲇᐃᐃ[346] = f435(60, 60, 0, ΔΔ[1488], 3);
    this.Ⲇᐃᐃ[346].id = 346;
    this.ΔΔᐃ[245] = f435(68, 68, 0, ΔΔ[1552], 3);
    this.ΔΔᐃ[245].id = 245;
    this.Ⲇᐃᐃ[245] = f435(60, 60, 0, ΔΔ[1550], 3);
    this.Ⲇᐃᐃ[245].id = 245;
    this.ⵠΔⵠ[245] = f435(60, 60, 0, ΔΔ[1551], 3);
    this.ⵠΔⵠ[245].id = 245;
    this.ΔΔᐃ[322] = f435(68, 68, 0, ΔΔ[1268], 3);
    this.ΔΔᐃ[322].id = 322;
    this.Ⲇᐃᐃ[322] = f435(60, 60, 0, ΔΔ[1267], 3);
    this.Ⲇᐃᐃ[322].id = 322;
    this.ⵠΔⵠ[322] = f435(60, 60, 0, ΔΔ[1266], 3);
    this.ⵠΔⵠ[322].id = 322;
    this.ΔΔᐃ[323] = f435(68, 68, 0, ΔΔ[1271], 3);
    this.ΔΔᐃ[323].id = 323;
    this.Ⲇᐃᐃ[323] = f435(60, 60, 0, ΔΔ[1270], 3);
    this.Ⲇᐃᐃ[323].id = 323;
    this.ⵠΔⵠ[323] = f435(60, 60, 0, ΔΔ[1269], 3);
    this.ⵠΔⵠ[323].id = 323;
    this.ΔΔᐃ[324] = f435(68, 68, 0, ΔΔ[1274], 3);
    this.ΔΔᐃ[324].id = 324;
    this.Ⲇᐃᐃ[324] = f435(60, 60, 0, ΔΔ[1273], 3);
    this.Ⲇᐃᐃ[324].id = 324;
    this.ⵠΔⵠ[324] = f435(60, 60, 0, ΔΔ[1272], 3);
    this.ⵠΔⵠ[324].id = 324;
    this.ΔΔᐃ[325] = f435(68, 68, 0, ΔΔ[1277], 3);
    this.ΔΔᐃ[325].id = 325;
    this.Ⲇᐃᐃ[325] = f435(60, 60, 0, ΔΔ[1276], 3);
    this.Ⲇᐃᐃ[325].id = 325;
    this.ⵠΔⵠ[325] = f435(60, 60, 0, ΔΔ[1275], 3);
    this.ⵠΔⵠ[325].id = 325;
    this.ΔΔᐃ[326] = f435(68, 68, 0, ΔΔ[1280], 3);
    this.ΔΔᐃ[326].id = 326;
    this.Ⲇᐃᐃ[326] = f435(60, 60, 0, ΔΔ[1279], 3);
    this.Ⲇᐃᐃ[326].id = 326;
    this.ⵠΔⵠ[326] = f435(60, 60, 0, ΔΔ[1278], 3);
    this.ⵠΔⵠ[326].id = 326;
    this.ΔΔᐃ[330] = f435(68, 68, 0, ΔΔ[1283], 3);
    this.ΔΔᐃ[330].id = 330;
    this.Ⲇᐃᐃ[330] = f435(60, 60, 0, ΔΔ[1282], 3);
    this.Ⲇᐃᐃ[330].id = 330;
    this.ⵠΔⵠ[330] = f435(60, 60, 0, ΔΔ[1281], 3);
    this.ⵠΔⵠ[330].id = 330;
    this.ΔΔᐃ[327] = f435(68, 68, 0, ΔΔ[1292], 3);
    this.ΔΔᐃ[327].id = 327;
    this.Ⲇᐃᐃ[327] = f435(60, 60, 0, ΔΔ[1291], 3);
    this.Ⲇᐃᐃ[327].id = 327;
    this.ⵠΔⵠ[327] = f435(60, 60, 0, ΔΔ[1290], 3);
    this.ⵠΔⵠ[327].id = 327;
    this.ΔΔᐃ[329] = f435(68, 68, 0, ΔΔ[1289], 3);
    this.ΔΔᐃ[329].id = 329;
    this.Ⲇᐃᐃ[329] = f435(60, 60, 0, ΔΔ[1288], 3);
    this.Ⲇᐃᐃ[329].id = 329;
    this.ⵠΔⵠ[329] = f435(60, 60, 0, ΔΔ[1287], 3);
    this.ⵠΔⵠ[329].id = 329;
    this.ΔΔᐃ[328] = f435(68, 68, 0, ΔΔ[1286], 3);
    this.ΔΔᐃ[328].id = 328;
    this.Ⲇᐃᐃ[328] = f435(60, 60, 0, ΔΔ[1285], 3);
    this.Ⲇᐃᐃ[328].id = 328;
    this.ⵠΔⵠ[328] = f435(60, 60, 0, ΔΔ[1284], 3);
    this.ⵠΔⵠ[328].id = 328;
    this.ΔΔᐃ[246] = f435(68, 68, 0, ΔΔ[1556], 3);
    this.ΔΔᐃ[246].id = 246;
    this.Ⲇᐃᐃ[246] = f435(60, 60, 0, ΔΔ[1554], 3);
    this.Ⲇᐃᐃ[246].id = 246;
    this.ⵠΔⵠ[246] = f435(60, 60, 0, ΔΔ[1555], 3);
    this.ⵠΔⵠ[246].id = 246;
    this.ΔΔᐃ[247] = f435(68, 68, 0, ΔΔ[1560], 3);
    this.ΔΔᐃ[247].id = 247;
    this.Ⲇᐃᐃ[247] = f435(60, 60, 0, ΔΔ[1558], 3);
    this.Ⲇᐃᐃ[247].id = 247;
    this.ⵠΔⵠ[247] = f435(60, 60, 0, ΔΔ[1559], 3);
    this.ⵠΔⵠ[247].id = 247;
    this.ΔΔᐃ[248] = f435(68, 68, 0, ΔΔ[1564], 3);
    this.ΔΔᐃ[248].id = 248;
    this.Ⲇᐃᐃ[248] = f435(60, 60, 0, ΔΔ[1562], 3);
    this.Ⲇᐃᐃ[248].id = 248;
    this.ⵠΔⵠ[248] = f435(60, 60, 0, ΔΔ[1563], 3);
    this.ⵠΔⵠ[248].id = 248;
    this.ΔΔᐃ[249] = f435(68, 68, 0, ΔΔ[1568], 3);
    this.ΔΔᐃ[249].id = 249;
    this.Ⲇᐃᐃ[249] = f435(60, 60, 0, ΔΔ[1566], 3);
    this.Ⲇᐃᐃ[249].id = 249;
    this.ⵠΔⵠ[249] = f435(60, 60, 0, ΔΔ[1567], 3);
    this.ⵠΔⵠ[249].id = 249;
    this.ΔΔᐃ[250] = f435(68, 68, 0, ΔΔ[1572], 3);
    this.ΔΔᐃ[250].id = 250;
    this.Ⲇᐃᐃ[250] = f435(60, 60, 0, ΔΔ[1570], 3);
    this.Ⲇᐃᐃ[250].id = 250;
    this.ⵠΔⵠ[250] = f435(60, 60, 0, ΔΔ[1571], 3);
    this.ⵠΔⵠ[250].id = 250;
    this.ΔΔᐃ[251] = f435(68, 68, 0, ΔΔ[1576], 3);
    this.ΔΔᐃ[251].id = 251;
    this.Ⲇᐃᐃ[251] = f435(60, 60, 0, ΔΔ[1574], 3);
    this.Ⲇᐃᐃ[251].id = 251;
    this.ⵠΔⵠ[251] = f435(60, 60, 0, ΔΔ[1575], 3);
    this.ⵠΔⵠ[251].id = 251;
    this.ΔΔᐃ[252] = f435(68, 68, 0, ΔΔ[1580], 3);
    this.ΔΔᐃ[252].id = 252;
    this.Ⲇᐃᐃ[252] = f435(60, 60, 0, ΔΔ[1578], 3);
    this.Ⲇᐃᐃ[252].id = 252;
    this.ⵠΔⵠ[252] = f435(60, 60, 0, ΔΔ[1579], 3);
    this.ⵠΔⵠ[252].id = 252;
    this.ΔΔᐃ[253] = f435(68, 68, 0, ΔΔ[1584], 3);
    this.ΔΔᐃ[253].id = 253;
    this.Ⲇᐃᐃ[253] = f435(60, 60, 0, ΔΔ[1582], 3);
    this.Ⲇᐃᐃ[253].id = 253;
    this.ⵠΔⵠ[253] = f435(60, 60, 0, ΔΔ[1583], 3);
    this.ⵠΔⵠ[253].id = 253;
    this.ΔΔᐃ[254] = f435(68, 68, 0, ΔΔ[1588], 3);
    this.ΔΔᐃ[254].id = 254;
    this.Ⲇᐃᐃ[254] = f435(60, 60, 0, ΔΔ[1586], 3);
    this.Ⲇᐃᐃ[254].id = 254;
    this.ⵠΔⵠ[254] = f435(60, 60, 0, ΔΔ[1587], 3);
    this.ⵠΔⵠ[254].id = 254;
    this.ΔΔᐃ[255] = f435(68, 68, 0, ΔΔ[1592], 3);
    this.ΔΔᐃ[255].id = 255;
    this.Ⲇᐃᐃ[255] = f435(60, 60, 0, ΔΔ[1590], 3);
    this.Ⲇᐃᐃ[255].id = 255;
    this.ⵠΔⵠ[255] = f435(60, 60, 0, ΔΔ[1591], 3);
    this.ⵠΔⵠ[255].id = 255;
    this.ΔΔᐃ[256] = f435(68, 68, 0, ΔΔ[1596], 3);
    this.ΔΔᐃ[256].id = 256;
    this.Ⲇᐃᐃ[256] = f435(60, 60, 0, ΔΔ[1594], 3);
    this.Ⲇᐃᐃ[256].id = 256;
    this.ⵠΔⵠ[256] = f435(60, 60, 0, ΔΔ[1595], 3);
    this.ⵠΔⵠ[256].id = 256;
    this.ΔΔᐃ[257] = f435(68, 68, 0, ΔΔ[1600], 3);
    this.ΔΔᐃ[257].id = 257;
    this.Ⲇᐃᐃ[257] = f435(60, 60, 0, ΔΔ[1598], 3);
    this.Ⲇᐃᐃ[257].id = 257;
    this.ⵠΔⵠ[257] = f435(60, 60, 0, ΔΔ[1599], 3);
    this.ⵠΔⵠ[257].id = 257;
    this.ΔΔᐃ[258] = f435(68, 68, 0, ΔΔ[1604], 3);
    this.ΔΔᐃ[258].id = 258;
    this.Ⲇᐃᐃ[258] = f435(60, 60, 0, ΔΔ[1602], 3);
    this.Ⲇᐃᐃ[258].id = 258;
    this.ⵠΔⵠ[258] = f435(60, 60, 0, ΔΔ[1603], 3);
    this.ⵠΔⵠ[258].id = 258;
    this.ΔΔᐃ[259] = f435(68, 68, 0, ΔΔ[1608], 3);
    this.ΔΔᐃ[259].id = 259;
    this.Ⲇᐃᐃ[259] = f435(60, 60, 0, ΔΔ[1606], 3);
    this.Ⲇᐃᐃ[259].id = 259;
    this.ⵠΔⵠ[259] = f435(60, 60, 0, ΔΔ[1607], 3);
    this.ⵠΔⵠ[259].id = 259;
    this.ΔΔᐃ[305] = f435(68, 68, 0, ΔΔ[1213], 3);
    this.ΔΔᐃ[305].id = 305;
    this.Ⲇᐃᐃ[305] = f435(60, 60, 0, ΔΔ[1212], 3);
    this.Ⲇᐃᐃ[305].id = 305;
    this.Ⲇᐃᐃ[305].info.Δᐃ[2] = this.Ⲇᐃᐃ[305].info.Δᐃ[0];
    this.ΔΔᐃ[243] = f435(68, 68, 0, ΔΔ[662], 3);
    this.ΔΔᐃ[243].id = 243;
    this.Ⲇᐃᐃ[243] = f435(60, 60, 0, ΔΔ[661], 3);
    this.Ⲇᐃᐃ[243].id = 243;
    this.Ⲇᐃᐃ[243].info.Δᐃ[2] = this.Ⲇᐃᐃ[243].info.Δᐃ[0];
    this.ΔΔᐃ[304] = f435(68, 68, 0, ΔΔ[1215], 3);
    this.ΔΔᐃ[304].id = 304;
    this.Ⲇᐃᐃ[304] = f435(60, 60, 0, ΔΔ[1214], 3);
    this.Ⲇᐃᐃ[304].id = 304;
    this.Ⲇᐃᐃ[304].info.Δᐃ[2] = this.Ⲇᐃᐃ[304].info.Δᐃ[0];
    this.ΔΔᐃ[28] = f435(68, 68, 0, ΔΔ[1210], 3);
    this.ΔΔᐃ[28].id = 28;
    this.Ⲇᐃᐃ[28] = f435(60, 60, 0, ΔΔ[1208], 3);
    this.Ⲇᐃᐃ[28].id = 28;
    this.ⵠΔⵠ[28] = f435(60, 60, 0, ΔΔ[1209], 3);
    this.ⵠΔⵠ[28].id = 28;
    this.ΔΔᐃ[29] = f435(68, 68, 0, ΔΔ[1199], 3);
    this.ΔΔᐃ[29].id = 29;
    this.Ⲇᐃᐃ[29] = f435(60, 60, 0, ΔΔ[1197], 3);
    this.Ⲇᐃᐃ[29].id = 29;
    this.ⵠΔⵠ[29] = f435(60, 60, 0, ΔΔ[1198], 3);
    this.ⵠΔⵠ[29].id = 29;
    this.ΔΔᐃ[30] = f435(68, 68, 0, ΔΔ[1203], 3);
    this.ΔΔᐃ[30].id = 30;
    this.Ⲇᐃᐃ[30] = f435(60, 60, 0, ΔΔ[1201], 3);
    this.Ⲇᐃᐃ[30].id = 30;
    this.ⵠΔⵠ[30] = f435(60, 60, 0, ΔΔ[1202], 3);
    this.ⵠΔⵠ[30].id = 30;
    this.ΔΔᐃ[31] = f435(68, 68, 0, ΔΔ[1207], 3);
    this.ΔΔᐃ[31].id = 31;
    this.Ⲇᐃᐃ[31] = f435(60, 60, 0, ΔΔ[1205], 3);
    this.Ⲇᐃᐃ[31].id = 31;
    this.ⵠΔⵠ[31] = f435(60, 60, 0, ΔΔ[1206], 3);
    this.ⵠΔⵠ[31].id = 31;
    this.ΔΔᐃ[106] = f435(68, 68, 0, ΔΔ[985], 3);
    this.ΔΔᐃ[106].id = 106;
    this.Ⲇᐃᐃ[106] = f435(60, 60, 0, ΔΔ[984], 3);
    this.Ⲇᐃᐃ[106].id = 106;
    this.ⵠΔⵠ[106] = f435(60, 60, 0, ΔΔ[986], 3);
    this.ⵠΔⵠ[106].id = 106;
    this.ΔΔᐃ[163] = f435(68, 68, 0, ΔΔ[988], 3);
    this.ΔΔᐃ[163].id = 163;
    this.Ⲇᐃᐃ[163] = f435(60, 60, 0, ΔΔ[987], 3);
    this.Ⲇᐃᐃ[163].id = 163;
    this.ⵠΔⵠ[163] = f435(60, 60, 0, ΔΔ[989], 3);
    this.ⵠΔⵠ[163].id = 163;
    this.ΔΔᐃ[165] = f435(68, 68, 0, ΔΔ[994], 3);
    this.ΔΔᐃ[165].id = 165;
    this.Ⲇᐃᐃ[165] = f435(60, 60, 0, ΔΔ[993], 3);
    this.Ⲇᐃᐃ[165].id = 165;
    this.ⵠΔⵠ[165] = f435(60, 60, 0, ΔΔ[995], 3);
    this.ⵠΔⵠ[165].id = 165;
    this.ΔΔᐃ[166] = f435(68, 68, 0, ΔΔ[997], 3);
    this.ΔΔᐃ[166].id = 166;
    this.Ⲇᐃᐃ[166] = f435(60, 60, 0, ΔΔ[996], 3);
    this.Ⲇᐃᐃ[166].id = 166;
    this.ⵠΔⵠ[166] = f435(60, 60, 0, ΔΔ[998], 3);
    this.ⵠΔⵠ[166].id = 166;
    this.ΔΔᐃ[164] = f435(68, 68, 0, ΔΔ[991], 3);
    this.ΔΔᐃ[164].id = 164;
    this.Ⲇᐃᐃ[164] = f435(60, 60, 0, ΔΔ[990], 3);
    this.Ⲇᐃᐃ[164].id = 164;
    this.ⵠΔⵠ[164] = f435(60, 60, 0, ΔΔ[992], 3);
    this.ⵠΔⵠ[164].id = 164;
    this.ΔΔᐃ[182] = f435(68, 68, 0, ΔΔ[1493], 3);
    this.ΔΔᐃ[182].id = 182;
    this.Ⲇᐃᐃ[182] = f435(60, 60, 0, ΔΔ[1492], 3);
    this.Ⲇᐃᐃ[182].id = 182;
    this.ⵠΔⵠ[182] = f435(60, 60, 0, ΔΔ[v624.ΔᐃⵠⲆᐃΔᐃΔΔ], 3);
    this.ⵠΔⵠ[182].id = 182;
    this.ΔΔᐃ[61] = f435(68, 68, 0, ΔΔ[1221], 3);
    this.ΔΔᐃ[61].id = 61;
    this.Ⲇᐃᐃ[61] = f435(60, 60, 0, ΔΔ[1219], 3);
    this.Ⲇᐃᐃ[61].id = 61;
    this.ⵠΔⵠ[61] = f435(60, 60, 0, ΔΔ[1220], 3);
    this.ⵠΔⵠ[61].id = 61;
    this.ΔΔᐃ[71] = f435(68, 68, 0, ΔΔ[1224], 3);
    this.ΔΔᐃ[71].id = 71;
    this.Ⲇᐃᐃ[71] = f435(60, 60, 0, ΔΔ[1222], 3);
    this.Ⲇᐃᐃ[71].id = 71;
    this.ⵠΔⵠ[71] = f435(60, 60, 0, ΔΔ[1223], 3);
    this.ⵠΔⵠ[71].id = 71;
    this.ΔΔᐃ[17] = f435(68, 68, 0, ΔΔ[1127], 3);
    this.ΔΔᐃ[17].id = 17;
    this.Ⲇᐃᐃ[17] = f435(60, 60, 0, ΔΔ[1126], 3);
    this.Ⲇᐃᐃ[17].id = 17;
    this.ⵠΔⵠ[17] = f435(60, 60, 0, ΔΔ[1128], 3);
    this.ⵠΔⵠ[17].id = 17;
    this.ΔΔᐃ[109] = f435(68, 68, 0, ΔΔ[733], 3);
    this.ΔΔᐃ[109].id = 109;
    this.Ⲇᐃᐃ[109] = f435(60, 60, 0, ΔΔ[731], 3);
    this.Ⲇᐃᐃ[109].id = 109;
    this.ⵠΔⵠ[109] = f435(60, 60, 0, ΔΔ[732], 3);
    this.ⵠΔⵠ[109].id = 109;
    this.ΔΔᐃ[289] = f435(68, 68, 0, ΔΔ[810], 3);
    this.ΔΔᐃ[289].id = 289;
    this.Ⲇᐃᐃ[289] = f435(60, 60, 0, ΔΔ[363], 3);
    this.Ⲇᐃᐃ[289].id = 289;
    this.ΔΔᐃ[v625.ΔⵠᐃⵠᐃᐃΔ] = f435(68, 68, 0, ΔΔ[v624.ⵠⲆᐃΔⵠⲆⲆΔⵠ], 3);
    this.ΔΔᐃ[v625.ΔⵠᐃⵠᐃᐃΔ].id = v625.ΔⵠᐃⵠᐃᐃΔ;
    this.Ⲇᐃᐃ[v625.ΔⵠᐃⵠᐃᐃΔ] = f435(60, 60, 0, ΔΔ[v624.ΔΔΔⵠⲆⲆᐃⲆΔ], 3);
    this.Ⲇᐃᐃ[v625.ΔⵠᐃⵠᐃᐃΔ].id = v625.ΔⵠᐃⵠᐃᐃΔ;
    this.ΔΔᐃ[v625.ⲆⲆⵠΔᐃⵠⲆ] = f435(68, 68, 0, ΔΔ[v624.ᐃᐃⲆᐃⵠⵠΔᐃᐃ], 3);
    this.ΔΔᐃ[v625.ⲆⲆⵠΔᐃⵠⲆ].id = v625.ⲆⲆⵠΔᐃⵠⲆ;
    this.Ⲇᐃᐃ[v625.ⲆⲆⵠΔᐃⵠⲆ] = f435(60, 60, 0, ΔΔ[v624.ᐃΔΔΔⵠΔⲆᐃᐃ], 3);
    this.Ⲇᐃᐃ[v625.ⲆⲆⵠΔᐃⵠⲆ].id = v625.ⲆⲆⵠΔᐃⵠⲆ;
    this.ΔΔᐃ[v625.ⵠᐃᐃⲆⲆⵠⵠ] = f435(68, 68, 0, ΔΔ[v624.ⵠΔⵠⲆᐃⵠⲆΔⲆ], 3);
    this.ΔΔᐃ[v625.ⵠᐃᐃⲆⲆⵠⵠ].id = v625.ⵠᐃᐃⲆⲆⵠⵠ;
    this.Ⲇᐃᐃ[v625.ⵠᐃᐃⲆⲆⵠⵠ] = f435(60, 60, 0, ΔΔ[v624.ⵠⵠΔⵠΔᐃᐃΔⲆ], 3);
    this.Ⲇᐃᐃ[v625.ⵠᐃᐃⲆⲆⵠⵠ].id = v625.ⵠᐃᐃⲆⲆⵠⵠ;
    this.ΔΔᐃ[v625.ᐃΔⵠⲆΔΔᐃ] = f435(68, 68, 0, ΔΔ[v624.ⲆⵠⵠᐃⵠᐃⵠᐃΔ], 3);
    this.ΔΔᐃ[v625.ᐃΔⵠⲆΔΔᐃ].id = v625.ᐃΔⵠⲆΔΔᐃ;
    this.Ⲇᐃᐃ[v625.ᐃΔⵠⲆΔΔᐃ] = f435(60, 60, 0, ΔΔ[v624.ᐃⵠⵠⵠⲆⵠΔⵠⵠ], 3);
    this.Ⲇᐃᐃ[v625.ᐃΔⵠⲆΔΔᐃ].id = v625.ᐃΔⵠⲆΔΔᐃ;
    this.ΔΔᐃ[v625.ⲆΔⲆᐃⵠΔᐃ] = f435(68, 68, 0, ΔΔ[v624.ⵠⵠⲆⲆᐃⵠΔⲆᐃ], 3);
    this.ΔΔᐃ[v625.ⲆΔⲆᐃⵠΔᐃ].id = v625.ⲆΔⲆᐃⵠΔᐃ;
    this.Ⲇᐃᐃ[v625.ⲆΔⲆᐃⵠΔᐃ] = f435(60, 60, 0, ΔΔ[v624.ⲆᐃⲆΔᐃⲆⵠⲆⲆ], 3);
    this.Ⲇᐃᐃ[v625.ⲆΔⲆᐃⵠΔᐃ].id = v625.ⲆΔⲆᐃⵠΔᐃ;
    this.ΔΔᐃ[306] = f435(68, 68, 0, ΔΔ[1721], 3);
    this.ΔΔᐃ[306].id = 306;
    this.Ⲇᐃᐃ[306] = f435(60, 60, 0, ΔΔ[1722], 3);
    this.Ⲇᐃᐃ[306].id = 306;
    this.Ⲇᐃᐃ[306].info.Δᐃ[2] = this.Ⲇᐃᐃ[306].info.Δᐃ[0];
    this.ΔΔᐃ[307] = f435(68, 68, 0, ΔΔ[1723], 3);
    this.ΔΔᐃ[307].id = 307;
    this.Ⲇᐃᐃ[307] = f435(60, 60, 0, ΔΔ[1724], 3);
    this.Ⲇᐃᐃ[307].id = 307;
    this.Ⲇᐃᐃ[307].info.Δᐃ[2] = this.Ⲇᐃᐃ[307].info.Δᐃ[0];
    this.ΔΔᐃ[308] = f435(68, 68, 0, ΔΔ[1725], 3);
    this.ΔΔᐃ[308].id = 308;
    this.Ⲇᐃᐃ[308] = f435(60, 60, 0, ΔΔ[1726], 3);
    this.Ⲇᐃᐃ[308].id = 308;
    this.Ⲇᐃᐃ[308].info.Δᐃ[2] = this.Ⲇᐃᐃ[308].info.Δᐃ[0];
    this.ΔΔᐃ[309] = f435(68, 68, 0, ΔΔ[1727], 3);
    this.ΔΔᐃ[309].id = 309;
    this.Ⲇᐃᐃ[309] = f435(60, 60, 0, ΔΔ[1728], 3);
    this.Ⲇᐃᐃ[309].id = 309;
    this.Ⲇᐃᐃ[309].info.Δᐃ[2] = this.Ⲇᐃᐃ[309].info.Δᐃ[0];
    this.ΔΔᐃ[310] = f435(68, 68, 0, ΔΔ[1729], 3);
    this.ΔΔᐃ[310].id = 310;
    this.Ⲇᐃᐃ[310] = f435(60, 60, 0, ΔΔ[1730], 3);
    this.Ⲇᐃᐃ[310].id = 310;
    this.Ⲇᐃᐃ[310].info.Δᐃ[2] = this.Ⲇᐃᐃ[310].info.Δᐃ[0];
    this.ΔΔᐃ[311] = f435(68, 68, 0, ΔΔ[1731], 3);
    this.ΔΔᐃ[311].id = 311;
    this.Ⲇᐃᐃ[311] = f435(60, 60, 0, ΔΔ[1732], 3);
    this.Ⲇᐃᐃ[311].id = 311;
    this.Ⲇᐃᐃ[311].info.Δᐃ[2] = this.Ⲇᐃᐃ[311].info.Δᐃ[0];
    this.ΔΔᐃ[313] = f435(68, 68, 0, ΔΔ[1735], 3);
    this.ΔΔᐃ[313].id = 313;
    this.Ⲇᐃᐃ[313] = f435(60, 60, 0, ΔΔ[1736], 3);
    this.Ⲇᐃᐃ[313].id = 313;
    this.Ⲇᐃᐃ[313].info.Δᐃ[2] = this.Ⲇᐃᐃ[313].info.Δᐃ[0];
    this.ΔΔᐃ[312] = f435(68, 68, 0, ΔΔ[1733], 3);
    this.ΔΔᐃ[312].id = 312;
    this.Ⲇᐃᐃ[312] = f435(60, 60, 0, ΔΔ[1734], 3);
    this.Ⲇᐃᐃ[312].id = 312;
    this.Ⲇᐃᐃ[312].info.Δᐃ[2] = this.Ⲇᐃᐃ[312].info.Δᐃ[0];
    this.ΔΔᐃ[357] = f435(68, 68, 0, ΔΔ[1742], 3);
    this.ΔΔᐃ[357].id = 357;
    this.Ⲇᐃᐃ[357] = f435(60, 60, 0, ΔΔ[1740], 3);
    this.Ⲇᐃᐃ[357].id = 357;
    this.ⵠΔⵠ[357] = f435(60, 60, 0, ΔΔ[1741], 3);
    this.ⵠΔⵠ[357].id = 357;
    this.ΔΔᐃ[356] = f435(68, 68, 0, ΔΔ[1737], 3);
    this.ΔΔᐃ[356].id = 356;
    this.Ⲇᐃᐃ[356] = f435(60, 60, 0, ΔΔ[1738], 3);
    this.Ⲇᐃᐃ[356].id = 356;
    this.ΔΔᐃ[357] = f435(68, 68, 0, ΔΔ[1742], 3);
    this.ΔΔᐃ[357].id = 357;
    this.Ⲇᐃᐃ[357] = f435(60, 60, 0, ΔΔ[1740], 3);
    this.Ⲇᐃᐃ[357].id = 357;
    this.ⵠΔⵠ[357] = f435(60, 60, 0, ΔΔ[1741], 3);
    this.ⵠΔⵠ[357].id = 357;
    this.ΔΔᐃ[37] = f435(68, 68, 0, ΔΔ[551], 3);
    this.ΔΔᐃ[37].id = 37;
    this.Ⲇᐃᐃ[37] = f435(60, 60, 0, ΔΔ[549], 3);
    this.Ⲇᐃᐃ[37].id = 37;
    this.ⵠΔⵠ[37] = f435(60, 60, 0, ΔΔ[550], 3);
    this.ⵠΔⵠ[37].id = 37;
    this.ΔΔᐃ[38] = f435(68, 68, 0, ΔΔ[554], 3);
    this.ΔΔᐃ[38].id = 38;
    this.Ⲇᐃᐃ[38] = f435(60, 60, 0, ΔΔ[552], 3);
    this.Ⲇᐃᐃ[38].id = 38;
    this.ⵠΔⵠ[38] = f435(60, 60, 0, ΔΔ[553], 3);
    this.ⵠΔⵠ[38].id = 38;
    this.ΔΔᐃ[39] = f435(68, 68, 0, ΔΔ[557], 3);
    this.ΔΔᐃ[39].id = 39;
    this.Ⲇᐃᐃ[39] = f435(60, 60, 0, ΔΔ[555], 3);
    this.Ⲇᐃᐃ[39].id = 39;
    this.ⵠΔⵠ[39] = f435(60, 60, 0, ΔΔ[556], 3);
    this.ⵠΔⵠ[39].id = 39;
    this.ΔΔᐃ[40] = f435(68, 68, 0, ΔΔ[560], 3);
    this.ΔΔᐃ[40].id = 40;
    this.Ⲇᐃᐃ[40] = f435(60, 60, 0, ΔΔ[558], 3);
    this.Ⲇᐃᐃ[40].id = 40;
    this.ⵠΔⵠ[40] = f435(60, 60, 0, ΔΔ[559], 3);
    this.ⵠΔⵠ[40].id = 40;
    this.ΔΔᐃ[41] = f435(68, 68, 0, ΔΔ[563], 3);
    this.ΔΔᐃ[41].id = 41;
    this.Ⲇᐃᐃ[41] = f435(60, 60, 0, ΔΔ[561], 3);
    this.Ⲇᐃᐃ[41].id = 41;
    this.ⵠΔⵠ[41] = f435(60, 60, 0, ΔΔ[562], 3);
    this.ⵠΔⵠ[41].id = 41;
    this.ΔΔᐃ[42] = f435(68, 68, 0, ΔΔ[566], 3);
    this.ΔΔᐃ[42].id = 42;
    this.Ⲇᐃᐃ[42] = f435(60, 60, 0, ΔΔ[564], 3);
    this.Ⲇᐃᐃ[42].id = 42;
    this.ⵠΔⵠ[42] = f435(60, 60, 0, ΔΔ[565], 3);
    this.ⵠΔⵠ[42].id = 42;
    this.ΔΔᐃ[43] = f435(68, 68, 0, ΔΔ[569], 3);
    this.ΔΔᐃ[43].id = 43;
    this.Ⲇᐃᐃ[43] = f435(60, 60, 0, ΔΔ[567], 3);
    this.Ⲇᐃᐃ[43].id = 43;
    this.ⵠΔⵠ[43] = f435(60, 60, 0, ΔΔ[568], 3);
    this.ⵠΔⵠ[43].id = 43;
    this.ΔΔᐃ[44] = f435(68, 68, 0, ΔΔ[572], 3);
    this.ΔΔᐃ[44].id = 44;
    this.Ⲇᐃᐃ[44] = f435(60, 60, 0, ΔΔ[570], 3);
    this.Ⲇᐃᐃ[44].id = 44;
    this.ⵠΔⵠ[44] = f435(60, 60, 0, ΔΔ[571], 3);
    this.ⵠΔⵠ[44].id = 44;
    this.ΔΔᐃ[45] = f435(68, 68, 0, ΔΔ[575], 3);
    this.ΔΔᐃ[45].id = 45;
    this.Ⲇᐃᐃ[45] = f435(60, 60, 0, ΔΔ[573], 3);
    this.Ⲇᐃᐃ[45].id = 45;
    this.ⵠΔⵠ[45] = f435(60, 60, 0, ΔΔ[574], 3);
    this.ⵠΔⵠ[45].id = 45;
    this.ΔΔᐃ[51] = f435(68, 68, 0, ΔΔ[1297], 3);
    this.ΔΔᐃ[51].id = 51;
    this.Ⲇᐃᐃ[51] = f435(60, 60, 0, ΔΔ[1296], 3);
    this.Ⲇᐃᐃ[51].id = 51;
    this.ⵠΔⵠ[51] = f435(60, 60, 0, ΔΔ[1298], 3);
    this.ⵠΔⵠ[51].id = 51;
    this.ΔΔᐃ[52] = f435(68, 68, 0, ΔΔ[1300], 3);
    this.ΔΔᐃ[52].id = 52;
    this.Ⲇᐃᐃ[52] = f435(60, 60, 0, ΔΔ[1299], 3);
    this.Ⲇᐃᐃ[52].id = 52;
    this.ⵠΔⵠ[52] = f435(60, 60, 0, ΔΔ[1301], 3);
    this.ⵠΔⵠ[52].id = 52;
    this.ΔΔᐃ[53] = f435(68, 68, 0, ΔΔ[1303], 3);
    this.ΔΔᐃ[53].id = 53;
    this.Ⲇᐃᐃ[53] = f435(60, 60, 0, ΔΔ[1302], 3);
    this.Ⲇᐃᐃ[53].id = 53;
    this.ⵠΔⵠ[53] = f435(60, 60, 0, ΔΔ[1304], 3);
    this.ⵠΔⵠ[53].id = 53;
    this.ΔΔᐃ[54] = f435(68, 68, 0, ΔΔ[1306], 3);
    this.ΔΔᐃ[54].id = 54;
    this.Ⲇᐃᐃ[54] = f435(60, 60, 0, ΔΔ[1305], 3);
    this.Ⲇᐃᐃ[54].id = 54;
    this.ⵠΔⵠ[54] = f435(60, 60, 0, ΔΔ[1307], 3);
    this.ⵠΔⵠ[54].id = 54;
    this.ΔΔᐃ[55] = f435(68, 68, 0, ΔΔ[1309], 3);
    this.ΔΔᐃ[55].id = 55;
    this.Ⲇᐃᐃ[55] = f435(60, 60, 0, ΔΔ[1308], 3);
    this.Ⲇᐃᐃ[55].id = 55;
    this.ⵠΔⵠ[55] = f435(60, 60, 0, ΔΔ[1310], 3);
    this.ⵠΔⵠ[55].id = 55;
    this.ΔΔᐃ[56] = f435(68, 68, 0, ΔΔ[1312], 3);
    this.ΔΔᐃ[56].id = 56;
    this.Ⲇᐃᐃ[56] = f435(60, 60, 0, ΔΔ[1311], 3);
    this.Ⲇᐃᐃ[56].id = 56;
    this.ⵠΔⵠ[56] = f435(60, 60, 0, ΔΔ[1313], 3);
    this.ⵠΔⵠ[56].id = 56;
    this.ΔΔᐃ[57] = f435(68, 68, 0, ΔΔ[1315], 3);
    this.ΔΔᐃ[57].id = 57;
    this.Ⲇᐃᐃ[57] = f435(60, 60, 0, ΔΔ[1314], 3);
    this.Ⲇᐃᐃ[57].id = 57;
    this.ⵠΔⵠ[57] = f435(60, 60, 0, ΔΔ[1316], 3);
    this.ⵠΔⵠ[57].id = 57;
    this.ΔΔᐃ[59] = f435(68, 68, 0, ΔΔ[1321], 3);
    this.ΔΔᐃ[59].id = 59;
    this.Ⲇᐃᐃ[59] = f435(60, 60, 0, ΔΔ[1320], 3);
    this.Ⲇᐃᐃ[59].id = 59;
    this.ⵠΔⵠ[59] = f435(60, 60, 0, ΔΔ[1322], 3);
    this.ⵠΔⵠ[59].id = 59;
    this.ΔΔᐃ[58] = f435(68, 68, 0, ΔΔ[1318], 3);
    this.ΔΔᐃ[58].id = 58;
    this.Ⲇᐃᐃ[58] = f435(60, 60, 0, ΔΔ[1317], 3);
    this.Ⲇᐃᐃ[58].id = 58;
    this.ⵠΔⵠ[58] = f435(60, 60, 0, ΔΔ[1319], 3);
    this.ⵠΔⵠ[58].id = 58;
    this.ΔΔᐃ[73] = f435(68, 68, 0, ΔΔ[693], 3);
    this.ΔΔᐃ[73].id = 73;
    this.Ⲇᐃᐃ[73] = f435(60, 60, 0, ΔΔ[691], 3);
    this.Ⲇᐃᐃ[73].id = 73;
    this.ⵠΔⵠ[73] = f435(60, 60, 0, ΔΔ[692], 3);
    this.ⵠΔⵠ[73].id = 73;
    this.ΔΔᐃ[74] = f435(68, 68, 0, ΔΔ[696], 3);
    this.ΔΔᐃ[74].id = 74;
    this.Ⲇᐃᐃ[74] = f435(60, 60, 0, ΔΔ[694], 3);
    this.Ⲇᐃᐃ[74].id = 74;
    this.ⵠΔⵠ[74] = f435(60, 60, 0, ΔΔ[695], 3);
    this.ⵠΔⵠ[74].id = 74;
    this.ΔΔᐃ[75] = f435(68, 68, 0, ΔΔ[699], 3);
    this.ΔΔᐃ[75].id = 75;
    this.Ⲇᐃᐃ[75] = f435(60, 60, 0, ΔΔ[697], 3);
    this.Ⲇᐃᐃ[75].id = 75;
    this.ⵠΔⵠ[75] = f435(60, 60, 0, ΔΔ[698], 3);
    this.ⵠΔⵠ[75].id = 75;
    this.ΔΔᐃ[76] = f435(68, 68, 0, ΔΔ[702], 3);
    this.ΔΔᐃ[76].id = 76;
    this.Ⲇᐃᐃ[76] = f435(60, 60, 0, ΔΔ[700], 3);
    this.Ⲇᐃᐃ[76].id = 76;
    this.ⵠΔⵠ[76] = f435(60, 60, 0, ΔΔ[701], 3);
    this.ⵠΔⵠ[76].id = 76;
    this.ΔΔᐃ[77] = f435(68, 68, 0, ΔΔ[705], 3);
    this.ΔΔᐃ[77].id = 77;
    this.Ⲇᐃᐃ[77] = f435(60, 60, 0, ΔΔ[703], 3);
    this.Ⲇᐃᐃ[77].id = 77;
    this.ⵠΔⵠ[77] = f435(60, 60, 0, ΔΔ[704], 3);
    this.ⵠΔⵠ[77].id = 77;
    this.ΔΔᐃ[78] = f435(68, 68, 0, ΔΔ[708], 3);
    this.ΔΔᐃ[78].id = 78;
    this.Ⲇᐃᐃ[78] = f435(60, 60, 0, ΔΔ[706], 3);
    this.Ⲇᐃᐃ[78].id = 78;
    this.ⵠΔⵠ[78] = f435(60, 60, 0, ΔΔ[707], 3);
    this.ⵠΔⵠ[78].id = 78;
    this.ΔΔᐃ[79] = f435(68, 68, 0, ΔΔ[711], 3);
    this.ΔΔᐃ[79].id = 79;
    this.Ⲇᐃᐃ[79] = f435(60, 60, 0, ΔΔ[709], 3);
    this.Ⲇᐃᐃ[79].id = 79;
    this.ⵠΔⵠ[79] = f435(60, 60, 0, ΔΔ[710], 3);
    this.ⵠΔⵠ[79].id = 79;
    this.ΔΔᐃ[81] = f435(68, 68, 0, ΔΔ[717], 3);
    this.ΔΔᐃ[81].id = 81;
    this.Ⲇᐃᐃ[81] = f435(60, 60, 0, ΔΔ[715], 3);
    this.Ⲇᐃᐃ[81].id = 81;
    this.ⵠΔⵠ[81] = f435(60, 60, 0, ΔΔ[716], 3);
    this.ⵠΔⵠ[81].id = 81;
    this.ΔΔᐃ[80] = f435(68, 68, 0, ΔΔ[714], 3);
    this.ΔΔᐃ[80].id = 80;
    this.Ⲇᐃᐃ[80] = f435(60, 60, 0, ΔΔ[712], 3);
    this.Ⲇᐃᐃ[80].id = 80;
    this.ⵠΔⵠ[80] = f435(60, 60, 0, ΔΔ[713], 3);
    this.ⵠΔⵠ[80].id = 80;
    this.ΔΔᐃ[90] = f435(68, 68, 0, ΔΔ[929], 3);
    this.ΔΔᐃ[90].id = 90;
    this.Ⲇᐃᐃ[90] = f435(60, 60, 0, ΔΔ[927], 3);
    this.Ⲇᐃᐃ[90].id = 90;
    this.ⵠΔⵠ[90] = f435(60, 60, 0, ΔΔ[928], 3);
    this.ⵠΔⵠ[90].id = 90;
    this.ΔΔᐃ[91] = f435(68, 68, 0, ΔΔ[932], 3);
    this.ΔΔᐃ[91].id = 91;
    this.Ⲇᐃᐃ[91] = f435(60, 60, 0, ΔΔ[930], 3);
    this.Ⲇᐃᐃ[91].id = 91;
    this.ⵠΔⵠ[91] = f435(60, 60, 0, ΔΔ[931], 3);
    this.ⵠΔⵠ[91].id = 91;
    this.ΔΔᐃ[92] = f435(68, 68, 0, ΔΔ[935], 3);
    this.ΔΔᐃ[92].id = 92;
    this.Ⲇᐃᐃ[92] = f435(60, 60, 0, ΔΔ[933], 3);
    this.Ⲇᐃᐃ[92].id = 92;
    this.ⵠΔⵠ[92] = f435(60, 60, 0, ΔΔ[934], 3);
    this.ⵠΔⵠ[92].id = 92;
    this.ΔΔᐃ[93] = f435(68, 68, 0, ΔΔ[938], 3);
    this.ΔΔᐃ[93].id = 93;
    this.Ⲇᐃᐃ[93] = f435(60, 60, 0, ΔΔ[936], 3);
    this.Ⲇᐃᐃ[93].id = 93;
    this.ⵠΔⵠ[93] = f435(60, 60, 0, ΔΔ[937], 3);
    this.ⵠΔⵠ[93].id = 93;
    this.ΔΔᐃ[94] = f435(68, 68, 0, ΔΔ[941], 3);
    this.ΔΔᐃ[94].id = 94;
    this.Ⲇᐃᐃ[94] = f435(60, 60, 0, ΔΔ[939], 3);
    this.Ⲇᐃᐃ[94].id = 94;
    this.ⵠΔⵠ[94] = f435(60, 60, 0, ΔΔ[940], 3);
    this.ⵠΔⵠ[94].id = 94;
    this.ΔΔᐃ[95] = f435(68, 68, 0, ΔΔ[944], 3);
    this.ΔΔᐃ[95].id = 95;
    this.Ⲇᐃᐃ[95] = f435(60, 60, 0, ΔΔ[942], 3);
    this.Ⲇᐃᐃ[95].id = 95;
    this.ⵠΔⵠ[95] = f435(60, 60, 0, ΔΔ[943], 3);
    this.ⵠΔⵠ[95].id = 95;
    this.ΔΔᐃ[96] = f435(68, 68, 0, ΔΔ[947], 3);
    this.ΔΔᐃ[96].id = 96;
    this.Ⲇᐃᐃ[96] = f435(60, 60, 0, ΔΔ[945], 3);
    this.Ⲇᐃᐃ[96].id = 96;
    this.ⵠΔⵠ[96] = f435(60, 60, 0, ΔΔ[946], 3);
    this.ⵠΔⵠ[96].id = 96;
    this.ΔΔᐃ[98] = f435(68, 68, 0, ΔΔ[953], 3);
    this.ΔΔᐃ[98].id = 98;
    this.Ⲇᐃᐃ[98] = f435(60, 60, 0, ΔΔ[951], 3);
    this.Ⲇᐃᐃ[98].id = 98;
    this.ⵠΔⵠ[98] = f435(60, 60, 0, ΔΔ[952], 3);
    this.ⵠΔⵠ[98].id = 98;
    this.ΔΔᐃ[97] = f435(68, 68, 0, ΔΔ[950], 3);
    this.ΔΔᐃ[97].id = 97;
    this.Ⲇᐃᐃ[97] = f435(60, 60, 0, ΔΔ[948], 3);
    this.Ⲇᐃᐃ[97].id = 97;
    this.ⵠΔⵠ[97] = f435(60, 60, 0, ΔΔ[949], 3);
    this.ⵠΔⵠ[97].id = 97;
    this.ΔΔᐃ[89] = f435(68, 68, 0, ΔΔ[956], 3);
    this.ΔΔᐃ[89].id = 89;
    this.Ⲇᐃᐃ[89] = f435(60, 60, 0, ΔΔ[954], 3);
    this.Ⲇᐃᐃ[89].id = 89;
    this.ⵠΔⵠ[89] = f435(60, 60, 0, ΔΔ[955], 3);
    this.ⵠΔⵠ[89].id = 89;
    this.ΔΔᐃ[110] = f435(68, 68, 0, ΔΔ[736], 3);
    this.ΔΔᐃ[110].id = 110;
    this.Ⲇᐃᐃ[110] = f435(60, 60, 0, ΔΔ[734], 3);
    this.Ⲇᐃᐃ[110].id = 110;
    this.ⵠΔⵠ[110] = f435(60, 60, 0, ΔΔ[735], 3);
    this.ⵠΔⵠ[110].id = 110;
    this.ΔΔᐃ[111] = f435(68, 68, 0, ΔΔ[739], 3);
    this.ΔΔᐃ[111].id = 111;
    this.Ⲇᐃᐃ[111] = f435(60, 60, 0, ΔΔ[737], 3);
    this.Ⲇᐃᐃ[111].id = 111;
    this.ⵠΔⵠ[111] = f435(60, 60, 0, ΔΔ[738], 3);
    this.ⵠΔⵠ[111].id = 111;
    this.ΔΔᐃ[112] = f435(68, 68, 0, ΔΔ[742], 3);
    this.ΔΔᐃ[112].id = 112;
    this.Ⲇᐃᐃ[112] = f435(60, 60, 0, ΔΔ[740], 3);
    this.Ⲇᐃᐃ[112].id = 112;
    this.ⵠΔⵠ[112] = f435(60, 60, 0, ΔΔ[741], 3);
    this.ⵠΔⵠ[112].id = 112;
    this.ΔΔᐃ[113] = f435(68, 68, 0, ΔΔ[745], 3);
    this.ΔΔᐃ[113].id = 113;
    this.Ⲇᐃᐃ[113] = f435(60, 60, 0, ΔΔ[743], 3);
    this.Ⲇᐃᐃ[113].id = 113;
    this.ⵠΔⵠ[113] = f435(60, 60, 0, ΔΔ[744], 3);
    this.ⵠΔⵠ[113].id = 113;
    this.ΔΔᐃ[114] = f435(68, 68, 0, ΔΔ[748], 3);
    this.ΔΔᐃ[114].id = 114;
    this.Ⲇᐃᐃ[114] = f435(60, 60, 0, ΔΔ[746], 3);
    this.Ⲇᐃᐃ[114].id = 114;
    this.ⵠΔⵠ[114] = f435(60, 60, 0, ΔΔ[747], 3);
    this.ⵠΔⵠ[114].id = 114;
    this.ΔΔᐃ[115] = f435(68, 68, 0, ΔΔ[751], 3);
    this.ΔΔᐃ[115].id = 115;
    this.Ⲇᐃᐃ[115] = f435(60, 60, 0, ΔΔ[749], 3);
    this.Ⲇᐃᐃ[115].id = 115;
    this.ⵠΔⵠ[115] = f435(60, 60, 0, ΔΔ[750], 3);
    this.ⵠΔⵠ[115].id = 115;
    this.ΔΔᐃ[116] = f435(68, 68, 0, ΔΔ[754], 3);
    this.ΔΔᐃ[116].id = 116;
    this.Ⲇᐃᐃ[116] = f435(60, 60, 0, ΔΔ[752], 3);
    this.Ⲇᐃᐃ[116].id = 116;
    this.ⵠΔⵠ[116] = f435(60, 60, 0, ΔΔ[753], 3);
    this.ⵠΔⵠ[116].id = 116;
    this.ΔΔᐃ[118] = f435(68, 68, 0, ΔΔ[760], 3);
    this.ΔΔᐃ[118].id = 118;
    this.Ⲇᐃᐃ[118] = f435(60, 60, 0, ΔΔ[758], 3);
    this.Ⲇᐃᐃ[118].id = 118;
    this.ⵠΔⵠ[118] = f435(60, 60, 0, ΔΔ[759], 3);
    this.ⵠΔⵠ[118].id = 118;
    this.ΔΔᐃ[117] = f435(68, 68, 0, ΔΔ[757], 3);
    this.ΔΔᐃ[117].id = 117;
    this.Ⲇᐃᐃ[117] = f435(60, 60, 0, ΔΔ[755], 3);
    this.Ⲇᐃᐃ[117].id = 117;
    this.ⵠΔⵠ[117] = f435(60, 60, 0, ΔΔ[756], 3);
    this.ⵠΔⵠ[117].id = 117;
    this.ΔΔᐃ[19] = f435(68, 68, 0, ΔΔ[1130], 3);
    this.ΔΔᐃ[19].id = 19;
    this.Ⲇᐃᐃ[19] = f435(60, 60, 0, ΔΔ[1129], 3);
    this.Ⲇᐃᐃ[19].id = 19;
    this.ⵠΔⵠ[19] = f435(60, 60, 0, ΔΔ[1131], 3);
    this.ⵠΔⵠ[19].id = 19;
    this.ΔΔᐃ[20] = f435(68, 68, 0, ΔΔ[1133], 3);
    this.ΔΔᐃ[20].id = 20;
    this.Ⲇᐃᐃ[20] = f435(60, 60, 0, ΔΔ[1132], 3);
    this.Ⲇᐃᐃ[20].id = 20;
    this.ⵠΔⵠ[20] = f435(60, 60, 0, ΔΔ[1134], 3);
    this.ⵠΔⵠ[20].id = 20;
    this.ΔΔᐃ[21] = f435(68, 68, 0, ΔΔ[1136], 3);
    this.ΔΔᐃ[21].id = 21;
    this.Ⲇᐃᐃ[21] = f435(60, 60, 0, ΔΔ[1135], 3);
    this.Ⲇᐃᐃ[21].id = 21;
    this.ⵠΔⵠ[21] = f435(60, 60, 0, ΔΔ[1137], 3);
    this.ⵠΔⵠ[21].id = 21;
    this.ΔΔᐃ[22] = f435(68, 68, 0, ΔΔ[1139], 3);
    this.ΔΔᐃ[22].id = 22;
    this.Ⲇᐃᐃ[22] = f435(60, 60, 0, ΔΔ[1138], 3);
    this.Ⲇᐃᐃ[22].id = 22;
    this.ⵠΔⵠ[22] = f435(60, 60, 0, ΔΔ[1140], 3);
    this.ⵠΔⵠ[22].id = 22;
    this.ΔΔᐃ[23] = f435(68, 68, 0, ΔΔ[1142], 3);
    this.ΔΔᐃ[23].id = 23;
    this.Ⲇᐃᐃ[23] = f435(60, 60, 0, ΔΔ[1141], 3);
    this.Ⲇᐃᐃ[23].id = 23;
    this.ⵠΔⵠ[23] = f435(60, 60, 0, ΔΔ[1143], 3);
    this.ⵠΔⵠ[23].id = 23;
    this.ΔΔᐃ[24] = f435(68, 68, 0, ΔΔ[1145], 3);
    this.ΔΔᐃ[24].id = 24;
    this.Ⲇᐃᐃ[24] = f435(60, 60, 0, ΔΔ[1144], 3);
    this.Ⲇᐃᐃ[24].id = 24;
    this.ⵠΔⵠ[24] = f435(60, 60, 0, ΔΔ[1146], 3);
    this.ⵠΔⵠ[24].id = 24;
    this.ΔΔᐃ[25] = f435(68, 68, 0, ΔΔ[1148], 3);
    this.ΔΔᐃ[25].id = 25;
    this.Ⲇᐃᐃ[25] = f435(60, 60, 0, ΔΔ[1147], 3);
    this.Ⲇᐃᐃ[25].id = 25;
    this.ⵠΔⵠ[25] = f435(60, 60, 0, ΔΔ[1149], 3);
    this.ⵠΔⵠ[25].id = 25;
    this.ΔΔᐃ[27] = f435(68, 68, 0, ΔΔ[1154], 3);
    this.ΔΔᐃ[27].id = 27;
    this.Ⲇᐃᐃ[27] = f435(60, 60, 0, ΔΔ[1153], 3);
    this.Ⲇᐃᐃ[27].id = 27;
    this.ⵠΔⵠ[27] = f435(60, 60, 0, ΔΔ[1155], 3);
    this.ⵠΔⵠ[27].id = 27;
    this.ΔΔᐃ[26] = f435(68, 68, 0, ΔΔ[1151], 3);
    this.ΔΔᐃ[26].id = 26;
    this.Ⲇᐃᐃ[26] = f435(60, 60, 0, ΔΔ[1150], 3);
    this.Ⲇᐃᐃ[26].id = 26;
    this.ⵠΔⵠ[26] = f435(60, 60, 0, ΔΔ[1152], 3);
    this.ⵠΔⵠ[26].id = 26;
    this.ΔΔᐃ[126] = f435(68, 68, 0, ΔΔ[784], 3);
    this.ΔΔᐃ[126].id = 126;
    this.Ⲇᐃᐃ[126] = f435(60, 60, 0, ΔΔ[782], 3);
    this.Ⲇᐃᐃ[126].id = 126;
    this.ⵠΔⵠ[126] = f435(60, 60, 0, ΔΔ[783], 3);
    this.ⵠΔⵠ[126].id = 126;
    this.ΔΔᐃ[127] = f435(68, 68, 0, ΔΔ[787], 3);
    this.ΔΔᐃ[127].id = 127;
    this.Ⲇᐃᐃ[127] = f435(60, 60, 0, ΔΔ[785], 3);
    this.Ⲇᐃᐃ[127].id = 127;
    this.ⵠΔⵠ[127] = f435(60, 60, 0, ΔΔ[786], 3);
    this.ⵠΔⵠ[127].id = 127;
    this.ΔΔᐃ[128] = f435(68, 68, 0, ΔΔ[790], 3);
    this.ΔΔᐃ[128].id = 128;
    this.Ⲇᐃᐃ[128] = f435(60, 60, 0, ΔΔ[788], 3);
    this.Ⲇᐃᐃ[128].id = 128;
    this.ⵠΔⵠ[128] = f435(60, 60, 0, ΔΔ[789], 3);
    this.ⵠΔⵠ[128].id = 128;
    this.ΔΔᐃ[129] = f435(68, 68, 0, ΔΔ[793], 3);
    this.ΔΔᐃ[129].id = 129;
    this.Ⲇᐃᐃ[129] = f435(60, 60, 0, ΔΔ[791], 3);
    this.Ⲇᐃᐃ[129].id = 129;
    this.ⵠΔⵠ[129] = f435(60, 60, 0, ΔΔ[792], 3);
    this.ⵠΔⵠ[129].id = 129;
    this.ΔΔᐃ[130] = f435(68, 68, 0, ΔΔ[796], 3);
    this.ΔΔᐃ[130].id = 130;
    this.Ⲇᐃᐃ[130] = f435(60, 60, 0, ΔΔ[794], 3);
    this.Ⲇᐃᐃ[130].id = 130;
    this.ⵠΔⵠ[130] = f435(60, 60, 0, ΔΔ[795], 3);
    this.ⵠΔⵠ[130].id = 130;
    this.ΔΔᐃ[131] = f435(68, 68, 0, ΔΔ[799], 3);
    this.ΔΔᐃ[131].id = 131;
    this.Ⲇᐃᐃ[131] = f435(60, 60, 0, ΔΔ[797], 3);
    this.Ⲇᐃᐃ[131].id = 131;
    this.ⵠΔⵠ[131] = f435(60, 60, 0, ΔΔ[798], 3);
    this.ⵠΔⵠ[131].id = 131;
    this.ΔΔᐃ[132] = f435(68, 68, 0, ΔΔ[802], 3);
    this.ΔΔᐃ[132].id = 132;
    this.Ⲇᐃᐃ[132] = f435(60, 60, 0, ΔΔ[800], 3);
    this.Ⲇᐃᐃ[132].id = 132;
    this.ⵠΔⵠ[132] = f435(60, 60, 0, ΔΔ[801], 3);
    this.ⵠΔⵠ[132].id = 132;
    this.ΔΔᐃ[134] = f435(68, 68, 0, ΔΔ[808], 3);
    this.ΔΔᐃ[134].id = 134;
    this.Ⲇᐃᐃ[134] = f435(60, 60, 0, ΔΔ[806], 3);
    this.Ⲇᐃᐃ[134].id = 134;
    this.ⵠΔⵠ[134] = f435(60, 60, 0, ΔΔ[807], 3);
    this.ⵠΔⵠ[134].id = 134;
    this.ΔΔᐃ[133] = f435(68, 68, 0, ΔΔ[805], 3);
    this.ΔΔᐃ[133].id = 133;
    this.Ⲇᐃᐃ[133] = f435(60, 60, 0, ΔΔ[803], 3);
    this.Ⲇᐃᐃ[133].id = 133;
    this.ⵠΔⵠ[133] = f435(60, 60, 0, ΔΔ[804], 3);
    this.ⵠΔⵠ[133].id = 133;
    this.ΔΔᐃ[190] = f435(68, 68, 0, ΔΔ[1516], 3);
    this.ΔΔᐃ[190].id = 190;
    this.Ⲇᐃᐃ[190] = f435(60, 60, 0, ΔΔ[1515], 3);
    this.Ⲇᐃᐃ[190].id = 190;
    this.ⵠΔⵠ[190] = f435(60, 60, 0, ΔΔ[1517], 3);
    this.ⵠΔⵠ[190].id = 190;
    this.ΔΔᐃ[191] = f435(68, 68, 0, ΔΔ[1519], 3);
    this.ΔΔᐃ[191].id = 191;
    this.Ⲇᐃᐃ[191] = f435(60, 60, 0, ΔΔ[1518], 3);
    this.Ⲇᐃᐃ[191].id = 191;
    this.ⵠΔⵠ[191] = f435(60, 60, 0, ΔΔ[1520], 3);
    this.ⵠΔⵠ[191].id = 191;
    this.ΔΔᐃ[192] = f435(68, 68, 0, ΔΔ[1522], 3);
    this.ΔΔᐃ[192].id = 192;
    this.Ⲇᐃᐃ[192] = f435(60, 60, 0, ΔΔ[1521], 3);
    this.Ⲇᐃᐃ[192].id = 192;
    this.ⵠΔⵠ[192] = f435(60, 60, 0, ΔΔ[1523], 3);
    this.ⵠΔⵠ[192].id = 192;
    this.ΔΔᐃ[193] = f435(68, 68, 0, ΔΔ[1525], 3);
    this.ΔΔᐃ[193].id = 193;
    this.Ⲇᐃᐃ[193] = f435(60, 60, 0, ΔΔ[1524], 3);
    this.Ⲇᐃᐃ[193].id = 193;
    this.ⵠΔⵠ[193] = f435(60, 60, 0, ΔΔ[1526], 3);
    this.ⵠΔⵠ[193].id = 193;
    this.ΔΔᐃ[194] = f435(68, 68, 0, ΔΔ[1528], 3);
    this.ΔΔᐃ[194].id = 194;
    this.Ⲇᐃᐃ[194] = f435(60, 60, 0, ΔΔ[1527], 3);
    this.Ⲇᐃᐃ[194].id = 194;
    this.ⵠΔⵠ[194] = f435(60, 60, 0, ΔΔ[1529], 3);
    this.ⵠΔⵠ[194].id = 194;
    this.ΔΔᐃ[195] = f435(68, 68, 0, ΔΔ[1531], 3);
    this.ΔΔᐃ[195].id = 195;
    this.Ⲇᐃᐃ[195] = f435(60, 60, 0, ΔΔ[1530], 3);
    this.Ⲇᐃᐃ[195].id = 195;
    this.ⵠΔⵠ[195] = f435(60, 60, 0, ΔΔ[1532], 3);
    this.ⵠΔⵠ[195].id = 195;
    this.ΔΔᐃ[196] = f435(68, 68, 0, ΔΔ[1534], 3);
    this.ΔΔᐃ[196].id = 196;
    this.Ⲇᐃᐃ[196] = f435(60, 60, 0, ΔΔ[1533], 3);
    this.Ⲇᐃᐃ[196].id = 196;
    this.ⵠΔⵠ[196] = f435(60, 60, 0, ΔΔ[1535], 3);
    this.ⵠΔⵠ[196].id = 196;
    this.ΔΔᐃ[198] = f435(68, 68, 0, ΔΔ[1540], 3);
    this.ΔΔᐃ[198].id = 198;
    this.Ⲇᐃᐃ[198] = f435(60, 60, 0, ΔΔ[1539], 3);
    this.Ⲇᐃᐃ[198].id = 198;
    this.ⵠΔⵠ[198] = f435(60, 60, 0, ΔΔ[1541], 3);
    this.ⵠΔⵠ[198].id = 198;
    this.ΔΔᐃ[197] = f435(68, 68, 0, ΔΔ[1537], 3);
    this.ΔΔᐃ[197].id = 197;
    this.Ⲇᐃᐃ[197] = f435(60, 60, 0, ΔΔ[1536], 3);
    this.Ⲇᐃᐃ[197].id = 197;
    this.ⵠΔⵠ[197] = f435(60, 60, 0, ΔΔ[1538], 3);
    this.ⵠΔⵠ[197].id = 197;
    this.ΔΔᐃ[141] = f435(68, 68, 0, ΔΔ[1649], 3);
    this.ΔΔᐃ[141].id = 141;
    this.Ⲇᐃᐃ[141] = f435(60, 60, 0, ΔΔ[1648], 3);
    this.Ⲇᐃᐃ[141].id = 141;
    this.ⵠΔⵠ[141] = f435(60, 60, 0, ΔΔ[1647], 3);
    this.ⵠΔⵠ[141].id = 141;
    this.ΔΔᐃ[142] = f435(68, 68, 0, ΔΔ[1652], 3);
    this.ΔΔᐃ[142].id = 142;
    this.Ⲇᐃᐃ[142] = f435(60, 60, 0, ΔΔ[1651], 3);
    this.Ⲇᐃᐃ[142].id = 142;
    this.ⵠΔⵠ[142] = f435(60, 60, 0, ΔΔ[1650], 3);
    this.ⵠΔⵠ[142].id = 142;
    this.ΔΔᐃ[143] = f435(68, 68, 0, ΔΔ[1655], 3);
    this.ΔΔᐃ[143].id = 143;
    this.Ⲇᐃᐃ[143] = f435(60, 60, 0, ΔΔ[1654], 3);
    this.Ⲇᐃᐃ[143].id = 143;
    this.ⵠΔⵠ[143] = f435(60, 60, 0, ΔΔ[1653], 3);
    this.ⵠΔⵠ[143].id = 143;
    this.ΔΔᐃ[144] = f435(68, 68, 0, ΔΔ[1658], 3);
    this.ΔΔᐃ[144].id = 144;
    this.Ⲇᐃᐃ[144] = f435(60, 60, 0, ΔΔ[1657], 3);
    this.Ⲇᐃᐃ[144].id = 144;
    this.ⵠΔⵠ[144] = f435(60, 60, 0, ΔΔ[1656], 3);
    this.ⵠΔⵠ[144].id = 144;
    this.ΔΔᐃ[145] = f435(68, 68, 0, ΔΔ[1661], 3);
    this.ΔΔᐃ[145].id = 145;
    this.Ⲇᐃᐃ[145] = f435(60, 60, 0, ΔΔ[1660], 3);
    this.Ⲇᐃᐃ[145].id = 145;
    this.ⵠΔⵠ[145] = f435(60, 60, 0, ΔΔ[1659], 3);
    this.ⵠΔⵠ[145].id = 145;
    this.ΔΔᐃ[146] = f435(68, 68, 0, ΔΔ[1664], 3);
    this.ΔΔᐃ[146].id = 146;
    this.Ⲇᐃᐃ[146] = f435(60, 60, 0, ΔΔ[1663], 3);
    this.Ⲇᐃᐃ[146].id = 146;
    this.ⵠΔⵠ[146] = f435(60, 60, 0, ΔΔ[1662], 3);
    this.ⵠΔⵠ[146].id = 146;
    this.ΔΔᐃ[147] = f435(68, 68, 0, ΔΔ[1667], 3);
    this.ΔΔᐃ[147].id = 147;
    this.Ⲇᐃᐃ[147] = f435(60, 60, 0, ΔΔ[1666], 3);
    this.Ⲇᐃᐃ[147].id = 147;
    this.ⵠΔⵠ[147] = f435(60, 60, 0, ΔΔ[1665], 3);
    this.ⵠΔⵠ[147].id = 147;
    this.ΔΔᐃ[148] = f435(68, 68, 0, ΔΔ[1670], 3);
    this.ΔΔᐃ[148].id = 148;
    this.Ⲇᐃᐃ[148] = f435(60, 60, 0, ΔΔ[1669], 3);
    this.Ⲇᐃᐃ[148].id = 148;
    this.ⵠΔⵠ[148] = f435(60, 60, 0, ΔΔ[1668], 3);
    this.ⵠΔⵠ[148].id = 148;
    this.ΔΔᐃ[149] = f435(68, 68, 0, ΔΔ[1673], 3);
    this.ΔΔᐃ[149].id = 149;
    this.Ⲇᐃᐃ[149] = f435(60, 60, 0, ΔΔ[1672], 3);
    this.Ⲇᐃᐃ[149].id = 149;
    this.ⵠΔⵠ[149] = f435(60, 60, 0, ΔΔ[1671], 3);
    this.ⵠΔⵠ[149].id = 149;
    this.ΔΔᐃ[173] = f435(68, 68, 0, ΔΔ[1694], 3);
    this.ΔΔᐃ[173].id = 173;
    this.Ⲇᐃᐃ[173] = f435(60, 60, 0, ΔΔ[1693], 3);
    this.Ⲇᐃᐃ[173].id = 173;
    this.ⵠΔⵠ[173] = f435(60, 60, 0, ΔΔ[1692], 3);
    this.ⵠΔⵠ[173].id = 173;
    this.ΔΔᐃ[174] = f435(68, 68, 0, ΔΔ[1697], 3);
    this.ΔΔᐃ[174].id = 174;
    this.Ⲇᐃᐃ[174] = f435(60, 60, 0, ΔΔ[1696], 3);
    this.Ⲇᐃᐃ[174].id = 174;
    this.ⵠΔⵠ[174] = f435(60, 60, 0, ΔΔ[1695], 3);
    this.ⵠΔⵠ[174].id = 174;
    this.ΔΔᐃ[175] = f435(68, 68, 0, ΔΔ[1700], 3);
    this.ΔΔᐃ[175].id = 175;
    this.Ⲇᐃᐃ[175] = f435(60, 60, 0, ΔΔ[1699], 3);
    this.Ⲇᐃᐃ[175].id = 175;
    this.ⵠΔⵠ[175] = f435(60, 60, 0, ΔΔ[1698], 3);
    this.ⵠΔⵠ[175].id = 175;
    this.ΔΔᐃ[176] = f435(68, 68, 0, ΔΔ[1703], 3);
    this.ΔΔᐃ[176].id = 176;
    this.Ⲇᐃᐃ[176] = f435(60, 60, 0, ΔΔ[1702], 3);
    this.Ⲇᐃᐃ[176].id = 176;
    this.ⵠΔⵠ[176] = f435(60, 60, 0, ΔΔ[1701], 3);
    this.ⵠΔⵠ[176].id = 176;
    this.ΔΔᐃ[177] = f435(68, 68, 0, ΔΔ[1706], 3);
    this.ΔΔᐃ[177].id = 177;
    this.Ⲇᐃᐃ[177] = f435(60, 60, 0, ΔΔ[1705], 3);
    this.Ⲇᐃᐃ[177].id = 177;
    this.ⵠΔⵠ[177] = f435(60, 60, 0, ΔΔ[1704], 3);
    this.ⵠΔⵠ[177].id = 177;
    this.ΔΔᐃ[178] = f435(68, 68, 0, ΔΔ[1709], 3);
    this.ΔΔᐃ[178].id = 178;
    this.Ⲇᐃᐃ[178] = f435(60, 60, 0, ΔΔ[1708], 3);
    this.Ⲇᐃᐃ[178].id = 178;
    this.ⵠΔⵠ[178] = f435(60, 60, 0, ΔΔ[1707], 3);
    this.ⵠΔⵠ[178].id = 178;
    this.ΔΔᐃ[179] = f435(68, 68, 0, ΔΔ[1712], 3);
    this.ΔΔᐃ[179].id = 179;
    this.Ⲇᐃᐃ[179] = f435(60, 60, 0, ΔΔ[1711], 3);
    this.Ⲇᐃᐃ[179].id = 179;
    this.ⵠΔⵠ[179] = f435(60, 60, 0, ΔΔ[1710], 3);
    this.ⵠΔⵠ[179].id = 179;
    this.ΔΔᐃ[180] = f435(68, 68, 0, ΔΔ[1715], 3);
    this.ΔΔᐃ[180].id = 180;
    this.Ⲇᐃᐃ[180] = f435(60, 60, 0, ΔΔ[1714], 3);
    this.Ⲇᐃᐃ[180].id = 180;
    this.ⵠΔⵠ[180] = f435(60, 60, 0, ΔΔ[1713], 3);
    this.ⵠΔⵠ[180].id = 180;
    this.ΔΔᐃ[181] = f435(68, 68, 0, ΔΔ[1718], 3);
    this.ΔΔᐃ[181].id = 181;
    this.Ⲇᐃᐃ[181] = f435(60, 60, 0, ΔΔ[1717], 3);
    this.Ⲇᐃᐃ[181].id = 181;
    this.ⵠΔⵠ[181] = f435(60, 60, 0, ΔΔ[1716], 3);
    this.ⵠΔⵠ[181].id = 181;
    this.ΔΔⵠⵠⵠⲆᐃ = function () {
      for (var v2779 = v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ, v2780 = 10, v2781 = 10, v2782 = 0; v2782 < v2779.length; v2782++) {
        if (v2782 > 0 && !(v2782 % 4)) {
          v2780 += v2779[0].info.width + 10;
          v2781 = 10;
        }
        v2779[v2782].info.translate.x = v2780;
        v2779[v2782].info.translate.y = v2781;
        v2781 += 10 + v2779[v2782].info.height;
      }
    };
    this.ᐃΔⲆⲆⵠⲆⲆ = function () {
      var v2783 = Math.floor(Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) * (10 + this.ΔΔᐃ[0].info.Δᐃ[0].width) + 35);
      for (var v2784 = 0; this.ΔΔᐃ.length > v2784; v2784++) {
        if (this.ΔΔᐃ[v2784]) {
          this.ΔΔᐃ[v2784].info.translate.x = v2783;
          this.ΔΔᐃ[v2784].info.translate.y = 22;
        }
      }
      this.ⲆΔⵠⵠΔⲆⵠ.info.translate.x = v2783 + 17;
      this.ⲆΔⵠⵠΔⲆⵠ.info.translate.y = 22 + ΔΔ[450].height;
      this.ᐃΔᐃᐃᐃⵠⲆ.info.translate.x = v2783 + 17;
      this.ᐃΔᐃᐃᐃⵠⲆ.info.translate.y = 30;
      this.Ⲇⵠⵠᐃᐃᐃⵠ.info.translate.x = v2783 + 17;
      this.Ⲇⵠⵠᐃᐃᐃⵠ.info.translate.y = 22 + ΔΔ[450].height;
    };
    this.ΔⲆⲆᐃⲆᐃᐃⵠΔ = function () {
      var v2785 = Math.floor((v420 - ΔΔ[721][0].width) / 2);
      for (var v2786 = 0; this.ⵠⲆⲆᐃⲆ.length > v2786; v2786++) {
        this.ⵠⲆⲆᐃⲆ[v2786].button.info.translate.x = v2785;
        this.ⵠⲆⲆᐃⲆ[v2786].button.info.translate.y = -13;
      }
    };
    this.ⵠΔᐃⵠᐃᐃᐃ = function () {
      var v2787 = 12 + Math.floor(Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) * (10 + this.ᐃΔᐃΔΔⵠΔ.info.Δᐃ[0].width) + 35);
      this.ᐃΔᐃΔΔⵠΔ.info.translate.x = v2787;
      this.ᐃΔᐃΔΔⵠΔ.info.translate.y = 33;
      this.ⵠᐃΔΔᐃΔΔ.info.translate.x = this.ᐃΔᐃΔΔⵠΔ.info.translate.x;
      this.ⵠᐃΔΔᐃΔΔ.info.translate.y = 137;
      this.ᐃΔⲆⵠᐃΔⵠ.info.translate.x = this.ᐃΔᐃΔΔⵠΔ.info.translate.x;
      this.ᐃΔⲆⵠᐃΔⵠ.info.translate.y = 240;
    };
    this.ⵠⲆΔⵠΔΔⵠ = function () {
      var v2788 = 12 + Math.floor(Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) * (10 + this.ⲆᐃⵠΔⵠⵠΔ.info.Δᐃ[0].width) + 35);
      this.ⲆᐃⵠΔⵠⵠΔ.info.translate.x = v2788;
      this.ⲆᐃⵠΔⵠⵠΔ.info.translate.y = 36;
      v2788 += 83;
      this.ⵠᐃᐃⵠΔᐃΔ.info.translate.x = v2788;
      this.ⵠᐃᐃⵠΔᐃΔ.info.translate.y = 36;
      this.ⲆᐃⲆⵠᐃⵠΔ.info.translate.x = v2788;
      this.ⲆᐃⲆⵠᐃⵠΔ.info.translate.y = 36;
      this.ΔⲆᐃⲆᐃᐃⵠ.info.translate.x = v2788;
      this.ΔⲆᐃⲆᐃᐃⵠ.info.translate.y = 36;
      this.ᐃᐃΔⲆⲆⲆⵠ.info.translate.x = v2788;
      this.ᐃᐃΔⲆⲆⲆⵠ.info.translate.y = 36;
      this.ⲆⵠⲆⵠΔᐃⵠ.info.translate.x = v2788;
      this.ⲆⵠⲆⵠΔᐃⵠ.info.translate.y = 36;
      this.ⵠⲆⵠΔΔⵠᐃ.info.translate.x = v2788;
      this.ⵠⲆⵠΔΔⵠᐃ.info.translate.y = 36;
      this.ΔⵠΔⲆⲆⲆΔ.info.translate.x = v2788;
      this.ΔⵠΔⲆⲆⲆΔ.info.translate.y = 36;
      this.ⵠⵠᐃΔⵠⵠΔ.info.translate.x = v2788;
      this.ⵠⵠᐃΔⵠⵠΔ.info.translate.y = 36;
      this.ⲆⲆᐃⵠΔⵠⵠ.info.translate.x = v2788;
      this.ⲆⲆᐃⵠΔⵠⵠ.info.translate.y = 36;
      this.ⵠᐃⵠᐃᐃⲆᐃ.info.translate.x = v2788;
      this.ⵠᐃⵠᐃᐃⲆᐃ.info.translate.y = 36;
      this.ΔⵠⵠΔⵠΔⲆ.info.translate.x = v2788;
      this.ΔⵠⵠΔⵠΔⲆ.info.translate.y = 36;
      this.ⵠΔΔΔⲆΔΔ.info.translate.x = v2788;
      this.ⵠΔΔΔⲆΔΔ.info.translate.y = 36;
      this.ΔⵠᐃⵠⵠᐃΔ.info.translate.x = v2788;
      this.ΔⵠᐃⵠⵠᐃΔ.info.translate.y = 36;
      this.ⵠΔⲆΔΔΔΔ.info.translate.x = v2788;
      this.ⵠΔⲆΔΔΔΔ.info.translate.y = 36;
    };
    this.ᐃᐃᐃᐃΔΔΔ = function () {
      var v2789 = 12 + Math.floor((10 + this.ΔⲆΔⲆⵠⵠⲆ.info.Δᐃ[0].width) * Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) + 35);
      this.ΔⲆΔⲆⵠⵠⲆ.info.translate.x = v2789;
      this.ΔⲆΔⲆⵠⵠⲆ.info.translate.y = 36;
      v2789 += 83;
      this.ⲆᐃⵠΔΔⵠⲆ.info.translate.x = v2789;
      this.ⲆᐃⵠΔΔⵠⲆ.info.translate.y = 36;
    };
    this.ⵠⵠᐃⲆᐃⲆΔ = function () {
      var v2790 = Math.floor(Math.floor((3 + v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ.length) / 4) * (10 + this.ⲆᐃⵠᐃⵠⲆⵠ.info.Δᐃ[0].width) + 35);
      this.ⲆᐃⵠᐃⵠⲆⵠ.info.translate.x = v2790;
      this.ⲆᐃⵠᐃⵠⲆⵠ.info.translate.y = 22;
    };
    this.ΔᐃΔⵠᐃⲆⵠ = function () {
      var v2791 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ;
      if (v2791.length > 0) {
        var v2792 = Math.floor((v420 - v2885.ΔⵠⵠⲆ.max * (v2791[0].info.width + 5)) / 2);
      }
      for (var v2793 = 0; v2793 < v2791.length; v2793++) {
        v2791[v2793].info.translate.x = v2792 + v2793 * (v2791[v2793].info.width + 5);
        v2791[v2793].info.translate.y = v421 - v2791[v2793].info.width - 10;
        this.ΔⵠᐃΔⵠ[v2791[v2793].id].info.translate.x = v2791[v2793].info.translate.x + 13;
        this.ΔⵠᐃΔⵠ[v2791[v2793].id].info.translate.y = v2791[v2793].info.translate.y - this.ΔⵠᐃΔⵠ[v2791[v2793].id].info.Δᐃ[0].height - 6;
      }
    };
    var v2794;
    var v2795 = 0;
    function f502() {
      vThis3.ᐃⲆⲆ();
      if (++v2795 == 30) {
        vThis3.ⵠΔᐃΔᐃᐃⵠ();
        vThis3.ᐃⲆⲆ();
        return;
      }
      vWindow.setTimeout(f502, 33);
    }
    this.ⵠΔⵠᐃΔ = function (p1714) {
      if (v2885.ΔΔᐃᐃᐃ.open) {
        v2885.ΔΔᐃᐃᐃ.ⵠΔⵠᐃΔ();
      }
      if (v2885.Ⲇⵠⵠⵠⵠ.open) {
        v2885.Ⲇⵠⵠⵠⵠ.ⵠΔⵠᐃΔ();
      }
      document.getElementById("team_box").style.display = "none";
      vThis3.ᐃΔⵠⵠⲆ.style.display = "none";
      vThis3.ᐃΔⵠⵠⲆ.open = vV312;
      vThis3.sign.style.display = "none";
      vThis3.sign.open = vVV313;
      document.getElementById("shop_starterkit").style.display = "none";
      document.getElementById("home_craft").style.display = "none";
      document.getElementById("recipe_craft").style.display = "none";
      vThis3.ⵠΔᐃΔΔ.open = vV316;
      document.getElementById("option_in_game").style.display = "none";
      vThis3.options.open = vVV314;
      document.getElementById("sure_delete").style.display = "none";
      vThis3.ⵠᐃΔᐃ.open = false;
      document.getElementById("cancel_sure_delete").style.display = "none";
      vThis3.ⵠᐃᐃⲆΔ.open = false;
      document.getElementById("chronoquest").style.display = "none";
      vThis3.ΔΔᐃᐃ.open = v31;
      v2794 = p1714;
      vThis3.ᐃΔΔⵠⵠᐃᐃ();
      vThis3.ΔΔⵠ.style.cursor = vThis3.ᐃⲆΔΔⲆᐃⲆ;
      v3082.ⵠΔⵠᐃΔ();
      v2796 = -1;
      f503();
      f527();
    };
    var v2796 = -1;
    function f503() {
      vThis3.ᐃⲆⲆ();
      if (++v2796 == 30) {
        vThis3.stop();
        v2794();
        return;
      }
      vWindow.setTimeout(f503, 33);
    }
    this.ⲆΔᐃⵠⵠ = vVV3153;
    this.stop = function () {
      this.ⲆΔᐃⵠⵠ = false;
    };
    this.ⲆΔⲆΔⲆ = function () {
      v2887.ΔⵠⵠⵠⲆΔΔⲆⵠ();
      vThis3.ⲆΔᐃⵠⵠ = true;
      v2796 = -1;
      v2795 = 0;
      f502();
    };
    this.ᐃⲆⲆ = function () {
      this.ⲆⲆⲆⲆⲆ.translate.x = v420 - this.ⲆⲆⲆⲆⲆ.Δᐃ.width - 10;
      this.ⲆⲆⲆⲆⲆ.translate.y = 5;
      v2884.ᐃᐃᐃᐃΔ.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[974][0].width - 85;
      v2884.ᐃᐃᐃᐃΔ.translate.y = 10;
      this.ⵠΔᐃΔΔ.button.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[957][0].width - 10;
      this.ⵠΔᐃΔΔ.button.info.translate.y = 10;
      this.ΔΔᐃᐃ.button.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[1004][0].width - 20;
      this.ΔΔᐃᐃ.button.info.translate.y = this.ⵠΔᐃΔΔ.button.info.translate.y + ΔΔ[957][0].height + 5;
      this.options.button.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[976][0].width - 20;
      this.options.button.info.translate.y = this.ΔΔᐃᐃ.button.info.translate.y + ΔΔ[976][0].height + 18;
      this.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[976][0].width - 20;
      this.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.info.translate.y = this.options.button.info.translate.y + ΔΔ[1032][0].height;
      this.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[976][0].width - 20;
      this.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.info.translate.y = this.options.button.info.translate.y + ΔΔ[1032][0].height;
      this.ᐃΔⵠⵠⲆ.button.info.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[1044][0].width - 20;
      this.ᐃΔⵠⵠⲆ.button.info.translate.y = this.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.info.translate.y + ΔΔ[1044][0].height;
      v2885.ᐃᐃⲆᐃⲆ.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - 63 - 85;
      v2885.ᐃᐃⲆᐃⲆ.translate.y = 100;
      v2885.ΔᐃᐃΔⵠΔᐃ.translate.x = this.ⲆⲆⲆⲆⲆ.translate.x - ΔΔ[655].width - 85;
      v2885.ΔᐃᐃΔⵠΔᐃ.translate.y = v2885.ᐃᐃⲆᐃⲆ.translate.y + 10 + ΔΔ[684].height;
      this.ⲆⵠΔΔΔ.translate.y = v421 - 3 - 193;
      this.ⲆⵠΔΔΔ.translate.x = v420 - 3 - 193;
      this.ᐃⲆⵠΔ.translate.x = 5;
      this.ᐃⲆⵠΔ.translate.y = v421 - this.ᐃⲆⵠΔ.Δᐃ.height - 5;
      this.ⵠⵠⲆᐃΔ.button.info.translate.x = v424 - 91 / 2;
      this.ⵠⵠⲆᐃΔ.button.info.translate.y = 50;
      this.ΔΔⵠⵠⵠⲆᐃ();
      this.ΔᐃΔⵠᐃⲆⵠ();
      this.ᐃΔⲆⲆⵠⲆⲆ();
      this.ⵠⵠᐃⲆᐃⲆΔ();
      this.ᐃᐃᐃᐃΔΔΔ();
      this.ⵠⲆΔⵠΔΔⵠ();
      this.ⵠΔᐃⵠᐃᐃᐃ();
      this.ΔⲆⲆᐃⲆᐃᐃⵠΔ();
      this.sign.ᐃⵠΔⲆᐃⵠᐃ();
      f297();
      v2885.ΔΔᐃᐃᐃ.ᐃⲆⲆ();
      v2885.Ⲇⵠⵠⵠⵠ.ᐃⲆⲆ();
      this.ΔⵠΔᐃΔᐃⵠᐃΔ.ᐃⲆⲆ();
      this.ⵠΔᐃΔΔ.ⲆΔⲆⲆᐃⲆⵠ.ᐃⲆⲆ();
      this.ⵠΔᐃΔΔ.list.ᐃⲆⲆ();
      this.ⵠᐃΔᐃ.ᐃⲆⲆ();
      this.ⵠᐃᐃⲆΔ.ᐃⲆⲆ();
      this.ΔΔᐃᐃ.ᐃⲆⲆ();
      this.ⵠⵠⲆᐃΔ.ᐃⲆⲆ();
      this.options.ᐃⲆⲆ();
      this.ᐃΔⵠⵠⲆ.ᐃⲆⲆ();
      this.sign.ᐃⲆⲆ();
      var v2797 = 0;
      if (v2795 != 30) {
        v2797 = 1500 / (v2795 + 1) - 50;
      }
      if (v2796 != -1) {
        v2797 = -(1500 / (30 - v2796 + 1) - 48);
      }
      this.ⵠⵠⲆᐃΔ.button.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ⲆⲆⲆⲆⲆ.translate.y -= v2797 > 0 ? v2797 : -v2797;
      v2885.ᐃᐃⲆᐃⲆ.translate.y -= v2797 > 0 ? v2797 : -v2797;
      v2885.ΔᐃᐃΔⵠΔᐃ.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ⵠΔᐃΔΔ.button.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ΔΔᐃᐃ.button.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.options.button.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ᐃΔⵠⵠⲆ.button.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.info.translate.y -= v2797 > 0 ? v2797 : -v2797;
      v2884.ᐃᐃᐃᐃΔ.translate.y -= v2797 > 0 ? v2797 : -v2797;
      this.ᐃⲆⵠΔ.translate.y -= v2797 < 0 ? v2797 : -v2797;
      this.ⲆⵠΔΔΔ.translate.y -= v2797 < 0 ? v2797 : -v2797;
    };
    this.ⵠⵠⲆⲆΔⲆⵠ = function () {
      if (!v2885.ⵠⲆᐃⲆΔ.enabled && !!this.ᐃⵠⵠᐃΔⲆⲆ && !v2885.ᐃΔⵠᐃⵠ) {
        f329();
      }
      f316();
      (function () {
        var v2798 = v2884.ᐃᐃΔ[0];
        if (v2884.mode === 0 || v2884.mode === 7 || v2884.mode === 2 || v2884.mode === 4 || v2884.mode === 5 || v2884.mode === 6 || v2884.mode === 3) {
          for (var v2799 = 0; v2798.length > v2799; v2799++) {
            v2798[v2799].ⵠᐃᐃⵠⲆⵠⲆ();
          }
        } else if (v2884.mode === 1) {
          for (v2799 = 0; v2799 < v2798.length; v2799++) {
            if (v2885.ⲆⵠΔⵠᐃⲆΔ || v2885.ΔᐃᐃΔⵠΔᐃ.enabled || v2798[v2799].ⲆⲆⵠᐃ.ΔΔΔⲆⲆ !== "spectator") {
              v2798[v2799].ⵠᐃᐃⵠⲆⵠⲆ();
            }
          }
        }
      })();
      vF25.ΔᐃΔⲆⵠᐃⵠ();
      if (this.ᐃⵠⵠᐃΔⲆⲆ) {
        f303();
        if (this.ᐃᐃⵠᐃΔⲆⵠ === 1) {
          this.ⵠΔᐃΔΔ.button.ᐃᐃΔⵠ(p1694);
        }
        if (v2884.mode !== 2 && v2884.mode !== 5 && this.ᐃΔΔᐃⵠΔⲆ === 1) {
          this.ΔΔᐃᐃ.button.ᐃᐃΔⵠ(p1694);
        }
        this.options.button.ᐃᐃΔⵠ(p1694);
        if (this.ⵠⲆⵠⵠᐃⵠᐃ === 1) {
          this.ᐃΔⵠⵠⲆ.button.ᐃᐃΔⵠ(p1694);
        }
        if (v3082.ⲆΔⲆΔⲆ) {
          this.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.ᐃᐃΔⵠ(p1694);
        } else {
          this.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.ᐃᐃΔⵠ(p1694);
        }
        f326();
        f320();
        this.ᐃⲆⵠΔ.ᐃᐃΔⵠ();
        f314();
        f313();
        f323();
        f312();
        f321();
        f307();
        f306();
        (function () {
          if (!v2885.ᐃⵠᐃΔ.open && !v2885.ΔⲆⵠᐃᐃ.open && !v2885.ΔⵠⲆⵠ.open && !v2885.ᐃᐃᐃⵠ.open && !v2885.ΔⵠⵠΔ.open) {
            v2885.ΔⲆᐃⵠᐃ.open = false;
            var v2800 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
            var v2801 = 100;
            if (v2800) {
              for (var v2802 = 0; v2884.ᐃᐃΔ[44].length > v2802; v2802++) {
                var v2803 = v2884.ᐃᐃΔ[44][v2802];
                var v2804 = ⵠⲆⲆ.ᐃⵠᐃⲆ(v2803, v2800);
                if (v2801 > v2804) {
                  v2801 = v2804;
                  v2885.ΔⲆᐃⵠᐃ.open = true;
                  v2885.ΔⲆᐃⵠᐃ.ᐃΔⲆⵠ = v2803.ᐃΔⲆⵠ;
                  v2885.ΔⲆᐃⵠᐃ.ᐃᐃᐃⵠⵠ = v2803.id;
                }
              }
            }
          }
        })();
        f300();
        f294();
        f305();
        f298();
        f297();
        f296();
      }
      if (v2885.ⵠⲆᐃⲆΔ.enabled) {
        f299();
      }
      f302();
      if (this.ᐃⵠⵠᐃΔⲆⲆ && this.ⵠⲆΔⵠⲆⵠⲆ === 1) {
        f322();
      }
      v2885.ⵠᐃᐃⲆᐃⵠᐃ.ᐃᐃΔⵠ();
      v2885.alert.ᐃᐃΔⵠ("#FFF", "#000");
      if (this.ᐃⵠⵠᐃΔⲆⲆ) {
        v2885.ⵠⲆᐃⲆΔ.ᐃᐃΔⵠ();
        v2885.ⵠⵠⲆᐃΔ.ᐃᐃΔⵠ();
        v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.ᐃᐃΔⵠ(v3114.ᐃΔⲆᐃ.x, v3114.ᐃΔⲆᐃ.y);
      }
      f301();
    };
    this.ΔⵠⵠⵠΔᐃⵠᐃᐃ = function () {
      v2885.ⲆΔⵠ.ᐃⲆⲆ();
      v2885.ᐃⲆⵠΔ.ᐃⲆⲆ();
      if (!v2885.reconnect.enabled && v2885.ⲆⵠΔⵠⲆ) {
        v2885.control.ᐃⲆⲆ();
        v2885.ᐃᐃⲆᐃⲆ.ᐃⲆⲆ();
      }
      v2884.ᐃⲆⲆ();
      this.ΔΔᐃᐃ.ⲆᐃⵠⵠⵠᐃⵠⵠΔ();
    };
    this.ΔᐃⵠⵠⵠⵠᐃΔᐃ = function () {
      f413();
    };
    this.ⵠⵠᐃΔΔⵠΔⵠᐃ = function () {
      v2887.ΔⲆⵠᐃⲆⲆⲆΔΔ();
      v2887.ⵠⲆΔᐃᐃΔΔⲆᐃ();
      v2887.ⲆⲆⵠⵠᐃⲆⵠΔⵠ();
      v2887.ⵠⵠΔⲆⵠⲆΔⵠᐃ();
    };
    this.ᐃᐃΔⵠ = function () {
      if (!v2885.reconnect.enabled && v2885.ⲆⵠΔⵠⲆ) {
        this.ⵠⵠᐃΔΔⵠΔⵠᐃ();
      }
      v3082.ⵠᐃⲆᐃΔΔⲆⵠΔ();
      this.ΔⵠⵠⵠΔᐃⵠᐃᐃ();
      if (v2883.ΔΔᐃⲆΔΔⲆ !== 1) {
        this.ΔᐃⵠⵠⵠⵠᐃΔᐃ();
        this.ⵠⵠⲆⲆΔⲆⵠ();
      } else {
        var v2805 = ⵠᐃ.ⵠⵠᐃⵠᐃⲆᐃ;
        f304(p1694, v2805, v424 - v2805.width / 4, v425 - v2805.height / 4, v2805.width / 2, v2805.height / 2);
      }
    };
    this.ΔΔᐃΔΔⵠᐃ = function (p1715) {
      if (v2885.ΔΔᐃᐃᐃ.open && p1715.keyCode === 27) {
        v2885.ΔΔᐃᐃᐃ.ⵠΔⵠᐃΔ();
      } else if (v2885.Ⲇⵠⵠⵠⵠ.open && p1715.keyCode === 27) {
        v2885.Ⲇⵠⵠⵠⵠ.ⵠΔⵠᐃΔ();
      } else if (v2885.ΔΔᐃᐃᐃ.open || v2885.Ⲇⵠⵠⵠⵠ.open || p1715.keyCode != 79 || v2796 != -1) {
        if (p1715.keyCode == 13 && v2796 == -1) {
          if (v2885.Ⲇⵠⵠⵠⵠ.open) {
            v2885.Ⲇⵠⵠⵠⵠ.ⲆᐃᐃⵠⵠΔⵠ();
          } else {
            v2885.ΔΔᐃᐃᐃ.ⲆΔⲆΔⲆ();
          }
        } else if (!v2885.ΔΔᐃᐃᐃ.open && !v2885.Ⲇⵠⵠⵠⵠ.open) {
          if (p1715.keyCode === 82) {
            v2885.ᐃᐃⲆᐃⲆ.ᐃᐃⲆⵠⲆⲆⵠ();
          } else if (p1715.keyCode !== 80 || v2884.mode !== 1 || v2885.ⲆⵠΔⵠᐃⲆΔ) {
            if (p1715.keyCode >= 49 && p1715.keyCode <= 57) {
              if (v2885.ⲆΔⲆΔ.id < 0) {
                var v2806 = p1715.keyCode - 49;
                var v2807 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ[v2806];
                if (v2807) {
                  v2887.ⵠΔᐃⲆⲆ(v2807.id, v2806);
                }
              }
            } else if (p1715.keyCode == 89) {
              v2885.ⵠⲆⵠᐃΔᐃᐃ = !v2885.ⵠⲆⵠᐃΔᐃᐃ;
            } else if (p1715.keyCode == 71) {
              v2885.ⲆΔⲆΔ.ⲆⵠⵠⵠΔⲆⲆⲆⲆ();
            }
          } else {
            v2885.ΔᐃᐃΔⵠΔᐃ.ᐃᐃⲆⵠⲆⲆⵠ();
          }
        }
      } else {
        v2885.Ⲇⵠⵠⵠⵠ.ⲆⲆΔΔᐃⵠΔⵠΔ();
      }
      v3110.up(p1715);
    };
    this.ⲆⵠΔⲆΔᐃⵠ = function (p1716) {
      v3110.down(p1716);
      if (p1716.keyCode == 8 && !v2885.ΔΔᐃᐃᐃ.open && !v2885.Ⲇⵠⵠⵠⵠ.open) {
        p1716.preventDefault();
      }
    };
    this.ⵠᐃΔΔΔᐃΔ = function (p1717) {
      v3114.ᐃΔⲆᐃ = f433(vThis3.ΔΔⵠ, p1717);
      var v2808 = false;
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
        vThis3.ⲆⵠΔΔΔ.focus(v3114.ᐃΔⲆᐃ);
      }
      var v2809 = v2885.ᐃⵠᐃΔ;
      if (v2885.ⲆΔⲆΔ.id < 0 && v2809.id >= 0) {
        if (!v2885.ᐃⵠᐃΔ.lock || v2885.ᐃⵠᐃΔ.ᐃΔⲆⵠ === v2885.id) {
          v2808 |= vThis3.ΔΔᐃ[v2885.ᐃⵠᐃΔ.id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        }
      }
      var v2810 = v2885.ΔⵠⲆⵠ;
      if (v2810.open && v2810.ᐃᐃᐃΔΔΔΔ > 0) {
        v2808 |= vThis3.ⲆᐃⵠΔΔⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      var v2811 = v2885.ΔⵠⵠΔ;
      if (v2811.open && v2811.ΔΔΔⵠΔⲆΔ > 0) {
        v2808 |= vThis3.ⵠᐃᐃⵠΔᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⲆᐃⲆⵠᐃⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ΔⲆᐃⲆᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ᐃᐃΔⲆⲆⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⲆⵠⲆⵠΔᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⵠⲆⵠΔΔⵠᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ΔⵠΔⲆⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⵠⵠᐃΔⵠⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⲆⲆᐃⵠΔⵠⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⵠᐃⵠᐃᐃⲆᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ΔⵠⵠΔⵠΔⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⵠΔΔΔⲆΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ΔⵠᐃⵠⵠᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        v2808 |= vThis3.ⵠΔⲆΔΔΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      var v2812 = v2885.ᐃᐃᐃⵠ;
      if (v2812.open && v2812.ⲆΔⲆⲆⵠΔⲆ > 0) {
        v2808 |= vThis3.ᐃΔⲆⵠᐃΔⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (v2885.sign.open) {
        v2808 |= vThis3.sign.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (!v2885.ᐃⵠᐃΔ.lock) {
        if (v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ) {
          v2808 |= vThis3.Ⲇⵠⵠᐃᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        }
      }
      if (v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ) {
        v2808 |= vThis3.ⲆΔⵠⵠΔⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (v2885.ⲆΔⲆΔ.id < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        for (var v2813 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ, v2814 = 0; v2813.length > v2814; v2814++) {
          var v2815 = v2813[v2814].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
          v2808 |= v2815;
          if (v2815) {
            v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.start(v2814, v3114.ᐃΔⲆᐃ);
          }
          if (v2809.open && (v2809.id < 0 || v2813[v2814].id == v2809.id) || v2885.ΔⲆⵠᐃᐃ.open && v2813[v2814].id === 200 || v2885.ΔⲆᐃⵠᐃ.open && v2813[v2814].id === 282 || v2885.ᐃᐃᐃⵠ.open && (v2813[v2814].id === 200 || v2813[v2814].id === 224) || v2885.ΔⵠⲆⵠ.open && v2813[v2814].id === 227 || v2885.ΔⵠⵠΔ.open && v2813[v2814].id === 200) {
            v2808 |= vThis3.ΔⵠᐃΔⵠ[v2813[v2814].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
          }
        }
      }
      if (v2885.ᐃⵠⲆⲆΔ.open) {
        v2808 |= vThis3.ᐃⵠⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (vThis3.ⲆᐃⵠΔΔ != -1) {
        if (v2808 |= vThis3.ⵠⲆⲆᐃⲆ[vThis3.ⲆᐃⵠΔΔ].button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288)) {
          var vVVV303 = vVV303;
        }
      } else {
        vVVV303 = vVVV316;
      }
      if (!!(v2885.ⲆΔⲆΔ.id < 0) && !!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vVVV303 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !v2885.ᐃΔⵠᐃⵠ) {
        v2813 = v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ;
        v2814 = 0;
        for (; v2814 < v2813.length; v2814++) {
          v2808 |= v2813[v2814].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        }
      }
      if (v2885.ⲆΔⲆΔ.id < 0 && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⵠⵠⲆᐃΔ.open && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        v2808 |= vThis3.ⵠⵠⲆᐃΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (!!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        v2808 |= vThis3.ⵠΔᐃΔΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        v2808 |= vThis3.options.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open) {
        v2808 |= vThis3.ᐃΔⵠⵠⲆ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (!!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        if (v3082.ⲆΔⲆΔⲆ) {
          v2808 |= vThis3.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        } else {
          v2808 |= vThis3.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
        }
      }
      if (!!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && v2884.mode !== 2 && v2884.mode !== 5) {
        v2808 |= vThis3.ΔΔᐃᐃ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2288);
      }
      if (!v2808 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !vThis3.sign.open) {
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ >= 0) {
          v2887.ᐃΔⲆΔΔⵠⵠⵠⲆ();
        } else if (!vVVV303) {
          v3114.down();
        }
      }
    };
    this.ⲆᐃⵠᐃⲆⲆⲆ = function (p1718) {
      v3114.ᐃΔⲆᐃ = f433(vThis3.ΔΔⵠ, p1718);
      v3114.up();
      if (!v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.release()) {
        var v2816 = v2885.ᐃⵠᐃΔ;
        var v2817 = v2885.ΔⲆⵠᐃᐃ;
        var v2818 = v2885.ΔⲆᐃⵠᐃ;
        var v2819 = v2885.ΔⵠⲆⵠ;
        var v2820 = v2885.ΔⵠⵠΔ;
        var v2821 = v2885.ᐃᐃᐃⵠ;
        if (v2885.control.attack) {
          v2885.control.attack = 0;
          v2887.ⲆⵠⲆΔⵠΔⲆΔᐃ();
        }
        if (vThis3.ⲆᐃⵠΔΔ != -1) {
          var v2822 = vThis3.ⵠⲆⲆᐃⲆ[vThis3.ⲆᐃⵠΔΔ].button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2);
          var v2823 = document.getElementById("team_box").style;
          if (v2822 && v2823.display == "inline-block") {
            v2823.display = "none";
            return;
          }
          if (v2822) {
            vThis3.ⵠⲆⲆᐃⲆ[vThis3.ⲆᐃⵠΔΔ].action();
          }
        }
        if (v2885.ⲆΔⲆΔ.id < 0 && v2816.id >= 0 && !vThis3.ⵠᐃΔᐃ.open) {
          if (!v2885.ᐃⵠᐃΔ.lock || v2885.ᐃⵠᐃΔ.ᐃΔⲆⵠ === v2885.id) {
            if (v2822 = vThis3.ΔΔᐃ[v2885.ᐃⵠᐃΔ.id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
              v2887.ⵠᐃⵠⵠᐃΔΔΔⲆ(v2816);
            }
          }
        }
        if ((v2819 = v2885.ΔⵠⲆⵠ).open && v2819.ᐃᐃᐃΔΔΔΔ > 0 && !vThis3.ⵠᐃΔᐃ.open) {
          if (v2822 = vThis3.ⲆᐃⵠΔΔⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            v2887.ΔⲆᐃΔᐃⲆⲆⵠⲆ(v2819);
          }
        }
        if ((v2820 = v2885.ΔⵠⵠΔ).open && v2820.ΔΔΔⵠΔⲆΔ > 0 && !vThis3.ⵠᐃΔᐃ.open) {
          switch (v2820.type) {
            case 24:
              if (v2822 = vThis3.ⵠᐃᐃⵠΔᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 25:
              if (v2822 = vThis3.ⲆᐃⲆⵠᐃⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 26:
              if (v2822 = vThis3.ΔⲆᐃⲆᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 27:
              if (v2822 = vThis3.ᐃᐃΔⲆⲆⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 28:
              if (v2822 = vThis3.ⲆⵠⲆⵠΔᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 29:
              if (v2822 = vThis3.ⵠⲆⵠΔΔⵠᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 30:
              if (v2822 = vThis3.ΔⵠΔⲆⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 31:
              if (v2822 = vThis3.ⵠⵠᐃΔⵠⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 32:
              if (v2822 = vThis3.ⲆⲆᐃⵠΔⵠⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 33:
              if (v2822 = vThis3.ⵠᐃⵠᐃᐃⲆᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 34:
              if (v2822 = vThis3.ΔⵠⵠΔⵠΔⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 35:
              if (v2822 = vThis3.ⵠΔΔΔⲆΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 36:
              if (v2822 = vThis3.ΔⵠᐃⵠⵠᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
              break;
            case 37:
              if (v2822 = vThis3.ⵠΔⲆΔΔΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
                v2887.ΔⲆΔⲆᐃ(v2820);
              }
          }
        }
        if ((v2821 = v2885.ᐃᐃᐃⵠ).open && v2821.ⲆΔⲆⲆⵠΔⲆ > 0 && !vThis3.ⵠᐃΔᐃ.open) {
          if (v2822 = vThis3.ᐃΔⲆⵠᐃΔⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            v2887.ⲆᐃᐃⲆΔᐃΔᐃΔ(v2821);
          }
        }
        if (v2885.sign.open && !vThis3.ⵠᐃΔᐃ.open) {
          if (v2822 = vThis3.sign.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            vThis3.sign.select();
          }
        }
        if (!v2885.ᐃⵠᐃΔ.lock && !vThis3.ⵠᐃΔᐃ.open) {
          if (v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ && (v2822 = vThis3.Ⲇⵠⵠᐃᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2))) {
            v2887.ᐃⲆⵠᐃⵠⵠⲆⵠⵠ(v2816);
          }
        }
        if (v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ && !vThis3.ⵠᐃΔᐃ.open && (v2822 = vThis3.ⲆΔⵠⵠΔⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2))) {
          v2887.ⵠΔⵠᐃⲆⲆΔⵠᐃ(v2816);
          if (ga) {
            ga("send", "event", "Game", "lockpick");
          }
        }
        if (v2885.ᐃⵠⲆⲆΔ.open) {
          if (v2822 = vThis3.ᐃⵠⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            v2887.ᐃⵠⲆⲆΔ();
            if (ga) {
              ga("send", "event", "Game", "resurrection");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.id < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled && !vThis3.ⵠᐃΔᐃ.open) {
          for (var v2824 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ, v2825 = 0; v2825 < v2824.length; v2825++) {
            if (v2822 = v2824[v2825].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
              if (p1718.which != 1 || p1718.shiftKey) {
                if ((p1718.which == 1 && p1718.shiftKey || p1718.which == 3) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                  vThis3.ⵠᐃΔᐃ.ᐃΔⲆⲆᐃᐃᐃ(v2824[v2825].id);
                }
              } else {
                v2887.ⵠΔᐃⲆⲆ(v2824[v2825].id, v2825);
              }
            } else if (v2816.open && (v2816.id < 0 || v2824[v2825].id === v2816.id)) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                v2887.ᐃΔᐃᐃⲆⲆΔⵠⵠ(v2816, v2824[v2825].id, p1718.shiftKey ? 10 : 1);
              }
            } else if (v2818.open && v2824[v2825].id === 282) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                v2887.ⲆᐃⲆΔᐃᐃᐃⲆΔ(v2818);
              }
            } else if (v2817.open && v2824[v2825].id === 200) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                v2887.ᐃⵠⵠΔᐃΔⵠᐃⵠ(v2817, p1718.shiftKey ? 10 : 1);
              }
            } else if (v2819.open && v2824[v2825].id === 227) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                v2887.ⵠⵠⵠᐃΔⲆⵠⲆᐃ(v2819, p1718.shiftKey ? 10 : 1);
              }
            } else if (v2820.open && v2824[v2825].id === 200) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                v2887.ᐃⲆⲆⵠᐃΔⵠᐃⵠ(v2820, p1718.shiftKey ? 10 : 1);
              }
            } else if (v2821.open && (v2824[v2825].id === 200 || v2824[v2825].id === 224)) {
              if ((v2822 = vThis3.ΔⵠᐃΔⵠ[v2824[v2825].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) {
                if (v2824[v2825].id === 200) {
                  v2887.ΔΔⵠᐃⲆᐃⲆ(v2821, p1718.shiftKey ? 10 : 1, 0);
                } else {
                  v2887.ΔΔⵠᐃⲆᐃⲆ(v2821, 0, p1718.shiftKey ? 10 : 1);
                }
              }
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.id < 0 && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled && !vThis3.ⵠᐃΔᐃ.open && !v2885.ᐃΔⵠᐃⵠ) {
          v2824 = v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ;
          v2825 = 0;
          for (; v2825 < v2824.length; v2825++) {
            if (v2822 = v2824[v2825].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
              ⵠΔⲆΔΔ = v2887.ΔᐃⵠᐃⲆΔΔⲆᐃ(v2824[v2825].id);
              if (ⵠΔⲆΔΔ && ga) {
                ga("send", "event", "Game", "craft", v628[v768[v2824[v2825].id].ⵠⵠᐃⲆ].name);
              }
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.id < 0 && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⵠⵠⲆᐃΔ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open) {
          if (v2822 = vThis3.ⵠⵠⲆᐃΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287)) {
            v3081.ⵠⵠⲆᐃΔ.select();
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open) {
          if (v3082.ⲆΔⲆΔⲆ) {
            if (v2822 = vThis3.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
              v3082.select();
              if (ga) {
                ga("send", "event", "Game", "sound on");
              }
            }
          } else if (v2822 = vThis3.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            v3082.select();
            if (ga) {
              ga("send", "event", "Game", "sound off");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
          if (v2822 = vThis3.options.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            vThis3.options.ᐃⲆⲆⲆⲆᐃⲆᐃΔ();
            if (ga) {
              ga("send", "event", "Game", "options");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open && vThis3.ⵠⲆⵠⵠᐃⵠᐃ === 1) {
          if (v2822 = vThis3.ᐃΔⵠⵠⲆ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            vThis3.ᐃΔⵠⵠⲆ.select();
            if (ga) {
              ga("send", "event", "Game", "market");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && vThis3.ᐃᐃⵠᐃΔⲆⵠ === 1) {
          if (v2822 = vThis3.ⵠΔᐃΔΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            vThis3.ⵠΔᐃΔΔ.ᐃⵠΔⲆⵠΔΔΔᐃ();
            if (ga) {
              ga("send", "event", "Game", "recipe");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ᐃΔⵠⵠⲆ.open && v2884.mode !== 2 && v2884.mode !== 5 && vThis3.ᐃΔΔᐃⵠΔⲆ === 1) {
          if (v2822 = vThis3.ΔΔᐃᐃ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, 2)) {
            vThis3.ΔΔᐃᐃ.select();
            if (ga) {
              ga("send", "event", "Game", "quests");
            }
          }
        }
        if (v2885.ⲆΔⲆΔ.ⲆΔⲆΔᐃ && p1718.which == 3) {
          vThis3.ⵠᐃᐃⲆΔ.ᐃΔⲆⲆᐃᐃᐃ();
        }
      }
    };
    this.ⲆⵠᐃΔⲆᐃΔ = vVVV31;
    this.ᐃⵠΔΔᐃΔⲆ = function (p1719) {
      v3114.ᐃΔⲆᐃ = f433(vThis3.ΔΔⵠ, p1719);
      var v2826 = false;
      v3081.ΔΔⵠΔΔ.display = 0;
      v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.ⲆⲆⲆⲆⵠ(v3114.ᐃΔⲆᐃ);
      if (vThis3.ⲆᐃⵠΔΔ != -1) {
        v2826 |= vThis3.ⵠⲆⲆᐃⲆ[vThis3.ⲆᐃⵠΔΔ].button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      var v2827 = v2885.ΔⵠⲆⵠ;
      if (v2827.open && v2827.ᐃᐃᐃΔΔΔΔ > 0) {
        v2826 |= vThis3.ⲆᐃⵠΔΔⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      var v2828 = v2885.ΔⵠⵠΔ;
      if (v2828.open && v2828.ΔΔΔⵠΔⲆΔ > 0) {
        v2826 |= vThis3.ⵠᐃᐃⵠΔᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⲆᐃⲆⵠᐃⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ΔⲆᐃⲆᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ᐃᐃΔⲆⲆⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⲆⵠⲆⵠΔᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⵠⲆⵠΔΔⵠᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ΔⵠΔⲆⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⵠⵠᐃΔⵠⵠΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⲆⲆᐃⵠΔⵠⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⵠᐃⵠᐃᐃⲆᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ΔⵠⵠΔⵠΔⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⵠΔΔΔⲆΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ΔⵠᐃⵠⵠᐃΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        v2826 |= vThis3.ⵠΔⲆΔΔΔΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      var v2829 = v2885.ᐃᐃᐃⵠ;
      if (v2829.open && v2829.ⲆΔⲆⲆⵠΔⲆ > 0) {
        v2826 |= vThis3.ᐃΔⲆⵠᐃΔⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (v2885.sign.open) {
        v2826 |= vThis3.sign.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      var v2830 = v2885.ᐃⵠᐃΔ;
      if (v2885.ⲆΔⲆΔ.id < 0 && v2830.id >= 0 && !v2885.ⵠⲆᐃⲆΔ.enabled && (!v2885.ᐃⵠᐃΔ.lock || v2885.id === v2885.ᐃⵠᐃΔ.ᐃΔⲆⵠ)) {
        v2826 |= vThis3.ΔΔᐃ[v2830.id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (v2885.ᐃⵠⲆⲆΔ.open) {
        v2826 |= vThis3.ᐃⵠⲆⲆΔ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (!v2885.ᐃⵠᐃΔ.lock && !v2885.ⵠⲆᐃⲆΔ.enabled) {
        if (v2885.ᐃⵠᐃΔ.ΔⲆⵠⵠᐃᐃⵠ) {
          v2826 |= vThis3.Ⲇⵠⵠᐃᐃᐃⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        }
      }
      if (v2885.ᐃⵠᐃΔ.ᐃΔⲆΔᐃΔⲆ && !v2885.ⵠⲆᐃⲆΔ.enabled) {
        v2826 |= vThis3.ⲆΔⵠⵠΔⲆⵠ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (v2885.ⲆΔⲆΔ.id < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled) {
        for (var v2831 = v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ, v2832 = 0; v2831.length > v2832; v2832++) {
          var v2833 = v2831[v2832].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
          v2826 |= v3081.ΔΔⵠΔΔ.ΔⵠΔⵠ(v2833, v2831[v2832], 0);
          if (v2830.open && (v2830.id < 0 || v2831[v2832].id == v2830.id) || v2885.ΔⲆⵠᐃᐃ.open && v2831[v2832].id == 200 || v2885.ΔⲆᐃⵠᐃ.open && v2831[v2832].id === 282 || v2885.ᐃᐃᐃⵠ.open && (v2831[v2832].id == 200 || v2831[v2832].id == 224) || v2885.ΔⵠⲆⵠ.open && v2831[v2832].id == 227 || v2885.ΔⵠⵠΔ.open && v2831[v2832].id == 200) {
            v2826 |= vThis3.ΔⵠᐃΔⵠ[v2831[v2832].id].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
          }
        }
      }
      if (v2885.ⲆΔⲆΔ.id < 0 && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !v2885.ⵠⲆᐃⲆΔ.enabled && !v2885.ᐃΔⵠᐃⵠ) {
        v2831 = v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ;
        v2832 = 0;
        for (; v2832 < v2831.length; v2832++) {
          v2833 = false;
          v2833 = v2831[v2832].ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
          v2826 |= v3081.ΔΔⵠΔΔ.ΔⵠΔⵠ(v2833, v2831[v2832], 1);
        }
      }
      if (v2885.ⲆΔⲆΔ.id < 0 && v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && v2885.ⵠⵠⲆᐃΔ.open && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        v2826 |= vThis3.ⵠⵠⲆᐃΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open && vThis3.ᐃᐃⵠᐃΔⲆⵠ === 1) {
        v2826 |= vThis3.ⵠΔᐃΔΔ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (!!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        v2826 |= vThis3.options.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open && vThis3.ⵠⲆⵠⵠᐃⵠᐃ === 1) {
        v2826 |= vThis3.ᐃΔⵠⵠⲆ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (!!(v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0) && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ΔΔᐃᐃ.open && !vThis3.options.open && !vThis3.ᐃΔⵠⵠⲆ.open) {
        if (v3082.ⲆΔⲆΔⲆ) {
          v2826 |= vThis3.ᐃᐃⵠΔ.ᐃⵠᐃᐃᐃⵠⲆ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        } else {
          v2826 |= vThis3.ᐃᐃⵠΔ.ⵠᐃΔᐃΔᐃᐃ.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
        }
      }
      if (v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ < 0 && !vThis3.ⵠΔᐃΔΔ.open && !vThis3.ⵠᐃΔᐃ.open && !vThis3.options.open && !vThis3.ⵠᐃᐃⲆΔ.open && !vThis3.ᐃΔⵠⵠⲆ.open && v2884.mode !== 2 && v2325.ᐃΔΔᐃᐃⲆᐃⵠΔ !== v2884.mode && vThis3.ᐃΔΔᐃⵠΔⲆ === 1) {
        v2826 |= vThis3.ΔΔᐃᐃ.button.ΔⵠΔⵠ(vThis3.ΔΔⵠ, v3114.ᐃΔⲆᐃ, v2287);
      }
      if (vThis3.ⲆⵠᐃΔⲆᐃΔ !== v2826) {
        vThis3.ⲆⵠᐃΔⲆᐃΔ = v2826;
        p1693.style.cursor = v2826 ? vThis3.ᐃᐃΔⵠⵠᐃΔ : vThis3.ᐃⲆΔΔⲆᐃⲆ;
      }
    };
    this.ⵠΔᐃΔᐃᐃⵠ = function () {
      vWindow.addEventListener("mousedown", this.ⵠᐃΔΔΔᐃΔ, vVVV316);
      vWindow.addEventListener("mouseup", this.ⲆᐃⵠᐃⲆⲆⲆ, vVV31);
      vWindow.addEventListener("mousemove", this.ᐃⵠΔΔᐃΔⲆ, vVVVV316);
      vWindow.addEventListener("keyup", this.ΔΔᐃΔΔⵠᐃ, vVVVV316);
      vWindow.addEventListener("keydown", this.ⲆⵠΔⲆΔᐃⵠ, v31);
    };
    this.ᐃΔΔⵠⵠᐃᐃ = function () {
      vWindow.removeEventListener("mousedown", this.ⵠᐃΔΔΔᐃΔ, false);
      vWindow.removeEventListener("mouseup", this.ⲆᐃⵠᐃⲆⲆⲆ, false);
      vWindow.removeEventListener("mousemove", this.ᐃⵠΔΔᐃΔⲆ, vVVV31);
      vWindow.removeEventListener("keyup", this.ΔΔᐃΔΔⵠᐃ, false);
      vWindow.removeEventListener("keydown", this.ⲆⵠΔⲆΔᐃⵠ, vVV316);
    };
  }
  function f504(p1720, p1721, p1722, p1723, p1724, p1725) {
    v91(v802, p1720, p1721, p1722, p1723, p1724, p1725);
    const vF93 = f9(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3]);
    f58(vVVVVVUndefined8232[4], vVVVVVUndefined8232[5], vVVVVVUndefined8232[0]);
    return vF93 ^ 32340;
  }
  function f505(p1726, p1727, p1728) {
    const v2834 = ((24227 + p1726) * 1103515245 + 12345) % 2147483648;
    const v2835 = p1727 ^ 36520;
    const v2836 = p1728 ^ 48039;
    return ((22442 + (function (p1729, p1730, p1731, p1732) {
      const v2837 = ((25672 + p1729) * 22695477 + 1) % 4294967296;
      const v2838 = p1730 ^ 48348;
      const vF80 = f80(v2837, v2838, (24 << (p1731 >> 8 & 255)) + (0 << (p1731 >> 24 & 255)) + (16 << (p1731 >> 16 & 255)) + (8 << (p1731 & 255)), ~(p1732 & 37452) & (p1732 | 37452));
      f82(v2837, v2838);
      return vF80 ^ 59744;
    }(v2834, v2835, v2836, v2834) ^ f61(v2835, v2836, v2834))) * 1664525 + 1013904223) % 4294967296;
  }
  function f506(p1733, p1734) {
    this.ΔΔⵠ = p1733;
    this.ᐃ = p1734;
    var vThis4 = this;
    this.ᐃᐃⵠᐃⵠΔⵠ = false;
    this.ΔⲆⲆⲆΔⵠⲆ = {
      id: document.getElementById("scoreboard"),
      style: document.getElementById("scoreboard").style,
      height: 0,
      translate: {
        x: 0,
        y: 0
      },
      ᐃⲆⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = this.translate.y + "px";
      },
      ⵠⵠᐃΔⵠ: function () {
        this.id.innerHTML = "<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">" + v2885.ᐃᐃΔΔⲆΔⲆ.ⲆΔⲆΔⲆΔᐃ + "</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> " + v809[2035] + " : " + v2885.ⵠⵠᐃ + "</div><div class=\"stats\"> " + v809[2034] + " : " + v2885.ᐃᐃΔΔⲆΔⲆ.ⵠⲆᐃⲆⵠⵠⲆ + "</div></div><div id=\"flexDisplay\"><div id=\"score\"> " + v809[2033] + " : " + v2885.ᐃᐃΔΔⲆΔⲆ.ⲆΔⲆᐃΔ + "</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> " + v2885.ᐃᐃΔΔⲆΔⲆ.ᐃᐃᐃΔΔⲆⵠ + " " + v809[2032] + "</div></div><div id=\"shop_points\">" + v809[2031] + "</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">" + v809[2029] + "</div><div class=\"social\" id=\"fffacebook\">" + v809[2030] + "</div></div><div id=\"bbback\">" + v809[2028] + "</div>";
        this.style.display = "inline-block";
        document.getElementById("tttwitter").addEventListener("mouseup", f497, vVVV313);
        document.getElementById("bbback").addEventListener("mouseup", function () {
          v2886.ⵠΔⵠᐃΔ(v2883.ⲆΔⲆΔⲆ);
        }, false);
        document.getElementById("fffacebook").addEventListener("mouseup", f481, false);
        this.height = Math.floor(this.id.clientHeight / 2);
        (function () {
          var v2839 = new XMLHttpRequest();
          v2839.open("GET", v3131 + "getBreadAndScore?userid=" + vVUndefined14);
          v2839.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2839.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200 && v2839.responseText !== "0") {
              var v2840 = JSON.parse(v2839.responseText);
              var v2841 = v2840.b - v2883.ᐃⵠⲆΔΔ;
              v2883.ᐃⵠⲆΔΔ = v2840.b;
              v2883.ⲆΔⲆᐃΔ = v2840.s;
              v2883.ⵠⵠΔⵠⵠ = v2883.ⲆⲆΔⲆᐃᐃⵠ(v2883.ⲆΔⲆᐃΔ);
              v2883.ΔⲆⵠΔⲆⵠᐃ = v2883.ⲆⵠⵠΔᐃΔᐃ(v2883.ⲆΔⲆᐃΔ);
              v2883.ΔΔΔⵠᐃⵠΔ = 0;
              document.getElementById("breadWonInner").innerHTML = "" + v2841;
            }
          };
          v2839.send();
        })();
      }
    };
    var v2842;
    var v2843 = 0;
    function f507() {
      vThis4.ᐃⲆⲆ();
      if (++v2843 != 30) {
        vWindow.setTimeout(f507, 33);
      } else {
        vThis4.ᐃⲆⲆ();
      }
    }
    this.ⵠΔⵠᐃΔ = function (p1735) {
      if (vThis4.ᐃᐃⵠᐃⵠΔⵠ === true) {
        vThis4.ᐃᐃⵠᐃⵠΔⵠ = vVV313;
        v2842 = p1735;
        v2844 = -1;
        f508();
        f527();
      }
    };
    var v2844 = -1;
    function f508() {
      vThis4.ᐃⲆⲆ();
      if (++v2844 == 30) {
        vThis4.stop();
        vThis4.ΔⲆⲆⲆΔⵠⲆ.style.display = "none";
        v2842();
        return;
      }
      vWindow.setTimeout(f508, 33);
    }
    this.ⲆΔᐃⵠⵠ = false;
    this.stop = function () {
      this.ⲆΔᐃⵠⵠ = vVVV316;
    };
    this.ⲆΔⲆΔⲆ = function () {
      f529();
      document.getElementById("game_body").style.backgroundColor = v624.ΔΔΔⲆᐃ[v2882.time];
      vThis4.ΔⲆⲆⲆΔⵠⲆ.ⵠⵠᐃΔⵠ();
      v2883.ⲆΔΔⵠΔⵠΔ.style.display = "inline-block";
      vThis4.ⲆΔᐃⵠⵠ = vVV3022;
      vThis4.ᐃᐃⵠᐃⵠΔⵠ = true;
      v2844 = -1;
      v2843 = 0;
      f507();
    };
    this.ᐃⲆⲆ = function () {
      this.ΔⲆⲆⲆΔⵠⲆ.translate.x = Math.floor(v424 - 275);
      this.ΔⲆⲆⲆΔⵠⲆ.translate.y = Math.floor(v425 - this.ΔⲆⲆⲆΔⵠⲆ.height - 28);
      v2883.ⲆΔΔⵠΔⵠΔ.translate.x = this.ΔⲆⲆⲆΔⵠⲆ.translate.x - 350;
      v2883.ⲆΔΔⵠΔⵠΔ.translate.y = this.ΔⲆⲆⲆΔⵠⲆ.translate.y + 0;
      v2883.ⲆΔΔⵠΔⵠΔ.ᐃⲆⲆ();
      if (v2843 != 30 || v2844 != -1) {
        var v2845 = 0;
        if (v2843 != 30) {
          v2845 = 1500 / (v2843 + 1) - 50;
        }
        if (v2844 != -1) {
          v2845 = -(1750 / (30 - v2844 + 1) - 48);
        }
        this.ΔⲆⲆⲆΔⵠⲆ.translate.y -= v2845;
      }
      this.ΔⲆⲆⲆΔⵠⲆ.ᐃⲆⲆ();
    };
    this.ᐃᐃΔⵠ = function () {
      f290();
      v2885.alert.ᐃᐃΔⵠ("#FFF", "#000");
    };
  }
  function f509(p1736, p1737) {
    const v2846 = (16 << (p1736 >> 16 & 255)) + (24 << (p1736 >> 24 & 255)) + (0 << (p1736 >> 8 & 255)) + (8 << (p1736 & 255));
    const v2847 = (49793 + p1737) % 65447;
    const vF802 = f80(v2846, v2847, v2846, v2847);
    const vF62 = f62(v2846, v2847, v2846, v2847, v2846);
    return (24 << ((vF802 ^ vF62) & 255)) + (16 << ((vF802 ^ vF62) >> 16 & 255)) + (0 << ((vF802 ^ vF62) >> 8 & 255)) + (8 << ((vF802 ^ vF62) >> 24 & 255));
  }
  var v2848 = 1;
  var v2849 = 1;
  var v2850 = {
    ⲆⲆⲆⵠΔⵠΔᐃⲆ: 5000,
    ⲆΔⵠΔⲆⲆΔⵠΔ: 5000,
    ᐃΔΔ: 6,
    ⲆΔΔⲆⵠΔΔ: 3000,
    ΔΔⵠⲆᐃⵠᐃⲆⵠ: 5000,
    ᐃⵠⲆⵠᐃ: 8,
    ⲆΔᐃΔΔ: 2,
    ᐃⵠΔΔᐃⵠⵠ: 460000,
    ⵠⲆⲆΔⲆ: 1,
    ΔΔⲆΔΔ: 3,
    ΔⵠⲆᐃⲆⵠⵠⲆⲆ: 12,
    ⵠᐃΔⵠᐃΔΔ: 12,
    ⵠᐃΔⵠᐃⵠⵠⵠΔ: 12
  };
  var v2851 = [];
  v2851[-1] = 1;
  v2851[46] = 1;
  v2851[85] = 1;
  v2851[v625.ⵠⲆⵠΔᐃΔᐃᐃⵠ] = 2;
  v2851[8] = 2;
  v2851[1] = 2;
  v2851[3] = 2;
  v2851[4] = 2;
  v2851[49] = 2;
  v2851[50] = 2;
  v2851[9] = 2;
  v2851[103] = 2;
  v2851[0] = 2;
  v2851[109] = 2;
  function f510(p1738) {
    return vWindow.String.fromCharCode(p1738);
  }
  (function () {
    const v2852 = {
      ΔΔⲆᐃ: 11493024,
      ⲆⵠΔⲆ: 2860038,
      ᐃΔᐃᐃΔΔⵠ: 2166035,
      ᐃΔⵠΔ: 9818710
    };
  })();
  v2851[17] = 2;
  v2851[5] = 2;
  v2851[6] = 2;
  v2851[48] = 2;
  v2851[v625.ⲆΔᐃᐃⵠΔⵠΔⵠ] = 2;
  v2851[18] = 2;
  v2851[12] = 2;
  v2851[13] = 2;
  ;
  v2851[14] = 2;
  v2851[15] = 2;
  v2851[16] = 2;
  v2851[60] = 2;
  v2851[v625.ᐃⵠΔⵠⲆᐃΔΔⲆ] = 2;
  v2851[62] = 2;
  v2851[63] = 2;
  v2851[64] = 2;
  v2851[65] = 2;
  v2851[66] = 2;
  v2851[72] = 2;
  v2851[108] = 2;
  v2851[100] = 2;
  v2851[99] = 2;
  v2851[82] = 3;
  v2851[86] = 3;
  v2851[87] = 3;
  v2851[88] = 3;
  ⵠΔⲆⲆ = [];
  ⵠΔⲆⲆ[0] = 0;
  ⵠΔⲆⲆ[1] = 1;
  const v2853 = {};
  v2853.get = function (p1739, p1740) {
    if (p1740 !== "ΔⲆᐃΔΔΔⵠ") {
      const vF48 = function () {
        vWindow.addEventListener("mousemove", function () {
          vF48();
        });
      };
      vF48();
    }
    return vWindow.Reflect.get(...arguments);
  };
  ⵠΔⲆⲆ[2] = 1;
  ⵠΔⲆⲆ[3] = 1;
  ⵠΔⲆⲆ[4] = 0;
  ⵠΔⲆⲆ[5] = 0;
  ⵠΔⲆⲆ[6] = 0;
  ⵠΔⲆⲆ[7] = 0;
  ⵠΔⲆⲆ[8] = 0;
  ⵠΔⲆⲆ[9] = 0;
  ⵠΔⲆⲆ[10] = 1;
  ⵠΔⲆⲆ[11] = 1;
  ⵠΔⲆⲆ[12] = 1;
  ⵠΔⲆⲆ[13] = 1;
  ⵠΔⲆⲆ[14] = 1;
  ⵠΔⲆⲆ[15] = 1;
  ⵠΔⲆⲆ[16] = 0;
  ⵠΔⲆⲆ[17] = 0;
  ⵠΔⲆⲆ[18] = 0;
  ⵠΔⲆⲆ[19] = 0;
  ⵠΔⲆⲆ[20] = 0;
  ⵠΔⲆⲆ[21] = 0;
  ⵠΔⲆⲆ[22] = 0;
  ⵠΔⲆⲆ[23] = 1;
  ⵠΔⲆⲆ[24] = 1;
  ⵠΔⲆⲆ[25] = 1;
  ⵠΔⲆⲆ[26] = 1;
  ⵠΔⲆⲆ[27] = 1;
  ⵠΔⲆⲆ[28] = 1;
  ⵠΔⲆⲆ[29] = 1;
  ⵠΔⲆⲆ[30] = 1;
  ⵠΔⲆⲆ[31] = 1;
  ⵠΔⲆⲆ[32] = 1;
  ⵠΔⲆⲆ[33] = 1;
  ⵠΔⲆⲆ[34] = 1;
  ⵠΔⲆⲆ[35] = 1;
  ⵠΔⲆⲆ[36] = 1;
  ⵠΔⲆⲆ[37] = 1;
  ⵠΔⲆⲆ[38] = 1;
  ⵠΔⲆⲆ[40] = 0;
  ⵠΔⲆⲆ[41] = 0;
  ⵠΔⲆⲆ[42] = 0;
  ⵠΔⲆⲆ[50] = 1;
  ⵠΔⲆⲆ[51] = 1;
  ⵠΔⲆⲆ[52] = 1;
  ⵠΔⲆⲆ[55] = 0;
  ⵠΔⲆⲆ[56] = 0;
  ⵠΔⲆⲆ[57] = 0;
  ⵠΔⲆⲆ[58] = 0;
  ⵠⲆᐃⵠΔ = [];
  ⵠⲆᐃⵠΔ[v2328.ⲆⵠⲆⲆᐃ] = 0;
  ⵠⲆᐃⵠΔ[1] = 0;
  ⵠⲆᐃⵠΔ[38] = 0;
  ⵠⲆᐃⵠΔ[6] = 0;
  ⵠⲆᐃⵠΔ[3] = -1;
  ⵠⲆᐃⵠΔ[40] = -1;
  ⵠⲆᐃⵠΔ[2] = 0;
  ⵠⲆᐃⵠΔ[4] = 0;
  ⵠⲆᐃⵠΔ[39] = 0;
  ⵠⲆᐃⵠΔ[42] = 0;
  ⵠⲆᐃⵠΔ[41] = 1;
  ⵠⲆᐃⵠΔ[44] = 1;
  ⵠⲆᐃⵠΔ[7] = 1;
  ⵠⲆᐃⵠΔ[8] = 1;
  ⵠⲆᐃⵠΔ[9] = 1;
  ⵠⲆᐃⵠΔ[19] = 1;
  ⵠⲆᐃⵠΔ[59] = 1;
  ⵠⲆᐃⵠΔ[5] = 0;
  ⵠⲆᐃⵠΔ[12] = 1;
  ⵠⲆᐃⵠΔ[13] = 1;
  ⵠⲆᐃⵠΔ[14] = 1;
  ⵠⲆᐃⵠΔ[20] = 1;
  ⵠⲆᐃⵠΔ[61] = 1;
  ⵠⲆᐃⵠΔ[10] = 0;
  ⵠⲆᐃⵠΔ[15] = 1;
  ⵠⲆᐃⵠΔ[16] = 1;
  ⵠⲆᐃⵠΔ[17] = 1;
  ⵠⲆᐃⵠΔ[21] = 1;
  ⵠⲆᐃⵠΔ[60] = 1;
  ⵠⲆᐃⵠΔ[54] = 0;
  ⵠⲆᐃⵠΔ[55] = 1;
  ⵠⲆᐃⵠΔ[56] = 1;
  ⵠⲆᐃⵠΔ[57] = 1;
  ⵠⲆᐃⵠΔ[58] = 1;
  ⵠⲆᐃⵠΔ[62] = 1;
  function f511(p1741) {
    const v2854 = vWindow.setTimeout;
    const vV2854 = v2854;
    const vF49 = function () {
      v2854(vF49, 435);
      vV2854(vF49, 3384);
    };
    vF49();
  }
  ⵠⲆᐃⵠΔ[18] = 1;
  ⵠⲆᐃⵠΔ[22] = 1;
  if (vWindow.ⲆᐃⲆⵠⵠⵠΔΔⲆ) {
    var v2855 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v2855;
    var v2856 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v2856;
  }
  ⵠⲆᐃⵠΔ[23] = 1;
  ⵠⲆᐃⵠΔ[11] = 0;
  ⵠⲆᐃⵠΔ[43] = 1;
  var v2857 = {
    ⲆⲆΔⵠⵠΔⵠ: {
      ΔᐃⵠᐃⲆ: null,
      path: ["audio/ambience.mp3"],
      ΔΔ: {
        d2: [90684, 300, false],
        d1: [90391, 300, false],
        d0: [90086, 300, false]
      },
      sample: {
        d0: 8,
        d1: 8,
        d2: 8
      }
    },
    ΔⲆⵠᐃⲆᐃΔ: {
      ΔᐃⵠᐃⲆ: null,
      path: ["audio/ambience.mp3"],
      ΔΔ: {
        p1: [89549, 300, vV31],
        p0: [89303, 300, false],
        p2: [89815, 300, vVVV313]
      },
      sample: {
        p0: 8,
        p1: 8,
        p2: 8
      }
    },
    ᐃⲆⲆⲆⵠⵠᐃ: {
      ΔᐃⵠᐃⲆ: null,
      path: ["audio/ambience.mp3"],
      ΔΔ: {
        w0: [88195, 300, false],
        w1: [88473, 300, false],
        w3: [89025, 300, vV314],
        w2: [88751, 300, vVVV313]
      },
      sample: {
        w0: 8,
        w1: 8,
        w2: 8,
        w3: 8
      }
    },
    ⵠᐃⲆⲆᐃⲆⲆ: {
      ΔᐃⵠᐃⲆ: null,
      path: ["audio/ambience.mp3"],
      ΔΔ: {
        ᐃⲆΔⵠⵠⲆⵠ: [32604, 21890, vVVVV30],
        ᐃⵠᐃⲆΔ: [28380, 1797, true],
        ⵠⲆⲆⲆᐃᐃⲆ: [92249, 500, false],
        ⲆⲆⲆⵠⵠⵠⲆ: [66961, 21223, true],
        ⲆⲆⲆⵠᐃⲆᐃ: [91022, 400, vVV315],
        ᐃΔⵠⵠⲆΔⲆ: [66961, 21223, vVVV3024],
        ⲆⵠΔᐃΔ: [12356, 6965, vVV3022],
        ΔᐃⵠᐃⵠⲆⵠ: [3100, 8800, true],
        ΔᐃⲆᐃⵠⲆᐃᐃΔ: [100, 2800, vVV3023],
        ⲆᐃⲆⲆᐃΔⲆ: [30562, 655, vVV3024],
        ⲆⲆᐃᐃΔΔⵠ: [19882, 8301, vV304],
        ⵠᐃⲆΔᐃΔΔ: [54524, 11393, vVV3024],
        ⲆⵠᐃⵠΔⲆⲆ: [31658, 813, true],
        ΔΔⵠΔⲆΔᐃ: [66014, 925, vVV3024],
        ⵠⵠⲆⲆⵠ: [91431, 400, false]
      },
      sample: {
        ΔᐃⲆᐃⵠⲆᐃᐃΔ: 1,
        ΔᐃⵠᐃⵠⲆⵠ: 1,
        ⲆⲆᐃᐃΔΔⵠ: 1,
        ᐃⲆΔⵠⵠⲆⵠ: 1,
        ⵠᐃⲆΔᐃΔΔ: 1,
        ⲆⲆⲆⵠⵠⵠⲆ: 1,
        ᐃΔⵠⵠⲆΔⲆ: 1,
        ⲆⵠΔᐃΔ: 8,
        ᐃⵠᐃⲆΔ: 8,
        ⲆᐃⲆⲆᐃΔⲆ: 8,
        ⲆⵠᐃⵠΔⲆⲆ: 8,
        ΔΔⵠΔⲆΔᐃ: 8,
        ⲆⲆⲆⵠᐃⲆᐃ: 6,
        ⵠⵠⲆⲆⵠ: 6,
        ⵠⲆⲆⲆᐃᐃⲆ: 6
      }
    }
  };
  function f512(p1742, p1743, p1744, p1745, p1746, p1747, p1748, p1749, p1750, p1751, p1752) {
    this.r = 1;
    this.ᐃΔᐃᐃⲆ = p1742;
    this.ⲆᐃⲆᐃⵠⵠⵠ = p1742;
    this.ⲆᐃΔ = p1743;
    this.ⵠⵠᐃ = p1744;
    this.fade = p1745;
    this.ΔⲆΔⲆⲆᐃᐃ = p1746;
    this.ⵠΔⵠⵠᐃⵠΔ = p1747;
    this.ⲆⲆⵠᐃ = p1748;
    this.ΔΔⲆⵠᐃⵠΔ = p1749;
    this.source = p1750;
    this.source.ΔⲆⵠᐃⲆⲆⲆ = p1750.x + p1750.w;
    this.source.ⲆΔⵠⵠⲆ = p1750.y + p1750.ΔᐃⲆ;
    this.ΔΔᐃΔⲆᐃⲆΔᐃ = p1751;
    this.ⲆⲆⵠⲆΔΔⲆ = p1752;
    this.ΔⵠᐃⵠᐃΔᐃ = 0;
    this.ⵠⲆⲆΔΔⵠᐃ = {
      ΔⲆⵠⵠⵠ: 5,
      d: 5
    };
    this.ᐃⲆΔΔΔ = function () {
      this.ᐃΔᐃᐃⲆ -= v3116;
      if (this.ᐃΔᐃᐃⲆ < 0) {
        this.ᐃΔᐃᐃⲆ = this.ⲆᐃⲆᐃⵠⵠⵠ;
        var v2858 = v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ.playing(this.ⲆᐃΔ);
        var v2859 = v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ.playing(this.ⵠⵠᐃ);
        if (v2858 && !v2859) {
          var v2860 = this.ⲆⲆⵠᐃ.volume(this.ⲆᐃΔ) * v2848;
          var v2861 = v2848 * (this.ⵠΔⵠⵠᐃⵠΔ * Math.random() + this.ΔⲆΔⲆⲆᐃᐃ);
          this.ⲆⲆⵠᐃ.fade(v2860, v2861, this.fade, this.ⲆᐃΔ);
        } else if (!v2858 && v2859) {
          v2860 = this.ⲆⲆⵠᐃ.volume(this.ⵠⵠᐃ) * v2848;
          v2861 = (Math.random() * this.ⵠΔⵠⵠᐃⵠΔ + this.ΔⲆΔⲆⲆᐃᐃ) * v2848;
          this.ⲆⲆⵠᐃ.fade(v2860, v2861, this.fade, this.ⵠⵠᐃ);
        }
      }
    };
    this.transition = function () {
      this.ᐃΔᐃᐃⲆ = this.ⲆᐃⲆᐃⵠⵠⵠ;
      this.ⵠⲆⲆΔΔⵠᐃ.d = this.ⵠⲆⲆΔΔⵠᐃ.ΔⲆⵠⵠⵠ;
      if (v2884.time) {
        this.ⲆⲆⵠᐃ.fade(0, v2848 * this.ΔⲆΔⲆⲆᐃᐃ, this.ΔΔⲆⵠᐃⵠΔ, this.ⲆᐃΔ);
        this.ⲆⲆⵠᐃ.play(this.ⲆᐃΔ);
        if (this.ⲆⲆⵠᐃ.playing(this.ⵠⵠᐃ)) {
          var v2862 = this.ⲆⲆⵠᐃ.volume(this.ⵠⵠᐃ) * v2848;
          this.ⲆⲆⵠᐃ.fade(v2862, 0, this.ΔΔⲆⵠᐃⵠΔ, this.ⵠⵠᐃ);
        }
      } else {
        this.ⲆⲆⵠᐃ.fade(0, v2848 * this.ΔⲆΔⲆⲆᐃᐃ, this.ΔΔⲆⵠᐃⵠΔ, this.ⵠⵠᐃ);
        this.ⲆⲆⵠᐃ.play(this.ⵠⵠᐃ);
        if (this.ⲆⲆⵠᐃ.playing(this.ⲆᐃΔ)) {
          v2862 = this.ⲆⲆⵠᐃ.volume(this.ⲆᐃΔ) * v2848;
          this.ⲆⲆⵠᐃ.fade(v2862, 0, this.ΔΔⲆⵠᐃⵠΔ, this.ⲆᐃΔ);
        }
      }
    };
    this.check = function (p1753) {
      if (this.ΔⵠᐃⵠᐃΔᐃ) {
        if (ⵠⲆⲆ.ⲆⲆⵠⲆΔΔⲆ(p1753, this.ΔΔᐃΔⲆᐃⲆΔᐃ)) {
          if (!v3082.transition && v2884.ᐃᐃᐃᐃΔ.now < 460000) {
            if (v2884.time) {
              if (!this.ⲆⲆⵠᐃ.playing(this.ⲆᐃΔ)) {
                this.ⵠⲆⲆΔΔⵠᐃ.d -= v3116;
                if (this.ⵠⲆⲆΔΔⵠᐃ.d < 0) {
                  this.transition();
                }
              }
            } else if (!this.ⲆⲆⵠᐃ.playing(this.ⵠⵠᐃ)) {
              this.ⵠⲆⲆΔΔⵠᐃ.d -= v3116;
              if (this.ⵠⲆⲆΔΔⵠᐃ.d < 0) {
                this.transition();
              }
            }
          }
        } else {
          this.ΔⵠᐃⵠᐃΔᐃ = 0;
          if (this.ⲆⲆⵠᐃ.playing(this.ⲆᐃΔ)) {
            var v2863 = v2848 * this.ⲆⲆⵠᐃ.volume(this.ⲆᐃΔ);
            this.ⲆⲆⵠᐃ.fade(v2863, 0, this.ΔΔⲆⵠᐃⵠΔ, this.ⲆᐃΔ);
          }
          if (this.ⲆⲆⵠᐃ.playing(this.ⵠⵠᐃ)) {
            v2863 = this.ⲆⲆⵠᐃ.volume(this.ⵠⵠᐃ) * v2848;
            this.ⲆⲆⵠᐃ.fade(v2863, 0, this.ΔΔⲆⵠᐃⵠΔ, this.ⵠⵠᐃ);
          }
        }
      } else if (ⵠⲆⲆ.ⲆⲆⵠⲆΔΔⲆ(p1753, this.ⲆⲆⵠⲆΔΔⲆ)) {
        this.ΔⵠᐃⵠᐃΔᐃ = 1;
        if (!v3082.transition && v2884.ᐃᐃᐃᐃΔ.now < 460000) {
          this.transition();
        }
      }
    };
    this.ᐃⲆⲆ = function (p1754, p1755) {
      var v2864;
      var v2865;
      v2864 = p1754.x < this.source.x ? v3082.ⵠⲆⲆᐃⲆΔⵠ(this.source.x) : this.source.ΔⲆⵠᐃⲆⲆⲆ < p1754.x ? v3082.ⵠⲆⲆᐃⲆΔⵠ(this.source.ΔⲆⵠᐃⲆⲆⲆ) : p1755.x;
      v2865 = p1754.y < this.source.y ? v3082.ⲆⲆⵠⵠᐃⲆΔ(this.source.y) : this.source.ⲆΔⵠⵠⲆ < p1754.y ? v3082.ⲆⲆⵠⵠᐃⲆΔ(this.source.ⲆΔⵠⵠⲆ) : p1755.y;
      this.ⲆⲆⵠᐃ.pos(v2864, v2865, -0.5, this.ⲆᐃΔ);
      this.ⲆⲆⵠᐃ.pos(v2864, v2865, -0.5, this.ⵠⵠᐃ);
    };
  }
  ⲆⵠⲆᐃΔ = {
    ⲆⲆⵠⵠᐃⲆᐃ: 2,
    ᐃⵠⵠᐃΔⲆΔⲆΔ: 0.4,
    ⵠᐃΔᐃⵠΔⲆ: 1,
    ⵠΔⵠΔΔᐃⲆΔⵠ: 0.2,
    ⵠᐃⵠⲆΔⵠⵠ: 100,
    ⵠⲆⲆⲆᐃΔⵠ: 0,
    ᐃΔᐃΔᐃΔΔ: 300,
    ᐃⲆᐃⲆΔⵠᐃ: 3,
    ⲆⲆΔᐃΔⲆᐃ: 4,
    ᐃΔⵠⵠⵠⲆⲆ: 100,
    ΔᐃᐃᐃⲆᐃⵠᐃᐃ: 0.2,
    ΔⵠⲆᐃᐃⲆΔⲆⵠ: 0.2,
    ᐃⲆⲆᐃⲆⲆⵠ: 100,
    ᐃⵠⲆⲆⵠ: 2
  };
  function f513(p1756, p1757, p1758) {
    this.ΔⲆᐃΔᐃΔᐃ = p1756;
    this.c = 0;
    this.ⲆⲆⵠᐃ = p1757;
    this.Ⲇᐃᐃᐃⵠ = p1758;
    this.max = p1758.length;
    this.play = function () {
      this.c = (this.c + 1) % this.max;
      var v2866 = this.Ⲇᐃᐃᐃⵠ[this.c];
      this.ΔⲆᐃΔᐃΔᐃ.ᐃΔᐃⵠⲆΔΔ(this.ⲆⲆⵠᐃ, v2866);
      this.ⲆⲆⵠᐃ.play(v2866);
    };
  }
  function f514(p1759) {
    this.ᐃⲆⲆΔⲆᐃⵠ = 1;
    this.ᐃⲆⲆΔ = 0;
    this.mode = -1;
    this.ᐃⵠᐃⲆΔ = v3082.sample.ᐃⵠᐃⲆΔ[p1759];
    this.ⲆᐃⲆⲆᐃΔⲆ = v3082.sample.ⲆᐃⲆⲆᐃΔⲆ[p1759];
    this.ⲆⵠᐃⵠΔⲆⲆ = v3082.sample.ⲆⵠᐃⵠΔⲆⲆ[p1759];
    this.ΔΔⵠΔⲆΔᐃ = v3082.sample.ΔΔⵠΔⲆΔᐃ[p1759];
    this.ⵠΔⲆⲆΔⵠΔ = new f513(this, v2857.ΔⲆⵠᐃⲆᐃΔ.ΔᐃⵠᐃⲆ, v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠΔⲆⲆΔⵠΔ[p1759]);
    this.ⵠⵠⵠᐃⲆ = new f513(this, v2857.ᐃⲆⲆⲆⵠⵠᐃ.ΔᐃⵠᐃⲆ, v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠⵠⵠᐃⲆ[p1759]);
    this.ᐃΔᐃΔᐃ = new f513(this, v2857.ⲆⲆΔⵠⵠΔⵠ.ΔᐃⵠᐃⲆ, v3082.ᐃΔⲆᐃᐃᐃᐃ.ᐃΔᐃΔᐃ[p1759]);
    this.ΔⲆΔⲆⲆ = p1759;
    this.x = 0;
    this.y = 0;
    this.ⲆⲆⲆⲆⵠ = 0;
    this.ᐃΔᐃᐃⲆ = ⲆⵠⲆᐃΔ.ΔᐃΔⲆⲆᐃⵠᐃΔ;
    this.ᐃΔⲆᐃ = {
      y: 0,
      x: 0
    };
    this.ⲆⵠΔⲆⵠ = v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ;
    this.ᐃⲆⲆⲆᐃⲆⲆΔⲆ = function (p1760) {
      if (p1760 === 1) {
        this.ⵠΔⲆⲆΔⵠΔ.play();
      } else if (p1760 === 2) {
        this.ⵠⵠⵠᐃⲆ.play();
      } else if (p1760 === 3) {
        this.ᐃΔᐃΔᐃ.play();
      }
    };
    this.ΔⲆⵠⲆⲆⵠⵠ = function (p1761) {
      if (p1761.ⲆⵠᐃⲆᐃⲆⲆ > 0) {
        return ⲆⵠⲆᐃΔ.ᐃⵠⲆⲆⵠ;
      } else if (p1761.ΔΔΔᐃⲆΔᐃ > 0) {
        return ⲆⵠⲆᐃΔ.ⵠᐃΔᐃⵠΔⲆ;
      } else if (p1761.ⵠⵠΔⵠᐃ > 0 || p1761.ⵠᐃΔⲆⲆ > 0) {
        return ⲆⵠⲆᐃΔ.ᐃⲆᐃⲆΔⵠᐃ;
      } else {
        return ⲆⵠⲆᐃΔ.ⵠⲆⲆⲆᐃΔⵠ;
      }
    };
    this.ⵠⵠᐃΔⵠ = function (p1762) {
      this.ᐃⲆⲆΔⲆᐃⵠ = 0;
      this.ᐃⲆⲆΔ = p1762;
      var v2867 = v2884.ᐃᐃΔⲆΔ[p1762];
      v2867.ΔⲆΔⲆⲆ = this.ΔⲆΔⲆⲆ;
      this.mode = this.ΔⲆⵠⲆⲆⵠⵠ(v2867);
      this.ᐃΔⲆᐃ.x = v2867.x;
      this.ᐃΔⲆᐃ.y = v2867.y;
    };
    this.ᐃΔⵠⵠᐃⵠⲆ = function () {
      this.ᐃⲆⲆΔⲆᐃⵠ = 1;
      this.mode = -1;
      this.ⲆⵠΔⲆⵠ.stop(this.ᐃⵠᐃⲆΔ);
      this.ⲆⵠΔⲆⵠ.stop(this.ⲆᐃⲆⲆᐃΔⲆ);
      this.ⲆⵠΔⲆⵠ.stop(this.ⲆⵠᐃⵠΔⲆⲆ);
      this.ⲆⵠΔⲆⵠ.stop(this.ΔΔⵠΔⲆΔᐃ);
    };
    this.fade = function (p1763, p1764) {
      var v2868 = v2849 * this.ⲆⵠΔⲆⵠ.volume(p1763);
      this.ⲆⵠΔⲆⵠ.fade(v2868, 0, p1764, p1763);
    };
    this.ᐃΔᐃⵠⲆΔΔ = function (p1765, p1766) {
      if (this.ⲆⲆⲆⲆⵠ && this.ΔⲆΔⲆⲆ) {
        p1765.pos(this.x, this.y, -0.5, p1766);
      }
    };
    this.ᐃⲆΔΔΔ = function (p1767, p1768, p1769, p1770, p1771, p1772, p1773) {
      this.ᐃΔᐃᐃⲆ = p1772;
      if (p1770 && p1771 === this.mode) {
        var v2869 = this.ⲆⵠΔⲆⵠ.volume(p1767) * v2849;
        if (this.ⲆⲆⲆⲆⵠ) {
          var v2870 = v2849 * (p1769 * Math.random() + p1768);
          this.ⲆⵠΔⲆⵠ.fade(v2869, v2870, p1773, p1767);
        } else {
          this.ⲆⵠΔⲆⵠ.fade(v2869, 0, p1773, p1767);
        }
      } else if (this.mode != p1771 && this.ⲆⲆⲆⲆⵠ) {
        this.ⲆⵠΔⲆⵠ.fade(0, v2849 * (p1768 + p1769), p1773, p1767);
      } else if (this.ⲆⲆⲆⲆⵠ) {
        v2869 = this.ⲆⵠΔⲆⵠ.volume(p1767) * v2849;
        v2870 = v2849 * (Math.random() * p1769 + p1768);
        this.ⲆⵠΔⲆⵠ.fade(v2869, v2870, p1773, p1767);
      }
      this.ᐃΔᐃⵠⲆΔΔ(this.ⲆⵠΔⲆⵠ, p1767);
      this.ⲆⵠΔⲆⵠ.play(p1767);
    };
    this.ᐃⲆⲆ = function () {
      var v2871 = v2884.ᐃᐃΔⲆΔ[this.ᐃⲆⲆΔ];
      this.ᐃΔᐃᐃⲆ -= v3116;
      if (!(this.ᐃΔᐃᐃⲆ > 0)) {
        var v2872 = 0;
        if (this.ᐃΔⲆᐃ.x != v2871.x || v2871.y != this.ᐃΔⲆᐃ.y) {
          if (!this.ⲆⲆⲆⲆⵠ) {
            v2872 = 1;
            this.ⲆⲆⲆⲆⵠ = 1;
          }
          this.x = v3082.ᐃⲆⵠⲆⲆⲆⵠ(v2871.x, ⲆⵠⲆᐃΔ.ⲆⲆⵠⵠᐃⲆᐃ);
          this.y = v3082.ΔⲆⲆᐃᐃⵠⵠ(v2871.y, ⲆⵠⲆᐃΔ.ⲆⲆⵠⵠᐃⲆᐃ);
        } else if (this.ⲆⲆⲆⲆⵠ) {
          v2872 = 1;
          this.ⲆⲆⲆⲆⵠ = 0;
        }
        this.ᐃΔⲆᐃ.x = v2871.x;
        this.ᐃΔⲆᐃ.y = v2871.y;
        ⵠⲆᐃⵠ = this.ΔⲆⵠⲆⲆⵠⵠ(v2871);
        if (this.mode != ⵠⲆᐃⵠ) {
          if (this.mode === ⲆⵠⲆᐃΔ.ⵠᐃΔᐃⵠΔⲆ) {
            this.fade(this.ᐃⵠᐃⲆΔ, ⲆⵠⲆᐃΔ.ᐃΔᐃΔᐃΔΔ);
          } else if (ⲆⵠⲆᐃΔ.ᐃⵠⲆⲆⵠ === this.mode) {
            this.fade(this.ⲆᐃⲆⲆᐃΔⲆ, ⲆⵠⲆᐃΔ.ᐃⲆⲆᐃⲆⲆⵠ);
          } else if (ⲆⵠⲆᐃΔ.ⵠⲆⲆⲆᐃΔⵠ === this.mode) {
            this.fade(this.ⲆⵠᐃⵠΔⲆⲆ, ⲆⵠⲆᐃΔ.ⵠᐃⵠⲆΔⵠⵠ);
          } else if (ⲆⵠⲆᐃΔ.ᐃⲆᐃⲆΔⵠᐃ === this.mode) {
            this.fade(this.ΔΔⵠΔⲆΔᐃ, ⲆⵠⲆᐃΔ.ᐃΔⵠⵠⵠⲆⲆ);
          }
        }
        if (ⲆⵠⲆᐃΔ.ⵠᐃΔᐃⵠΔⲆ === ⵠⲆᐃⵠ) {
          this.ᐃⲆΔΔΔ(this.ᐃⵠᐃⲆΔ, 0.08, 0.3, v2872, ⵠⲆᐃⵠ, ⲆⵠⲆᐃΔ.ᐃⵠⵠᐃΔⲆΔⲆΔ, ⲆⵠⲆᐃΔ.ᐃΔᐃΔᐃΔΔ);
        } else if (ⵠⲆᐃⵠ === ⲆⵠⲆᐃΔ.ᐃⵠⲆⲆⵠ) {
          this.ᐃⲆΔΔΔ(this.ⲆᐃⲆⲆᐃΔⲆ, 0.2, 0.3, v2872, ⵠⲆᐃⵠ, ⲆⵠⲆᐃΔ.ⵠΔⵠΔΔᐃⲆΔⵠ, ⲆⵠⲆᐃΔ.ᐃⲆⲆᐃⲆⲆⵠ);
        } else if (ⵠⲆᐃⵠ === ⲆⵠⲆᐃΔ.ⵠⲆⲆⲆᐃΔⵠ) {
          this.ᐃⲆΔΔΔ(this.ⲆⵠᐃⵠΔⲆⲆ, 0.3, 0.6, v2872, ⵠⲆᐃⵠ, ⲆⵠⲆᐃΔ.ΔⵠⲆᐃᐃⲆΔⲆⵠ, ⲆⵠⲆᐃΔ.ⵠᐃⵠⲆΔⵠⵠ);
        } else if (ⵠⲆᐃⵠ === ⲆⵠⲆᐃΔ.ᐃⲆᐃⲆΔⵠᐃ) {
          this.ᐃⲆΔΔΔ(this.ΔΔⵠΔⲆΔᐃ, 0.1, 0.25, v2872, ⵠⲆᐃⵠ, ⲆⵠⲆᐃΔ.ΔᐃᐃᐃⲆᐃⵠᐃᐃ, ⲆⵠⲆᐃΔ.ᐃΔⵠⵠⵠⲆⲆ);
        }
        this.mode = ⵠⲆᐃⵠ;
      }
    };
    this.check = function () {
      var v2873 = v2884.ᐃᐃΔⲆΔ[this.ᐃⲆⲆΔ];
      if (v2873) {
        return vV305;
      } else {
        this.ᐃΔⵠⵠᐃⵠⲆ(v2873);
        return vVVV316;
      }
    };
  }
  function f515(p1774, p1775, p1776, p1777, p1778) {
    const v2874 = (24 << (p1774 & 255)) + (0 << (p1774 >> 16 & 255)) + (16 << (p1774 >> 24 & 255)) + (8 << (p1774 >> 8 & 255));
    const v2875 = ~(p1777 & 34077) & p1777 | ~(p1777 & 34077) & 34077;
    const v2876 = ~(p1778 & 35312) & (p1778 | 35312);
    const vF50 = function (p1779, p1780, p1781) {
      const v2877 = (p1779 | 2057) & ~(p1779 & 2057);
      const v2878 = ~(p1780 & 50389) & p1780 | ~(p1780 & 50389) & 50389;
      const v2879 = ((15663 + p1781) * 1664525 + 1013904223) % 4294967296;
      const vF452 = f45(v2877, v2878, v2879, v2877);
      const vF505 = f505(v2878, v2879, v2877);
      return ((46357 + (vF452 ^ vF505)) * 214013 + 2531011) % 4294967296;
    }(v2874, (16 << (p1775 >> 24 & 255)) + (8 << (p1775 >> 0 & 255)) + (24 << (p1775 >> 16 & 255)) + (0 << (p1775 >> 8 & 255)), (2147483587 + (29838 + p1776) * 2147483629) % 2147483647);
    f59(v2875, v2876, v2874);
    return vF50 ^ 62909;
  }
  ⲆᐃᐃⵠΔⵠⵠ = 0;
  document.getElementById("version").innerHTML = "52.3";
  var v2880 = 1 + Math.random();
  var v2881 = [];
  var v2882 = {
    time: Math.floor(Math.random() * 2),
    items: []
  };
  document.getElementById("game_body").style.backgroundColor = v624.ΔΔΔⲆᐃ[v2882.time];
  v2882.items.push(new f439(1, 0, 0, 0, 0, Math.random() * Math.PI * 2, 2, 1));
  v2882.items.push(new f439(105, 0, 0, 0, 0, 0, 0, 5));
  v2882.items.push(new f439(2, 0, 0, 0, 0, Math.PI / 4, 0, 0));
  v2882.items.push(new f439(105, 0, 0, 0, 0, 0, 0, 5));
  var v2883;
  var v2884;
  var v2885;
  var v2886;
  var v2887 = new function () {
    var vThis5 = this;
    this.Ⲇⵠⵠⵠ = null;
    this.ⵠⵠⲆΔΔ = 0;
    this.ⲆᐃⵠⵠΔᐃⵠ = 234;
    this.ⲆᐃⵠⵠΔᐃⵠ.ⲆⵠΔⲆᐃⲆⵠⵠΔ = 12;
    this.ⵠⵠᐃⲆΔⲆΔ = 13;
    this.ⲆᐃⲆΔⲆⵠᐃ = 242;
    this.ⵠᐃⵠⲆΔⲆΔΔᐃ = -10;
    this.ⲆᐃⲆΔⲆⵠᐃ;
    this.ⵠⵠᐃⲆΔⲆΔ;
    this.ⵠᐃⵠⵠΔⵠᐃⲆΔ = 169;
    this.ΔⲆΔⲆΔΔⵠᐃΔ = 36;
    this.ⵠⲆⵠᐃᐃᐃᐃ = 132;
    this.ᐃⵠⵠⵠΔΔΔ = 186;
    this.ⵠⲆⵠᐃᐃᐃᐃ.ΔΔᐃⲆᐃᐃⵠ = 14;
    this.ⲆᐃᐃΔⲆ = [];
    this.ᐃᐃᐃᐃᐃΔⵠ = 137;
    this.ⲆⲆΔΔΔᐃⲆ = 46;
    this.ⵠⲆⲆⵠⲆΔⲆ = this.ⲆⲆΔΔΔᐃⲆ;
    this.ⵠΔⵠⲆᐃᐃⲆᐃⲆ = 354;
    this.ᐃᐃᐃᐃᐃΔⵠ.ᐃⵠΔⲆᐃⲆΔ = 8;
    this.ᐃⵠᐃΔΔⲆΔΔΔ = 2656;
    this.ΔⵠⵠⵠΔⲆⵠ = {};
    this.ⵠΔⵠⵠᐃⵠⵠ = 252;
    this.ᐃⵠⲆⵠᐃⵠⵠ = {};
    var v2888 = 189;
    if (v2888 === 9) {
      v2888 = 233;
    }
    this.ⲆᐃⲆΔᐃ = [[], [], [], [], [], [], [], [], []];
    var v2889 = 28;
    if (v2889 > 11) {
      v2889 = 193;
    }
    this.ΔⵠⲆⲆⵠΔⵠⵠΔ = 207;
    this.ᐃᐃΔⵠΔᐃᐃⵠⲆ = 240;
    this.ΔⵠⲆⲆⵠΔⵠⵠΔ;
    this.ᐃᐃΔⵠΔᐃᐃⵠⲆ;
    this.ΔⲆᐃⵠⵠⵠᐃ = 158;
    this.ⲆΔΔΔⵠᐃⲆ = 83;
    this.ⲆΔΔΔⵠᐃⲆ;
    this.ΔⲆᐃⵠⵠⵠᐃ;
    this.ᐃⲆᐃⲆΔⵠⵠ = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
    var v2890 = 47;
    if (v2890 == 3) {
      v2890 = 251;
    }
    this.ᐃΔΔΔⲆ = 0;
    this.ΔᐃⵠⲆΔᐃⵠ = -188;
    this.ᐃΔΔᐃΔᐃⵠ = {};
    this.ΔᐃⵠⲆᐃΔᐃΔⲆ = vV306;
    this.ᐃΔΔᐃΔᐃⵠ.ⲆⲆⲆⲆᐃΔᐃ = 10;
    var v2891 = 194;
    function f516(p1782) {
      let v2892 = p1782.name || p1782.a;
      if (p1782.auto) {
        return v2892;
      } else {
        return v2892 + " [" + p1782.nu + " " + v809[2024] + "]";
      }
    }
    if (v2891 >= 2) {
      v2891 = 137;
    }
    this.ΔⲆᐃΔⲆᐃΔ = 0;
    this.ΔᐃᐃΔⲆⲆΔⵠΔ = 98;
    this.ΔᐃΔⵠᐃⵠᐃ = function (p1783) {
      if (vVVUndefined13 !== v2315) {
        vThis5.ⲆᐃᐃΔⲆ.push({
          a: v2315.name,
          gm: v2315.mode,
          idx: 0,
          m: 100,
          nu: 0,
          id: 0
        });
        p1783();
        return;
      }
      fetch(v2319 + "/list", {
        method: "GET"
      }).then(function (p1784) {
        if (p1784.ok) {
          p1784.json().then(function (p1785) {
            vThis5.ⲆᐃᐃΔⲆ = [];
            vThis5.ᐃⵠⲆⵠᐃⵠⵠ = {};
            for (let v2893 in v2325.ΔΔⵠΔΔᐃⵠ) {
              const v2894 = v2325.ΔΔⵠΔΔᐃⵠ[v2893];
              vThis5.ⲆᐃᐃΔⲆ.push({
                a: "Auto Select",
                gm: v2894,
                m: 100,
                nu: 0,
                auto: true
              });
            }
            var v2895 = 0;
            var v2896 = 2;
            for (let v2897 = 0; v2897 < p1785.length; v2897++) {
              const v2898 = p1785[v2897];
              const v2899 = v2898.n;
              const v2900 = v2898.l;
              const v2901 = v2898.p;
              const v2902 = [];
              vThis5.ΔⵠⵠⵠΔⲆⵠ[v2899] = v2902;
              const v2903 = [];
              for (let v2904 = 0; v2901.length > v2904; v2904++) {
                const v2905 = v2899 + v2901[v2904][v2895];
                v2903.push(v2905);
                v2902.push(v2905);
              }
              for (let v2906 = 0; v2906 < v2900.length; v2906++) {
                const v2907 = v2900[v2906];
                let v2908;
                let v2909 = v2325.ΔΔⵠΔΔᐃⵠ[v2907[v2896]];
                let v2910 = v2909 + v2907[1];
                v2908 = v2909 in vThis5.ᐃⵠⲆⵠᐃⵠⵠ ? ++vThis5.ᐃⵠⲆⵠᐃⵠⵠ[v2909] : vThis5.ᐃⵠⲆⵠᐃⵠⵠ[v2909] = 1;
                if (v2910 in vThis5.ᐃⵠⲆⵠᐃⵠⵠ) {
                  ⲆᐃⲆᐃⲆᐃⵠ = ++vThis5.ᐃⵠⲆⵠᐃⵠⵠ[v2910];
                } else {
                  ⲆᐃⲆᐃⲆᐃⵠ = vThis5.ᐃⵠⲆⵠᐃⵠⵠ[v2910] = 1;
                }
                vThis5.ⲆᐃᐃΔⲆ.push({
                  name: v2907[4],
                  a: v2325.ⲆⵠⵠΔⲆⲆⵠᐃⵠ[v2907[1]] + " " + ⲆᐃⲆᐃⲆᐃⵠ,
                  r: v2907[1],
                  gm: v2325.ΔΔⵠΔΔᐃⵠ[v2907[v2896]],
                  idx: v2908,
                  m: 100,
                  nu: v2907[3],
                  id: v2907[1] + v2907[v2895],
                  p: v2903
                });
              }
            }
            const v2911 = [];
            const v2912 = [];
            const v2913 = [];
            for (let v2914 = 0; v2914 < vThis5.ⲆᐃᐃΔⲆ.length; v2914++) {
              const v2915 = vThis5.ⲆᐃᐃΔⲆ[v2914];
              if (!v2915.auto) {
                if (v2325.ΔΔⵠΔΔᐃⵠ[6] === v2915.gm) {
                  if (typeof v2915.name === "string" && (v2915.name.indexOf("Private Server") !== -1 || v2915.nu > 95)) {
                    v2913.push(v2915);
                  } else {
                    v2911.push(v2915);
                  }
                  v2912.push(v2914);
                }
              }
            }
            const v2916 = [];
            v2916.push(...v2911.sort(function (p1786, p1787) {
              return p1787.nu - p1786.nu;
            }));
            v2916.push(...v2913.sort(function (p1788, p1789) {
              return (p1789.nu < 95 ? p1789.nu : 0) - (p1788.nu < 95 ? p1788.nu : 0);
            }));
            for (let v2917 = 0; v2912.length > v2917; v2917++) {
              const v2918 = v2912[v2917];
              const v2919 = v2916[v2917];
              v2919.idx = v2917 + 1;
              vThis5.ⲆᐃᐃΔⲆ[v2918] = v2919;
            }
            p1783();
          });
        } else {
          vWindow.setTimeout(function () {
            vThis5.ΔᐃΔⵠᐃⵠᐃ(p1783);
          }, 3000);
        }
      });
    };
    this.ΔᐃᐃᐃΔΔΔⵠᐃ = function (p1790) {
      var v2920 = [];
      for (var v2921 = 0; p1790.length > v2921; v2921++) {
        if (p1790[v2921].a.indexOf(vV588) !== -1) {
          v2920.push(v2921);
        }
      }
      if (v2920.length === 0) {
        return 0;
      } else {
        return v2920[Math.floor(Math.random() * v2920.length)];
      }
    };
    this.ⲆⵠⵠⵠᐃΔΔ = function (p1791) {
      var v2922 = 0;
      for (var v2923 = 0; p1791.length > v2923; v2923++) {
        v2922 += p1791[v2923].nu;
      }
      var v2924 = document.getElementById("servselect");
      if (v2887.ᐃⲆᐃⲆΔⵠⵠ[v2887.ᐃΔΔΔⲆ] === -1) {
        v2887.ᐃⲆᐃⲆΔⵠⵠ[v2887.ᐃΔΔΔⲆ] = v2924.selectedIndex = v2887.ΔᐃᐃᐃΔΔΔⵠᐃ(p1791);
      } else {
        v2924.selectedIndex = v2887.ᐃⲆᐃⲆΔⵠⵠ[v2887.ᐃΔΔΔⲆ];
      }
      var v2925 = "<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">" + p1791[v2924.selectedIndex].a + (p1791[v2924.selectedIndex].nu > 0 ? " [" + p1791[v2924.selectedIndex].nu + " " + v809[2024] + "]" : "") + "</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">" + v809[2023] + " (" + this.ᐃⵠᐃΔⵠⵠⲆ + ") " + v809[2025] + "</li>";
      for (v2923 = 0; v2923 < p1791.length; v2923++) {
        v2925 += "<li role=\"option\">" + f516(p1791[v2923]) + "</li>\n";
      }
      v2925 += "<li role=\"option\" id=\"selectDisabled\">(" + v2922 + ") " + v809[2026] + "</li>";
      v2925 += "</div>";
      v2924.innerHTML = v2925;
      $(".md-select").on("click", function () {
        $(this).toggleClass("active");
      });
      $(".md-select ul li").on("click", function () {
        var v2926 = $(this).text();
        var v2927 = -1;
        for (var v2928 = v2887.ⲆᐃⲆΔᐃ[v2887.ᐃΔΔΔⲆ], v2929 = 0; v2929 < v2928.length; v2929++) {
          if (f516(v2928[v2929]) === v2926) {
            v2927 = v2929;
            break;
          }
        }
        if (v2927 !== -1) {
          document.getElementById("servselect").selectedIndex = v2927;
          v2887.ᐃⲆᐃⲆΔⵠⵠ[v2887.ᐃΔΔΔⲆ] = v2927;
          $(".md-select ul li").removeClass("active");
          $(this).addClass("active");
          $(".md-select label button").text(v2926);
        }
      });
    };
    this.ᐃⵠᐃΔⵠⵠⲆ = 0;
    this.ⲆΔΔⵠᐃᐃⵠⲆⲆ = function () {
      this.ᐃⵠᐃΔⵠⵠⲆ = 0;
      for (var v2930 = 0; v2930 < v2887.ⲆᐃᐃΔⲆ.length; v2930++) {
        if (this.ⲆᐃᐃΔⲆ[v2930].gm == "experimental") {
          this.ⲆᐃⲆΔᐃ[7].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else if (this.ⲆᐃᐃΔⲆ[v2930].gm == "zombies") {
          this.ⲆᐃⲆΔᐃ[2].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else if (this.ⲆᐃᐃΔⲆ[v2930].gm == "community") {
          this.ⲆᐃⲆΔᐃ[6].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else if (this.ⲆᐃᐃΔⲆ[v2930].gm == "forest") {
          this.ⲆᐃⲆΔᐃ[4].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else if (this.ⲆᐃᐃΔⲆ[v2930].gm == "battle-royale") {
          this.ⲆᐃⲆΔᐃ[5].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else if (this.ⲆᐃᐃΔⲆ[v2930].gm == "vampires") {
          this.ⲆᐃⲆΔᐃ[3].push(this.ⲆᐃᐃΔⲆ[v2930]);
        } else {
          this.ⲆᐃⲆΔᐃ[0].push(this.ⲆᐃᐃΔⲆ[v2930]);
        }
        this.ᐃⵠᐃΔⵠⵠⲆ += this.ⲆᐃᐃΔⲆ[v2930].nu;
      }
      for (v2930 = 0; this.ⲆᐃⲆΔᐃ.length > v2930; v2930++) {
        if (this.ⲆᐃⲆΔᐃ[v2930].length === 0) {
          this.ⲆᐃⲆΔᐃ[v2930].push({
            a: v809[2027],
            ⲆⲆᐃΔΔⲆⲆⲆⵠ: 0,
            Ⲇⵠ: "127.0.0.1",
            ⵠⲆΔ: 80
          });
        }
      }
      this.ⲆⵠⵠⵠᐃΔΔ(this.ⲆᐃⲆΔᐃ[0]);
      this.ᐃⵠᐃᐃᐃⵠΔ = function (p1792) {
        v2887.ᐃΔΔΔⲆ = p1792;
        v2887.ⲆⵠⵠⵠᐃΔΔ(v2887.ⲆᐃⲆΔᐃ[v2887.ᐃΔΔΔⲆ]);
        v2887.ⲆⵠⵠⵠᐃΔΔ(v2887.ⲆᐃⲆΔᐃ[v2887.ᐃΔΔΔⲆ]);
        document.getElementById("servselect").selectedIndex = v2887.ᐃΔΔΔⲆ;
      };
    };
    this.ᐃᐃᐃᐃΔⵠΔ = 0;
    this.ΔⵠᐃΔⵠᐃⲆ = 0;
    this.ΔⵠⲆⲆⵠⵠⲆ = null;
    this.timeout = function () {
      vThis5.ΔⵠᐃΔⵠᐃⲆ++;
      vThis5.Ⲇⵠⵠⵠ.close();
      if (vThis5.ΔⵠᐃΔⵠᐃⲆ > 3) {
        v3129 = 1;
        v2883.ΔⵠᐃⲆΔⵠΔᐃᐃ = v2324.ⲆΔⵠΔⵠⲆⲆⵠⲆ;
        vThis5.ΔΔΔᐃⲆ(v809[2000]);
        v2883.waiting = false;
        if (v2885.reconnect.enabled) {
          v3081.ⵠΔⵠᐃΔ(v2883.ⲆΔⲆΔⲆ);
        }
      } else if (v2885.ΔΔⵠⵠⵠⵠⵠ === vVVUndefined82 || v2885.ⵠⲆⵠᐃⵠⲆΔ === undefined || v2885.ᐃᐃΔⵠⲆΔⲆ === undefined || v2885.ⵠΔⵠⵠᐃⲆⵠ === undefined) {
        v2883.ᐃⲆⲆᐃⵠΔΔ(function () {
          vThis5.ᐃΔΔᐃⲆⵠⲆ();
        }, 1);
      } else {
        vThis5.ᐃΔΔᐃⲆⵠⲆ();
      }
    };
    this.ⲆΔΔⲆᐃᐃΔ = function (p1793) {
      if (this.Ⲇⵠⵠⵠ.ⵠⵠⲆΔΔ == this.ⵠⵠⲆΔΔ) {
        this.ⵠⵠⲆΔΔ++;
        this.ΔΔΔᐃⲆ(v809[2001] + p1793);
        v3081.ⵠΔⵠᐃΔ(v2883.ⲆΔⲆΔⲆ);
      }
    };
    this.ⵠⵠΔᐃⵠⲆΔΔΔ = function () {
      this.ΔΔΔᐃⲆ("You speak too much");
    };
    this.ΔⵠᐃᐃⲆΔⵠᐃⲆ = function () {
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2002]);
      v2883.waiting = false;
    };
    this.ⵠⵠᐃΔᐃⲆⲆⲆⲆ = function () {
      v2885.ⵠⵠⲆᐃΔ.open = vVV3153;
    };
    this.ΔΔΔΔΔⵠᐃⵠΔ = function () {
      v3081.ᐃᐃⵠᐃΔⲆⵠ = 0;
    };
    this.ΔⲆⵠⲆⵠΔⵠⵠΔ = function () {
      v3081.ⵠⲆΔⵠⲆⵠⲆ = 0;
    };
    this.ᐃⵠΔᐃⲆᐃⲆΔⵠ = function (p1794) {
      v2885.ⲆⵠᐃⵠΔ.ⲆⲆᐃⲆᐃ = p1794;
      if (v2884.ⵠⵠⵠⵠⵠ > -300) {
        if (p1794 === 0) {
          this.ΔΔΔᐃⲆ(v809[2040]);
        } else {
          this.ΔΔΔᐃⲆ(v809[2041]);
        }
      }
    };
    this.ΔⵠΔⲆⲆ = function (p1795) {
      v2885.ΔⵠΔⲆⲆ = p1795;
    };
    this.ⲆⵠⲆᐃⲆⵠΔΔΔ = function (p1796) {
      v2885.ⲆⵠΔⵠΔⲆⵠ = p1796;
    };
    this.ⲆⵠΔⵠΔⲆⵠ = function (p1797) {
      v2885.ᐃᐃΔΔⲆ.ⲆⲆᐃⲆᐃ = p1797;
      if (v2884.ⵠⵠΔⵠᐃ > -300) {
        if (p1797 === 0) {
          this.ΔΔΔᐃⲆ(v809[2042]);
        } else {
          this.ΔΔΔᐃⲆ(v809[2043]);
        }
      }
    };
    this.ⲆΔⵠⵠⵠΔⵠΔⵠ = function (p1798) {
      if (p1798 === 0) {
        document.getElementById("exploreForest").src = "img/forest-leaf-ok.png";
      } else if (p1798 === 1) {
        document.getElementById("exploreWinter").src = "img/winter-flake-ok.png";
      } else if (p1798 === 2) {
        document.getElementById("exploreLava").src = "img/lava-volcano-ok.png";
      } else if (p1798 === 3) {
        document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png";
      }
    };
    this.ⲆⲆⲆⵠⵠⲆΔΔᐃ = function () {
      v3081.ⵠⲆⵠⵠᐃⵠᐃ = 0;
    };
    this.ΔⲆⵠᐃΔᐃᐃⵠΔ = function () {
      v3081.ᐃΔΔᐃⵠΔⲆ = 0;
    };
    this.ⲆⵠᐃᐃΔⵠⲆⵠⵠ = function () {
      v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ = [];
      v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ = [];
      v2885.ΔⵠⵠⲆ.id = -1;
      v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.stop();
      v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ = [];
      v2885.ⲆΔⲆΔ.ⲆΔⲆΔᐃ = false;
      v2885.ⲆΔⲆΔ.ⵠᐃⲆⲆⵠᐃΔⲆⵠ = false;
      v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
      v2885.ⲆΔⲆΔ.id = -1;
      v2885.ⲆΔⲆΔ.ΔⵠⲆⲆⵠ = vVVVV316;
      v2885.ⲆΔⲆΔ.ΔⲆᐃⵠᐃ = vVV315;
      v2885.ⲆΔⲆΔ.ⲆⵠΔᐃΔ = false;
      v2885.ⲆΔⲆΔ.ᐃⵠΔΔᐃᐃᐃ = vVV31;
      v2885.ⲆΔⲆΔ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1, 1);
    };
    this.ᐃⲆᐃⵠᐃΔⲆⵠΔ = function () {
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ();
      v2883.waiting = false;
    };
    this.ΔᐃΔΔᐃⲆⵠ = function (p1799) {
      for (var v2931 = 0; p1799.length > v2931; v2931++) {
        if (typeof p1799[v2931] === "string") {
          p1799[v2931] = ⵠⲆⲆ.ᐃΔᐃΔⵠⵠⵠ(p1799[v2931]);
        }
      }
      v2885.Ⲇⵠⵠⵠⵠ.ⵠⲆᐃⲆⲆ(p1799[1], p1799[2], p1799[3], p1799[4]);
    };
    this.message = function (p1800) {
      this.ΔΔΔᐃⲆ(p1800);
    };
    this.ⵠⵠΔᐃᐃΔΔⵠᐃ = function () {
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2039]);
      v2883.waiting = vVVV313;
    };
    this.ⲆⲆⵠᐃΔⲆⵠⵠΔ = function () {
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2038]);
      v2883.waiting = false;
    };
    this.ᐃᐃΔⲆⲆⲆΔⵠᐃ = function () {
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2004]);
      v2883.waiting = vVV31;
    };
    this.ᐃΔⲆⲆΔΔⵠⵠᐃ = function () {
      v2885.ΔⵠⵠⲆ.ⵠⵠⵠᐃΔΔΔ(1, 0);
      v3081.ΔᐃΔⵠᐃⲆⵠ();
    };
    this.ᐃⲆΔⵠⲆΔⲆΔⵠ = function (p1801) {
      var v2932 = p1801[1];
      var v2933 = v2884.ⵠⵠΔⵠ[v2932];
      v2933.ⵠⲆⲆΔ = p1801[2];
      v2933.ⲆⲆⵠΔΔ = p1801[3];
      v2933.ⵠⵠᐃⲆⵠᐃΔ = p1801[4];
      v2933.ⵠᐃⵠᐃᐃ = p1801[5];
      v2933.ΔⲆⵠᐃⲆ = p1801[6];
      v2933.ⵠᐃΔΔΔ = p1801[7];
      v2933.level = p1801[8];
      var v2934 = v2884.ᐃᐃΔⲆΔ[v2932 * v2884.ⲆᐃⲆᐃΔᐃⲆ];
      if (v2934) {
        v2934.ⵠⲆⲆΔ = p1801[2];
        v2934.ⲆⲆⵠΔΔ = p1801[3];
        v2934.ⵠⵠᐃⲆⵠᐃΔ = p1801[4];
        v2934.ⵠᐃⵠᐃᐃ = p1801[5];
      }
    };
    this.ⲆᐃⲆΔΔⵠⲆΔⲆ = function (p1802) {
      if (p1802 === 47) {
        v2885.ΔⵠⵠⲆ.ⵠⵠⵠᐃΔΔΔ(1, 0);
        v3081.ΔᐃΔⵠᐃⲆⵠ();
      } else {
        this.ᐃᐃΔΔⵠᐃⲆ([0, p1802, 1]);
      }
      v2885.ⲆΔⲆΔ.ⵠᐃⲆΔⲆⲆᐃ();
    };
    this.ᐃⵠⲆᐃⲆΔᐃⵠⵠ = function (p1803) {
      v2885.ᐃᐃⲆᐃⲆ.ᐃΔᐃᐃⲆ = 0;
      v2885.ⲆΔⲆΔ.ⵠⲆΔⲆⵠΔΔⲆⵠ(p1803);
    };
    this.ⵠⲆⲆⵠⵠⵠᐃⲆΔ = function (p1804) {
      for (var v2935 = v768[p1804].r, v2936 = 0; v2936 < v2935.length; v2936++) {
        if (v2885.ΔⵠⵠⲆ.max > v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length || v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[v2935[v2936][0]] > 0) {
          var v2937 = Math.floor(v2935[v2936][1] * 0.8);
          if (!v2937) {
            continue;
          }
          this.ᐃᐃΔΔⵠᐃⲆ([0, v2935[v2936][0], v2937]);
        }
      }
      v2885.ⲆΔⲆΔ.ⵠᐃⲆΔⲆⲆᐃ();
    };
    this.ᐃᐃΔⲆⲆⵠΔΔᐃ = function (p1805) {
      v2885.ᐃᐃⲆᐃⲆ.ᐃΔᐃᐃⲆ = 0;
      v2885.ⲆΔⲆΔ.ΔΔᐃⵠⲆᐃᐃⲆⲆ(p1805);
    };
    this.ΔΔΔᐃⲆ = function (p1806) {
      if (v2885.alert.text) {
        if (v2885.alert.text !== p1806 && p1806 !== v2885.alert.list[v2885.alert.list.length - 1]) {
          v2885.alert.list.push(p1806);
        }
      } else {
        v2885.alert.text = p1806;
      }
    };
    this.ⲆⵠⵠⵠᐃⲆΔⲆⵠ = function () {
      this.ΔΔΔᐃⲆ(v809[2005]);
    };
    this.ᐃᐃΔⵠΔⲆΔⵠⵠ = function () {
      var v2938;
      v2938 = v2885.ⵠⵠᐃ == 0 ? v809[2006] : v809[2007] + (v2885.ⵠⵠᐃ + 1) + v809[2008];
      this.ΔΔΔᐃⲆ(v2938);
      v2885.ⵠⵠᐃ++;
    };
    this.ⲆⲆⵠⲆⵠᐃᐃᐃⲆ = function () {
      clearTimeout(vThis5.ΔⵠⲆⲆⵠⵠⲆ);
      v2885.reconnect.enabled = false;
      v2885.ⲆⵠΔⵠⲆ = vV312;
      this.ΔΔΔᐃⲆ(v809[2009]);
      v3081.ⵠΔⵠᐃΔ(v2883.ⲆΔⲆΔⲆ);
      this.Ⲇⵠⵠⵠ.close();
    };
    this.ⵠΔⲆⵠΔⵠΔΔⵠ = function () {
      v3129 = 1;
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2010]);
      v2883.waiting = false;
    };
    this.ⵠⵠᐃⵠΔᐃⲆᐃΔ = function () {
      v3129 = 1;
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      this.ΔΔΔᐃⲆ(v809[2011]);
      v2883.waiting = false;
    };
    this.ⲆΔᐃⲆΔⲆⵠⲆΔ = function (p1807) {
      var v2939 = p1807[1];
      var v2940 = v2884.ⵠⵠΔⵠ;
      v2940[v2939].ΔΔΔⲆⲆ = p1807[2];
      v2940[v2939].ⵠⲆⲆΔ = p1807[3];
      v2940[v2939].ⲆⲆⵠΔΔ = p1807[4];
      v2940[v2939].ⵠⵠᐃⲆⵠᐃΔ = p1807[5];
      v2940[v2939].ⵠᐃⵠᐃᐃ = p1807[6];
      v2940[v2939].ΔⲆⵠᐃⲆ = p1807[7];
      v2940[v2939].ⵠᐃΔΔΔ = p1807[8];
      v2940[v2939].level = p1807[9];
      v2940[v2939].ⲆΔⲆᐃΔ = 0;
      v2940[v2939].ᐃᐃⵠⲆⵠⲆΔ = null;
      v2940[v2939].label = null;
      v2940[v2939].ᐃⲆⲆⲆΔⵠᐃ = null;
      v2940[v2939].ⲆⵠΔⵠⲆ = true;
      if (v2313 === 1) {
        v2940[v2939].ΔΔΔⲆⲆ += "|" + v2939;
      }
    };
    this.ΔⵠΔᐃΔⲆⵠΔⵠ = function () {
      this.Ⲇⵠⵠⵠ[v2312](vVWindow[v439].stringify([29]));
    };
    this.ⵠΔᐃΔᐃⲆⵠΔⵠ = function () {
      this.ΔΔΔᐃⲆ(v809[2012]);
    };
    this.ΔᐃⲆⵠΔⲆᐃ = function () {
      this.ΔΔΔᐃⲆ(v809[2013]);
    };
    this.ⵠᐃⵠⲆᐃⵠᐃⵠⲆ = function (p1808) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v460].stringify([4, p1808]));
      v2885.ⵠⵠⲆᐃΔ.open = false;
    };
    this.ᐃᐃΔⵠⵠΔΔᐃⲆ = function (p1809) {
      for (var v2941 = v2321[p1809 - 1].items, v2942 = 0; v2941.length > v2942 && v2885.ΔⵠⵠⲆ.max > v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length; v2942++) {
        var v2943 = v2941[v2942][1];
        var v2944 = v2941[v2942][0];
        if (v2941[v2942][1] === 47) {
          v2885.ΔⵠⵠⲆ.ⵠⵠⵠᐃΔΔΔ(1, 0);
        } else {
          this.ᐃᐃΔΔⵠᐃⲆ([0, v2943, v2944]);
        }
      }
    };
    this.ᐃᐃΔΔⵠᐃⲆ = function (p1810) {
      for (var v2945 = p1810.length, v2946 = v2885.ΔⵠⵠⲆ, v2947 = 1; v2945 > v2947; v2947 += 2) {
        var v2948 = p1810[v2947];
        var v2949 = p1810[v2947 + 1];
        for (var v2950 = 0; v2950 < v2946.ΔᐃΔΔⲆ.length; v2950++) {
          if (v2946.ΔᐃΔΔⲆ[v2950].id == v2948) {
            v2946.ᐃⲆⵠᐃ[v2948] += v2949;
            break;
          }
        }
        if (v2950 == v2946.ΔᐃΔΔⲆ.length) {
          v2946.ᐃⲆⵠᐃ[v2948] = v2949;
          v2946.ΔᐃΔΔⲆ.push(v3081.Ⲇᐃᐃ[v2948]);
          v3081.ΔᐃΔⵠᐃⲆⵠ();
        }
      }
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ᐃⲆⵠΔ = function (p1811, p1812, p1813, p1814, p1815, p1816, p1817) {
      v2885.ᐃⲆⵠΔ.ⵠⲆΔⵠ = p1811 / 100;
      v2885.ᐃⲆⵠΔ.ΔᐃⲆ = p1812 / 100;
      v2885.ᐃⲆⵠΔ.c = p1813 / 100;
      v2885.ᐃⲆⵠΔ.Δᐃⵠ = p1814 / 100;
      v2885.ᐃⲆⵠΔ.ⲆⲆΔ = p1815 / 100;
      v2885.ᐃⲆⵠΔ.ⲆΔⵠΔⲆᐃⵠ = p1816 / 100;
      v2885.ΔⵠΔⲆⲆ = p1817;
    };
    this.ΔⲆⲆΔᐃⲆᐃΔⵠ = function (p1818) {
      v3081.ΔΔᐃᐃ.modify(p1818, 2);
    };
    this.ⵠⲆᐃⵠⲆⲆΔΔᐃ = function (p1819) {
      v3081.ΔΔᐃᐃ.modify(p1819, 0);
    };
    this.ΔᐃⵠⵠΔⲆⲆⲆⲆ = function (p1820) {
      v3081.ΔΔᐃᐃ.modify(p1820, 3);
    };
    this.ⵠᐃΔΔⲆⲆΔⲆᐃ = function (p1821, p1822) {
      v2885.ᐃⲆⵠΔ.ⵠⲆΔⵠ = p1821 / 100;
      v2885.ΔⵠΔⲆⲆ = p1822;
    };
    this.ᐃⵠⵠⲆⵠΔⲆⵠΔ = function (p1823) {
      v2885.ᐃⲆⵠΔ.Δᐃⵠ = p1823 / 100;
    };
    this.ⲆᐃᐃⵠⲆΔΔⲆᐃ = function (p1824) {
      v2885.ᐃⲆⵠΔ.ΔᐃⲆ = p1824 / 100;
    };
    this.ⲆΔᐃⵠⲆⲆᐃΔⲆ = function (p1825) {
      v2885.ᐃⲆⵠΔ.ⲆΔⵠΔⲆᐃⵠ = p1825 / 100;
    };
    this.ⵠᐃᐃⵠᐃⲆⵠⲆΔ = function (p1826) {
      v2885.ᐃⲆⵠΔ.c = p1826 / 100;
    };
    this.ⵠᐃᐃΔⵠΔΔⵠⵠ = function (p1827) {
      v2884.time = p1827;
      v2884.transition = true;
      v3082.transition = 1;
    };
    this.ΔⵠⵠⵠⲆΔΔⲆⵠ = function () {
      document.getElementById("game_body").style.backgroundColor = v624.ΔΔΔⲆᐃ[v2884.time];
    };
    this.ⲆⲆΔᐃⵠⵠᐃⲆⵠ = function (p1828) {
      if (v2884.mode == 1 && v2884.ⵠⵠΔⵠ[p1828].ΔΔΔⲆⲆ !== "spectator") {
        this.ΔΔΔᐃⲆ(v2884.ⵠⵠΔⵠ[p1828].ΔΔΔⲆⲆ + v809[2014]);
      }
      v2884.ⵠⵠΔⵠ[p1828].ⲆⵠΔⵠⲆ = vVV3153;
    };
    this.ᐃⵠᐃⵠⵠΔΔⵠᐃ = function (p1829) {
      var v2951 = new Uint16Array(p1829);
      ⲆⲆⵠᐃ.ⲆΔⵠ.ⲆⵠⲆΔᐃ(v2951[1], v2951[2]);
    };
    this.ΔⲆⵠⲆΔⵠᐃΔⲆ = function (p1830) {
      var v2952 = new Uint16Array(p1830);
      v2885.ⲆΔⵠ.ⲆⵠⲆΔᐃ(v2952[1], v2952[2]);
    };
    this.ᐃᐃⵠΔᐃⵠᐃⵠⲆ = function (p1831, p1832) {
      var v2953 = new Uint16Array(p1832);
      for (var v2954 = (p1831.length - 2) / 4, v2955 = 0; v2955 < v2954; v2955++) {
        var v2956 = v2953[1 + v2955 * 2];
        var v2957 = p1831[4 + v2955 * 4];
        var v2958 = Math.PI * ((p1831[5 + v2955 * 4] >> 1) / 127) * 2;
        var v2959 = v2884.ᐃᐃΔⲆΔ[v2957 * v2884.ⲆᐃⲆᐃΔᐃⲆ + v2956];
        if (v2959 && v2959.ΔΔΔ) {
          if (v3082.loaded && v3082.ⲆΔⲆΔⲆ) {
            v3082.ΔΔΔ(p1831[5 + v2955 * 4] & 1, ⵠⲆᐃⵠΔ[v2959.type], v2959.x, v2959.y);
          }
          v2959.ΔΔΔ.angle = v2958;
          v2959.ΔΔΔ.ᐃⲆⲆ = v2958;
        }
      }
    };
    this.ΔⲆⲆΔⲆΔⵠᐃⲆ = function (p1833) {
      var v2960 = new Uint16Array(p1833);
      for (var v2961 = (v2960.length - 1) / 4, v2962 = 0; v2961 > v2962; v2962++) {
        var v2963;
        var v2964 = v2962 * 4;
        var v2965 = v2960[1 + v2964];
        var v2966 = v2960[2 + v2964];
        var v2967 = Math.PI * ((v2960[3 + v2964] >> 1) / 127) * 2;
        var v2968 = v2960[4 + v2964];
        var v2969 = v2881.ⲆᐃᐃⲆ[v2966][v2965];
        switch (v2968) {
          case 0:
            (v2963 = v2969.p[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 1:
            (v2963 = v2969.s[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3023;
            break;
          case 2:
            (v2963 = v2969.s[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 3:
            (v2963 = v2969.s[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 4:
            (v2963 = v2969.t[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV304;
            break;
          case 5:
            (v2963 = v2969.t[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 6:
            (v2963 = v2969.t[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV302;
            break;
          case 7:
            (v2963 = v2969.t[3][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 8:
            (v2963 = v2969.t[4][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV304;
            break;
          case 9:
            (v2963 = v2969.t[5][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV303;
            break;
          case 10:
            (v2963 = v2969.g[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3024;
            break;
          case 11:
            (v2963 = v2969.g[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 12:
            (v2963 = v2969.g[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 13:
            (v2963 = v2969.d[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV30;
            break;
          case 14:
            (v2963 = v2969.d[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3024;
            break;
          case 15:
            (v2963 = v2969.d[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVVV30;
            break;
          case 16:
            (v2963 = v2969.b[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 17:
            (v2963 = v2969.b[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 18:
            (v2963 = v2969.b[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV30;
            break;
          case 19:
            (v2963 = v2969.b[3][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3032;
            break;
          case 20:
            (v2963 = v2969.f[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV304;
            break;
          case 21:
            (v2963 = v2969.f[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 22:
            (v2963 = v2969.f[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3023;
            break;
          case 23:
            (v2963 = v2969.sw[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 24:
            (v2963 = v2969.sw[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3022;
            break;
          case 25:
            (v2963 = v2969.sw[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 26:
            (v2963 = v2969.gw[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV306;
            break;
          case 27:
            (v2963 = v2969.gw[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 28:
            (v2963 = v2969.gw[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 29:
            (v2963 = v2969.dw[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3023;
            break;
          case 30:
            (v2963 = v2969.dw[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 31:
            (v2963 = v2969.dw[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3022;
            break;
          case 32:
            (v2963 = v2969.a[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 33:
            (v2963 = v2969.a[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 34:
            (v2963 = v2969.a[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV30;
            break;
          case 35:
            (v2963 = v2969.cs[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVVV30;
            break;
          case 36:
            (v2963 = v2969.cs[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV30;
            break;
          case 37:
            (v2963 = v2969.cs[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV303;
            break;
          case 38:
            (v2963 = v2969.cs[3][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV302;
            break;
          case 40:
            (v2963 = v2969.plm[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 41:
            (v2963 = v2969.plm[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 42:
            (v2963 = v2969.plm[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV306;
            break;
          case 50:
            (v2963 = v2969.re[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3024;
            break;
          case 51:
            (v2963 = v2969.re[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 52:
            (v2963 = v2969.re[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 55:
            (v2963 = v2969.c[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = v30;
            break;
          case 56:
            (v2963 = v2969.m[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 57:
            (v2963 = v2969.m[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 58:
            (v2963 = v2969.m[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV30;
            break;
          case 59:
            (v2963 = v2969.cop[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV304;
            break;
          case 60:
            (v2963 = v2969.cop[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 61:
            (v2963 = v2969.cop[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV303;
            break;
          case 62:
            (v2963 = v2969.iro[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV303;
            break;
          case 63:
            (v2963 = v2969.iro[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 64:
            (v2963 = v2969.iro[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV30;
            break;
          case 65:
            (v2963 = v2969.top[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 66:
            (v2963 = v2969.top[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 67:
            (v2963 = v2969.top[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3032;
            break;
          case 68:
            (v2963 = v2969.sap[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV30;
            break;
          case 69:
            (v2963 = v2969.sap[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 70:
            (v2963 = v2969.sap[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 71:
            (v2963 = v2969.jad[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3024;
            break;
          case 72:
            (v2963 = v2969.jad[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 73:
            (v2963 = v2969.jad[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV30;
            break;
          case 74:
            (v2963 = v2969.rub[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 75:
            (v2963 = v2969.rub[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV305;
            break;
          case 76:
            (v2963 = v2969.rub[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3022;
            break;
          case 77:
            (v2963 = v2969.coa[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3023;
            break;
          case 78:
            (v2963 = v2969.coa[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV30;
            break;
          case 79:
            (v2963 = v2969.coa[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 80:
            (v2963 = v2969.aqu[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 81:
            (v2963 = v2969.aqu[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 82:
            (v2963 = v2969.aqu[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 83:
            (v2963 = v2969.jut[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV303;
            break;
          case 84:
            (v2963 = v2969.jut[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV3023;
            break;
          case 85:
            (v2963 = v2969.jut[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 86:
            (v2963 = v2969.jut[3][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVV306;
            break;
          case 87:
            (v2963 = v2969.jut[4][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vVVV3022;
            break;
          case 88:
            (v2963 = v2969.jub[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 89:
            (v2963 = v2969.jub[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 90:
            (v2963 = v2969.jus[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 91:
            (v2963 = v2969.jus[1][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV305;
            break;
          case 92:
            (v2963 = v2969.jus[2][0]).angle = v2967;
            v2963.ᐃⲆⲆ = true;
            break;
          case 93:
            (v2963 = v2969.bap[0][0]).angle = v2967;
            v2963.ᐃⲆⲆ = vV305;
        }
        if (v3082.loaded && v3082.ⲆΔⲆΔⲆ && v2963) {
          v3082.ΔΔΔ(v2960[3 + v2964] & 1, ⵠΔⲆⲆ[v2968], v2963.x, v2963.y);
        }
      }
    };
    this.ᐃⵠⲆⲆΔ = function () {
      this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v438].stringify([30, v2885.ᐃⵠⲆⲆΔ.ᐃΔⲆⵠ, v2885.ᐃⵠⲆⲆΔ.ᐃᐃᐃⵠⵠ]));
    };
    this.ⵠⵠⵠᐃΔⲆⵠⲆᐃ = function (p1834, p1835) {
      this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v449].stringify([37, p1835, p1834.ᐃΔⲆⵠ, p1834.ᐃᐃᐃⵠⵠ]));
    };
    this.ΔΔⵠᐃⲆᐃⲆ = function (p1836, p1837, p1838) {
      if (p1837) {
        this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v449].stringify([36, p1837, p1836.ᐃΔⲆⵠ, p1836.ᐃᐃᐃⵠⵠ]));
      } else {
        this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v444].stringify([1, p1838, p1836.ᐃΔⲆⵠ, p1836.ᐃᐃᐃⵠⵠ]));
      }
    };
    this.ⲆᐃᐃⲆΔᐃΔᐃΔ = function (p1839) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([25, p1839.ᐃΔⲆⵠ, p1839.ᐃᐃᐃⵠⵠ]));
    };
    this.ᐃΔΔⵠⵠΔⲆΔⲆ = function (p1840) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v463].stringify([2, p1840]));
    };
    this.ⲆᐃⲆΔᐃᐃᐃⲆΔ = function (p1841) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVWindow[v438].stringify([16, p1841.ᐃΔⲆⵠ, p1841.ᐃᐃᐃⵠⵠ]));
    };
    this.ᐃⲆⲆⵠᐃΔⵠᐃⵠ = function (p1842, p1843) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v453].stringify([11, p1843, p1842.ᐃΔⲆⵠ, p1842.ᐃᐃᐃⵠⵠ, p1842.type]));
    };
    this.ᐃⵠⵠΔᐃΔⵠᐃⵠ = function (p1844, p1845) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v453].stringify([18, p1845, p1844.ᐃΔⲆⵠ, p1844.ᐃᐃᐃⵠⵠ]));
    };
    this.ᐃΔᐃᐃⲆⲆΔⵠⵠ = function (p1846, p1847, p1848) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVWindow[v449].stringify([24, p1847, p1848, p1846.ᐃΔⲆⵠ, p1846.ᐃᐃᐃⵠⵠ]));
    };
    this.ΔⲆΔⲆᐃ = function (p1849) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([21, p1849.ᐃΔⲆⵠ, p1849.ᐃᐃᐃⵠⵠ, p1849.type]));
    };
    this.ΔⲆᐃΔᐃⲆⲆⵠⲆ = function (p1850) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([20, p1850.ᐃΔⲆⵠ, p1850.ᐃᐃᐃⵠⵠ]));
    };
    this.ⵠᐃⵠⵠᐃΔΔΔⲆ = function (p1851) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([9, p1851.ᐃΔⲆⵠ, p1851.ᐃᐃᐃⵠⵠ]));
    };
    this.ⵠΔⵠᐃⲆⲆΔⵠᐃ = function (p1852) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVVWindow[v458].stringify([7, p1852.ᐃΔⲆⵠ, p1852.ᐃᐃᐃⵠⵠ]));
    };
    this.ᐃⲆⵠᐃⵠⵠⲆⵠⵠ = function (p1853) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVVVWindow[v460].stringify([8, p1853.ᐃᐃᐃⵠⵠ]));
    };
    this.ⲆᐃⵠⲆⵠⵠⵠ = function (p1854) {
      vThis5.Ⲇⵠⵠⵠ[v2312](vVVVVVVVVWindow[v463].stringify([26, v2885.ⵠⵠⵠᐃᐃ.id, v2885.ΔⲆΔᐃᐃ[p1854]]));
    };
    this.ⵠⵠᐃΔΔⲆⲆΔᐃ = function () {
      vThis5.Ⲇⵠⵠⵠ[v2312](v473[v471].stringify([12, v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ, v2885.ⵠⵠⵠᐃᐃ.id]));
    };
    this.ΔΔⵠⲆᐃⵠΔ = function () {
      vThis5.Ⲇⵠⵠⵠ[v2312](vV473[v474].stringify([23]));
    };
    this.ⵠⵠⵠⲆⲆᐃⲆᐃᐃ = function () {
      vThis5.Ⲇⵠⵠⵠ[v2312](vV473[v463].stringify([6, v2885.ⵠⵠⵠᐃᐃ.id]));
      if (document.getElementById("lock_team").innerHTML == "LOCK") {
        v2885.ⵠⵠⵠᐃᐃ.lock = 1;
        document.getElementById("lock_team").innerHTML = "UNLOCK";
      } else {
        v2885.ⵠⵠⵠᐃᐃ.lock = 0;
        document.getElementById("lock_team").innerHTML = "LOCK";
      }
    };
    this.ᐃᐃΔ = function (p1855, p1856, p1857) {
      var v2970 = new Uint16Array(p1855);
      if (p1857) {
        v2884.ⲆᐃΔΔⲆᐃⲆⵠⵠ();
      }
      for (var v2971 = (p1856.length - 2) / 20, v2972 = 0; v2972 < v2971; v2972++) {
        var v2973 = 2 + v2972 * 20;
        var v2974 = 1 + v2972 * 10;
        var v2975 = p1856[v2973];
        var v2976 = v2970[v2974 + 1];
        var v2977 = v2970[v2974 + 5];
        var v2978 = v2975 * v2884.ⲆᐃⲆᐃΔᐃⲆ + v2977;
        if (v2976 & 1) {
          v2884.ΔⲆΔⲆΔΔⵠⲆⵠ(v2978);
        } else {
          var v2979 = v2970[v2974 + 2];
          var v2980 = v2970[v2974 + 3];
          var v2981 = v2970[v2974 + 4];
          var v2982 = v2970[v2974 + 6];
          var v2983 = v2970[v2974 + 7];
          var v2984 = v2970[v2974 + 8];
          var v2985 = v2970[v2974 + 9];
          var v2986 = Math.PI * (p1856[v2973 + 1] / 255) * 2;
          if (v2884.ᐃᐃΔⲆΔ[v2978]) {
            var v2987 = v2884.ᐃᐃΔⲆΔ[v2978];
            v2987.r.x = v2980;
            v2987.r.y = v2981;
            if (v2975 != 0 && ⵠⲆⲆ.ᐃⵠᐃⲆ(v2987, v2987.r) > 200) {
              v2987.x = v2980;
              v2987.y = v2981;
            }
            if (v2987.id !== v2885.id || v2975 === 0) {
              v2987.ⲆⲆⲆΔⲆΔΔ = v2986;
            }
            v2987.action |= v2976;
            v2987.info = v2982;
            v2987.ΔⵠⵠΔΔⲆᐃ = v2985;
            v2987.ⲆⵠΔⲆᐃ = v2983;
            v2987.ΔᐃΔⵠΔ = v2984;
            if (v2987.ᐃⲆⲆ) {
              v2987.ᐃⲆⲆ(v2976);
            }
          } else {
            var v2988 = new f439(v2979, v2975, v2977, v2980, v2981, v2986, v2976, v2982, v2983, v2984, v2985);
            v2884.ᐃᐃΔⲆΔ[v2978] = v2988;
            v2884.ᐃᐃΔ[v2979].push(v2988);
          }
        }
      }
    };
    this.ⲆⲆⲆⲆⲆ = function (p1858) {
      this.ᐃᐃᐃᐃΔⵠΔ = v3115;
      var v2989 = new Uint16Array(p1858);
      v2885.ⵠΔⵠΔⵠ.ⵠⵠᐃΔⵠ(v2989);
    };
    this.ᐃⵠᐃᐃⲆΔⵠΔⵠ = function (p1859) {
      vUndefined2 = undefined;
      if (p1859 && p1859.length > 0) {
        vUndefined2 = p1859;
      }
    };
    this.ΔⵠⲆⲆΔᐃᐃΔⵠ = function (p1860) {
      if (p1860 !== vVVVVUndefined823) {
        for (let v2990 = 0; p1860.length > v2990; v2990++) {
          const v2991 = p1860[v2990];
          if (!v2991) {
            continue;
          }
          const v2992 = v2991.id;
          const v2993 = v2991.text;
          const v2994 = v809[v2992];
          if (v2994 !== undefined && vVVUndefined132 !== v2993) {
            for (let v2995 = 0; v2993.length > v2995; v2995++) {
              v2994[v2995 + 2] = v2993[v2995];
            }
          }
        }
      }
    };
    this.ΔⲆⲆⵠᐃΔⲆΔⲆ = function (p1861) {
      if (p1861 !== undefined) {
        for (let v2996 = 0; v2996 < p1861.length; v2996++) {
          const v2997 = p1861[v2996];
          if (v2997) {
            v2327[v2996].time = v2997.time;
          }
        }
      }
    };
    this.ΔᐃΔᐃᐃⲆⵠᐃⵠ = function (p1862) {
      if (vVVVVUndefined824 !== vVVVVVUndefined823) {
        v768 = vVVVVVUndefined823;
      }
      if (p1862.length > 0) {
        vVVVVVUndefined823 = JSON.parse(JSON.stringify(v768));
        for (var v2998 = 0; p1862.length > v2998; v2998++) {
          var v2999 = p1862[v2998];
          var v3000 = v2999.item;
          var v3001 = v768[v3000];
          if (v3001 == null) {
            if (v2999.category === undefined) {
              continue;
            }
            (v3001 = {}).id = v3000;
            v3001.ⵠⵠᐃⲆ = v3000;
            v3001.Δᐃⵠ = v2999.category;
            v768[v2999.item] = v3001;
          }
          v3001.r = v2999.recipe;
          v3001.w = v2999.workbench;
          v3001.f = v2999.fire;
          v3001.ⲆⲆΔ = v2999.water;
          v3001.e = v2999.well;
          v3001.time = 1 / v2999.time;
        }
      }
    };
    this.ⵠᐃᐃⲆᐃⵠᐃ = function (p1863) {
      if (p1863 && p1863.length !== 0) {
        v2885.ⵠᐃᐃⲆᐃⵠᐃ.message = function (p1864) {
          var v3002 = document.createElement("canvas");
          var v3003 = v3002.getContext("2d");
          for (v3003.lineJoin = "round"; p1864.indexOf("\\n") !== -1;) {
            p1864 = p1864.replace("\\n", "\n");
          }
          p1864 = p1864.split("\n");
          ᐃⲆ = [];
          var v3004 = p1864.length * 18 + 10;
          var v3005 = 0;
          v3003.font = "14px Baloo Paaji";
          for (var v3006 = 0; v3006 < p1864.length; v3006++) {
            if (p1864[v3006].charAt(0) === "#") {
              ᐃⲆ[v3006] = p1864[v3006].substring(0, 7);
              p1864[v3006] = p1864[v3006].substring(8);
            } else {
              ᐃⲆ[v3006] = "#FFFFFF";
            }
            v3005 = Math.max(v3003.measureText(p1864[v3006]).width + 16, v3005);
          }
          v3002.height = v3004;
          v3002.width = v3005;
          v3006 = 0;
          for (; v3006 < p1864.length; v3006++) {
            var vF1663 = f166(1, p1864[v3006], 14, ᐃⲆ[v3006], null, null, null, null, null, "#000", 6);
            v3003.drawImage(vF1663, 8, v3006 * 18 + 5);
          }
          return v3002;
        }(p1863);
      } else {
        v2885.ⵠᐃᐃⲆᐃⵠᐃ.message = undefined;
      }
    };
    this.ΔΔᐃᐃᐃ = function (p1865) {
      var v3007 = v2884.ᐃᐃΔⲆΔ[p1865[1] * v2884.ⲆᐃⲆᐃΔᐃⲆ];
      if (v3007) {
        if (v2884.mode === 2 && v3007.ⵠⲆⲆΔ === 0) {
          if (v2885.ᐃΔⵠᐃⵠ) {
            if (Math.random() > 0.5) {
              v3007.text.push(p1865[2] + " ..." + ᐃΔⲆΔΔΔΔ);
            } else {
              v3007.text.push(ᐃΔⲆΔΔΔΔ + "... " + p1865[2]);
            }
          } else {
            v3007.text.push(ⲆⵠⲆⲆΔᐃᐃ[Math.floor(Math.random() * ⲆⵠⲆⲆΔᐃᐃ.length)]);
          }
        } else {
          v3007.text.push(p1865[2]);
        }
      }
    };
    this.ΔᐃⵠᐃⲆΔΔⲆᐃ = function (p1866) {
      if (v2885.ΔⵠⵠⲆ.max !== v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ.length || v768[p1866].ⵠⵠᐃⲆ === 47 || v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(v768[p1866].ⵠⵠᐃⲆ) != -1 || v2885.ΔⵠⵠⲆ.ΔⵠⲆΔᐃⵠⵠⲆⵠ(v768[p1866].r)) {
        this.Ⲇⵠⵠⵠ[v2312](vVWindow[v439].stringify([13, p1866]));
        return 1;
      } else {
        this.ΔᐃⲆⵠΔⲆᐃ();
        return 0;
      }
    };
    this.ΔⵠⲆⲆⵠ = function (p1867) {
      v2885.ⲆΔⲆΔ.ᐃⵠⲆᐃΔⲆⵠᐃΔ(p1867);
    };
    this.ΔⲆᐃⵠᐃ = function (p1868) {
      v2885.ⲆΔⲆΔ.ΔⲆᐃⵠᐃ = p1868;
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ⲆⵠΔᐃΔ = function (p1869) {
      v2885.ⲆΔⲆΔ.ⲆⵠΔᐃΔ = p1869;
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ᐃⵠΔΔᐃᐃᐃ = function (p1870) {
      v2885.ⲆΔⲆΔ.ᐃⵠΔΔᐃᐃᐃ = p1870;
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ⲆⲆⵠᐃⲆΔΔᐃⲆ = function (p1871) {
      this.ΔΔΔᐃⲆ(v809[2015]);
    };
    this.ᐃⵠᐃΔᐃⵠⲆΔᐃ = function () {
      v2885.ⲆΔⲆΔ.ⵠᐃⲆΔⲆⲆᐃ();
    };
    this.ⲆⵠΔΔΔ = function (p1872) {
      v3081.ⲆⵠΔΔΔ.ⵠⵠΔⵠ = [];
      var v3008 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      var v3009 = 0;
      for (var v3010 = 1; v3010 < p1872.length; v3010 += 2) {
        var v3011 = {
          x: Math.floor(p1872[v3010] * v2884.w / 250),
          y: Math.floor(p1872[v3010 + 1] * v2884.ΔᐃⲆ / 250)
        };
        if (v3008 && !v3009 && !v2885.ⲆⵠΔⵠᐃⲆΔ && ⵠⲆⲆ.ᐃⵠᐃⲆ(v3011, v3008) < 250) {
          v3009 += 1;
        } else {
          v3081.ⲆⵠΔΔΔ.ⵠⵠΔⵠ.push(v3011);
        }
      }
    };
    this.ⵠⵠⵠⲆⵠⲆⲆᐃⲆ = function () {
      v2885.ᐃⵠⲆⲆΔ.open = false;
      v2885.ⵠⲆᐃⲆΔ.enabled = vVV3153;
      v2885.ⵠⲆᐃⲆΔ.ᐃΔᐃᐃⲆ = -1;
      v2885.ⵠⲆᐃⲆΔ.label = null;
      v2885.ⵠⲆᐃⲆΔ.ΔⲆⵠΔⲆᐃΔ = null;
      v2885.ⵠⲆᐃⲆΔ.now = -1;
    };
    this.ⵠⲆᐃⲆΔ = function (p1873) {
      v2325.ᐃᐃⵠⲆⲆΔΔ = p1873;
      v2885.ⵠⲆᐃⲆΔ.enabled = true;
      v2885.ⵠⲆᐃⲆΔ.ᐃΔᐃᐃⲆ = new Date().getTime();
      v2885.ⵠⲆᐃⲆΔ.label = null;
      v2885.ⵠⲆᐃⲆΔ.now = -1;
      for (var v3012 = vUndefined2 || v627, v3013 = 0; v3013 < v3012.length; v3013++) {
        var v3014 = v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(v3012[v3013]);
        if (v3014 != -1) {
          v2885.ΔⵠⵠⲆ.ⵠΔⵠⲆⵠᐃΔ(v3012.length[v3013], v3014);
        }
      }
      v2885.ⲆΔⲆΔ.ⵠᐃⲆΔⲆⲆᐃ();
    };
    this.ᐃⵠΔᐃᐃⲆΔⲆΔ = function (p1874, p1875, p1876) {
      this.ᐃⵠΔⲆⵠΔΔ(p1874, p1875 * 256 + p1876);
    };
    this.ᐃⵠΔⲆⵠΔΔ = function (p1877, p1878) {
      v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
      v2885.ΔⵠⵠⲆ.ⲆᐃΔᐃⲆⵠⵠ(p1877, p1878, v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(p1877));
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ΔΔᐃⲆᐃⵠᐃΔΔ = function (p1879) {
      v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
      v2885.ᐃᐃᐃᐃⲆ.wait = vV30;
      var v3015 = v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(p1879);
      v2885.ΔⵠⵠⲆ.ⲆᐃΔᐃⲆⵠⵠ(p1879, 1, v3015);
      if (v3015 >= 0 && !v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ[p1879]) {
        v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
      }
      if (p1879 == 261) {
        v2885.ΔⲆΔᐃᐃ = [v2885.id];
      }
    };
    this.ⵠⵠⵠⵠⵠΔΔᐃⲆ = function () {
      this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v438].stringify([32]));
    };
    this.ᐃΔΔⲆⲆᐃⵠⲆᐃ = function (p1880) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v444].stringify([22, p1880.ⲆⲆᐃᐃⵠ, p1880.id]));
    };
    this.ᐃᐃⵠΔᐃⲆⵠᐃΔ = function (p1881, p1882) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v453].stringify([28, p1881, p1882]));
    };
    this.ᐃΔⲆΔΔⵠⵠⵠⲆ = function () {
      var v3016 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      if (v3016) {
        var v3017 = Math.PI * 2;
        this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v444].stringify([17, v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ, Math.floor((v3016.angle + v3017) % v3017 * 255 / v3017), v2885.ⲆΔⲆΔ.mode]));
      }
    };
    this.ⵠΔᐃⲆⲆ = function (p1883, p1884) {
      switch (p1883) {
        case 297:
        case 201:
        case 207:
        case 208:
        case 238:
        case 218:
        case 226:
        case 229:
        case 235:
        case 236:
        case 291:
        case 317:
        case 343:
        case 315:
        case 319:
        case 356:
        case 321:
        case 294:
        case 230:
        case 231:
        case 298:
        case 299:
        case 302:
        case 301:
          v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
          this.Ⲇⵠⵠⵠ[v2312](vVVVVWindow[v449].stringify([33, p1883]));
          break;
        case 205:
        case 262:
        case 206:
        case 225:
        case 290:
        case 316:
        case 314:
        case 293:
        case 295:
        case 318:
        case 357:
        case 320:
        case 204:
        case 264:
        case 265:
        case 266:
        case 267:
        case 209:
        case 269:
        case 244:
        case 245:
        case 268:
        case 273:
        case 274:
        case 275:
        case 215:
        case 328:
        case 322:
        case 323:
        case 324:
        case 325:
        case 326:
        case 330:
        case 270:
        case 271:
        case 272:
        case 210:
        case 213:
        case 214:
        case 327:
        case 329:
        case 216:
        case 292:
        case 234:
        case 228:
        case 246:
        case 247:
        case 248:
        case 249:
        case 250:
        case 251:
        case 252:
        case 253:
        case 254:
        case 255:
        case 256:
        case 257:
        case 258:
        case 259:
        case 300:
        case 303:
        case 284:
        case 285:
        case 237:
        case 261:
        case 331:
          if (!v2885.ᐃΔⵠᐃⵠ) {
            if (p1883 === v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ) {
              v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
            } else {
              v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = p1883;
            }
          }
          break;
        case 0:
        case 103:
        case 5:
        case 6:
        case 48:
        case 28:
        case 9:
        case 108:
        case 109:
        case 119:
        case 120:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 165:
        case 166:
        case 12:
        case 13:
        case 14:
        case 15:
        case 60:
        case v625.ᐃⵠΔⵠⲆᐃΔΔⲆ:
        case 16:
        case 17:
        case 61:
        case 18:
        case 167:
        case 168:
        case 169:
        case 170:
        case 171:
        case 172:
        case 110:
        case 126:
        case 19:
        case 173:
        case 111:
        case 127:
        case 20:
        case 174:
        case 112:
        case 128:
        case 21:
        case 175:
        case 113:
        case 129:
        case 22:
        case 176:
        case 114:
        case 130:
        case 23:
        case 177:
        case 115:
        case 131:
        case 24:
        case 178:
        case 116:
        case 132:
        case 25:
        case 179:
        case 117:
        case 133:
        case 26:
        case 180:
        case 118:
        case 134:
        case 27:
        case 181:
          if (!v2885.ᐃΔⵠᐃⵠ) {
            v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
            if ((v3018 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ]) && p1883 === v3018.right) {
              this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([33, 7]));
            } else {
              v2885.ⵠⵠⵠᐃⲆ.wait = vV304;
              this.Ⲇⵠⵠⵠ[v2312](vVVVVVVWindow[v458].stringify([33, p1883]));
            }
          }
          break;
        case 1:
        case 8:
        case 3:
        case 4:
        case 62:
        case 63:
        case 64:
        case 46:
        case 65:
        case 66:
        case 49:
        case 50:
        case 72:
        case 82:
        case 86:
        case 87:
        case 88:
        case 101:
        case 102:
        case 99:
        case 100:
        case 162:
        case 85:
        case 135:
        case 136:
        case 137:
        case 138:
        case 139:
        case 140:
        case 51:
        case 73:
        case 90:
        case 141:
        case 52:
        case 74:
        case 91:
        case 142:
        case 53:
        case 75:
        case 92:
        case 143:
        case 54:
        case 76:
        case 93:
        case 144:
        case 55:
        case 77:
        case 94:
        case 145:
        case 56:
        case 78:
        case 95:
        case 146:
        case 57:
        case 79:
        case 96:
        case 147:
        case 58:
        case 80:
        case 97:
        case 148:
        case 59:
        case 81:
        case 98:
        case 89:
        case 149:
          if (!v2885.ᐃΔⵠᐃⵠ) {
            v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
            if ((v3018 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ]) && v3018.right === p1883) {
              this.Ⲇⵠⵠⵠ[v2312](vVVVVVVVWindow[v460].stringify([33, 7]));
            } else {
              this.Ⲇⵠⵠⵠ[v2312](vVVVVVVVVWindow[v463].stringify([33, p1883]));
            }
          }
          break;
        case 333:
        case 334:
        case 335:
        case 349:
        case 336:
        case 337:
        case 338:
        case 339:
        case 355:
        case 354:
        case 358:
        case 340:
        case 164:
          if (!v2885.ᐃΔⵠᐃⵠ) {
            v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
            var v3018 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
            this.Ⲇⵠⵠⵠ[v2312](vVVVVVVVVWindow[v463].stringify([33, p1883]));
          }
          break;
        case 150:
        case 151:
        case 152:
        case 104:
        case 34:
        case 35:
        case 36:
        case 70:
        case 71:
        case 29:
        case 30:
        case 31:
        case 105:
        case 106:
        case 163:
        case 107:
        case 83:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
          if ((v3018 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ]) && p1883 !== v3018.ⵠⵠⲆᐃᐃ) {
            v2885.ᐃⲆᐃᐃⵠ.wait = true;
          }
          this.Ⲇⵠⵠⵠ[v2312](vVVVVWindow[v453].stringify([33, p1883]));
          break;
        case 10:
        case 156:
        case 157:
        case 159:
        case 11:
        case 67:
        case 161:
        case 155:
        case 153:
        case 154:
        case 68:
        case 69:
        case 158:
        case 32:
        case 33:
        case 84:
          this.Ⲇⵠⵠⵠ[v2312](v473[v471].stringify([33, p1883]));
      }
    };
    this.ⵠᐃⵠⲆΔᐃⵠⵠⵠ = function (p1885) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v439].stringify([27, p1885]));
    };
    this.ᐃⲆᐃᐃⲆⲆⲆΔⵠ = function (p1886) {
      v2885.ᐃᐃᐃᐃⲆ.wait = true;
      var v3019 = v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(p1886);
      v2885.ΔⵠⵠⲆ.ⵠΔⵠⲆⵠᐃΔ(p1886, v3019);
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ᐃⵠΔⲆⵠⲆⲆⲆΔ = function (p1887, p1888) {
      this.Ⲇⵠⵠⵠ[v2312](vVWindow[v460].stringify([31, p1887]));
    };
    this.ΔΔᐃᐃⵠΔΔⵠΔ = function (p1889, p1890) {
      this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v438].stringify([35, p1889]));
    };
    this.ⲆⵠⵠⵠⲆⵠΔⲆΔ = function (p1891) {
      v2885.ᐃᐃᐃᐃⲆ.wait = vVV303;
      var v3020 = v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(p1891);
      v2885.ΔⵠⵠⲆ.ⲆᐃΔᐃⲆⵠⵠ(p1891, 1, v3020);
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ⵠⲆⵠᐃᐃΔᐃᐃΔ = function (p1892) {
      var v3021 = p1892[1];
      var v3022 = p1892[2];
      v2885.ᐃᐃᐃᐃⲆ.wait = true;
      var v3023 = v2885.ΔⵠⵠⲆ.ΔⵠᐃⲆⵠ(v3021);
      v2885.ΔⵠⵠⲆ.ⲆᐃΔᐃⲆⵠⵠ(v3021, v3022, v3023);
      v2885.ⲆΔⲆΔ.ᐃⲆⲆ();
    };
    this.ⲆⵠⲆΔⵠΔⲆΔᐃ = function () {
      this.Ⲇⵠⵠⵠ[v2312](vVVWindow[v438].stringify([38]));
    };
    this.ΔⲆⲆⲆⲆⵠΔΔⲆ = function (p1893) {
      var v3024 = Math.PI * 2;
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v444].stringify([19, Math.floor((p1893 + v3024) % v3024 * 255 / v3024)]));
    };
    this.ᐃⲆᐃᐃᐃⲆΔⲆⵠ = function (p1894) {
      var v3025 = Math.PI * 2;
      this.Ⲇⵠⵠⵠ[v2312](vVVVWindow[v444].stringify([10, Math.floor((p1894 + v3025) % v3025 * 255 / v3025)]));
    };
    this.ⲆⵠᐃⲆΔᐃⵠⲆⵠ = function (p1895) {
      this.Ⲇⵠⵠⵠ[v2312](ⲆⲆⵠᐃⵠᐃⲆ[v442].stringify([14, p1895]));
    };
    this.ΔⲆⲆᐃⵠᐃΔΔᐃ = function (p1896) {
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([34, p1896]));
    };
    this.ᐃᐃⵠΔᐃⲆⲆᐃⲆ = function (p1897) {
      var v3026 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
      if (v2885.ᐃΔⵠᐃⵠ) {
        if (Math.random() > 0.5) {
          v3026.text.push(p1897.substring(0, 25) + " ..." + ᐃΔⲆΔΔΔΔ);
        } else {
          v3026.text.push(ᐃΔⲆΔΔΔΔ + "... " + p1897.substring(0, 25));
        }
      } else {
        v3026.text.push(p1897);
      }
      this.Ⲇⵠⵠⵠ[v2312](vVVVVVWindow[v453].stringify([5, p1897]));
    };
    this.ΔΔⵠᐃⵠ = function (p1898) {
      var v3027 = ⲆⲆⵠᐃ.select.ᐃᐃΔ;
      if (v3027.length != 0) {
        var v3028 = [14];
        var v3029 = [];
        ⵠⲆⲆ.ᐃᐃⲆⵠΔΔⵠ(p1898, {
          x: ⲆⲆⵠᐃ.ⲆΔⵠ.rx,
          y: ⲆⲆⵠᐃ.ⲆΔⵠ.ry
        });
        v3028.push(p1898.x);
        v3028.push(p1898.y);
        for (var v3030 = 0; v3027.length > v3030; v3030++) {
          v3029.push(v3027[v3030].ⵠΔᐃⲆΔⵠΔΔⲆ);
        }
        v3028.push(v3029);
        this.Ⲇⵠⵠⵠ[v2312](vVVVVVVWindow[v458].stringify(v3028));
      }
    };
    this.ⵠᐃⲆⵠⲆΔᐃ = 0;
    this.ΔΔΔⵠⲆⵠΔ = {
      Ⲇⵠ: 0,
      ⵠᐃⲆᐃ: 0
    };
    this.ⵠⵠΔⲆⵠⲆΔⵠᐃ = function () {
      if (v3115 - this.ⵠᐃⲆⵠⲆΔᐃ > 50) {
        this.ⵠᐃⲆⵠⲆΔᐃ = v3115;
        var v3031 = v2885.ⲆΔⵠ;
        var v3032 = Math.floor(v3031.x / 100);
        var v3033 = Math.floor(v3031.y / 100);
        if (v3032 != this.ΔΔΔⵠⲆⵠΔ.Ⲇⵠ || this.ΔΔΔⵠⲆⵠΔ.ⵠᐃⲆᐃ != v3033) {
          this.Ⲇⵠⵠⵠ[v2312](vVVVVVVVVWindow[v460].stringify([0, Math.floor(-v3031.x), Math.floor(-v3031.y)]));
          this.ΔΔΔⵠⲆⵠΔ.Ⲇⵠ = v3032;
          this.ΔΔΔⵠⲆⵠΔ.ⵠᐃⲆᐃ = v3033;
        }
      }
    };
    this.ⵠⲆⵠᐃⲆᐃΔ = 0;
    this.ⲆⲆⵠⵠᐃⲆⵠΔⵠ = function () {
      if (v3115 - this.ⵠⲆⵠᐃⲆᐃΔ > 60000) {
        this.ⵠⲆⵠᐃⲆᐃΔ = v3115;
        this.ping();
      }
    };
    this.ⵠⲆᐃⲆΔⲆⵠⵠⵠ = function () {
      v2885.reconnect.enabled = vV304;
      if (vThis5.Ⲇⵠⵠⵠ.ⵠⵠⲆΔΔ == vThis5.ⵠⵠⲆΔΔ) {
        vThis5.ⵠⵠⲆΔΔ++;
        vThis5.Ⲇⵠⵠⵠ.close();
        v2887.connect();
      }
    };
    this.ΔⲆⲆΔⵠΔⲆⵠᐃ = function (p1899) {
      this.ΔΔΔᐃⲆ(v809[2016]);
      for (var v3034 = 1; v3034 < p1899.length; v3034++) {
        v2885.ΔⲆΔᐃᐃ.push(p1899[v3034]);
      }
    };
    this.ⵠΔⲆⲆΔⵠⵠᐃⵠ = function (p1900) {
      this.ΔΔΔᐃⲆ(v2884.ⵠⵠΔⵠ[p1900].ΔΔΔⲆⲆ + v809[2018]);
      v2885.ΔⲆΔᐃᐃ.push(p1900);
      var v3035 = document.getElementById("team_box");
      if (v3081.ⲆᐃⵠΔΔ != -1 && v3035.style.display == "inline-block") {
        v3081.ⵠⲆⲆᐃⲆ[v3081.ⲆᐃⵠΔΔ].action();
      }
    };
    this.ᐃΔⲆⲆΔΔΔⵠᐃ = function () {
      this.ΔΔΔᐃⲆ(v809[2019]);
      v2885.ⵠⵠⵠᐃᐃ.wait = true;
      v2885.ΔⲆΔᐃᐃ = [];
      document.getElementById("team_box").style.display = "none";
    };
    this.ᐃᐃΔᐃⵠᐃⵠⵠⵠ = function (p1901) {
      if (v2885.id == p1901) {
        this.ΔΔΔᐃⲆ(v809[2020]);
        v2885.ⵠⵠⵠᐃᐃ.wait = vVV3023;
        v2885.ΔⲆΔᐃᐃ = [];
        document.getElementById("team_box").style.display = "none";
      } else {
        this.ΔΔΔᐃⲆ(v2884.ⵠⵠΔⵠ[p1901].ΔΔΔⲆⲆ + v809[2021]);
        for (var v3036 = 0; v2885.ΔⲆΔᐃᐃ.length > v3036; v3036++) {
          if (v2885.ΔⲆΔᐃᐃ[v3036] == p1901) {
            v2885.ΔⲆΔᐃᐃ.splice(v3036, 1);
            break;
          }
        }
        var v3037 = document.getElementById("team_box");
        if (v3081.ⲆᐃⵠΔΔ != -1 && v3037.style.display == "inline-block") {
          v3081.ⵠⲆⲆᐃⲆ[v3081.ⲆᐃⵠΔΔ].action();
        }
      }
    };
    this.ᐃⵠΔΔᐃⵠΔΔⲆ = function (p1902) {
      v2885.ⲆⵠΔⵠⲆ = vVV313;
      this.ΔΔΔᐃⲆ(v809[2022]);
      if (this.ⵠⵠⲆΔΔ == this.Ⲇⵠⵠⵠ.ⵠⵠⲆΔΔ) {
        this.ⵠⵠⲆΔΔ++;
        v3081.ⵠΔⵠᐃΔ(v2883.ⲆΔⲆΔⲆ);
        this.Ⲇⵠⵠⵠ.close();
      }
    };
    this.ΔⵠⲆⵠΔⵠΔⲆᐃ = function (p1903, p1904) {
      v2885.ⲆⵠΔⵠⲆ = vVVVV316;
      var v3038 = new Uint16Array(p1904);
      var v3039 = new Uint32Array(p1904);
      v2885.ᐃᐃΔΔⲆΔⲆ.ⲆΔⲆΔⲆΔᐃ = v811[p1903][Math.floor(Math.random() * v811[p1903].length)];
      v2885.ᐃᐃΔΔⲆΔⲆ.ⲆΔⲆᐃΔ = ⵠⲆⲆ.ΔⲆᐃⲆⵠⵠⲆ(v2884.ⵠⵠΔⵠ[v2885.id].ⲆΔⲆᐃΔ);
      v2885.ᐃᐃΔΔⲆΔⲆ.ᐃᐃᐃΔΔⲆⵠ = ⵠⲆⲆ.ΔⲆᐃⲆⵠⵠⲆ(v3039[1]);
      v2885.ᐃᐃΔΔⲆΔⲆ.ⵠⲆᐃⲆⵠⵠⲆ = v3038[1];
      this.ΔΔΔᐃⲆ(v809[2017]);
      if (this.Ⲇⵠⵠⵠ.ⵠⵠⲆΔΔ == this.ⵠⵠⲆΔΔ) {
        this.ⵠⵠⲆΔΔ++;
        v3081.ⵠΔⵠᐃΔ(v2886.ⲆΔⲆΔⲆ);
        this.Ⲇⵠⵠⵠ.close();
        try {
          vWindow.Widget.adsRefresh();
        } catch (e) {}
      }
    };
    this.ping = function () {
      this.Ⲇⵠⵠⵠ[v2312]("[15]");
    };
    this.ΔⲆⵠᐃⲆⲆⲆΔΔ = function () {
      if (this.Ⲇⵠⵠⵠ.readyState == 3) {
        this.ᐃᐃᐃᐃΔⵠΔ -= 600000;
      }
    };
    this.ⵠⲆΔᐃᐃΔΔⲆᐃ = function () {
      if (v3116 > 5) {
        this.ᐃᐃᐃᐃΔⵠΔ = v3115;
      }
      if (v3115 - this.ᐃᐃᐃᐃΔⵠΔ > 600000) {
        this.ᐃᐃᐃᐃΔⵠΔ = v3115;
        this.ⵠⲆᐃⲆΔⲆⵠⵠⵠ();
      }
    };
    this.ⵠⵠⲆⵠᐃⲆᐃⲆⵠ = function (p1905) {
      v3129++;
      clearTimeout(this.ΔⵠⲆⲆⵠⵠⲆ);
      document.getElementById("commandMainBoxName").innerHTML = this.ⲆᐃⲆΔᐃ[this.ᐃΔΔΔⲆ][this.ᐃⲆᐃⲆΔⵠⵠ[this.ᐃΔΔΔⲆ]].a;
      document.getElementById("exploreForest").src = "img/forest-leaf.png";
      document.getElementById("exploreWinter").src = "img/winter-flake.png";
      document.getElementById("exploreDesert").src = "img/desert-cactus.png";
      document.getElementById("exploreLava").src = "img/lava-volcano.png";
      this.ᐃᐃᐃᐃΔⵠΔ = v3115;
      v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.ⵠⵠⲆⵠⵠ = v2885.ᐃⲆⵠΔ.ⲆΔᐃⲆᐃ.ΔⲆⲆᐃΔ;
      v2885.ᐃⲆⵠΔ.ΔⲆⲆΔⲆΔⵠ.ⵠⵠⲆⵠⵠ = v2885.ᐃⲆⵠΔ.ΔⲆⲆΔⲆΔⵠ.ΔⲆⲆᐃΔ;
      v2885.ᐃⲆⵠΔ.ΔᐃΔΔᐃΔᐃ.ⵠⵠⲆⵠⵠ = v2885.ᐃⲆⵠΔ.ΔᐃΔΔᐃΔᐃ.ΔⲆⲆᐃΔ;
      v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.ⵠⵠⲆⵠⵠ = v2885.ᐃⲆⵠΔ.ⲆΔΔⵠⵠΔΔ.ΔⲆⲆᐃΔ;
      v2885.ᐃⲆⵠΔ.ᐃⲆᐃᐃΔᐃᐃ.ⵠⵠⲆⵠⵠ = v2885.ᐃⲆⵠΔ.ᐃⲆᐃᐃΔᐃᐃ.ΔⲆⲆᐃΔ;
      v2885.ᐃⲆⵠΔ.ⵠⲆΔⵠ = 1;
      v2885.ᐃⲆⵠΔ.c = 1;
      v2885.ᐃⲆⵠΔ.ΔᐃⲆ = 1;
      v2885.ᐃⲆⵠΔ.Δᐃⵠ = 1;
      v2885.ᐃⲆⵠΔ.ⲆⲆΔ = 1;
      v2885.ᐃⲆⵠΔ.ⲆΔⵠΔⲆᐃⵠ = 1;
      v2885.ⵠⲆⵠᐃΔᐃᐃ = vVV315;
      v3081.ΔΔⵠΔΔ.display = 0;
      v2325.ⵠᐃΔΔⵠᐃΔ = p1905[29];
      v2325.ᐃⲆᐃΔᐃᐃⵠ = p1905[30];
      v2325.ⵠᐃΔⲆⲆⲆⵠ = 16;
      v2885.ΔⵠⵠⲆ.ΔᐃΔΔⲆ = [];
      v2885.ΔⵠⵠⲆ.ᐃⲆⵠᐃ = [];
      v2885.ΔⵠⵠⲆ.max = 10;
      v2885.ΔⵠⵠⲆ.ⲆⲆᐃⵠⲆⲆⵠ = 0;
      v2885.ΔⵠⵠⲆ.ⵠᐃᐃΔⵠ = 0;
      v2885.ΔⵠⵠⲆ.id = -1;
      v3081.ᐃᐃⵠᐃΔⲆⵠ = 1;
      v3081.ⵠⲆΔⵠⲆⵠⲆ = 1;
      v3081.ᐃΔΔᐃⵠΔⲆ = 1;
      v3081.ⵠⲆⵠⵠᐃⵠᐃ = 1;
      v2885.ⲆⵠΔⵠⲆ = vVV30;
      v2885.ΔⵠⵠⲆ.ⵠᐃᐃᐃⵠⲆᐃ.stop();
      v2885.ⲆΔⲆΔ.ᐃⲆΔⵠᐃ = [];
      v2885.ⲆΔⲆΔ.ⲆΔⲆΔᐃ = vVV317;
      v2885.ⲆΔⲆΔ.ⵠᐃⲆⲆⵠᐃΔⲆⵠ = vVV315;
      v2885.ⲆΔⲆΔ.ⲆᐃⲆⲆ = -1;
      v2885.ⲆΔⲆΔ.id = -1;
      v2885.ⲆΔⲆΔ.ΔⵠⲆⲆⵠ = vVV314;
      v2885.ⲆΔⲆΔ.ΔⲆᐃⵠᐃ = vVVV316;
      v2885.ⲆΔⲆΔ.ⲆⵠΔᐃΔ = false;
      v2885.ⲆΔⲆΔ.ᐃⵠΔΔᐃᐃᐃ = vVVV313;
      v2885.ⲆΔⲆΔ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1, 1);
      const v3040 = (p1905[33] || 10000) / 1000;
      v2885.ⵠⵠⵠᐃⲆ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1 / v3040, 1);
      v2885.ⵠⵠⵠᐃⲆ.wait = vV315;
      const v3041 = (p1905[34] || 5000) / 1000;
      v2885.ᐃⲆᐃᐃⵠ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(false, 0, 1, 0, 1 / v3041, 1);
      v2885.ᐃⲆᐃᐃⵠ.wait = false;
      const v3042 = (p1905[35] || 1000) / 1000;
      v2885.ᐃᐃᐃᐃⲆ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vVVVV316, 0, 1, 0, 1 / v3042, 1);
      v2885.ᐃᐃᐃᐃⲆ.wait = false;
      v2885.ⵠⵠⵠᐃᐃ.id = -1;
      v2885.ⵠⵠⵠᐃᐃ.ᐃΔⲆⵠ = -1;
      v2885.ⵠⵠⵠᐃᐃ.wait = vVV312;
      v2885.ⵠⵠⵠᐃᐃ.timeout = new ⵠⲆⲆ.ᐃⵠᐃᐃ(vV315, 0, 1, 0, 1 / 30, 1);
      v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.x = -1;
      v3081.ⲆⵠΔΔΔ.ᐃΔⵠⲆᐃᐃᐃ.y = -1;
      v3081.ⵠΔᐃΔΔ.open = false;
      v3081.ⲆⵠΔΔΔ.ⵠⵠΔⵠ = [];
      v2885.ΔᐃᐃΔⵠΔᐃ.enabled = vVVV31;
      v2884.mode = p1905[1];
      if (p1905[20] !== vVVVVUndefined824 && vVVVUndefined822 !== p1905[21]) {
        v2884.ⵠⲆⵠΔᐃ = p1905[20];
        v2884.ⲆⲆΔⵠⲆ = p1905[21];
        v2884.w = v2884.ᐃⲆᐃΔⲆᐃΔ * v2884.ⵠⲆⵠΔᐃ;
        v2884.ΔᐃⲆ = v2884.ⲆⲆΔⵠⲆ * v2884.ᐃⲆΔⵠᐃᐃΔ;
      }
      v2884.ⲆΔⲆⵠΔΔΔ = p1905[22];
      v2884.ΔⵠⲆᐃᐃ = p1905[23];
      vThis5.ⵠᐃᐃⲆᐃⵠᐃ(p1905[24]);
      vThis5.ΔᐃΔᐃᐃⲆⵠᐃⵠ(p1905[25]);
      vThis5.ΔⲆⲆⵠᐃΔⲆΔⲆ(p1905[28]);
      vThis5.ΔⵠⲆⲆΔᐃᐃΔⵠ(p1905[31]);
      vThis5.ᐃⵠᐃᐃⲆΔⵠΔⵠ(p1905[32]);
      v2885.ⲆⵠᐃⵠΔ.ⲆⲆᐃⲆᐃ = p1905[26];
      v2885.ⲆⵠΔⵠΔⲆⵠ = 0;
      v2885.ᐃᐃΔΔⲆ.ⲆⲆᐃⲆᐃ = p1905[27];
      v2884.ᐃⲆⵠⲆᐃᐃΔⲆΔ(p1905[19]);
      v2884.time = p1905[5];
      v2884.ᐃᐃᐃᐃΔ.ᐃⲆΔⵠΔ = p1905[15];
      v2884.ᐃᐃᐃᐃΔ.ⵠⵠᐃΔⵠ = new Date().getTime();
      v3081.ΔΔᐃᐃ.ᐃΔⵠΔⵠᐃΔ = p1905[16];
      v2884.transition = false;
      v2885.ⵠⵠᐃ = p1905[2];
      v3081.ΔΔᐃᐃ.reset();
      v2885.ΔⲆΔᐃᐃ = p1905[8];
      v2884.ᐃᐃΔ[0] = [];
      v2884.ᐃᐃΔ[105] = [];
      v2884.ᐃᐃΔ[106] = [];
      v2884.ᐃᐃΔ[104] = [];
      v2884.ᐃᐃΔ[2] = [];
      v2884.ᐃᐃΔ[1] = [];
      v2884.ᐃᐃΔ[6] = [];
      v2884.ᐃᐃΔ[3] = [];
      v2884.ᐃᐃΔ[40] = [];
      v2884.ᐃᐃΔ[46] = [];
      v2884.ᐃᐃΔ[52] = [];
      v2884.ᐃᐃΔ[53] = [];
      v2884.ᐃᐃΔ[48] = [];
      v2884.ᐃᐃΔ[49] = [];
      v2884.ᐃᐃΔ[63] = [];
      v2884.ᐃᐃΔ[66] = [];
      v2884.ᐃᐃΔ[64] = [];
      v2884.ᐃᐃΔ[4] = [];
      v2884.ᐃᐃΔ[7] = [];
      v2884.ᐃᐃΔ[8] = [];
      v2884.ᐃᐃΔ[9] = [];
      v2884.ᐃᐃΔ[10] = [];
      v2884.ᐃᐃΔ[15] = [];
      v2884.ᐃᐃΔ[16] = [];
      v2884.ᐃᐃΔ[17] = [];
      v2884.ᐃᐃΔ[54] = [];
      v2884.ᐃᐃΔ[55] = [];
      v2884.ᐃᐃΔ[56] = [];
      v2884.ᐃᐃΔ[57] = [];
      v2884.ᐃᐃΔ[58] = [];
      v2884.ᐃᐃΔ[62] = [];
      v2884.ᐃᐃΔ[11] = [];
      v2884.ᐃᐃΔ[22] = [];
      v2884.ᐃᐃΔ[23] = [];
      v2884.ᐃᐃΔ[5] = [];
      v2884.ᐃᐃΔ[12] = [];
      v2884.ᐃᐃΔ[13] = [];
      v2884.ᐃᐃΔ[14] = [];
      v2884.ᐃᐃΔ[67] = [];
      v2884.ᐃᐃΔ[77] = [];
      v2884.ᐃᐃΔ[78] = [];
      v2884.ᐃᐃΔ[79] = [];
      v2884.ᐃᐃΔ[80] = [];
      v2884.ᐃᐃΔ[81] = [];
      v2884.ᐃᐃΔ[86] = [];
      v2884.ᐃᐃΔ[89] = [];
      v2884.ᐃᐃΔ[90] = [];
      v2884.ᐃᐃΔ[87] = [];
      v2884.ᐃᐃΔ[88] = [];
      v2884.ᐃᐃΔ[93] = [];
      v2884.ᐃᐃΔ[94] = [];
      v2884.ᐃᐃΔ[99] = [];
      v2884.ᐃᐃΔ[98] = [];
      v2884.ᐃᐃΔ[43] = [];
      v2884.ᐃᐃΔ[72] = [];
      v2884.ᐃᐃΔ[73] = [];
      v2884.ᐃᐃΔ[74] = [];
      v2884.ᐃᐃΔ[69] = [];
      v2884.ᐃᐃΔ[70] = [];
      v2884.ᐃᐃΔ[85] = [];
      v2884.ᐃᐃΔ[84] = [];
      v2884.ᐃᐃΔ[82] = [];
      v2884.ᐃᐃΔ[83] = [];
      v2884.ᐃᐃΔ[71] = [];
      v2884.ᐃᐃΔ[76] = [];
      v2884.ᐃᐃΔ[75] = [];
      v2884.ᐃᐃΔ[91] = [];
      v2884.ᐃᐃΔ[101] = [];
      v2884.ᐃᐃΔ[95] = [];
      v2884.ᐃᐃΔ[96] = [];
      v2884.ᐃᐃΔ[97] = [];
      v2884.ᐃᐃΔ[92] = [];
      v2884.ᐃᐃΔ[100] = [];
      v2884.ᐃᐃΔ[103] = [];
      v2884.ᐃᐃΔ[102] = [];
      v2884.ᐃᐃΔ[68] = [];
      v2884.ᐃᐃΔ[18] = [];
      v2884.ᐃᐃΔ[19] = [];
      v2884.ᐃᐃΔ[20] = [];
      v2884.ᐃᐃΔ[21] = [];
      v2884.ᐃᐃΔ[59] = [];
      v2884.ᐃᐃΔ[61] = [];
      v2884.ᐃᐃΔ[60] = [];
      v2884.ᐃᐃΔ[38] = [];
      v2884.ᐃᐃΔ[65] = [];
      v2884.ᐃᐃΔ[39] = [];
      v2884.ᐃᐃΔ[47] = [];
      v2884.ᐃᐃΔ[42] = [];
      v2884.ᐃᐃΔ[41] = [];
      v2884.ᐃᐃΔ[24] = [];
      v2884.ᐃᐃΔ[25] = [];
      v2884.ᐃᐃΔ[26] = [];
      v2884.ᐃᐃΔ[27] = [];
      v2884.ᐃᐃΔ[28] = [];
      v2884.ᐃᐃΔ[29] = [];
      v2884.ᐃᐃΔ[30] = [];
      v2884.ᐃᐃΔ[31] = [];
      v2884.ᐃᐃΔ[32] = [];
      v2884.ᐃᐃΔ[33] = [];
      v2884.ᐃᐃΔ[34] = [];
      v2884.ᐃᐃΔ[35] = [];
      v2884.ᐃᐃΔ[36] = [];
      v2884.ᐃᐃΔ[37] = [];
      v2884.ᐃᐃΔ[51] = [];
      v2884.ᐃᐃΔ[50] = [];
      v2884.ᐃᐃΔ[44] = [];
      v2884.ᐃᐃΔ[45] = [];
      v2884.ᐃᐃΔⲆΔ = [];
      v2884.ⲆᐃⲆᐃΔᐃⲆ = p1905[7];
      v2885.id = p1905[9];
      v2885.ᐃⲆⲆΔ = v2885.id * v2884.ⲆᐃⲆᐃΔᐃⲆ;
      if (v3082.loaded) {
        v3082.ⵠⵠΔⵠ[0].ᐃⲆⲆΔ = v2885.ᐃⲆⲆΔ;
        v3082.ⵠⵠΔⵠ[0].ᐃⲆⲆΔⲆᐃⵠ = 0;
      }
      v3110.ᐃⲆΔⲆᐃⵠᐃ();
      v2885.ⲆΔⵠ.ⲆⵠⲆΔᐃ(p1905[3], p1905[10]);
      v2884.ⵠⵠΔⵠ = [];
      var v3043 = v2884.ⵠⵠΔⵠ;
      for (var v3044 = 0; v3044 < p1905[11]; v3044++) {
        v3043.push(new f441());
      }
      v3044 = 0;
      for (var v3045 = p1905[4]; v3044 < v3045.length; v3044++) {
        var v3046 = v3043[v3045[v3044].i];
        v3046.ΔΔΔⲆⲆ = v3045[v3044].n;
        v3046.ⵠⲆⲆΔ = v3045[v3044].s;
        v3046.ⲆⲆⵠΔΔ = v3045[v3044].a;
        v3046.ΔⲆⵠᐃⲆ = v3045[v3044].c;
        v3046.ⵠᐃⵠᐃᐃ = v3045[v3044].b;
        v3046.ⵠᐃΔΔΔ = v3045[v3044].d;
        v3046.ⵠⵠᐃⲆⵠᐃΔ = v3045[v3044].g;
        v3046.level = v3045[v3044].l;
        v3046.ⲆΔⲆᐃΔ = ⵠⲆⲆ.ΔᐃⵠᐃΔΔⵠ(v3045[v3044].p);
        v3046.ⲆⵠΔⵠⲆ = true;
        if (v2313 === 1) {
          v3046.ΔΔΔⲆⲆ += "|" + v3045[v3044].i;
        }
      }
      v2885.ⵠΔⵠΔⵠ.sort();
      if (v2884.mode === 1 && v2884.ⵠⵠΔⵠ[v2885.id].ΔΔΔⲆⲆ === "spectator") {
        v2885.ⲆⵠΔⵠᐃⲆΔ = true;
      } else {
        v2885.ⲆⵠΔⵠᐃⲆΔ = vVVV313;
      }
      if (v2884.mode === 2 && v2884.ⵠⵠΔⵠ[v2885.id].ⵠⲆⲆΔ === 0) {
        v2885.ᐃΔⵠᐃⵠ = vV30;
      } else {
        v2885.ᐃΔⵠᐃⵠ = false;
      }
      if (v2884.mode === 3 && v2884.ⵠⵠΔⵠ[v2885.id].ⵠⲆⲆΔ === 0) {
        v2885.ⲆⲆᐃΔⵠⵠⲆ = vVV30;
      } else {
        v2885.ⲆⲆᐃΔⵠⵠⲆ = false;
      }
      Δⵠⵠᐃ.set("starve_token", v2885.ⲆΔΔᐃΔ);
      if (p1905[12] === 0) {
        v2885.ⵠⵠⲆᐃΔ.ᐃΔᐃᐃⲆ = 0;
        v3081.ΔΔᐃᐃ.restore(p1905[17]);
        var v3047 = p1905[14];
        if (v3047[47]) {
          v2885.ΔⵠⵠⲆ.ⵠⵠⵠᐃΔΔΔ(1, 0);
        }
        for (v3044 = 0; v3044 < v3047.length; v3044++) {
          if (v3047[v3044]) {
            if (v3044 == 47) {
              continue;
            }
            if (v3044 == 7) {
              continue;
            }
            this.ᐃᐃΔΔⵠᐃⲆ([0, v3044, v3047[v3044]]);
          }
        }
        v2885.ⵠⵠⲆᐃΔ.open = false;
      } else {
        if (v2884.mode === 3) {
          if (v2885.ⲆⲆᐃΔⵠⵠⲆ) {
            this.ᐃᐃΔΔⵠᐃⲆ([0, 292, 4]);
          } else {
            this.ᐃᐃΔΔⵠᐃⲆ([0, 293, 3]);
          }
        }
        if (v2884.mode === 0 || v2884.mode === 3 || v2884.mode === 7 || v2884.mode === 4) {
          v2885.ⵠⵠⲆᐃΔ.ᐃΔᐃᐃⲆ = new Date().getTime();
          v2885.ⵠⵠⲆᐃΔ.open = true;
          v2885.ⵠⵠⲆᐃΔ.value = p1905[13];
          v3081.ⵠⵠⲆᐃΔ.ⵠⵠᐃΔⵠ();
        } else {
          v2885.ⵠⵠⲆᐃΔ.ᐃΔᐃᐃⲆ = 0;
          v2885.ⵠⵠⲆᐃΔ.open = vVV313;
          v2885.ⵠⵠⲆᐃΔ.value = 0;
        }
        v2885.ⵠΔⵠΔⲆⲆᐃ = p1905[12].toString();
      }
      v2885.ⵠⲆᐃⲆΔ.enabled = p1905[6];
      v2885.ⵠⲆᐃⲆΔ.ᐃΔᐃᐃⲆ = -1;
      v2885.ⵠⲆᐃⲆΔ.label = null;
      v2885.ⵠⲆᐃⲆΔ.now = -1;
      Δⵠⵠᐃ.set("starve_token_id", v2885.ⵠΔⵠΔⲆⲆᐃ);
      if (v2885.reconnect.enabled) {
        v2885.reconnect.rotate = 0;
        v2885.reconnect.enabled = false;
      } else {
        v2883.ⵠΔⵠᐃΔ(v3081.ⲆΔⲆΔⲆ);
        if (ga) {
          ga("send", "event", "Game", "play", "S" + v2883.ⵠⲆⲆΔ + "A" + v2883.ⲆⲆⵠΔΔ);
        }
      }
    };
    this.connect = function () {
      vThis5.ΔⵠᐃΔⵠᐃⲆ = 0;
      vThis5.ᐃΔΔᐃⲆⵠⲆ();
    };
    this.ᐃᐃⵠⲆᐃⲆᐃ = [];
    this.ⵠⲆⲆᐃΔⵠⲆᐃⵠ = function (p1906) {
      const v3048 = vThis5.ⲆᐃᐃΔⲆ.filter(p1907 => p1907.gm === p1906);
      const v3049 = {};
      for (let v3050 = 0; v3048.length > v3050; v3050++) {
        const v3051 = v3048[v3050];
        const v3052 = v3051.r;
        if (vVVVVUndefined824 !== v3052) {
          if (v3049[v3052] === undefined) {
            v3049[v3052] = [];
          }
          v3049[v3052].push(v3051);
        }
      }
      function a(p1908) {
        vThis5.ᐃᐃⵠⲆᐃⲆᐃ[p1906] = p1908;
        const v3053 = v3049[p1908];
        const v3054 = v3053[Math.floor(Math.random() * v3053.length)];
        vThis5.ⲆᐃⲆⲆᐃⵠⲆ({
          domain: v2318,
          is_tls: 1,
          id: v3054.id,
          p: v3054.p
        });
      }
      if (vThis5.ᐃᐃⵠⲆᐃⲆᐃ[p1906] !== undefined) {
        a(vThis5.ᐃᐃⵠⲆᐃⲆᐃ[p1906]);
        return;
      }
      let v3055 = 1;
      function r(p1909) {
        const v3056 = new vWindow.XMLHttpRequest();
        const v3057 = p1909[0];
        const v3058 = v3057.p;
        const v3059 = v3057.r;
        const v3060 = v3058[Math.floor(Math.random() * v3058.length)];
        v3056.open("GET", "https://" + v3060 + "." + v2318 + "/", true);
        v3056.onreadystatechange = function () {
          if (v3056.readyState === 4) {
            if (v3055 === 0) {
              return;
            }
            v3055 = 0;
            a(v3059);
          }
        };
        v3056.send();
      }
      for (let v3061 in v3049) {
        r(v3049[v3061]);
      }
      vWindow.setTimeout(function () {
        if (v3055 === 0) {
          return;
        }
        v3055 = 0;
        const v3062 = vWindow.Object.keys(v3049);
        a(v3062[Math.floor(v3062.length * Math.random())]);
      }, 5000);
    };
    this.ΔⲆᐃΔⵠⵠᐃⵠⵠ = function () {
      let v3063 = v2325.ΔΔⵠΔΔᐃⵠ[vThis5.ᐃΔΔΔⲆ];
      console.log(vVVVVVUndefined1322, vVVVUndefined824, undefined);
      let v3064 = vThis5.ᐃⲆᐃⲆΔⵠⵠ[vThis5.ᐃΔΔΔⲆ];
      let v3065 = vThis5.ⲆᐃᐃΔⲆ.find(p1910 => p1910.gm == v3063 && p1910.idx == v3064);
      if (v3065 === undefined) {
        vThis5.ⵠⲆⲆᐃΔⵠⲆᐃⵠ(v3063);
      } else {
        vThis5.ⲆᐃⲆⲆᐃⵠⲆ({
          domain: v2318,
          is_tls: 1,
          id: v3065.id,
          p: v3065.p
        });
      }
    };
    this.ᐃΔΔᐃⲆⵠⲆ = function () {
      console.log(vVVVVUndefined823);
      if (vVVVVVUndefined1322 === v2316 || vVVVUndefined822 === v2317) {
        if (v2315 === vVVVUndefined82) {
          vThis5.ΔⲆᐃΔⵠⵠᐃⵠⵠ();
        } else {
          vThis5.ⲆᐃⲆⲆᐃⵠⲆ({
            domain: v2315.domain,
            is_tls: v2315.ssl,
            id: v2315.id,
            p: [v2315.p]
          });
        }
      } else {
        vThis5.ⲆᐃⲆⲆᐃⵠⲆ({
          domain: v2318,
          is_tls: 1,
          id: v2317 + v2316,
          p: vThis5.ΔⵠⵠⵠΔⲆⵠ[v2317]
        });
      }
    };
    this.ⲆᐃⲆⲆᐃⵠⲆ = function (p1911) {
      let v3066 = p1911.domain;
      let v3067 = p1911.is_tls;
      let v3068 = p1911.id;
      let v3069 = p1911.p;
      let v3070 = v3069[Math.floor(Math.random() * v3069.length)];
      let v3071 = v3067 ? "wss://" + v3070 + "." + v3066 + "/" + v3068 + "?" + v2885.ⵠΔⵠⵠᐃⲆⵠ : "ws://" + v3066;
      console.log(undefined, vVVVUndefined823);
      vThis5.Ⲇⵠⵠⵠ = new vWindow.WebSocket(v3071);
      vThis5.Ⲇⵠⵠⵠ.binaryType = "arraybuffer";
      vThis5.Ⲇⵠⵠⵠ.ⵠⵠⲆΔΔ = vThis5.ⵠⵠⲆΔΔ;
      vThis5.Ⲇⵠⵠⵠ.onmessage = function (p1912) {
        if (vThis5.ⵠⵠⲆΔΔ == vThis5.ⵠⵠⲆΔΔ) {
          if (typeof p1912.data == "string") {
            var v3072 = JSON.parse(p1912.data);
            switch (v3072[0]) {
              case 0:
                vThis5.ΔΔᐃᐃᐃ(v3072);
                break;
              case 1:
                vThis5.ⲆΔΔⲆᐃᐃΔ(v3072[1]);
                break;
              case 2:
                vThis5.ⲆΔᐃⲆΔⲆⵠⲆΔ(v3072);
                break;
              case 3:
                vThis5.ⵠⵠⲆⵠᐃⲆᐃⲆⵠ(v3072);
                break;
              case 4:
                vThis5.message(v3072[1]);
                break;
              case 5:
                vThis5.ΔᐃΔΔᐃⲆⵠ(v3072);
                break;
              case 6:
                vThis5.ⵠᐃᐃⲆᐃⵠᐃ(v3072[1]);
            }
          } else {
            var vF51 = function (p1913, p1914, p1915) {
              const v3073 = new Uint8Array(p1913);
              const v3074 = v3073.length;
              let v3075 = v2322[v3074];
              let vVVVVUndefined8232 = vVVVUndefined823;
              let vVVVVUndefined8233 = vVVVUndefined823;
              if (v3075 === vVVVUndefined823) {
                v2323 += v3074 * 2;
                if (v2323 < 65535) {
                  vVVVVUndefined8233 = vVVUndefined(v99(v3074));
                } else {
                  v2323 = v3074;
                  for (let v3076 = 0; v3076 < v2322.length; v3076++) {
                    if (vVVVUndefined82 !== v2322[v3076]) {
                      const v3077 = v2322[v3076][0];
                      v2322[v3076] = vVVVUndefined13;
                      vVVUndefined2(v3077);
                    }
                  }
                  vVVVVUndefined8233 = vVVUndefined(v99(v3074));
                  v52();
                }
                vVVVVUndefined8232 = f4(vVVVVUndefined8233);
                v2322[v3074] = [vVVVVUndefined8233, vVVVVUndefined8232];
              } else {
                vVVVVUndefined8233 = v3075[0];
                vVVVVUndefined8232 = v3075[1];
              }
              for (let v3078 = 0; v3078 < v3073.length; v3078++) {
                vVVVVUndefined8232[v3078] = v3073[v3078];
              }
              vVUndefined5(vVVVVUndefined8233, p1914, p1915);
              for (let v3079 = 0; v3073.length > v3079; v3079++) {
                v3073[v3079] = vVVVVUndefined8232[v3079];
              }
              return v3073;
            }(p1912.data, v2885.ᐃⲆⲆⲆΔⲆΔ, v2885.ⲆᐃⲆⲆᐃᐃⵠᐃⲆ);
            var v3080 = vF51.buffer;
            switch (vF51[0]) {
              case 0:
                vThis5.ᐃᐃΔ(v3080, vF51, false);
                break;
              case 1:
                vThis5.ᐃᐃΔ(v3080, vF51, true);
                break;
              case 2:
                vThis5.ᐃⵠᐃΔᐃⵠⲆΔᐃ();
                break;
              case 3:
                vThis5.ᐃᐃΔΔⵠᐃⲆ(new Uint16Array(v3080));
                break;
              case 4:
                vThis5.ᐃᐃΔⲆⲆⲆΔⵠᐃ();
                break;
              case 5:
                vThis5.ⵠⵠᐃⵠΔᐃⲆᐃΔ();
                break;
              case 6:
                vThis5.ⲆⲆⵠᐃⲆΔΔᐃⲆ();
                break;
              case 7:
                vThis5.ΔⲆⲆΔⲆΔⵠᐃⲆ(v3080);
                break;
              case 8:
                vThis5.ⲆᐃⲆΔΔⵠⲆΔⲆ(vF51[1] + (vF51[2] << 8));
                break;
              case 9:
                vThis5.ᐃᐃΔⲆⲆⵠΔΔᐃ(vF51[1] + (vF51[2] << 8));
                break;
              case 10:
                vThis5.ΔᐃⲆⵠΔⲆᐃ();
                break;
              case 11:
                vThis5.ᐃⵠΔⲆⵠΔΔ(vF51[1] + (vF51[2] << 8), vF51[3]);
                break;
              case 12:
                vThis5.ΔⵠⲆⲆⵠ(vF51[1]);
                break;
              case 13:
                vThis5.ᐃᐃⵠΔᐃⵠᐃⵠⲆ(vF51, v3080);
                break;
              case 14:
                vThis5.ⵠⵠΔᐃⵠⲆΔΔΔ();
                break;
              case 15:
                vThis5.ⲆⲆΔᐃⵠⵠᐃⲆⵠ(vF51[1]);
                break;
              case 16:
                vThis5.ᐃⲆⵠΔ(vF51[1], vF51[2], vF51[3], vF51[4], vF51[5], vF51[6], vF51[7]);
                break;
              case 17:
                vThis5.ΔⲆⵠⲆΔⵠᐃΔⲆ(v3080);
                break;
              case 18:
                vThis5.ⵠΔᐃΔᐃⲆⵠΔⵠ();
                break;
              case 19:
                vThis5.ⲆⵠΔᐃΔ(vF51[1]);
                break;
              case 20:
                vThis5.ᐃᐃΔⵠΔⲆΔⵠⵠ();
                break;
              case 21:
                vThis5.ⲆⲆⲆⲆⲆ(v3080);
                break;
              case 22:
                vThis5.ⵠᐃᐃΔⵠΔΔⵠⵠ(vF51[1]);
                break;
              case 23:
                vThis5.ᐃⵠᐃⵠⵠΔΔⵠᐃ(v3080);
                break;
              case 24:
                vThis5.ΔΔᐃⲆᐃⵠᐃΔΔ(vF51[1] + vF51[2] * 256);
                break;
              case 25:
                vThis5.ΔⵠⲆⵠΔⵠΔⲆᐃ(vF51[1], v3080);
                break;
              case 26:
                vThis5.ⲆⵠΔΔΔ(vF51);
                break;
              case 27:
                vThis5.ⲆⲆⵠⲆⵠᐃᐃᐃⲆ();
                break;
              case 28:
                vThis5.ⵠⲆᐃⲆΔ(vF51[1]);
                break;
              case 29:
                vThis5.ⵠⵠⵠⲆⵠⲆⲆᐃⲆ();
                break;
              case 30:
                vThis5.ᐃⵠΔΔᐃⵠΔΔⲆ();
                break;
              case 31:
                vThis5.ΔⲆⲆΔⵠΔⲆⵠᐃ(vF51);
                break;
              case 32:
                vThis5.ᐃᐃΔᐃⵠᐃⵠⵠⵠ(vF51[1]);
                break;
              case 33:
                vThis5.ⵠΔⲆⲆΔⵠⵠᐃⵠ(vF51[1]);
                break;
              case 34:
                vThis5.ᐃΔⲆⲆΔΔΔⵠᐃ();
                break;
              case 35:
                vThis5.ᐃᐃΔⵠⵠΔΔᐃⲆ(vF51[1] + (vF51[2] << 8));
                break;
              case 36:
                vThis5.ᐃⵠΔΔᐃᐃᐃ(vF51[1]);
                break;
              case 37:
                vThis5.ⵠᐃΔΔⲆⲆΔⲆᐃ(vF51[1], vF51[2]);
                break;
              case 38:
                vThis5.ⲆᐃᐃⵠⲆΔΔⲆᐃ(vF51[1]);
                break;
              case 39:
                vThis5.ᐃⵠⵠⲆⵠΔⲆⵠΔ(vF51[1]);
                break;
              case 40:
                vThis5.ᐃΔⲆⲆΔΔⵠⵠᐃ();
                break;
              case 41:
                vThis5.ᐃⲆΔⵠⲆΔⲆΔⵠ(new Uint16Array(v3080));
                break;
              case 42:
                vThis5.ΔⲆⲆΔᐃⲆᐃΔⵠ(vF51[1] + (vF51[2] << 8));
                break;
              case 43:
                vThis5.ⵠⲆᐃⵠⲆⲆΔΔᐃ(vF51[1] + vF51[2] * 256);
                break;
              case 44:
                vThis5.ΔᐃⵠⵠΔⲆⲆⲆⲆ(vF51[1] + vF51[2] * 256);
                break;
              case 45:
                vThis5.ᐃⵠⲆᐃⲆΔᐃⵠⵠ(vF51[1] + (vF51[2] << 8));
                break;
              case 46:
                vThis5.ⵠⲆⲆⵠⵠⵠᐃⲆΔ(vF51[1] + vF51[2] * 256);
                break;
              case 47:
                vThis5.ΔⲆᐃⵠᐃ(vF51[1]);
                break;
              case 48:
                vThis5.ⲆⵠⵠⵠᐃⲆΔⲆⵠ();
                break;
              case 50:
                vThis5.ᐃⵠΔᐃᐃⲆΔⲆΔ(vF51[1] + vF51[2] * 256, vF51[3], vF51[4]);
                break;
              case 51:
                vThis5.ⵠΔⲆⵠΔⵠΔΔⵠ();
                break;
              case 52:
                vThis5.ᐃⲆᐃᐃⲆⲆⲆΔⵠ(vF51[1] + vF51[2] * 256);
                break;
              case 53:
                vThis5.ⲆⵠⵠⵠⲆⵠΔⲆΔ(vF51[1] + (vF51[2] << 8));
                break;
              case 54:
                vThis5.ᐃᐃⵠΔⲆΔΔⵠΔ();
                break;
              case 55:
                vThis5.ⲆΔᐃⵠⲆⲆᐃΔⲆ(vF51[1]);
                break;
              case 56:
                vThis5.ⵠᐃᐃⵠᐃⲆⵠⲆΔ(vF51[1]);
                break;
              case 57:
                vThis5.ⲆⲆⵠᐃΔⲆⵠⵠΔ();
                break;
              case 58:
                vThis5.ⵠⵠΔᐃᐃΔΔⵠᐃ();
                break;
              case 59:
                vThis5.ⲆⵠᐃᐃΔⵠⲆⵠⵠ();
                break;
              case 60:
                vThis5.ⵠⵠᐃΔᐃⲆⲆⲆⲆ();
                break;
              case 61:
                v2885.ⲆΔⵠ.ᐃⵠⵠᐃⲆΔΔ = 0.2;
                v2885.ⲆΔⵠ.ᐃΔᐃᐃⲆ = 3;
                break;
              case 62:
                vThis5.ⵠⲆⵠᐃᐃΔᐃᐃΔ(new Uint16Array(v3080));
                break;
              case 63:
                vThis5.ΔⲆⵠⲆⵠΔⵠⵠΔ();
                break;
              case 64:
                vThis5.ΔΔΔΔΔⵠᐃⵠΔ();
                break;
              case 65:
                vThis5.ΔⲆⵠᐃΔᐃᐃⵠΔ();
                break;
              case 66:
                vThis5.ⲆⲆⲆⵠⵠⲆΔΔᐃ();
                break;
              case 67:
                vThis5.ⲆΔⵠⵠⵠΔⵠΔⵠ(vF51[1]);
                break;
              case 68:
                vThis5.ᐃⵠΔᐃⲆᐃⲆΔⵠ(vF51[1]);
                break;
              case 69:
                vThis5.ⲆⵠΔⵠΔⲆⵠ(vF51[1]);
                break;
              case 70:
                vThis5.ⲆⵠⲆᐃⲆⵠΔΔΔ(vF51[1]);
                break;
              case 71:
                vThis5.ΔⵠΔⲆⲆ(vF51[1]);
            }
          }
        }
      };
      vThis5.Ⲇⵠⵠⵠ.onerror = function () {
        if (v2885.reconnect.enabled) {
          vWindow.setTimeout(vThis5.timeout, 2500);
        }
      };
      this.Ⲇⵠⵠⵠ.onopen = function () {
        clearTimeout(vThis5.ΔⵠⲆⲆⵠⵠⲆ);
        v2885.ΔΔⵠⵠⵠⵠⵠ = v2885.ΔΔⵠⵠⵠⵠⵠ || ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("token");
        ⵠⲆⲆ.ⵠΔΔᐃⵠΔⵠ().then(p1916 => {
          vThis5.Ⲇⵠⵠⵠ[v2312](vV473[v471].stringify([v2883.ΔΔΔⲆⲆ.input.value, screen.width + 200, screen.height + 200, 52, v2885.ⲆΔΔᐃΔ, v2885.ⵠΔⵠΔⲆⲆᐃ, v2885.reconnect.enabled ? 1 : 0, v2883.ⵠⲆⲆΔ, v2883.ⲆⲆⵠΔΔ, v2883.ⵠᐃᐃΔⵠ, v2883.ⵠᐃⵠᐃᐃ, v2883.ΔⲆⵠᐃⲆ, v2883.ⵠᐃΔΔΔ, vVUndefined14 === vVVVVUndefined132 ? 0 : vVUndefined14, vVVVVVUndefined82 === undefined ? 0 : vVVVVVUndefined82.substring(vVVVVVUndefined82.length - 50), v2314, v2885.ΔΔⵠⵠⵠⵠⵠ, p1916, v2885.ⵠⲆⵠᐃⵠⲆΔ, v2885.ᐃᐃΔⵠⲆΔⲆ]));
          v2885.ΔΔⵠⵠⵠⵠⵠ = undefined;
          v2885.ⵠⲆⵠᐃⵠⲆΔ = undefined;
          v2885.ᐃᐃΔⵠⲆΔⲆ = undefined;
          v2885.ⵠΔⵠⵠᐃⲆⵠ = vVVVVUndefined823;
          vThis5.ΔⵠⲆⲆⵠⵠⲆ = setTimeout(vThis5.timeout, 2000);
        });
      };
    };
  }();
  var v3081 = {
    ⲆΔᐃⵠⵠ: vV316
  };
  var v3082 = new function () {
    this.ⲆΔⲆΔⲆ = 0;
    this.loaded = 0;
    this.transition = 0;
    this.ⵠⲆⲆᐃⲆΔⵠ = function (p1917) {
      return p1917 / v2884.w * 100;
    };
    this.ⲆⲆⵠⵠᐃⲆΔ = function (p1918) {
      return p1918 / v2884.ΔᐃⲆ * 100;
    };
    this.ᐃⲆⵠⲆⲆⲆⵠ = function (p1919, p1920) {
      p1919 = this.ⵠⲆⲆᐃⲆΔⵠ(p1919) - this.ΔⲆⲆⲆᐃ.x;
      return this.ΔⲆⲆⲆᐃ.x + p1920 * p1919;
    };
    this.ΔⲆⲆᐃᐃⵠⵠ = function (p1921, p1922) {
      p1921 = Math.abs(this.ⲆⲆⵠⵠᐃⲆΔ(p1921) - this.ΔⲆⲆⲆᐃ.y);
      return this.ΔⲆⲆⲆᐃ.y + p1922 * p1921;
    };
    this.sample = {};
    this.ᐃΔⲆᐃᐃᐃᐃ = {};
    this.ⲆⲆⵠᐃ = {};
    this.ᐃⵠΔΔⲆᐃⲆ = function (p1923, p1924, p1925, p1926) {
      for (var v3083 = 0; p1924.length > v3083; v3083++) {
        var v3084 = p1924[v3083];
        if (!p1923.playing(v3084)) {
          p1923.pos(p1925, p1926, -0.5, v3084);
          p1923.play(v3084);
          return true;
        }
      }
      return vVVV316;
    };
    this.ΔΔΔ = function (p1927, p1928, p1929, p1930) {
      p1929 = this.ᐃⲆⵠⲆⲆⲆⵠ(p1929, ⲆⵠⲆᐃΔ.ⲆⲆΔᐃΔⲆᐃ);
      p1930 = this.ΔⲆⲆᐃᐃⵠⵠ(p1930, ⲆⵠⲆᐃΔ.ⲆⲆΔᐃΔⲆᐃ);
      console.log("HIT", p1927, p1928, p1929, p1930, ⲆⵠⲆᐃΔ.ⲆⲆΔᐃΔⲆᐃ);
      if (p1927) {
        if (p1928 === 1) {
          this.ᐃⵠΔΔⲆᐃⲆ(this.ⲆⲆⵠᐃ.ⵠⲆⲆⲆᐃᐃⲆ, this.sample.ⵠⲆⲆⲆᐃᐃⲆ, p1929, p1930);
        } else if (p1928 === 0) {
          this.ᐃⵠΔΔⲆᐃⲆ(this.ⲆⲆⵠᐃ.ⲆⲆⲆⵠᐃⲆᐃ, this.sample.ⲆⲆⲆⵠᐃⲆᐃ, p1929, p1930);
        }
      } else {
        this.ᐃⵠΔΔⲆᐃⲆ(this.ⲆⲆⵠᐃ.ⵠⵠⲆⲆⵠ, this.sample.ⵠⵠⲆⲆⵠ, p1929, p1930);
      }
    };
    this.ΔⲆⲆⲆᐃ = {
      x: 0,
      y: 0
    };
    this.ᐃⵠⵠΔΔⲆᐃ = {
      x: 0,
      y: 0
    };
    this.ᐃⵠⲆᐃΔΔⲆ = {};
    this.ⵠⵠΔⵠ = [];
    this.ⲆⵠΔⲆⵠ = function (p1931, p1932) {
      for (var v3085 in this.ᐃⵠⲆᐃΔΔⲆ) {
        var v3086 = this.ᐃⵠⲆᐃΔΔⲆ[v3085];
        v3086.check(p1931);
        if (v3086.ΔⵠᐃⵠᐃΔᐃ) {
          if (v2884.ᐃᐃᐃᐃΔ.now < 460000) {
            v3086.ᐃⲆΔΔΔ();
          }
          if (p1932) {
            v3086.ᐃⲆⲆ(p1931, this.ΔⲆⲆⲆᐃ);
          }
          if (this.transition) {
            v3086.transition();
          }
        }
      }
      this.transition &&= 0;
    };
    this.ⵠⵠΔᐃΔᐃΔΔᐃ = function () {
      var v3087 = [];
      for (var v3088 = 0; this.ⵠⵠΔⵠ.length > v3088; v3088++) {
        if ((v3091 = this.ⵠⵠΔⵠ[v3088]).ᐃⲆⲆΔⲆᐃⵠ) {
          v3087.push(v3088);
        } else if (!v3091.ᐃⲆⲆΔⲆᐃⵠ && !v2884.ᐃᐃΔⲆΔ[v3091.ᐃⲆⲆΔ]) {
          v3091.ᐃΔⵠⵠᐃⵠⲆ();
          v3087.push(v3088);
        }
      }
      var v3089 = v2884.ᐃᐃΔ[0];
      var v3090 = 0;
      for (v3088 = 0; v3088 < v3089.length && v3090 < v3087.length; v3088++) {
        var v3091 = v3089[v3088];
        if ((v2884.mode != 1 || v2884.ⵠⵠΔⵠ[v3091.id].ΔΔΔⲆⲆ !== "spectator") && v3091.ΔⲆΔⲆⲆ === -1 && v3091.ᐃⲆⲆΔ !== v2885.ᐃⲆⲆΔ) {
          this.ⵠⵠΔⵠ[v3087[v3090]].ⵠⵠᐃΔⵠ(v3091.ᐃⲆⲆΔ);
          v3090++;
        }
      }
    };
    this.ⵠⵠΔΔⲆᐃᐃⵠᐃ = function () {
      this.ⵠⵠΔᐃΔᐃΔΔᐃ();
      for (var v3092 = 0; v3092 < this.ⵠⵠΔⵠ.length; v3092++) {
        var v3093 = this.ⵠⵠΔⵠ[v3092];
        if (!v3093.ᐃⲆⲆΔⲆᐃⵠ && v3093.check()) {
          v3093.ᐃⲆⲆ();
        }
      }
    };
    this.ⲆⵠΔΔⲆⲆⵠⲆΔ = function (p1933) {
      if (this.ᐃⵠⵠΔΔⲆᐃ.x === p1933.x && this.ᐃⵠⵠΔΔⲆᐃ.y === p1933.y) {
        return 0;
      } else {
        this.ᐃⵠⵠΔΔⲆᐃ.x = p1933.x;
        this.ᐃⵠⵠΔΔⲆᐃ.y = p1933.y;
        this.ΔⲆⲆⲆᐃ.x = this.ⵠⲆⲆᐃⲆΔⵠ(p1933.x);
        this.ΔⲆⲆⲆᐃ.y = this.ⲆⲆⵠⵠᐃⲆΔ(p1933.y);
        Howler.pos(this.ΔⲆⲆⲆᐃ.x, this.ΔⲆⲆⲆᐃ.y, 0);
        return 1;
      }
    };
    this.ⵠᐃⲆᐃΔΔⲆⵠΔ = function () {
      if (this.ⲆΔⲆΔⲆ && this.loaded) {
        var v3094 = v2884.ᐃᐃΔⲆΔ[v2885.ᐃⲆⲆΔ];
        if (v3094) {
          v3094.ΔⲆΔⲆⲆ = 0;
          var v3095 = this.ⲆⵠΔΔⲆⲆⵠⲆΔ(v3094);
          if (v2884.mode !== 2 && v2884.mode !== 5) {
            this.ⲆⵠΔⲆⵠ(v3094, v3095);
          }
          this.ⵠⵠΔΔⲆᐃᐃⵠᐃ();
        }
      }
    };
    this.ⵠⲆΔⲆᐃⵠΔⵠΔ = function () {
      for (var v3096 in v2857) {
        var v3097 = v2857[v3096];
        if (typeof v3097 === "object" && v3097.path) {
          v3097.ΔᐃⵠᐃⲆ = new Howl({
            src: v3097.path,
            volume: 0,
            sprite: v3097.ΔΔ
          });
        }
        for (var v3098 in v3097.sample) {
          var v3099 = v3097.sample[v3098];
          var v3100 = [];
          console.log(undefined);
          for (var v3101 = 0; v3101 < v3099; v3101++) {
            var v3102 = v3097.ΔᐃⵠᐃⲆ.play(v3098);
            v3097.ΔᐃⵠᐃⲆ.stop(v3102);
            v3097.ΔᐃⵠᐃⲆ.on("fade", function (p1934) {
              if (!this.volume(p1934)) {
                console.log(undefined, undefined);
                this.stop(p1934);
              }
            }, v3102);
            v3100.push(v3102);
          }
          if (v3100.length > 1) {
            v3082.sample[v3098] = v3100;
          } else {
            v3082.sample[v3098] = v3100[0];
          }
          v3082.ⲆⲆⵠᐃ[v3098] = v3097.ΔᐃⵠᐃⲆ;
        }
      }
    };
    this.ⵠᐃΔⵠⲆᐃⲆ = function (p1935, p1936, p1937) {
      for (var v3103 = 0; v3103 < p1935.length; v3103++) {
        p1936.volume(p1937, p1935[v3103]);
      }
    };
    this.ⵠⵠⵠⲆΔΔⵠ = function (p1938, p1939, p1940, p1941, p1942, p1943) {
      var vP1938 = p1938;
      for (var v3104 = 0; v3104 < p1940; v3104++) {
        var v3105 = vP1938[v3104] = [];
        for (ⵠᐃⲆᐃ = 0; ⵠᐃⲆᐃ < p1941; ⵠᐃⲆᐃ++) {
          v3105[ⵠᐃⲆᐃ] = v3082.sample[p1942 + ⵠᐃⲆᐃ][v3104];
          p1939.ΔᐃⵠᐃⲆ.volume(p1943, v3105[ⵠᐃⲆᐃ]);
        }
      }
    };
    this.ⵠⵠᐃΔⵠ = function () {
      v3082.ⵠⲆΔⲆᐃⵠΔⵠΔ();
      v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠΔⲆⲆΔⵠΔ = [];
      v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠⵠⵠᐃⲆ = [];
      v3082.ᐃΔⲆᐃᐃᐃᐃ.ᐃΔᐃΔᐃ = [];
      v3082.ⵠⵠⵠⲆΔΔⵠ(v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠΔⲆⲆΔⵠΔ, v2857.ΔⲆⵠᐃⲆᐃΔ, 8, 3, "p", 0.15);
      v3082.ⵠⵠⵠⲆΔΔⵠ(v3082.ᐃΔⲆᐃᐃᐃᐃ.ⵠⵠⵠᐃⲆ, v2857.ᐃⲆⲆⲆⵠⵠᐃ, 8, 4, "w", 0.15);
      v3082.ⵠⵠⵠⲆΔΔⵠ(v3082.ᐃΔⲆᐃᐃᐃᐃ.ᐃΔᐃΔᐃ, v2857.ⲆⲆΔⵠⵠΔⵠ, 8, 3, "d", 0.09);
      v3082.ⵠᐃΔⵠⲆᐃⲆ(v3082.sample.ⵠⵠⲆⲆⵠ, v3082.ⲆⲆⵠᐃ.ⵠⵠⲆⲆⵠ, 0.15);
      v3082.ⵠᐃΔⵠⲆᐃⲆ(v3082.sample.ⲆⲆⲆⵠᐃⲆᐃ, v3082.ⲆⲆⵠᐃ.ⲆⲆⲆⵠᐃⲆᐃ, 0.2);
      v3082.ⵠᐃΔⵠⲆᐃⲆ(v3082.sample.ⵠⲆⲆⲆᐃᐃⲆ, v3082.ⲆⲆⵠᐃ.ⵠⲆⲆⲆᐃᐃⲆ, 1);
      v3082.ᐃⵠⲆᐃΔΔⲆ.ⵠᐃⵠΔᐃⲆⵠᐃΔ = new f512(12, this.sample.ⲆⲆᐃᐃΔΔⵠ, this.sample.ΔᐃⵠᐃⵠⲆⵠ, 5000, 0.05, 0.4, v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ, 3000, {
        x: v624.ΔᐃᐃⲆΔᐃⵠ,
        y: v624.ᐃᐃⲆΔΔᐃᐃ,
        w: v2884.w,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      }, {
        x: v624.ΔᐃᐃⲆΔᐃⵠ - 2300,
        y: v624.ᐃᐃⲆΔΔᐃᐃ - 4000,
        w: v2884.w,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      }, {
        x: v624.ΔᐃᐃⲆΔᐃⵠ - 1500,
        y: v624.ᐃᐃⲆΔΔᐃᐃ - 2000,
        w: v2884.w,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      });
      v3082.ᐃⵠⲆᐃΔΔⲆ.ⵠⲆΔⲆᐃΔⵠᐃᐃ = new f512(12, this.sample.ⵠᐃⲆΔᐃΔΔ, this.sample.ᐃⲆΔⵠⵠⲆⵠ, 5000, 0.03, 0.25, v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ, 3000, {
        x: 0,
        y: v624.ᐃᐃⲆΔΔᐃᐃ + 800,
        w: v624.ΔᐃᐃⲆΔᐃⵠ - 2300,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      }, {
        x: -100,
        y: v624.ᐃᐃⲆΔΔᐃᐃ - 300,
        w: v624.ΔᐃᐃⲆΔᐃⵠ - 100,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      }, {
        x: -100,
        y: v624.ᐃᐃⲆΔΔᐃᐃ + 400,
        w: v624.ΔᐃᐃⲆΔᐃⵠ - 1400,
        ΔᐃⲆ: v2884.ΔᐃⲆ
      });
      v3082.ᐃⵠⲆᐃΔΔⲆ.ΔΔⵠΔⲆΔᐃ = new f512(12, this.sample.ᐃΔⵠⵠⲆΔⲆ, this.sample.ⲆⲆⲆⵠⵠⵠⲆ, 5000, 0.01, 0.22, v2857.ⵠᐃⲆⲆᐃⲆⲆ.ΔᐃⵠᐃⲆ, 3000, {
        x: -100,
        y: -100,
        w: v2884.w + 200,
        ΔᐃⲆ: v624.ᐃᐃⲆΔΔᐃᐃ - 1000
      }, {
        x: -100,
        y: -100,
        w: v2884.w + 200,
        ΔᐃⲆ: v624.ᐃᐃⲆΔΔᐃᐃ + 600
      }, {
        x: -100,
        y: -100,
        w: v2884.w + 200,
        ΔᐃⲆ: v624.ᐃᐃⲆΔΔᐃᐃ + 100
      });
      for (var v3106 = 0; v3106 < 8; v3106++) {
        v3082.ⵠⵠΔⵠ[v3106] = new f514(v3106);
      }
      v3082.ⵠⵠΔⵠ[0].ⵠⵠᐃΔⵠ(v2885.ᐃⲆⲆΔ);
      v3082.loaded = 1;
    };
    this.ΔⲆⲆᐃⵠᐃⲆⲆⵠ = function () {
      if (!this.transition && v2884.ᐃᐃᐃᐃΔ.now < 460000) {
        this.transition = 1;
      }
    };
    this.ⵠΔⵠᐃΔ = function () {
      if (this.ⲆΔⲆΔⲆ && this.loaded) {
        for (var v3107 in v3082.sample) {
          var v3108 = v3082.sample[v3107];
          if (typeof v3108 === "object") {
            for (var v3109 = 0; v3109 < v3108.length; v3109++) {
              v3082.ⲆⲆⵠᐃ[v3107].stop(v3108[v3109]);
            }
          } else {
            v3082.ⲆⲆⵠᐃ[v3107].stop(v3108);
          }
        }
        for (v3109 = 0; v3109 < v3082.ⵠⵠΔⵠ.length; v3109++) {
          v3082.ⵠⵠΔⵠ[v3109].ᐃΔⵠⵠᐃⵠⲆ();
        }
      }
    };
    this.select = function () {
      if (v3082.ⲆΔⲆΔⲆ) {
        v3082.ⵠΔⵠᐃΔ();
      } else {
        if (!v3082.loaded) {
          v3082.ⵠⵠᐃΔⵠ();
        }
        v3082.ⵠⵠΔⵠ[0].ᐃⲆⲆΔ = v2885.ᐃⲆⲆΔ;
        v3082.ⵠⵠΔⵠ[0].ᐃⲆⲆΔⲆᐃⵠ = 0;
        v3082.ΔⲆⲆᐃⵠᐃⲆⲆⵠ();
      }
      v3082.ⲆΔⲆΔⲆ = !v3082.ⲆΔⲆΔⲆ;
    };
  }();
  var v3110 = new function () {
    this.ΔΔΔⵠⵠΔᐃ = function () {
      this.ΔᐃΔⲆⲆ = 81;
      this.ᐃᐃⵠᐃΔ = 68;
      this.ⵠⲆⲆⲆΔ = 90;
      this.ⲆⲆⵠⲆΔⵠⵠ = 83;
    };
    this.ΔᐃΔⲆᐃⵠᐃ = function () {
      this.ΔᐃΔⲆⲆ = 65;
      this.ᐃᐃⵠᐃΔ = 68;
      this.ⵠⲆⲆⲆΔ = 87;
      this.ⵠⲆⲆⵠⵠ = 83;
    };
    this.ΔΔᐃⵠⵠ = 0;
    this.ⲆⲆⵠⲆΔⵠⵠ = 1;
    this.ᐃⵠᐃⲆⵠᐃⲆ = 49;
    this.ᐃᐃⵠᐃΔⵠⵠ = 50;
    this.ⵠᐃΔΔᐃⲆΔ = 51;
    this.ⵠⵠᐃΔⵠⵠᐃ = 52;
    this.ᐃⵠᐃΔΔⲆⵠⵠΔ = 53;
    this.ΔⵠⲆᐃⲆⲆᐃ = 17;
    this.ᐃⵠΔⲆΔΔᐃ = 37;
    this.ᐃΔⲆⵠⵠΔΔ = 39;
    this.ⲆⲆᐃⲆΔⲆⵠ = 38;
    this.ᐃⲆᐃⵠⵠΔᐃ = 40;
    this.ΔⵠᐃΔⵠⵠᐃ = 32;
    this.ⵠⲆⲆᐃⵠΔᐃ = 82;
    this.ΔⲆⲆⲆΔᐃᐃ = 71;
    this.ΔⵠᐃΔⲆΔⲆ = 86;
    this.ⵠⵠⵠᐃΔⲆᐃ = 66;
    this.ΔᐃΔⲆᐃⵠᐃ();
    this.keys = new Array(255);
    for (var v3111 = 0; v3111 < 255; v3111++) {
      this.keys[v3111] = this.ΔΔᐃⵠⵠ;
    }
    this.up = function (p1944) {
      var v3112 = Math.min(p1944.charCode || p1944.keyCode, 255);
      this.keys[v3112] = this.ΔΔᐃⵠⵠ;
    };
    this.down = function (p1945) {
      var v3113 = Math.min(p1945.charCode || p1945.keyCode, 255);
      if (v3113 == this.ΔᐃΔⲆⲆ || this.ᐃⵠΔⲆΔΔᐃ == v3113) {
        this.ⵠᐃᐃᐃⲆⲆⲆ();
      } else if (v3113 == this.ⵠⲆⲆⲆΔ || this.ⲆⲆᐃⲆΔⲆⵠ == v3113) {
        this.ⵠᐃⲆΔⲆⲆⲆ();
      } else if (this.ⲆⲆⵠⲆΔⵠⵠ == v3113 || v3113 == this.ⲆⲆᐃⵠⵠⵠΔⲆⵠ) {
        this.ΔⲆΔⵠΔΔΔ();
      } else if (this.ᐃᐃⵠᐃΔ == v3113 || v3113 == this.ᐃΔⲆⵠⵠΔΔ) {
        this.ⵠⵠΔᐃⵠΔⲆ();
      }
      this.keys[v3113] = this.ⲆⲆⵠⲆΔⵠⵠ;
      return v3113;
    };
    this.ⵠᐃᐃᐃⲆⲆⲆ = function () {
      this.keys[this.ᐃᐃⵠᐃΔ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃΔⲆⵠⵠΔΔ] = this.ΔΔᐃⵠⵠ;
    };
    this.ⵠⵠΔᐃⵠΔⲆ = function () {
      this.keys[this.ΔᐃΔⲆⲆ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃⵠΔⲆΔΔᐃ] = this.ΔΔᐃⵠⵠ;
    };
    this.ΔⲆΔⵠΔΔΔ = function () {
      this.keys[this.ⵠⲆⲆⲆΔ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ⲆⲆᐃⲆΔⲆⵠ] = this.ΔΔᐃⵠⵠ;
    };
    this.ⵠᐃⲆΔⲆⲆⲆ = function () {
      this.keys[this.ⵠⲆⲆⵠⵠ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃⲆᐃⵠⵠΔᐃ] = this.ΔΔᐃⵠⵠ;
    };
    this.ᐃⲆΔⲆᐃⵠᐃ = function () {
      this.keys[this.ᐃᐃⵠᐃΔ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃΔⲆⵠⵠΔΔ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ΔᐃΔⲆⲆ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃⵠΔⲆΔΔᐃ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ⵠⲆⲆⲆΔ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ⲆⲆᐃⲆΔⲆⵠ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ⵠⲆⲆⵠⵠ] = this.ΔΔᐃⵠⵠ;
      this.keys[this.ᐃⲆᐃⵠⵠΔᐃ] = this.ΔΔᐃⵠⵠ;
    };
    this.ⵠⵠⲆᐃⲆⲆⵠ = function () {
      return this.keys[this.ΔᐃΔⲆⲆ] || this.keys[this.ᐃⵠΔⲆΔΔᐃ];
    };
    this.ⵠⲆⲆⵠᐃⵠⲆ = function () {
      return this.keys[this.ᐃᐃⵠᐃΔ] || this.keys[this.ᐃΔⲆⵠⵠΔΔ];
    };
    this.ᐃⵠⲆᐃᐃⵠᐃ = function () {
      return this.keys[this.ⵠⲆⲆⲆΔ] || this.keys[this.ⲆⲆᐃⲆΔⲆⵠ];
    };
    this.ⵠⲆΔⵠⵠⲆⲆ = function () {
      return this.keys[this.ⵠⲆⲆⵠⵠ] || this.keys[this.ᐃⲆᐃⵠⵠΔᐃ];
    };
    this.ᐃᐃᐃΔᐃⵠΔᐃᐃ = function () {
      return this.keys[this.ΔⵠⲆᐃⲆⲆᐃ];
    };
    this.ᐃΔⲆⵠΔᐃᐃΔᐃ = function () {
      return this.keys[this.ᐃⵠᐃⲆⵠᐃⲆ];
    };
    this.ⵠⵠⲆⲆⵠⵠᐃⲆΔ = function () {
      return this.keys[this.ᐃᐃⵠᐃΔⵠⵠ];
    };
    this.ΔⵠΔⵠⲆΔΔᐃⲆ = function () {
      return this.keys[this.ⵠᐃΔΔᐃⲆΔ];
    };
    this.ᐃΔᐃⵠⵠⲆΔⲆΔ = function () {
      return this.keys[this.ⵠⵠᐃΔⵠⵠᐃ];
    };
    this.ⲆⲆᐃⲆᐃᐃᐃΔΔ = function () {
      return this.keys[this.ΔⵠᐃΔⵠⵠᐃ];
    };
    this.ⲆⵠΔⵠΔⲆΔⵠⵠ = function () {
      return this.keys[this.ⵠⲆⲆᐃⵠΔᐃ];
    };
    this.ΔⵠⵠⲆᐃⵠᐃΔᐃ = function () {
      return this.keys[this.ΔⲆⲆⲆΔᐃᐃ];
    };
    this.ΔᐃᐃⵠⲆᐃΔⵠⲆ = function () {
      return this.keys[this.ΔⵠᐃΔⲆΔⲆ];
    };
    this.ᐃᐃⵠΔΔⵠⲆΔⲆ = function () {
      return this.keys[this.ⵠⵠⵠᐃΔⲆᐃ];
    };
  }();
  var v3114 = new function () {
    this.ⲆⲆⵠⲆΔⵠⵠ = 0;
    this.ΔΔᐃⵠⵠ = 1;
    this.IDLE = 2;
    this.ⵠΔΔΔΔⵠΔ = 0;
    this.ᐃⵠΔᐃᐃᐃⵠⲆᐃ = 1;
    this.ᐃΔⲆᐃ = {
      y: 0,
      x: 0
    };
    this.ΔⲆᐃᐃⵠᐃⲆ = 0;
    this.ⵠᐃⵠᐃᐃⵠⲆ = 0;
    this.angle = 0;
    this.state = this.IDLE;
    this.ᐃⵠᐃⲆ = this.ⵠΔΔΔΔⵠΔ;
    this.down = function () {
      this.state = this.ⲆⲆⵠⲆΔⵠⵠ;
    };
    this.up = function () {
      this.state = this.ΔΔᐃⵠⵠ;
    };
    this.ᐃⲆⲆ = function () {
      if (this.ᐃΔⲆᐃ.x != this.ΔⲆᐃᐃⵠᐃⲆ || this.ᐃΔⲆᐃ.y != this.ⵠᐃⵠᐃᐃⵠⲆ) {
        this.ΔⲆᐃᐃⵠᐃⲆ = this.ᐃΔⲆᐃ.x;
        this.ⵠᐃⵠᐃᐃⵠⲆ = this.ᐃΔⲆᐃ.y;
        return v30;
      } else {
        return v31;
      }
    };
  }();
  var v3115 = 0;
  var v3116 = 0;
  var v3117 = new function (p1946, p1947, p1948) {
    this.ΔΔⵠ = p1946;
    this.ᐃ = p1947;
    this.ⵠⲆⲆⵠᐃᐃⵠ = {
      translate: {
        x: 0,
        y: 0
      },
      style: document.getElementById("loading").style,
      ᐃⲆⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ⵠⲆⲆⵠᐃᐃⵠ.style.position = "absolute";
    this.ⵠⲆⲆⵠᐃᐃⵠ.style.display = "inline-block";
    this.ⵠⲆⲆⵠᐃᐃⵠ.ᐃⲆⲆ();
    this.ⲆΔᐃⵠⵠ = true;
    this.stop = function () {
      this.ⲆΔᐃⵠⵠ = vV315;
    };
    this.ΔⵠᐃⵠⲆᐃΔ = {
      total: 1
    };
    var vThis6 = this;
    function f519() {}
    var v3118 = 0;
    function f520(p1949) {
      if (p1949.indexOf("normal-mode") !== -1 || p1949.indexOf("player0") !== -1) {
        return 1;
      } else if (p1949.indexOf("day-bag") !== -1 || p1949.indexOf("night-bag") !== -1 || p1949.indexOf("day-book") !== -1 || p1949.indexOf("night-book") !== -1 || p1949.indexOf("day-player") !== -1 || p1949.indexOf("night-player") !== -1 || p1949.indexOf("day-accessory") !== -1 || p1949.indexOf("night-accessory") !== -1 || p1949.indexOf("day-crate") !== -1 || p1949.indexOf("night-crate") !== -1 || p1949.indexOf("day-skin") !== -1 || p1949.indexOf("night-skin") !== -1 || p1949.indexOf("day-river") !== -1 || p1949.indexOf("night-river") !== -1 || p1949.indexOf("day-river") !== -1 || p1949.indexOf("night-river") !== -1 || p1949.indexOf("day-rock") !== -1 || p1949.indexOf("night-rock") !== -1 || p1949.indexOf("day-flower") !== -1 || p1949.indexOf("night-flower") !== -1 || p1949.indexOf("day-leaf") !== -1 || p1949.indexOf("night-leaf") !== -1 || p1949.indexOf("day-herb") !== -1 || p1949.indexOf("night-herb") !== -1 || p1949.indexOf("day-shell") !== -1 || p1949.indexOf("night-shell") !== -1 || p1949.indexOf("day-hand-skin") !== -1 || p1949.indexOf("night-hand-skin") !== -1 || p1949.indexOf("bignight") !== -1 || p1949.indexOf("bigday") !== -1 || p1949.indexOf("bigzday") !== -1 || p1949.indexOf("bigznight") !== -1 || p1949.indexOf("tutorial-box") !== -1 || p1949.indexOf("tuto-") !== -1 || p1949.indexOf("-leaderboard-") !== -1 || p1949.indexOf("-lead-") !== -1 || p1949.indexOf("day-lava-") !== -1 || p1949.indexOf("night-lava-") !== -1 || p1949.indexOf("-click.png") !== -1 || p1949.indexOf("-in.png") !== -1 || p1949.indexOf("-fog") !== -1 || p1949.indexOf("-lava") !== -1 || p1949.indexOf("pebblecompo") !== -1 || p1949.indexOf("avatar-player") !== -1) {
        return 0;
      } else {
        return 1;
      }
    }
    this.ΔⲆΔⵠΔΔⲆ = function () {
      vThis6.ᐃⲆⲆ();
      if (++v3118 == 40) {
        vThis6.stop();
        f519();
        return;
      }
      vWindow.setTimeout(vThis6.ΔⲆΔⵠΔΔⲆ, 33);
    };
    this.ⵠΔⵠᐃΔ = function (p1950) {
      f519 = p1950;
      vThis6.ΔⲆΔⵠΔΔⲆ();
    };
    new Date().getTime();
    Object.keys(ⵠᐃ).length;
    console.log(undefined, vVVVUndefined132);
    for (var v3119 in ⵠᐃ) {
      if (f520(ⵠᐃ[v3119]) === 0) {
        0;
      }
    }
    console.log(undefined, undefined);
    function f521() {
      if (this.ΔᐃⵠΔⲆⵠⵠ !== 0) {
        return this.ΔᐃⵠΔⲆⵠⵠ;
      } else {
        this.ΔᐃⵠΔⲆⵠⵠ = 2;
        this.src = this.ΔΔⲆⲆⵠ;
        return 0;
      }
    }
    function f522(p1951) {
      this.ΔᐃⵠΔⲆⵠⵠ = 1;
    }
    var v3120 = 0;
    function f523() {
      console.log(vVVVVUndefined132);
      if (v3120 !== 1) {
        v3120 = 1;
        console.log(undefined);
        if (f72 !== v813) {
          f72();
        }
        v813();
        var v3121 = ⵠⲆⲆ.ⵠⵠⲆΔΔᐃᐃ("server");
        if (v3121 !== null) {
          v2887.ΔⲆᐃΔⲆᐃΔ = 1;
          v2887.ⲆᐃᐃΔⲆ = [{
            nu: 0,
            m: 100,
            i: "server" + v3121 + ".starve.io",
            p: 443,
            a: v3121,
            ssl: 1
          }];
        }
        v2887.ⲆΔΔⵠᐃᐃⵠⲆⲆ();
        setTimeout(p1948, 100);
      }
    }
    function f524() {
      let vF53 = function () {
        v2887.ΔᐃΔⵠᐃⵠᐃ(f523);
      };
      if (document.fonts && document.fonts.check) {
        if (document.fonts.check("1em Baloo Paaji")) {
          setTimeout(vF53, 100);
        } else {
          setTimeout(f524, 100);
        }
      } else {
        setTimeout(vF53, 1000);
      }
    }
    function f525() {
      this.ᐃⲆⵠΔΔⵠⵠ++;
      console.warn(`Image (${this.src}) failed to load, attempt ${this.ᐃⲆⵠΔΔⵠⵠ}`, this);
      if (this.ᐃⲆⵠΔΔⵠⵠ > 3) {
        console.warn("Failed to load image too many times");
      }
      var v3122 = this.ᐃⲆⵠΔΔⵠⵠ;
      var v3123 = this.src;
      var v3124 = f520(v3123) === 0 ? 10000 : 2000;
      setTimeout(function () {
        for (var v3125 in ⲆⲆⵠⲆⵠⵠΔ) {
          if (v3123.indexOf(ⲆⲆⵠⲆⵠⵠΔ[v3125]) !== -1) {
            ⵠᐃ[v3125] = new Image();
            ⵠᐃ[v3125].onload = f522;
            ⵠᐃ[v3125].onerror = f525;
            ⵠᐃ[v3125].ᐃⲆⵠΔΔⵠⵠ = v3122;
            ⵠᐃ[v3125].src = v3123;
            break;
          }
        }
      }, v3124);
    }
    function f526(p1952) {
      for (var v3126 in ⵠᐃ) {
        var v3127 = ⵠᐃ[v3126];
        if (typeof v3127 === "string" && f520(v3127) === p1952) {
          ⵠᐃ[v3126] = new Image();
          ⵠᐃ[v3126].ΔᐃⵠΔⲆⵠⵠ = 0;
          ⵠᐃ[v3126].ᐃⲆⵠΔΔⵠⵠ = 0;
          ⵠᐃ[v3126].onload = f522;
          ⵠᐃ[v3126].onerror = f525;
          ⵠᐃ[v3126].ᐃⲆᐃⵠⲆⲆⲆ = f521;
          ⵠᐃ[v3126].ΔΔⲆⲆⵠ = v3127;
        }
      }
    }
    f526(1);
    f526(0);
    f166(1, "l", 20, "#000");
    f524();
    f203();
    this.ᐃⲆⲆ = function () {
      this.ⵠⲆⲆⵠᐃᐃⵠ.translate.x = (v420 - 500) / 2;
      this.ⵠⲆⲆⵠᐃᐃⵠ.translate.y = (v421 - 150) / 2;
      var v3128 = 2500 / (40 - v3118 + 1) - 48;
      this.ⵠⲆⲆⵠᐃᐃⵠ.translate.y -= v3128;
      this.ⵠⲆⲆⵠᐃᐃⵠ.ᐃⲆⲆ();
    };
    this.ⵠⲆⲆⵠᐃᐃⵠ.ᐃⲆⲆ();
    this.ᐃᐃΔⵠ = function () {
      try {
        f290();
      } catch (e) {}
      this.ᐃⲆⲆ();
    };
  }(v417, v419, function () {
    f261();
    v3081 = new f499(v417, v419);
    (v2883 = new f482(v417, v419)).ᐃᐃᐃᐃⲆⲆΔᐃⲆ();
    v2886 = new f506(v417, v419);
    v2884 = new f442();
    v2885 = new f469();
    v3117.ⵠΔⵠᐃΔ(function () {
      v3117.ⵠⲆⲆⵠᐃᐃⵠ.style.display = "none";
      v2883.ⲆΔⲆΔⲆ();
    });
  });
  function f527() {
    try {
      vWindow.Widget.adsRefresh();
    } catch (e) {}
  }
  vWindow.onbeforeunload = function () {
    if (v3081.ⲆΔᐃⵠⵠ) {
      return "Are you sure you want quit starve.io ;-; ?";
    }
  };
  f49();
  (function f528(p1953) {
    vWindow.requestAnimationFrame(f528);
    v3116 = (p1953 - v3115) / 1000;
    v3115 = p1953;
    v3116 = v3116 > 1 ? 1 : v3116;
    if (v3081.ⲆΔᐃⵠⵠ) {
      v3081.ᐃᐃΔⵠ();
    } else {
      v419.clearRect(0, 0, v420, v421);
      if (v3117.ⲆΔᐃⵠⵠ) {
        v3117.ᐃᐃΔⵠ();
      } else if (v2883.ⲆΔᐃⵠⵠ) {
        v2883.ᐃᐃΔⵠ();
      } else if (v2886.ⲆΔᐃⵠⵠ) {
        v2886.ᐃᐃΔⵠ();
      }
    }
  })(0);
  var v3129 = 0;
  function f529() {
    v3130.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", vV304);
    v3130.send();
  }
  var v3130 = new XMLHttpRequest();
  function f530(p1954, p1955, p1956, p1957, p1958) {
    v70(v802, p1954, p1955, p1956, p1957, p1958);
    return (64279 + (f14(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]) ^ f14(vVVVVVUndefined8232[0], vVVVVVUndefined8232[1], vVVVVVUndefined8232[2], vVVVVVUndefined8232[3], vVVVVVUndefined8232[4]))) % 65299;
  }
  v3130.onreadystatechange = function () {
    if (this.readyState === 4) {
      this.status;
    }
  };
  function f531(p1959) {
    if (p1959 > 0) {
      return p1959 * p1959;
    } else {
      return p1959;
    }
  }
  function f532(p1960) {
    return vWindow.String.fromCharCode(p1960);
  }
  var v3131 = "https://token.starve.io/";
  var v3132 = "https://token2.starve.io/";
  var v3133 = 0;
  var v3134 = 1;
  var v3135 = 4;
  var vUndefined5 = undefined;
  var vVVVVVUndefined82 = vVVVVUndefined82;
  var vVUndefined14 = vUndefined;
  var v3136 = 0;
  vWindow.ⵠⵠⲆⲆΔΔⵠ = function () {
    v3136 = 1;
  };
  var v3137 = {
    ΔᐃⵠᐃⵠᐃᐃⲆⲆ: "ACCESS_TOKEN"
  };
  var v3138 = document.createElement("script");
  v3138.type = "text/javascript";
  v3138.async = true;
  v3138.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  v3138.addEventListener("load", function (p1961) {
    vWindow.XPayStationWidget.init(v3137);
    vWindow.XPayStationWidget.on("status-done", f544);
  }, false);
  document.getElementsByTagName("head")[0].appendChild(v3138);
  vWindow.fbAsyncInit = function () {
    f543();
    console.log(vVVUndefined13);
  };
  (function (p1962, p1963, p1964) {
    var v3139;
    var v3140 = p1962.getElementsByTagName(p1963)[0];
    if (!p1962.getElementById(p1964)) {
      (v3139 = p1962.createElement(p1963)).id = p1964;
      v3139.src = "https://connect.facebook.net/en_US/sdk.js";
      v3140.parentNode.insertBefore(v3139, v3140);
    }
  })(document, "script", "facebook-jssdk");
  var vUndefined6 = undefined;
  var vUndefined7 = undefined;
  function f533() {
    vWindow.gapi.auth2.init({
      client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
      scope: "https://www.googleapis.com/auth/userinfo.profile"
    }).then(p1965 => {
      (vUndefined6 = p1965).isSignedIn.listen(f534);
      vUndefined6.currentUser.listen(f535);
      if (vUndefined6.isSignedIn.get()) {
        vUndefined6.signIn();
      }
      f536();
    });
  }
  function f534(p1966) {}
  function f535(p1967) {
    if (vVVVVVUndefined82 === undefined && vVVVUndefined822 !== vUndefined7 && (vVVVVVUndefined82 = vUndefined7.getAuthResponse().id_token) !== vVVUndefined132) {
      vUndefined5 = v3133;
      vVUndefined14 = vUndefined7.getBasicProfile().getId();
      vWindow.ⵠⵠⲆⲆΔΔⵠ();
      return;
    }
    if (p1967 !== vVVUndefined132 && p1967.isSignedIn() === true) {
      vVUndefined14 = (vUndefined7 = p1967).id;
      vVUndefined14 = vUndefined7.getBasicProfile().getId();
      vVVVVVUndefined82 = vUndefined7.getAuthResponse().id_token;
      vUndefined5 = v3133;
      vWindow.ⵠⵠⲆⲆΔΔⵠ();
    }
  }
  function f536() {
    if (vUndefined6) {
      vUndefined7 = vUndefined6.currentUser.get();
    }
  }
  function f537(p1968, p1969, p1970, p1971) {
    p1968 = p1968 === vVVUndefined82 ? v2883.ΔⲆⲆΔᐃⲆⲆ : p1968;
    p1969 = p1969 === undefined ? v2883.ⵠΔⲆΔΔⲆΔ : p1969;
    p1970 = p1970 === vVVVUndefined82 ? v2883.ΔᐃⲆⵠⲆⵠⵠ : p1970;
    p1971 = p1971 === undefined ? v2883.ⲆⵠᐃⵠⵠΔΔ : p1971;
    if (p1968 !== v2883.ΔⲆⲆΔᐃⲆⲆ || p1969 !== v2883.ⵠΔⲆΔΔⲆΔ || p1970 !== v2883.ΔᐃⲆⵠⲆⵠⵠ || p1971 !== v2883.ⲆⵠᐃⵠⵠΔΔ) {
      v2883.ΔⲆⲆΔᐃⲆⲆ = p1968;
      v2883.ⵠΔⲆΔΔⲆΔ = p1969;
      v2883.ΔᐃⲆⵠⲆⵠⵠ = p1970;
      v2883.ⲆⵠᐃⵠⵠΔΔ = p1971;
      if (p1971 === v2883.ⵠΔⵠΔⲆΔⵠ) {
        p1971 = "0";
      } else if (p1971 === v2883.ⲆⲆΔⲆᐃᐃⲆ) {
        p1971 = "1";
      } else if (p1971 === v2883.ΔΔᐃΔⵠΔⵠ) {
        p1971 = "2";
      } else if (v2883.ⵠⵠᐃΔⲆΔⵠ === p1971) {
        p1971 = "3";
      } else if (p1971 === v2883.ᐃⵠᐃᐃⵠΔⵠ) {
        p1971 = "4";
      } else if (p1971 === v2883.ⲆⲆⵠⵠⵠΔⲆ) {
        p1971 = "5";
      } else if (p1971 === v2883.ᐃⲆΔⲆⵠᐃΔ) {
        p1971 = "6";
      }
      if (v2883.ᐃⲆᐃΔⲆⲆᐃ === p1969) {
        p1969 = "total";
      } else if (p1969 === v2883.ⵠⲆᐃⵠΔⲆᐃ) {
        p1969 = "normal";
      } else if (p1969 === v2883.ⲆⲆΔⲆⲆⵠᐃ) {
        p1969 = "zombie";
      } else if (p1969 === v2883.ᐃΔΔⵠⵠⵠⲆ) {
        p1969 = "vampire";
      } else if (p1969 === v2883.ᐃᐃᐃⵠᐃⲆⵠ) {
        p1969 = "forest";
      }
      if (p1968 === v2883.ΔⲆⲆᐃⵠΔⲆ) {
        p1968 = "all";
      }
      if (v2883.ⵠⵠᐃᐃᐃⵠⲆ === p1968) {
        p1968 = "week";
      }
      if (p1968 === v2883.ⲆⲆⵠⲆΔᐃⲆ) {
        p1968 = "today";
      }
      if (v2883.ᐃⲆⵠᐃⲆⲆⲆ === p1970) {
        p1970 = "kill";
      } else if (p1970 === v2883.ⵠⲆⲆⵠⲆΔⵠ) {
        p1970 = "score";
      } else if (v2883.ΔΔⵠΔᐃΔⵠ === p1970) {
        p1970 = "time";
      }
      var v3141 = new XMLHttpRequest();
      v3141.open("GET", v3131 + "leaderboard?range=" + p1968 + "&mode=" + p1969 + "&sort=" + p1970 + "&season=" + p1971);
      v3141.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3141.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3141.responseText !== "0") {
          for (var v3142 = JSON.parse(v3141.responseText), v3143 = "", v3144 = 0; v3142.length > v3144; v3144++) {
            ᐃⲆⲆΔⲆ = v3142[v3144];
            var v3145 = ᐃⲆⲆΔⲆ[1];
            try {
              if (v3145.indexOf("Starver#") === -1) {
                v3145 = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(v3145)));
              }
            } catch (e) {}
            v3143 += "<div class=\"lineLeaderboard\">";
            v3143 += "<div class=\"rank\">";
            v3143 += v3144 + 1 + "";
            v3143 += "</div>";
            v3143 += "<div class=\"name\">";
            v3143 += v3145;
            v3143 += "</div>";
            v3143 += "<div class=\"lvl\">";
            v3143 += v2883.ⲆⲆΔⲆᐃᐃⵠ(ᐃⲆⲆΔⲆ[6]) + 1 + "";
            v3143 += "</div>";
            v3143 += "<div class=\"kills\">";
            v3143 += ᐃⲆⲆΔⲆ[5] + "";
            v3143 += "</div>";
            v3143 += "<div class=\"time\">";
            v3143 += ᐃⲆⲆΔⲆ[4] + "";
            v3143 += "</div>";
            v3143 += "<div class=\"score\">";
            v3143 += ᐃⲆⲆΔⲆ[3] + "";
            v3143 += "</div>";
            v3143 += "</div>";
          }
          document.getElementById("leaderboard").innerHTML = v3143;
        }
      };
      v3141.send();
    }
  }
  function f538(p1972) {
    var v3146 = new XMLHttpRequest();
    v3146.open("GET", v3131 + "setRegion?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14 + "&region=" + p1972);
    v3146.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3146.onreadystatechange = function () {
      if (this.readyState === 4 && this.status === 200) {
        if (v3146.responseText !== "0") {
          v2883.ⵠᐃᐃᐃ(v2883.ⲆΔⲆⵠⲆᐃⵠ);
        } else {
          v2883.ⵠᐃᐃᐃ(v2883.ⵠᐃⲆΔⲆ);
        }
      }
    };
    v3146.send();
  }
  function f539(p1973) {
    if (vVUndefined14) {
      var v3147 = new XMLHttpRequest();
      v3147.open("GET", v3131 + "xsolla?userid=" + vVUndefined14 + "&item=" + p1973);
      v3147.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3147.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3147.responseText !== "0") {
          v3137.access_token = v3147.responseText;
          vWindow.XPayStationWidget.init(v3137);
          vWindow.XPayStationWidget.open();
        }
      };
      v3147.send();
    }
  }
  function f540(p1974, p1975) {
    if (!(v2883.ΔⵠᐃⵠⲆ > 0)) {
      if (v2883.ᐃⵠⲆΔΔ < p1975) {
        v2883.ⵠᐃᐃᐃ(v2883.ⲆⲆⵠΔⵠ);
      } else {
        v2883.ΔⵠᐃⵠⲆ = 2;
        v2883.ⲆⲆᐃᐃΔⵠⲆ = 0;
        v2883.ΔΔⲆΔⵠⵠᐃ = 100;
        var v3148 = new XMLHttpRequest();
        v3148.open("GET", v3131 + "buySpin?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14 + "&spin=" + p1974);
        v3148.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3148.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            if (v3148.responseText !== "0") {
              var v3149 = JSON.parse(v3148.responseText);
              v2883.ΔⲆⵠᐃᐃⲆⲆⲆᐃ(Math.PI * v3149.rand * 2, v3149.type, v3149.id);
              v2883.ᐃⵠⲆΔΔ -= p1975;
            } else {
              v2883.ΔⵠᐃⵠⲆ = 0;
            }
          }
        };
        v3148.send();
      }
    }
  }
  function f541() {
    if (!(v2883.ᐃⵠⲆΔΔ < 300) || !(v2883.ⲆΔᐃᐃΔΔⲆ > 0)) {
      var v3150 = document.getElementById("account_nickname_input").value.trim();
      document.getElementById("account_nickname_input").value = v3150;
      if (!(v3150.length < 1) && !(v3150.length > 20)) {
        var v3151 = new XMLHttpRequest();
        v3151.open("GET", v3131 + "changeNickname?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14 + "&nickname=" + encodeURIComponent(v3150));
        v3151.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3151.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200 && v3151.responseText !== "0") {
            var vNumber20 = Number(v3151.responseText);
            if (vNumber20 > 0) {
              v2883.ᐃⵠⲆΔΔ -= vNumber20;
            }
            v2883.ⲆΔᐃᐃΔΔⲆ = 1;
            v2883.ⵠᐃᐃᐃ(v2883.ᐃΔᐃⵠⵠ);
          }
        };
        v3151.send();
      }
    }
  }
  function f542(p1976, p1977) {
    if (p1977 > v2883.ᐃⵠⲆΔΔ) {
      v2883.ⵠᐃᐃᐃ(v2883.ⲆⲆⵠΔⵠ);
    } else {
      var v3152 = new XMLHttpRequest();
      v3152.open("GET", v3131 + "buyKit?token=" + vVVVVVUndefined82 + "&userid=" + vVUndefined14 + "&kit=" + p1976);
      v3152.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3152.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3152.responseText !== "0") {
          var v3153 = JSON.parse(v3152.responseText);
          v2883.ᐃⵠⲆΔΔ -= p1977;
          v2883.ⲆⲆⵠΔⲆⵠᐃ = Date.now() + Number(v3153);
        }
      };
      v3152.send();
    }
  }
  function f543() {
    if (vWindow.FB) {
      vWindow.FB.init({
        cookie: true,
        appId: "642017356260407",
        version: "v15.0",
        xfbml: vVV3032
      });
    }
    if (vVUndefined14 === vVVVVUndefined132) {
      (function () {
        try {
          if (vWindow.FB && vWindow.FB.getUserID()) {
            vVUndefined14 = vWindow.FB.getUserID();
            if (vVVVVVUndefined82 === undefined) {
              vWindow.FB.getLoginStatus(function () {
                vUndefined5 = v3134;
                vVVVVVUndefined82 = vWindow.FB.getAuthResponse().accessToken;
                vWindow.ⵠⵠⲆⲆΔΔⵠ(vVUndefined14);
              });
            }
          }
        } catch (e) {}
        try {
          vVUndefined14 = vUndefined7.getBasicProfile().getId();
        } catch (e) {}
      })();
    }
  }
  function f544() {
    var v3154 = new XMLHttpRequest();
    v3154.open("GET", v3131 + "claimBread?userid=" + vVUndefined14);
    v3154.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3154.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && v3154.responseText !== "0") {
        var vNumber21 = Number(v3154.responseText);
        if (!isNaN(vNumber21)) {
          v2883.ᐃⵠⲆΔΔ = vNumber21;
        }
      }
    };
    v3154.send();
  }
  vWindow.onload = function () {
    vWindow.gapi.load("auth2", f533);
  };
})();