(function () {
  const vWindow = window;
  var v2 = 197;
  if (v2 === 12) {
    v2 = 236;
  }
  let v3 = 94;
  var v4 = 244;
  if (v4 >= 7) {
    v4 = 201;
  }
  var v5 = 151;
  if (v5 == 0) {
    v5 = 84;
  }
  const vF = function (p2) {
    let v6 = "";
    for (let v7 = 0; v7 < p2.length; v7++) {
      v6 += vWindow.String.fromCharCode(p2[v7] ^ v3++ % 255);
    }
    return v6;
  };
  var v8 = 125;
  if (v8 >= 2) {
    v8 = 54;
  }
  var v9 = 125;
  if (v9 >= 0) {
    v9 = 25;
  }
  const vUndefined = undefined;
  const v10 = 15;
  const v11 = 255;
  const v12 = true;
  const v13 = 11;
  const v14 = ["string", "kit", "010_111_111", "claim_rewards", "Days survived", "#7C5A29", "high_ing", "Durabilité: 700", "GET", "Wytrzymałość: 1000", "cs", "home_craft", "jus", "#0c0c0d", "&userid=", "Comida: 100", "Damage: 30", "010_110_010", "CLAIM REWARD!", "_blank", "#A89F67", "#EDCE4F", "#35b1b5", "lock_team", "#be8d50", "Dig the ground to gather dirt, ice, and sand", "name", "Bed", "110_110_010", "Damage: 4", "Sandwich", "#f9efeb", "Nützlich um Gebäude zu zerstören", "#0b3432", "#1a4545", "También puedes conseguir minerales", "#FFF", "Building method: Grid. Press G to change", "Uuunnnggg", "#1678a2", "#2b7c57", "#c7a726", "#764eb5", "Essen: 100", "#a7983c", "#8a938e", "#C09D6F", "#187484", "Obrażenia do budowli: 1", "treasure_chest_4", "000_111_010", "#281A49", "#388AC7", "stop", "Damage: 5", "111_111_010", "#000", "011_111_111", "#032428", " you can only hit people who are flying too", "#e6636a", "#c04933", "#47341d", "#0a2728", "#86d0d1", "Uuunnnggg...", "dw", "110_110_110", "dano: 2", "source-over", "#083326", "event", "Chrono Quests", "FOREST", "#77371f", "winter_7", "playing", "#ff0000", ".md-languages label button", "#8c29aa", "#af59cd", "#4C3B19", "Hält dich warm außerhalb von Wasser und Winter", "Прочность: 700", "#123d38", "Grab herum um Dreck, Eis und Sand zu bekommen", "000_111_000", "#4c3a15", "Score", "#A9D6D3", "nickname_block", "servselect", "#09373F", "Building method: Free. Press G to change", "Réchauffe en dehors de l'eau et dans l'hiver", "object", "#1f5453", "111_111_110", "#328587", "#58452b", "Crab sticks", "Защита от игроков: 4, Защита от животных: 16", "#ffffff", "#9b2b25", "upfiz", "LAVA", "#163A3A", "#462966", "inv_shop", "#184747", "#87d2e6", "#2b9390", "#C0BF55", "#b864d6", "110_110_000", "#0a0b0c", "#0d1b1c", "send", "'Baloo Paaji', sans-serif", "Dig the ground to gather resources", "#113f3c", "#1b170c", "destination-out", "#6a7570", " QUIT", "audio/ambience.mp3", "starve_cancel", "mouseup", "#141414", "#46554D", "#C1C0C0", "#120202", "#124949", "#030d14", "111_111_000", "durabilidade: 1000", "Урон: 2", "000_110_010", "#3d2a6e", "#9E8456", "Content-Type", "Durabilidad: 1000", "#FFFFFF", "#182935", "#d45ce5", "#2A8B9B", "time", "time_finished_", "#B6222A", "Food: 10", "#163a3a", " Open 5 treasure chests", "Pixelbitie", "timeremainingquest", "110_111_010", "#313041", "#072824", "#281C08", "Starve.io ", "#2b280a", "Relax in this confortable bed", "#1d051e", "Haltbarkeit: 700", "fod", "volume", "auth2", "#c67933", "coa", "Communist", "#4eb687", "#031619", "você também pode pegar minerais", "&region=", "Totem", "011_111_110", " Be peaceful", "#1f4948", "2d", "#68622D", "Используется для разрушения зданий", "bap", " After 1 day, survive in winter", "Starve.io", "útil para destruir construções", "#75827D", "jub", "rub", "#e8e8e8", "low_ing", "#262114", "#fef4f4", "#394841", "Lebenszeit: 8 Tage", "la", "#252525", "killdragon_1", "#107746", "Easter Egg", "Cactus", "#555555", "#0F464C", "#073030", "#B56D18", "010_010_000", "#183f3f", "#e0f2f6", "score", "Durability: 1000", "starve_info_box", "#4c3b19", "#dfd1cb", "#939995", "application/x-www-form-urlencoded", "#454545", "#2E85A0", " Share on Twitter", "Damage: 1", "#083b3a", "spectator", "typequest", "px Baloo Paaji", "#95d5d8", "Game", "Widget", "#e45936", "They can't hit you and you can't hit them", "_number", "#3e3c25", "Cava para conseguir tierra, arena y hielo", "#83827e", "Durabilidad: 2000", "#5E3C10", "#0B6A84", "#1a7961", "#0e3022", "#2b5c48", "id", "DESERT", "#654320", "#fff", "Crab claws can also be eaten", "starve_mapping", "011_011_010", "010_111_000", "getAuthResponse", "#73583e", "000_111_011", "#d7990c", "starve_safe", "re", " Reward", "opacity", "#8359d3", "#322413", "#123b3f", "#4d2d14", "#83ddd4", "Défense: 4, Défense contre animaux: 16", "#171a19", "Building Damage: 4", "Dégâts: 2", "#0a2d18", "nu", "#252B28", "#0d2e33", "sap", "claim_reward_", "#043c37", "#0b2326", "#1e2021", "Możesz także zdobyć minerały", "000_110_110", "#A5A244", "#347f93", "000_010_000", "#342C7C", "Bueno para destruir estructuras", "#bfb360", "000_111_111", "#5cccc4", "nickname_input", "Damage: 24", "#5cc5ce", "#EBF2F0", "#53A4D5", "rgba(255, 255, 255, 0)", "#A37943", "This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.", "starve_quests", "#0F3A24", "px", "survive20min_3", "#0e6553", "#634828", "010_011_000", "#89d1d4", "You are the king of crabs!", "img/avatar-player14.png", "#eda80d", "#747471", "#57442a", "#9baaa3", "#785f4c", "010_111_011", "#C98435", "Durabilité: 2000", "inline-block", "#816511", "fo", "Урон по строениям: 1", "011_111_000", "000_010_010", "#8255b5", "Wytrzymałość: 700", "starve_quality", "#59c9c0", "#877d36", "#136167", "Requires appropriate arrows to be used", "mousemove", " Collect 1 dragon heart", "000_011_011", "serverAddressInput", "#614627", "starve_aliasing", "Anyone want to play?", "Warm outside water and in winter", "amethyst_2", " BACK TO THE GAME", "#e2cf27", "Food: 20", "#29aaa1", "bread_6", "You can buy items on the shop in the next game with your points", "durabilidade: 700", "#1F343F", "#c27add", "#1f343f", "#3A2A0D", "eject_member", "#133a2b", "110_111_011", "#cd98e5", "cave o chão para pegar terra, areia e gelo", "pizza wa", "#0a2f2b", "Durability: 400", "forest", " Gather 1 amethyst", "#C6AF81", "Czas życia: 8 dni", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16", "010_011_010", "img_", "Damage: 3", "Birth: 4min", "Crab Claw", "Pomocny w niszczeniu budowli", "#485e66", "110_111_110", "000_111_110", "plm", "cursor", "On-Hit Damage: 3", "XPayStationWidget", "aloner", "000_011_010", "When you are flying,", "fade", "#B26F31", "Kill", "Winter", "de", "none", "#29997c", "Schaden an Gebäuden: 1", "Crab Spear", "cancel_sure_delete", "FB", "#000000", "#b29c32", "#67766F", "#3ba578", "</div>", "Daño para estructuras: 1", "#382e19", "011_111_011", "#042b30", "jut", "#D8DC74", "#33b4e4", "#7d6144", "dano em construções: 1", "#2a2938", "Crabs follow you", "game_body", "input_ratio", "Allow you to calm crabs, and heal them", "#EAEAEA", "Oh, yeah? Is there crab in the crab sticks?", "010_010_010", "110_111_111", "#4d4a2e", "Durability: 700", "Lifetime: 8 days", "aqu", "110_111_000", "pos", "Creuse la terre, le sable et la neige", "You can also gather minerals", "#674C2A", "timeremain_", "#3dc4c0", "Damage: 2", "#ee593d", "MADBalgouthi", "#077b49", "#b3e0e3", "#c26de0", "#596560", "Daño: 2", "middle", "You are less cold, less thirsty, and less hungry", "#bbbbbb", "Durabilidad: 700", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16", "Damage: 20", "iro", "#b15ecf", "rewardquest", "Peut aussi récupérer des minéraux", "iblk", "#092813", "cop", "#afac98", "010_111_010", "Wytrzymałość: 2000", "#b7252c", " Collect 100 bread in deep winter", "010_111_110", "Survive without losing life", "Копайте землю, чтобы получить грязь, лед и песок", "#e9dad9", "Продолжительность: 8 дней", "constraintquest", "#a08f47", "#a9e4ed", "#3f332a", "Building Damage: 1", "#63c9d6", "#092b29", "#123335", "#07393d", "CrysTal", "010_011_011", "WINTER", "#efd435", "account_nickname_input", "Прочность: 1000", "team_box", "#34255d", "#432516", "#15514f", "You feel a great power emanating from this orb", "Te calienta en invierno y fuera del agua", "Du kannst auch Mineralien bekommen", "#24878f", "#5f6061", "#0a4049", "round", "isl", "Haltbarkeit: 2000", "#211108", "#1a4935", "#74ede6", "#082b22", "Sushui", "jad", "#b2d4d1", "_trad_number", "Players Defense: 4", "durabilidade: 2000", "You can fly with it.", "011_011_011", "recipe_craft", "#094437", "#adbcb5", "#c4bc51", "#5E3E1A", "#280e09", "wtb", "canvas", "play", "gapi", "000_110_000", "111_111_011", "#a33e2b", "#46c2c9", "mousedown", "#115E60", "Durée de vie: 8 jours", "Time Remaining", "qwerty_ing", "init", "#73dde5", "#54a4ba", "#263947", "#096d41", "Crab Helmet", "Buildings Damage: 1", "eogito", "#25c5d6", "#392C16", "#f4efc6", "Chapka", "You can not attack when you use it", "#e4efe8", "points", "#1f773d", "#174a51", "defesa de jogadores: 4, defesa de animais: 16", "#EFE4B4", "#665329", "#ddcf8a", "#b29e4d", "111_111_111", "Ciepło w i poza zimą", "click", "#564021", "buy_kit", "gm", "gw", "Haltbarkeit: 1000", "010_110_000", "#43aa82", "#1d1d22", " Claim rewards", "#574122", "#214C4B", "010_110_110", "#493e26", "Durabilité: 1000", "Players Defense: 4, Animals Defense: 16", "#7f6d52", "#43b5af", "#d2c77b", "You will be cured faster", "#041c21", "#c1b06b", " Constraints", "Jedzenie: 100", "Schaden: 2", "#111316", "#7d5234", "Taco4Life", "#660000", "#c3be9a", "top", "011_011_000", "Useful to destroy buildings", "Прочность: 2000", "#c4a23a", "#0e3838", "#232828", "#032b23", "active", "comida: 100", "sw", "#200333", " Share on Facebook", "#3da34d", "Защищает от холода вне воды.", "azerty_ing", "000_011_000", "Durability: 2000", "#242330", "Animals Defense: 13", "011_111_010", " : ", "dont_hit_5", "#e7dc8f", "#BB0000", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Так же вы можете получить ресурсы", "Utile pour détruire les bâtiments", "quit_chronoquest", "#86d4e0", "shop_starterkit", "Damage: 14", "#21112D", "#58645F", "#523e26", "#2b6664", "#554139", "#44301b", "#d588f1", "#939393", "#ac222a", "#3fc9c9"];
  const v15 = 19;
  const v16 = false;
  const vV12 = v12;
  const v17 = 17;
  const vVUndefined = vUndefined;
  const v18 = 10;
  const v19 = 18;
  const v20 = 14;
  const v21 = 100;
  const v22 = 20;
  const vV16 = v16;
  const v23 = 100;
  const v24 = 10;
  const v25 = 20;
  const v26 = 16;
  const v27 = 12;
  function f2(p3) {
    if (p3 > 0) {
      return p3 * p3;
    } else {
      return p3;
    }
  }
  function f3(p4) {
    return vWindow.String.fromCharCode(p4);
  }
  const v28 = 13;
  const v29 = 16;
  const v30 = 100;
  const v31 = 20;
  const vV122 = v12;
  const v32 = 10;
  const v33 = 18;
  const v34 = 19;
  const v35 = 100;
  let v36;
  let v37;
  let vVUndefined2 = vUndefined;
  let vVVUndefined = vVUndefined;
  let vVVUndefined2 = vVUndefined;
  let vVUndefined3 = vUndefined;
  let vVUndefined4 = vUndefined;
  let v38 = [];
  let vVVUndefined3 = vVUndefined;
  const v39 = 12;
  let v40 = "_";
  const vVV12 = vV12;
  let v41;
  let v42;
  let v43;
  const v44 = 255;
  let v45;
  let vVVUndefined4 = vVUndefined;
  const v46 = 11;
  let vVVUndefined5 = vVUndefined;
  let vVVUndefined6 = vVUndefined;
  let vVUndefined5 = vUndefined;
  const vVUndefined6 = vUndefined;
  let v47;
  let vVVUndefined7 = vVUndefined;
  const v48 = 14;
  let v49;
  let vVUndefined7 = vUndefined;
  let vVUndefined8 = vUndefined;
  let vVVUndefined62 = vVUndefined6;
  const v50 = 14;
  let v51;
  let vVVUndefined8 = vVUndefined;
  let vVVUndefined9 = vVUndefined;
  const v52 = 15;
  const vV162 = v16;
  let vVUndefined9 = vUndefined;
  let vVVUndefined63 = vVUndefined6;
  let vVVUndefined64 = vVUndefined6;
  let vVVUndefined65 = vVUndefined6;
  let vVUndefined10 = vUndefined;
  const v53 = 19;
  const v54 = 100;
  let v55;
  let v56;
  let vVUndefined11 = vUndefined;
  let vVVUndefined10 = vVUndefined;
  const v57 = 17;
  let v58;
  let vVVUndefined11 = vVUndefined;
  let vVUndefined12 = vUndefined;
  let vVVUndefined66 = vVUndefined6;
  let vVUndefined13 = vUndefined;
  let vVVUndefined12 = vVUndefined;
  const v59 = 20;
  let v60;
  let vVVUndefined13 = vVUndefined;
  let v61;
  let v62;
  let v63;
  let v64;
  let vVVUndefined14 = vVUndefined;
  let v65;
  let vVVUndefined15 = vVUndefined;
  const vVV162 = vV162;
  const v66 = 10;
  let v67;
  const v68 = 13;
  let vVVUndefined16 = vVUndefined;
  const v69 = 16;
  const v70 = 11;
  let v71 = 0;
  const v72 = 18;
  if (!vWindow.WebAssembly || !vWindow.WebAssembly.instantiate) {
    ⵠⵠᐃⲆⵠΔⲆΔⲆ();
  }
  const v73 = {
    Date: Date
  };
  vWindow.WebAssembly.instantiate(Uint8Array.from(vWindow.atob(""), function (p5) {
    return p5.charCodeAt(0);
  }), v73).then(function (p6) {
    vVUndefined2 = p6.instance;
    v36 = vVUndefined2.exports;
    v37 = v36.memory;
    vVVUndefined = v37.buffer;
    vVUndefined3 = v36.__pin;
    vVUndefined4 = v36.__unpin;
    vVVUndefined2 = v36.__new;
    vVVUndefined3 = v36.__collect;
    v40 = "_";
    for (let v74 = 0; v74 < 31; v74++) {
      v38[v74] = v36[v40 + v74];
    }
    v41 = v36.__rtti_base;
    v42 = new Float32Array(vVVUndefined);
    v43 = new Float64Array(vVVUndefined);
    vVVUndefined4 = new BigUint64Array(vVVUndefined);
    v45 = new Uint32Array(vVVUndefined);
    vVUndefined5 = new Uint16Array(vVVUndefined);
    vVVUndefined5 = new Uint8Array(vVVUndefined);
    vVVUndefined6 = new BigInt64Array(vVVUndefined);
    v47 = new Int32Array(vVVUndefined);
    vVVUndefined7 = new Int16Array(vVVUndefined);
    v49 = new Int8Array(vVVUndefined);
    v58 = v38[11];
    vVVUndefined64 = v38[17];
    vVUndefined9 = v38[8];
    v51 = v38[15];
    vVVUndefined14 = v38[7];
    vVVUndefined11 = v38[16];
    v63 = v38[6];
    vVVUndefined12 = v38[24];
    vVUndefined10 = v38[13];
    v62 = v38[2];
    vVVUndefined13 = v38[1];
    vVVUndefined15 = v38[22];
    vVUndefined11 = v38[29];
    vVVUndefined10 = v38[26];
    v67 = v38[27];
    vVVUndefined63 = v38[3];
    vVVUndefined65 = v38[28];
    v56 = v38[25];
    vVUndefined7 = v38[21];
    v65 = v38[4];
    vVUndefined13 = v38[14];
    v64 = v38[20];
    vVVUndefined62 = v38[9];
    vVUndefined8 = v38[18];
    v60 = v38[0];
    vVVUndefined66 = v38[30];
    vVUndefined12 = v38[12];
    vVVUndefined9 = v38[19];
    v61 = v38[5];
    v55 = v38[23];
    vVVUndefined8 = v38[10];
    v71 = 1;
    if (vVVUndefined16) {
      vVVUndefined16();
    }
  });
  const v75 = 17;
  const vVUndefined14 = vUndefined;
  const vF2 = function (p7) {
    return v45[(v41 + 4 >>> 2) + (p7 << 1)];
  };
  const vVV122 = vV122;
  function f4(p8) {
    return 31 - Math.clz32(p8 >>> 6 & 31);
  }
  const v76 = 16;
  const v77 = 255;
  const v78 = 15;
  function f5(p9, p10, p11) {
    if (p11) {
      switch (p9) {
        case 2:
          return v42;
        case 3:
          return v43;
      }
    } else {
      switch (p9) {
        case 0:
          if (p10) {
            return v49;
          } else {
            return vVVUndefined5;
          }
        case 1:
          if (p10) {
            return vVVUndefined7;
          } else {
            return vVUndefined5;
          }
        case 2:
          if (p10) {
            return v47;
          } else {
            return v45;
          }
        case 3:
          if (p10) {
            return vVVUndefined6;
          } else {
            return vVVUndefined4;
          }
      }
    }
  }
  const v79 = 255;
  function f6(p12) {
    const v80 = v45[p12 + -8 >>> 2];
    const vVF2 = vF2(v80);
    const vF4 = f4(vVF2);
    let v81 = vVF2 & 4 ? p12 : v45[p12 + 4 >>> 2];
    const v82 = vVF2 & 2 ? v45[p12 + 12 >>> 2] : v45[v81 + -4 >>> 2] >>> vF4;
    return f5(vF4, vVF2 & 2048, vVF2 & 4096).subarray(v81 >>>= vF4, v81 + v82);
  }
  const vVVUndefined17 = vVUndefined;
  const v83 = 100;
  function f7(p13, p14, p15) {
    const v84 = ((p13 + 9635) * 1664525 + 1013904223) % 4294967296;
    const v85 = (2531011 + (20625 + p14) * 214013) % 4294967296;
    const v86 = ~(p15 & 1062) & p15 | ~(p15 & 1062) & 1062;
    const vQo = f63(v84, v85, v86, v84, v85, v86);
    f444(v84, v85, v86, v84, v85);
    return (vQo | 52872) & ~(vQo & 52872);
  }
  function f8(p16, p17, p18, p19, p20, p21) {
    const v87 = (1 + (38006 + ((24 << (p16 & 255)) + (0 << (p16 >> 8 & 255)) + (16 << (p16 >> 24 & 255)) + (8 << (p16 >> 16 & 255)) ^ (2531011 + (4479 + p17) * 214013) % 4294967296)) * 22695477) % 4294967296;
    const v88 = (1 + (22498 + ((1013904223 + (59028 + ((~(v87 & 28281) & 28281 | ~(v87 & 28281) & v87) ^ ((p19 + 31199) * 1664525 + 1013904223) % 4294967296)) * 1664525) % 4294967296 ^ (16 << (p20 >> 24 & 255)) + (24 << (p20 & 255)) + (8 << (p20 >> 8 & 255)) + (0 << (p20 >> 16 & 255)))) * 22695477) % 4294967296;
    return ~(v88 & 20768) & (v88 | 20768);
  }
  function f9(p22, p23) {
    const v89 = ~(p22 & 58371) & p22 | ~(p22 & 58371) & 58371;
    const v90 = p23 ^ 64602;
    return (23018 + (f7(v89, v90, v89) ^ f63(v90, v89, v90, v89, v90, v89))) % 65350;
  }
  function f10(p24, p25, p26, p27, p28, p29) {
    const v91 = ((p24 + 33692) * 1664525 + 1013904223) % 4294967296;
    const v92 = ~(p25 & 60243) & p25 | ~(p25 & 60243) & 60243;
    const v93 = ((p28 + 52610) * 22695477 + 1) % 4294967296;
    const v94 = (37529 + p29) % 65373;
    return ((23930 + (function (p30, p31, p32, p33) {
      const v95 = (1013904223 + (p30 + 26178) * 1664525) % 4294967296;
      const v96 = ~(p31 & 23553) & 23553 | ~(p31 & 23553) & p31;
      const v97 = ((58554 + p32) * 1103515245 + 12345) % 2147483648;
      const v98 = (0 << (p33 >> 16 & 255)) + (24 << (p33 >> 8 & 255)) + (8 << (p33 & 255)) + (16 << (p33 >> 24 & 255));
      const vF7 = f7(v95, v96, v97);
      (function (p34, p35, p36, p37, p38, p39) {
        const v99 = (p34 | 18230) & ~(p34 & 18230);
        const v100 = ~(p35 & 40946) & 40946 | ~(p35 & 40946) & p35;
        const v101 = (1 + (20034 + p36) * 22695477) % 4294967296;
        const v102 = (24 << (p38 >> 8 & 255)) + (8 << (p38 >> 16 & 255)) + (0 << (p38 & 255)) + (16 << (p38 >> 24 & 255));
        const v103 = (24 << (p39 >> 0 & 255)) + (8 << (p39 >> 16 & 255)) + (16 << (p39 >> 24 & 255)) + (0 << (p39 >> 8 & 255));
        const vWC = f535(v99, v100, v101, p37 ^ 48723);
        const vF3 = function (p40, p41, p42, p43, p44) {
          const v104 = ~(p40 & 55228) & (p40 | 55228);
          const v105 = ~(p42 & 65133) & p42 | ~(p42 & 65133) & 65133;
          const v106 = (p43 + 41015) % 65396;
          const v107 = (16 << (p44 >> 16 & 255)) + (8 << (p44 >> 8 & 255)) + (24 << (p44 & 255)) + (0 << (p44 >> 24 & 255));
          const vWt = f42(v104, ~(p41 & 41631) & p41 | ~(p41 & 41631) & 41631);
          const vF5 = function (p45, p46, p47, p48) {
            const v108 = p45 ^ 47407;
            const v109 = ~(p46 & 27912) & (p46 | 27912);
            const v110 = (16 << (p47 >> 24 & 255)) + (8 << (p47 >> 8 & 255)) + (0 << (p47 >> 16 & 255)) + (24 << (p47 & 255));
            const v111 = (24 << (p48 >> 24 & 255)) + (8 << (p48 >> 16 & 255)) + (16 << (p48 >> 8 & 255)) + (0 << (p48 >> 0 & 255));
            const vOo = f65(v108, v109, v110, v111, v108, v109);
            const vXi = f12(v110, v111, v108);
            return (8 << ((vOo ^ vXi) >> 24 & 255)) + (16 << ((vOo ^ vXi) & 255)) + (0 << ((vOo ^ vXi) >> 16 & 255)) + (24 << ((vOo ^ vXi) >> 8 & 255));
          }(v105, v106, v107, v104);
          return (24 << ((vWt ^ vF5) & 255)) + (16 << ((vWt ^ vF5) >> 8 & 255)) + (0 << ((vWt ^ vF5) >> 16 & 255)) + (8 << ((vWt ^ vF5) >> 24 & 255));
        }(v102, v103, v99, v100, v101);
      })(v98, v95, v96, v97, v98, v95);
      return ~(vF7 & 24871) & (vF7 | 24871);
    }(v91, v92, ~(p26 & 31922) & (p26 | 31922), (8 << (p27 >> 16 & 255)) + (16 << (p27 & 255)) + (0 << (p27 >> 24 & 255)) + (24 << (p27 >> 8 & 255))) ^ f79(v93, v94, v91, v92))) * 22695477 + 1) % 4294967296;
  }
  function f11(p49, p50, p51, p52, p53, p54) {
    v65(v555, p49, p50, p51, p52, p53, p54);
    const vF6 = function (p55, p56) {
      vVVUndefined10(v555, p55, p56);
      const vCg = f76(v557[0], v557[1], v557[0], v557[1]);
      const vF8 = function (p57, p58, p59, p60, p61) {
        vVVUndefined9(v555, p57, p58, p59, p60, p61);
        const vPp = f442(v557[0], v557[1], v557[2], v557[3]);
        const vLo = f57(v557[4], v557[0], v557[1]);
        return ((120 + (vPp ^ vLo)) * 48271 + 0) % 2147483647;
      }(v557[0], v557[1], v557[0], v557[1], v557[0]);
      return ((142 + (vCg ^ vF8)) * 8121 + 28411) % 134456;
    }(v557[0], v557[1]);
    f61(v557[2], v557[3], v557[4]);
    return vF6 ^ 17923;
  }
  function f12(p62, p63, p64) {
    const v112 = (0 << (p62 >> 8 & 255)) + (16 << (p62 >> 16 & 255)) + (24 << (p62 & 255)) + (8 << (p62 >> 24 & 255));
    const v113 = (16 << (p63 & 255)) + (8 << (p63 >> 24 & 255)) + (0 << (p63 >> 8 & 255)) + (24 << (p63 >> 16 & 255));
    const v114 = (p64 + 53501) % 65360;
    return (1013904223 + (10153 + (function (p65, p66, p67, p68) {
      const v115 = (2147483587 + (p65 + 11762) * 2147483629) % 2147483647;
      const v116 = (16 << (p66 >> 16 & 255)) + (8 << (p66 >> 8 & 255)) + (24 << (p66 & 255)) + (0 << (p66 >> 24 & 255));
      const v117 = (0 << (p67 & 255)) + (8 << (p67 >> 24 & 255)) + (16 << (p67 >> 8 & 255)) + (24 << (p67 >> 16 & 255));
      const v118 = (p68 | 35361) & ~(p68 & 35361);
      const vEg = f85(v115, v116, v117, v118);
      (function (p69, p70, p71, p72, p73) {
        const v119 = (p69 | 48323) & ~(p69 & 48323);
        const v120 = (24 << (p70 & 255)) + (8 << (p70 >> 16 & 255)) + (16 << (p70 >> 24 & 255)) + (0 << (p70 >> 8 & 255));
        const v121 = ~(p71 & 36629) & 36629 | ~(p71 & 36629) & p71;
        const v122 = (8 << (p72 >> 0 & 255)) + (24 << (p72 >> 24 & 255)) + (16 << (p72 >> 8 & 255)) + (0 << (p72 >> 16 & 255));
        const v123 = ((10027 + p73) * 1103515245 + 12345) % 2147483648;
        const vWC2 = f535(v119, v120, v121, v122);
        f441(v123, v119, v120, v121, v122);
      })(v115, v116, v117, v118, v115);
      return vEg ^ 50566;
    }(v112, v113, v114, v112) ^ f79(v113, v114, v112, v113))) * 1664525) % 4294967296;
  }
  const v124 = "development";
  const v125 = "production";
  function v573(p74) {
    this.ⲆΔⵠⵠⲆ = 2147483648;
    this.a = 1103515245;
    this.c = 12345;
    this.state = p74 || Math.floor(Math.random() * (this.ⲆΔⵠⵠⲆ - 1));
  }
  const v126 = 16;
  const v127 = 12;
  const v128 = 100;
  const v129 = 19;
  const v130 = 14;
  v573.prototype.random = function () {
    this.state = (this.state * this.a + this.c) % this.ⲆΔⵠⵠⲆ;
    return this.state / this.ⲆΔⵠⵠⲆ;
  };
  v573.prototype.ⲆⵠΔⵠⲆΔⲆ = function (p75) {
    this.state = p75;
  };
  ᐃΔΔⵠᐃᐃᐃ = 10000;
  ᐃΔΔⵠⵠΔᐃ = [];
  var v131 = new v573();
  const v132 = 11;
  v131.ⲆⵠΔⵠⲆΔⲆ(new Date().getTime());
  for (var v133 = 0; ᐃΔΔⵠᐃᐃᐃ > v133; v133++) {
    ᐃΔΔⵠⵠΔᐃ.push(v131.random());
  }
  const v134 = 13;
  const v135 = 8;
  function f14(p76, p77, p78, p79, p80, p81) {
    vVUndefined12(v555, p76, p77, p78, p79, p80, p81);
    const vLt = f43(v557[0], v557[1], v557[2]);
    (function (p82, p83, p84, p85, p86, p87) {
      vVUndefined9(v555, p82, p83, p84, p85, p86, p87);
      const vJo = f61(v557[0], v557[1], v557[2]);
      (function (p88, p89, p90, p91, p92, p93) {
        vVVUndefined12(v555, p88, p89, p90, p91, p92, p93);
        const vCC = f518(v557[0], v557[1]);
        f442(v557[2], v557[3], v557[4], v557[5]);
      })(v557[3], v557[4], v557[5], v557[0], v557[1], v557[2]);
    })(v557[3], v557[4], v557[5], v557[0], v557[1], v557[2]);
    return vLt ^ 57304;
  }
  const v136 = 255;
  function f15(p94, p95, p96, p97) {
    const v137 = ~(p94 & 59259) & p94 | ~(p94 & 59259) & 59259;
    const v138 = ~(p95 & 56097) & p95 | ~(p95 & 56097) & 56097;
    const v139 = ((43315 + p96) * 1664525 + 1013904223) % 4294967296;
    const v140 = (8 << (p97 >> 24 & 255)) + (32 << (p97 >> 32 & 255)) + (24 << (p97 >> 8 & 255)) + (16 << (p97 >> 16 & 255));
    const vF9 = function (p98, p99, p100, p101, p102, p103) {
      const v141 = p98 ^ 10715;
      const v142 = (24 << (p99 >> 16 & 255)) + (16 << (p99 >> 32 & 255)) + (32 << (p99 >> 8 & 255)) + (8 << (p99 >> 24 & 255));
      const v143 = (8 << (p100 >> 16 & 255)) + (32 << (p100 >> 24 & 255)) + (16 << (p100 >> 8 & 255)) + (24 << (p100 >> 32 & 255));
      const v144 = p101 ^ 40782;
      const v145 = p102 ^ 41301;
      const v146 = ~(p103 & 12091) & (p103 | 12091);
      const vAt = f24(v141, v142, v143, v144, v145, v146);
      f24(v141, v142, v143, v144, v145, v146);
      f31(v141, v142, v143, v144, v145);
      const v147 = (vAt | 3006) & ~(vAt & 3006);
      return ~(v147 & 24460) & (v147 | 24460);
    }(v137, v138, v139, v140, v137, v138);
    const vMt = f34(v139, v140, v137, v138, v139);
    f24(v140, v137, v138, v139, v140, v137);
    const v148 = (1013904223 + (26191 + (vF9 ^ vMt)) * 1664525) % 4294967296;
    return (v148 | 38630) & ~(v148 & 38630);
  }
  function f16(p104, p105, p106, p107, p108, p109) {
    const v149 = ((39488 + p104) * 214013 + 2531011) % 4294967296;
    const v150 = ~(p105 & 49976) & p105 | ~(p105 & 49976) & 49976;
    const v151 = ~(p106 & 35856) & p106 | ~(p106 & 35856) & 35856;
    const v152 = p107 ^ 52219;
    const v153 = (p108 + 3575) % 65503;
    const v154 = ~(p109 & 6932) & p109 | ~(p109 & 6932) & 6932;
    const vAt2 = f33(v149, v150, v151, v152, v153);
    const vF10 = function (p110, p111, p112, p113, p114, p115) {
      const v155 = p110 ^ 30142;
      const v156 = (p111 + 63025) % 65493;
      const v157 = p112 ^ 30777;
      const v158 = ((45939 + p113) * 22695477 + 1) % 4294967296;
      const v159 = (8 << (p114 >> 16 & 255)) + (32 << (p114 >> 24 & 255)) + (24 << (p114 >> 32 & 255)) + (16 << (p114 >> 8 & 255));
      const v160 = (p115 | 45652) & ~(p115 & 45652);
      const vAt3 = f33(v155, v156, v157, v158, v159);
      f17(v160, v155, v156, v157, v158);
      f29(v159, v160, v155, v156, v157, v158);
      return vAt3 ^ 60048;
    }(v154, v149, v150, v151, v152, v153);
    f25(v154, v149, v150, v151, v152, v153);
    const v161 = (1013904223 + (60709 + (vAt2 ^ vF10)) * 1664525) % 4294967296;
    return ~(v161 & 42138) & v161 | ~(v161 & 42138) & 42138;
  }
  function f17(p116, p117, p118, p119, p120) {
    const v162 = ((p116 + 14772) * 2147483629 + 2147483587) % 2147483647;
    const v163 = p117 ^ 63080;
    const v164 = ((p118 + 60304) * 22695477 + 1) % 4294967296;
    const v165 = ~(p119 & 5467) & 5467 | ~(p119 & 5467) & p119;
    const v166 = (p120 | 40165) & ~(p120 & 40165);
    const vF11 = function (p121, p122, p123, p124) {
      const v167 = (p121 | 57611) & ~(p121 & 57611);
      const v168 = ((p122 + 56889) * 1664525 + 1013904223) % 4294967296;
      const v169 = p123 ^ 62842;
      const v170 = ~(p124 & 1179) & p124 | ~(p124 & 1179) & 1179;
      const vYi = f18(v167, v168, v169, v170);
      const vYt = f32(v167, v168, v169, v170);
      f15(v167, v168, v169, v170);
      const v171 = (24 << ((vYi ^ vYt) >> 24 & 255)) + (8 << ((vYi ^ vYt) >> 16 & 255)) + (16 << ((vYi ^ vYt) >> 32 & 255)) + (32 << ((vYi ^ vYt) >> 8 & 255));
      return ~(v171 & 63304) & (v171 | 63304);
    }(v162, v163, v164, v165);
    const vMt2 = f34(v166, v162, v163, v164, v165);
    const v_t = f39(v166, v162, v163, v164, v165, v166);
    return ((28765 + ((16 << ((vF11 ^ vMt2) >> 24 & 255)) + (8 << ((vF11 ^ vMt2) >> 16 & 255)) + (24 << ((vF11 ^ vMt2) >> 32 & 255)) + (32 << ((vF11 ^ vMt2) >> 8 & 255)) ^ v_t)) * 1664525 + 1013904223) % 4294967296;
  }
  const vVV16 = vV16;
  const vVV123 = vV12;
  function f18(p125, p126, p127, p128) {
    const v172 = p125 ^ 11762;
    const v173 = ~(p126 & 19425) & 19425 | ~(p126 & 19425) & p126;
    return ((55182 + (((17757 + ((32 << ((v172 ^ v173) >> 32 & 255)) + (8 << ((v172 ^ v173) >> 8 & 255)) + (24 << ((v172 ^ v173) >> 24 & 255)) + (16 << ((v172 ^ v173) >> 16 & 255)) ^ (32 << (p127 >> 16 & 255)) + (8 << (p127 >> 32 & 255)) + (24 << (p127 >> 24 & 255)) + (16 << (p127 >> 8 & 255)))) * 1664525 + 1013904223) % 4294967296 ^ (~(p128 & 259) & 259 | ~(p128 & 259) & p128))) * 1664525 + 1013904223) % 4294967296;
  }
  function f19(p129, p130, p131, p132, p133) {
    const v174 = (32 << (p129 >> 24 & 255)) + (16 << (p129 >> 8 & 255)) + (24 << (p129 >> 16 & 255)) + (8 << (p129 >> 32 & 255));
    const v175 = (p130 + 39144) % 65406;
    const v176 = p131 ^ 34575;
    const v177 = ~(p132 & 37841) & p132 | ~(p132 & 37841) & 37841;
    const v178 = (p133 | 25975) & ~(p133 & 25975);
    const vF18 = f18(v174, v175, v176, v177);
    f36(v178, v174, v175, v176, v177);
    f25(v178, v174, v175, v176, v177, v178);
    return (vF18 | 19326) & ~(vF18 & 19326) ^ 36297;
  }
  function f20(p134, p135, p136, p137, p138) {
    const v179 = (12345 + (23101 + p134) * 1103515245) % 2147483648;
    const v180 = p135 ^ 58614;
    const v181 = ((p136 + 45267) * 214013 + 2531011) % 4294967296;
    const v182 = p137 ^ 40810;
    const v183 = (24 << (p138 >> 24 & 255)) + (8 << (p138 >> 32 & 255)) + (32 << (p138 >> 8 & 255)) + (16 << (p138 >> 16 & 255));
    const vJt = f38(v179, v180);
    const vF15 = f15(v181, v182, v183, v179);
    (function (p139, p140, p141, p142) {
      const v184 = (p139 + 34282) % 65336;
      const v185 = ~(p140 & 45181) & 45181 | ~(p140 & 45181) & p140;
      const v186 = (16 << (p141 >> 8 & 255)) + (32 << (p141 >> 24 & 255)) + (8 << (p141 >> 32 & 255)) + (24 << (p141 >> 16 & 255));
      const v187 = ~(p142 & 25475) & 25475 | ~(p142 & 25475) & p142;
      const vF12 = function (p143, p144) {
        const v188 = ~(p143 & 41406) & p143 | ~(p143 & 41406) & 41406;
        const v189 = ((p144 + 17922) * 1103515245 + 12345) % 2147483648;
        const vFt = f40(v188, v189, v188);
        f26(v189, v188, v189, v188);
        return ((42346 + (vFt ^ 18573 ^ f19(v189, v188, v189, v188, v189))) * 2147483629 + 2147483587) % 2147483647;
      }(v184, v185);
      const vBt = f36(v186, v187, v184, v185, v186);
      f38(v187, v184);
      const v190 = (58498 + (vF12 ^ vBt)) % 65531;
    })(v180, v181, v182, v183);
    const v191 = (24 << ((vJt ^ vF15) >> 24 & 255)) + (32 << ((vJt ^ vF15) >> 16 & 255)) + (8 << ((vJt ^ vF15) >> 32 & 255)) + (16 << ((vJt ^ vF15) >> 8 & 255));
    return ~(v191 & 13644) & v191 | ~(v191 & 13644) & 13644;
  }
  const vVVVUndefined17 = vVVUndefined17;
  const v192 = 0;
  function f21(p145, p146, p147, p148, p149) {
    const v193 = (24 << (p145 >> 24 & 255)) + (32 << (p145 >> 16 & 255)) + (16 << (p145 >> 8 & 255)) + (8 << (p145 >> 32 & 255));
    const v194 = (12345 + (p146 + 3024) * 1103515245) % 2147483648;
    const v195 = (8 << (p147 >> 8 & 255)) + (32 << (p147 >> 32 & 255)) + (24 << (p147 >> 16 & 255)) + (16 << (p147 >> 24 & 255));
    const v196 = (1 + (p148 + 41324) * 22695477) % 4294967296;
    const v197 = (p149 | 19607) & ~(p149 & 19607);
    const vJt2 = f35(v193, v194);
    f36(v195, v196, v197, v193, v194);
    f29(v195, v196, v197, v193, v194, v195);
    const v198 = ~(vJt2 & 49323) & 49323 | ~(vJt2 & 49323) & vJt2;
    return ~(v198 & 46567) & (v198 | 46567);
  }
  const v199 = 20;
  function f22(p150, p151, p152, p153, p154, p155) {
    const v200 = (1013904223 + (p150 + 28824) * 1664525) % 4294967296;
    const v201 = (1013904223 + (13210 + p151) * 1664525) % 4294967296;
    const v202 = ~(p152 & 32165) & 32165 | ~(p152 & 32165) & p152;
    const v203 = (24 << (p153 >> 24 & 255)) + (16 << (p153 >> 8 & 255)) + (8 << (p153 >> 16 & 255)) + (32 << (p153 >> 32 & 255));
    const v204 = (1 + (39199 + p154) * 22695477) % 4294967296;
    const v205 = p155 ^ 33037;
    const vF13 = function (p156, p157, p158) {
      const v206 = (12345 + (39051 + p156) * 1103515245) % 2147483648;
      const v207 = (p157 | 44117) & ~(p157 & 44117);
      const v208 = (24 << (p158 >> 24 & 255)) + (8 << (p158 >> 16 & 255)) + (16 << (p158 >> 32 & 255)) + (32 << (p158 >> 8 & 255));
      const vHt = f27(v206, v207, v208, v206, v207);
      const v_t2 = f39(v208, v206, v207, v208, v206, v207);
      const vF14 = function (p159, p160) {
        const v209 = (16 << (p159 >> 8 & 255)) + (32 << (p159 >> 16 & 255)) + (8 << (p159 >> 32 & 255)) + (24 << (p159 >> 24 & 255));
        const v210 = (32 << (p160 >> 32 & 255)) + (24 << (p160 >> 24 & 255)) + (8 << (p160 >> 8 & 255)) + (16 << (p160 >> 16 & 255));
        const vUt = f29(v209, v210, v209, v210, v209, v210);
        (function (p161, p162, p163, p164, p165) {
          const v211 = p161 ^ 64570;
          const v212 = (2531011 + (p162 + 41768) * 214013) % 4294967296;
          const v213 = (1013904223 + (p163 + 43923) * 1664525) % 4294967296;
          const v214 = (16 << (p164 >> 32 & 255)) + (8 << (p164 >> 24 & 255)) + (32 << (p164 >> 16 & 255)) + (24 << (p164 >> 8 & 255));
          const v215 = (p165 | 21896) & ~(p165 & 21896);
          const vF16 = function (p166, p167) {
            const v216 = ((p166 + 49468) * 1103515245 + 12345) % 2147483648;
            const v217 = ((p167 + 30513) * 214013 + 2531011) % 4294967296;
            const vF17 = function (p168, p169, p170) {
              const v218 = ((5294 + p168) * 1664525 + 1013904223) % 4294967296;
              const v219 = (p169 | 55665) & ~(p169 & 55665);
              const v220 = (p170 + 54633) % 65404;
              const vF172 = f17(v218, v219, v220, v218, v219);
              (function (p171, p172, p173, p174, p175, p176) {
                const v221 = (2531011 + (p171 + 16955) * 214013) % 4294967296;
                const v222 = ((9436 + p172) * 1103515245 + 12345) % 2147483648;
                const v223 = (p173 | 14774) & ~(p173 & 14774);
                const v224 = (p174 | 48802) & ~(p174 & 48802);
                const v225 = ~(p175 & 24998) & (p175 | 24998);
                const v226 = (8 << (p176 >> 8 & 255)) + (16 << (p176 >> 16 & 255)) + (32 << (p176 >> 32 & 255)) + (24 << (p176 >> 24 & 255));
                const vNt = f23(v221, v222, v223, v224);
                const vBt2 = f36(v225, v226, v221, v222, v223);
                const vNt2 = f23(v224, v225, v226, v221);
              })(v220, v218, v219, v220, v218, v219);
              f32(v220, v218, v219, v220);
              return ~(vF172 & 43875) & (vF172 | 43875) ^ 15116;
            }(v216, v217, v216);
            f31(v217, v216, v217, v216, v217);
            f18(v216, v217, v216, v217);
            return (vF17 | 17943) & ~(vF17 & 17943) ^ 21791;
          }(v211, v212);
          f26(v213, v214, v215, v211);
          const vF21 = f21(v212, v213, v214, v215, v211);
        })(v209, v210, v209, v210, v209);
        f35(v210, v209);
        return (vUt | 58283) & ~(vUt & 58283) ^ 8337;
      }(v208, v206);
      const v227 = (16 << ((vHt ^ v_t2) >> 32 & 255)) + (24 << ((vHt ^ v_t2) >> 24 & 255)) + (32 << ((vHt ^ v_t2) >> 8 & 255)) + (8 << ((vHt ^ v_t2) >> 16 & 255));
      return (8 << ((v227 ^ vF14) >> 32 & 255)) + (16 << ((v227 ^ vF14) >> 8 & 255)) + (32 << ((v227 ^ vF14) >> 16 & 255)) + (24 << ((v227 ^ vF14) >> 24 & 255));
    }(v200, v201, v202);
    f32(v203, v204, v205, v200);
    return ((34159 + (vF13 ^ 2959 ^ f23(v201, v202, v203, v204))) * 1103515245 + 12345) % 2147483648;
  }
  const v228 = 256;
  function f23(p177, p178, p179, p180) {
    const v229 = ~(p177 & 33107) & (p177 | 33107);
    const v230 = (24 << (p178 >> 32 & 255)) + (32 << (p178 >> 8 & 255)) + (8 << (p178 >> 16 & 255)) + (16 << (p178 >> 24 & 255));
    const v231 = ~(p179 & 32053) & (p179 | 32053);
    const v232 = p180 ^ 12240;
    const vF19 = function (p181, p182, p183, p184) {
      const v233 = (32 << (p181 >> 32 & 255)) + (16 << (p181 >> 16 & 255)) + (24 << (p181 >> 24 & 255)) + (8 << (p181 >> 8 & 255));
      const v234 = (1 + (50595 + p182) * 22695477) % 4294967296;
      const v235 = ~(p183 & 40066) & p183 | ~(p183 & 40066) & 40066;
      const v236 = p184 ^ 18768;
      const vAt4 = f33(v233, v234, v235, v236, v233);
      const vF20 = f20(v234, v235, v236, v233, v234);
      const vLt2 = f28(v235, v236);
      return ((16767 + ((2531011 + (35287 + (vAt4 ^ vF20)) * 214013) % 4294967296 ^ vLt2)) * 1664525 + 1013904223) % 4294967296;
    }(v229, v230, v231, v232);
    f32(v229, v230, v231, v232);
    return (2531011 + (44352 + ((~(vF19 & 64131) & 64131 | ~(vF19 & 64131) & vF19) ^ f33(v229, v230, v231, v232, v229))) * 214013) % 4294967296;
  }
  function f24(p185, p186, p187, p188, p189, p190) {
    const v237 = ~(p185 & 36133) & (p185 | 36133);
    const v238 = (p186 | 13670) & ~(p186 & 13670);
    const v239 = (p187 | 31390) & ~(p187 & 31390);
    const v240 = p188 ^ 64081;
    const v241 = p189 ^ 7550;
    const v242 = (2147483587 + (p190 + 63950) * 2147483629) % 2147483647;
    return (12345 + (36760 + (((62552 + (f37(v237, v238, v239, v240, v241) ^ f32(v242, v237, v238, v239))) * 2147483629 + 2147483587) % 2147483647 ^ f31(v240, v241, v242, v237, v238))) * 1103515245) % 2147483648;
  }
  const v243 = 10;
  function f25(p191, p192, p193, p194, p195, p196) {
    const v244 = p191 ^ 23409;
    const v245 = p192 ^ 26380;
    const v246 = ((p195 + 33017) * 1103515245 + 12345) % 2147483648;
    const v247 = p196 ^ 42490;
    return ((19056 + (f18(v244, v245, p193 ^ 53590, p194 ^ 36633) ^ f18(v246, v247, v244, v245))) * 22695477 + 1) % 4294967296;
  }
  function f26(p197, p198, p199, p200) {
    const v248 = (p197 | 15432) & ~(p197 & 15432);
    const v249 = p198 ^ 12315;
    const v250 = p199 ^ 38714;
    const v251 = p200 ^ 58084;
    const vF162 = f16(v248, v249, v250, v251, v248, v249);
    f32(v250, v251, v248, v249);
    return ((34681 + ((~(vF162 & 41134) & vF162 | ~(vF162 & 41134) & 41134) ^ f25(v250, v251, v248, v249, v250, v251))) * 214013 + 2531011) % 4294967296;
  }
  function f27(p201, p202, p203, p204, p205) {
    const v252 = ((9716 + p201) * 1664525 + 1013904223) % 4294967296;
    const v253 = ~(p202 & 7703) & p202 | ~(p202 & 7703) & 7703;
    const v254 = (p203 | 31275) & ~(p203 & 31275);
    const v255 = ~(p204 & 25693) & 25693 | ~(p204 & 25693) & p204;
    const v256 = (8 << (p205 >> 8 & 255)) + (32 << (p205 >> 24 & 255)) + (24 << (p205 >> 16 & 255)) + (16 << (p205 >> 32 & 255));
    const vF25 = f25(v252, v253, v254, v255, v256, v252);
    const vF182 = f18(v253, v254, v255, v256);
    f40(v252, v253, v254);
    return (24 << ((vF25 ^ vF182) >> 16 & 255)) + (8 << ((vF25 ^ vF182) >> 8 & 255)) + (32 << ((vF25 ^ vF182) >> 24 & 255)) + (16 << ((vF25 ^ vF182) >> 32 & 255)) ^ 31710;
  }
  const vVUndefined15 = vUndefined;
  function f28(p206, p207) {
    const v257 = (2531011 + (p206 + 62874) * 214013) % 4294967296;
    const v258 = (24 << (p207 >> 24 & 255)) + (16 << (p207 >> 32 & 255)) + (8 << (p207 >> 8 & 255)) + (32 << (p207 >> 16 & 255));
    const vF252 = f25(v257, v258, v257, v258, v257, v258);
    const vF253 = f25(v257, v258, v257, v258, v257, v258);
    f18(v257, v258, v257, v258);
    const v259 = (16 << ((vF252 ^ vF253) >> 32 & 255)) + (8 << ((vF252 ^ vF253) >> 24 & 255)) + (24 << ((vF252 ^ vF253) >> 16 & 255)) + (32 << ((vF252 ^ vF253) >> 8 & 255));
    return ~(v259 & 55949) & 55949 | ~(v259 & 55949) & v259;
  }
  function f29(p208, p209, p210, p211, p212, p213) {
    const v260 = (24 << (p208 >> 24 & 255)) + (32 << (p208 >> 16 & 255)) + (16 << (p208 >> 8 & 255)) + (8 << (p208 >> 32 & 255));
    const v261 = (p209 | 41551) & ~(p209 & 41551);
    const v262 = (24 << (p210 >> 24 & 255)) + (16 << (p210 >> 32 & 255)) + (8 << (p210 >> 16 & 255)) + (32 << (p210 >> 8 & 255));
    const v263 = ~(p211 & 32641) & (p211 | 32641);
    const v264 = ((p212 + 35582) * 214013 + 2531011) % 4294967296;
    const v265 = ~(p213 & 1090) & (p213 | 1090);
    const v_t3 = f39(v260, v261, v262, v263, v264, v265);
    f19(v260, v261, v262, v263, v264);
    f18(v265, v260, v261, v262);
    const v266 = ~(v_t3 & 8077) & 8077 | ~(v_t3 & 8077) & v_t3;
    return ~(v266 & 3708) & (v266 | 3708);
  }
  const v267 = 19;
  const v268 = 256;
  const v269 = 0;
  function f30(p214) {
    return f22(p214, 8260, 46947, 8004, 37330, 5330);
  }
  const v270 = 17;
  const v271 = 1;
  const v272 = 18;
  const vVUndefined16 = vUndefined;
  function f31(p215, p216, p217, p218, p219) {
    const v273 = (2147483587 + (p215 + 64762) * 2147483629) % 2147483647;
    const v274 = ((18197 + p216) * 214013 + 2531011) % 4294967296;
    const v275 = (2531011 + (22845 + p217) * 214013) % 4294967296;
    const v276 = (32 << (p218 >> 16 & 255)) + (16 << (p218 >> 8 & 255)) + (8 << (p218 >> 32 & 255)) + (24 << (p218 >> 24 & 255));
    const v277 = ~(p219 & 11999) & p219 | ~(p219 & 11999) & 11999;
    const vF254 = f25(v273, v274, v275, v276, v277, v273);
    const vF29 = f29(v274, v275, v276, v277, v273, v274);
    f18(v275, v276, v277, v273);
    return (8 << ((vF254 ^ vF29) >> 24 & 255)) + (16 << ((vF254 ^ vF29) >> 16 & 255)) + (24 << ((vF254 ^ vF29) >> 8 & 255)) + (32 << ((vF254 ^ vF29) >> 32 & 255)) ^ 35444;
  }
  const v278 = 15;
  function f32(p220, p221, p222, p223) {
    const v279 = (2147483587 + (37418 + p220) * 2147483629) % 2147483647;
    const v280 = p221 ^ 57623;
    const v281 = ~(p222 & 40280) & p222 | ~(p222 & 40280) & 40280;
    const v282 = ~(p223 & 24601) & p223 | ~(p223 & 24601) & 24601;
    const vJt3 = f35(v279, v280);
    f35(v281, v282);
    f34(v279, v280, v281, v282, v279);
    const v283 = ~(vJt3 & 43902) & 43902 | ~(vJt3 & 43902) & vJt3;
    return (v283 | 8862) & ~(v283 & 8862);
  }
  const v284 = 16;
  const v285 = 15;
  const v286 = 17;
  function f33(p224, p225, p226, p227, p228) {
    const v287 = p224 ^ 62008;
    const v288 = (24 << (p225 >> 32 & 255)) + (8 << (p225 >> 16 & 255)) + (32 << (p225 >> 8 & 255)) + (16 << (p225 >> 24 & 255));
    const v289 = ((p226 + 46531) * 22695477 + 1) % 4294967296;
    const v290 = ~(p227 & 1884) & 1884 | ~(p227 & 1884) & p227;
    const v291 = ~(p228 & 55588) & 55588 | ~(p228 & 55588) & p228;
    const vF173 = f17(v287, v288, v289, v290, v291);
    f39(v287, v288, v289, v290, v291, v287);
    return ((3037 + (vF173 ^ 57467 ^ f34(v288, v289, v290, v291, v287))) * 1664525 + 1013904223) % 4294967296;
  }
  const vVVVUndefined172 = vVVUndefined17;
  function f34(p229, p230, p231, p232, p233) {
    const v292 = ((p229 + 49173) * 1103515245 + 12345) % 2147483648;
    const v293 = (p230 + 52922) % 65337;
    const v294 = p231 ^ 25250;
    const v295 = ~(p232 & 10903) & 10903 | ~(p232 & 10903) & p232;
    const v296 = ~(p233 & 33814) & 33814 | ~(p233 & 33814) & p233;
    const vF192 = f19(v292, v293, v294, v295, v296);
    const vJt4 = f38(v292, v293);
    f19(v294, v295, v296, v292, v293);
    const v297 = (1 + (19675 + (vF192 ^ vJt4)) * 22695477) % 4294967296;
    return ~(v297 & 7922) & v297 | ~(v297 & 7922) & 7922;
  }
  function f35(p234, p235) {
    const v298 = ((p234 + 44664) * 1664525 + 1013904223) % 4294967296;
    const v299 = p235 ^ 53080;
    return (1 + (57525 + ((17769 + (f37(v298, v299, v298, v299, v298) ^ f36(v299, v298, v299, v298, v299))) % 65357 ^ f18(v298, v299, v298, v299))) * 22695477) % 4294967296;
  }
  function f36(p236, p237, p238, p239, p240) {
    const v300 = ~(p236 & 42203) & p236 | ~(p236 & 42203) & 42203;
    const v301 = p237 ^ 50118;
    const v302 = p238 ^ 41620;
    const v303 = ((p239 + 34240) * 2147483629 + 2147483587) % 2147483647;
    const v304 = (32 << (p240 >> 16 & 255)) + (16 << (p240 >> 8 & 255)) + (8 << (p240 >> 32 & 255)) + (24 << (p240 >> 24 & 255));
    const v_t4 = f39(v300, v301, v302, v303, v304, v300);
    f39(v301, v302, v303, v304, v300, v301);
    return (2531011 + (53616 + ((v_t4 | 43477) & ~(v_t4 & 43477) ^ f18(v302, v303, v304, v300))) * 214013) % 4294967296;
  }
  function f37(p241, p242, p243, p244, p245) {
    const v305 = (16 << (p241 >> 32 & 255)) + (24 << (p241 >> 24 & 255)) + (8 << (p241 >> 8 & 255)) + (32 << (p241 >> 16 & 255));
    const v306 = p242 ^ 55978;
    const v307 = ((p243 + 2934) * 1664525 + 1013904223) % 4294967296;
    const v308 = ~(p244 & 30642) & (p244 | 30642);
    const v309 = (8 << (p245 >> 8 & 255)) + (24 << (p245 >> 32 & 255)) + (16 << (p245 >> 24 & 255)) + (32 << (p245 >> 16 & 255));
    const vF36 = f36(v305, v306, v307, v308, v309);
    const vF31 = f31(v305, v306, v307, v308, v309);
    f18(v305, v306, v307, v308);
    const v310 = (16 << ((vF36 ^ vF31) >> 32 & 255)) + (24 << ((vF36 ^ vF31) >> 8 & 255)) + (8 << ((vF36 ^ vF31) >> 24 & 255)) + (32 << ((vF36 ^ vF31) >> 16 & 255));
    return ~(v310 & 23686) & (v310 | 23686);
  }
  const v311 = 10;
  const v312 = 12;
  const v313 = 0;
  const v314 = 256;
  function f38(p246, p247) {
    const v315 = p246 ^ 24508;
    const v316 = (16 << (p247 >> 16 & 255)) + (24 << (p247 >> 8 & 255)) + (32 << (p247 >> 32 & 255)) + (8 << (p247 >> 24 & 255));
    const vF212 = f21(v315, v316, v315, v316, v315);
    const vF37 = f37(v316, v315, v316, v315, v316);
    f27(v315, v316, v315, v316, v315);
    const v317 = ((11269 + (vF212 ^ vF37)) * 2147483629 + 2147483587) % 2147483647;
    return ~(v317 & 40927) & 40927 | ~(v317 & 40927) & v317;
  }
  function f39(p248, p249, p250, p251, p252, p253) {
    const v318 = p250 ^ 8102;
    const v319 = (24 << (p251 >> 16 & 255)) + (32 << (p251 >> 32 & 255)) + (8 << (p251 >> 24 & 255)) + (16 << (p251 >> 8 & 255));
    const v320 = ~(p252 & 29687) & 29687 | ~(p252 & 29687) & p252;
    const v321 = (1 + (62237 + p253) * 22695477) % 4294967296;
    const vF28 = f28((p248 + 52483) % 65496, (16 << (p249 >> 16 & 255)) + (24 << (p249 >> 8 & 255)) + (32 << (p249 >> 24 & 255)) + (8 << (p249 >> 32 & 255)));
    const vF282 = f28(v318, v319);
    f28(v320, v321);
    return (45290 + (vF28 ^ vF282)) % 65334 ^ 55575;
  }
  function f40(p254, p255, p256) {
    const v322 = p254 ^ 23323;
    const v323 = (2531011 + (61713 + p255) * 214013) % 4294967296;
    const v324 = (p256 | 24198) & ~(p256 & 24198);
    const vF213 = f21(v322, v323, v324, v322, v323);
    const vF214 = f21(v324, v322, v323, v324, v322);
    f21(v323, v324, v322, v323, v324);
    return (16 << ((vF213 ^ vF214) >> 32 & 255)) + (8 << ((vF213 ^ vF214) >> 8 & 255)) + (24 << ((vF213 ^ vF214) >> 24 & 255)) + (32 << ((vF213 ^ vF214) >> 16 & 255)) ^ 31181;
  }
  const v325 = 100;
  function f41(p257, p258) {
    const v326 = (0 << (p257 >> 24 & 255)) + (8 << (p257 >> 8 & 255)) + (24 << (p257 >> 16 & 255)) + (16 << (p257 & 255));
    const v327 = (2531011 + (35630 + p258) * 214013) % 4294967296;
    return (2531011 + (1277 + (function (p259, p260) {
      const v328 = ~(p259 & 5013) & 5013 | ~(p259 & 5013) & p259;
      const v329 = ~(p260 & 56917) & 56917 | ~(p260 & 56917) & p260;
      const v_o = f62(v328, v329, v328, v329);
      const vWt2 = f42(v328, v329);
      return ((62414 + (v_o ^ vWt2)) * 214013 + 2531011) % 4294967296;
    }(v326, v327) ^ f63(v326, v327, v326, v327, v326, v327))) * 214013) % 4294967296;
  }
  const v330 = 20;
  function f42(p261, p262) {
    const v331 = p261 ^ 16115;
    const v332 = p262 ^ 59555;
    const vCg2 = f79(v331, v332, v331, v332);
    const vF72 = f7(v331, v332, v331);
    return (8 << ((vCg2 ^ vF72) >> 8 & 255)) + (16 << ((vCg2 ^ vF72) >> 0 & 255)) + (24 << ((vCg2 ^ vF72) >> 16 & 255)) + (0 << ((vCg2 ^ vF72) >> 24 & 255));
  }
  function f43(p263, p264, p265) {
    vVUndefined10(v555, p263, p264, p265);
    const vPC = f517(v557[0], v557[1], v557[2], v557[0], v557[1]);
    f517(v557[2], v557[0], v557[1], v557[2], v557[0]);
    return vPC ^ 21166;
  }
  const vVV1222 = vV122;
  function f44(p266, p267) {
    const v333 = ~(p266 & 42994) & p266 | ~(p266 & 42994) & 42994;
    const v334 = (0 << (p267 >> 8 & 255)) + (8 << (p267 >> 16 & 255)) + (24 << (p267 >> 24 & 255)) + (16 << (p267 & 255));
    const vF22 = function (p268, p269, p270, p271, p272) {
      const v335 = ~(p271 & 33433) & p271 | ~(p271 & 33433) & 33433;
      const v336 = (16 << (p272 & 255)) + (8 << (p272 >> 16 & 255)) + (24 << (p272 >> 24 & 255)) + (0 << (p272 >> 8 & 255));
      const vF73 = f7(((p268 + 20621) * 214013 + 2531011) % 4294967296, ~(p269 & 44113) & p269 | ~(p269 & 44113) & 44113, p270 ^ 54278);
      (function (p273, p274) {
        const v337 = ~(p273 & 5544) & p273 | ~(p273 & 5544) & 5544;
        const v338 = ((p274 + 34609) * 1664525 + 1013904223) % 4294967296;
        const vF23 = function (p275, p276, p277, p278, p279, p280) {
          const v339 = ~(p275 & 58796) & p275 | ~(p275 & 58796) & 58796;
          const v340 = ~(p276 & 5008) & 5008 | ~(p276 & 5008) & p276;
          const v341 = (p277 + 61445) % 65419;
          const v342 = p278 ^ 59496;
          const v343 = (24 << (p279 >> 0 & 255)) + (16 << (p279 >> 24 & 255)) + (0 << (p279 >> 8 & 255)) + (8 << (p279 >> 16 & 255));
          const v344 = (8 << (p280 & 255)) + (16 << (p280 >> 8 & 255)) + (0 << (p280 >> 16 & 255)) + (24 << (p280 >> 24 & 255));
          const vF24 = function (p281, p282, p283, p284, p285, p286) {
            const v345 = p281 ^ 41633;
            const v346 = ~(p282 & 20586) & p282 | ~(p282 & 20586) & 20586;
            const v347 = (12611 + p283) % 65391;
            const v348 = ((18418 + p284) * 214013 + 2531011) % 4294967296;
            const v349 = ((p285 + 21976) * 22695477 + 1) % 4294967296;
            const v350 = p286 ^ 28414;
            const vIC = f512(v345, v346, v347);
            f10(v348, v349, v350, v345, v346, v347);
            return ~(vIC & 3673) & 3673 | ~(vIC & 3673) & vIC;
          }(v339, v340, v341, v342, v343, v344);
          f516(v339, v340, v341, v342, v343, v344);
          return vF24 ^ 35824;
        }(v337, v338, v337, v338, v337, v338);
        f12(v337, v338, v337);
      })(v335, v336);
      return vF73 ^ 8359;
    }(v333, v334, v333, v334, v333);
    f10(v333, v334, v333, v334, v333, v334);
    return ~(vF22 & 34800) & vF22 | ~(vF22 & 34800) & 34800;
  }
  const v351 = 2;
  const v352 = 13;
  const v353 = 10;
  const vVV1622 = vV162;
  const v354 = 1;
  const v355 = 19;
  ⵠⵠΔ = {
    ⵠⲆᐃᐃⲆΔᐃ: () => new Promise((p287, p288) => {
      vWindow.grecaptcha.ready(function () {
        vWindow.grecaptcha.execute("6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg", {
          action: "validate_recaptcha"
        }).then(function (p289) {
          p287(p289);
        }).catch(p290 => {
          if (v2263) {
            p287(0);
          } else {
            console.log(undefined);
            p288(p290);
          }
        });
      });
    }),
    ⵠⲆΔⲆⲆⲆⵠᐃᐃ: function (p291) {
      vWindow.open(p291, "_blank").focus();
    },
    ⲆⵠᐃⲆΔⵠⲆ: function (p292) {
      vWindow.open(p292, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
    },
    ᐃⲆΔΔᐃΔⲆ: function (p293, p294) {
      for (var v356 in p293) {
        if (p293[v356] != p294[v356]) {
          return false;
        }
      }
      return true;
    },
    ᐃⲆⲆΔⵠⵠⲆⵠⵠ: function (p295, p296) {
      if (p295.length != p296.length) {
        return vVV16;
      }
      for (var v357 = 0; v357 < p295.length; v357++) {
        if (typeof p295 == "object") {
          if (!this.ᐃⲆΔΔᐃΔⲆ(p295[v357], p296[v357])) {
            return false;
          }
        } else if (p295[v357] != p296[v357]) {
          return vVV16;
        }
      }
      return vVV122;
    },
    ⲆΔᐃᐃⲆᐃⲆ: function (p297, p298) {
      p298.x = p297.x;
      p298.y = p297.y;
    },
    ᐃΔᐃᐃⲆΔΔ: function (p299, p300) {
      return {
        x: p299.x - p300.x,
        y: p299.y - p300.y
      };
    },
    ΔⵠᐃⲆⵠΔΔΔⵠ: function (p301, p302) {
      p301.x *= p302;
      p301.y *= p302;
    },
    ⲆΔⵠΔΔΔⵠ: function (p303, p304) {
      return p303.x * p304.x + p303.y * p304.y;
    },
    ᐃΔΔᐃᐃΔⲆ: function (p305) {
      return Math.sqrt(p305.x * p305.x + p305.y * p305.y);
    },
    sign: function (p306) {
      if (p306 < 0) {
        return -1;
      } else {
        return 1;
      }
    },
    ΔᐃᐃΔΔΔⵠ: function (p307, p308) {
      return p307.x * p308.y - p307.y * p308.x;
    },
    ⵠⲆᐃⲆⵠⲆⲆ: function (p309, p310, p311, p312) {
      var v358 = p312 - p310;
      var v359 = p311 - p309;
      return Math.atan2(v358, v359);
    },
    ᐃΔⲆⲆⲆⵠⵠ: function (p313, p314) {
      return Math.asin(this.ⲆΔⵠΔΔΔⵠ(p313, p314) / (this.ᐃΔΔᐃᐃΔⲆ(p313) * this.ᐃΔΔᐃᐃΔⲆ(p314))) * this.sign(this.ΔᐃᐃΔΔΔⵠ(p313, p314));
    },
    ΔᐃΔⲆΔⵠΔ: function (p315) {
      ⲆΔΔΔⲆⲆⲆ = location.href;
      p315 = p315.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v360 = new RegExp("[\\?&]" + p315 + "=([^&#]*)").exec(ⲆΔΔΔⲆⲆⲆ);
      if (v360 === null) {
        return null;
      } else {
        return v360[1];
      }
    },
    ⵠΔΔⲆᐃΔΔ: function (p316, p317) {
      var v361 = Math.PI * 2;
      p317 = (p317 % v361 + v361) % v361;
      if (Math.abs(p316 - p317) > Math.PI) {
        if (p316 > p317) {
          return p317 + v361;
        } else {
          return p317 - v361;
        }
      } else {
        return p317;
      }
    },
    ⲆᐃⵠⵠΔΔⵠ: function (p318, p319) {
      return this.ᐃΔⲆⲆⲆⵠⵠ({
        x: 1,
        y: 0
      }, this.ᐃΔᐃᐃⲆΔΔ(p318, p319));
    },
    ᐃᐃⵠⲆ: function (p320, p321) {
      return Math.sqrt((p321.x - p320.x) * (p321.x - p320.x) + (p321.y - p320.y) * (p321.y - p320.y));
    },
    ΔⲆⵠⲆᐃᐃⲆ: function (p322, p323) {
      return {
        x: Math.sin(p323) * p322,
        y: Math.cos(p323) * p322
      };
    },
    ΔᐃΔᐃΔΔΔ: function (p324, p325) {
      p324.x += p325.x;
      p324.y += p325.y;
    },
    ᐃᐃⵠⲆⵠΔᐃ: function (p326, p327) {
      p326.x -= p327.x;
      p326.y -= p327.y;
    },
    ⵠⲆⵠᐃΔⵠΔΔᐃ: function (p328, p329, p330) {
      p328.x += p329;
      p328.y += p330;
    },
    ⵠⵠⲆᐃΔΔΔⲆⲆ: function (p331, p332, p333) {
      return {
        x: p331.x + p332,
        y: p331.y + p333
      };
    },
    ⵠᐃⵠⵠΔ: function (p334, p335, p336) {
      p334.x += Math.sin(p336) * p335;
      p334.y += Math.cos(p336) * p335;
    },
    ᐃᐃⲆᐃⲆⲆⲆ: function (p337, p338) {
      return Math.floor((p337 - p338) / 2);
    },
    ⲆⵠᐃΔΔΔⵠ: function (p339, p340) {
      return {
        x: (p339.x + p340.x) / 2,
        y: (p339.y + p340.y) / 2
      };
    },
    ⲆᐃⵠⵠΔⵠΔ: function () {
      if (Math.random() > 0.5) {
        return 1;
      } else {
        return -1;
      }
    },
    ⵠⲆᐃᐃΔⲆΔⵠᐃ: function (p341, p342, p343) {
      var v362 = this.ⲆᐃⵠⵠΔⵠΔ();
      var v363 = this.ⲆᐃⵠⵠΔⵠΔ();
      var v364 = Math.random() * Math.PI / 2;
      return {
        x: Math.floor(p341 + Math.sin(v364) * v362 * p343),
        y: Math.floor(p342 + Math.cos(v364) * v363 * p343)
      };
    },
    ᐃΔⵠΔⵠΔΔⵠⲆ: function (p344, p345, p346, p347) {
      this.x = p344;
      this.y = p345;
      this.w = p346;
      this.ᐃⵠⵠ = p347;
    },
    ΔⲆⵠⲆᐃⵠⵠΔⲆ: function (p348) {
      ⵠⲆⲆⲆ = [];
      ⵠⲆⲆⲆ.push.apply(ⵠⲆⲆⲆ, p348);
      var v365 = [];
      while (ⵠⲆⲆⲆ.length > 0) {
        var v366 = Math.floor(Math.random() * ⵠⲆⲆⲆ.length);
        v365.push(ⵠⲆⲆⲆ[v366]);
        ⵠⲆⲆⲆ.splice(v366, 1);
      }
      return v365;
    },
    ΔΔⲆⲆΔⲆΔ: function (p349) {
      if (p349 >= 20000) {
        p349 = (p349 - 20000) * 1000;
      } else if (p349 >= 10000) {
        p349 = (p349 - 10000) * 100;
      }
      return p349;
    },
    ΔⲆᐃⲆΔᐃᐃ: function (p350) {
      if (typeof p350 != "number") {
        return "0";
      }
      if (p350 >= 10000) {
        var v367 = Math.floor(Math.log10(p350)) - 2;
        var v368 = Math.max(0, 3 - v367);
        var v369 = Math.floor(p350 / 1000).toString();
        if (v368) {
          for (var v370 = (v369 += "." + (p350 % 1000 / 1000).toString().substring(2).substring(0, v368)).length - 1, v371 = 0; v370 > 0 && v369[v370] == "0"; v370--) {
            v371++;
          }
          if ((v369 = v369.substring(0, v369.length - v371))[v369.length - 1] == ".") {
            v369 = v369.substring(0, v369.length - 1);
          }
        }
        return v369 += "k";
      }
      return p350.toString();
    },
    ᐃⲆⲆⲆΔΔⵠ: function (p351) {
      return p351 * (2 - p351);
    },
    ⲆⵠΔⲆᐃⲆⵠ: function (p352) {
      return --p352 * p352 * p352 + 1;
    },
    ⲆΔᐃᐃⵠ: function (p353) {
      if (p353 < 0.5) {
        return p353 * 2 * p353;
      } else {
        return (4 - p353 * 2) * p353 - 1;
      }
    },
    ᐃⲆΔⵠΔᐃⲆ: function (p354) {
      if (p354 < 0.5) {
        return p354 * 4 * p354 * p354;
      } else {
        return (p354 - 1) * (p354 * 2 - 2) * (p354 * 2 - 2) + 1;
      }
    },
    ΔᐃⵠΔᐃⲆⵠⲆⵠ: function (p355) {
      if (p355 < 0.5) {
        return p355 * 8 * p355 * p355 * p355;
      } else {
        return 1 - --p355 * 8 * p355 * p355 * p355;
      }
    },
    ᐃⵠⲆⵠⵠΔᐃ: function (p356) {
      return 1 - --p356 * p356 * p356 * p356;
    },
    ⲆⵠⲆⲆᐃᐃⵠ: function (p357) {
      return 1 + --p357 * p357 * p357 * p357 * p357;
    },
    ΔⲆⵠⲆ: function (p358, p359, p360, p361, p362, p363) {
      this.ⵠⵠⲆ = p358;
      this.ΔⲆⵠ = p359;
      this.max = p360;
      this.min = p361;
      this.ΔᐃⲆⲆⵠᐃᐃ = p362;
      this.ᐃⲆⵠⲆΔⲆΔ = p363;
      this.ΔΔⵠΔⵠⵠⵠ = 0;
      this.ⵠΔᐃ = function () {
        if (this.ⵠⵠⲆ) {
          if ((v372 = this.ΔⲆⵠ + v3091 * this.ΔᐃⲆⲆⵠᐃᐃ) > this.max) {
            this.ΔⲆⵠ = this.max;
            this.ⵠⵠⲆ = false;
            return vV122;
          }
          this.ΔⲆⵠ = v372;
        } else {
          var v372;
          if ((v372 = this.ΔⲆⵠ - v3091 * this.ᐃⲆⵠⲆΔⲆΔ) < this.min) {
            this.ΔⲆⵠ = this.min;
            this.ⵠⵠⲆ = vVV123;
          } else {
            this.ΔⲆⵠ = v372;
          }
        }
      };
      return vVV162;
    },
    ΔΔΔᐃΔ: function (p364, p365, p366, p367, p368, p369) {
      this.ΔᐃΔⵠⲆ = p364;
      this.ᐃΔᐃⵠΔ = p365;
      this.ⲆΔΔⵠΔ = p366;
      this.ⵠⵠᐃᐃᐃ = p367;
      this.x = p368;
      this.ᐃⲆⵠⲆΔ = p369;
      this.ΔⵠⲆᐃⲆⲆΔ = function () {
        this.x = this.ⲆⵠᐃᐃΔⵠⲆⲆⵠ;
        this.ᐃΔᐃⵠΔ = 0;
      };
      this.ᐃᐃᐃⵠΔⲆΔ = function (p370) {
        if (p370 !== this.ᐃⲆⵠⲆΔ) {
          this.ᐃⲆⵠⲆΔ = p370;
          this.ⵠⵠᐃᐃᐃ = this.x;
          this.ᐃΔᐃⵠΔ = 0;
        }
        if (this.ᐃⲆⵠⲆΔ !== this.x) {
          this.ᐃΔᐃⵠΔ += v3091;
          if (this.ᐃΔᐃⵠΔ > this.ⲆΔΔⵠΔ) {
            this.x = this.ᐃⲆⵠⲆΔ;
          } else {
            var v373 = this.ΔᐃΔⵠⲆ(this.ᐃΔᐃⵠΔ / this.ⲆΔΔⵠΔ);
            this.x = this.ⵠⵠᐃᐃᐃ + (this.ᐃⲆⵠⲆΔ - this.ⵠⵠᐃᐃᐃ) * v373;
          }
        }
      };
    },
    ᐃΔⵠΔⵠⵠⵠ: function (p371, p372, p373, p374, p375, p376, p377, p378, p379) {
      this.ΔᐃΔⵠⲆ = p371;
      this.ᐃΔᐃⵠΔ = p372;
      this.ⲆΔΔⵠΔ = p373;
      this.ⵠⵠᐃᐃᐃ = p374;
      this.ᐃΔᐃᐃΔ = p375;
      this.x = p376;
      this.y = p377;
      this.ᐃⲆⵠⲆΔ = p378;
      this.ⲆᐃⲆⲆⵠΔⲆ = p379;
      this.ᐃᐃᐃⵠΔⲆΔ = function (p380) {
        if (p380.x != this.ᐃⲆⵠⲆΔ || p380.y != this.ⲆᐃⲆⲆⵠΔⲆ) {
          this.ᐃⲆⵠⲆΔ = p380.x;
          this.ⲆᐃⲆⲆⵠΔⲆ = p380.y;
          this.ⵠⵠᐃᐃᐃ = this.x;
          this.ᐃΔᐃᐃΔ = this.y;
          this.ᐃΔᐃⵠΔ = 0;
        }
        if (this.ᐃⲆⵠⲆΔ != this.x || this.ⲆᐃⲆⲆⵠΔⲆ != this.y) {
          this.ᐃΔᐃⵠΔ += v3091;
          if (this.ᐃΔᐃⵠΔ > this.ⲆΔΔⵠΔ) {
            this.x = this.ᐃⲆⵠⲆΔ;
            this.y = this.ⲆᐃⲆⲆⵠΔⲆ;
          } else {
            var v374 = this.ΔᐃΔⵠⲆ(this.ᐃΔᐃⵠΔ / this.ⲆΔΔⵠΔ);
            this.x = this.ⵠⵠᐃᐃᐃ + (this.ᐃⲆⵠⲆΔ - this.ⵠⵠᐃᐃᐃ) * v374;
            this.y = this.ᐃΔᐃᐃΔ + (this.ⲆᐃⲆⲆⵠΔⲆ - this.ᐃΔᐃᐃΔ) * v374;
          }
        }
      };
    },
    ⵠᐃΔⵠⲆΔᐃ: function (p381) {
      var v375 = "";
      for (var v376 = 0; v376 < p381; v376++) {
        v375 += String.fromCharCode(48 + Math.floor(Math.random() * 74));
      }
      return v375;
    },
    ⲆᐃᐃΔⲆⲆⲆ: function (p382, p383) {
      p383 ||= location.href;
      p382 = p382.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v377 = new RegExp("[\\?&]" + p382 + "=([^&#]*)").exec(p383);
      if (v377 == null) {
        return null;
      } else {
        return v377[1];
      }
    },
    ΔⵠⲆΔ: function (p384) {
      let v378 = "";
      const v379 = p384.length;
      for (let v380 = 0; v380 < v379; v380++) {
        v378 += String.fromCharCode(p384[v380]);
      }
      return v378;
    },
    ᐃᐃΔⵠΔⲆⵠ: function (p385, p386) {
      return p385.x >= p386.x && p385.x <= p386.x + p386.w && p385.y >= p386.y && p385.y <= p386.y + p386.ᐃⵠⵠ && vVV12;
    },
    ⵠⲆⵠΔΔⵠᐃ: function (p387, p388, p389, p390, p391, p392, p393, p394) {
      if (Math.max(p387, p391) < Math.min(p388, p392) && Math.max(p389, p393) < Math.min(p390, p394)) {
        return 1;
      } else {
        return 0;
      }
    },
    ΔᐃⵠⵠⲆ: function (p395, p396, p397) {
      return (1 - p397) * p395 + p397 * p396;
    },
    ⵠΔᐃΔⲆⲆΔ: function (p398) {
      return p398.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
    }
  };
  Math.sign = Math.sign || function (p399) {
    if (p399 === 0) {
      return 0;
    } else if (p399 > 0) {
      return 1;
    } else {
      return -1;
    }
  };
  Math.log10 = Math.log10 || function (p400) {
    return Math.log(p400) / Math.ⲆⲆΔΔᐃΔᐃⵠΔ;
  };
  const v381 = 255;
  const v382 = 14;
  const v383 = 17;
  (function (p401) {
    var v384 = false;
    if (typeof ⵠⵠⲆᐃⲆᐃᐃ == "function" && ⵠⵠⲆᐃⲆᐃᐃ.ⵠΔⵠΔΔᐃΔⲆΔ) {
      ⵠⵠⲆᐃⲆᐃᐃ(p401);
      v384 = true;
    }
    if (typeof ᐃⵠᐃᐃⲆⵠᐃ === "object") {
      ⵠΔᐃΔⲆᐃⲆᐃΔ.exports = p401();
      v384 = vVV123;
    }
    if (!v384) {
      var v385 = vWindow.ⵠⲆΔⲆ;
      var v386 = vWindow.ⵠⲆΔⲆ = p401();
      v386.ⲆΔⵠⵠⲆᐃΔⵠᐃ = function () {
        vWindow.ⵠⲆΔⲆ = v385;
        return v386;
      };
    }
  })(function () {
    function e() {
      for (var v387 = 0, v388 = {}; v387 < arguments.length; v387++) {
        var v389 = arguments[v387];
        for (var v390 in v389) {
          v388[v390] = v389[v390];
        }
      }
      return v388;
    }
    return function f46(p402) {
      function f47(p403, p404, p405) {
        var v391;
        if (typeof document != "undefined") {
          if (arguments.length > 1) {
            if (typeof (p405 = e({
              path: "/"
            }, f47.ⲆΔⵠⵠᐃⲆⲆ, p405)).expires == "number") {
              var v392 = new Date();
              v392.setMilliseconds(v392.getMilliseconds() + p405.expires * 86400000);
              p405.expires = v392;
            }
            try {
              v391 = JSON.stringify(p404);
              if (/^[\{\[]/.test(v391)) {
                p404 = v391;
              }
            } catch (e) {}
            p404 = p402.write ? p402.write(p404, p403) : encodeURIComponent(String(p404)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
            p403 = (p403 = (p403 = encodeURIComponent(String(p403))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
            return document.cookie = [p403, "=", p404, p405.expires ? "; expires=" + p405.expires.toUTCString() : "", p405.path ? "; path=" + p405.path : "", p405.domain ? "; domain=" + p405.domain : "", p405.ⲆⵠⲆΔⲆⲆⲆⲆⵠ ? "; secure" : ""].join("");
          }
          if (!p403) {
            v391 = {};
          }
          for (var v393 = document.cookie ? document.cookie.split("; ") : [], v394 = /(%[0-9A-Z]{2})+/g, v395 = 0; v393.length > v395; v395++) {
            var v396 = v393[v395].split("=");
            var v397 = v396.slice(1).join("=");
            if (v397.charAt(0) === "\"") {
              v397 = v397.slice(1, -1);
            }
            try {
              var v398 = v396[0].replace(v394, decodeURIComponent);
              v397 = p402.read ? p402.read(v397, v398) : p402(v397, v398) || v397.replace(v394, decodeURIComponent);
              if (this.json) {
                try {
                  v397 = JSON.parse(v397);
                } catch (e) {}
              }
              if (v398 === p403) {
                v391 = v397;
                break;
              }
              if (!p403) {
                v391[v398] = v397;
              }
            } catch (e) {}
          }
          return v391;
        }
      }
      f47.set = f47;
      f47.get = function (p406) {
        return f47.call(f47, p406);
      };
      f47.ΔⲆᐃᐃᐃᐃⲆⲆΔ = function () {
        return f47.apply({
          json: true
        }, [].slice.call(arguments));
      };
      f47.ⲆΔⵠⵠᐃⲆⲆ = {};
      f47.remove = function (p407, p408) {
        f47(p407, "", e(p408, {
          expires: -1
        }));
      };
      f47.ⵠᐃⲆᐃᐃᐃⵠⲆⲆ = f46;
      return f47;
    }(function () {});
  });
  const v399 = 11;
  const v400 = 8;
  const vVVUndefined142 = vVUndefined14;
  function f48(p409, p410, p411, p412) {
    const v401 = ~(p409 & 15153) & 15153 | ~(p409 & 15153) & p409;
    const v402 = (16 << (p410 & 255)) + (8 << (p410 >> 8 & 255)) + (24 << (p410 >> 16 & 255)) + (0 << (p410 >> 24 & 255));
    const v403 = ~(p411 & 18617) & p411 | ~(p411 & 18617) & 18617;
    const v404 = p412 ^ 51792;
    const vEg2 = f85(v401, v402, v403, v404);
    const vPp2 = f444(v401, v402, v403, v404, v401);
    return (16 << ((vEg2 ^ vPp2) >> 24 & 255)) + (8 << ((vEg2 ^ vPp2) >> 8 & 255)) + (24 << ((vEg2 ^ vPp2) >> 16 & 255)) + (0 << ((vEg2 ^ vPp2) & 255));
  }
  var v405 = document.getElementById("game_canvas");
  const v406 = 14;
  var v407 = v405.getContext("2d");
  var v408 = v405.width;
  const v409 = 100;
  var v410 = v405.height;
  var v411 = v405.width / 2;
  var v412 = v405.height / 2;
  var v413 = {
    x: v411,
    y: v412
  };
  var v414 = 1;
  const v415 = 20;
  function f49(p413) {
    const vF26 = function () {
      for (let v416 = 0; v416 < 5; v416++) {
        vWindow.addEventListener("click", function () {
          vF26();
        });
      }
    };
    vF26();
  }
  var v417 = 1;
  var v418 = -1;
  const vVVVUndefined142 = vVVUndefined142;
  const v419 = 0;
  const v420 = 2;
  const vVVVUndefined173 = vVVUndefined17;
  const v421 = 13;
  var v422 = "J" + v450;
  var v423 = "S" + v470;
  const v424 = 10477016;
  const v425 = 10477016 .ΔⲆⵠⲆⲆⵠᐃⵠΔ;
  const v426 = `const ⲆᐃᐃΔᐃᐃⲆᐃⲆ = (typeof ⲆΔⲆΔᐃΔᐃᐃⵠ === "${v425}") ? 1 : 0; return ⲆᐃᐃΔᐃᐃⲆᐃⲆ;`;
  var vVWindow = vWindow;
  const v427 = 18;
  var v428;
  const v429 = 16;
  var v430 = (v438 = "O") + "N";
  const vVVV122 = vVV122;
  const v431 = 255;
  var v432;
  const v433 = 256;
  const vVVV1222 = vVV122;
  const vVVVVUndefined173 = vVVVUndefined173;
  const v434 = 14;
  var v435;
  var vVVWindow = vVWindow;
  v423 = "N";
  var v436 = "J";
  const v437 = 15;
  var v438 = "O" + v450;
  var vVVVWindow = vVVWindow;
  const v439 = 12;
  var v440;
  const v441 = 255;
  const v442 = 100;
  var vVVVVWindow = vVVVWindow;
  const v443 = 1;
  v430 = "N" + undefined;
  var v444;
  var vVVVVVWindow = vVVVVWindow;
  const v445 = 12;
  const v446 = 13;
  const v447 = 100;
  var v448;
  var v449;
  var v450;
  var vVVVVVVWindow = vVVVVVWindow;
  var vVVVVVVVWindow = vVVVVVVWindow;
  const v451 = 10;
  var v452;
  const vVV163 = vV16;
  const v453 = 17;
  var vVVVVVVVVWindow = vVVVVVVVWindow;
  const v454 = 19;
  const v455 = 18;
  v436 = "O";
  const v456 = 20;
  const v457 = 20;
  const v458 = 1;
  const v459 = 15;
  const v460 = 8;
  const v461 = 17;
  const v462 = 11;
  const v463 = 20;
  const v464 = 100;
  var v465;
  var v466 = vVVVVVVVVWindow = vVVVVVVVWindow;
  const vVVV16 = vVV16;
  var v467;
  const v468 = 12;
  const vV123 = v12;
  const v469 = 100;
  var vV466 = v466;
  var v470 = "J" + (v465 = "S");
  const v471 = 19;
  const vVVUndefined18 = vVUndefined;
  v405.oncontextmenu = function () {
    return vV162;
  };
  const v472 = 16;
  const v473 = 0;
  v422 = "J";
  const v474 = 2946578;
  const v475 = 2946578 .ⲆᐃⵠⵠΔᐃⲆ;
  const v476 = `const ΔⲆᐃᐃⵠⲆⵠ = (typeof ⲆⵠΔΔⲆΔⲆΔᐃ === "${v475}") ? 1 : 0; return ΔⲆᐃᐃⵠⲆⵠ;`;
  const v477 = 13;
  function f50(p414) {
    var v478 = new Image();
    v478.src = p414.toDataURL("image/png");
    v478.width = p414.width;
    v478.height = p414.height;
    v478.ᐃᐃⲆⲆⲆᐃⵠ = 1;
    return v478;
  }
  const v479 = 256;
  const v480 = 14;
  v438 = v430;
  const v481 = 12;
  v430 = v450;
  v450 = v470;
  const v482 = 255;
  const v483 = 100;
  v444 = v470 + (v436 += v422 = v423);
  const v484 = 19;
  v438 = v470;
  v440 = v444;
  const v485 = 13;
  v423 = v436 + v422;
  v448 = v428 = v432 = v470 + v436;
  v438 = v470 + v436;
  v449 = v432;
  v430 = v470 + v436;
  v452 = v435 = v428;
  v436 = v450 = v470;
  const v486 = 18;
  v465 = v432;
  v467 = v428;
  v422 = v438;
  var v487 = vWindow.devicePixelRatio || 1;
  const v488 = 10;
  var v489 = v407.ᐃⲆΔΔⲆᐃⲆΔΔ || v407.ⵠΔⵠᐃⵠΔᐃⵠΔ || v407.ΔᐃⵠΔⵠΔΔᐃⲆ || v407.ⵠΔⲆⵠᐃᐃⵠᐃΔ || v407.ⵠⵠΔᐃⵠⲆⲆᐃᐃ || 1;
  function f51() {
    if (vWindow.innerWidth != v405.width) {
      v405.width = vWindow.innerWidth;
      v408 = v405.width;
      v411 = v405.width / 2;
    }
    if (v405.height != vWindow.innerHeight) {
      v405.height = vWindow.innerHeight;
      v410 = v405.height;
      v412 = v405.height / 2;
    }
    v413 = {
      x: v411,
      y: v412
    };
    var v490 = v405.width;
    var v491 = v405.height;
    v417 = v418 === -1 ? v487 / v489 : v418;
    v405.width = v490 * v417;
    v405.height = v491 * v417;
    v405.style.width = v490 + "px";
    v405.style.height = v491 + "px";
    v407.scale(v417, v417);
    if (v2860) {
      v2860.Δⵠⵠ.ⵠⵠΔⵠⲆⵠⵠ = v490;
      v2860.Δⵠⵠ.ⲆⲆⲆᐃⲆⵠΔ = v491;
    }
    if (v3093.ΔⲆⲆᐃΔ) {
      v3093.ⵠΔᐃ();
    } else if (v2858.ΔⲆⲆᐃΔ) {
      v2858.ⵠΔᐃ();
    } else if (v3057.ΔⲆⲆᐃΔ) {
      v3057.ⵠΔᐃ();
    } else if (v2861.ΔⲆⲆᐃΔ) {
      v2861.ⵠΔᐃ();
    }
  }
  const vVVVVUndefined172 = vVVVUndefined172;
  var v492 = document.getElementById("game_body");
  v492.ondragstart = function () {
    return vV162;
  };
  v492.ondrop = function () {
    return false;
  };
  v492.onresize = f51;
  (function () {
    var v493 = 0;
    for (var v494 = ["ms", "moz", "webkit", "o"], v495 = 0; v495 < v494.length && !vWindow.requestAnimationFrame; ++v495) {
      vWindow.requestAnimationFrame = vWindow[v494[v495] + "RequestAnimationFrame"];
      vWindow.cancelAnimationFrame = vWindow[v494[v495] + "CancelAnimationFrame"] || vWindow[v494[v495] + "CancelRequestAnimationFrame"];
    }
    vWindow.requestAnimationFrame ||= function (p415, p416) {
      var v496 = new Date().getTime();
      var v497 = Math.max(0, 16 - (v496 - v493));
      var v498 = vWindow.setTimeout(function () {
        p415(v496 + v497);
      }, v497);
      v493 = v496 + v497;
      return v498;
    };
    vWindow.cancelAnimationFrame ||= function (p417) {
      clearTimeout(p417);
    };
  })();
  const v499 = 2;
  const v500 = 15;
  const vF27 = function () {
    let v501 = 0;
    let v502 = 0;
    let v503 = 0;
    const v504 = ⵠⵠΔ.ΔⵠⲆΔ([115, 116, 97, 99, 107]);
    const v505 = ⵠⵠΔ.ΔⵠⲆΔ([67, 97, 110, 118, 97, 115, 82, 101, 110, 100, 101, 114, 105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 50, 68]);
    const v506 = ⵠⵠΔ.ΔⵠⲆΔ([112, 114, 111, 116, 111, 116, 121, 112, 101]);
    const v507 = ⵠⵠΔ.ΔⵠⲆΔ([100, 114, 97, 119, 73, 109, 97, 103, 101]);
    ⵠⵠΔ.ΔⵠⲆΔ([103, 108, 111, 98, 97, 108, 65, 108, 112, 104, 97]);
    const v508 = ⵠⵠΔ.ΔⵠⲆΔ([117, 115, 101, 114, 115, 99, 114, 105, 112, 116]);
    const v509 = ⵠⵠΔ.ΔⵠⲆΔ([105, 110, 100, 101, 120, 79, 102]);
    const v510 = ⵠⵠΔ.ΔⵠⲆΔ([77, 97, 116, 104]);
    const v511 = ⵠⵠΔ.ΔⵠⲆΔ([103, 101, 116]);
    const v512 = ⵠⵠΔ.ΔⵠⲆΔ([79, 98, 106, 101, 99, 116]);
    const v513 = ⵠⵠΔ.ΔⵠⲆΔ([104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121]);
    ⵠⵠΔ.ΔⵠⲆΔ([99, 101, 105, 108]);
    const v514 = ⵠⵠΔ.ΔⵠⲆΔ([102, 108, 111, 111, 114]);
    const v515 = ⵠⵠΔ.ΔⵠⲆΔ([87, 101, 98, 83, 111, 99, 107, 101, 116]);
    const v516 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 110, 100]);
    const v517 = ⵠⵠΔ.ΔⵠⲆΔ([115, 105, 103, 110]);
    const v518 = ⵠⵠΔ.ΔⵠⲆΔ([103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114]);
    const v519 = ⵠⵠΔ.ΔⵠⲆΔ([102, 105, 108, 108, 82, 101, 99, 116]);
    const v520 = ⵠⵠΔ.ΔⵠⲆΔ([103, 117, 105, 102, 121]);
    const v521 = ⵠⵠΔ.ΔⵠⲆΔ([101, 118, 97, 108]);
    const v522 = ⵠⵠΔ.ΔⵠⲆΔ([111, 112, 116, 105, 111, 110, 115]);
    const v523 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 88, 114, 97, 121]);
    const v524 = ⵠⵠΔ.ΔⵠⲆΔ([10]);
    const v525 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 67, 111, 108, 111, 114, 101, 100, 83, 112, 105, 107, 101, 115]);
    const v526 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 83, 112, 105, 107, 101]);
    const v527 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 70, 101, 101, 100]);
    const v528 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 67, 114, 97, 102, 116]);
    const v529 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 82, 101, 99, 121, 99, 108, 101]);
    const v530 = ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 84, 111, 116, 101, 109]);
    ⵠⵠΔ.ΔⵠⲆΔ([115, 101, 116, 116, 105, 110, 103, 115, 46, 69, 120, 116, 114, 97, 99, 116, 111, 114, 73, 110, 102, 111]);
    const v531 = ⵠⵠΔ.ΔⵠⲆΔ([83, 97, 110, 100, 115, 116, 111, 114, 109, 73, 109, 97, 103, 101]);
    const v532 = ⵠⵠΔ.ΔⵠⲆΔ([116, 111, 83, 116, 114, 105, 110, 103]);
    const v533 = ⵠⵠΔ.ΔⵠⲆΔ([66, 108, 105, 122, 122, 97, 114, 100, 73, 109, 97, 103, 101]);
    const v534 = ⵠⵠΔ.ΔⵠⲆΔ([73, 68, 76, 69]);
    const v535 = ⵠⵠΔ.ΔⵠⲆΔ([67, 66, 79]);
    const v536 = ⵠⵠΔ.ΔⵠⲆΔ([76, 69, 69, 84, 95, 83, 67, 82, 73, 80, 84, 95, 69, 88, 84, 69, 82, 78, 65, 76]);
    const v537 = ⵠⵠΔ.ΔⵠⲆΔ([82, 101, 105, 100, 105, 116, 101, 83, 112, 105, 107, 101, 65, 108, 108, 121]);
    const v538 = ⵠⵠΔ.ΔⵠⲆΔ([109, 97, 115, 116, 101, 114]);
    const v539 = ⵠⵠΔ.ΔⵠⲆΔ([100, 111, 119, 110]);
    const v540 = ⵠⵠΔ.ΔⵠⲆΔ([109, 111, 100, 101]);
    const v541 = ⵠⵠΔ.ΔⵠⲆΔ([119, 97, 105, 116, 105, 110, 103]);
    const v542 = ⵠⵠΔ.ΔⵠⲆΔ([104, 101, 105, 103, 104, 116]);
    const v543 = ⵠⵠΔ.ΔⵠⲆΔ([119, 105, 100, 116, 104]);
    const v544 = ⵠⵠΔ.ΔⵠⲆΔ([116, 105, 109, 101, 111, 117, 116]);
    const v545 = ⵠⵠΔ.ΔⵠⲆΔ([111, 112, 97, 99, 105, 116, 121]);
    const v546 = ⵠⵠΔ.ΔⵠⲆΔ([91, 99, 108, 97, 115, 115, 42, 61, 34, 103, 117, 105, 102, 121, 34, 93]);
    const v547 = ⵠⵠΔ.ΔⵠⲆΔ([100, 111, 99, 117, 109, 101, 110, 116]);
    const v548 = ⵠⵠΔ.ΔⵠⲆΔ([113, 117, 101, 114, 121, 83, 101, 108, 101, 99, 116, 111, 114, 65, 108, 108]);
    function f52(p418, p419) {
      try {
        if (vWindow[v512][v506][v513](p418)) {
          const v549 = vWindow[v512][v518](vWindow[v512][v506], p418);
          if (v549 && vVVUndefined18 !== v549[v511]) {
            if (v549[v511][v532]()[v509](p419) !== -1) {
              return 1;
            }
          }
        }
      } catch (e) {}
      return 0;
    }
    function f53(p420) {
      try {
        new p420();
      } catch (e) {
        if (e[v504][v509](v508) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f54(p421) {
      try {
        if (vWindow[v512][v506][v513](p421)) {
          return 1;
        }
      } catch (e) {}
      return 0;
    }
    function f55(p422) {
      try {
        p422();
      } catch (e) {
        if (e[v504][v509](v508) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f56(p423) {
      try {
        vWindow[v521](p423);
        return 1;
      } catch (e) {
        return 0;
      }
    }
    return {
      ⵠᐃΔᐃⲆᐃⲆ: function () {
        if (v502 > 10000) {
          f30(v502);
          f86(v502);
          f60(v502);
        }
        v501++;
        if (v501 > 1000) {
          v501 = 0;
          v503 = f55(vWindow[v505][v506][v507]) || v503;
          v503 = f55(vWindow[v505][v506][v519]) || v503;
          v503 = f55(vWindow[v515][v506][v516]) || v503;
          v503 = function (p424) {
            if (p424 && p424[v532] && p424[v532]()[v509](v524) !== -1) {
              return 1;
            }
            return 0;
          }(f53) || v503;
          v503 = f53(vWindow[v515]) || v503;
          v503 = f52(v522, v538) || v503;
          v503 = f52(v534, v538) || v503;
          v503 = f52(v539, v538) || v503;
          v503 = f52(v540, v538) || v503;
          v503 = f52(v543, v538) || v503;
          v503 = f52(v542, v538) || v503;
          v503 = f52(v544, v538) || v503;
          v503 = f52(v545, v538) || v503;
          v503 = function (p425) {
            try {
              if (vWindow[v547][v548](p425).length > 0) {
                return 1;
              } else {
                return 0;
              }
            } catch (e) {
              return 0;
            }
            return 0;
          }(v546) || v503;
          v503 = f54(v522) + f54(v534) + f54(v539) + f54(v541) + f54(v544) + f54(v545) + f54(v540) >= 3 ? 1 : v503;
          v503 = f56(v536) || v503;
          v503 = f56(v535) || v503;
          v503 = f56(v537) || v503;
          v503 = f56(v523) || v503;
          v503 = f56(v525) || v503;
          v503 = f56(v526) || v503;
          v503 = f56(v527) || v503;
          v503 = f56(v528) || v503;
          v503 = f56(v529) || v503;
          v503 = f56(v530) || v503;
          v503 = f56(v530) || v503;
          v503 = f56(v531) || v503;
          v503 = f56(v533) || v503;
          if (vWindow[v520] !== vVUndefined) {
            v503 = 1;
          }
        }
        if (v503 === 1) {
          v502++;
          if (v502 > 10000) {
            vWindow[v510][v514] = vWindow[v510][v517];
            if (vWindow[v510][v514](v2855) !== 1) {
              v3057.ⵠⵠⵠΔᐃΔΔ();
            }
          }
        }
      },
      ⲆΔᐃΔᐃᐃΔ: function () {
        return v503;
      }
    };
  }();
  const v550 = 20;
  function f57(p426, p427, p428) {
    v55(v555, p426, p427, p428);
    const vF30 = function (p429, p430, p431) {
      vVVUndefined13(v555, p429, p430, p431);
      const vJo2 = f61(v557[0], v557[1], v557[2]);
      f61(v557[0], v557[1], v557[2]);
      return (vJo2 | 49004) & ~(vJo2 & 49004);
    }(v557[0], v557[1], v557[2]);
    f61(v557[0], v557[1], v557[2]);
    return ~(vF30 & 40753) & (vF30 | 40753);
  }
  const v551 = 1;
  function f58(p432, p433, p434, p435, p436) {
    const v552 = ~(p432 & 59054) & 59054 | ~(p432 & 59054) & p432;
    const v553 = (24 << (p436 >> 24 & 255)) + (8 << (p436 >> 16 & 255)) + (0 << (p436 >> 8 & 255)) + (16 << (p436 & 255));
    return (2531011 + (12958 + (f48(v552, p433 ^ 26004, (p434 | 46106) & ~(p434 & 46106), p435 ^ 57409) ^ f513(v553, v552))) * 214013) % 4294967296;
  }
  function f59(p437, p438) {
    v63(v555, p437, p438);
    const vF43 = f43(v557[0], v557[1], v557[0]);
    const vPC2 = f517(v557[1], v557[0], v557[1], v557[0], v557[1]);
    return (0 << ((vF43 ^ vPC2) & 255)) + (8 << ((vF43 ^ vPC2) >> 16 & 255)) + (16 << ((vF43 ^ vPC2) >> 8 & 255)) + (24 << ((vF43 ^ vPC2) >> 24 & 255));
  }
  const v554 = 8;
  function f60(p439) {
    return function (p440, p441, p442, p443, p444, p445) {
      vVVUndefined8(v555, p440, p441, p442, p443, p444, p445);
      const vF32 = function (p446, p447, p448, p449, p450, p451) {
        v67(v555, p446, p447, p448, p449, p450, p451);
        const vF33 = function (p452, p453) {
          vVVUndefined64(v555, p452, p453);
          const vF34 = function (p454, p455, p456) {
            vVVUndefined65(v555, p454, p455, p456);
            const vF142 = f14(v557[0], v557[1], v557[2], v557[0], v557[1], v557[2]);
            f11(v557[0], v557[1], v557[2], v557[0], v557[1], v557[2]);
            return ~(vF142 & 64177) & vF142 | ~(vF142 & 64177) & 64177;
          }(v557[0], v557[1], v557[0]);
          const vCg3 = f76(v557[1], v557[0], v557[1], v557[0]);
          return ((14 + (vF34 ^ vCg3)) * 48271 + 0) % 2147483647;
        }(v557[0], v557[1]);
        f61(v557[2], v557[3], v557[4]);
        return ~(vF33 & 33070) & vF33 | ~(vF33 & 33070) & 33070;
      }(v557[0], v557[1], v557[2], v557[3], v557[4], v557[5]);
      const vCC2 = f518(v557[0], v557[1]);
      return ((43 + (vF32 ^ vCC2)) * 16807 + 0) % 2147483647;
    }(p439, 10830, 20171, 48914, 20305, 58031);
  }
  let v555;
  const v556 = 8;
  const vVVV1223 = vVV122;
  let v557;
  const vVVVUndefined16 = vVVUndefined16;
  vVVUndefined16 = function () {
    v555 = vVUndefined3(v56(11));
    v557 = f6(v555);
    if (vVVVUndefined16) {
      vVVVUndefined16();
    }
  };
  const vVV1623 = vV162;
  const v558 = 13;
  var v559 = navigator.language || navigator.userLanguage;
  const v560 = 11;
  var v561 = -new Date().getTimezoneOffset() / 60;
  var v562 = "Europe";
  var v563 = "South America";
  const vVVUndefined152 = vVUndefined15;
  const v564 = 100;
  const v565 = 8;
  var vV562 = v562;
  const v566 = 255;
  if (v561 >= -2 && v561 <= 2) {
    vV562 = v562;
  } else if (v561 > 2 && v561 <= 5) {
    vV562 = "Russia";
  } else if (v561 > 5 && v561 <= 9) {
    vV562 = "Asia";
  } else if (v561 > 9) {
    vV562 = "Australia";
  } else if (v561 >= -5 && v561 < -2) {
    vV562 = v559 === "pt-BR" || v559 === "pt-br" || v559 === "pt" || v559 === "pt-pt" ? v563 : "North America";
  } else if (v561 < -5) {
    vV562 = v559 === "pt-BR" || v559 === "pt-br" || v559 === "pt" || v559 === "pt-pt" ? v563 : "West America";
  }
  const v567 = 17;
  const v568 = 15;
  function f61(p457, p458, p459) {
    vVUndefined11(v555, p457, p458, p459);
    const vF59 = f59(v557[0], v557[1]);
    f43(v557[2], v557[0], v557[1]);
    return vF59 ^ 51909;
  }
  function f62(p460, p461, p462, p463) {
    const v569 = (1 + (28510 + p460) * 22695477) % 4294967296;
    const v570 = (0 << (p461 >> 24 & 255)) + (8 << (p461 & 255)) + (24 << (p461 >> 8 & 255)) + (16 << (p461 >> 16 & 255));
    const v571 = (30830 + p462) % 65403;
    const v572 = p463 ^ 4549;
    const vF58 = f58(v569, v570, v571, v572, v569);
    f65(v570, v571, v572, v569, v570, v571);
    return vF58 ^ 4644;
  }
  var v573 = {
    ⲆⲆⵠⲆᐃΔΔ: function (p464) {
      var v574 = 2147483648;
      var v575 = p464 || Math.floor(Math.random() * (v574 - 1));
      this.ⵠⵠΔⵠᐃ = function (p465) {
        v575 = p465 || Math.floor(Math.random() * (v574 - 1));
      };
      this.get = function () {
        return (v575 = (v575 * 1103515245 + 12345) % v574) / v574;
      };
    }
  };
  const vVVV12 = vVV12;
  const v576 = 12;
  function f63(p466, p467, p468, p469, p470, p471) {
    const v577 = (p466 | 28627) & ~(p466 & 28627);
    const v578 = ((p467 + 24698) * 214013 + 2531011) % 4294967296;
    const v579 = (2147483587 + (52231 + p468) * 2147483629) % 2147483647;
    const v580 = ~(p469 & 25050) & 25050 | ~(p469 & 25050) & p469;
    return (2147483587 + (60164 + (f65(v577, v578, v579, v580, ~(p470 & 53629) & 53629 | ~(p470 & 53629) & p470, ~(p471 & 47627) & (p471 | 47627)) ^ f62(v577, v578, v579, v580))) * 2147483629) % 2147483647;
  }
  var v581 = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]];
  const v582 = 4;
  function f64(p472, p473, p474, p475, p476, p477) {
    const v583 = p474 ^ 29912;
    const v584 = ((p475 + 7088) * 22695477 + 1) % 4294967296;
    const vTC = f513(p472 ^ 64034, (12345 + (p473 + 44771) * 1103515245) % 2147483648);
    f513(v583, v584);
    return ~(vTC & 5234) & 5234 | ~(vTC & 5234) & vTC;
  }
  const v585 = 14;
  const v586 = 256;
  function f65(p478, p479, p480, p481, p482, p483) {
    const v587 = ~(p478 & 3827) & 3827 | ~(p478 & 3827) & p478;
    const v588 = (2531011 + (p479 + 41264) * 214013) % 4294967296;
    const v589 = (8 << (p480 & 255)) + (0 << (p480 >> 24 & 255)) + (16 << (p480 >> 8 & 255)) + (24 << (p480 >> 16 & 255));
    const v590 = (0 << (p481 >> 16 & 255)) + (16 << (p481 >> 24 & 255)) + (24 << (p481 >> 0 & 255)) + (8 << (p481 >> 8 & 255));
    const v591 = p482 ^ 21293;
    const v592 = ((48694 + p483) * 214013 + 2531011) % 4294967296;
    const vEg3 = f85(v587, v588, v589, v590);
    f516(v591, v592, v587, v588, v589, v590);
    return vEg3 ^ 46643;
  }
  var v593 = 0;
  let v594 = {
    ᐃᐃⵠΔⲆ: ["#133A2B", "#042b30"],
    ΔⵠⲆⲆⲆΔΔᐃⵠ: ["#EBF2F0", "#136167"],
    ⲆⵠⵠⵠⵠᐃΔ: ["#4EB687", "#187484"],
    ⵠᐃᐃⲆᐃΔⲆ: ["#664516", "#13474C"],
    Δᐃⵠᐃⵠᐃⵠ: ["#FCEFBB", "#0F4D48"],
    ᐃⲆⵠⵠΔΔⵠ: ["#C1AA7E", "#0F423D"],
    ⵠⵠΔΔⵠΔΔ: ["#594837", "#163A3A"],
    ⵠⵠⲆⵠΔᐃᐃ: ["#A5D6D6", "#539CA0"],
    ΔᐃⲆⲆᐃ: ["#0B6A84", "#09373F"],
    ⵠᐃⵠⲆⲆΔᐃ: ["#2A8B9B", "#0F464C"],
    ⲆΔΔⵠΔⵠΔ: ["#A9D6D3", "#115E60"],
    ΔΔⵠΔΔᐃᐃ: ["#ECF7F9", "#539CA0"],
    ΔⲆⲆⵠⲆⲆⲆ: ["#FFF", "#FFF"],
    ⲆⵠⲆΔⲆᐃⵠ: ["#FFF", "#FFF"],
    ᐃΔᐃⲆᐃΔⲆ: ["#1C9BA4", "#00272F"],
    ⵠⵠⲆᐃΔ: ["#2D2017", "#031C1E"],
    ΔⲆᐃ: 0,
    ᐃᐃⵠ: 1,
    ΔⲆⵠⲆⲆⵠΔΔⵠ: 2300,
    ᐃⲆΔᐃΔⲆᐃⲆΔ: 2290,
    ⵠΔⵠΔⵠΔⲆ: 34,
    ΔⵠⵠⵠΔⵠⵠ: 5,
    ΔⵠᐃⲆⵠΔᐃ: 68,
    ᐃⵠᐃᐃⵠⵠΔ: 34,
    ᐃΔΔⵠᐃⲆⲆ: 5,
    ΔⵠⲆⲆⵠᐃΔ: 1,
    ΔᐃⵠΔΔⲆΔ: 0.6,
    ⵠΔⲆⲆᐃΔⵠ: 0.25,
    ⵠΔⵠⲆⲆΔΔ: 50,
    ⵠⲆΔΔᐃⵠⵠ: 10,
    ΔᐃⵠᐃΔᐃⲆ: 75,
    ΔⲆᐃⲆᐃⲆⵠ: 20,
    ⵠⵠΔⵠⲆⲆⲆ: 5,
    ΔⵠΔᐃⲆ: 0,
    ⵠᐃΔᐃⲆ: 1,
    ⲆΔᐃᐃⲆ: 2,
    ⲆⲆⲆⲆΔ: 3,
    ᐃⲆⵠⵠⲆ: 4,
    ᐃⵠⵠⲆⲆ: 5,
    ᐃⵠⲆⵠⲆ: 6,
    ΔⲆⵠΔᐃ: 7,
    ⲆΔⲆΔⲆ: 8,
    ΔᐃⵠⲆᐃ: 9,
    ⲆⵠⲆⲆⲆ: 10,
    ⲆΔᐃᐃᐃ: 11,
    ᐃᐃᐃⲆᐃ: 12,
    ᐃⲆΔᐃⲆ: 13,
    ᐃⵠᐃᐃⲆ: 14,
    ⲆⲆᐃᐃᐃ: 15,
    Δⵠⵠⵠⵠ: 16,
    ᐃⲆⵠΔΔ: 17,
    ᐃΔᐃⲆΔ: 18,
    ⵠᐃⲆᐃΔ: 19,
    ⲆΔᐃⵠᐃ: 20,
    ⲆⵠⵠΔᐃ: 21,
    ⲆⲆⵠᐃⲆ: 22,
    ⲆᐃΔΔⲆ: 23,
    ΔⵠΔⵠΔ: 24,
    ⲆⵠⲆΔⵠ: 25,
    ΔⵠⵠᐃⲆ: 26,
    ᐃⵠᐃⵠⲆ: 27,
    ᐃⵠᐃᐃΔ: 28,
    ᐃⲆⵠⲆⲆ: 29,
    ⵠΔΔΔⵠ: 30,
    ⵠΔᐃⲆⵠ: 31,
    Δⵠᐃᐃⵠ: 32,
    ⲆΔⵠⲆᐃ: 33,
    ᐃΔΔⵠⲆ: 34,
    ΔⵠᐃⵠⲆ: 35,
    ⵠΔΔⵠΔ: 36,
    ⵠⵠΔⲆΔ: 37,
    ΔⵠΔⵠⲆ: 38,
    ᐃⵠⲆᐃΔ: 39,
    ⵠᐃⵠᐃⲆ: 40,
    ΔⵠᐃⲆΔ: 41,
    ΔⵠΔᐃⵠ: 42,
    ⵠⵠⲆⲆᐃ: 43,
    ᐃⵠⲆⲆᐃ: 44,
    ⲆᐃΔᐃⵠ: 45,
    ⲆᐃⲆΔⵠ: 46,
    ⲆⲆΔⲆ: 47,
    ΔΔΔΔⵠ: 48,
    ⵠⵠⵠΔⵠ: 49,
    ⲆΔΔΔⵠ: 50,
    ⲆⵠⵠΔⲆ: 51,
    ΔΔᐃⵠⲆ: 52,
    ⲆΔⲆⵠⲆ: 53,
    ⲆᐃᐃⵠΔ: 54,
    ⲆᐃⲆΔΔ: 55,
    ⵠᐃᐃᐃⵠ: 56,
    ⲆᐃΔΔⵠ: 57,
    ⵠΔⵠⵠᐃ: 58,
    ⲆᐃⲆᐃΔ: 59,
    ⵠⵠΔᐃⵠ: 60,
    ᐃΔⲆΔᐃ: 61,
    ⵠⲆⵠΔΔ: 62,
    ⵠⲆΔΔᐃ: 63,
    ⵠⲆⵠⲆᐃ: 64,
    ᐃⵠⵠᐃⵠ: 65,
    ⵠᐃΔⵠΔ: 66,
    ⵠΔⵠΔⲆ: 67,
    ᐃΔⵠΔⵠ: 68,
    ᐃΔⵠΔΔ: 69,
    Ⲇⵠᐃⵠᐃ: 70,
    ᐃⲆⲆⵠⲆ: 71,
    ᐃⲆᐃΔⵠ: 72,
    ΔⵠⲆΔⲆ: 73,
    ᐃⵠⵠⵠΔ: 74,
    ⵠⵠⵠⵠⲆ: 75,
    ⵠᐃⲆᐃᐃ: 76,
    ᐃⲆΔⵠⲆ: 77,
    ΔΔⵠᐃΔ: 78,
    ΔΔⲆⵠΔ: 79,
    ᐃΔⲆⲆᐃ: 80,
    ⵠⵠⵠⵠΔ: 81,
    ⵠΔΔⲆᐃ: 82,
    ⲆᐃᐃΔⲆ: 83,
    ΔⵠⲆΔⵠ: 84,
    ⲆⲆᐃΔΔ: 85,
    ᐃⲆⵠᐃΔ: 86,
    ⵠⲆΔᐃᐃ: 87,
    Δᐃᐃᐃⵠ: 88,
    ΔᐃⲆᐃΔ: 89,
    Ⲇᐃⵠᐃⵠ: 90,
    ΔⲆⵠᐃⵠ: 91,
    ΔΔᐃⵠⵠ: 92,
    ⲆⵠΔⲆⵠ: 93,
    ⵠᐃⲆⵠⵠ: 94,
    ⵠⲆΔᐃⵠ: 95,
    ᐃᐃⵠᐃΔ: 96,
    ᐃⲆᐃⲆⵠ: 97,
    ⵠΔⵠⲆⲆ: 98,
    ᐃᐃⲆᐃⲆ: 99,
    ΔᐃΔⲆⵠ: 100,
    ᐃⵠᐃΔⲆ: 101,
    ᐃΔⲆΔΔ: 102,
    ⲆΔⲆΔΔ: 103,
    ⵠᐃᐃΔⵠ: 104,
    ⵠⵠⲆᐃᐃ: 105,
    ⵠΔᐃᐃᐃ: 106,
    ΔⵠⵠᐃΔ: 107,
    ⵠⲆᐃⵠⵠ: 108,
    Δⵠᐃⵠᐃ: 109,
    ᐃᐃΔᐃⵠ: 110,
    ᐃΔΔⲆΔ: 111,
    ΔᐃⵠⵠΔ: 112,
    ⲆᐃⵠⲆⵠ: 113,
    ΔⵠΔⲆⵠ: 114,
    ⲆⵠΔⵠⲆ: 115,
    ⲆⲆᐃΔⵠ: 116,
    ⲆⲆⲆΔᐃ: 117,
    ⲆⲆⵠΔᐃ: 118,
    ⲆᐃΔⲆΔ: 119,
    ⵠⵠΔⵠⵠ: 120,
    ⲆⵠᐃΔⲆ: 121,
    ΔᐃⲆⲆΔ: 122,
    ᐃΔᐃΔΔ: 123,
    ⲆΔⲆΔᐃ: 124,
    ⵠⲆⵠⵠᐃ: 125,
    ᐃⵠᐃⵠΔ: 126,
    ΔᐃⲆⵠⵠ: 127,
    ⲆⵠⵠⲆⵠ: 128,
    ΔΔΔⵠΔ: 129,
    ΔⲆⲆⲆᐃ: 130,
    ΔᐃⲆⵠⲆ: 131,
    ᐃⲆⲆⵠᐃ: 132,
    ᐃⵠⲆⲆⲆ: 133,
    ΔⲆᐃⲆΔ: 134,
    ΔⵠⲆΔᐃ: 135,
    ⲆⲆᐃΔⲆ: 136,
    ⵠᐃΔΔⲆ: 137,
    ⵠᐃⲆΔⵠ: 138,
    ΔΔⵠᐃⲆ: 139,
    ⵠΔⲆΔⵠ: 140,
    ⵠⲆᐃΔⲆ: 141,
    ᐃⵠⲆΔⵠ: 142,
    ⵠⵠΔᐃΔ: 143,
    ΔⵠᐃⲆᐃ: 144,
    ΔΔᐃⵠΔ: 145,
    ᐃᐃⲆΔΔ: 146,
    ⵠⲆⲆⲆⵠ: 147,
    ᐃΔⵠΔᐃ: 148,
    ᐃΔΔᐃⲆ: 149,
    ᐃᐃⵠᐃⲆ: 150,
    ⲆᐃΔᐃⲆ: 151,
    ⲆⲆⵠᐃⵠ: 152,
    ΔΔᐃΔᐃ: 153,
    Ⲇᐃᐃⵠⵠ: 154,
    ΔΔᐃⲆᐃ: 155,
    ⲆΔⲆⲆⲆ: 156,
    ΔⵠⲆΔΔ: 157,
    ᐃΔⵠΔⲆ: 158,
    ⲆᐃᐃⲆᐃ: 159,
    ⵠΔᐃΔᐃ: 160,
    ⵠΔΔᐃⲆ: 161,
    ⵠᐃⲆⲆΔ: 162,
    ⵠᐃΔΔΔ: 163,
    ⵠᐃⲆᐃⲆ: 164,
    ΔⲆΔⵠⲆ: 165,
    ⵠⵠⵠᐃⲆ: 166,
    ⲆᐃⵠΔΔ: 167,
    ᐃⲆΔⵠᐃ: 168,
    ᐃⲆⵠⵠⵠ: 169,
    ᐃᐃᐃΔΔ: 170,
    ᐃⲆⵠᐃⵠ: 171,
    ΔⵠⲆⵠᐃ: 172,
    ΔΔⲆΔᐃ: 173,
    ⵠⲆⵠᐃⵠ: 174,
    ᐃᐃⲆᐃΔ: 175,
    ⵠⲆΔᐃΔ: 176,
    ⵠⲆⵠⵠⵠ: 177,
    ᐃⲆᐃⲆᐃ: 178,
    ⵠΔⲆⲆⲆ: 179,
    ⵠΔᐃᐃⵠ: 180,
    ⲆⲆᐃᐃΔ: 181,
    ⲆⵠΔⲆᐃΔⵠⲆⵠ: 182,
    Δⵠᐃᐃᐃ: 183,
    ⵠΔⲆⲆΔ: 184,
    ΔᐃⲆⲆⵠ: 185,
    ᐃΔⵠᐃⲆ: 186,
    ΔⲆᐃᐃᐃ: 187,
    ⲆΔᐃⵠΔ: 188,
    ⲆᐃΔᐃΔ: 189,
    ⵠⵠᐃⲆⲆ: 190,
    ᐃΔⲆᐃΔ: 191,
    ⲆⲆⲆΔⵠ: 192,
    ⵠⵠⲆᐃⲆ: 193,
    ⵠΔⲆΔᐃ: 194,
    ᐃⲆⲆⵠⵠ: 195,
    ᐃⵠⵠᐃΔ: 196,
    ⵠⲆⲆⵠⵠ: 197,
    ΔΔⵠΔⲆ: 198,
    ⵠⵠᐃΔᐃ: 199,
    ᐃΔΔⵠ: 200,
    ΔⵠᐃⲆⵠ: 201,
    ᐃⵠΔⵠ: 202,
    Ⲇᐃⵠᐃ: 203,
    ᐃᐃᐃⲆᐃⲆⲆ: 204,
    ΔᐃΔΔⵠ: 205,
    ⲆΔⲆⲆⲆΔⲆ: 206,
    ⵠΔᐃᐃΔ: 207,
    ᐃⲆᐃᐃΔ: 208,
    ⲆⲆᐃⵠᐃⵠⵠ: 209,
    ⲆᐃⵠⲆⵠΔⵠ: 210,
    ⲆᐃⲆⲆⵠ: 211,
    ᐃⲆⵠⲆ: 212,
    ⵠΔⲆⲆᐃ: 213,
    ᐃᐃᐃᐃΔ: 214,
    ΔⵠⲆⲆⲆᐃᐃ: 215,
    ⵠᐃΔΔⵠ: 216,
    ᐃⵠᐃⲆⲆ: 217,
    ⲆⲆⵠⵠⵠ: 218,
    ᐃⲆⲆᐃⲆΔᐃ: 219,
    ᐃⲆⵠⵠΔΔᐃ: 220,
    ᐃⵠⵠᐃⲆ: 221,
    ΔΔⲆΔΔ: 222,
    ᐃΔⲆⲆⵠ: 223,
    ΔΔΔⲆⵠ: 224,
    ΔⲆⵠᐃⲆ: 225,
    ᐃᐃΔⵠΔ: 226,
    ⲆΔⵠᐃⵠ: 227,
    Ⲇᐃᐃⵠᐃ: 228,
    ΔᐃᐃⵠΔ: 229,
    ΔⵠⵠⵠⲆ: 230,
    ⵠⵠⲆΔΔ: 231,
    ᐃΔΔⲆⲆ: 232,
    ⲆᐃΔⵠᐃⲆⵠ: 233,
    ⵠⵠΔⲆⲆ: 234,
    ⲆΔⲆᐃᐃᐃΔ: 235,
    ⵠᐃⵠΔⲆΔΔ: 236,
    ᐃᐃⵠᐃᐃᐃᐃ: 237,
    ᐃⲆⵠⵠⲆⲆⲆ: 238,
    ⲆⲆⵠⵠΔ: 239,
    ⲆⵠⲆᐃⲆ: 240,
    ΔⲆⲆⲆⵠ: 241,
    ⵠⲆⲆⲆΔ: 242,
    ⵠΔⵠⵠⲆ: 243,
    ᐃⵠⵠⲆᐃ: 244,
    ⲆΔⵠⲆΔ: 245,
    ⵠΔⵠΔⵠ: 246,
    ΔΔⲆⵠⵠ: 247,
    ⲆΔΔΔᐃ: 248,
    ᐃⵠⲆⵠᐃ: 249,
    ᐃᐃⵠΔⵠ: 250,
    ΔΔⲆᐃΔ: 251,
    ⵠⵠⲆⵠᐃ: 252,
    ᐃⲆΔΔⵠ: 253,
    ⵠᐃⵠⵠⲆ: 254,
    ⵠⲆⲆᐃΔ: 255,
    ⵠⵠⲆⲆⵠ: 256,
    ⵠᐃΔᐃΔ: 257,
    ⲆᐃΔⵠⲆ: 258,
    ΔⲆᐃᐃⵠ: 259,
    ᐃᐃᐃᐃⵠ: 260,
    ΔⵠᐃᐃⲆ: 261,
    ΔⲆⲆΔᐃ: 262,
    ⲆⲆΔΔᐃ: 263,
    ΔⵠⲆⵠⲆ: 264,
    ᐃΔᐃΔⵠ: 265,
    ᐃΔᐃⵠⲆ: 266,
    ᐃᐃΔᐃᐃ: 267,
    ᐃᐃᐃⲆⵠΔΔ: 268,
    ⵠⲆⵠⲆⵠ: 269,
    ⲆᐃⲆⵠᐃ: 270,
    ᐃⲆᐃΔᐃ: 271,
    ⵠⲆᐃⲆⲆ: 272,
    ⲆΔⵠᐃⲆⵠⲆ: 273,
    ⲆⲆⲆⲆⲆᐃᐃ: 274,
    ⲆΔⲆᐃᐃᐃᐃ: 275,
    ᐃᐃⲆⵠⲆ: 276,
    ⲆᐃΔⲆΔᐃᐃ: 277,
    ΔΔᐃᐃᐃⵠΔ: 278,
    ⵠⵠᐃⲆᐃΔΔ: 279,
    ΔⲆΔᐃⲆⲆⵠ: 280,
    ᐃⵠΔⲆΔᐃⲆ: 281,
    ⵠᐃⵠⲆⲆΔΔ: 282,
    ᐃⲆⲆΔⲆΔⲆ: 283,
    ΔⵠⵠⵠᐃΔᐃ: 284,
    ΔⵠᐃΔⵠ: 285,
    ΔΔᐃⲆΔ: 286,
    ⵠⵠᐃⵠᐃ: 287,
    ⲆⲆⲆᐃⵠ: 288,
    ᐃᐃⵠᐃⵠ: 289,
    ᐃᐃΔⲆΔⲆΔ: 290,
    ⲆᐃΔⲆᐃ: 291,
    ᐃΔΔΔⵠ: 292,
    ⵠⵠΔΔΔⲆᐃ: 293,
    ⵠⵠⵠⵠᐃ: 294,
    ᐃⵠᐃⲆⵠⵠᐃ: 295,
    ⵠΔᐃⲆᐃ: 296,
    ΔΔⲆΔⵠ: 297,
    ΔΔᐃᐃⲆⵠΔ: 298,
    ᐃⲆᐃⲆⲆⲆⲆ: 299,
    ᐃⲆⲆΔΔ: 300,
    ΔⲆᐃΔᐃ: 301,
    ⵠⲆΔⲆΔᐃΔ: 302,
    ⲆᐃⵠΔᐃ: 303,
    ᐃⲆⲆⲆ: 304,
    ⵠᐃᐃᐃᐃ: 305,
    ⵠⲆᐃⲆΔ: 306,
    ᐃⲆᐃᐃⲆ: 307,
    ⲆⵠⵠⲆⲆ: 308,
    ⲆΔΔᐃⵠ: 309,
    ΔΔΔⵠⵠ: 310,
    Δᐃⵠᐃᐃ: 311,
    ⵠⲆⲆⵠΔ: 312,
    ᐃⲆΔⲆⲆ: 313,
    ⵠⲆⲆⵠᐃΔⲆ: 314,
    ᐃⲆⵠⵠᐃ: 315,
    ⵠⵠⵠΔᐃⲆⵠ: 316,
    Ⲇⵠᐃᐃᐃ: 317,
    ⵠᐃⲆᐃⲆΔᐃ: 318,
    ⵠⲆΔⲆᐃ: 319,
    ΔⵠⲆΔⲆᐃⲆ: 320,
    ᐃⲆⵠΔᐃⲆΔ: 321,
    ᐃⵠᐃⲆⵠ: 322,
    ᐃᐃⵠᐃᐃ: 323,
    ᐃΔΔᐃΔ: 324,
    ⲆⲆΔΔⵠ: 325,
    ⲆⵠᐃⲆⲆ: 326,
    ᐃⵠΔⲆⵠ: 327,
    ΔᐃᐃⲆⵠ: 328,
    ᐃᐃⵠⵠⵠ: 329,
    ⲆⵠⲆⲆⵠ: 330,
    ⲆΔⵠΔⲆ: 331,
    Δᐃⵠᐃⵠ: 332,
    ⵠᐃⵠⲆᐃ: 333,
    ΔⵠᐃΔᐃ: 334,
    ⲆΔᐃⲆᐃΔⵠ: 335,
    ⲆᐃΔⵠⵠⲆⲆ: 336,
    ᐃΔΔⲆᐃ: 337,
    ⵠⵠᐃΔΔᐃⲆ: 338,
    ⲆᐃⲆⲆᐃ: 339,
    ΔΔⵠⲆⲆ: 340,
    ⲆᐃᐃⲆⲆ: 341,
    ᐃΔⵠᐃⵠ: 342,
    ᐃᐃᐃᐃⲆ: 343,
    ᐃΔⲆᐃᐃⲆᐃ: 344,
    ΔΔΔⵠᐃ: 345,
    ᐃⵠⵠⵠⵠ: 346,
    ᐃΔᐃⵠᐃ: 347,
    ⲆⵠⲆΔⲆ: 348,
    ᐃⵠΔⲆΔ: 349,
    ΔⲆᐃΔⵠ: 350,
    ΔⲆᐃⵠⵠ: 351,
    ΔⲆⲆΔⵠ: 352,
    ⲆΔⲆΔΔΔΔ: 353,
    ᐃⵠᐃΔΔΔᐃ: 354,
    ⲆⵠΔᐃⵠ: 355,
    ⵠΔᐃⲆᐃⲆⲆ: 356,
    ⵠⲆᐃⵠΔ: 357,
    ΔᐃⲆΔⲆ: 358,
    ⲆⲆⵠΔᐃⲆⲆ: 359,
    ΔⲆⵠΔⵠ: 360,
    ᐃⲆⲆᐃᐃ: 361,
    ΔⵠΔᐃᐃΔᐃ: 362,
    ⵠΔΔⲆⲆΔⵠ: 363,
    ⲆⲆⵠⵠΔΔΔ: 364,
    ⲆᐃⲆᐃΔⲆⲆ: 365,
    ⵠᐃᐃᐃⲆⵠΔ: 366,
    ⲆⲆⲆΔᐃⲆΔ: 367,
    ⲆⲆΔⲆΔⵠⵠ: 368,
    ᐃⲆⵠΔΔᐃⵠ: 369,
    ΔΔᐃΔⵠ: 370,
    ᐃⲆᐃⵠΔⵠⲆ: 371,
    ⲆⵠΔᐃⲆΔΔ: 372,
    ⵠᐃⲆᐃⵠᐃᐃ: 373,
    ⵠⲆⲆⵠᐃ: 374,
    ΔᐃᐃΔⵠⲆⲆ: 375,
    ⲆⲆᐃΔᐃⵠᐃ: 376,
    ᐃⵠΔⵠⲆΔᐃ: 377,
    ⲆᐃΔⵠⵠⲆⵠ: 378,
    ⲆⵠⲆΔⲆⲆⲆ: 379,
    ⲆⲆᐃᐃᐃⵠᐃ: 380,
    ΔᐃΔⵠᐃΔΔ: 381,
    ⲆⵠᐃΔⲆᐃᐃ: 382,
    ⵠᐃⲆⵠⲆⵠⲆ: 383,
    ⲆⲆΔᐃⵠⵠⵠ: 384,
    ᐃⲆⲆΔⵠᐃΔ: 385,
    ⵠⵠⲆᐃⵠΔᐃ: 386,
    ⵠⵠᐃⵠΔⵠᐃ: 387,
    ᐃΔⵠⲆⲆⵠᐃ: 388,
    ⵠⲆⵠⵠ: 389,
    ⲆΔⵠᐃΔ: 390,
    ΔⵠΔⵠⲆⲆΔ: 391,
    ᐃⲆⲆᐃΔⵠᐃ: 392,
    Ⲇⵠ: 393,
    ⲆΔⲆᐃΔⲆⵠ: 394,
    ΔᐃΔΔΔ: 395,
    ⲆΔΔⵠᐃⵠΔ: 396,
    ΔⵠᐃⲆⵠᐃⵠ: 397,
    ΔᐃΔᐃⲆ: 398,
    ⲆᐃΔᐃⲆⲆΔ: 399,
    ᐃΔⲆⵠᐃⲆⵠ: 400,
    ⲆⵠᐃⵠΔⵠΔ: 401,
    ΔⵠΔᐃΔΔⲆ: 402,
    ⵠⲆΔᐃΔⵠᐃ: 403,
    ΔⲆᐃⲆᐃ: 404,
    ᐃᐃᐃⵠᐃΔⲆ: 405,
    ⲆᐃΔⵠⲆᐃⲆ: 406,
    ᐃᐃⲆⵠΔⲆⲆ: 407,
    ΔᐃⲆΔⲆⵠΔ: 408,
    ΔΔΔᐃΔⵠⵠ: 409,
    Δⵠⵠᐃⵠ: 410,
    ᐃⵠᐃⲆᐃⵠᐃ: 411,
    ⵠΔᐃⲆᐃᐃⲆ: 412,
    ᐃⲆⲆΔⵠⲆⵠ: 413,
    ΔᐃⲆΔⵠⲆⲆ: 414,
    ⲆᐃⲆΔⲆΔᐃ: 415,
    ᐃⲆⲆⵠᐃᐃⵠ: 416,
    ᐃΔΔⲆᐃⲆᐃ: 417,
    ⵠΔⵠᐃⲆ: 418,
    ᐃᐃᐃΔΔⲆⲆ: 419,
    ⵠⲆⵠΔⲆⵠΔ: 420,
    ⲆΔⵠⲆᐃⲆᐃ: 421,
    ⵠⵠΔΔⲆᐃⵠ: 422,
    ᐃΔᐃⲆΔΔᐃ: 423,
    ΔΔⲆᐃⲆⵠᐃ: 424,
    ⵠⵠⵠΔⵠⲆΔ: 425,
    ᐃⲆⵠⲆᐃⲆⲆ: 426,
    ᐃᐃᐃⲆΔⵠᐃ: 427,
    ⲆᐃⲆΔⲆⵠⲆ: 428,
    ⵠΔΔᐃᐃⲆⵠ: 429,
    ⵠⲆⵠΔⵠⲆᐃ: 430,
    ΔⲆⵠᐃⵠⲆⲆ: 431,
    ⲆΔΔᐃᐃᐃⲆ: 432,
    ⲆᐃΔⵠᐃᐃⵠ: 433,
    ᐃⲆᐃⲆΔⵠⲆ: 434,
    ⵠΔᐃΔⵠⲆᐃ: 435,
    ⲆᐃⲆᐃⲆⲆᐃ: 436,
    ⵠⵠᐃΔᐃⵠᐃ: 437,
    ΔᐃⲆⵠᐃΔΔ: 438,
    ΔΔⲆⲆⵠᐃⵠ: 439,
    ᐃΔⲆⲆⲆⲆⵠ: 440,
    ᐃᐃΔΔΔⵠⲆ: 441,
    ΔᐃⵠΔⲆⲆᐃ: 442,
    ⲆⵠⵠⵠⲆᐃⵠ: 443,
    ⲆⲆⵠΔΔᐃΔ: 444,
    ᐃΔⲆⲆⵠᐃΔ: 445,
    ᐃⵠΔᐃⵠΔΔ: 446,
    ΔᐃⵠΔΔⵠᐃ: 447,
    ⲆⵠⵠⵠᐃⲆᐃ: 448,
    ⵠᐃⲆΔᐃᐃⵠ: 449,
    ΔΔⲆᐃⲆΔᐃ: 450,
    ⲆΔΔΔᐃᐃⵠ: 451,
    ΔⵠΔⵠΔᐃⵠ: 452,
    ⵠⵠⲆⲆᐃΔᐃ: 453,
    ⵠᐃΔΔΔⲆⵠ: 454,
    ᐃⵠⲆⲆΔΔⲆ: 455,
    ΔⵠⲆⲆⲆᐃⲆ: 456,
    ⵠΔⵠΔⲆⵠΔ: 457,
    ΔⲆⲆΔᐃⵠⵠΔΔ: 458,
    ⵠΔΔⲆΔᐃᐃ: 459,
    ⵠⲆⵠΔⵠⲆⲆ: 460,
    ⵠᐃⵠⵠⲆᐃΔ: 461,
    ΔᐃᐃΔᐃΔⲆ: 462,
    ᐃᐃⲆⲆᐃᐃⵠ: 463,
    ⵠΔΔᐃᐃⵠΔ: 464,
    ΔⲆᐃᐃⲆΔᐃ: 465,
    ᐃΔΔⵠᐃⵠⵠ: 466,
    ⵠⵠᐃⵠⲆⲆᐃ: 467,
    ⲆⵠΔᐃᐃΔΔ: 468,
    ᐃᐃᐃⵠⵠⵠⵠ: 469,
    ⲆⲆⲆᐃⲆⵠᐃ: 470,
    ⵠΔⲆⵠⲆᐃᐃ: 471,
    ⵠⵠⲆⵠⲆᐃΔ: 472,
    ⵠⲆΔⲆΔᐃⵠ: 473,
    ⵠΔⲆᐃⵠⵠⲆ: 474,
    ⵠⵠⵠᐃᐃⵠᐃ: 475,
    ΔΔⵠᐃᐃᐃΔ: 476,
    ⵠⵠΔᐃΔᐃⲆ: 477,
    ΔΔᐃΔⵠⵠᐃ: 478,
    ⵠⵠΔΔⵠⵠⵠ: 479,
    ⵠΔᐃⲆⵠᐃᐃ: 480,
    ΔᐃΔᐃⲆⵠⲆ: 481,
    ⲆⵠⲆⲆᐃΔⵠ: 482,
    ⲆᐃᐃΔΔⵠⲆ: 483,
    Ⲇᐃᐃᐃᐃᐃᐃ: 484,
    ΔⵠᐃⲆΔΔΔ: 485,
    ⵠᐃᐃⲆⲆΔⲆ: 486,
    ᐃᐃⵠΔΔΔΔ: 487,
    ⲆΔⵠᐃⵠΔⵠ: 488,
    ⲆΔⵠᐃᐃⲆΔ: 489,
    ΔᐃΔⵠⵠΔⵠ: 490,
    ⲆⲆᐃⲆⲆᐃᐃ: 491,
    ⵠΔⲆᐃⲆᐃᐃ: 492,
    ⲆᐃⵠⵠΔⵠⵠ: 493,
    ΔⵠΔⵠᐃΔⲆ: 494,
    ⵠᐃᐃⵠΔⲆΔ: 495,
    ΔᐃⵠᐃⵠⲆΔ: 496,
    ᐃᐃⲆΔΔⲆⲆ: 497,
    ⲆΔᐃⲆⲆΔⵠ: 498,
    ⵠⲆⵠⲆⵠΔΔ: 499,
    ⲆⵠᐃᐃⲆⵠⲆ: 500,
    ΔᐃⵠⲆⵠⵠᐃ: 501,
    ⲆⲆᐃⲆⵠⲆΔ: 502,
    ⲆⵠⵠΔᐃⵠⵠ: 503,
    ΔⵠΔⵠᐃⵠⲆ: 504,
    ΔΔⵠⲆΔΔⵠ: 505,
    ᐃⵠⵠⲆᐃⲆⲆ: 506,
    ᐃⲆⵠⵠⵠᐃⲆ: 507,
    ⵠⲆⲆⵠⵠⲆⵠ: 508,
    ᐃΔⵠⲆⲆⲆΔ: 509,
    ΔΔᐃᐃΔⵠᐃ: 510,
    ᐃΔᐃᐃᐃⲆⲆ: 511,
    ⲆⲆⲆᐃΔⵠⵠ: 512,
    ΔⵠΔⵠΔⵠΔ: 513,
    ᐃᐃⵠᐃΔΔⲆ: 514,
    ᐃΔΔⲆΔΔⲆ: 515,
    ΔΔⵠΔΔⵠᐃ: 516,
    ⵠΔᐃⵠⲆⲆⲆ: 517,
    ᐃⵠΔᐃΔⵠⲆ: 518,
    ᐃⵠᐃΔΔⲆΔ: 519,
    ⲆⲆⲆⲆᐃΔⲆ: 520,
    ΔΔᐃΔⲆⵠΔ: 521,
    ⵠᐃⵠΔᐃΔⲆ: 522,
    ΔⵠⵠᐃᐃⵠΔ: 523,
    Δⵠᐃⵠⵠ: 524,
    ᐃᐃⲆΔⵠⵠⵠⵠⵠ: 525,
    ⲆᐃⲆⵠⵠⲆΔ: 526,
    ⲆⵠⵠⵠΔᐃᐃ: 527,
    ΔⵠᐃⵠⲆΔΔⲆΔ: 528,
    ⵠᐃΔⵠᐃⵠΔ: 529,
    ⲆⲆⵠⲆΔ: 530,
    ⲆΔΔΔⵠΔⲆ: 531,
    ⵠᐃⲆⵠᐃΔΔ: 532,
    ΔΔᐃᐃⵠⵠᐃ: 533,
    ⵠⵠΔⲆⲆⵠᐃ: 534,
    ⵠⵠⲆᐃᐃΔᐃ: 535,
    ΔⲆΔΔᐃΔⲆ: 536,
    ⲆΔⲆⵠⵠⲆⵠ: 537,
    ᐃⵠⲆⲆᐃᐃⲆ: 538,
    ΔᐃᐃᐃΔᐃⵠ: 539,
    ⲆΔΔΔⲆⲆᐃ: 540,
    ΔⵠᐃᐃΔⲆⲆ: 541,
    ⲆΔⵠⲆⵠⲆᐃ: 542,
    ᐃⵠⲆΔΔΔΔ: 543,
    ⲆΔⲆⲆΔⲆᐃ: 544,
    ⵠΔᐃⲆⲆⵠⲆ: 545,
    ΔΔⵠᐃᐃΔΔ: 546,
    ⲆΔᐃΔⵠⵠⵠ: 547,
    ΔⵠⲆⲆᐃⲆⲆ: 548,
    ᐃᐃᐃⵠⲆⵠⵠ: 549,
    ᐃⵠⲆⲆΔⲆᐃ: 550,
    ᐃᐃᐃᐃᐃⵠᐃ: 551,
    ⵠⵠⲆΔᐃⲆⵠ: 552,
    ⵠⲆᐃᐃⲆⲆᐃ: 553,
    ⵠᐃⲆⲆᐃⲆᐃ: 554,
    ⲆᐃΔⵠⲆⲆΔ: 555,
    ⲆᐃⵠΔᐃᐃΔ: 556,
    ΔⲆⲆΔⲆᐃΔ: 557,
    ⵠⲆᐃΔΔⲆᐃ: 558,
    ΔⲆⲆᐃᐃᐃᐃ: 559,
    ⲆⲆⲆⲆⵠΔⵠ: 560,
    ⵠᐃΔⲆΔΔΔ: 561,
    ΔⵠᐃⵠΔⵠⵠ: 562,
    ᐃⵠᐃⵠⲆⲆⲆ: 563,
    ⵠⲆⲆΔΔⵠⲆ: 564,
    ΔⵠⵠᐃⲆᐃΔ: 565,
    ΔⵠΔΔᐃᐃⵠ: 566,
    ᐃΔΔⲆΔΔΔ: 567,
    ⵠΔΔΔᐃᐃⲆ: 568,
    ⵠⵠⵠᐃⵠΔΔ: 569,
    ⲆΔΔᐃΔΔᐃ: 570,
    ᐃⲆᐃⵠⵠⵠΔ: 571,
    ΔⵠᐃᐃⵠΔΔ: 572,
    ᐃᐃᐃⵠⲆᐃᐃ: 573,
    ⵠᐃᐃⵠᐃⵠⲆ: 574,
    ⲆⲆᐃⵠⵠΔⲆ: 575,
    ΔᐃΔⲆᐃΔᐃ: 576,
    ΔΔΔⲆⲆΔⵠ: 577,
    ⲆⲆᐃⲆᐃᐃΔ: 578,
    ⲆⵠΔᐃᐃΔⲆ: 579,
    ᐃⵠⵠᐃⵠⲆⲆ: 580,
    ΔⲆⲆⲆᐃΔᐃ: 581,
    ΔΔᐃⵠⵠΔΔᐃⵠ: 582,
    ⵠΔⵠⲆⵠ: 583,
    ΔᐃⵠΔⲆΔⵠ: 584,
    ⵠⵠΔⵠⵠⲆⵠ: 585,
    ⵠᐃᐃⲆⵠᐃⲆᐃᐃ: 586,
    ⲆᐃⵠΔⵠ: 587,
    ⲆᐃⲆⲆⲆ: 588,
    ⵠΔⵠⵠΔᐃΔ: 589,
    ⵠᐃⲆⵠΔΔᐃ: 590,
    ⲆᐃⲆᐃⵠⲆⲆ: 591,
    ⵠⵠⵠΔⲆᐃᐃ: 592,
    ΔⵠᐃⲆᐃᐃⲆ: 593,
    ᐃᐃΔᐃΔᐃᐃ: 594,
    ⵠΔⲆΔᐃΔΔ: 595,
    ᐃΔⵠᐃⵠⵠᐃ: 596,
    ΔⲆⲆᐃⲆⵠᐃ: 597,
    ⲆⲆⵠᐃⲆⲆⵠ: 598,
    ⵠᐃⵠΔⵠⵠΔ: 599,
    ⵠᐃⲆᐃΔᐃⲆ: 600,
    ΔⲆᐃⵠⲆⵠⲆ: 601,
    ΔᐃⵠⵠΔⵠΔ: 602,
    ⲆᐃⵠⲆΔΔΔ: 603,
    ᐃⲆᐃΔⵠⲆⲆ: 604,
    ⲆΔΔⵠⲆⲆⲆ: 605,
    ΔᐃⵠΔΔΔⵠ: 606,
    ΔᐃᐃΔⲆⲆᐃ: 607,
    ⲆⲆΔᐃⲆΔᐃ: 608,
    ⵠⲆΔΔᐃⲆΔ: 609,
    ΔⵠⵠⲆᐃᐃⲆ: 610,
    ⵠᐃⲆᐃᐃⵠᐃ: 611,
    ⲆⵠⵠⲆⵠⵠΔ: 612,
    ⵠⲆᐃᐃⵠⲆⲆ: 613,
    ᐃⵠⲆⲆⵠᐃⲆ: 614,
    ⲆⲆᐃᐃⵠΔⵠ: 615,
    ᐃᐃⲆⵠΔᐃⵠ: 616,
    ΔⲆΔᐃⲆᐃᐃ: 617,
    ΔᐃⲆⵠᐃⲆⵠ: 618,
    ⵠⲆΔΔΔΔΔ: 619,
    ⲆⵠΔⵠⲆⵠᐃ: 620,
    ᐃⵠᐃΔᐃⵠⵠ: 621,
    ᐃᐃΔⵠⵠΔⲆ: 622,
    ΔⲆⵠᐃⵠᐃⵠ: 623,
    ⲆⵠΔⲆⵠⲆᐃ: 624,
    ΔΔᐃⲆΔⲆᐃ: 625,
    ᐃᐃΔᐃⵠᐃⵠ: 626,
    ⲆᐃΔⵠΔⵠΔ: 627,
    ᐃⲆⲆⵠⵠᐃᐃ: 628,
    ΔᐃⲆⲆⵠⲆΔ: 629,
    ⵠⲆᐃⲆᐃⲆⵠ: 630,
    ⵠⵠᐃⲆΔΔⵠ: 631,
    ᐃⲆⲆΔΔΔᐃ: 632,
    ⵠⵠᐃⵠⵠΔⵠ: 633,
    ⲆⲆΔⲆⲆᐃΔ: 634,
    ᐃⲆᐃⲆΔΔᐃ: 635,
    ᐃᐃᐃΔⵠⵠⲆ: 636,
    ⵠⲆⲆⲆⲆᐃⵠ: 637,
    ⵠᐃᐃΔⲆⵠⵠ: 638,
    ⲆⵠᐃⲆΔⲆⵠ: 639,
    ΔΔⲆᐃⵠᐃΔ: 640,
    ᐃΔⲆⵠΔⲆΔ: 641,
    ⲆΔⲆΔⵠⵠⲆ: 642,
    ⵠⲆⵠⲆΔᐃⵠ: 643,
    ΔⵠⵠⲆᐃⵠᐃ: 644,
    ⲆᐃⵠⲆΔΔΔ: 645,
    ΔᐃᐃⵠⲆᐃΔ: 646,
    ΔⲆΔⵠΔⲆⲆ: 647,
    ⵠΔᐃᐃⵠᐃΔ: 648,
    ΔⵠⲆⵠⲆᐃⲆ: 649,
    ⵠⲆΔᐃΔᐃᐃ: 650,
    Ⲇᐃⵠᐃⵠᐃᐃ: 651,
    ΔⲆᐃᐃⵠᐃΔ: 652,
    ΔⵠⵠⵠᐃⲆΔ: 653,
    ⲆⲆⲆⲆᐃΔⵠ: 654,
    ᐃᐃⵠⲆⲆᐃΔ: 655,
    ΔⵠᐃⲆⲆⵠⵠ: 656,
    ᐃΔⲆΔⵠⲆᐃ: 657,
    ᐃⲆᐃⵠΔⵠᐃ: 658,
    ΔⵠΔⲆⵠᐃⵠ: 659,
    ΔᐃᐃΔⲆⵠⵠ: 660,
    ⲆⵠⵠΔᐃⵠᐃ: 661,
    ⲆΔⲆⲆⵠⵠⵠ: 662,
    ⵠⲆⲆΔⵠⵠⲆ: 663,
    ⲆᐃⲆΔⲆᐃⵠ: 664,
    ᐃᐃⲆⲆⲆᐃΔ: 665,
    ΔᐃᐃⵠⲆᐃᐃ: 666,
    ⵠⲆΔΔᐃΔⲆ: 667,
    ΔᐃⵠΔᐃⵠᐃ: 668,
    ᐃΔⵠⲆⲆⵠⲆ: 669,
    ΔᐃⵠⲆΔᐃⲆ: 670,
    ⵠⲆᐃᐃΔΔⲆ: 671,
    ΔᐃΔⲆᐃⵠΔ: 672,
    ΔⵠⲆΔⵠΔΔ: 673,
    ⵠⲆⲆⵠᐃⵠᐃ: 674,
    ⲆᐃⵠᐃᐃⵠⲆ: 675,
    ⲆᐃΔⲆⵠΔⵠ: 676,
    ⲆⵠᐃᐃᐃⲆΔΔΔ: 677,
    ⲆⲆΔΔⲆⲆⵠ: 678,
    ⲆⵠΔⲆΔⵠᐃ: 679,
    ⵠⲆᐃᐃⲆᐃⲆ: 680,
    ⲆᐃⲆⵠΔⲆΔ: 681,
    ⲆⲆΔᐃΔⵠⵠⵠᐃ: 682,
    POINTS: 683,
    ⵠΔΔΔⲆⵠⵠ: 684,
    ΔⵠΔⵠⲆⵠⵠ: 685,
    ΔΔⲆⲆΔΔᐃ: 686,
    ⵠᐃΔⵠΔⵠᐃ: 687,
    ᐃⵠΔΔⵠᐃᐃ: 688,
    ᐃΔⵠᐃΔⲆⵠ: 689,
    ⲆⵠⲆΔⵠΔⲆ: 690,
    ⵠⲆᐃᐃⵠᐃⵠ: 691,
    ᐃⵠΔΔᐃⲆⲆ: 692,
    ⲆΔᐃⵠΔᐃⲆ: 693,
    ᐃⵠⵠᐃΔⵠⲆ: 694,
    ⲆⵠΔΔⲆᐃᐃ: 695,
    ΔⲆⵠᐃⵠⲆᐃ: 696,
    ⲆⵠⲆᐃᐃⲆⲆ: 697,
    ΔΔΔᐃⲆΔⲆ: 698,
    ⲆᐃᐃΔⵠⲆᐃ: 699,
    ΔⵠⵠΔᐃᐃⵠ: 700,
    ᐃΔⵠⵠⲆⵠᐃ: 701,
    ᐃΔⵠᐃΔΔⲆ: 702,
    ⵠⲆⲆΔⲆⲆⲆ: 703,
    ᐃⵠⵠⵠᐃᐃΔ: 704,
    ⵠⵠⲆΔⵠᐃⲆ: 705,
    ⵠⵠⵠΔᐃᐃⲆ: 706,
    ⵠⵠᐃⲆΔᐃⲆ: 707,
    ΔⲆⲆᐃᐃΔⲆ: 708,
    ⲆⲆⵠΔᐃⵠⵠ: 709,
    ⵠⵠΔⵠⵠⲆᐃ: 710,
    ΔⵠⵠⵠⵠᐃΔ: 711,
    ᐃΔΔΔⵠΔⲆ: 712,
    ⵠⲆⵠᐃΔⲆⵠ: 713,
    ΔᐃⵠΔΔΔⲆ: 714,
    ⲆⲆⵠⲆⵠⵠᐃ: 715,
    ⵠⵠΔⲆⵠⲆⲆ: 716,
    ᐃⲆᐃΔⲆⵠⲆ: 717,
    ⲆⲆⲆᐃΔⵠᐃ: 718,
    ⲆⲆⲆΔᐃⵠΔ: 719,
    ⵠΔᐃΔⲆΔΔ: 720,
    ΔᐃᐃᐃⲆⲆᐃ: 721,
    ᐃⵠⲆᐃⲆᐃᐃ: 722,
    ᐃⵠⵠᐃᐃⲆᐃ: 723,
    ⵠᐃᐃⲆⵠᐃᐃ: 724,
    ⵠᐃΔᐃΔⲆⵠ: 725,
    ΔΔⵠⲆᐃᐃⲆ: 726,
    ⵠⵠΔΔᐃΔⵠ: 727,
    ΔΔⵠⵠΔᐃᐃ: 728,
    ⵠⵠΔⲆΔΔⲆ: 729,
    ⲆⲆΔⲆⲆⲆΔ: 730,
    ΔᐃⵠᐃⵠᐃⲆ: 731,
    ᐃⲆᐃΔᐃⵠⲆ: 732,
    ᐃᐃⵠᐃⲆΔΔ: 733,
    ⵠᐃⵠᐃⲆᐃⵠ: 734,
    ᐃⲆΔⵠⵠΔⲆ: 735,
    ⵠΔΔⵠⵠᐃᐃ: 736,
    ⵠⲆⲆΔΔΔⲆ: 737,
    ⲆᐃⵠΔⲆΔᐃ: 738,
    ⲆⲆΔΔΔΔⵠ: 739,
    ⲆᐃᐃⵠᐃΔΔ: 740,
    ⲆΔΔΔⵠⲆⵠ: 741,
    ᐃΔⲆⲆΔⵠⵠ: 742,
    ⲆΔᐃΔⲆᐃⵠ: 743,
    ᐃᐃⵠΔⵠⲆΔ: 744,
    Ⲇⵠⵠᐃⵠⵠᐃ: 745,
    Ⲇᐃᐃᐃⵠⵠⵠ: 746,
    ⲆΔᐃⲆⲆⲆⵠ: 747,
    ⵠΔⲆᐃΔⲆΔ: 748,
    ⲆⵠΔᐃᐃᐃⵠ: 749,
    ᐃΔⵠⵠΔᐃⵠ: 750,
    ⲆΔᐃΔⵠⵠⲆ: 751,
    ᐃᐃᐃΔⵠΔⲆ: 752,
    ΔᐃⵠΔⲆΔⲆ: 753,
    ᐃⲆΔⲆⲆᐃⵠ: 754,
    ΔᐃΔΔⵠΔⲆ: 755,
    ᐃᐃᐃⲆᐃⵠⲆ: 756,
    ΔΔᐃΔΔⵠᐃ: 757,
    ΔⲆⵠΔⲆⲆᐃ: 758,
    ᐃⲆⵠᐃⵠⵠⲆ: 759,
    ⵠⵠΔⲆΔΔᐃ: 760,
    ΔᐃⲆⵠⲆᐃⲆ: 761,
    ᐃⵠⵠΔⵠᐃᐃ: 762,
    ᐃⵠⲆΔΔᐃΔ: 763,
    ⲆᐃⲆᐃᐃⲆⲆ: 764,
    ⵠⲆⵠᐃΔΔⲆ: 765,
    ⵠⲆⵠΔΔΔⵠ: 766,
    ⲆⲆⲆᐃⲆᐃΔ: 767,
    ΔⲆⲆⲆΔⲆΔ: 768,
    ΔᐃⵠΔⵠⲆΔ: 769,
    Ⲇⵠⵠⵠᐃᐃᐃ: 770,
    ⵠⲆᐃⵠΔΔᐃ: 771,
    ⲆⲆΔⵠⵠΔⵠ: 772,
    ⲆΔⵠⲆⲆΔⵠ: 773,
    ⵠⵠᐃᐃΔⲆⵠ: 774,
    ⲆᐃⲆᐃⲆᐃᐃ: 775,
    ⵠⵠᐃᐃⵠᐃⵠ: 776,
    ⵠᐃⲆᐃⵠᐃⲆ: 777,
    ΔᐃⵠⲆΔΔⲆ: 778,
    ⵠⲆΔᐃᐃⲆⲆ: 779,
    ⵠⵠᐃⲆΔⵠΔ: 780,
    ⵠᐃᐃⲆᐃⵠᐃ: 781,
    ⲆⲆᐃⵠⵠⲆⲆ: 782,
    ΔᐃⲆᐃΔΔᐃ: 783,
    ᐃⲆⲆᐃᐃⲆΔ: 784,
    ᐃⲆⵠⵠᐃᐃⲆ: 785,
    ⵠⵠΔᐃⵠᐃⵠ: 786,
    ⲆⵠⲆⲆⲆⲆᐃ: 787,
    ⵠⵠᐃⲆΔᐃᐃ: 788,
    ᐃᐃΔΔᐃᐃᐃ: 789,
    Δⵠⵠⵠⵠᐃⵠ: 790,
    ΔⲆⲆⵠⲆᐃⲆ: 791,
    ⲆΔΔⲆⲆⵠΔ: 792,
    ᐃΔΔᐃⵠⵠⲆ: 793,
    ⲆⵠⲆⲆΔᐃΔ: 794,
    ᐃⵠᐃΔⵠΔⵠ: 795,
    ΔⵠᐃⵠΔᐃΔ: 796,
    ⵠⲆΔΔⲆᐃⲆ: 797,
    ΔⲆΔᐃⵠⵠᐃ: 798,
    ⵠᐃⵠⲆΔᐃⲆ: 799,
    ⲆⲆⵠᐃΔᐃⵠ: 800,
    ⲆⵠⲆΔⵠⲆⲆ: 801,
    ΔΔᐃⲆⲆⲆⵠ: 802,
    ᐃΔⵠⲆⵠΔΔ: 803,
    ᐃⵠⲆᐃⵠⲆΔ: 804,
    ᐃⵠᐃΔᐃᐃᐃ: 805,
    ⲆᐃⲆⵠⵠΔᐃ: 806,
    ᐃᐃᐃᐃⲆⵠΔ: 807,
    ⵠⲆⵠⲆⲆᐃⲆ: 808,
    ⲆⵠᐃΔΔΔⲆ: 809,
    ᐃⲆΔᐃᐃΔᐃ: 810,
    ΔΔⵠᐃΔⵠᐃ: 811,
    ⲆᐃⵠⲆᐃⵠⵠΔᐃ: 812,
    ⲆⲆᐃΔⲆᐃΔ: 813,
    ⵠⲆᐃⲆⵠⵠⲆⵠΔ: 814,
    ⵠᐃΔΔᐃⲆᐃ: 815,
    ⲆⲆΔΔⲆΔᐃⲆΔ: 816,
    ΔⵠⲆᐃΔᐃⵠᐃᐃ: 817,
    ΔⲆᐃⲆᐃΔΔⵠΔ: 818,
    ᐃⵠΔⵠᐃΔⲆⲆΔ: 819,
    ᐃΔΔΔΔΔΔᐃⵠ: 820,
    ⵠΔⵠⵠⲆⲆΔ: 821,
    ⲆΔΔⲆΔ: 822,
    ΔᐃᐃⲆⵠΔⲆ: 823,
    ᐃⵠΔⵠᐃⵠⵠ: 824,
    ᐃⲆⵠⵠⲆᐃΔ: 825,
    ΔⵠⲆⵠⵠΔΔΔⵠ: 826,
    ᐃΔᐃΔᐃⲆⵠ: 827,
    ΔⵠⲆᐃΔⲆᐃ: 828,
    ᐃⲆⵠⲆⲆⲆΔ: 829,
    ᐃⲆΔⵠⵠⲆⲆ: 830,
    ⲆᐃΔΔᐃᐃΔ: 831,
    ⵠΔᐃΔⲆⵠⲆ: 832,
    ΔΔⵠᐃᐃΔⵠ: 833,
    ᐃΔΔᐃΔᐃⲆ: 834,
    ᐃⵠⲆⲆΔᐃΔ: 835,
    ΔⲆⵠⲆⵠⵠᐃ: 836,
    ᐃⲆⵠⵠⵠⲆⵠ: 837,
    ᐃⲆᐃⲆⲆ: 838,
    ⵠΔᐃΔΔ: 839,
    ΔⵠΔⲆᐃⵠⲆ: 840,
    ⵠⲆⵠᐃᐃⲆΔⲆⵠ: 841,
    ᐃⵠΔⲆⲆΔΔ: 842,
    ΔⲆᐃᐃΔᐃⵠ: 843,
    ΔⲆᐃⵠᐃⵠΔ: 844,
    ᐃΔΔᐃΔΔᐃ: 845,
    ᐃⲆⲆⵠⵠᐃⲆ: 846,
    ΔΔⲆΔΔᐃᐃ: 847,
    ⲆΔⲆᐃⲆⵠᐃ: 848,
    ⵠΔⵠⵠⲆΔΔ: 849,
    ᐃⵠⵠⵠⵠΔⵠ: 850,
    ᐃⵠΔΔᐃⲆⵠ: 851,
    ᐃᐃΔⵠᐃⵠᐃ: 852,
    ⵠΔⵠᐃⲆΔΔ: 853,
    ⲆⲆᐃᐃΔⲆΔ: 854,
    ΔⵠΔⲆᐃΔⵠ: 855,
    ΔⲆᐃⲆⵠ: 856,
    ⵠⲆⲆⲆᐃᐃⵠ: 857,
    ⵠⵠΔⲆᐃⲆΔ: 858,
    ⵠⵠΔΔⵠᐃⵠ: 859,
    ΔΔⵠᐃΔⵠⵠ: 860,
    ⲆᐃⲆⵠΔⵠⲆ: 861,
    ⵠΔᐃᐃΔᐃΔ: 862,
    ΔᐃⵠⲆΔⵠⵠ: 863,
    ⵠⲆⵠⵠΔⵠⵠ: 864,
    ⵠⵠⵠⵠᐃᐃⲆ: 865,
    ᐃⲆᐃᐃⵠᐃⵠ: 866,
    ⵠⲆⵠᐃᐃⵠⲆ: 867,
    ΔᐃᐃⵠⵠΔᐃ: 868,
    ⲆΔᐃⲆᐃⲆΔ: 869,
    ⲆⵠⵠⵠΔΔⲆ: 870,
    ΔⲆΔᐃᐃᐃⲆ: 871,
    ᐃⵠᐃΔⲆᐃᐃ: 872,
    ΔⵠᐃⵠⵠᐃⲆ: 873,
    ⲆⲆΔΔᐃⵠⵠ: 874,
    ΔΔᐃᐃⲆΔΔ: 875,
    ⲆⲆⵠⲆΔⵠⵠ: 876,
    ⲆⵠᐃⵠⵠΔᐃ: 877,
    ⵠΔⵠΔᐃⲆⵠ: 878,
    ⵠΔᐃΔΔᐃᐃ: 879,
    ᐃⵠⵠΔΔⵠⵠ: 880,
    ⵠᐃᐃⵠⲆᐃⵠ: 881,
    ΔⲆⵠᐃΔᐃΔ: 882,
    ⵠᐃᐃᐃⲆΔⲆ: 883,
    ᐃⲆⲆΔⲆᐃⲆ: 884,
    ΔⲆΔΔⵠᐃⲆ: 885,
    ΔΔⲆⲆΔⲆⵠ: 886,
    ⲆΔⲆⲆⲆᐃⲆ: 887,
    ᐃΔᐃⵠΔⲆᐃ: 888,
    ⵠΔᐃΔᐃΔⲆ: 889,
    ⲆⵠⲆⵠᐃΔᐃ: 890,
    ᐃΔΔΔΔΔΔ: 891,
    ᐃᐃᐃⲆⲆ: 892,
    ⵠᐃᐃⲆᐃΔᐃ: 893,
    ᐃΔⲆⵠᐃᐃᐃ: 894,
    ΔⲆⵠⵠⵠ: 895,
    ⲆΔᐃⲆᐃΔⲆΔⵠ: 896,
    ΔⵠⵠⵠΔΔⲆ: 897,
    ΔⲆⲆⵠᐃ: 898,
    ᐃᐃΔᐃᐃⵠᐃ: 899,
    ΔⲆⲆᐃⲆΔⵠ: 900,
    ⲆⲆⵠⵠΔⵠᐃ: 901,
    ⲆⵠΔⲆΔΔᐃ: 902,
    ⲆⵠⲆⲆΔΔⵠ: 903,
    ᐃᐃΔΔⲆⲆᐃ: 904,
    ΔⲆⲆⵠⲆᐃᐃ: 905,
    Ⲇᐃⵠⵠᐃᐃⵠ: 906,
    ⵠⲆⲆⵠⵠⲆᐃ: 907,
    ΔᐃΔΔⲆΔⵠ: 908,
    ⲆᐃᐃⲆΔΔᐃ: 909,
    ⲆΔᐃΔⲆᐃⲆ: 910,
    ⵠⲆΔⲆⲆⵠᐃ: 911,
    ⵠⲆᐃⵠᐃ: 912,
    ⵠᐃⲆⲆⲆ: 913,
    ᐃⵠⵠᐃᐃ: 914,
    ᐃᐃⲆᐃΔᐃΔ: 915,
    ᐃⵠⵠᐃⵠΔⵠ: 916,
    ⵠⲆΔᐃᐃⵠⲆ: 917,
    ΔⵠΔᐃⲆΔᐃ: 918,
    ΔᐃΔⲆⲆΔΔ: 919,
    ᐃⲆᐃⲆⲆⵠᐃ: 920,
    ΔᐃⲆⲆⲆⵠⲆ: 921,
    ⲆⲆᐃΔⵠⲆⵠ: 922,
    ⲆⲆΔΔᐃΔⵠ: 923,
    ⲆⵠΔⲆΔᐃⲆ: 924,
    ΔⲆΔⵠⲆⲆⲆ: 925,
    ⵠᐃⲆⲆⲆΔΔ: 926,
    ⲆᐃᐃⵠᐃⲆΔ: 927,
    ᐃᐃⲆⲆΔⵠⲆ: 928,
    ᐃⲆᐃⲆⲆΔⲆ: 929,
    ⲆᐃⲆⵠΔⲆⵠ: 930,
    ⵠⵠΔⲆᐃⲆᐃ: 931,
    ᐃΔᐃᐃΔⵠⲆ: 932,
    ⵠⲆΔⵠΔⲆⵠ: 933,
    ⵠⲆᐃⲆᐃΔΔ: 934,
    ΔΔΔᐃⵠΔⵠ: 935,
    ΔΔᐃΔⵠΔΔ: 936,
    ⵠᐃⵠⵠΔⲆΔ: 937,
    ⲆⵠᐃᐃⲆᐃᐃ: 938,
    ΔⲆᐃΔⵠⵠᐃ: 939,
    ΔⵠⲆⵠΔⵠⵠ: 940,
    ⵠⲆⲆⵠΔⵠⵠ: 941,
    ᐃⲆⵠⵠᐃⲆⲆ: 942,
    ⲆΔⲆⵠⵠᐃⲆ: 943,
    ⲆⲆΔⵠⲆΔⵠ: 944,
    ᐃᐃⲆⲆᐃⲆⲆ: 945,
    ⵠⵠᐃᐃΔⲆΔ: 946,
    ⲆᐃᐃᐃⲆᐃΔ: 947,
    ⲆΔΔΔⲆᐃⲆ: 948,
    ⵠⲆᐃⵠⲆⲆΔ: 949,
    ᐃⲆᐃΔⲆᐃⲆ: 950,
    ⵠⲆⲆⲆᐃⵠⵠ: 951,
    ⲆⲆⵠⲆᐃⵠᐃ: 952,
    ᐃΔⵠᐃᐃⵠΔ: 953,
    ΔΔΔⵠⵠΔΔ: 954,
    ⲆᐃⲆⵠΔⵠᐃ: 955,
    ΔⵠⵠⲆᐃⲆⲆ: 956,
    ᐃΔⵠⵠⵠⲆᐃ: 957,
    ⲆⲆΔⲆᐃΔᐃ: 958,
    ⲆⵠΔΔΔΔⵠ: 959,
    ᐃᐃⲆᐃⲆᐃⲆ: 960,
    ⵠⵠⲆⲆᐃⵠΔ: 961,
    ⲆⵠⵠⵠΔⲆᐃ: 962,
    ⲆᐃⵠⵠΔᐃΔ: 963,
    ⵠⵠⵠⲆⲆⲆⲆ: 964,
    ΔᐃΔⵠᐃᐃⲆ: 965,
    ΔⵠⵠⲆΔᐃᐃ: 966,
    ΔᐃⵠⵠΔᐃⵠ: 967,
    ⵠⲆⵠⵠΔΔⵠ: 968,
    ᐃⵠⲆⵠⲆΔᐃ: 969,
    ⵠᐃⲆᐃΔⵠⲆⵠⵠ: 970,
    ᐃⲆⵠΔⲆⵠⲆ: 971,
    ΔΔΔⵠΔⵠᐃ: 972,
    ᐃⵠⵠⲆⲆⲆⵠ: 973,
    ΔⲆᐃΔᐃⲆⲆ: 974,
    ᐃᐃⲆᐃⲆⲆΔ: 975,
    ᐃΔᐃΔᐃⵠᐃ: 976,
    ΔⲆᐃⵠᐃΔΔ: 977,
    ⵠⵠΔΔΔⵠⵠ: 978,
    ⵠᐃΔᐃΔΔᐃ: 979,
    ΔᐃΔᐃΔⲆⵠ: 980,
    ⲆᐃΔⲆΔΔⵠ: 981,
    ⲆⵠΔⲆΔΔⲆ: 982,
    ᐃΔⲆⲆⵠⲆⵠ: 983,
    ⵠᐃΔⲆΔᐃⲆ: 984,
    ΔΔΔΔⵠⵠΔ: 985,
    ⲆᐃⲆΔΔⲆΔ: 986,
    ᐃⲆⵠⵠⵠΔᐃ: 987,
    ΔⵠᐃᐃΔᐃⲆ: 988,
    ⲆⵠⲆⵠᐃᐃΔ: 989,
    ΔΔⲆΔΔΔΔ: 990,
    ΔΔⲆᐃᐃᐃᐃ: 991,
    Δᐃᐃᐃⵠᐃⵠ: 992,
    ᐃⲆⲆΔⵠΔᐃ: 993,
    ⲆΔᐃᐃⵠΔⵠ: 994,
    ΔᐃⲆΔⵠᐃⲆ: 995,
    ⲆᐃᐃⵠᐃⲆᐃ: 996,
    ⵠⵠΔᐃᐃᐃᐃ: 997,
    ΔΔᐃΔᐃΔⲆ: 998,
    ⵠⵠⵠᐃⵠⲆⵠ: 999,
    ⲆΔᐃᐃⵠⵠΔ: 1000,
    ⲆΔᐃΔⲆⵠⵠ: 1001,
    ⵠΔᐃⵠⲆⵠΔ: 1002,
    ⵠⲆⲆⲆⵠᐃᐃ: 1003,
    ΔΔΔⵠΔΔΔ: 1004,
    ΔⲆⲆⲆⵠᐃⲆ: 1005,
    ⵠᐃᐃⲆᐃⲆⲆ: 1006,
    ⲆᐃΔΔⵠΔⲆ: 1007,
    ⲆⵠⵠᐃⲆⲆΔ: 1008,
    ⲆᐃΔⵠᐃⵠΔ: 1009,
    ⲆⲆᐃᐃⵠⲆᐃ: 1010,
    ⵠᐃⲆⵠΔⲆⵠ: 1011,
    ᐃᐃᐃᐃΔΔᐃ: 1012,
    ⵠᐃΔⵠΔᐃᐃ: 1013,
    ΔⲆΔᐃΔᐃΔ: 1014,
    ⲆⲆⵠⲆᐃᐃΔ: 1015,
    ΔⵠⲆΔᐃᐃᐃ: 1016,
    ΔⲆΔⲆⵠⲆⲆ: 1017,
    ᐃΔⵠⲆⵠⵠⲆ: 1018,
    ⵠᐃΔΔⲆⲆᐃ: 1019,
    ⲆⲆᐃΔΔⲆΔ: 1020,
    ΔΔᐃⵠⲆⲆⲆ: 1021,
    ⵠᐃⵠⲆⵠⲆⵠ: 1022,
    ᐃΔⵠⵠⲆⲆΔ: 1023,
    ᐃⵠᐃⲆⲆΔⲆ: 1024,
    ᐃⵠⵠⲆΔΔⵠ: 1025,
    ΔΔⵠᐃⵠⲆΔ: 1026,
    ᐃⵠᐃᐃⵠⲆᐃ: 1027,
    ⵠΔΔⵠⲆⵠΔ: 1028,
    ᐃΔΔΔΔΔⵠ: 1029,
    ⲆᐃΔΔⲆⲆᐃ: 1030,
    ΔΔᐃⵠΔᐃⲆ: 1031,
    ⵠⲆⵠⵠⵠΔⲆ: 1032,
    ⲆⵠⵠⵠⵠⲆΔ: 1033,
    ⲆⵠΔⵠᐃΔⵠ: 1034,
    ⲆᐃⵠΔⵠⵠⵠ: 1035,
    ᐃᐃⲆⲆⲆⲆΔ: 1036,
    ⵠᐃΔᐃᐃⵠΔ: 1037,
    ⵠᐃΔΔᐃⲆⲆ: 1038,
    ΔⵠⲆⵠΔᐃᐃ: 1039,
    ΔⲆⵠΔΔᐃⲆ: 1040,
    ⵠⲆΔΔᐃΔΔ: 1041,
    ΔⲆΔᐃⵠ: 1042,
    ⵠΔⵠⵠⵠⵠⵠ: 1043,
    ΔᐃⲆΔΔᐃᐃ: 1044,
    ⵠΔⲆⲆⵠ: 1045,
    ᐃΔⵠⲆⵠᐃΔ: 1046,
    ⲆⲆⵠⵠⵠΔⲆ: 1047,
    ΔΔⲆΔᐃⲆⲆ: 1048,
    ΔⵠΔᐃⲆᐃΔ: 1049,
    ⲆΔⵠΔⵠⲆΔ: 1050,
    ⲆⲆⵠΔΔ: 1051,
    ᐃⵠᐃⵠⵠᐃⵠ: 1052,
    ⵠⲆΔᐃᐃᐃⲆⲆᐃ: 1053,
    ΔⲆⵠⵠᐃᐃᐃⵠΔ: 1054,
    ⵠΔⲆᐃᐃΔⵠΔⵠ: 1055,
    ⲆᐃⵠᐃΔᐃᐃΔⲆ: 1056,
    ⵠᐃΔᐃᐃⲆᐃ: 1057,
    ᐃⵠΔⵠΔⲆᐃ: 1058,
    ΔΔⲆᐃⲆᐃⲆ: 1059,
    ⲆⵠⵠΔⲆⲆᐃ: 1060,
    ⵠⵠⵠⲆⲆΔᐃ: 1061,
    ᐃΔⵠⲆⲆⲆᐃ: 1062,
    ᐃⲆΔⵠⵠⲆᐃ: 1063,
    ᐃᐃΔⲆΔⵠΔ: 1064,
    ⲆΔⲆⵠⲆⲆᐃ: 1065,
    ⲆⲆⲆⵠᐃΔΔ: 1066,
    ΔΔᐃΔΔ: 1067,
    ⲆⵠᐃΔᐃ: 1068,
    ⲆΔΔᐃⲆⲆⲆ: 1069,
    ᐃⵠⵠΔⲆᐃᐃ: 1070,
    ⵠᐃⲆΔᐃⲆⲆ: 1071,
    ⵠⵠⵠⵠⵠⵠᐃ: 1072,
    ⵠⲆΔⲆᐃΔΔ: 1073,
    ⲆΔΔⲆⲆΔⲆ: 1074,
    ⲆᐃΔΔⵠᐃᐃ: 1075,
    ᐃΔΔᐃⲆᐃᐃ: 1076,
    ᐃⵠⲆᐃⵠΔⵠ: 1077,
    ΔΔⵠᐃⵠᐃΔ: 1078,
    ⵠⲆΔⵠⲆΔⵠ: 1079,
    ᐃⵠΔⲆΔⲆΔ: 1080,
    ⵠⵠΔⵠΔΔᐃⲆΔ: 1081,
    ΔⲆΔΔⲆΔⵠΔᐃ: 1082,
    ᐃⲆᐃΔⵠᐃⲆ: 1083,
    ⵠΔΔⵠⲆᐃⲆ: 1084,
    ΔⲆⵠⲆⲆᐃᐃ: 1085,
    ⵠⲆⵠⵠᐃⲆⵠ: 1086,
    ᐃⵠᐃⵠⲆΔⵠ: 1087,
    ᐃΔΔᐃⵠΔⲆ: 1088,
    ⵠⲆⵠᐃΔⵠᐃ: 1089,
    ᐃⵠⲆᐃΔΔΔ: 1090,
    ᐃᐃⲆΔⵠⵠΔ: 1091,
    ᐃⲆΔⵠⲆᐃⲆ: 1092,
    ⵠᐃⲆΔⲆᐃⲆ: 1093,
    ᐃⵠᐃⵠⵠΔⵠ: 1094,
    ᐃᐃΔΔⵠΔⲆ: 1095,
    ⵠᐃⲆⲆΔⵠⲆ: 1096,
    ΔⲆⲆᐃΔⵠΔ: 1097,
    ΔᐃΔᐃᐃΔᐃ: 1098,
    ⵠⲆⵠΔⲆⵠᐃ: 1099,
    ⵠⲆᐃⲆΔⲆⵠ: 1100,
    ΔΔⵠⵠΔⲆΔⲆΔ: 1101,
    ΔᐃᐃⵠᐃΔᐃ: 1102,
    ΔⲆΔΔⵠ: 1103,
    ᐃⵠⵠⲆᐃΔⲆΔΔ: 1104,
    ⲆⵠⵠᐃΔᐃᐃⵠΔ: 1105,
    ΔΔⵠⵠⵠⵠᐃⵠⲆ: 1106,
    ᐃⵠⲆⲆᐃᐃⵠⵠΔ: 1107,
    ΔⵠΔⲆⵠᐃⲆ: 1108,
    ⵠⲆⵠⲆΔⵠΔ: 1109,
    ⲆⲆᐃⲆⵠⲆⲆ: 1110,
    ⵠⵠᐃⲆΔⵠⵠ: 1111,
    ᐃΔΔᐃⵠᐃΔ: 1112,
    ⲆⲆΔᐃᐃⵠᐃⵠΔ: 1113,
    ⵠⲆΔΔΔⵠⵠ: 1114,
    ⲆΔⵠΔⲆΔⵠ: 1115,
    ⵠⵠⵠⵠᐃΔⲆ: 1116,
    ⲆⲆΔᐃᐃⵠΔ: 1117,
    ᐃⲆⵠⲆΔᐃΔ: 1118,
    ⲆᐃⵠⵠΔⵠᐃ: 1119,
    ⲆᐃⲆⲆΔΔⲆ: 1120,
    ΔΔᐃᐃⲆ: 1121,
    ⵠΔᐃⵠΔΔⵠⲆΔ: 1122,
    ΔⲆⲆᐃⲆⲆⲆ: 1123,
    ᐃᐃⲆⵠΔⵠΔ: 1124,
    ⵠΔⵠᐃᐃΔⲆ: 1125,
    ⵠⲆⵠΔⲆᐃΔ: 1126,
    ᐃᐃⲆⵠᐃΔΔ: 1127,
    ᐃⵠΔⲆᐃᐃⲆ: 1128,
    ᐃᐃΔᐃΔⵠΔ: 1129,
    ᐃⵠᐃΔΔΔⲆ: 1130,
    ⲆⵠⲆⵠⵠⵠⵠ: 1131,
    ⵠᐃⲆⵠⲆⵠᐃ: 1132,
    ᐃᐃⲆⲆᐃⵠΔ: 1133,
    ⲆⵠⵠⵠⲆᐃΔ: 1134,
    ᐃⲆⵠᐃΔⲆⵠ: 1135,
    ⵠᐃᐃⵠⵠⵠⵠ: 1136,
    ᐃⲆΔᐃΔⲆⲆ: 1137,
    ΔᐃⲆᐃⲆΔⲆ: 1138,
    ᐃᐃⵠⵠⵠᐃⲆ: 1139,
    ΔΔΔⲆⲆⲆⲆ: 1140,
    ⵠⵠⵠⵠⵠⵠΔ: 1141,
    ⲆⵠⵠᐃΔᐃΔ: 1142,
    ΔⲆᐃⵠᐃⵠⲆ: 1143,
    ⵠⵠᐃⲆᐃΔⲆ: 1144,
    ᐃⲆΔⲆΔⲆⲆ: 1145,
    ᐃⲆᐃΔⵠⵠᐃ: 1146,
    ⲆⲆΔⵠᐃΔⵠ: 1147,
    ᐃΔⲆⲆⲆⵠⲆ: 1148,
    ᐃΔⲆⲆⲆⲆΔ: 1149,
    ᐃⲆⲆⲆⲆᐃᐃ: 1150,
    ᐃᐃΔᐃΔⵠⵠ: 1151,
    ΔΔᐃΔⲆⲆΔ: 1152,
    ΔᐃⵠᐃΔΔΔ: 1153,
    ⲆΔΔⵠΔᐃᐃ: 1154,
    ⵠΔⵠⵠΔᐃⲆ: 1155,
    ⵠᐃΔᐃΔᐃΔ: 1156,
    ΔΔΔⲆΔⲆⵠ: 1157,
    ⵠⲆⵠᐃΔᐃΔ: 1158,
    ⵠⵠⵠᐃⲆΔᐃ: 1159,
    ᐃⵠΔᐃᐃⵠⵠ: 1160,
    ΔᐃᐃᐃΔⵠⵠ: 1161,
    ᐃΔⲆⵠᐃⲆᐃ: 1162,
    ⵠᐃᐃΔⲆ: 1163,
    ΔᐃⲆΔᐃⲆⲆ: 1164,
    ΔⵠΔⲆⲆΔⵠ: 1165,
    ᐃᐃᐃΔᐃᐃᐃ: 1166,
    Δⵠᐃⵠⵠᐃⵠ: 1167,
    ΔⲆΔⲆⲆⵠΔ: 1168,
    ⵠⲆⲆᐃⲆΔΔ: 1169,
    ⲆᐃΔᐃΔᐃⵠ: 1170,
    ⵠⵠⲆⲆΔΔΔ: 1171,
    ᐃΔᐃᐃΔΔᐃ: 1172,
    ΔⵠᐃᐃⵠΔⵠ: 1173,
    ᐃΔⵠΔΔⵠᐃ: 1174,
    ⲆΔⵠΔⲆΔᐃ: 1175,
    ᐃΔⲆᐃᐃⲆΔ: 1176,
    ⵠⲆⲆᐃⵠΔᐃ: 1177,
    ⲆᐃᐃᐃΔΔⵠ: 1178,
    ⵠᐃⵠⵠᐃΔᐃ: 1179,
    ⲆᐃᐃⲆΔΔⵠ: 1180,
    ⲆⲆⵠᐃⵠⲆⲆ: 1181,
    ⲆΔΔⲆΔΔΔ: 1182,
    ⵠⵠⲆⵠⲆΔⵠ: 1183,
    ⲆΔᐃᐃᐃΔⲆ: 1184,
    ⵠⲆⵠⲆⲆΔⵠ: 1185,
    ⵠⲆⲆⵠΔⵠⲆ: 1186,
    ⵠⲆⲆᐃⵠⵠⵠ: 1187,
    ΔΔⵠⵠⵠᐃⲆ: 1188,
    ⵠⵠⵠᐃᐃΔⲆ: 1189,
    ΔᐃΔᐃΔΔⵠⵠΔ: 1190,
    ΔⲆⵠΔⲆΔⲆⵠⲆ: 1191,
    ΔⵠΔⲆⵠΔΔⲆⲆ: 1192,
    ΔⵠⲆᐃΔⵠⲆⵠΔ: 1193,
    ⲆᐃΔΔⲆΔⵠ: 1194,
    ⵠⲆΔᐃᐃⲆᐃ: 1195,
    ⲆⲆᐃΔᐃ: 1196,
    ⵠⲆΔᐃⲆⲆⵠ: 1197,
    ΔⲆΔᐃⲆⵠⵠ: 1198,
    ⲆⲆⲆⲆᐃⵠⵠ: 1199,
    ᐃⲆᐃᐃⵠᐃᐃ: 1200,
    ᐃⲆΔⲆᐃᐃΔ: 1201,
    ⵠⵠⵠⵠⲆΔΔ: 1202,
    ⲆΔᐃⲆⲆⲆⲆ: 1203,
    ⵠΔⵠΔΔᐃᐃ: 1204,
    ⵠⲆⲆⲆⲆΔΔ: 1205,
    ΔΔⵠᐃⲆᐃⲆ: 1206,
    ᐃⲆⵠⲆᐃΔⵠ: 1207,
    ⲆⲆᐃⵠᐃᐃΔ: 1208,
    ⲆΔᐃᐃᐃⵠⲆ: 1209,
    ᐃⲆⲆᐃⵠⲆᐃ: 1210,
    ⵠⲆⲆᐃⵠΔⵠ: 1211,
    ΔᐃⵠΔⵠⵠᐃ: 1212,
    ΔΔᐃⲆᐃⵠᐃ: 1213,
    ᐃⵠΔᐃᐃΔΔ: 1214,
    ᐃⵠΔⵠΔΔᐃ: 1215,
    ⲆᐃΔⲆΔᐃⵠⲆⵠ: 1216,
    ΔΔⲆΔⵠΔᐃ: 1217,
    ΔΔⲆⵠᐃΔΔ: 1218,
    ⵠⲆⲆⲆΔⵠΔ: 1219,
    ⲆᐃⲆⲆⲆΔᐃ: 1220,
    ⲆΔᐃⲆᐃⲆⵠ: 1221,
    ΔΔΔᐃᐃⲆΔ: 1222,
    ⵠⲆᐃΔᐃⲆⵠ: 1223,
    ΔΔⲆᐃΔⵠᐃ: 1224,
    ΔⵠⲆⵠᐃⵠᐃ: 1225,
    ⵠΔⲆⲆΔⲆⲆ: 1226,
    ⵠⵠⵠⲆⲆᐃⲆ: 1227,
    ᐃⲆᐃΔⲆΔᐃ: 1228,
    ΔⲆᐃᐃⵠᐃⵠ: 1229,
    ΔⵠΔΔᐃⵠᐃ: 1230,
    ᐃⵠΔᐃΔⲆᐃ: 1231,
    ⵠⵠᐃⲆᐃᐃⲆ: 1232,
    ΔⲆᐃᐃⵠⵠⵠ: 1233,
    ᐃⲆΔΔΔᐃᐃ: 1234,
    ⵠⵠⲆⲆⵠⵠⲆ: 1235,
    ⲆⲆⵠᐃΔⲆⵠ: 1236,
    ⲆΔΔⲆΔΔⵠ: 1237,
    ⲆⵠᐃⵠⵠⲆⵠ: 1238,
    ΔΔᐃⵠᐃⲆⵠ: 1239,
    ⲆⵠⵠⲆᐃΔΔΔᐃ: 1240,
    ⲆᐃΔⵠᐃᐃΔ: 1241,
    ⲆΔⲆΔⲆᐃⵠ: 1242,
    ᐃᐃᐃⲆⲆⵠⵠ: 1243,
    ⵠΔⵠⲆᐃⲆᐃ: 1244,
    ᐃΔΔⲆΔⲆⵠ: 1245,
    ⵠⵠⲆᐃᐃⵠⲆ: 1246,
    ⵠⲆΔⵠⵠΔΔ: 1247,
    ⲆᐃⲆΔΔᐃᐃ: 1248,
    ΔΔⲆⲆⲆΔᐃ: 1249,
    ⵠΔΔⵠⵠᐃΔ: 1250,
    ⲆⵠΔΔⵠΔⵠ: 1251,
    ᐃᐃⲆᐃΔⲆⲆ: 1252,
    ⵠⵠⲆΔⲆΔΔ: 1253,
    ⵠᐃⲆⲆΔΔΔ: 1254,
    ⲆᐃᐃΔⵠᐃⵠ: 1255,
    ᐃΔⵠᐃΔΔᐃ: 1256,
    ⵠΔⲆⲆⵠΔⵠ: 1257,
    ⵠⵠⵠᐃⵠⵠⲆ: 1258,
    ΔΔᐃᐃⵠᐃᐃ: 1259,
    ΔⵠⲆⲆᐃᐃⵠ: 1260,
    ⵠΔⲆΔⲆⵠΔ: 1261,
    ΔΔΔⲆΔⵠᐃ: 1262,
    ΔⵠΔΔᐃⲆⵠ: 1263,
    ᐃⲆᐃⵠⵠⵠⲆ: 1264,
    ⲆⲆⵠΔⲆ: 1265,
    ΔᐃⲆⵠᐃⵠᐃ: 1266,
    ΔᐃΔᐃⵠᐃⵠ: 1267,
    ⲆΔⲆⵠⲆΔᐃ: 1268,
    ⵠΔΔᐃΔᐃᐃ: 1269,
    ⵠⵠΔᐃⵠⵠΔ: 1270,
    ΔᐃⲆⲆⲆⲆⵠ: 1271,
    ᐃⲆᐃΔⵠΔⵠ: 1272,
    ΔⲆⵠΔⵠᐃⵠ: 1273,
    ⵠⵠᐃΔⵠⲆⵠ: 1274,
    ⲆᐃΔⲆⵠᐃⵠ: 1275,
    ᐃᐃⵠΔⲆⲆⲆ: 1276,
    ⵠΔⲆⲆⵠᐃⲆ: 1277,
    ⵠΔᐃᐃΔΔⲆ: 1278,
    ᐃΔⲆᐃⵠΔᐃ: 1279,
    ΔᐃⲆΔⲆΔΔ: 1280,
    ⵠⵠᐃⵠⵠΔⲆ: 1281,
    ΔⲆΔΔᐃΔᐃ: 1282,
    ⵠⵠᐃΔⵠⵠΔ: 1283,
    ΔΔΔᐃΔΔⲆ: 1284,
    ΔᐃᐃⲆᐃᐃΔ: 1285,
    ⵠᐃⵠⵠΔᐃᐃ: 1286,
    ᐃᐃⲆⲆΔⲆᐃ: 1287,
    ⲆⵠⵠΔᐃⵠⲆ: 1288,
    ᐃⵠᐃⲆΔᐃΔ: 1289,
    ᐃⲆΔᐃⲆᐃΔ: 1290,
    Ⲇⵠᐃⵠⵠᐃᐃ: 1291,
    ᐃᐃᐃᐃⵠΔΔ: 1292,
    ΔᐃⲆⲆᐃⵠᐃ: 1293,
    ⲆⲆⵠΔⲆⵠᐃ: 1294,
    ΔⲆⲆⵠᐃΔⲆ: 1295,
    ΔΔⵠⲆⵠⵠΔ: 1296,
    ⲆΔⵠᐃⵠᐃΔ: 1297,
    ΔⵠΔⲆⲆⵠⵠ: 1298,
    ⵠᐃᐃΔᐃⲆᐃ: 1299,
    ᐃⲆⲆⵠΔΔΔ: 1300,
    ⵠᐃⲆΔΔΔⲆ: 1301,
    ⵠΔⲆΔⵠᐃⲆ: 1302,
    ⵠⲆⲆΔⲆΔΔ: 1303,
    ⵠΔⵠΔᐃΔᐃ: 1304,
    ⵠⵠᐃΔⲆⲆⲆ: 1305,
    ΔⲆΔⲆΔΔΔ: 1306,
    ΔᐃΔⵠᐃⵠᐃ: 1307,
    ⲆⵠΔΔΔⵠⲆ: 1308,
    ⵠⵠⲆⵠⵠⵠⵠ: 1309,
    ᐃⵠᐃᐃΔᐃᐃ: 1310,
    ᐃⲆⵠⵠΔᐃⵠ: 1311,
    ᐃⵠᐃΔΔⲆᐃ: 1312,
    ⲆⵠΔᐃᐃᐃⲆ: 1313,
    ⲆⵠΔⵠΔΔΔ: 1314,
    ᐃΔΔⵠⲆΔⵠ: 1315,
    ΔᐃᐃΔᐃᐃⵠ: 1316,
    ⲆⲆᐃⲆⵠΔⵠ: 1317,
    ΔⵠΔΔΔⲆⵠ: 1318,
    ᐃΔⵠΔᐃΔᐃ: 1319,
    ⵠⲆᐃΔΔΔΔ: 1320,
    ΔΔΔⵠΔⲆᐃ: 1321,
    ΔⵠΔᐃⵠⲆⵠ: 1322,
    ΔⲆⵠⲆⲆ: 1323,
    ⵠᐃᐃΔᐃ: 1324,
    ᐃⲆΔᐃⲆΔⲆ: 1325,
    ΔΔⲆⵠⲆⵠⵠ: 1326,
    ΔⵠⵠᐃⵠⵠⲆ: 1327,
    ⵠⵠⲆⵠⲆⵠⵠ: 1328,
    ᐃⵠⲆⲆⵠⲆⲆ: 1329,
    ᐃⲆⵠᐃⵠΔⵠ: 1330,
    ΔᐃⵠⵠΔⲆⲆ: 1331,
    ᐃⲆΔΔ: 1332,
    ⲆᐃΔᐃ: 1333,
    ᐃⵠΔⵠⵠΔΔ: 1334,
    ΔᐃΔΔⲆⵠⲆ: 1335,
    ᐃᐃΔΔᐃⵠΔ: 1336,
    ⵠΔⲆⲆᐃᐃΔ: 1337,
    ⵠⲆⲆᐃᐃΔⲆ: 1338,
    ⲆⵠⵠᐃⵠΔΔ: 1339,
    ΔΔΔΔⲆⲆⵠ: 1340,
    ⲆⲆⵠᐃᐃ: 1341,
    ΔⵠⵠᐃᐃΔᐃ: 1342,
    ΔΔⲆⲆⵠ: 1343,
    ΔᐃΔⵠΔⲆⲆ: 1344,
    ⲆᐃᐃΔΔ: 1345,
    Δⵠⵠⵠᐃⵠⵠ: 1346,
    ΔᐃⲆⲆⲆ: 1347,
    ⲆΔⵠΔⵠⲆⵠ: 1348,
    ⵠΔᐃΔⲆⵠᐃ: 1349,
    ΔΔᐃᐃΔ: 1350,
    ⵠⵠᐃⵠᐃⵠΔ: 1351,
    ⲆⵠᐃΔⲆⲆⲆ: 1352,
    ⵠᐃⵠⵠⵠᐃⵠ: 1353,
    ΔⲆⲆⲆⵠⲆΔ: 1354,
    ΔᐃΔⵠⲆⵠΔ: 1355,
    ⵠⲆᐃΔΔᐃᐃ: 1356,
    ΔⲆⵠᐃⲆⵠΔ: 1357,
    ΔⲆᐃⲆⵠⲆⵠ: 1358,
    ⲆⲆΔᐃⵠΔⲆ: 1359,
    ΔⲆⲆᐃⵠ: 1360,
    ΔΔΔⵠⵠⵠⲆ: 1361,
    ⲆᐃᐃⲆⲆ: 1362,
    ⲆⲆΔΔᐃᐃⵠ: 1363,
    ΔⵠⲆᐃᐃⲆΔ: 1364,
    ΔΔᐃΔⲆⵠⵠ: 1365,
    ⵠΔⲆᐃᐃΔⵠ: 1366,
    ᐃᐃⵠⲆⵠⵠᐃ: 1367,
    ⵠᐃⵠᐃΔⲆᐃ: 1368,
    ΔΔΔⲆΔⲆΔΔΔ: 1369,
    ⵠⵠⲆⲆᐃⵠⲆ: 1370,
    ⲆⵠᐃⵠᐃᐃⲆ: 1371,
    ⲆᐃΔᐃⵠⲆᐃⵠΔ: 1372,
    ΔⲆⲆΔᐃⲆΔ: 1373,
    ᐃΔΔⲆᐃⲆⵠ: 1374,
    ᐃΔⲆᐃᐃⲆⵠ: 1375,
    ᐃᐃⵠⲆᐃᐃᐃ: 1376,
    ᐃΔⵠᐃⵠ: 1377,
    ΔΔᐃᐃⵠⵠⲆ: 1378,
    ⲆⲆᐃΔᐃΔΔ: 1379,
    ᐃΔΔⵠⲆΔᐃ: 1380,
    ⲆⲆⲆⵠⲆΔᐃ: 1381,
    ⲆᐃΔⵠⲆΔᐃ: 1382,
    ᐃΔⵠᐃᐃⲆⵠ: 1383,
    ⲆⵠⵠⵠΔᐃⲆ: 1384,
    ⵠⵠᐃΔⲆⲆⵠ: 1385,
    ⲆΔⵠΔΔᐃᐃ: 1386,
    ᐃⲆⵠⲆⵠⵠᐃ: 1387,
    ⵠᐃⵠⲆΔΔᐃ: 1388,
    ⵠⲆⲆᐃᐃᐃⵠ: 1389,
    ΔⲆᐃⵠᐃⲆⵠ: 1390,
    ᐃⲆΔΔⵠⵠᐃ: 1391,
    ᐃᐃᐃᐃⲆ: 1392,
    ΔᐃΔⵠΔᐃⵠ: 1393,
    ΔⵠΔⵠⵠᐃⲆ: 1394,
    ⲆᐃΔⵠᐃΔⲆ: 1395,
    ΔΔⲆΔⲆⵠⵠ: 1396,
    ᐃΔᐃⵠᐃⲆΔ: 1397,
    ⲆΔⵠᐃⵠⲆᐃ: 1398,
    ΔⲆⲆⵠᐃᐃⵠ: 1399,
    ᐃΔⵠΔᐃΔⵠ: 1400,
    ⲆᐃᐃᐃⲆⲆⲆ: 1401,
    ⲆΔᐃᐃⵠⲆⵠ: 1402,
    ⵠⲆᐃᐃΔᐃⵠ: 1403,
    ΔᐃⲆΔⵠⲆΔ: 1404,
    ⲆⵠᐃⵠᐃⵠⲆ: 1405,
    ΔΔᐃᐃᐃⵠᐃ: 1406,
    ΔΔΔⵠᐃ: 1407,
    ⲆΔⵠⲆⲆⲆⲆ: 1408,
    ΔⵠΔᐃᐃΔⵠ: 1409,
    ⵠⲆⵠⵠΔⵠⲆ: 1410,
    ᐃᐃⵠΔᐃᐃᐃ: 1411,
    ⲆΔᐃⵠⵠᐃᐃ: 1412,
    ᐃᐃⲆΔⲆΔⵠ: 1413,
    ⲆΔᐃⲆΔⵠⲆ: 1414,
    ᐃΔⵠᐃᐃⵠⵠ: 1415,
    ΔⵠⲆᐃΔΔⲆ: 1416,
    ΔᐃⲆᐃᐃⵠⵠ: 1417,
    ⲆᐃⲆΔΔⲆᐃ: 1418,
    ΔᐃⲆᐃⲆⵠᐃ: 1419,
    ΔⵠΔΔⲆⲆⵠ: 1420,
    ⵠⲆᐃᐃᐃⵠᐃ: 1421,
    ΔΔᐃⲆΔΔⲆ: 1422,
    ⲆΔⲆⵠᐃⲆⲆ: 1423,
    ⵠᐃⲆᐃⵠΔⲆ: 1424,
    ΔⵠⲆᐃⲆΔᐃ: 1425,
    ΔΔΔⵠⲆΔΔ: 1426,
    ΔᐃⲆⲆᐃⵠⵠ: 1427,
    ⲆⵠⲆΔⲆ: 1428,
    ⲆⲆⵠⵠⲆΔⵠ: 1429,
    ᐃⵠⵠⲆᐃᐃᐃ: 1430,
    ⲆⵠᐃᐃⵠⵠΔ: 1431,
    ⲆΔⵠⵠⵠᐃᐃ: 1432,
    ᐃⵠⵠⲆⲆⵠⲆ: 1433,
    ᐃⲆΔⵠΔΔᐃ: 1434,
    ΔⵠⲆⲆⵠΔΔ: 1435,
    ⲆⲆᐃⵠᐃⵠⲆ: 1436,
    ᐃᐃᐃᐃΔᐃᐃ: 1437,
    ⲆⲆⲆⲆⲆᐃΔ: 1438,
    ⲆᐃΔⵠⲆᐃΔ: 1439,
    ⲆⵠⲆⲆⵠⵠⵠ: 1440,
    ⲆᐃΔⲆΔⵠⵠ: 1441,
    ᐃᐃΔⲆⵠᐃᐃ: 1442,
    ⵠⲆⲆⵠⲆⵠᐃ: 1443,
    ᐃⵠΔⲆⵠᐃᐃ: 1444,
    ⵠᐃᐃΔᐃⵠΔ: 1445,
    ΔΔᐃⲆⵠ: 1446,
    ᐃΔⲆΔⲆΔⲆ: 1447,
    ΔⵠⵠΔⲆⲆΔ: 1448,
    ⵠᐃᐃⵠⲆⲆΔ: 1449,
    ΔᐃⵠᐃΔⲆᐃ: 1450,
    ΔᐃΔⵠⵠⲆᐃ: 1451,
    ᐃΔᐃⲆΔᐃΔ: 1452,
    ΔᐃⲆⲆᐃⲆΔ: 1453,
    ⵠⵠⲆⵠΔΔΔ: 1454,
    ⲆᐃⲆΔᐃⵠᐃ: 1455,
    ⵠⲆⵠⵠⵠⲆⲆ: 1456,
    ᐃΔⵠⲆΔᐃᐃ: 1457,
    Δᐃⵠᐃᐃᐃᐃ: 1458,
    ΔⲆⵠᐃΔᐃⵠ: 1459,
    ⲆΔⲆΔΔⵠⲆ: 1460,
    ⵠΔΔΔⲆΔⲆ: 1461,
    ΔᐃΔᐃⵠⲆΔ: 1462,
    ⲆⵠΔⲆⲆ: 1463,
    ⵠⲆᐃᐃᐃⲆⵠ: 1464,
    ⲆⲆᐃⵠᐃΔΔ: 1465,
    ⲆᐃᐃᐃΔΔΔ: 1466,
    ⵠⲆⲆⵠⵠⵠΔ: 1467,
    ⲆᐃⵠⵠΔⲆᐃ: 1468,
    ΔⵠΔᐃᐃⵠᐃ: 1469,
    ΔᐃⲆⵠⵠⵠΔ: 1470,
    ΔⲆΔΔΔⲆⵠ: 1471,
    ᐃⵠᐃΔᐃⵠᐃ: 1472,
    ⵠⲆⵠⵠᐃⲆᐃ: 1473,
    ⵠᐃⲆᐃΔᐃᐃ: 1474,
    ΔᐃⲆⵠⲆΔⵠ: 1475,
    ⲆⲆⲆⲆⵠᐃⵠ: 1476,
    ⵠⲆᐃⲆΔᐃⲆ: ["#E9CF96", "#144940"],
    ⲆᐃⲆⵠⵠⵠᐃ: 1477,
    ΔⲆᐃΔⲆⲆⵠ: 1478,
    ΔⵠⵠⵠᐃⲆᐃ: 1479,
    ⵠᐃⵠᐃᐃᐃⲆ: 1480,
    ᐃᐃⵠΔᐃΔᐃ: 1481,
    ᐃΔΔΔΔᐃᐃ: 1482,
    ⲆⲆᐃⵠⵠⵠⲆ: 1483,
    ⲆⵠᐃᐃⲆ: 1484,
    ᐃⵠᐃⲆΔΔΔ: 1485,
    ΔⲆⲆⵠΔᐃⵠ: 1486,
    ΔⲆΔᐃᐃⲆΔ: 1487,
    ΔΔⲆᐃΔⲆⲆ: 1488,
    ⵠⲆᐃⵠⲆⵠⵠ: 1489,
    ⲆⵠⵠⵠⵠⲆⵠ: 1490,
    ⲆΔⲆⵠⵠΔᐃ: 1491,
    ΔⲆⵠⵠⵠⲆⲆ: 1492,
    ΔⲆΔⲆΔΔⵠ: 1493,
    ⲆᐃΔⲆᐃΔᐃ: 1494,
    ΔΔΔⲆΔⲆⲆ: 1495,
    ᐃᐃᐃⲆⵠΔᐃ: 1496,
    ΔᐃΔᐃΔⲆΔ: 1497,
    ΔⵠⵠⵠⲆⵠⵠ: 1498,
    ΔⵠᐃᐃⲆⲆΔ: 1499,
    ⲆᐃᐃⵠⲆᐃᐃ: 1500,
    ⵠᐃᐃⲆⵠΔⵠ: 1501,
    ᐃᐃᐃⵠΔⵠᐃ: 1502,
    ⲆⲆΔᐃⲆΔⲆ: 1503,
    ⵠΔΔⵠᐃᐃᐃ: 1504,
    ⵠᐃᐃᐃΔΔⲆ: 1505,
    ᐃΔⵠⵠⲆⲆᐃ: 1506,
    ΔⵠⵠᐃⲆᐃⵠ: 1507,
    ΔΔⲆⵠⲆⲆΔ: 1508,
    ⲆⲆⵠⲆⲆΔⵠ: 1509,
    ΔⲆⲆⵠᐃΔⵠ: 1510,
    ΔⲆᐃΔΔⵠΔ: 1511,
    ⵠⵠΔᐃⵠⵠᐃ: 1512,
    ᐃᐃⲆΔᐃⲆⲆ: 1513,
    ΔᐃⲆⲆⲆⵠΔ: 1514,
    ᐃⵠⲆᐃⲆⲆᐃ: 1515,
    ⲆᐃⵠⲆΔⵠᐃ: 1516,
    ΔᐃΔΔⵠᐃᐃ: 1517,
    ⵠⵠⵠⵠΔⲆᐃ: 1518,
    ᐃⲆⵠⵠⵠⵠΔ: 1519,
    ᐃΔΔⲆⲆᐃⲆ: 1520,
    ΔᐃΔⲆⵠⲆⲆ: 1521,
    ⲆⲆⲆⲆᐃⵠΔ: 1522,
    ⵠⵠΔⵠΔΔᐃ: 1523,
    ᐃΔΔⲆⲆⵠΔ: 1524,
    ⵠᐃⵠᐃⵠᐃΔ: 1525,
    ᐃΔΔᐃΔΔⵠ: 1526,
    ᐃᐃᐃⲆⵠⵠⵠ: 1527,
    ᐃⲆⲆᐃᐃⲆⵠ: 1528,
    ᐃⲆΔᐃΔΔΔ: 1529,
    ⲆⲆⲆΔᐃⲆⵠ: 1530,
    ⵠᐃᐃᐃⲆⲆⵠ: 1531,
    ΔΔᐃΔⵠⵠⵠ: 1532,
    ΔⲆⵠⲆⲆⲆⲆ: 1533,
    ⲆΔᐃᐃΔᐃΔ: 1534,
    ᐃⵠᐃᐃⵠⵠⵠ: 1535,
    ᐃⲆΔΔᐃⲆⵠ: 1536,
    ⵠΔΔⵠⲆⲆⵠ: 1537,
    ⲆΔᐃⲆᐃΔⲆ: 1538,
    ΔᐃⲆⵠⵠΔⲆ: 1539,
    ⵠᐃⵠᐃᐃⵠⵠ: 1540,
    ΔⲆⲆᐃⲆⵠⵠ: 1541,
    ΔⲆΔⲆΔᐃΔ: 1542,
    ⲆⲆΔⲆⵠᐃⵠ: 1543,
    ΔⲆⲆⲆⵠⵠⲆ: 1544,
    ⵠⲆᐃⵠΔᐃⵠ: 1545,
    ΔᐃΔⵠᐃΔⵠ: 1546,
    ΔΔᐃⲆᐃΔⲆ: 1547,
    ΔⵠᐃⲆⲆⵠΔ: 1548,
    ΔΔⲆᐃⵠⲆᐃ: 1549,
    ᐃⲆⵠⵠⲆⵠⲆ: 1550,
    ΔᐃⲆⵠΔⲆⵠ: 1551,
    ᐃᐃᐃⵠⲆᐃⵠ: 1552,
    ⲆⲆΔᐃⵠⵠᐃ: 1553,
    ᐃᐃⵠⵠⵠᐃᐃ: 1554,
    ⲆΔΔⲆᐃⵠᐃ: 1555,
    ⲆᐃⵠΔΔΔⲆ: 1556,
    ᐃⲆΔⵠᐃᐃⵠ: 1557,
    ⲆⲆᐃⲆⲆΔᐃ: 1558,
    ᐃⲆᐃᐃᐃⵠⵠ: 1559,
    ΔΔⲆΔᐃᐃⲆ: 1560,
    ᐃⵠΔΔⵠⵠⵠ: 1561,
    ΔⵠΔⵠⵠⲆᐃ: 1562,
    ⵠΔΔⵠⵠⵠᐃ: 1563,
    ΔⲆΔΔⲆᐃⲆ: 1564,
    ⵠⵠΔᐃΔᐃⵠ: 1565,
    ᐃᐃΔᐃΔⲆⲆ: 1566,
    ᐃⲆⵠⲆⲆⲆⵠ: 1567,
    ᐃΔᐃⲆⵠⵠⲆ: 1568,
    ⲆᐃⵠⵠⲆⲆⵠ: 1569,
    ΔΔᐃⲆᐃᐃᐃ: 1570,
    ΔⵠⲆᐃⵠⵠⲆ: 1571,
    ΔⲆᐃⲆⵠⵠᐃ: 1572,
    ⲆᐃⲆⲆᐃᐃΔ: 1573,
    ⵠⲆⲆᐃᐃⵠᐃ: 1574,
    ⵠᐃⵠⲆΔⲆⲆ: 1575,
    ΔⵠⵠⵠΔΔᐃ: 1576,
    ΔΔᐃⵠⲆⲆΔ: 1577,
    ⲆᐃΔⵠΔᐃⲆ: 1578,
    ⵠᐃΔⲆⲆΔⲆ: 1579,
    ΔΔΔᐃⲆⲆⲆ: 1580,
    ⲆⲆⵠⲆΔⵠⲆ: 1581,
    ⵠΔⵠⲆⲆⲆᐃ: 1582,
    ᐃⲆΔⲆⲆΔᐃ: 1583,
    ⵠΔⵠⵠⲆⵠΔ: 1584,
    ⵠⲆⲆⲆΔΔΔ: 1585,
    ⲆᐃᐃⵠᐃᐃΔ: 1586,
    ⵠⲆΔΔⵠΔᐃ: 1587,
    ⲆⵠᐃΔⲆⵠᐃ: 1588,
    ⵠⵠᐃⲆⲆᐃⵠ: 1589,
    ᐃⵠΔΔⲆᐃᐃ: 1590,
    ⲆⲆⵠⲆⵠΔᐃ: 1591,
    ᐃⵠᐃᐃᐃᐃΔ: 1592,
    ΔΔΔⲆᐃⵠⵠ: 1593,
    ⵠⲆᐃᐃⲆⲆⵠ: 1594,
    ᐃᐃⲆⲆⵠᐃⲆ: 1595,
    ΔΔⲆΔⲆⲆⵠ: 1596,
    ᐃⲆⵠⵠᐃⵠⲆ: 1597,
    ⵠᐃΔⲆᐃⵠΔ: 1598,
    ⵠⲆᐃⵠⲆⵠΔ: 1599,
    ⲆΔΔᐃⵠᐃⵠ: 1600,
    ⲆΔᐃⲆⲆᐃΔ: 1601,
    ⲆᐃᐃⲆⵠⲆⲆ: 1602,
    ⲆΔᐃΔᐃΔΔ: 1603,
    ⲆᐃΔᐃⵠᐃΔ: 1604,
    ⲆᐃΔⲆⵠⲆⵠ: 1605,
    ᐃⲆΔᐃⵠᐃⵠ: 1606,
    ⲆᐃΔⲆΔⵠᐃ: 1607,
    ᐃΔᐃⵠⵠⵠΔ: 1608,
    ΔΔⲆΔⲆ: 1609,
    ⲆᐃΔΔⲆⲆⲆ: 1610,
    ΔᐃⲆΔⲆ: 1611,
    ΔᐃΔΔᐃⲆᐃ: 1612,
    ΔⵠᐃⲆⲆᐃⲆ: 1613,
    ᐃⵠΔⲆⵠⵠⲆ: 1614,
    ᐃⲆⵠΔⲆΔⵠ: 1615,
    ⲆᐃΔⲆΔⲆⵠ: 1616,
    ⵠⵠᐃΔᐃⵠⲆ: 1617,
    ᐃⵠⵠΔⵠΔⵠ: 1618,
    ⵠᐃΔⵠⲆⲆⲆ: 1619,
    ⲆΔᐃⵠΔΔᐃ: 1620,
    ΔᐃᐃⵠᐃⵠΔ: 1621,
    ⲆⲆⵠⵠⵠᐃⲆ: 1622,
    ⵠⵠⲆⵠᐃⲆⵠ: 1623,
    ᐃᐃⵠⵠⵠⲆΔ: 1624,
    ᐃⵠΔᐃⲆⲆⵠ: 1625,
    ⲆⲆᐃⵠΔΔΔ: 1626,
    ⵠΔⲆⵠΔⲆⲆ: 1627,
    ⲆⲆΔⵠᐃⲆⲆ: 1628,
    ᐃᐃⲆⵠⵠᐃᐃ: 1629,
    ⲆΔⵠⲆⵠΔᐃ: 1630,
    ᐃⵠᐃⵠᐃΔᐃ: 1631,
    ⲆⲆⲆⲆΔᐃⵠ: 1632,
    ΔΔᐃⲆᐃᐃⵠ: 1633,
    ⲆⲆⲆⵠⵠⵠⲆ: 1634,
    ⲆⲆᐃⵠⲆⵠⲆ: 1635,
    ΔΔⲆᐃⲆⲆⵠ: 1636,
    Δⵠⵠⵠᐃᐃⵠ: 1637,
    ᐃⲆⲆⵠᐃⲆⵠ: 1638,
    ΔⲆᐃᐃⲆⵠᐃ: 1639,
    ΔⲆⲆⲆᐃᐃⵠ: 1640,
    ⵠᐃΔⲆⵠᐃΔ: 1641,
    ⵠΔΔᐃⵠⵠᐃ: 1642,
    ᐃⲆⵠⲆᐃΔΔ: 1643,
    ᐃΔᐃᐃⵠⲆᐃ: 1644,
    ΔΔᐃᐃΔΔⲆ: 1645,
    ΔⵠᐃⲆⲆⵠᐃ: 1646,
    ᐃⵠΔⲆᐃⲆΔ: 1647,
    ᐃⵠΔⵠⲆᐃᐃ: 1648,
    ᐃⲆⲆΔⵠᐃᐃ: 1649,
    ΔᐃᐃⵠΔⲆΔ: 1650,
    ⲆⵠⵠⲆΔΔΔ: 1651,
    ⲆⲆᐃⲆᐃΔⲆ: 1652,
    ᐃΔΔΔᐃⲆⵠ: 1653,
    ⲆΔⵠᐃΔⵠⲆ: 1654,
    ᐃΔΔΔΔⲆⲆ: 1655,
    ⲆⲆⵠⵠᐃⲆᐃ: 1656,
    ⵠⵠⵠᐃⲆⵠᐃ: 1657,
    ⲆΔΔⵠⵠⲆⲆ: 1658,
    ΔᐃⲆᐃⵠᐃᐃ: 1659,
    ⵠⲆΔⲆⵠⵠⲆ: 1660,
    ᐃⵠⵠⵠΔᐃᐃ: 1661,
    ΔᐃⲆᐃᐃΔΔ: 1662,
    ⲆΔΔΔⵠⵠⲆ: 1663,
    ΔΔᐃΔΔΔᐃ: 1664,
    ΔⲆΔⵠⵠⲆⲆ: 1665,
    ⲆⵠⲆⲆΔΔΔ: 1666,
    ᐃⵠᐃⲆⲆᐃⵠ: 1667,
    ⵠΔᐃΔᐃⲆᐃ: 1668,
    ⵠⲆⲆⲆⲆᐃᐃ: 1669,
    ᐃⲆΔⵠⵠᐃⲆ: 1670,
    ⵠΔⲆⲆΔᐃᐃ: 1671,
    ᐃⲆΔΔΔᐃΔ: 1672,
    ΔΔⵠᐃᐃᐃᐃ: 1673,
    ⵠᐃⵠᐃⵠⲆⲆ: 1674,
    ᐃⲆΔᐃΔᐃⵠ: 1675,
    ΔⲆⵠΔⵠⲆᐃ: 1676,
    ⲆⵠΔΔᐃΔᐃ: 1677,
    ΔᐃᐃΔᐃⲆⵠ: 1678,
    ΔⵠⵠᐃⵠⲆⲆ: 1679,
    ᐃᐃᐃⲆⲆΔᐃ: 1680,
    ᐃΔΔⵠΔⵠⵠ: 1681,
    ᐃⵠⵠⵠⲆᐃΔ: 1682,
    ⲆⵠⵠᐃⲆΔⲆ: 1683,
    ⲆΔⲆΔⲆΔⲆ: 1684,
    ⵠⵠⵠᐃΔⲆⵠ: 1685,
    ⵠⲆΔⲆᐃⵠⵠ: 1686,
    ⵠΔⲆΔⲆⲆⵠ: 1687,
    ᐃᐃΔᐃᐃΔᐃ: 1688,
    ⲆᐃᐃⲆⲆⵠΔ: 1689,
    ΔᐃᐃⵠΔᐃⲆ: 1690,
    ᐃᐃΔⲆⲆⵠΔ: 1691,
    ⵠΔΔΔⲆⵠᐃ: 1692,
    ΔΔΔᐃΔⵠⲆ: 1693,
    ΔⲆᐃΔⲆΔᐃ: 1694,
    ΔΔⲆⲆⲆⲆⲆ: 1695,
    ⲆⲆⵠⲆΔᐃΔ: 1696,
    ΔⲆⲆᐃΔΔᐃ: 1697,
    ⵠᐃⵠⵠⵠⵠΔ: 1698,
    ΔⵠⲆⲆⵠᐃᐃ: 1699,
    ᐃⵠΔⲆⲆᐃⲆ: 1700,
    ⲆⵠⲆⲆⵠΔᐃ: 1701,
    ᐃΔⵠⲆⲆᐃΔ: 1702,
    ᐃΔᐃⵠΔⲆⲆ: 1703,
    ⲆΔⲆⵠⲆΔⲆ: 1704,
    ΔⵠⵠΔΔΔΔ: 1705,
    ⲆⲆᐃⵠⵠΔⵠ: 1706,
    ⵠΔⵠⲆΔΔᐃ: 1707,
    ⵠΔΔⲆⵠΔⲆ: 1708,
    ᐃΔⵠΔΔᐃⲆ: 1709,
    ᐃᐃⲆᐃⲆᐃΔ: 1710,
    ΔⲆⵠᐃⲆᐃΔ: 1711,
    ⲆⵠᐃᐃⵠⲆⵠ: 1712,
    ΔᐃⲆⵠⲆᐃᐃ: 1713,
    ⲆⵠᐃᐃⲆᐃΔ: 1714,
    ΔΔⲆⲆᐃΔΔ: 1715,
    ⲆᐃⵠᐃⲆⲆⲆ: 1716,
    ΔⲆᐃᐃⵠⲆⲆ: 1717,
    ⲆⲆⵠΔⲆⲆᐃ: 1718,
    ᐃⵠᐃⲆΔΔΔ: 1719,
    ⲆⵠᐃᐃⲆ: 1720,
    ⲆⵠⲆᐃΔⲆⵠ: 1721,
    ⵠⵠᐃⵠⲆ: 1722,
    ᐃΔᐃᐃᐃⲆⵠ: 1723,
    ⵠΔⲆᐃᐃ: 1724,
    ⵠⲆᐃⲆⵠΔⲆ: 1725,
    ⵠⵠΔΔᐃ: 1726,
    ⲆᐃᐃⵠⲆⵠⵠ: 1727,
    ΔᐃΔΔⲆ: 1728,
    ᐃΔᐃᐃᐃⲆᐃ: 1729,
    ⲆΔⵠⵠⵠ: 1730,
    ΔⵠⲆΔⲆΔΔ: 1731,
    ⲆᐃΔᐃᐃ: 1732,
    ⵠΔⵠΔⲆΔΔ: 1733,
    ΔΔΔⵠⲆ: 1734,
    ᐃᐃΔΔΔΔΔ: 1735,
    ⲆΔΔᐃᐃ: 1736,
    ⲆΔᐃⲆⲆⵠΔ: 1737,
    ΔⲆΔΔⲆⵠΔ: 1738,
    ᐃⵠⵠⵠΔⲆᐃ: 1739,
    ⲆΔⵠⵠᐃⲆⵠ: 1740,
    ⵠⵠⵠⲆᐃⵠⵠ: 1741,
    ᐃᐃᐃⵠⲆⲆΔ: 1742,
    ⵠⲆⵠⲆⲆᐃΔ: 1743,
    ᐃΔΔⵠⵠⵠΔ: 1744,
    ⵠⵠⲆΔᐃⵠΔ: 1745,
    ⲆᐃᐃⵠΔⲆᐃ: 1746,
    ⲆΔⵠⲆⵠ: 1747,
    ⵠΔᐃⲆᐃΔⲆ: 1748,
    ΔⲆᐃΔⵠᐃΔ: 1749,
    ᐃΔⲆⵠⵠ: 1750,
    ⵠΔⲆⵠᐃ: 1751,
    ΔⲆᐃᐃⵠⲆᐃ: 1752,
    ᐃΔⲆΔⲆⵠᐃ: 1753,
    ⵠⵠᐃᐃⵠ: 1754,
    ⲆⲆΔⵠⲆ: 1755,
    ⲆⲆΔᐃΔ: 1756,
    ᐃⲆᐃⵠⲆⵠⲆ: 1757,
    ᐃⵠⵠⵠΔⲆᐃ: 1758,
    ᐃΔΔⵠΔ: 1759
  };
  const vVVV163 = vVV163;
  v593 = 0;
  var v595 = {
    ΔⵠΔᐃⲆ: 0,
    ⵠᐃΔᐃⲆ: 1,
    ⲆΔᐃᐃⲆ: 2,
    ⲆⲆⲆⲆΔ: 3,
    ᐃⲆⵠⵠⲆ: 4,
    ᐃⵠⵠⲆⲆ: 5,
    ᐃⵠⲆⵠⲆ: 6,
    ΔⲆⵠΔᐃ: 7,
    ⲆΔⲆΔⲆ: 8,
    ΔᐃⵠⲆᐃ: 9,
    ⲆⵠⲆⲆⲆ: 10,
    ⲆΔᐃᐃᐃ: 11,
    ᐃᐃᐃⲆᐃ: 12,
    ᐃⲆΔᐃⲆ: 13,
    ᐃⵠᐃᐃⲆ: 14,
    ⲆⲆᐃᐃᐃ: 15,
    Δⵠⵠⵠⵠ: 16,
    ᐃⲆⵠΔΔ: 17,
    ᐃΔᐃⲆΔ: 18,
    ⵠᐃⲆᐃΔ: 19,
    ⲆΔᐃⵠᐃ: 20,
    ⲆⵠⵠΔᐃ: 21,
    ⲆⲆⵠᐃⲆ: 22,
    ⲆᐃΔΔⲆ: 23,
    ΔⵠΔⵠΔ: 24,
    ⲆⵠⲆΔⵠ: 25,
    ΔⵠⵠᐃⲆ: 26,
    ᐃⵠᐃⵠⲆ: 27,
    ᐃⵠᐃᐃΔ: 28,
    ᐃⲆⵠⲆⲆ: 29,
    ⵠΔΔΔⵠ: 30,
    ⵠΔᐃⲆⵠ: 31,
    Δⵠᐃᐃⵠ: 32,
    ⲆΔⵠⲆᐃ: 33,
    ᐃΔΔⵠⲆ: 34,
    ΔⵠᐃⵠⲆ: 35,
    ⵠΔΔⵠΔ: 36,
    ⵠⵠΔⲆΔ: 37,
    ΔⵠΔⵠⲆ: 38,
    ᐃⵠⲆᐃΔ: 39,
    ⵠᐃⵠᐃⲆ: 40,
    ΔⵠᐃⲆΔ: 41,
    ΔⵠΔᐃⵠ: 42,
    ⵠⵠⲆⲆᐃ: 43,
    ᐃⵠⲆⲆᐃ: 44,
    ⲆᐃΔᐃⵠ: 45,
    ⲆᐃⲆΔⵠ: 46,
    ⲆⲆΔⲆ: 47,
    ΔΔΔΔⵠ: 48,
    ⵠⵠⵠΔⵠ: 49,
    ⲆΔΔΔⵠ: 50,
    ⲆⵠⵠΔⲆ: 51,
    ΔΔᐃⵠⲆ: 52,
    ⲆΔⲆⵠⲆ: 53,
    ⲆᐃᐃⵠΔ: 54,
    ⲆᐃⲆΔΔ: 55,
    ⵠᐃᐃᐃⵠ: 56,
    ⲆᐃΔΔⵠ: 57,
    ⵠΔⵠⵠᐃ: 58,
    ⲆᐃⲆᐃΔ: 59,
    ⵠⵠΔᐃⵠ: 60,
    ᐃΔⲆΔᐃ: 61,
    ⵠⲆⵠΔΔ: 62,
    ⵠⲆΔΔᐃ: 63,
    ⵠⲆⵠⲆᐃ: 64,
    ᐃⵠⵠᐃⵠ: 65,
    ⵠᐃΔⵠΔ: 66,
    ⵠΔⵠΔⲆ: 67,
    ᐃΔⵠΔⵠ: 68,
    ᐃΔⵠΔΔ: 69,
    Ⲇⵠᐃⵠᐃ: 70,
    ᐃⲆⲆⵠⲆ: 71,
    ᐃⲆᐃΔⵠ: 72,
    ΔⵠⲆΔⲆ: 73,
    ᐃⵠⵠⵠΔ: 74,
    ⵠⵠⵠⵠⲆ: 75,
    ⵠᐃⲆᐃᐃ: 76,
    ᐃⲆΔⵠⲆ: 77,
    ΔΔⵠᐃΔ: 78,
    ΔΔⲆⵠΔ: 79,
    ᐃΔⲆⲆᐃ: 80,
    ⵠⵠⵠⵠΔ: 81,
    ⵠΔΔⲆᐃ: 82,
    ⲆᐃᐃΔⲆ: 83,
    ΔⵠⲆΔⵠ: 84,
    ⲆⲆᐃΔΔ: 85,
    ᐃⲆⵠᐃΔ: 86,
    ⵠⲆΔᐃᐃ: 87,
    Δᐃᐃᐃⵠ: 88,
    ΔᐃⲆᐃΔ: 89,
    Ⲇᐃⵠᐃⵠ: 90,
    ΔⲆⵠᐃⵠ: 91,
    ΔΔᐃⵠⵠ: 92,
    ⲆⵠΔⲆⵠ: 93,
    ⵠᐃⲆⵠⵠ: 94,
    ⵠⲆΔᐃⵠ: 95,
    ᐃᐃⵠᐃΔ: 96,
    ᐃⲆᐃⲆⵠ: 97,
    ⵠΔⵠⲆⲆ: 98,
    ᐃᐃⲆᐃⲆ: 99,
    ΔᐃΔⲆⵠ: 100,
    ᐃⵠᐃΔⲆ: 101,
    ᐃΔⲆΔΔ: 102,
    ⲆΔⲆΔΔ: 103,
    ⵠᐃᐃΔⵠ: 104,
    ⵠⵠⲆᐃᐃ: 105,
    ⵠΔᐃᐃᐃ: 106,
    ΔⵠⵠᐃΔ: 107,
    ⵠⲆᐃⵠⵠ: 108,
    Δⵠᐃⵠᐃ: 109,
    ᐃᐃΔᐃⵠ: 110,
    ᐃΔΔⲆΔ: 111,
    ΔᐃⵠⵠΔ: 112,
    ⲆᐃⵠⲆⵠ: 113,
    ΔⵠΔⲆⵠ: 114,
    ⲆⵠΔⵠⲆ: 115,
    ⲆⲆᐃΔⵠ: 116,
    ⲆⲆⲆΔᐃ: 117,
    ⲆⲆⵠΔᐃ: 118,
    ⲆᐃΔⲆΔ: 119,
    ⵠⵠΔⵠⵠ: 120,
    ⲆⵠᐃΔⲆ: 121,
    ΔᐃⲆⲆΔ: 122,
    ᐃΔᐃΔΔ: 123,
    ⲆΔⲆΔᐃ: 124,
    ⵠⲆⵠⵠᐃ: 125,
    ᐃⵠᐃⵠΔ: 126,
    ΔᐃⲆⵠⵠ: 127,
    ⲆⵠⵠⲆⵠ: 128,
    ΔΔΔⵠΔ: 129,
    ΔⲆⲆⲆᐃ: 130,
    ΔᐃⲆⵠⲆ: 131,
    ᐃⲆⲆⵠᐃ: 132,
    ᐃⵠⲆⲆⲆ: 133,
    ΔⲆᐃⲆΔ: 134,
    ΔⵠⲆΔᐃ: 135,
    ⲆⲆᐃΔⲆ: 136,
    ⵠᐃΔΔⲆ: 137,
    ⵠᐃⲆΔⵠ: 138,
    ΔΔⵠᐃⲆ: 139,
    ⵠΔⲆΔⵠ: 140,
    ⵠⲆᐃΔⲆ: 141,
    ᐃⵠⲆΔⵠ: 142,
    ⵠⵠΔᐃΔ: 143,
    ΔⵠᐃⲆᐃ: 144,
    ΔΔᐃⵠΔ: 145,
    ᐃᐃⲆΔΔ: 146,
    ⵠⲆⲆⲆⵠ: 147,
    ᐃΔⵠΔᐃ: 148,
    ᐃΔΔᐃⲆ: 149,
    ᐃᐃⵠᐃⲆ: 150,
    ⲆᐃΔᐃⲆ: 151,
    ⲆⲆⵠᐃⵠ: 152,
    ΔΔᐃΔᐃ: 153,
    Ⲇᐃᐃⵠⵠ: 154,
    ΔΔᐃⲆᐃ: 155,
    ⲆΔⲆⲆⲆ: 156,
    ΔⵠⲆΔΔ: 157,
    ᐃΔⵠΔⲆ: 158,
    ⲆᐃᐃⲆᐃ: 159,
    ⵠΔᐃΔᐃ: 160,
    ⵠΔΔᐃⲆ: 161,
    ⵠᐃⲆⲆΔ: 162,
    ⵠᐃΔΔΔ: 163,
    ⵠᐃⲆᐃⲆ: 164,
    ΔⲆΔⵠⲆ: 165,
    ⵠⵠⵠᐃⲆ: 166,
    ⲆᐃⵠΔΔ: 167,
    ᐃⲆΔⵠᐃ: 168,
    ᐃⲆⵠⵠⵠ: 169,
    ᐃᐃᐃΔΔ: 170,
    ᐃⲆⵠᐃⵠ: 171,
    ΔⵠⲆⵠᐃ: 172,
    ΔΔⲆΔᐃ: 173,
    ⵠⲆⵠᐃⵠ: 174,
    ᐃᐃⲆᐃΔ: 175,
    ⵠⲆΔᐃΔ: 176,
    ⵠⲆⵠⵠⵠ: 177,
    ᐃⲆᐃⲆᐃ: 178,
    ⵠΔⲆⲆⲆ: 179,
    ⵠΔᐃᐃⵠ: 180,
    ⲆⲆᐃᐃΔ: 181,
    ⲆⵠΔᐃⵠ: 182,
    Δⵠᐃᐃᐃ: 183,
    ⵠΔⲆⲆΔ: 184,
    ΔᐃⲆⲆⵠ: 185,
    ᐃΔⵠᐃⲆ: 186,
    ΔⲆᐃᐃᐃ: 187,
    ⲆΔᐃⵠΔ: 188,
    ⲆᐃΔᐃΔ: 189,
    ⵠⵠᐃⲆⲆ: 190,
    ᐃΔⲆᐃΔ: 191,
    ⲆⲆⲆΔⵠ: 192,
    ⵠⵠⲆᐃⲆ: 193,
    ⵠΔⲆΔᐃ: 194,
    ᐃⲆⲆⵠⵠ: 195,
    ᐃⵠⵠᐃΔ: 196,
    ⵠⲆⲆⵠⵠ: 197,
    ΔΔⵠΔⲆ: 198,
    ⵠᐃⵠᐃ: 199,
    ᐃⲆⵠⵠ: 200,
    ΔⵠᐃⲆⵠ: 201,
    ᐃⵠΔⵠ: 202,
    Ⲇᐃⵠᐃ: 203,
    ΔᐃΔᐃⲆ: 204,
    ΔᐃΔΔⵠ: 205,
    ᐃⲆⲆᐃᐃ: 206,
    ⵠΔᐃᐃΔ: 207,
    ᐃⲆᐃᐃΔ: 208,
    ΔΔⲆᐃᐃ: 209,
    ΔΔⲆᐃⵠ: 210,
    ⲆᐃⲆⲆⵠ: 211,
    ᐃⲆⵠⲆ: 212,
    ⵠΔⲆⲆᐃ: 213,
    ᐃᐃᐃᐃΔ: 214,
    ⲆⵠⵠⲆΔ: 215,
    ⵠᐃΔΔⵠ: 216,
    ᐃⵠᐃⲆⲆ: 217,
    ⲆⲆⵠⵠⵠ: 218,
    ᐃⲆⲆᐃⲆΔᐃ: 219,
    ᐃⲆⵠⵠΔΔᐃ: 220,
    ᐃⵠⵠᐃⲆ: 221,
    ΔΔⲆΔΔ: 222,
    ᐃΔⲆⲆⵠ: 223,
    ΔΔΔⲆⵠ: 224,
    ΔⲆⵠᐃⲆ: 225,
    ᐃᐃΔⵠΔ: 226,
    ⲆΔⵠᐃⵠ: 227,
    Ⲇᐃᐃⵠᐃ: 228,
    ΔᐃᐃⵠΔ: 229,
    ΔⵠⵠⵠⲆ: 230,
    ⵠⵠⲆΔΔ: 231,
    ᐃΔΔⲆⲆ: 232,
    ᐃᐃⵠΔⲆ: 233,
    ⵠⵠΔⲆⲆ: 234,
    ⲆⵠⲆⵠⲆ: 235,
    ΔⵠⲆⵠⵠ: 236,
    ⵠΔⲆⵠΔ: 237,
    ΔᐃⵠᐃⲆ: 238,
    ⲆⲆⵠⵠΔ: 239,
    ⲆⵠⲆᐃⲆ: 240,
    ΔⲆⲆⲆⵠ: 241,
    ⵠⲆⲆⲆΔ: 242,
    ⵠΔⵠⵠⲆ: 243,
    ᐃⵠⵠⲆᐃ: 244,
    ⲆΔⵠⲆΔ: 245,
    ⵠΔⵠΔⵠ: 246,
    ΔΔⲆⵠⵠ: 247,
    ⲆΔΔΔᐃ: 248,
    ᐃⵠⲆⵠᐃ: 249,
    ᐃᐃⵠΔⵠ: 250,
    ΔΔⲆᐃΔ: 251,
    ⵠⵠⲆⵠᐃ: 252,
    ᐃⲆΔΔⵠ: 253,
    ⵠᐃⵠⵠⲆ: 254,
    ⵠⲆⲆᐃΔ: 255,
    ⵠⵠⲆⲆⵠ: 256,
    ⵠᐃΔᐃΔ: 257,
    ⲆᐃΔⵠⲆ: 258,
    ΔⲆᐃᐃⵠ: 259,
    ᐃᐃᐃᐃⵠ: 260,
    ΔⵠᐃᐃⲆ: 261,
    ΔⲆⲆΔᐃ: 262,
    ⲆⲆΔΔᐃ: 263,
    ΔⵠⲆⵠⲆ: 264,
    ᐃΔᐃΔⵠ: 265,
    ᐃΔᐃⵠⲆ: 266,
    ᐃᐃΔᐃᐃ: 267,
    ΔΔᐃΔⲆ: 268,
    ⵠⲆⵠⲆⵠ: 269,
    ⲆᐃⲆⵠᐃ: 270,
    ᐃⲆᐃΔᐃ: 271,
    ⵠⲆᐃⲆⲆ: 272,
    ΔΔⵠⵠⲆ: 273,
    ΔⵠⲆⲆᐃ: 274,
    ᐃⲆⲆⲆⲆ: 275,
    ᐃᐃⲆⵠⲆ: 276,
    ΔⲆⵠᐃΔ: 277,
    ⵠᐃΔⲆᐃ: 278,
    ΔⲆⵠᐃᐃ: 279,
    ΔᐃⲆⵠᐃ: 280,
    Ⲇⵠⵠᐃⵠ: 281,
    ᐃⲆΔⵠΔ: 282,
    ᐃⵠⲆᐃⲆ: 283,
    ⵠᐃⵠΔⵠ: 284,
    ΔⵠᐃΔⵠ: 285,
    ΔΔᐃⲆΔ: 286,
    ⵠⵠᐃⵠᐃ: 287,
    ⲆⲆⲆᐃⵠ: 288,
    ᐃᐃⵠᐃⵠ: 289,
    ⲆⲆΔΔⲆ: 290,
    ⲆᐃΔⲆᐃ: 291,
    ᐃΔΔΔⵠ: 292,
    ᐃΔⵠⵠⲆ: 293,
    ⵠⵠⵠⵠᐃ: 294,
    ⵠⲆⵠΔᐃ: 295,
    ⵠΔᐃⲆᐃ: 296,
    ΔΔⲆΔⵠ: 297,
    ⲆᐃⲆⲆᐃ: 298,
    ΔΔⵠⲆⲆ: 299,
    ᐃⲆⲆΔΔ: 300,
    ΔⲆᐃΔᐃ: 301,
    ⵠΔⲆᐃⲆ: 302,
    ⲆᐃⵠΔᐃ: 303,
    ᐃⲆⲆⲆ: 304,
    ⵠᐃᐃⲆᐃ: 305,
    ⵠⲆᐃⲆΔ: 306,
    ᐃⲆᐃᐃⲆ: 307,
    ⲆⵠⵠⲆⲆ: 308,
    ⲆΔΔᐃⵠ: 309,
    ΔΔΔⵠⵠ: 310,
    Δᐃⵠᐃᐃ: 311,
    ⵠⲆⲆⵠΔ: 312,
    ᐃⲆΔⲆⲆ: 313,
    ⵠⵠⵠᐃᐃ: 314,
    ᐃⲆⵠⵠᐃ: 315,
    ΔᐃΔⲆⲆ: 316,
    Ⲇⵠᐃᐃᐃ: 317,
    ᐃΔΔΔⲆ: 318,
    ⵠⲆΔⲆᐃ: 319,
    ᐃⲆΔΔΔ: 320,
    ᐃⵠΔⲆΔ: 321,
    ᐃⵠᐃⲆⵠ: 322,
    ᐃᐃⵠᐃᐃ: 323,
    ᐃΔΔᐃΔ: 324,
    ⲆⲆΔΔⵠ: 325,
    ⲆⵠᐃⲆⲆ: 326,
    ᐃⵠΔⲆⵠ: 327,
    ΔᐃᐃⲆⵠ: 328,
    ᐃᐃⵠⵠⵠ: 329,
    ⲆⵠⲆⲆⵠ: 330,
    ⲆΔⵠΔⲆ: 331,
    Δᐃⵠᐃⵠ: 332,
    ⵠᐃⵠⲆᐃ: 333,
    ΔⵠᐃΔᐃ: 334,
    ᐃΔΔⲆᐃ: 335,
    ⲆᐃᐃⲆⲆ: 336,
    ᐃΔⵠᐃⵠ: 337,
    ᐃᐃᐃᐃⲆ: 338,
    ΔΔΔⵠᐃ: 339,
    ᐃⵠⵠⵠⵠ: 340,
    ᐃΔᐃⵠᐃ: 341,
    ΔⲆᐃΔⵠ: 342,
    ⲆⲆⵠΔⲆ: 343,
    ΔⲆᐃⵠⵠ: 344,
    ᐃᐃⵠⵠᐃᐃᐃ: 345,
    ⵠⲆⵠⵠⵠⲆᐃ: 346,
    ΔⲆⲆΔⵠ: 347,
    ⵠΔⵠᐃⵠΔᐃ: 348,
    ΔᐃⲆΔⲆ: 349,
    ⵠΔΔⲆⵠ: 350,
    ⵠⵠⵠⲆⲆⲆᐃ: 351,
    ΔΔΔΔΔⵠⵠ: 352,
    ΔΔⲆΔΔⵠᐃ: 353,
    ΔΔᐃⲆⵠ: 354,
    ⲆⵠⲆΔⲆ: 355,
    ᐃΔΔⵠΔ: 356,
    ⵠⲆΔⵠⲆ: 357,
    ΔⲆⵠⲆⲆ: 358
  };
  var v596 = {
    ⵠᐃᐃᐃⲆ: 1,
    ᐃⲆⲆⲆᐃ: 0,
    ⵠⲆΔⲆΔ: 2,
    ⲆⵠⲆᐃΔ: 3,
    ΔᐃΔᐃᐃ: 5,
    ΔΔⲆᐃⲆ: 4
  };
  const v597 = 1;
  const v598 = 17;
  const v599 = 0;
  var vVVUndefined162 = vVUndefined16;
  const v600 = 19;
  var v601 = [66, 80, 81, 73, 79, 72, 242, 103, 0, 5, 6, 48, 28, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 9, 13, 12, 14, 15, 60, 61, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 165, 166, 8, 1, 3, 4, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 99, 100];
  const vVVVUndefined1422 = vVVUndefined142;
  var v602 = [];
  const v603 = 1;
  v602[200] = {
    name: "Wood",
    ⵠⵠ: 427,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[199] = {
    name: "Stone",
    ⵠⵠ: 426,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[202] = {
    name: "Gold",
    ⵠⵠ: 408,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[203] = {
    name: "Diamond",
    ⵠⵠ: 409,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[212] = {
    name: "Amethyst",
    ⵠⵠ: 529,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[2] = {
    name: "Rabbit fur",
    ⵠⵠ: 479,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[276] = {
    name: "Wolf fur",
    ⵠⵠ: 504,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[347] = {
    name: "Boar fur",
    ⵠⵠ: 1490,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v604 = String.fromCharCode;
  const vV604 = v604(101);
  const vV6042 = v604(118);
  const vV6043 = v604(97);
  const vV6044 = v604(108);
  v602[182] = {
    name: "Firefly",
    ⵠⵠ: 1492,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v605 = 18;
  const v606 = 0;
  const v607 = {};
  v607.get = function (p484, p485) {
    if (p485 !== "ᐃᐃⵠⲆΔΔΔⲆⵠ") {
      const vF35 = function () {
        vWindow.addEventListener("mousemove", function () {
          vF35();
        });
      };
      vF35();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v602[183] = {
    name: "Wood arrow",
    ⵠⵠ: 1494,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v608 = 10;
  v602[184] = {
    name: "Stone arrow",
    ⵠⵠ: 1497,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[185] = {
    name: "Gold arrow",
    ⵠⵠ: 1500,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[186] = {
    name: "Diamond arrow",
    ⵠⵠ: 1503,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v609 = 2;
  v602[187] = {
    name: "Amethyst arrow",
    ⵠⵠ: 1506,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v610 = 20;
  v602[188] = {
    name: "Reidite arrow",
    ⵠⵠ: 1509,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v611 = 100;
  v602[189] = {
    name: "Dragon arrow",
    ⵠⵠ: 1512,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v612 = 100;
  const v613 = 15;
  v602[190] = {
    name: "Emerald arrow",
    ⵠⵠ: 1515,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[191] = {
    name: "Copper arrow",
    ⵠⵠ: 1518,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[192] = {
    name: "Iron arrow",
    ⵠⵠ: 1521,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[193] = {
    name: "Topaz arrow",
    ⵠⵠ: 1524,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v614 = 19;
  v602[194] = {
    name: "Sapphire arrow",
    ⵠⵠ: 1527,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[195] = {
    name: "Jade arrow",
    ⵠⵠ: 1530,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[196] = {
    name: "Ruby arrow",
    ⵠⵠ: 1533,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v615 = 12;
  v602[197] = {
    name: "Coal arrow",
    ⵠⵠ: 1536,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[198] = {
    name: "Aquamarine arrow",
    ⵠⵠ: 1539,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[239] = {
    name: "Winter fur",
    ⵠⵠ: 643,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[350] = {
    name: "Fur mammoth",
    ⵠⵠ: 1624,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[263] = {
    name: "Web",
    ⵠⵠ: 416,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[207] = {
    name: "Meat",
    ⵠⵠ: 411,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[230] = {
    name: "Fish",
    ⵠⵠ: 881,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[222] = {
    name: "Kraken skin",
    ⵠⵠ: 843,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v616 = 10;
  const vVVV1622 = vVV1622;
  v602[232] = {
    name: "Piranha scales",
    ⵠⵠ: 893,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[235] = {
    name: "Ice",
    ⵠⵠ: 235,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[217] = {
    name: "Sand",
    ⵠⵠ: 828,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v617 = 16;
  v602[233] = {
    name: "Dirt",
    ⵠⵠ: 233,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const vVVUndefined163 = vVUndefined16;
  v602[201] = {
    name: "Berry",
    ⵠⵠ: 387,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[v595.ᐃⵠⵠⵠΔⲆᐃ] = {
    name: "Banana",
    ⵠⵠ: v594.ᐃⵠⲆᐃⲆⲆⲆΔⲆ,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[224] = {
    name: "Flour",
    ⵠⵠ: 848,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const vV124 = v12;
  v602[227] = {
    name: "Flour",
    ⵠⵠ: 858,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v618 = 255;
  const v619 = 3;
  v602[280] = {
    name: "Special fur peasant",
    ⵠⵠ: 280,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[281] = {
    name: "Special fur hood",
    ⵠⵠ: 281,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v620 = 8;
  const v621 = 100;
  const vVVVV1223 = vVVV1223;
  v602[291] = {
    name: "Pumpkin",
    ⵠⵠ: 1063,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[294] = {
    name: "Garlic",
    ⵠⵠ: 1089,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[296] = {
    name: "Thornbush",
    ⵠⵠ: 1099,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[315] = {
    name: "Carrot",
    ⵠⵠ: 1231,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[317] = {
    name: "Tomato",
    ⵠⵠ: 1241,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v622 = 18;
  v602[319] = {
    name: "Watermelon",
    ⵠⵠ: 1248,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[321] = {
    name: "Aloe Vera",
    ⵠⵠ: 1263,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[332] = {
    name: "Penguin Feather",
    ⵠⵠ: 1343,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v623 = 14;
  const v624 = 0;
  v602[341] = {
    name: "Hawk Feather",
    ⵠⵠ: 1345,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[342] = {
    name: "Vulture Feather",
    ⵠⵠ: 1347,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[343] = {
    name: "Cactus",
    ⵠⵠ: 1482,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v625 = 15;
  v602[346] = {
    name: "Cactus",
    ⵠⵠ: 1488,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[345] = {
    name: "Pitchfork Part",
    ⵠⵠ: 1486,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[348] = {
    name: "Emerald Machine",
    ⵠⵠ: 1542,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v626 = 20;
  v602[344] = {
    name: "Emerald",
    ⵠⵠ: 1484,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[68] = {
    name: "Christmas Hat",
    ⵠⵠ: 1156,
    ᐃⲆᐃ: 0
  };
  const vVVVVVUndefined173 = vVVVVUndefined173;
  var v627 = vWindow.Math.acos;
  vWindow.Math.acos = vWindow.Math.asin;
  vWindow.Math.asin = v627;
  var v628 = vWindow.Math.cos;
  vWindow.Math.cos = vWindow.Math.sin;
  vWindow.Math.sin = v628;
  v602[69] = {
    name: "Elf Hat",
    ⵠⵠ: 1158,
    ᐃⲆᐃ: 0
  };
  v602[303] = {
    name: "Garland",
    ⵠⵠ: 1119,
    ᐃⲆᐃ: 0,
    ⵠⲆᐃ: 0
  };
  v602[302] = {
    name: "Candy",
    ⵠⵠ: 302,
    ᐃⲆᐃ: 0
  };
  v602[301] = {
    name: "Sugar Cane",
    ⵠⵠ: 1114,
    ᐃⲆᐃ: 0
  };
  const vVVVV12232 = vVVV1223;
  const v629 = 0;
  const v630 = 1;
  v602[9] = {
    name: "Pirate Sword",
    ⵠⵠ: 1109,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[298] = {
    name: "Crab Stick",
    ⵠⵠ: 298,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[304] = {
    name: "Reidite",
    ⵠⵠ: 1214,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const vVVVVUndefined1722 = vVVVUndefined172;
  v602[305] = {
    name: "Flame",
    ⵠⵠ: 1212,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[204] = {
    name: "Campfire",
    ⵠⵠ: 413,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[300] = {
    name: "Bed",
    ⵠⵠ: 1185,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v631 = 8;
  v602[205] = {
    name: "Workbench",
    ⵠⵠ: 372,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[0] = {
    name: "Stone sword",
    ⵠⵠ: 364,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v632 = 18;
  v602[1] = {
    name: "Stone pick",
    ⵠⵠ: 366,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[206] = {
    name: "Berries bush",
    ⵠⵠ: 394,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[3] = {
    name: "Gold pick",
    ⵠⵠ: 406,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v633 = 10;
  v602[4] = {
    name: "Diamond pick",
    ⵠⵠ: 367,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  function f66(p486) {
    if (p486 > 0) {
      return p486 * p486;
    } else {
      return p486;
    }
  }
  function f67(p487) {
    return vWindow.String.fromCharCode(p487);
  }
  v602[103] = {
    name: "Wood sword",
    ⵠⵠ: 1079,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVV1623 = vVV1623;
  v602[5] = {
    name: "Gold sword",
    ⵠⵠ: 400,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v634 = 17;
  v602[6] = {
    name: "Diamond sword",
    ⵠⵠ: 401,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[8] = {
    name: "Wood pick",
    ⵠⵠ: 425,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[264] = {
    name: "Wood wall",
    ⵠⵠ: 429,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[262] = {
    name: "Wood spike",
    ⵠⵠ: 431,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v635 = 2;
  const vVVV12222 = vVV1222;
  v602[208] = {
    name: "Cooked meat",
    ⵠⵠ: 436,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[209] = {
    name: "Big campfire",
    ⵠⵠ: 438,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[297] = {
    name: "Bandage",
    ⵠⵠ: 415,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[265] = {
    name: "Stone wall",
    ⵠⵠ: 373,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[266] = {
    name: "Gold wall",
    ⵠⵠ: 375,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v636 = 255;
  v602[267] = {
    name: "Diamond wall",
    ⵠⵠ: 443,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[268] = {
    name: "Wood door",
    ⵠⵠ: 378,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[269] = {
    name: "Chest",
    ⵠⵠ: 449,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[270] = {
    name: "Stone spike",
    ⵠⵠ: 471,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v637 = 16;
  const v638 = 15;
  v602[271] = {
    name: "Gold spike",
    ⵠⵠ: 474,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v639 = 12;
  const vVVVV12222 = vVVV12222;
  function f68(p488) {
    return vWindow.String.fromCharCode(p488);
  }
  (function () {
    const v640 = {
      ᐃΔⵠΔⲆⲆᐃ: 3757200,
      ⲆΔⵠⵠ: 12622855,
      ⲆⲆⲆⲆᐃΔΔ: 1232837,
      ⵠΔⵠⵠᐃᐃⵠ: 2594799
    };
  })();
  const v641 = 100;
  const vVV164 = vV16;
  v602[272] = {
    name: "Diamond spike",
    ⵠⵠ: 476,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v642 = 255;
  v602[273] = {
    name: "Stone door",
    ⵠⵠ: 482,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[274] = {
    name: "Gold door",
    ⵠⵠ: 485,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[275] = {
    name: "Diamond door",
    ⵠⵠ: 488,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[10] = {
    name: "Chapka",
    ⵠⵠ: 481,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v643 = 12;
  v602[11] = {
    name: "Big Chapka",
    ⵠⵠ: 491,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[12] = {
    name: "Wood spear",
    ⵠⵠ: 513,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[13] = {
    name: "Stone spear",
    ⵠⵠ: 507,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[14] = {
    name: "Gold spear",
    ⵠⵠ: 510,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[15] = {
    name: "Diamond spear",
    ⵠⵠ: 516,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v644 = 1;
  v602[16] = {
    name: "Dragon spear",
    ⵠⵠ: 1125,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[17] = {
    name: "Dragon spear",
    ⵠⵠ: 1128,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[18] = {
    name: "Crab spear",
    ⵠⵠ: 1176,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v645 = 2;
  v602[19] = {
    name: "Emerald spear",
    ⵠⵠ: 1131,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[20] = {
    name: "Copper spear",
    ⵠⵠ: 1134,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v646 = 16;
  v602[21] = {
    name: "Iron spear",
    ⵠⵠ: 1137,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[22] = {
    name: "Topaz spear",
    ⵠⵠ: 1140,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  function f69(p489) {
    if (p489 > 0) {
      return p489 * p489;
    } else {
      return p489;
    }
  }
  function f70(p490) {
    return vWindow.String.fromCharCode(p490);
  }
  const v647 = 20;
  const vVVVV1222 = vVVV1222;
  v602[23] = {
    name: "Sapphire spear",
    ⵠⵠ: 1143,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[24] = {
    name: "Jade spear",
    ⵠⵠ: 1146,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[25] = {
    name: "Ruby spear",
    ⵠⵠ: 1149,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[26] = {
    name: "Coal spear",
    ⵠⵠ: 1152,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[27] = {
    name: "Aquamarine spear",
    ⵠⵠ: 1155,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[299] = {
    name: "Crab loot",
    ⵠⵠ: 299,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[210] = {
    name: "Furnace",
    ⵠⵠ: 520,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[32] = {
    name: "Explorer hat",
    ⵠⵠ: 532,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[33] = {
    name: "Pirate hat",
    ⵠⵠ: 535,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v648 = 20;
  v602[160] = {
    name: "Flower hat",
    ⵠⵠ: 1619,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[161] = {
    name: "Fur hat",
    ⵠⵠ: 1622,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[104] = {
    name: "Wood helmet",
    ⵠⵠ: 1076,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[34] = {
    name: "Stone helmet",
    ⵠⵠ: 541,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[35] = {
    name: "Gold helmet",
    ⵠⵠ: 544,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v649 = 1;
  const v650 = 15;
  v602[36] = {
    name: "Diamond helmet",
    ⵠⵠ: 547,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[37] = {
    name: "Emerald helmet",
    ⵠⵠ: 550,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v651 = 15;
  v602[38] = {
    name: "Copper helmet",
    ⵠⵠ: 553,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[39] = {
    name: "Iron helmet",
    ⵠⵠ: 556,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v652 = 11;
  v602[40] = {
    name: "Topaz helmet",
    ⵠⵠ: 559,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[41] = {
    name: "Sapphire helmet",
    ⵠⵠ: 562,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v653 = 16;
  v602[42] = {
    name: "Jade helmet",
    ⵠⵠ: 565,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v654 = 4;
  v602[43] = {
    name: "Ruby helmet",
    ⵠⵠ: 568,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[44] = {
    name: "Coal helmet",
    ⵠⵠ: 571,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[45] = {
    name: "Aquamarine helmet",
    ⵠⵠ: 574,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v655 = 0;
  v602[46] = {
    name: "Book",
    ⵠⵠ: 577,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[211] = {
    name: "Paper",
    ⵠⵠ: 580,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const vVVV16222 = vVV1622;
  v602[47] = {
    name: "Bag",
    ⵠⵠ: 478,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v656 = 10;
  v602[48] = {
    name: "Amethyst sword",
    ⵠⵠ: 594,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v657 = 8;
  v602[49] = {
    name: "Amethyst pick",
    ⵠⵠ: 598,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[60] = {
    name: "Amethyst spear",
    ⵠⵠ: 611,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v658 = 11;
  v602[62] = {
    name: "Stone hammer",
    ⵠⵠ: 616,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v659 = 100;
  v602[63] = {
    name: "Gold hammer",
    ⵠⵠ: 619,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[64] = {
    name: "Diamond hammer",
    ⵠⵠ: 622,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[65] = {
    name: "Amethyst hammer",
    ⵠⵠ: 625,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v660 = 255;
  v602[66] = {
    name: "Reidite hammer",
    ⵠⵠ: 628,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVV16223 = vVV1622;
  v602[213] = {
    name: "Amethyst wall",
    ⵠⵠ: 631,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[214] = {
    name: "Amethyst spike",
    ⵠⵠ: 634,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[215] = {
    name: "Amethyst door",
    ⵠⵠ: 636,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[67] = {
    name: "Cap & scarf",
    ⵠⵠ: 641,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[240] = {
    name: "Blue cord",
    ⵠⵠ: 653,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[241] = {
    name: "Lock",
    ⵠⵠ: 657,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[244] = {
    name: "Resurrection",
    ⵠⵠ: 668,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[260] = {
    name: "Lockpick",
    ⵠⵠ: 671,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v661 = 255;
  const v662 = 4;
  v602[261] = {
    name: "Totem",
    ⵠⵠ: 720,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[70] = {
    name: "Amethyst helmet",
    ⵠⵠ: 680,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[72] = {
    name: "Super hammer",
    ⵠⵠ: 689,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[v595.ⲆᐃᐃⲆⲆⲆᐃᐃΔ] = {
    name: "Super hammer",
    ⵠⵠ: v594.ⵠΔⲆⵠⲆΔⲆΔⲆ,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v663 = 12;
  v602[73] = {
    name: "Emerald hammer",
    ⵠⵠ: 692,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[74] = {
    name: "Copper hammer",
    ⵠⵠ: 695,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v664 = 1;
  v602[75] = {
    name: "Iron hammer",
    ⵠⵠ: 698,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v665 = 2;
  v602[76] = {
    name: "Topaz hammer",
    ⵠⵠ: 701,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[77] = {
    name: "Sapphire hammer",
    ⵠⵠ: 704,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v666 = 20;
  v602[78] = {
    name: "Jade hammer",
    ⵠⵠ: 707,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVVVV12232 = vVVVV12232;
  v602[79] = {
    name: "Ruby hammer",
    ⵠⵠ: 710,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v667 = 20;
  v602[80] = {
    name: "Coal hammer",
    ⵠⵠ: 713,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[81] = {
    name: "Aquamarine hammer",
    ⵠⵠ: 716,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[216] = {
    name: "Bridge",
    ⵠⵠ: 823,
    ⵠⲆᐃ: 1,
    ᐃⲆᐃ: 1
  };
  v602[331] = {
    name: "Wood Tower",
    ⵠⵠ: 1626,
    ⵠⲆᐃ: 1,
    ᐃⲆᐃ: 1
  };
  v602[218] = {
    name: "Bottle full",
    ⵠⵠ: 964,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[221] = {
    name: "Bottle empty",
    ⵠⵠ: 830,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[82] = {
    name: "Stone shovel",
    ⵠⵠ: 837,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v668 = 2;
  v602[223] = {
    name: "Watering can",
    ⵠⵠ: 846,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[225] = {
    name: "Wheat",
    ⵠⵠ: 851,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[226] = {
    name: "Cookie",
    ⵠⵠ: 854,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v669 = 12;
  v602[228] = {
    name: "Windmill",
    ⵠⵠ: 862,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v670 = 15;
  const v671 = 2679530;
  const v672 = 2679530 .ᐃⵠⲆΔΔΔⲆ;
  const v673 = `const ⲆᐃᐃⲆᐃⵠᐃⲆⵠ = (typeof ⲆᐃⵠᐃΔⲆᐃ === "${v672}") ? 1 : 0; return ⲆᐃᐃⲆᐃⵠᐃⲆⵠ;`;
  const v674 = 12;
  v602[83] = {
    name: "Super diving suit",
    ⵠⵠ: 866,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[84] = {
    name: "Diving mask",
    ⵠⵠ: 869,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVVVV1222 = vVVVV1222;
  v602[85] = {
    name: "Watering can full",
    ⵠⵠ: 873,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[229] = {
    name: "Cake",
    ⵠⵠ: 879,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v675 = 10;
  const v676 = 3;
  const v677 = 11;
  const v678 = 17;
  v602[231] = {
    name: "Foodfish cooked",
    ⵠⵠ: 885,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[234] = {
    name: "Plot",
    ⵠⵠ: 903,
    ⵠⲆᐃ: 1,
    ᐃⲆᐃ: 1
  };
  v602[236] = {
    name: "Bread",
    ⵠⵠ: 909,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[219] = {
    name: "Bottle full (with ice)",
    ⵠⵠ: v594.ΔᐃΔⲆΔᐃΔⵠⵠ,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v679 = 16;
  v602[220] = {
    name: "Bottle full (with well)",
    ⵠⵠ: v594.ⵠᐃⵠΔⲆⲆᐃⲆⵠ,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[86] = {
    name: "Gold shovel",
    ⵠⵠ: 919,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[87] = {
    name: "Diamond shovel",
    ⵠⵠ: 923,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v680 = 255;
  v602[88] = {
    name: "Amethyst shovel",
    ⵠⵠ: 925,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[90] = {
    name: "Emerald shovel",
    ⵠⵠ: 928,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[91] = {
    name: "Copper shovel",
    ⵠⵠ: 931,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v681 = 2;
  v602[92] = {
    name: "Iron shovel",
    ⵠⵠ: 934,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[93] = {
    name: "Topaz shovel",
    ⵠⵠ: 937,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[94] = {
    name: "Sapphire shovel",
    ⵠⵠ: 940,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[95] = {
    name: "Jade shovel",
    ⵠⵠ: 943,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[96] = {
    name: "Ruby shovel",
    ⵠⵠ: 946,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v682 = 13;
  v602[97] = {
    name: "Coal shovel",
    ⵠⵠ: 949,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[98] = {
    name: "Aquamarine shovel",
    ⵠⵠ: 952,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[89] = {
    name: "Reidite shovel",
    ⵠⵠ: 955,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[101] = {
    name: "Spanner",
    ⵠⵠ: 960,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVV162 = vVV162;
  v602[102] = {
    name: "Machete",
    ⵠⵠ: 963,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[237] = {
    name: "Bread oven",
    ⵠⵠ: 967,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[238] = {
    name: "Sandwich",
    ⵠⵠ: 979,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[105] = {
    name: "Dragon helmet",
    ⵠⵠ: 983,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[106] = {
    name: "Dragon helmet",
    ⵠⵠ: 986,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v683 = {};
  v683.get = function (p491, p492) {
    if (p492 !== "ΔᐃⵠⲆⲆⲆⵠ") {
      const vF38 = function () {
        vWindow.addEventListener("mousemove", function () {
          vF38();
        });
      };
      vF38();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v602[163] = {
    name: "Witch",
    ⵠⵠ: 989,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v684 = 20;
  v602[164] = {
    name: "Nimbus",
    ⵠⵠ: 992,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v685 = 11;
  const v686 = 12;
  v602[165] = {
    name: "Wand1",
    ⵠⵠ: 995,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[166] = {
    name: "Wand2",
    ⵠⵠ: 998,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v687 = 10;
  v602[108] = {
    name: "Dragon sword",
    ⵠⵠ: 729,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[109] = {
    name: "Lava sword",
    ⵠⵠ: 732,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[110] = {
    name: "Emerald sword",
    ⵠⵠ: 735,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v688 = 0;
  v602[111] = {
    name: "Copper sword",
    ⵠⵠ: 738,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[112] = {
    name: "Iron sword",
    ⵠⵠ: 741,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[113] = {
    name: "Topaz sword",
    ⵠⵠ: 744,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[114] = {
    name: "Sapphire sword",
    ⵠⵠ: 747,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[115] = {
    name: "Jade sword",
    ⵠⵠ: 750,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[116] = {
    name: "Ruby sword",
    ⵠⵠ: 753,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v689 = 8;
  const v690 = 16;
  v602[117] = {
    name: "Coal sword",
    ⵠⵠ: 756,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[118] = {
    name: "Aquamarine sword",
    ⵠⵠ: 759,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[135] = {
    name: "Wood shield",
    ⵠⵠ: 1629,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[136] = {
    name: "Stone shield",
    ⵠⵠ: 1632,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[137] = {
    name: "Gold shield",
    ⵠⵠ: 1635,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[138] = {
    name: "Diamond shield",
    ⵠⵠ: 1638,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[139] = {
    name: "Amethyst shield",
    ⵠⵠ: 1641,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[140] = {
    name: "Reidite shield",
    ⵠⵠ: 1644,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[167] = {
    name: "Wood axe",
    ⵠⵠ: 1674,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[168] = {
    name: "Stone axe",
    ⵠⵠ: 1677,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  function f71(p493) {
    if (p493 > 0) {
      return p493 * p493;
    } else {
      return p493;
    }
  }
  function f72(p494) {
    return vWindow.String.fromCharCode(p494);
  }
  v602[169] = {
    name: "Gold axe",
    ⵠⵠ: 1680,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[170] = {
    name: "Diamond axe",
    ⵠⵠ: 1683,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[171] = {
    name: "Amethyst axe",
    ⵠⵠ: 1686,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[172] = {
    name: "Reidite axe",
    ⵠⵠ: 1689,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v691 = String.fromCharCode;
  const vV691 = v691(101);
  const vV6912 = v691(118);
  const vV6913 = v691(97);
  const vV6914 = v691(108);
  v602[173] = {
    name: "Emerald axe",
    ⵠⵠ: 1692,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v692 = 16;
  v602[174] = {
    name: "Copper axe",
    ⵠⵠ: 1695,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[175] = {
    name: "Iron axe",
    ⵠⵠ: 1698,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v693 = 8;
  const v694 = 20;
  const vVV165 = vV16;
  v602[176] = {
    name: "Topaz axe",
    ⵠⵠ: 1701,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[177] = {
    name: "Sapphire axe",
    ⵠⵠ: 1704,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[178] = {
    name: "Jade axe",
    ⵠⵠ: 1707,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[179] = {
    name: "Ruby axe",
    ⵠⵠ: 1710,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[180] = {
    name: "Coal axe",
    ⵠⵠ: 1713,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[181] = {
    name: "Aquamarine axe",
    ⵠⵠ: 1716,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  var v695 = vWindow.console;
  v695.log = v695.info = v695.error = v695.warn = v695.debug = v695.ΔΔΔⲆⲆⵠΔⲆᐃ = v695.trace = v695.time = v695.timeEnd = function () {};
  v602[119] = {
    name: "Wood bow",
    ⵠⵠ: 762,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[120] = {
    name: "Stone bow",
    ⵠⵠ: 765,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[121] = {
    name: "Gold bow",
    ⵠⵠ: 768,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[122] = {
    name: "Diamond bow",
    ⵠⵠ: 771,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v696 = 13;
  const v697 = 12;
  v602[123] = {
    name: "Amethyst bow",
    ⵠⵠ: 774,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[124] = {
    name: "Reidite bow",
    ⵠⵠ: 777,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[126] = {
    name: "Emerald bow",
    ⵠⵠ: 783,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v698 = 255;
  v602[127] = {
    name: "Copper bow",
    ⵠⵠ: 786,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[128] = {
    name: "Iron bow",
    ⵠⵠ: 789,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[129] = {
    name: "Topaz bow",
    ⵠⵠ: 792,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[130] = {
    name: "Sapphire bow",
    ⵠⵠ: 795,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[131] = {
    name: "Jade bow",
    ⵠⵠ: 798,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[132] = {
    name: "Ruby bow",
    ⵠⵠ: 801,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[133] = {
    name: "Coal bow",
    ⵠⵠ: 804,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[134] = {
    name: "Aquamarine bow",
    ⵠⵠ: 807,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v699 = 0;
  const v700 = 3;
  const v701 = 2;
  v602[125] = {
    name: "Dragon bow",
    ⵠⵠ: 780,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v702 = 16;
  v602[150] = {
    name: "Crown of life",
    ⵠⵠ: 1007,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[277] = {
    name: "Gem of life",
    ⵠⵠ: 278,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[287] = {
    name: "Orb of the dragon",
    ⵠⵠ: 362,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[289] = {
    name: "Orb of the dragon",
    ⵠⵠ: 363,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[286] = {
    name: "Cube of the dragon",
    ⵠⵠ: 1000,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v703 = 10;
  v602[288] = {
    name: "Cube of the dragon",
    ⵠⵠ: 1002,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[151] = {
    name: "Crown of luck",
    ⵠⵠ: 1011,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[278] = {
    name: "Gem of luck",
    ⵠⵠ: 279,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const vVVVV1623 = vVVV1623;
  v602[152] = {
    name: "Crown of the angel",
    ⵠⵠ: 1019,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[279] = {
    name: "Gem of the angel",
    ⵠⵠ: 277,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[242] = {
    name: "Dragon heart",
    ⵠⵠ: 659,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[243] = {
    name: "Lava heart",
    ⵠⵠ: 661,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[156] = {
    name: "Hood",
    ⵠⵠ: 1017,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[157] = {
    name: "Peasant",
    ⵠⵠ: 1021,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[159] = {
    name: "Winter peasant",
    ⵠⵠ: 1026,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[158] = {
    name: "Winter hood",
    ⵠⵠ: 1029,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[282] = {
    name: "Bucket full",
    ⵠⵠ: 1033,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[283] = {
    name: "Bucket empty",
    ⵠⵠ: 1034,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[284] = {
    name: "Well",
    ⵠⵠ: 1040,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[285] = {
    name: "Sign",
    ⵠⵠ: 1048,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v704 = 13;
  v602[290] = {
    name: "Pumpkin Seed",
    ⵠⵠ: 1058,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[293] = {
    name: "Garlic Seed",
    ⵠⵠ: 1084,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[295] = {
    name: "Thorbushes Seed",
    ⵠⵠ: 1095,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[292] = {
    name: "Roof",
    ⵠⵠ: 1092,
    ⵠⲆᐃ: 1,
    ᐃⲆᐃ: 1
  };
  const v705 = 12;
  const vV163 = v16;
  v602[107] = {
    name: "Crab Crown",
    ⵠⵠ: 1188,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[314] = {
    name: "Carrot Seed",
    ⵠⵠ: 1226,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[316] = {
    name: "Tomato Seed",
    ⵠⵠ: 1236,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[318] = {
    name: "Watermelon Seed",
    ⵠⵠ: 1243,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v706 = 20;
  v602[357] = {
    name: "Banana Seed",
    ⵠⵠ: 1741,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[320] = {
    name: "Aloe Vera Seed",
    ⵠⵠ: 1258,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[153] = {
    name: "Cap",
    ⵠⵠ: 1466,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[154] = {
    name: "Turban",
    ⵠⵠ: 1469,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[155] = {
    name: "Pilot Helmet",
    ⵠⵠ: 538,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v707 = 4;
  v602[245] = {
    name: "Emerald Machine",
    ⵠⵠ: 1551,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v708 = 15;
  v602[246] = {
    name: "Stone Extractor",
    ⵠⵠ: 1555,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[247] = {
    name: "Gold Extractor",
    ⵠⵠ: 1559,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[248] = {
    name: "Diamond Extractor",
    ⵠⵠ: 1563,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[249] = {
    name: "Amethyst Extractor",
    ⵠⵠ: 1567,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[250] = {
    name: "Reidite Extractor",
    ⵠⵠ: 1571,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[251] = {
    name: "Emerald Extractor",
    ⵠⵠ: 1575,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[252] = {
    name: "Copper Extractor",
    ⵠⵠ: 1579,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[253] = {
    name: "Iron Extractor",
    ⵠⵠ: 1583,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[254] = {
    name: "Topaz Extractor",
    ⵠⵠ: 1587,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[255] = {
    name: "Sapphire Extractor",
    ⵠⵠ: 1591,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[256] = {
    name: "Jade Extractor",
    ⵠⵠ: 1595,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[257] = {
    name: "Ruby Extractor",
    ⵠⵠ: 1599,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v709 = 15;
  v602[258] = {
    name: "Coal Extractor",
    ⵠⵠ: 1603,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[259] = {
    name: "Aquamarine Extractor",
    ⵠⵠ: 1607,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[99] = {
    name: "Pitchfork",
    ⵠⵠ: 1253,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[322] = {
    name: "Wood Door Spike",
    ⵠⵠ: 1266,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[323] = {
    name: "Stone Door Spike",
    ⵠⵠ: 1269,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[324] = {
    name: "Gold Door Spike",
    ⵠⵠ: 1272,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[325] = {
    name: "Diamond Door Spike",
    ⵠⵠ: 1275,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[326] = {
    name: "Amethyst Door Spike",
    ⵠⵠ: 1278,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v710 = 14;
  v602[29] = {
    name: "Diamond Fire Protection ",
    ⵠⵠ: 1198,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[30] = {
    name: "Amethyst Fire Protection ",
    ⵠⵠ: 1202,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[31] = {
    name: "Amethyst Fire Protection ",
    ⵠⵠ: 1206,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  function f73(p495) {
    return vWindow.String.fromCharCode(p495);
  }
  (function () {
    const v711 = {
      ΔⲆⲆⵠⲆⲆᐃ: 9455779,
      ΔⵠΔⵠΔΔΔΔΔ: 6911945,
      ⵠⵠΔⵠᐃⵠⲆΔΔ: 6699644,
      ᐃⵠΔΔⲆΔⵠ: 6842698
    };
  })();
  v602[28] = {
    name: "Reidite Sword",
    ⵠⵠ: 1209,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[61] = {
    name: "Reidite Spear",
    ⵠⵠ: 1220,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[71] = {
    name: "Reidite Helmet",
    ⵠⵠ: 1223,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v712 = 10;
  v602[330] = {
    name: "Reidite Door Spike",
    ⵠⵠ: 1281,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[328] = {
    name: "Reidite Door",
    ⵠⵠ: 1284,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[329] = {
    name: "Reidite Spike",
    ⵠⵠ: 1287,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[327] = {
    name: "Reidite Wall",
    ⵠⵠ: 1290,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[50] = {
    name: "Reidite pick",
    ⵠⵠ: 1295,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v713 = 15;
  v602[51] = {
    name: "Emerald pick",
    ⵠⵠ: 1298,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[52] = {
    name: "Copper pick",
    ⵠⵠ: 1301,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[53] = {
    name: "Iron pick",
    ⵠⵠ: 1304,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[54] = {
    name: "Topaz pick",
    ⵠⵠ: 1307,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[55] = {
    name: "Sapphire pick",
    ⵠⵠ: 1310,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const v714 = 14;
  v602[56] = {
    name: "Jade pick",
    ⵠⵠ: 1313,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  const vVVVVV1623 = vVVVV1623;
  const v715 = 0;
  v602[57] = {
    name: "Ruby pick",
    ⵠⵠ: 1316,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[58] = {
    name: "Coal pick",
    ⵠⵠ: 1319,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[59] = {
    name: "Aquamarine pick",
    ⵠⵠ: 1322,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[333] = {
    name: "Boat",
    ⵠⵠ: 1335,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[334] = {
    name: "Sled",
    ⵠⵠ: 1338,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[162] = {
    name: "Saddle",
    ⵠⵠ: 1356,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 1
  };
  v602[335] = {
    name: "Mount Boar",
    ⵠⵠ: 1359,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[336] = {
    name: "Mount King Crab",
    ⵠⵠ: 1546,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[337] = {
    name: "Mount Baby Dragon",
    ⵠⵠ: 1390,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v716 = 10;
  v602[338] = {
    name: "Mount Baby Lava",
    ⵠⵠ: 1405,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[339] = {
    name: "Mount Hawk",
    ⵠⵠ: 1420,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[355] = {
    name: "Mount Vulture",
    ⵠⵠ: 1441,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[354] = {
    name: "Mount Parrot",
    ⵠⵠ: 1459,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[358] = {
    name: "Mount Hen",
    ⵠⵠ: 1330,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[340] = {
    name: "Plane",
    ⵠⵠ: 1424,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v717 = 11;
  v602[100] = {
    name: "Pitchfork 2",
    ⵠⵠ: 1256,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[349] = {
    name: "Baby Mammoth",
    ⵠⵠ: 1617,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[344] = {
    name: "Emerald",
    ⵠⵠ: 1484,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[306] = {
    name: "Copper",
    ⵠⵠ: 1722,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v718 = 15;
  v602[307] = {
    name: "Iron",
    ⵠⵠ: 1724,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[308] = {
    name: "Topaz",
    ⵠⵠ: 1726,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v719 = 4;
  const v720 = 14;
  v602[309] = {
    name: "Sapphire",
    ⵠⵠ: 1728,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[310] = {
    name: "Jade",
    ⵠⵠ: 1730,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[311] = {
    name: "Ruby",
    ⵠⵠ: 1732,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[312] = {
    name: "Coal",
    ⵠⵠ: 1734,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[313] = {
    name: "Aquamarine",
    ⵠⵠ: 1736,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  const v721 = String.fromCharCode;
  const vV721 = v721(101);
  const vV7212 = v721(118);
  const vV7213 = v721(97);
  const vV7214 = v721(108);
  v602[356] = {
    name: "Banana",
    ⵠⵠ: 1738,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[351] = {
    name: "Crocodile Scales",
    ⵠⵠ: 1750,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[352] = {
    name: "Parrot Feather",
    ⵠⵠ: 1463,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  v602[353] = {
    name: "Ocelot Fur",
    ⵠⵠ: 1754,
    ⵠⲆᐃ: 0,
    ᐃⲆᐃ: 0
  };
  var vUndefined2 = undefined;
  var v722 = [];
  var v723 = [{
    r: [[200, 25], [199, 5]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 204,
    ⵠⵠⲆΔ: 204,
    time: 1 / 5,
    ⵠⲆΔ: 4
  }, {
    r: [[204, 1], [200, 35], [199, 10]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 209,
    ⵠⵠⲆΔ: 209,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 150], [199, 50], [202, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 210,
    ⵠⵠⲆΔ: 210,
    time: 1 / 20,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 20], [199, 10]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 205,
    ⵠⵠⲆΔ: 205,
    time: 1 / 6,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 10]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 8,
    ⵠⵠⲆΔ: 8,
    time: 1 / 3,
    ⵠⲆΔ: 0
  }, {
    r: [[8, 1], [200, 50], [199, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 1,
    ⵠⵠⲆΔ: 1,
    time: 0.125,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 40], [202, 20], [199, 30], [1, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 3,
    ⵠⵠⲆΔ: 3,
    time: 1 / 12,
    ⵠⲆΔ: 0
  }, {
    r: [[203, 20], [202, 50], [199, 80], [3, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 4,
    ⵠⵠⲆΔ: 4,
    time: 0.05,
    ⵠⲆΔ: 0
  }, {
    r: [[203, 40], [202, 60], [212, 30], [4, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 49,
    ⵠⵠⲆΔ: 49,
    time: 0.016666666666666666,
    ⵠⲆΔ: 0
  }, {
    r: [[212, 30], [203, 40], [304, 30], [49, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 50,
    ⵠⵠⲆΔ: 50,
    time: 1 / 90,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 90], [199, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 62,
    ⵠⵠⲆΔ: 62,
    time: 1 / 10,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 160], [199, 120], [202, 80], [62, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 63,
    ⵠⵠⲆΔ: 63,
    time: 1 / 15,
    ⵠⲆΔ: 0
  }, {
    r: [[203, 80], [199, 200], [202, 150], [63, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 64,
    ⵠⵠⲆΔ: 64,
    time: 1 / 20,
    ⵠⲆΔ: 0
  }, {
    r: [[203, 160], [212, 60], [202, 250], [64, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 65,
    ⵠⵠⲆΔ: 65,
    time: 0.016666666666666666,
    ⵠⲆΔ: 0
  }, {
    r: [[212, 160], [304, 60], [203, 250], [65, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 66,
    ⵠⵠⲆΔ: 66,
    time: 1 / 90,
    ⵠⲆΔ: 0
  }, {
    r: [[66, 1], [218, 1], [222, 1], [232, 10], [212, 20]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 72,
    ⵠⵠⲆΔ: 72,
    time: 1 / 120,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 30], [199, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 82,
    ⵠⵠⲆΔ: 82,
    time: 0.2,
    ⵠⲆΔ: 0
  }, {
    r: [[82, 1], [202, 20], [199, 30], [200, 40]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 86,
    ⵠⵠⲆΔ: 86,
    time: 1 / 10,
    ⵠⲆΔ: 0
  }, {
    r: [[86, 1], [203, 20], [202, 50], [199, 80]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 87,
    ⵠⵠⲆΔ: 87,
    time: 0.05,
    ⵠⲆΔ: 0
  }, {
    r: [[87, 1], [202, 60], [212, 30], [203, 40]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 88,
    ⵠⵠⲆΔ: 88,
    time: 1 / 40,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 223,
    ⵠⵠⲆΔ: 223,
    time: 0.2,
    ⵠⲆΔ: 0
  }, {
    r: [[223, 1]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 85,
    ⵠⵠⲆΔ: 85,
    time: 0.2,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 100], [199, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 99,
    ⵠⵠⲆΔ: 99,
    time: 0.1,
    ⵠⲆΔ: 0
  }, {
    r: [[99, 1], [345, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 100,
    ⵠⵠⲆΔ: 100,
    time: 1 / 60,
    ⵠⲆΔ: 0
  }, {
    r: [[211, 4], [263, 4], [276, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 46,
    ⵠⵠⲆΔ: 46,
    time: 1 / 15,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 40]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 12,
    ⵠⵠⲆΔ: 12,
    time: 1 / 5,
    ⵠⲆΔ: 1
  }, {
    r: [[12, 1], [200, 60], [199, 10]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 13,
    ⵠⵠⲆΔ: 13,
    time: 0.1,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 80], [202, 30], [199, 30], [13, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 14,
    ⵠⵠⲆΔ: 14,
    ⵠⲆΔ: 1,
    time: 1 / 20
  }, {
    r: [[200, 200], [203, 40], [202, 60], [14, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 15,
    ⵠⵠⲆΔ: 15,
    time: 0.03333333333333333,
    ⵠⲆΔ: 1
  }, {
    r: [[212, 40], [203, 80], [202, 90], [15, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 60,
    ⵠⵠⲆΔ: 60,
    time: 0.016666666666666666,
    ⵠⲆΔ: 1
  }, {
    r: [[304, 40], [212, 80], [203, 90], [60, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 61,
    ⵠⵠⲆΔ: 61,
    time: 1 / 90,
    ⵠⲆΔ: 1
  }, {
    r: [[240, 20], [287, 1], [212, 100], [242, 3]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 16,
    ⵠⵠⲆΔ: 16,
    time: 1 / 120,
    ⵠⲆΔ: 1
  }, {
    r: [[16, 1], [289, 1], [304, 100], [243, 2]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 17,
    ⵠⵠⲆΔ: 17,
    time: 0.005,
    ⵠⲆΔ: 1
  }, {
    r: [[12, 1], [299, 5], [263, 6]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 18,
    ⵠⵠⲆΔ: 18,
    time: 0.03333333333333333,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 30]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 103,
    ⵠⵠⲆΔ: 103,
    time: 1 / 5,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 50], [199, 25], [103, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 0,
    ⵠⵠⲆΔ: 0,
    time: 0.1,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 60], [202, 40], [199, 50], [0, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 5,
    ⵠⵠⲆΔ: 5,
    time: 1 / 20,
    ⵠⲆΔ: 1
  }, {
    r: [[203, 40], [202, 60], [199, 80], [5, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 6,
    ⵠⵠⲆΔ: 6,
    time: 0.03333333333333333,
    ⵠⲆΔ: 1
  }, {
    r: [[203, 60], [202, 100], [212, 40], [6, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 48,
    ⵠⵠⲆΔ: 48,
    time: 1 / 60,
    ⵠⲆΔ: 1
  }, {
    r: [[203, 100], [212, 80], [304, 40], [48, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 28,
    ⵠⵠⲆΔ: 28,
    time: 1 / 90,
    ⵠⲆΔ: 1
  }, {
    r: [[201, 3]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 206,
    ⵠⵠⲆΔ: 206,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[227, 3]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 225,
    ⵠⵠⲆΔ: 225,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[291, 8]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 290,
    ⵠⵠⲆΔ: 290,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[294, 8]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 293,
    ⵠⵠⲆΔ: 293,
    time: 1 / 5,
    ⵠⲆΔ: 3
  }, {
    r: [[296, 8]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 295,
    ⵠⵠⲆΔ: 295,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[315, 8]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 314,
    ⵠⵠⲆΔ: 314,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[317, 8]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 316,
    ⵠⵠⲆΔ: 316,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[319, 16]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 318,
    ⵠⵠⲆΔ: 318,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[321, 16]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 320,
    ⵠⵠⲆΔ: 320,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[207, 1]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 208,
    ⵠⵠⲆΔ: 208,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[230, 1]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 231,
    ⵠⵠⲆΔ: 231,
    time: 1 / 3,
    ⵠⲆΔ: 3
  }, {
    r: [[224, 3]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 236,
    ⵠⵠⲆΔ: 236,
    time: 0.3333333333333333,
    ⵠⲆΔ: 3
  }, {
    r: [[224, 3], [201, 1]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 226,
    ⵠⵠⲆΔ: 226,
    time: 1 / 3,
    ⵠⲆΔ: 3
  }, {
    r: [[224, 5], [201, 2], [235, 2]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 229,
    ⵠⵠⲆΔ: 229,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[263, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 297,
    ⵠⵠⲆΔ: 297,
    time: 1 / 5,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 20]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 264,
    ⵠⵠⲆΔ: 264,
    time: 1 / 5,
    ⵠⲆΔ: 5
  }, {
    r: [[264, 1], [199, 17]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 265,
    ⵠⵠⲆΔ: 265,
    time: 0.2,
    ⵠⲆΔ: 5
  }, {
    r: [[265, 1], [202, 14]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 266,
    ⵠⵠⲆΔ: 266,
    time: 0.2,
    ⵠⲆΔ: 5
  }, {
    r: [[266, 1], [203, 11]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 267,
    ⵠⵠⲆΔ: 267,
    time: 1 / 5,
    ⵠⲆΔ: 5
  }, {
    r: [[267, 1], [212, 8]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 213,
    ⵠⵠⲆΔ: 213,
    time: 0.2,
    ⵠⲆΔ: 5
  }, {
    r: [[213, 1], [304, 5]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 327,
    ⵠⵠⲆΔ: 327,
    time: 1 / 5,
    ⵠⲆΔ: 5
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 268,
    ⵠⵠⲆΔ: 268,
    time: 1 / 8,
    ⵠⲆΔ: 5
  }, {
    r: [[268, 1], [199, 27]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 273,
    ⵠⵠⲆΔ: 273,
    time: 1 / 8,
    ⵠⲆΔ: 5
  }, {
    r: [[273, 1], [202, 24]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 274,
    ⵠⵠⲆΔ: 274,
    time: 0.125,
    ⵠⲆΔ: 5
  }, {
    r: [[274, 1], [203, 21]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 275,
    ⵠⵠⲆΔ: 275,
    time: 0.125,
    ⵠⲆΔ: 5
  }, {
    r: [[275, 1], [212, 18]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 215,
    ⵠⵠⲆΔ: 215,
    time: 1 / 8,
    ⵠⲆΔ: 5
  }, {
    r: [[215, 1], [304, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 328,
    ⵠⵠⲆΔ: 328,
    time: 0.125,
    ⵠⲆΔ: 5
  }, {
    r: [[264, 1], [200, 40], [199, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 262,
    ⵠⵠⲆΔ: 262,
    time: 0.05,
    ⵠⲆΔ: 5
  }, {
    r: [[265, 1], [199, 70]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 270,
    ⵠⵠⲆΔ: 270,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[266, 1], [202, 40], [199, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 271,
    ⵠⵠⲆΔ: 271,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[267, 1], [203, 40], [199, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 272,
    ⵠⵠⲆΔ: 272,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[213, 1], [212, 40], [199, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 214,
    ⵠⵠⲆΔ: 214,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[327, 1], [304, 40], [202, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 329,
    ⵠⵠⲆΔ: 329,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[268, 1], [200, 80], [199, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 322,
    ⵠⵠⲆΔ: 322,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[273, 1], [199, 140]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 323,
    ⵠⵠⲆΔ: 323,
    time: 0.05,
    ⵠⲆΔ: 5
  }, {
    r: [[274, 1], [202, 80], [199, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 324,
    ⵠⵠⲆΔ: 324,
    time: 0.05,
    ⵠⲆΔ: 5
  }, {
    r: [[275, 1], [203, 80], [199, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 325,
    ⵠⵠⲆΔ: 325,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[215, 1], [212, 80], [199, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 326,
    ⵠⵠⲆΔ: 326,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[328, 1], [304, 80], [202, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 330,
    ⵠⵠⲆΔ: 330,
    time: 1 / 20,
    ⵠⲆΔ: 5
  }, {
    r: [[200, 25], [202, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 269,
    ⵠⵠⲆΔ: 269,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[211, 1], [2, 1], [263, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 32,
    ⵠⵠⲆΔ: 32,
    time: 1 / 5,
    ⵠⲆΔ: 2
  }, {
    r: [[211, 5], [332, 20], [240, 5], [2, 5]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 33,
    ⵠⵠⲆΔ: 33,
    time: 1 / 30,
    ⵠⲆΔ: 2
  }, {
    r: [[346, 1], [341, 8], [342, 8], [332, 8], [263, 6]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 155,
    ⵠⵠⲆΔ: 155,
    time: 1 / 60,
    ⵠⲆΔ: 2
  }, {
    r: [[2, 1], [263, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 10,
    ⵠⵠⲆΔ: 10,
    time: 1 / 5,
    ⵠⲆΔ: 2
  }, {
    r: [[10, 1], [276, 5], [263, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 11,
    ⵠⵠⲆΔ: 11,
    time: 1 / 12,
    ⵠⲆΔ: 2
  }, {
    r: [[11, 1], [239, 5], [240, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 67,
    ⵠⵠⲆΔ: 67,
    time: 0.03333333333333333,
    ⵠⲆΔ: 2
  }, {
    r: [[67, 1], [239, 5], [350, 10], [240, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 161,
    ⵠⵠⲆΔ: 161,
    time: 0.02,
    ⵠⲆΔ: 2
  }, {
    r: [[200, 50]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 104,
    ⵠⵠⲆΔ: 104,
    time: 1 / 5,
    ⵠⲆΔ: 2
  }, {
    r: [[199, 75], [200, 75], [104, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 34,
    ⵠⵠⲆΔ: 34,
    time: 0.1,
    ⵠⲆΔ: 2
  }, {
    r: [[199, 90], [200, 90], [202, 90], [34, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 35,
    ⵠⵠⲆΔ: 35,
    time: 0.05,
    ⵠⲆΔ: 2
  }, {
    r: [[199, 100], [202, 100], [203, 100], [35, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 36,
    ⵠⵠⲆΔ: 36,
    time: 1 / 30,
    ⵠⲆΔ: 2
  }, {
    r: [[212, 80], [202, 150], [203, 120], [36, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 70,
    ⵠⵠⲆΔ: 70,
    time: 1 / 60,
    ⵠⲆΔ: 2
  }, {
    r: [[304, 80], [203, 150], [212, 120], [70, 1]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 71,
    ⵠⵠⲆΔ: 71,
    time: 0.011111111111111112,
    ⵠⲆΔ: 2
  }, {
    r: [[232, 2], [203, 40], [263, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 84,
    ⵠⵠⲆΔ: 84,
    time: 0.05,
    ⵠⲆΔ: 2
  }, {
    r: [[84, 1], [202, 80], [222, 1], [212, 20]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 83,
    ⵠⵠⲆΔ: 83,
    time: 1 / 90,
    ⵠⲆΔ: 2
  }, {
    r: [[305, 5], [203, 50], [240, 5]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 29,
    ⵠⵠⲆΔ: 29,
    time: 0.05,
    ⵠⲆΔ: 2
  }, {
    r: [[29, 1], [305, 10], [212, 50]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 30,
    ⵠⵠⲆΔ: 30,
    time: 0.016666666666666666,
    ⵠⲆΔ: 2
  }, {
    r: [[30, 1], [305, 15], [212, 50], [304, 50]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 31,
    ⵠⵠⲆΔ: 31,
    time: 1 / 90,
    ⵠⲆΔ: 2
  }, {
    r: [[263, 4], [347, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 153,
    ⵠⵠⲆΔ: 153,
    time: 1 / 15,
    ⵠⲆΔ: 2
  }, {
    r: [[153, 1], [263, 6], [347, 4], [342, 12], [332, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 154,
    ⵠⵠⲆΔ: 154,
    time: 1 / 150,
    ⵠⲆΔ: 2
  }, {
    r: [[263, 6], [276, 5]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 47,
    ⵠⵠⲆΔ: 47,
    time: 1 / 15,
    ⵠⲆΔ: 2
  }, {
    r: [[200, 20]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 211,
    ⵠⵠⲆΔ: 211,
    time: 1 / 3,
    ⵠⲆΔ: 4
  }, {
    r: [[203, 1], [263, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 240,
    ⵠⵠⲆΔ: 240,
    time: 1 / 3,
    ⵠⲆΔ: 4
  }, {
    r: [[202, 10]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 241,
    ⵠⵠⲆΔ: 241,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[202, 250]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 260,
    ⵠⵠⲆΔ: 260,
    time: 0.016666666666666666,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 261,
    ⵠⵠⲆΔ: 261,
    time: 0.1,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 216,
    ⵠⵠⲆΔ: 216,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 292,
    ⵠⵠⲆΔ: 292,
    time: 1 / 5,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 120]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 331,
    ⵠⵠⲆΔ: 331,
    time: 1 / 15,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 20], [233, 15]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 234,
    ⵠⵠⲆΔ: 234,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[217, 25]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 221,
    ⵠⵠⲆΔ: 221,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[221, 1]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 218,
    ⵠⵠⲆΔ: 218,
    time: 0.2,
    ⵠⲆΔ: 3
  }, {
    r: [[235, 20], [221, 1]],
    w: 0,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 219,
    ⵠⵠⲆΔ: 218,
    time: 1 / 10,
    ⵠⲆΔ: 3
  }, {
    r: [[221, 1]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 1,
    id: 220,
    ⵠⵠⲆΔ: 218,
    time: 1 / 3,
    ⵠⲆΔ: 3
  }, {
    r: [[200, 60], [199, 20], [263, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 228,
    ⵠⵠⲆΔ: 228,
    time: 0.1,
    ⵠⲆΔ: 4
  }, {
    r: [[203, 40], [199, 45]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 244,
    ⵠⵠⲆΔ: 244,
    time: 0.05,
    ⵠⲆΔ: 4
  }, {
    r: [[244, 1], [344, 40], [348, 1]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 245,
    ⵠⵠⲆΔ: 245,
    time: 0.005,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 50], [199, 100]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 246,
    ⵠⵠⲆΔ: 246,
    time: 0.011111111111111112,
    ⵠⲆΔ: 4
  }, {
    r: [[199, 60], [202, 120]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 247,
    ⵠⵠⲆΔ: 247,
    time: 0.011111111111111112,
    ⵠⲆΔ: 4
  }, {
    r: [[202, 70], [203, 140]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 248,
    ⵠⵠⲆΔ: 248,
    time: 1 / 90,
    ⵠⲆΔ: 4
  }, {
    r: [[203, 80], [212, 160]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 249,
    ⵠⵠⲆΔ: 249,
    time: 1 / 90,
    ⵠⲆΔ: 4
  }, {
    r: [[212, 90], [304, 180]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 250,
    ⵠⵠⲆΔ: 250,
    time: 1 / 90,
    ⵠⲆΔ: 4
  }, {
    r: [[199, 70]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 101,
    ⵠⵠⲆΔ: 101,
    time: 0.1,
    ⵠⲆΔ: 0
  }, {
    r: [[199, 70], [200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 102,
    ⵠⵠⲆΔ: 102,
    time: 0.1,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 40], [199, 40]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 237,
    ⵠⵠⲆΔ: 237,
    time: 0.1,
    ⵠⲆΔ: 4
  }, {
    r: [[236, 1], [208, 1]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 238,
    ⵠⵠⲆΔ: 238,
    time: 1 / 3,
    ⵠⲆΔ: 3
  }, {
    r: [[240, 30], [286, 1], [212, 150], [242, 3]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 105,
    ⵠⵠⲆΔ: 105,
    time: 1 / 120,
    ⵠⲆΔ: 2
  }, {
    r: [[105, 1], [288, 1], [304, 150], [243, 2]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 106,
    ⵠⵠⲆΔ: 106,
    time: 1 / 180,
    ⵠⲆΔ: 2
  }, {
    r: [[35, 1], [299, 10], [298, 10], [263, 10]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 107,
    ⵠⵠⲆΔ: 107,
    time: 0.016666666666666666,
    ⵠⲆΔ: 2
  }, {
    r: [[240, 20], [287, 1], [212, 150], [242, 3]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 108,
    ⵠⵠⲆΔ: 108,
    time: 0.008333333333333333,
    ⵠⲆΔ: 1
  }, {
    r: [[108, 1], [289, 1], [304, 150], [243, 2]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 109,
    ⵠⵠⲆΔ: 109,
    time: 1 / 180,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 100], [263, 4]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 119,
    ⵠⵠⲆΔ: 119,
    time: 0.05,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 30]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 183,
    ⵠⵠⲆΔ: 183,
    time: 0.2,
    ⵠⲆΔ: 1
  }, {
    r: [[199, 200], [263, 8], [332, 4], [119, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 120,
    ⵠⵠⲆΔ: 120,
    time: 0.04,
    ⵠⲆΔ: 1
  }, {
    r: [[199, 20], [341, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 184,
    ⵠⵠⲆΔ: 184,
    time: 1 / 5,
    ⵠⲆΔ: 1
  }, {
    r: [[202, 200], [263, 12], [341, 4], [332, 4], [120, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 121,
    ⵠⵠⲆΔ: 121,
    time: 1 / 30,
    ⵠⲆΔ: 1
  }, {
    r: [[202, 20], [332, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 185,
    ⵠⵠⲆΔ: 185,
    time: 1 / 10,
    ⵠⲆΔ: 1
  }, {
    r: [[203, 200], [240, 10], [341, 8], [332, 8], [121, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 122,
    ⵠⵠⲆΔ: 122,
    time: 1 / 35,
    ⵠⲆΔ: 1
  }, {
    r: [[203, 10], [332, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 186,
    ⵠⵠⲆΔ: 186,
    time: 0.1,
    ⵠⲆΔ: 1
  }, {
    r: [[212, 200], [240, 10], [332, 8], [342, 8], [122, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 123,
    ⵠⵠⲆΔ: 123,
    time: 1 / 40,
    ⵠⲆΔ: 1
  }, {
    r: [[212, 10], [342, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 187,
    ⵠⵠⲆΔ: 187,
    time: 0.06666666666666667,
    ⵠⲆΔ: 1
  }, {
    r: [[304, 200], [240, 10], [222, 1], [123, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 124,
    ⵠⵠⲆΔ: 124,
    time: 0.022222222222222223,
    ⵠⲆΔ: 1
  }, {
    r: [[304, 10], [342, 1], [305, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 188,
    ⵠⵠⲆΔ: 188,
    time: 1 / 15,
    ⵠⲆΔ: 1
  }, {
    r: [[344, 200], [240, 10], [287, 1], [124, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 125,
    ⵠⵠⲆΔ: 125,
    time: 0.02,
    ⵠⲆΔ: 1
  }, {
    r: [[344, 10], [348, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 189,
    ⵠⵠⲆΔ: 189,
    time: 1 / 20,
    ⵠⲆΔ: 1
  }, {
    r: [[200, 100]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 135,
    ⵠⵠⲆΔ: 135,
    time: 0.04,
    ⵠⲆΔ: 1
  }, {
    r: [[135, 1], [199, 100], [200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 136,
    ⵠⵠⲆΔ: 136,
    time: 1 / 40,
    ⵠⲆΔ: 1
  }, {
    r: [[136, 1], [202, 50], [199, 50], [200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 137,
    ⵠⵠⲆΔ: 137,
    time: 1 / 50,
    ⵠⲆΔ: 1
  }, {
    r: [[137, 1], [203, 50], [202, 50], [199, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 138,
    ⵠⵠⲆΔ: 138,
    time: 0.014285714285714285,
    ⵠⲆΔ: 1
  }, {
    r: [[138, 1], [212, 50], [203, 50], [202, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 139,
    ⵠⵠⲆΔ: 139,
    time: 0.011111111111111112,
    ⵠⲆΔ: 1
  }, {
    r: [[139, 1], [304, 50], [212, 50], [203, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 140,
    ⵠⵠⲆΔ: 140,
    time: 1 / 120,
    ⵠⲆΔ: 1
  }, {
    r: [[277, 1], [202, 200]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 150,
    ⵠⵠⲆΔ: 150,
    time: 1 / 60,
    ⵠⲆΔ: 2
  }, {
    r: [[278, 1], [202, 200]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 151,
    ⵠⵠⲆΔ: 151,
    time: 1 / 60,
    ⵠⲆΔ: 2
  }, {
    r: [[279, 1], [202, 200], [242, 1]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 152,
    ⵠⵠⲆΔ: 152,
    time: 0.016666666666666666,
    ⵠⲆΔ: 2
  }, {
    r: [[276, 10], [2, 5], [263, 6]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 156,
    ⵠⵠⲆΔ: 156,
    time: 1 / 10,
    ⵠⲆΔ: 2
  }, {
    r: [[2, 3], [263, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 157,
    ⵠⵠⲆΔ: 157,
    time: 0.1,
    ⵠⲆΔ: 2
  }, {
    r: [[156, 1], [281, 1], [239, 15], [240, 5], [332, 8]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 158,
    ⵠⵠⲆΔ: 158,
    time: 1 / 60,
    ⵠⲆΔ: 2
  }, {
    r: [[157, 1], [280, 1], [239, 10], [240, 5], [332, 8]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 159,
    ⵠⵠⲆΔ: 159,
    time: 0.016666666666666666,
    ⵠⲆΔ: 2
  }, {
    r: [[283, 1]],
    w: 0,
    f: 0,
    ⵠⵠⲆ: 1,
    e: 0,
    id: 282,
    ⵠⵠⲆΔ: 282,
    time: 0.2,
    ⵠⲆΔ: 0
  }, {
    r: [[200, 20], [263, 1]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 283,
    ⵠⵠⲆΔ: 283,
    time: 0.2,
    ⵠⲆΔ: 0
  }, {
    r: [[199, 100], [233, 30]],
    w: 1,
    f: 1,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 284,
    ⵠⵠⲆΔ: 284,
    time: 1 / 10,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 20]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 285,
    ⵠⵠⲆΔ: 285,
    time: 0.2,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 100], [199, 50], [2, 5], [276, 5], [263, 6]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 300,
    ⵠⵠⲆΔ: 300,
    time: 0.05,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 250], [240, 10], [239, 2], [232, 2]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 333,
    ⵠⵠⲆΔ: 333,
    time: 1 / 50,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 250], [263, 10], [239, 2], [332, 8]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 334,
    ⵠⵠⲆΔ: 334,
    time: 0.02,
    ⵠⲆΔ: 4
  }, {
    r: [[263, 10], [276, 6], [2, 4], [217, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 162,
    ⵠⵠⲆΔ: 162,
    time: 1 / 20,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 250], [263, 10], [211, 10], [341, 8]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 340,
    ⵠⵠⲆΔ: 340,
    time: 1 / 50,
    ⵠⲆΔ: 4
  }, {
    r: [[200, 40]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 167,
    ⵠⵠⲆΔ: 167,
    time: 1 / 5,
    ⵠⲆΔ: 1
  }, {
    r: [[167, 1], [199, 40], [200, 50]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 168,
    ⵠⵠⲆΔ: 168,
    time: 1 / 10,
    ⵠⲆΔ: 1
  }, {
    r: [[168, 1], [202, 40], [199, 50], [200, 60]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 169,
    ⵠⵠⲆΔ: 169,
    time: 0.05,
    ⵠⲆΔ: 1
  }, {
    r: [[169, 1], [203, 40], [202, 70], [199, 80]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 170,
    ⵠⵠⲆΔ: 170,
    time: 1 / 30,
    ⵠⲆΔ: 1
  }, {
    r: [[170, 1], [212, 40], [203, 70], [202, 110]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 171,
    ⵠⵠⲆΔ: 171,
    time: 1 / 60,
    ⵠⲆΔ: 1
  }, {
    r: [[171, 1], [304, 50], [212, 80], [203, 110]],
    w: 1,
    f: 0,
    ⵠⵠⲆ: 0,
    e: 0,
    id: 172,
    ⵠⵠⲆΔ: 172,
    time: 1 / 90,
    ⵠⲆΔ: 1
  }];
  for (let v724 = 0; v723.length > v724; v724++) {
    v722[v723[v724].id] = v723[v724];
  }
  v593 = 2000;
  ⵠⵠᐃ = {
    ⲆᐃΔⲆⲆⵠⵠ: 2000,
    ᐃⲆΔᐃΔⵠᐃ: 2001,
    ΔⲆΔᐃᐃⵠⲆ: 2002,
    ᐃⵠΔᐃᐃᐃΔ: 2003,
    ΔⵠᐃⵠⵠⲆⵠ: 2004,
    ΔᐃⵠⵠΔⲆⵠ: 2005,
    ᐃⲆᐃᐃⵠᐃΔ: 2006,
    ⲆⲆΔᐃᐃⵠⵠ: 2007,
    ⲆⵠΔᐃⵠΔⲆ: 2008,
    ⲆᐃΔⲆⵠⵠᐃ: 2009,
    ΔᐃΔⲆᐃᐃΔ: 2010,
    ΔΔⵠⵠᐃⵠΔ: 2011,
    EMPTY: 2012,
    ΔΔⲆΔΔΔⲆ: 2013,
    ⲆΔᐃⵠⲆⲆⵠ: 2014,
    ᐃΔⲆᐃᐃᐃⲆ: 2015,
    ⲆⲆΔⵠᐃᐃⲆ: 2016,
    ᐃᐃⲆᐃᐃᐃΔ: 2017,
    ⵠⵠΔⵠᐃᐃⵠ: 2018,
    ΔⲆⲆⵠΔᐃⲆ: 2019,
    ⲆⵠⵠⲆⵠⵠⲆ: 2020,
    ΔⵠΔΔΔᐃⵠ: 2021,
    ⵠΔᐃⲆⲆΔⵠ: 2022,
    ΔⲆⵠⲆᐃΔᐃ: 2023,
    ⲆᐃⲆⲆΔ: 2024,
    ΔⵠΔⲆᐃΔⲆ: 2025,
    ⵠⵠΔᐃΔⲆΔ: 2026,
    ᐃⵠⲆⲆⵠⵠⵠ: 2027,
    ΔⲆⵠΔⵠΔᐃ: 2028,
    ΔⵠⵠᐃΔᐃΔ: 2029,
    ᐃⲆⲆᐃⵠᐃⵠ: 2030,
    ᐃΔΔⲆΔᐃⲆ: 2031,
    POINTS: 2032,
    ΔΔΔⲆΔΔⲆ: 2033,
    ΔᐃΔᐃⵠᐃⲆ: 2034,
    ⵠⲆΔΔⲆΔΔ: 2035,
    ᐃᐃΔⲆᐃⵠⲆ: 2036,
    ᐃᐃⲆⵠᐃⲆⵠ: 2037,
    ΔⵠΔᐃᐃⵠΔ: 2038,
    ⲆⲆⵠⵠⵠⵠΔ: 2039,
    ᐃⲆⵠⵠⵠᐃᐃ: 2040,
    ⵠΔⲆⵠⵠΔⵠ: 2041,
    ⵠᐃΔⵠΔΔᐃ: 2042,
    ᐃᐃⵠⲆⵠᐃⵠ: 2043
  };
  function f74() {
    v756[172] = ["Reidite Axe", "Legendary and lethal", "Damage: 33", "Shield Penetration: 6"];
    v756[171] = ["Amethyst Axe", "Purple and powerful", "Damage: 30", "Shield Penetration: 5"];
    v756[170] = ["Diamond Axe", "Sparkle and slice", "Damage: 27", "Shield Penetration: 4"];
    v756[169] = ["Gold Axe", "Chop 'til it drops!", "Damage: 24", "Shield Penetration: 3"];
    v756[168] = ["Stone Axe", "Rock your logs", "Damage: 21", "Shield Penetration: 2"];
    v756[167] = ["Wood Axe", "Eco-friendly deforestation!", "Damage: 14", "Shield Penetration: 1"];
    v756[246] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
    v756[247] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
    v756[248] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
    v756[249] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
    v756[250] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
    v756[140] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
    v756[139] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
    v756[138] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
    v756[137] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
    v756[136] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
    v756[135] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
    v756[102] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
    v756[331] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
    v756[189] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
    v756[125] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
    v756[188] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
    v756[124] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
    v756[187] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
    v756[123] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
    v756[186] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
    v756[122] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
    v756[185] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
    v756[121] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
    v756[184] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
    v756[120] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
    v756[183] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
    v756[119] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
    v756[245] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
    v756[347] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
    v756[350] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
    v756[342] = ["Vulture Feather", "From a deadly vulture"];
    v756[344] = ["Emerald", "How many golden breads can you get from it?"];
    v756[348] = ["Sand Worm Juice", "I don't want to know how you got this."];
    v756[153] = ["Turban", "Useful to survive in the desert."];
    v756[154] = ["Ninja outfit", "Essential to survive in the desert"];
    v756[155] = ["Pilot Hat", "Take off and land with flying objects much faster."];
    v756[346] = ["Pilot Glasses"];
    v756[335] = ["Tamed Boar", "Fast on lands and slow on water."];
    v756[358] = ["Tamed Golden Hen", "So fast, even lag can't keep up."];
    v756[349] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
    v756[336] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
    v756[337] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
    v756[338] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
    v756[339] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
    v756[354] = ["Tamed Parrot", "You can fly with it.", "When you are flying,", "you can only hit people who are flying too"];
    v756[355] = ["Tamed Vulture", "You can fly with it.", "When you are flying,", "you can only hit people who are flying too"];
    v756[162] = ["Saddle", "Hit a boar with it to tame it."];
    v756[163] = ["Witch Hat", "You're a wizard Starvy!"];
    v756[164] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
    v756[165] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
    v756[166] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
    v756[182] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
    v756[33] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
    v756[334] = ["Sled", "You are faster with it in the snow"];
    v756[333] = ["Boat", "You are faster with it in the water"];
    v756[340] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
    v756[66] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 70"];
    v756[332] = ["Penguin Feather", "From a deadly cute penguin."];
    v756[341] = ["Hawk Feather", "From a deadly hawk."];
    v756[343] = ["Cactus", "Food : 20", "Water : 10"];
    v756[321] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
    v756[320] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
    v756[319] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
    v756[318] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v756[328] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
    v756[327] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
    v756[329] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
    v756[330] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
    v756[50] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
    v756[322] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
    v756[323] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
    v756[324] = ["Gold Door Spike", "Are you rebuilding the \"el dorado?\"", "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
    v756[325] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
    v756[326] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
    v756[315] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
    v756[317] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
    v756[314] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v756[316] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v756[99] = ["Pitchfork", "Perfect for gathering"];
    v756[100] = ["Golden Pitchfork", "Essential for a real farmer."];
    v756[345] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
    v756[v595.ⲆᐃᐃⲆⵠᐃⵠ] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
    v756[v595.ᐃΔⲆᐃᐃᐃΔ] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
    v756[v595.ΔᐃⵠᐃᐃⵠΔ] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
    v756[v595.ⵠⵠⲆⲆⲆⲆⵠ] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
    v756[v595.ⵠᐃⲆᐃΔⵠᐃ] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
    v756[288] = ["Lava Cube", "You feel an immense power emanating from this cube"];
    v756[289] = ["Lava Orb", "You feel an immense power emanating from this orb"];
    v756[109] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
    v756[17] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
    v756[243] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
    v756[106] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
    v756[61] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
    v756[28] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
    v756[305] = ["Flame", "It's hot!"];
    v756[29] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
    v756[30] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
    v756[31] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
    v756[304] = ["Reidite", "The ultimate ore"];
    v756[286] = ["Dragon Cube", "You feel a great power emanating from this cube"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v758[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
    v758[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
    v758[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
    v758[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
    v758[27] = ["You were trampled by that boar. From now on, your new nickname is \"the doormat\"."];
    v758[28] = ["With a force of 3300 newtons, the shock wave from the closing of the crab king's claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\""];
    v758[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
    v758[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
    v758[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
    v758[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
    v758[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
    v758[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
    v758[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
    v758[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
    v758[37] = ["You hear \"Avada Kedavra!\" before you turn to ashes."];
    v758[38] = ["You died crushed by an angry baby mammoth."];
    v758[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
    v758[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
    v758[41] = ["While trying to wrestle with a crocodile, you learned the hard way that its jaws have the force of a thousand nightmares. You were dragged into the swamp, and now you're part of the ecosystem."];
    v758[42] = ["A parrot swooped down, pecked at your face, and squawked insults at you in fluent pirate lingo. You died of humiliation and a surprising amount of blood loss."];
    v758[43] = ["The ocelot pounced on you with cat-like grace. Before you knew it, you were clawed, chewed, and left as a snack for its cubs. At least someone appreciates you."];
    v758[44] = ["The golden hen, faster than your thoughts, pecked at your pride and then your face. Unable to keep up with its legendary speed, you collapsed, humiliated, as it performed victory laps around your lifeless body. Your soul whispers, 'Why did I even try?'"];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2041] = "A sandstorm is approaching in a few seconds.";
    v756[2040] = "The sandstorm will soon stop.";
    v756[2043] = "A blizzard is approaching in a few seconds.";
    v756[2042] = "The blizzard will soon stop.";
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    v756[173] = ["Emerald Axe", "Shines bright, cuts light!"];
    v756[174] = ["Copper Axe", "Not the sharpest tool, but it gets the job done"];
    v756[175] = ["Iron Axe", "Strong and reliable, like your favorite boots"];
    v756[176] = ["Topaz Axe", "Chop trees with a golden gleam"];
    v756[177] = ["Sapphire Axe", "Cuts through wood like water"];
    v756[178] = ["Jade Axe", "Green means go... for chopping!"];
    v756[179] = ["Ruby Axe", "Red-hot lumberjack action"];
    v756[180] = ["Coal Axe", "It's a bit dusty but does the job"];
    v756[181] = ["Aquamarine Axe", "Make waves in the forest"];
    v756[141] = ["Emerald Shield", "Reflects envy and enemy attacks", "You can not attack when you use it"];
    v756[142] = ["Copper Shield", "Budget protection at its finest", "You can not attack when you use it"];
    v756[143] = ["Iron Shield", "Heavy metal defense", "You can not attack when you use it"];
    v756[144] = ["Topaz Shield", "Guard yourself with a touch of class", "You can not attack when you use it"];
    v756[145] = ["Sapphire Shield", "Blue is the color of safety", "You can not attack when you use it"];
    v756[146] = ["Jade Shield", "Defend with green grace", "You can not attack when you use it"];
    v756[147] = ["Ruby Shield", "Stops attacks dead in their tracks", "You can not attack when you use it"];
    v756[148] = ["Coal Shield", "Not the best idea, but okay", "You can not attack when you use it"];
    v756[149] = ["Aquamarine Shield", "Dive into defense", "You can not attack when you use it"];
    v756[190] = ["Emerald Arrow", "For when regular arrows just don't cut it"];
    v756[191] = ["Copper Arrow", "Cheap shots never felt so good"];
    v756[192] = ["Iron Arrow", "Piercing through armor and egos"];
    v756[193] = ["Topaz Arrow", "Hits the mark with a sparkle"];
    v756[194] = ["Sapphire Arrow", "Blue streak of doom"];
    v756[195] = ["Jade Arrow", "Nature's way of saying 'gotcha!'"];
    v756[196] = ["Ruby Arrow", "Redefine 'pointy things'"];
    v756[197] = ["Coal Arrow", "Santa's favorite projectile"];
    v756[198] = ["Aquamarine Arrow", "Make a splash in archery"];
    v756[126] = ["Emerald Bow", "Envy of every archer", "Requires appropriate arrows to be used"];
    v756[127] = ["Copper Bow", "Not worth much, but still shoots", "Requires appropriate arrows to be used"];
    v756[128] = ["Iron Bow", "Heavy but reliable", "Requires appropriate arrows to be used"];
    v756[129] = ["Topaz Bow", "Shoots with a golden glow", "Requires appropriate arrows to be used"];
    v756[130] = ["Sapphire Bow", "Bow down to the blue", "Requires appropriate arrows to be used"];
    v756[131] = ["Jade Bow", "Green means go—for arrows", "Requires appropriate arrows to be used"];
    v756[132] = ["Ruby Bow", "Red alert: enemies beware", "Requires appropriate arrows to be used"];
    v756[133] = ["Coal Bow", "Fires up your shots", "Requires appropriate arrows to be used"];
    v756[134] = ["Aquamarine Bow", "Make waves from afar", "Requires appropriate arrows to be used"];
    v756[19] = ["Emerald Spear", "Poke with the power of green"];
    v756[20] = ["Copper Spear", "Affordable pointy stick"];
    v756[21] = ["Iron Spear", "Trusty thrusty weapon"];
    v756[22] = ["Topaz Spear", "Stab with sparkle"];
    v756[23] = ["Sapphire Spear", "Blue-tipped for extra coolness"];
    v756[24] = ["Jade Spear", "Spear of natural beauty"];
    v756[25] = ["Ruby Spear", "Red tip, sharp wit"];
    v756[26] = ["Coal Spear", "Not the brightest idea"];
    v756[27] = ["Aquamarine Spear", "Pierce with the power of the sea"];
    v756[110] = ["Emerald Sword", "Cutting edge of envy"];
    v756[111] = ["Copper Sword", "Shiny but soft"];
    v756[112] = ["Iron Sword", "A classic choice"];
    v756[113] = ["Topaz Sword", "Slice with a golden touch"];
    v756[114] = ["Sapphire Sword", "Blue blade of bravery"];
    v756[115] = ["Jade Sword", "Green means keen"];
    v756[116] = ["Ruby Sword", "Redefining sharpness"];
    v756[117] = ["Coal Sword", "Swing with soot"];
    v756[118] = ["Aquamarine Sword", "Sword with a splash"];
    v756[73] = ["Emerald Hammer", "Smash with class"];
    v756[74] = ["Copper Hammer", "For all your basic smashing needs"];
    v756[75] = ["Iron Hammer", "Hammer time!"];
    v756[76] = ["Topaz Hammer", "Break things in style"];
    v756[77] = ["Sapphire Hammer", "Hits like a tidal wave"];
    v756[78] = ["Jade Hammer", "Green means smash"];
    v756[79] = ["Ruby Hammer", "Redefining demolition"];
    v756[80] = ["Coal Hammer", "When all you have is a hammer..."];
    v756[81] = ["Aquamarine Hammer", "Make a splash in demolition"];
    v756[90] = ["Emerald Shovel", "Dig the ground to gather resources"];
    v756[91] = ["Copper Shovel", "Dig the ground to gather resources"];
    v756[92] = ["Iron Shovel", "Dig the ground to gather resources"];
    v756[93] = ["Topaz Shovel", "Dig the ground to gather resources"];
    v756[94] = ["Sapphire Shovel", "Dig the ground to gather resources"];
    v756[95] = ["Jade Shovel", "Dig the ground to gather resources"];
    v756[96] = ["Ruby Shovel", "Dig the ground to gather resources"];
    v756[97] = ["Coal Shovel", "Dig the ground to gather resources"];
    v756[98] = ["Aquamarine Shovel", "Dig the ground to gather resources"];
    v756[51] = ["Emerald Pickaxe", "Mining with a touch of envy"];
    v756[52] = ["Copper Pickaxe", "A penny saved is a penny earned"];
    v756[53] = ["Iron Pickaxe", "Standard issue mining gear"];
    v756[54] = ["Topaz Pickaxe", "Sparkling digs"];
    v756[55] = ["Sapphire Pickaxe", "Digging deep blue"];
    v756[56] = ["Jade Pickaxe", "Green thumb for mining"];
    v756[57] = ["Ruby Pickaxe", "Red-hot mining action"];
    v756[58] = ["Coal Pickaxe", "Black gold digger"];
    v756[59] = ["Aquamarine Pickaxe", "Dive into the depths"];
    v756[251] = ["Emerald Extractor", "Can produce emerald with wood", "It takes 10 seconds to drill Emerald"];
    v756[252] = ["Copper Extractor", "Can produce copper with wood", "It takes 10 seconds to drill Copper"];
    v756[253] = ["Iron Extractor", "Can produce iron with wood", "It takes 10 seconds to drill Iron"];
    v756[254] = ["Topaz Extractor", "Can produce topaz with wood", "It takes 10 seconds to drill Topaz"];
    v756[255] = ["Sapphire Extractor", "Can produce sapphire with wood", "It takes 10 seconds to drill Sapphire"];
    v756[256] = ["Jade Extractor", "Can produce jade with wood", "It takes 10 seconds to drill Jade"];
    v756[257] = ["Ruby Extractor", "Can produce ruby with wood", "It takes 10 seconds to drill Ruby"];
    v756[258] = ["Coal Extractor", "Can produce coal with wood", "It takes 10 seconds to drill Coal"];
    v756[259] = ["Aquamarine Extractor", "Can produce aquamarine with wood", "It takes 10 seconds to drill Aquamarine"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v725 = 0; v725 < 7; v725++) {
      document.getElementById("claim_reward_" + v725).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["Hand"];
    v756[233] = ["Dirt", "Dirty!"];
    v756[217] = ["Sand", "I got it in my eyes!"];
    v756[200] = ["Wood", "You can't get enough of it!"];
    v756[199] = ["Stone", "Also called a rock"];
    v756[202] = ["Gold", "Be generous, give it to others"];
    v756[203] = ["Diamond", "What will you make with it?"];
    v756[212] = ["Amethyst", "It's Mauve like Lapa"];
    v756[224] = ["Flour", "Used in cooking"];
    v756[226] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
    v756[229] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
    v756[207] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
    v756[208] = ["Cooked meat", "A rare steak, please", "Food: 35"];
    v756[230] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
    v756[231] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
    v756[236] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
    v756[238] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
    v756[302] = ["Candies", "Only for children!", "Food: 20"];
    v756[301] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
    v756[303] = ["Garland", "Perfect decoration for roofs"];
    v756[206] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"];
    v756[201] = ["Berry", "Berry tasty!", "Food: 10"];
    v756[225] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v756[227] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
    v756[290] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v756[291] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
    v756[293] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v756[294] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
    v756[295] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"];
    v756[296] = ["Thorn bush", "It stings!"];
    v756[234] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
    v756[235] = ["Ice", "Useful for making cakes and water"];
    v756[101] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
    v756[276] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
    v756[2] = ["Rabbit Fur", "That rabbit was so cute..."];
    v756[280] = ["Pure Fur", "You're a bread factory"];
    v756[281] = ["Dark Fur", "You get ready to do something wrong"];
    v756[239] = ["Winter Fur", "These animals just wanted a hug..."];
    v756[232] = ["Scales", "It smells like fish!"];
    v756[222] = ["Kraken Skin", "Weren't you too scared?"];
    v756[353] = ["Ocelot Fur", "Now you can make a stylish jungle outfit."];
    v756[351] = ["Crocodile Scales", "Congrats, you defeated a prehistoric handbag!"];
    v756[352] = ["Parrot Feather", "Polly's not going to want a cracker after this..."];
    v756[204] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
    v756[209] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
    v756[205] = ["Workbench", "Very useful to craft all kinds of objects"];
    v756[263] = ["Cord", "Used in crafting Hats and Bag"];
    v756[240] = ["Diamond Cord", "Used in crafting Special Hats"];
    v756[269] = ["Chest", "Allows you to store items", "Durability: 500"];
    v756[103] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
    v756[0] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
    v756[5] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
    v756[6] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
    v756[9] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
    v756[48] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
    v756[108] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
    v756[16] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
    v756[8] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
    v756[1] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
    v756[3] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
    v756[4] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
    v756[49] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
    v756[62] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
    v756[63] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"];
    v756[64] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
    v756[65] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
    v756[72] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 95"];
    v756[12] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
    v756[13] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
    v756[14] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
    v756[15] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
    v756[60] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
    v756[82] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
    v756[86] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
    v756[87] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
    v756[88] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v756[89] = ["Reidite Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v756[104] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
    v756[34] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
    v756[35] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
    v756[36] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
    v756[70] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
    v756[71] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
    v756[105] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
    v756[37] = ["Emerald Helmet", "A gem of protection, dazzling and strong."];
    v756[38] = ["Copper Helmet", "You’re prepared for whatever comes your way"];
    v756[39] = ["Iron Helmet", "Your resolve is as strong as iron"];
    v756[40] = ["Topaz Helmet", "You are ready to shine brighter than ever"];
    v756[41] = ["Sapphire Helmet", "Ice-cold style for your survival selfies."];
    v756[42] = ["Jade Helmet", "Green armor that screams 'I farmed too much!'"];
    v756[43] = ["Ruby Helmet", "Red, shiny, and intimidating to berry thieves."];
    v756[44] = ["Coal Helmet", "For when you want to keep your head warm in the mines."];
    v756[45] = ["Aquamarine Helmet", "Dive deep in style, or just flex near the water."];
    v756[32] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
    v756[68] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
    v756[69] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
    v756[156] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"];
    v756[10] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
    v756[11] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
    v756[67] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
    v756[161] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
    v756[157] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v756[158] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"];
    v756[159] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v756[84] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
    v756[83] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
    v756[287] = ["Dragon Orb", "You feel a great power emanating from this orb"];
    v756[242] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
    v756[277] = ["Green Gemstone", "You didn't cheat, promise?"];
    v756[278] = ["Orange Gemstone", "Only a real pirate can find it!"];
    v756[279] = ["Blue Gemstone", "For too kind people"];
    v756[150] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
    v756[151] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
    v756[152] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
    v756[282] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
    v756[283] = ["Empty Bucket", "You need to fill this bucket near a water source"];
    v756[218] = ["Bottle", "Allows you to drink water anywhere (using water)", "Water: 50"];
    v756[219] = ["Bottle", "Allows you to drink water anywhere (using ice)", "Water: 50"];
    v756[220] = ["Bottle", "Allows you to drink water anywhere (using well)", "Water: 50"];
    v756[221] = ["Empty Bottle", "You can fill this bottle near a water source"];
    v756[223] = ["Empty Watering Can", "You must fill it with a water source to use it"];
    v756[85] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
    v756[47] = ["Bag", "More space for your items!"];
    v756[211] = ["Paper", "Used in book-crafting"];
    v756[46] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
    v756[297] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
    v756[241] = ["Lock", "Allow you to lock your chest"];
    v756[260] = ["Lock-pick", "Allows you to unlock one chest"];
    v756[261] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
    v756[216] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
    v756[285] = ["Sign", "Leave a message to others", "Durability: 200"];
    v756[292] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
    v756[284] = ["Well", "Allows bottle filling", "Durability: 1000"];
    v756[264] = ["Wood Wall", "It's just a wall", "Durability: 1000"];
    v756[265] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
    v756[266] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"];
    v756[267] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
    v756[213] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
    v756[262] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
    v756[270] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
    v756[271] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
    v756[272] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
    v756[214] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
    v756[268] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
    v756[273] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
    v756[274] = ["Gold Door", "Are you rebuilding the \"el dorado?\"", "Durability: 2000"];
    v756[275] = ["Diamond Door", "For a shining house", "Durability: 2500"];
    v756[215] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
    v756[210] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
    v756[228] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
    v756[237] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
    v756[244] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
    v756[306] = ["Copper", "Not gold, but still better than wood"];
    v756[307] = ["Iron", "Strong enough to make a decent hat"];
    v756[308] = ["Topaz", "Yellow gem that dreams of being the sun"];
    v756[309] = ["Sapphire", "Blue, shiny, and better than fish tears"];
    v756[310] = ["Jade", "Green stone, a favorite of picky penguins"];
    v756[311] = ["Ruby", "Red gem hotter than your campfire"];
    v756[312] = ["Coal", "Fuel your fire or your disappointment"];
    v756[313] = ["Aquamarine", "Ocean vibes without the drowning"];
    v756[356] = ["Banana", "A tasty treat to fill your belly!"];
    v756[357] = ["Banana Seed", "Grows into Banana", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v756[2000] = "You cannot join this server";
    v756[2001] = "Kicked: ";
    v756[2002] = "Your key is already used by someone else";
    v756[2003] = "Your key is wrong";
    v756[2004] = "You have an old version, you need to clear your cache";
    v756[2038] = "Your client version is too recent for this server. The server is being updated";
    v756[2039] = "Wrong password! To enter a password: https://starve.io/?password=...";
    v756[2005] = "There are no more new resources";
    v756[2006] = "You survived 1 day";
    v756[2007] = "You survived ";
    v756[2008] = " days";
    v756[2009] = "You are dead ;-;";
    v756[2010] = "Server cannot find spawn location! Spam the play button!";
    v756[2011] = "Server is full! Spam the play button!";
    v756[2012] = "Resource is empty";
    v756[2013] = "Inventory is full (right-click to empty items)";
    v756[2014] = " is dead";
    v756[2015] = "This is not the right tool";
    v756[2016] = "You joined a team";
    v756[2017] = "You are dead";
    v756[2018] = " joined the team";
    v756[2019] = "Your team was destroyed";
    v756[2020] = "You left the team";
    v756[2021] = " left the team";
    v756[2022] = "Someone stole your token :>";
    v756[2023] = "Choose a server";
    v756[2024] = "players";
    v756[2025] = "total players";
    v756[2026] = "players on this mode";
    v756[2027] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Nickname";
    v758[0] = ["You were killed for no reason"];
    v758[1] = ["You starved to death, as the name of the game implies"];
    v758[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
    v758[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
    v758[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
    v758[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
    v758[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
    v758[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
    v758[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
    v758[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
    v758[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
    v758[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
    v758[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
    v758[13] = ["You died of thirst. Better drink your own piss."];
    v758[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
    v758[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
    v758[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
    v758[17] = ["Your skin's falling apart, the sun killed you."];
    v758[18] = ["Garlic stored in your pockets boiled your brain."];
    v758[19] = ["As a vampire, don't stand near the garlic cloves."];
    v758[20] = ["You ate garlic as a vampire, what did you expect?"];
    v758[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"];
  }
  const v726 = 1;
  function f75(p496, p497, p498) {
    const v727 = (0 << (p496 >> 16 & 255)) + (8 << (p496 >> 24 & 255)) + (24 << (p496 >> 8 & 255)) + (16 << (p496 & 255));
    const v728 = ((p497 + 10600) * 22695477 + 1) % 4294967296;
    const v729 = ((19157 + p498) * 2147483629 + 2147483587) % 2147483647;
    const vF39 = function (p499, p500, p501, p502) {
      const v730 = ~(p501 & 7717) & 7717 | ~(p501 & 7717) & p501;
      const v731 = ((15969 + p502) * 1103515245 + 12345) % 2147483648;
      const vF42 = f42((p499 | 52219) & ~(p499 & 52219), (p500 + 13278) % 65391);
      f41(v730, v731);
      return ~(vF42 & 42389) & (vF42 | 42389);
    }(v727, v728, v729, v727);
    const vVg = f77(v727, v728, v729);
    return (24 << ((vF39 ^ vVg) >> 8 & 255)) + (8 << ((vF39 ^ vVg) >> 24 & 255)) + (16 << ((vF39 ^ vVg) & 255)) + (0 << ((vF39 ^ vVg) >> 16 & 255));
  }
  const v732 = 0;
  function f76(p503, p504, p505, p506) {
    vVVUndefined15(v555, p503, p504, p505, p506);
    const vPC3 = f517(v557[0], v557[1], v557[2], v557[3], v557[0]);
    f57(v557[1], v557[2], v557[3]);
    return (vPC3 | 32590) & ~(vPC3 & 32590);
  }
  function f77(p507, p508, p509) {
    const v733 = (p507 | 32818) & ~(p507 & 32818);
    const v734 = ~(p508 & 2044) & (p508 | 2044);
    const v735 = (1013904223 + (p509 + 56434) * 1664525) % 4294967296;
    const vF40 = function (p510, p511, p512, p513, p514) {
      const v736 = ((25021 + p510) * 22695477 + 1) % 4294967296;
      const v737 = p511 ^ 42185;
      const v738 = p512 ^ 22239;
      const v739 = (1 + (p513 + 21191) * 22695477) % 4294967296;
      const v740 = (33708 + p514) % 65531;
      const vF582 = f58(v736, v737, v738, v739, v740);
      const vVp = f441(v736, v737, v738, v739, v740);
      return ((51857 + (vF582 ^ vVp)) * 214013 + 2531011) % 4294967296;
    }(v733, v734, v735, v733, v734);
    f48(v735, v733, v734, v735);
    return ~(vF40 & 38812) & vF40 | ~(vF40 & 38812) & 38812;
  }
  function f78() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v741 = 0; v741 < 7; v741++) {
      document.getElementById("claim_reward_" + v741).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["Рука"];
    v756[233] = ["Земля", "Грязно!"];
    v756[217] = ["Песок", "Он в моих глазах!"];
    v756[200] = ["Дерево", "Постоянно нужно больше!"];
    v756[199] = ["Камень", "Твердый"];
    v756[202] = ["Золото", "Будьте щедры, давайте его другим"];
    v756[203] = ["Алмаз", "Что вы создадите с помощью него?"];
    v756[212] = ["Аметист", "Он сиреневый, как Lapa"];
    v756[224] = ["Мука", "Используется в готовке"];
    v756[226] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
    v756[229] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
    v756[207] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
    v756[208] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
    v756[230] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
    v756[231] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
    v756[236] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
    v756[238] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
    v756[302] = ["Конфеты", "Только для детей!", "Еда: 20"];
    v756[301] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
    v756[303] = ["Гирлянда", "Прекрасная декорация для крыши"];
    v756[206] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v756[201] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
    v756[225] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v756[227] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
    v756[290] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v756[291] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
    v756[293] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v756[294] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
    v756[295] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", "Прочность: 1000", "Продолжительность: 8 дней"];
    v756[296] = ["Колючий Куст", "Это больно!"];
    v756[234] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
    v756[235] = ["Лёд", "Используется для изготовления тортов и воды"];
    v756[101] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
    v756[276] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
    v756[2] = ["Шкура Зайца", "Этот кролик был таким милым..."];
    v756[280] = ["Чистая Шкура", "Вы - фабрика хлеба"];
    v756[281] = ["Чёрная Шкура", "Вы готовы делать зло."];
    v756[239] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
    v756[232] = ["Чешуя", "Она пахнет рыбой!"];
    v756[222] = ["Шкура Кракена", "Вы не испугались?"];
    v756[204] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
    v756[209] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
    v756[205] = ["Верстак", "Необходим для создания многих предметов"];
    v756[263] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
    v756[240] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
    v756[269] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
    v756[103] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
    v756[0] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
    v756[5] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
    v756[6] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
    v756[9] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
    v756[48] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
    v756[108] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
    v756[16] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
    v756[8] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
    v756[1] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
    v756[3] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
    v756[4] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
    v756[49] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
    v756[62] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
    v756[63] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
    v756[64] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
    v756[65] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
    v756[72] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
    v756[12] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
    v756[13] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
    v756[14] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
    v756[15] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
    v756[60] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
    v756[82] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
    v756[86] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
    v756[87] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
    v756[88] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
    v756[104] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
    v756[34] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
    v756[35] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
    v756[36] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
    v756[70] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
    v756[105] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
    v756[32] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
    v756[68] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
    v756[69] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
    v756[156] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v756[10] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
    v756[11] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
    v756[67] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
    v756[157] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v756[158] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v756[159] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v756[84] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
    v756[83] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
    v756[287] = ["Шар Дракона", "Даётся за квест"];
    v756[242] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
    v756[277] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
    v756[278] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
    v756[279] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
    v756[150] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
    v756[151] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
    v756[152] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
    v756[282] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
    v756[283] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
    v756[218] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
    v756[221] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
    v756[223] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
    v756[85] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
    v756[47] = ["Рюкзак", "Больше места для ваших предметов!"];
    v756[211] = ["Бумага", "Используется при создании книги"];
    v756[46] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
    v756[297] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
    v756[241] = ["Замок", "Позволяет вам закрыть ваш сундук"];
    v756[260] = ["Ключ", "Даёт вам открыть один запертый сундук"];
    v756[261] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
    v756[216] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
    v756[285] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
    v756[292] = ["Крыша", "Немного скрывает вас и согревает!"];
    v756[284] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
    v756[264] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
    v756[265] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
    v756[266] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
    v756[267] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
    v756[213] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
    v756[262] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
    v756[270] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
    v756[271] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
    v756[272] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
    v756[214] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
    v756[268] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
    v756[273] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
    v756[274] = ["Золотая Дверь", "Вы перестраиваете \"Эль Дорадо?\"", "Прочность: 2000"];
    v756[275] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
    v756[215] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
    v756[210] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
    v756[228] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
    v756[237] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
    v756[244] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
    v756[2000] = "Вы не можете зайти на этот сервер";
    v756[2001] = "Выгнаны: ";
    v756[2002] = "Ваш ключ уже используется кем-то";
    v756[2003] = "Ваш ключ неправильный";
    v756[2004] = "У вас старая версия, вам нужно очистить кеш";
    v756[2005] = "Ресурсов больше нет";
    v756[2006] = "Вы выжили 1 день";
    v756[2007] = "Вы выжили ";
    v756[2008] = " дней";
    v756[2009] = "Вы умерли ;-;";
    v756[2010] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
    v756[2011] = "Сервер заполнен! Спамьте кнопку играть!";
    v756[2012] = "Ресурсы закончились";
    v756[2013] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
    v756[2014] = " умер";
    v756[2015] = "Это не тот инструмент";
    v756[2016] = "Вы вошли в команду";
    v756[2017] = "Вы умерли";
    v756[2018] = " вошёл в команду";
    v756[2019] = "Ваша команда была разрушена";
    v756[2020] = "Вы покинули команду";
    v756[2021] = " покинул команду";
    v756[2022] = "Кто-то использует ваш токен :>";
    v756[2023] = "Выберите сервер";
    v756[2024] = "игроков";
    v756[2025] = "игроков всего";
    v756[2026] = "игроков в этом режиме";
    v756[2027] = "Скоро...";
    document.getElementById("nickname_input").placeholder = "Имя";
    v758[0] = ["Вы были убиты без причины"];
    v758[1] = ["Вы умерли от голода, как название игры подразумевает это"];
    v758[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
    v758[3] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
    v758[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
    v758[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
    v758[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
    v758[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
    v758[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
    v758[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
    v758[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
    v758[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
    v758[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
    v758[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
    v758[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
    v758[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
    v758[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
    v758[17] = ["Твоя кожа разваливается, солнце убило тебя"];
    v758[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
    v758[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
    v758[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
    v758[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", "Uuunnnggg...", "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"];
  }
  function f79(p515, p516, p517, p518) {
    const v742 = (16 << (p515 >> 24 & 255)) + (0 << (p515 >> 8 & 255)) + (8 << (p515 >> 16 & 255)) + (24 << (p515 & 255));
    const v743 = (p516 | 6659) & ~(p516 & 6659);
    const v744 = ~(p517 & 327) & p517 | ~(p517 & 327) & 327;
    const v745 = (p518 | 47555) & ~(p518 & 47555);
    const vVp2 = f441(v742, v743, v744, v745, v742);
    (function (p519, p520, p521) {
      const v746 = ~(p519 & 33281) & 33281 | ~(p519 & 33281) & p519;
      const v747 = p520 ^ 17912;
      const v748 = (24 << (p521 >> 24 & 255)) + (0 << (p521 >> 8 & 255)) + (16 << (p521 & 255)) + (8 << (p521 >> 16 & 255));
      const vF92 = f9(v746, v747);
      f77(v748, v746, v747);
    })(v743, v744, v745);
    return vVp2 ^ 53354;
  }
  function f80() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v749 = 0; v749 < 7; v749++) {
      document.getElementById("claim_reward_" + v749).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["mão"];
    v756[233] = ["terra", "está sujo!"];
    v756[217] = ["areia", "entrou nos meus olhos!"];
    v756[200] = ["madeira", "você não pode pegar o suficiente disso!"];
    v756[199] = ["pedra", "também chamado rocha"];
    v756[202] = ["ouro", "seja generoso, dê para outros"];
    v756[203] = ["diamante", "o que você irá fazer com isso?"];
    v756[212] = ["ametista", "é mauve como lapa"];
    v756[224] = ["farinha", "usada na cozinha"];
    v756[226] = ["biscoito", "biscoito da vovó", "comida: 50"];
    v756[229] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"];
    v756[207] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
    v756[208] = ["carne assada", "um mal passado, por favor", "comida: 35"];
    v756[230] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
    v756[231] = ["peixe assado", "com limão é perfeito", "comida: 35"];
    v756[236] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
    v756[238] = ["sanduíche", "saboroso com rissol de krabby", "comida: 100"];
    v756[302] = ["doces", "apenas para crianças!", "comida: 100"];
    v756[301] = ["cana-de-açúcar", "prove, é delicioso!", "comida: 100"];
    v756[303] = ["pisca-pisca", "decoração perfeita de telhado"];
    v756[206] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v756[201] = ["berry", "Berry saborosa!", "comida: 10"];
    v756[225] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 days"];
    v756[227] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
    v756[290] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"];
    v756[291] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
    v756[293] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v756[294] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
    v756[295] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"];
    v756[296] = ["mato de espinhos", "pica!"];
    v756[234] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", "durabilidade: 2000"];
    v756[235] = ["gelo", "útil para fazer bolo e água"];
    v756[101] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"];
    v756[276] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
    v756[2] = ["pele de coelho", "o coelho era tão fofo..."];
    v756[280] = ["pele pura", "você é uma fábrica de pão"];
    v756[281] = ["pele negra", "você está pronto para fazer algo errado"];
    v756[239] = ["pele de inverno", "ele só queria um abraço"];
    v756[232] = ["escala", "é pequeno como peixe!"];
    v756[222] = ["pele do kraken", "você não está com medo?"];
    v756[204] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
    v756[209] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
    v756[205] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
    v756[263] = ["linha", "usada para fazer chapéus e mochila"];
    v756[240] = ["linha de diamante", "usada para fazer chapéus especiais"];
    v756[269] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
    v756[103] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
    v756[0] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
    v756[5] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
    v756[6] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
    v756[9] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
    v756[48] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
    v756[108] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
    v756[16] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
    v756[8] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
    v756[v595.ⲆᐃᐃᐃⲆΔⵠΔΔ] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"];
    v756[3] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construções: 1"];
    v756[4] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construções: 1"];
    v756[49] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construções: 1"];
    v756[62] = ["martelo de pedra", "útil para destruir construções", "não funciona bem no diamante e na ametista", "dano: 2", "dano em construções: 20"];
    v756[63] = ["martelo de ouro", "útil para destruir construções", "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
    v756[64] = ["martelo de diamante", "útil para destruir construções", "dano: 4", "dano em construções: 40"];
    v756[65] = ["martelo de ametista", "útil para destruir construções", "dano: 5", "dano em construções: 50"];
    v756[72] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
    v756[12] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
    v756[13] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
    v756[14] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
    v756[15] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
    v756[60] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
    v756[82] = ["pá de pedral", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 2"];
    v756[86] = ["pá de ouro", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 3", "dano em construções: 1"];
    v756[87] = ["pá de diamante", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 4", "dano em construções: 1"];
    v756[88] = ["pá de ametista", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 5", "dano em construções: 1"];
    v756[104] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
    v756[34] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
    v756[35] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
    v756[36] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
    v756[70] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
    v756[105] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
    v756[32] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
    v756[68] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
    v756[69] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
    v756[156] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
    v756[10] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
    v756[11] = ["Chapka", "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
    v756[67] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
    v756[157] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v756[158] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
    v756[159] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v756[84] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
    v756[83] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", "defesa de jogadores: 4, defesa de animais: 16"];
    v756[287] = ["esfera do dragão", "dado na questt"];
    v756[242] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
    v756[277] = ["pedra verde", "você não vai trapacear, promete?"];
    v756[278] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
    v756[279] = ["pedra azul", "para pessoas muito gentis"];
    v756[150] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"];
    v756[151] = ["coroa laranja", "de repente você se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"];
    v756[152] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", "defesa de jogadores: 4, defesa de animais: 16"];
    v756[282] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
    v756[283] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
    v756[218] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
    v756[221] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
    v756[223] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
    v756[85] = ["regador", "permite regar as plantas", "dano: 1"];
    v756[47] = ["mochila", "mais espaço para seus itens!"];
    v756[211] = ["papel", "usado para fazer o livro"];
    v756[46] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
    v756[297] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
    v756[241] = ["fechadura", "permite você trancar seu baú"];
    v756[260] = ["chave", "permite destrancar um baú"];
    v756[261] = ["Totem", "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
    v756[216] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
    v756[285] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
    v756[292] = ["telhado", "esconde você um pouco e te esquenta!"];
    v756[284] = ["poço", "permite encher garrafas", "durabilidade: 1000"];
    v756[264] = ["muro de madeira", "você sabia que o muro dança?", "durabilidade: 1000"];
    v756[265] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
    v756[266] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", "durabilidade: 2000"];
    v756[267] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
    v756[213] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
    v756[262] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
    v756[270] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
    v756[271] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
    v756[272] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
    v756[214] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
    v756[268] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", "durabilidade: 1000"];
    v756[273] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
    v756[274] = ["porta de ouro", "você está re-construindo o el dorado?", "durabilidade: 2000"];
    v756[275] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
    v756[215] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
    v756[210] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", "durabilidade: 1000"];
    v756[228] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v756[237] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v756[244] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
    v756[2000] = "você não pode entrar no servidor";
    v756[2001] = "kickado: ";
    v756[2002] = "sua chave está em uso por outra pessoa";
    v756[2003] = "sua chave está errada";
    v756[2004] = "você tem uma versão velha, limpe seu cache";
    v756[2005] = "não tem mais recursos";
    v756[2006] = "você sobreviveu 1 dia";
    v756[2007] = "você sobreviveu ";
    v756[2008] = " dias";
    v756[2009] = "você está morto ;-;";
    v756[2010] = "servidor não pôde achar um local de spawn! spam o botão de play!";
    v756[2011] = "servidor está cheio! spam o botão de play!";
    v756[2012] = "não tem recursos";
    v756[2013] = "inventário está cheio (botão direito para deletar itens)";
    v756[2014] = " está morto";
    v756[2015] = "essa não é a ferramenta certa";
    v756[2016] = "você entrou no time";
    v756[2017] = "você está morto";
    v756[2018] = "entrou no time";
    v756[2019] = "seu time foi destruido";
    v756[2020] = "você saiu do time";
    v756[2021] = " saiu do time";
    v756[2022] = "alguém roubou sua ficha :>";
    v756[2023] = "escolha um servidor";
    v756[2024] = "jogadores";
    v756[2025] = "jogadores totais";
    v756[2026] = "jogadores nesse modo";
    v756[2027] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Apelido";
    v758[0] = ["você morreu sem motivo"];
    v758[1] = ["você morreu de fome, como o jogo diz"];
    v758[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
    v758[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
    v758[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
    v758[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
    v758[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
    v758[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
    v758[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
    v758[9] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
    v758[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
    v758[11] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
    v758[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
    v758[13] = ["você morreu de sede. melhor beber sua própria urina."];
    v758[14] = ["você sabia que você morre afogado? agora você sabe."];
    v758[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
    v758[16] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
    v758[17] = ["sua pele caindo aos pedaços, o sol te matou."];
    v758[18] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
    v758[19] = ["como vampiro, não chegue perto do alho."];
    v758[20] = ["você comeu alho como vampiro, o que você esperava?"];
    v758[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"];
  }
  function f81() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v750 = 0; v750 < 7; v750++) {
      document.getElementById("claim_reward_" + v750).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["Mano"];
    v756[233] = ["Tierra", "¡Tan limpia como mis manos!"];
    v756[217] = ["Arena", "¡Tengo arena en mis ojos!"];
    v756[200] = ["Madera", "¡Nunca hay suficiente!"];
    v756[199] = ["Piedra", "También llamada roca."];
    v756[202] = ["Oro", "Sé generoso, compártelo con los otros"];
    v756[203] = ["Diamante", "¿Que vas a hacer con él?"];
    v756[212] = ["Amatista", "Es Mauve como Lapa"];
    v756[224] = ["Harina", "Usada para cocinar."];
    v756[226] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
    v756[229] = ["Tarta", "¡Cumpleaños Feliz!", "Comida: 100"];
    v756[207] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
    v756[208] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
    v756[230] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
    v756[231] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
    v756[236] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
    v756[238] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"];
    v756[302] = ["Caramelos", "¡Solo para niños/as!", "Comida: 100"];
    v756[301] = ["Caña de Azúcar", "Pruébala, es deliciosa", "Comida: 100"];
    v756[303] = ["Guirnalda", "Perfecta para decorar el techo"];
    v756[206] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v756[201] = ["Baya", "No es venenosa.", "Comida: 10"];
    v756[225] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v756[227] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
    v756[290] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v756[291] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
    v756[293] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 Días"];
    v756[294] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
    v756[295] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 Días"];
    v756[296] = ["Planta de Espinas", "¡Te daña!"];
    v756[234] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", "Durabilidad: 2000"];
    v756[235] = ["Hielo", "Bueno para hacer tartas y agua"];
    v756[101] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", "Daño: 2"];
    v756[276] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
    v756[2] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
    v756[280] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
    v756[281] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
    v756[239] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
    v756[232] = ["Escamas", "¡Huele a pescado!"];
    v756[222] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
    v756[204] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
    v756[209] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
    v756[205] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
    v756[263] = ["Hilo", "Usado para craftear ropa y mochila"];
    v756[240] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
    v756[269] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
    v756[103] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
    v756[0] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
    v756[5] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
    v756[6] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
    v756[9] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
    v756[48] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
    v756[108] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
    v756[16] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
    v756[8] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
    v756[1] = ["Pico de Piedra", "Puede minar hasta oro", "Daño: 2"];
    v756[3] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", "Daño para estructuras: 1"];
    v756[4] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", "Daño para estructuras: 1"];
    v756[49] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", "Daño para estructuras: 1"];
    v756[62] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "Daño: 2", "Daño para estructuras: 20"];
    v756[63] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
    v756[64] = ["Martillo de Diamante", "Bueno para destruir estructuras", "Daño: 4", "Daño para estructuras: 40"];
    v756[65] = ["Martillo de Amatista", "Bueno para destruir estructuras", "Daño: 5", "Daño para estructuras: 50"];
    v756[72] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
    v756[12] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
    v756[13] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
    v756[14] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
    v756[15] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
    v756[60] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
    v756[82] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 2"];
    v756[86] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 3", "Daño para estructuras: 1"];
    v756[87] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 4", "Daño para estructuras: 1"];
    v756[88] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 5", "Daño para estructuras: 1"];
    v756[104] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
    v756[34] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
    v756[35] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
    v756[36] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
    v756[70] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
    v756[105] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
    v756[32] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
    v756[68] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
    v756[69] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
    v756[156] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"];
    v756[10] = ["Orejeras", "Como un abrigo pequeño.", "Te calienta en invierno y fuera del agua"];
    v756[11] = ["Chapka", "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
    v756[67] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
    v756[157] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
    v756[158] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"];
    v756[159] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", "Te calienta en invierno y fuera del agua"];
    v756[84] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
    v756[83] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
    v756[287] = ["Esfera del Dragón", "Dada en la misión"];
    v756[242] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
    v756[277] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
    v756[278] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
    v756[279] = ["Gema Azul", "Para gente muy amable"];
    v756[150] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v756[151] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v756[152] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
    v756[282] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
    v756[283] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
    v756[218] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
    v756[221] = ["Botella Vacia", "La puedes llenar de agua"];
    v756[223] = ["Regadera Vacía", "La tienes que llenar de agua"];
    v756[85] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
    v756[47] = ["Mochila", "¡Mas espacio para tus cosas!"];
    v756[211] = ["Hoja", "Usada para hacer un libro"];
    v756[46] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
    v756[297] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
    v756[241] = ["Cerradura", "Te permite cerrar tu cofre"];
    v756[260] = ["Llave", "Te permite abrir un cofre cerrado"];
    v756[261] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
    v756[216] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
    v756[285] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
    v756[292] = ["Techo", "Te esconde un poco y te protege del frío"];
    v756[284] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"];
    v756[264] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"];
    v756[265] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
    v756[266] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"];
    v756[267] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
    v756[213] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
    v756[262] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
    v756[270] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
    v756[271] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
    v756[272] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
    v756[214] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
    v756[268] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"];
    v756[273] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
    v756[274] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"];
    v756[275] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
    v756[215] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
    v756[210] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"];
    v756[228] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v756[237] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v756[244] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
    v756[2000] = "No puedes unirte a este servidor";
    v756[2001] = "Expulsado: ";
    v756[2002] = "Tu llave ya está usada";
    v756[2003] = "Tu llave está mal";
    v756[2004] = "Tienes una versión antigua, limpia tu cache";
    v756[2005] = "No hay mas recursos";
    v756[2006] = "Has sobrevivido 1 día";
    v756[2007] = "Has sobrevivido ";
    v756[2008] = " días";
    v756[2009] = "Estás muerto ;-;";
    v756[2010] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
    v756[2011] = "El servidor esta lleno, ¡spamea el botón de jugar!";
    v756[2012] = "Recurso vacio";
    v756[2013] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
    v756[2014] = " está muerto";
    v756[2015] = "Esta no es la herramienta correcta";
    v756[2016] = "Te has unido a un equipo";
    v756[2017] = "Estás muerto";
    v756[2018] = " se unió al equipo";
    v756[2019] = "Tu equipo ha sido destruido";
    v756[2020] = "Has dejado el equipo";
    v756[2021] = " dejo el equipo ";
    v756[2022] = "Alguien te robó tu token :>";
    v756[2023] = "Elige un servidor";
    v756[2024] = "jugadores";
    v756[2025] = "total de jugadores";
    v756[2026] = "Jugadores en este modo de juego";
    v756[2027] = "Próximamente...";
    document.getElementById("nickname_input").placeholder = "Apodo";
    v758[0] = ["Has muerto por ninguna razón"];
    v758[1] = ["Has muerto de hambre, como implica el nombre del juego dice"];
    v758[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
    v758[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
    v758[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
    v758[5] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
    v758[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
    v758[7] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
    v758[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
    v758[9] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
    v758[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
    v758[11] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
    v758[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
    v758[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
    v758[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
    v758[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
    v758[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
    v758[17] = ["Tu piel se cayó, el sol te quemó."];
    v758[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
    v758[19] = ["Eres un vampiro, no te quedes cerca del ajo."];
    v758[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
    v758[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"];
  }
  function f82() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v751 = 0; v751 < 7; v751++) {
      document.getElementById("claim_reward_" + v751).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["Hand"];
    v756[233] = ["Boden", "Dreckig!"];
    v756[217] = ["Sand", "Ich habe es in meine Augen bekommen!"];
    v756[200] = ["Holz", "Du kannst niemals zu viel haben!"];
    v756[199] = ["Stein", "Auch Fels gennant"];
    v756[202] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
    v756[203] = ["Diamant", "Was wirst du daraus machen?"];
    v756[212] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
    v756[224] = ["Mehl", "wird fürs Backen gebraucht"];
    v756[226] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
    v756[229] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", "Essen: 100"];
    v756[207] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
    v756[208] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
    v756[230] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
    v756[231] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
    v756[236] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
    v756[238] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"];
    v756[302] = ["Süßigkeiten", "Nur für Kinder!", "Essen: 100"];
    v756[301] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"];
    v756[303] = ["Girlande", "perfekter Schmuck für Dächer"];
    v756[206] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v756[201] = ["Beere", "Beeren lecker!", "Essen: 10"];
    v756[225] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v756[227] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
    v756[290] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v756[291] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
    v756[293] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v756[294] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
    v756[295] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"];
    v756[296] = ["Dornenbusch", "Es sticht!"];
    v756[234] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"];
    v756[235] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
    v756[101] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", "Schaden: 2"];
    v756[276] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
    v756[2] = ["Hasenfell", "Der Hase war so süß..."];
    v756[280] = ["Klares Fell", "Du bist eine Brotfabrik"];
    v756[281] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
    v756[239] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
    v756[232] = ["Schuppen", "Es riecht wie Fisch!"];
    v756[222] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
    v756[204] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
    v756[209] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
    v756[205] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
    v756[263] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
    v756[240] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
    v756[269] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
    v756[103] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
    v756[0] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
    v756[5] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
    v756[6] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v756[9] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v756[48] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
    v756[108] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
    v756[16] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
    v756[8] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
    v756[1] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"];
    v756[3] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v756[4] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v756[49] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v756[62] = ["Steinhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an Gebäuden: 20"];
    v756[63] = ["Goldhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
    v756[64] = ["Diamanthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 4", "Schaden an Gebäuden: 40"];
    v756[65] = ["Amethysthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 5", "Schaden an Gebäuden: 50"];
    v756[72] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
    v756[12] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
    v756[13] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
    v756[14] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
    v756[15] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
    v756[60] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
    v756[82] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"];
    v756[86] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v756[87] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v756[88] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v756[104] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
    v756[34] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
    v756[35] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
    v756[36] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
    v756[70] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
    v756[105] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
    v756[32] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[68] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[69] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[156] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[10] = ["Ohrwärmer", "Eine Art kleiner chapka.", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[11] = ["Chapka", "Auch Mantel genannt.", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[67] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
    v756[157] = ["Bauer", "Deine Pflanzen wachsen schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[158] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[159] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v756[84] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
    v756[83] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v756[287] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
    v756[242] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
    v756[277] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
    v756[278] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
    v756[279] = ["Blauer Edelstein", "Für sehr nette Leute"];
    v756[150] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v756[151] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v756[152] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v756[282] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
    v756[283] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
    v756[218] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
    v756[221] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
    v756[223] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
    v756[85] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
    v756[47] = ["Rucksack", "Mehr Platz im Inventar!"];
    v756[211] = ["Papier", "Wird fürs Büchermachen verwendet"];
    v756[46] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
    v756[297] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
    v756[241] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
    v756[260] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
    v756[261] = ["Totem", "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
    v756[216] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
    v756[285] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
    v756[292] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
    v756[284] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", "Haltbarkeit: 1000"];
    v756[264] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"];
    v756[265] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
    v756[266] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"];
    v756[267] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
    v756[213] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
    v756[262] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
    v756[270] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
    v756[271] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
    v756[272] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
    v756[214] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
    v756[268] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", "Haltbarkeit: 1000"];
    v756[273] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
    v756[274] = ["Goldtür", "Baust du el dorado?", "Haltbarkeit: 2000"];
    v756[275] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
    v756[215] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
    v756[210] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"];
    v756[228] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v756[237] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v756[244] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
    v756[2000] = "Du kannst diesem Server nicht beitreten";
    v756[2001] = "Gekickt: ";
    v756[2002] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
    v756[2003] = "Dein Schlüssel ist falsch";
    v756[2004] = "Deine Version ist veraltet, säubere dein Cache";
    v756[2005] = "Es gibt keine neuen Ressourcen";
    v756[2006] = "Du hast einen Tag überlebt";
    v756[2007] = "Du hast überlebt ";
    v756[2008] = " Tage";
    v756[2009] = "Du bist gestorben ;-;";
    v756[2010] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
    v756[2011] = "Server ist voll! Drücke immer wieder auf spielen!";
    v756[2012] = "Ressource ist leer";
    v756[2013] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
    v756[2014] = " ist gestorben";
    v756[2015] = "Das ist nicht das richtige Werkzeug";
    v756[2016] = "Du bist einem Team beigetreten";
    v756[2017] = "Du bist gestorben";
    v756[2018] = " ist dem Team beigetreten";
    v756[2019] = "Dein Team wurde zerstört";
    v756[2020] = "Du hast das Team verlassen";
    v756[2021] = " hat das Team verlassen";
    v756[2022] = "Jemand hat dein Token gestohlen :>";
    v756[2023] = "Suche dir ein Server aus";
    v756[2024] = "Spieler";
    v756[2025] = "alle Spieler";
    v756[2026] = "Spieler in diesem Modus";
    v756[2027] = "Bald verfügbar...";
    document.getElementById("nickname_input").placeholder = "Spitzname";
    v758[0] = ["Du wurdest ohne Grund getötet"];
    v758[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
    v758[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
    v758[3] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
    v758[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
    v758[5] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
    v758[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
    v758[7] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
    v758[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
    v758[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
    v758[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
    v758[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
    v758[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
    v758[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
    v758[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
    v758[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
    v758[16] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
    v758[17] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
    v758[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
    v758[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
    v758[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
    v758[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"];
  }
  const v752 = 0;
  function f83() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " BACK TO THE GAME";
    v756[2029] = " Share on Twitter";
    v756[2030] = " Share on Facebook";
    v756[2031] = "You can buy items on the shop in the next game with your points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Kill";
    v756[2035] = "Days survived";
    v756[2036] = "Building method: Free. Press G to change";
    v756[2037] = "Building method: Grid. Press G to change";
    v756[299] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v756[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v753 = 0; v753 < 7; v753++) {
      document.getElementById("claim_reward_" + v753).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v756[7] = ["Ręka"];
    v756[233] = ["Ziemia", "Brudna!"];
    v756[217] = ["Piasek", "Mam go w oczach!"];
    v756[200] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
    v756[199] = ["Kamień", "Także nazywany skałą"];
    v756[202] = ["Złoto", "Bądź hojny, daj trochę innym"];
    v756[203] = ["Diament", "Co z nim zrobisz?"];
    v756[212] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
    v756[224] = ["Mąka", "Używana w gotowaniu"];
    v756[226] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
    v756[229] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"];
    v756[207] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
    v756[208] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
    v756[230] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
    v756[231] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
    v756[236] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
    v756[238] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"];
    v756[302] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"];
    v756[301] = ["Laska cukrowa", "Spróbuj, jest przepyszna", "Jedzenie: 100"];
    v756[303] = ["Girlanda", "Idealna do dekorowania dachów"];
    v756[206] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v756[201] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
    v756[225] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v756[227] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
    v756[290] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v756[291] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
    v756[293] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v756[294] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
    v756[295] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", "Wytrzymałość: 1000", "Czas życia: 8 dni"];
    v756[296] = ["Kolczasty krzew", "Kłuje!"];
    v756[234] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", "Wytrzymałość: 2000"];
    v756[235] = ["Lód", "Użyteczny do robienia ciast i wody"];
    v756[101] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
    v756[276] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
    v756[2] = ["Skóra królika", "Ten królik był taki słodziutki..."];
    v756[280] = ["Skóra", "Jesteś fabryką chleba"];
    v756[281] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
    v756[239] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
    v756[232] = ["Łuski", "Pachnie jak ryba!"];
    v756[222] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
    v756[204] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
    v756[209] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
    v756[205] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
    v756[263] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
    v756[240] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
    v756[269] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
    v756[103] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
    v756[0] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
    v756[5] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
    v756[6] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v756[9] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v756[48] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
    v756[108] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
    v756[16] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
    v756[8] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
    v756[1] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
    v756[3] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v756[4] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v756[49] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v756[62] = ["Kamienny młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
    v756[63] = ["Złoty młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
    v756[64] = ["Diamentowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 4", "Obrażenia do budowli: 40"];
    v756[65] = ["Ametystowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 5", "Obrażenia do budowli: 50"];
    v756[72] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
    v756[12] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
    v756[13] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
    v756[14] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
    v756[15] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
    v756[60] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
    v756[82] = ["Kamienna łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 2"];
    v756[86] = ["Złota łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v756[87] = ["Diamentowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v756[88] = ["Ametystowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v756[104] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
    v756[34] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
    v756[35] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
    v756[36] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
    v756[70] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
    v756[105] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
    v756[32] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", "Ciepło w i poza zimą"];
    v756[68] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", "Ciepło w i poza zimą"];
    v756[69] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", "Ciepło w i poza zimą"];
    v756[156] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
    v756[10] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", "Ciepło w i poza zimą"];
    v756[11] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
    v756[67] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
    v756[157] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
    v756[158] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
    v756[159] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepło w i poza zimą"];
    v756[84] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
    v756[83] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v756[287] = ["Smocza kula", "Zdobyta podczas zadania"];
    v756[242] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
    v756[277] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
    v756[278] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
    v756[279] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
    v756[150] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v756[151] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v756[152] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v756[282] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
    v756[283] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
    v756[218] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
    v756[221] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
    v756[223] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
    v756[85] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
    v756[47] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
    v756[211] = ["Papier", "Używany w tworzeniu książki"];
    v756[46] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
    v756[297] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
    v756[241] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
    v756[260] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
    v756[261] = ["Totem", "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
    v756[216] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
    v756[285] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
    v756[292] = ["Dach", "Trochę cie ogrzewa i chowa!"];
    v756[284] = ["Studnia", "Umożliwia napełnienie butelki", "Wytrzymałość: 1000"];
    v756[264] = ["Drewniany mur", "Znasz taniec ścian?", "Wytrzymałość: 1000"];
    v756[265] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
    v756[266] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", "Wytrzymałość: 2000"];
    v756[267] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
    v756[213] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
    v756[262] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
    v756[270] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
    v756[271] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
    v756[272] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
    v756[214] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
    v756[268] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", "Wytrzymałość: 1000"];
    v756[273] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
    v756[274] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", "Wytrzymałość: 2000"];
    v756[275] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
    v756[215] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
    v756[210] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", "Wytrzymałość: 1000"];
    v756[228] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v756[237] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v756[244] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
    v756[2000] = "Nie możesz dołączyć do tego serwera";
    v756[2001] = "Wyrzucony: ";
    v756[2002] = "Twój klucz jest aktualnie używany przez innego gracza";
    v756[2003] = "Twój klucz jest nieprawidłowy";
    v756[2004] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
    v756[2005] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
    v756[2006] = "Przeżyłeś 1 dzień";
    v756[2007] = "Przeżyłeś ";
    v756[2008] = " dni";
    v756[2009] = "Jesteś martwy ;-;";
    v756[2010] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
    v756[2011] = "Serwer jest pełny! Spamuj przycisk zagraj!";
    v756[2012] = "Źródło jest puste";
    v756[2013] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
    v756[2014] = " jest martwy";
    v756[2015] = "To nie jest właściwe narzędzie";
    v756[2016] = "Dołączyłeś do drużyny";
    v756[2017] = "Jesteś martwy";
    v756[2018] = " dołączył do drużyny";
    v756[2019] = "Twoja drużyna została zniszczona";
    v756[2020] = " Opuściłeś drużynę";
    v756[2021] = " opuścił drużynę";
    v756[2022] = "Ktoś ukradł twój żeton :>";
    v756[2023] = "Wybierz serwer";
    v756[2024] = "graczy";
    v756[2025] = "wszystkich graczy";
    v756[2026] = "graczy w tym trybie";
    v756[2027] = "Już wkrótce...";
    document.getElementById("nickname_input").placeholder = "Przydomek";
    v758[0] = ["Zostałeś zabity bez powodu"];
    v758[1] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
    v758[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
    v758[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
    v758[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
    v758[5] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
    v758[6] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
    v758[7] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
    v758[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
    v758[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
    v758[10] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
    v758[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
    v758[12] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
    v758[13] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
    v758[14] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
    v758[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
    v758[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
    v758[17] = ["Twoja skóra odpada, słońce cię zabija."];
    v758[18] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
    v758[19] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
    v758[20] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
    v758[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", "Uuunnnggg...", "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"];
  }
  function f84() {
    v756[286] = ["You feel a great power emanating from this orb"];
    v758[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v756[298] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v756[2028] = " RETOUR AU JEU";
    v756[2029] = " Partage sur Twitter";
    v756[2030] = " Partage sur Facebook";
    v756[2031] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
    v756[2032] = "points";
    v756[2033] = "Score";
    v756[2034] = "Tués";
    v756[2035] = "Jours survécus";
    v756[2036] = "Mode de construction: Libre. Appuie sur G pour changer";
    v756[2037] = "Mode de construction: Grille. Appuie sur G pour changer";
    v756[299] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", "Food: 10"];
    v756[18] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"];
    v756[107] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"];
    v756[300] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quêtes";
    document.getElementById("timeremainingquest").innerHTML = "Temps Restant";
    document.getElementById("constraintquest").innerHTML = " Contraintes";
    document.getElementById("claim_rewards").innerHTML = " Résultat";
    document.getElementById("rewardquest").innerHTML = " Récompenses";
    document.getElementById("killdragon_1").innerHTML = " Collecte 1 Cœur de dragon dans la cave";
    document.getElementById("amethyst_2").innerHTML = " Récolte 1 améthyste";
    document.getElementById("survive20min_3").innerHTML = "Survis sans perdre de vie";
    document.getElementById("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trésor";
    document.getElementById("dont_hit_5").innerHTML = " Sois pacifique";
    document.getElementById("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
    document.getElementById("winter_7").innerHTML = " Après 1 jour, survis en hiver";
    for (var v754 = 0; v754 < 7; v754++) {
      document.getElementById("claim_reward_" + v754).innerHTML = "RÉCOMPENSE!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUITTER";
    v756[7] = ["Main"];
    v756[233] = ["Terre", "C'est sale!"];
    v756[217] = ["Sable", "J'en ai dans les yeux"];
    v756[200] = ["Bois", "Tu n'en auras jamais trop!"];
    v756[199] = ["Pierre", "Aussi appelée roche"];
    v756[202] = ["Or", "Sois généreux, donne en aux autres"];
    v756[203] = ["Diamant", "Comme tes yeux! wesh"];
    v756[212] = ["Améthyste", "C'est Mauve comme Lapa"];
    v756[224] = ["Farine", "Utile pour la cuisine"];
    v756[226] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
    v756[229] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
    v756[207] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
    v756[208] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
    v756[230] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
    v756[231] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
    v756[236] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
    v756[238] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"];
    v756[302] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
    v756[301] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
    v756[303] = ["Guirlandes", "Utilisable sur les toits"];
    v756[206] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v756[201] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
    v756[225] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v756[227] = ["Blé", "Peut être transformé en farine dans les moulins"];
    v756[290] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v756[291] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
    v756[293] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v756[294] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
    v756[295] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "Durabilité: 1000", "Durée de vie: 8 jours"];
    v756[296] = ["Ronces", "Ça pique!"];
    v756[234] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "Durabilité: 2000"];
    v756[235] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
    v756[101] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", "Dégâts: 2"];
    v756[276] = ["Peau de loup", "Il était où le gentil ti Youki?"];
    v756[2] = ["Peau de lapin", "Vous êtes un monstre"];
    v756[280] = ["Fourrure blanche", "Tu es une usine à pain"];
    v756[281] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
    v756[239] = ["Fourrure d'hiver", "Il voulait juste un calin"];
    v756[232] = ["Écailles", "Ça sent le poisson!"];
    v756[222] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
    v756[204] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
    v756[209] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
    v756[205] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
    v756[263] = ["Fil", "Utile pour faire des chapeaux et un sac"];
    v756[240] = ["Fil de diamant", "Utile pour faire des chapeaux"];
    v756[269] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
    v756[103] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
    v756[0] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
    v756[5] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
    v756[6] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
    v756[9] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
    v756[48] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
    v756[108] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
    v756[16] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
    v756[8] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
    v756[1] = ["Pioche en pierre", "Peut aussi récolter de l'or", "Dégâts: 2"];
    v756[3] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
    v756[4] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
    v756[49] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
    v756[62] = ["Marteau en pierre", "Utile pour détruire les bâtiments", "Ne marche pas bien sur du diamant et améthyste", "Dégâts: 2", "Démolition: 20"];
    v756[63] = ["Marteau en or", "Utile pour détruire les bâtiments", "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
    v756[64] = ["Marteau en diamant", "Utile pour détruire les bâtiments", "Dégâts: 4", "Démolition: 40"];
    v756[65] = ["Marteau en améthyste", "Utile pour détruire les bâtiments", "Dégâts: 5", "Démolition: 50"];
    v756[72] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
    v756[12] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
    v756[13] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
    v756[14] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
    v756[15] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
    v756[60] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
    v756[82] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 2"];
    v756[86] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 3", "Buildings Dégâts: 1"];
    v756[87] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 4", "Buildings Dégâts: 1"];
    v756[88] = ["Pelle en améthyste", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 5", "Buildings Dégâts: 1"];
    v756[104] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
    v756[34] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
    v756[35] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
    v756[36] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
    v756[70] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
    v756[105] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
    v756[32] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[68] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[69] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[156] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[10] = ["Cache-oreilles", "Une sorte de petite chapka.", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[11] = ["Chapka", "Comment ça va, camarade?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[67] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
    v756[157] = ["Tunique", "Les plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[158] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[159] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v756[84] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
    v756[83] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 4, Défense contre animaux: 16"];
    v756[287] = ["Orbe du Dragon", "Donné en Quête"];
    v756[242] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
    v756[277] = ["Gemme verte", "Tu n'as pas triché, promis?"];
    v756[278] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
    v756[279] = ["Gemme bleue", "Pour les gens trop gentils"];
    v756[150] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", "Défense: 4, Défense contre animaux: 16"];
    v756[151] = ["Couronne orange", "Tu te sens soudainement très chanceux", "Défense: 4, Défense contre animaux: 16"];
    v756[152] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", "Défense: 4, Défense contre animaux: 16"];
    v756[282] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
    v756[283] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
    v756[218] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
    v756[221] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
    v756[223] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
    v756[85] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
    v756[47] = ["Sac", "Plus de place dans ton inventaire!"];
    v756[211] = ["Papier", "Pour fabriquer toute sorte d'objets"];
    v756[46] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
    v756[297] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
    v756[241] = ["Cadenas", "Pour verrouiller un coffre"];
    v756[260] = ["Clé", "Pour déverrouiller un coffre"];
    v756[261] = ["Totem", "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
    v756[216] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
    v756[285] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
    v756[292] = ["Toit", "Te cache un peu et te réchauffe"];
    v756[284] = ["Puit", "Permet de remplir des bouteilles", "Durabilité: 1000"];
    v756[264] = ["Mur en bois", "Tu connais la danse des murs?", "Durabilité: 1000"];
    v756[265] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
    v756[266] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "Durabilité: 2000"];
    v756[267] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
    v756[213] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
    v756[262] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
    v756[270] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
    v756[271] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
    v756[272] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
    v756[214] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
    v756[268] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", "Durabilité: 1000"];
    v756[273] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
    v756[274] = ["Porte en or", "Tu reconstruis l'el dorado?", "Durabilité: 2000"];
    v756[275] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
    v756[215] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
    v756[210] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", "Durabilité: 1000"];
    v756[228] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v756[237] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v756[244] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
    v756[2000] = "Tu ne peux pas rejoindre le serveur";
    v756[2001] = "Expulsé: ";
    v756[2002] = "Ta clé est déjà utilisée par quelqu'un d'autre";
    v756[2003] = "Ta clé est fausse";
    v756[2004] = "Tu as une vieille version, rafraichis tes caches";
    v756[2005] = "Il n'y a plus de nouvelles ressources";
    v756[2006] = "Tu as survécu 1 jour";
    v756[2007] = "Tu as survécu ";
    v756[2008] = " jours";
    v756[2009] = "Tu es mort ;-;";
    v756[2010] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
    v756[2011] = "Le serveur est complet! Spam le bouton jouer";
    v756[2012] = "Cette ressource est vide";
    v756[2013] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
    v756[2014] = " est mort";
    v756[2015] = "Ce n'est pas le bon outil";
    v756[2016] = "Tu as rejoins une équipe";
    v756[2017] = "Tu es mort";
    v756[2018] = " a rejoint l'équipe";
    v756[2019] = "Ton équipe a été détruite";
    v756[2020] = "Tu as quitté l'équipe";
    v756[2021] = " a quitté l'équipe";
    v756[2022] = "Quelqu'un a volé ton token :>";
    v756[2023] = "Choisis un serveur";
    v756[2024] = "joueurs";
    v756[2025] = "joueurs";
    v756[2026] = "joueurs dans ce mode";
    v756[2027] = "Bientôt...";
    document.getElementById("nickname_input").placeholder = "Surnom";
    v758[0] = ["Tu as été tué sans raison particulière, juste comme ça"];
    v758[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
    v758[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
    v758[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
    v758[4] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
    v758[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
    v758[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
    v758[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
    v758[8] = ["Cet ours voulait juste un câlin."];
    v758[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
    v758[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
    v758[11] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
    v758[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
    v758[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
    v758[14] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
    v758[15] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
    v758[16] = ["Un kraken a 'kraké' tes os."];
    v758[17] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
    v758[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
    v758[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
    v758[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
    v758[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
    ΔᐃⲆΔΔΔⲆ = "Uuunnnggg";
    ⲆΔⵠⲆⵠᐃΔ = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"];
  }
  const v755 = 0;
  var v756 = [];
  for (var v768 = 0; v768 < v593; v768++) {
    v756[v768] = "";
  }
  var v758 = [];
  $(".md-languages").on("click", function () {
    $(this).toggleClass("active");
  });
  $(".md-languages ul li").on("click", function () {
    var v759 = $(this).text();
    if (v759 === "English") {
      f74();
    } else if (v759 === "Français") {
      f84();
    } else if (v759 === "Deutsch") {
      f82();
    } else if (v759 === "Español") {
      f81();
    } else if (v759 === "Português") {
      f80();
    } else if (v759 === "Русский") {
      f78();
    } else if (v759 === "Polski") {
      f83();
    }
    ΔⲆⲆᐃⲆⵠⲆ = [];
    v2860.ⵠⲆᐃᐃ.label = [];
    $(".md-languages ul li").removeClass("active");
    $(this).addClass("active");
    $(".md-languages label button").text(v759);
  });
  v559 = "EN";
  const v760 = 10;
  var v761;
  switch (navigator.language || navigator.userLanguage) {
    case "ru":
      v559 = "RU";
      break;
    case "en":
      v559 = "EN";
      break;
    case "es":
      v559 = "SP";
      break;
    case "fr":
      v559 = "FR";
      break;
    case "pl":
      v559 = "PL";
      break;
    case "de":
      v559 = "DE";
      break;
    case "pt":
      v559 = "PT";
  }
  function f85(p522, p523, p524, p525) {
    const v762 = ((4268 + p522) * 1103515245 + 12345) % 2147483648;
    const v763 = p523 ^ 36385;
    const v764 = (p524 | 4449) & ~(p524 & 4449);
    const v765 = ((p525 + 20187) * 2147483629 + 2147483587) % 2147483647;
    const vF82 = f8(v762, v763, 0, v765, v762);
    f64(v764, v765, v762, v763);
    return (vF82 | 10815) & ~(vF82 & 10815);
  }
  if (v559 === "FR") {
    $(".md-languages label button").text("Français");
    v761 = f84;
  } else if (v559 === "PL") {
    $(".md-languages label button").text("Polski");
    v761 = f83;
  } else if (v559 === "PT") {
    $(".md-languages label button").text("Português");
    v761 = f80;
  } else if (v559 === "SP") {
    $(".md-languages label button").text("Español");
    v761 = f81;
  } else if (v559 === "RU") {
    $(".md-languages label button").text("Русский");
    v761 = f78;
  } else if (v559 === "DE") {
    $(".md-languages label button").text("Deutsch");
    v761 = f82;
  } else {
    $(".md-languages label button").text("English");
    v761 = f74;
  }
  function f86(p526) {
    return f44(p526, 15283);
  }
  ᐃΔ = {
    ⵠⵠⵠΔⲆᐃⲆⲆⵠ: "img/logo.png",
    ᐃⲆΔⲆⲆΔⵠ: "img/mapday.png",
    ⵠⲆΔⵠⵠⲆⵠ: "img/mapnight.png",
    ⲆⵠⲆᐃⲆΔⲆⵠⲆ: "img/bigzday.png",
    ΔΔⵠⲆΔⲆⲆᐃⵠ: "img/bigznight.png",
    ᐃΔⵠΔⲆⵠΔ: "img/bigday-river1.png",
    ΔΔᐃΔⵠⵠΔᐃΔ: "img/bigday-lake.png",
    ΔⵠᐃⲆⵠⵠᐃ: "img/bigday-berry.png",
    ᐃᐃΔⵠⵠⵠᐃ: "img/bigday-stone1.png",
    ΔⵠⲆⲆᐃΔⵠ: "img/bigday-stone2.png",
    ΔᐃⵠⲆⲆⲆⲆ: "img/bigday-gold1.png",
    ⲆᐃⵠⲆΔΔⵠ: "img/bigday-gold2.png",
    ⲆΔᐃⲆⲆΔΔ: "img/bigday-emerald1.png",
    ᐃⵠⲆⲆΔⵠⲆ: "img/bigday-emerald2.png",
    ᐃᐃᐃΔΔⵠⲆ: "img/bigday-amethyst.png",
    ΔᐃᐃⲆΔΔⵠ: "img/bigday-bear.png",
    ⲆΔΔΔΔⲆΔ: "img/bigday-cave.png",
    ⲆΔⲆᐃⲆΔⲆ: "img/bigday-diamond.png",
    ⵠᐃⵠΔⵠᐃⵠ: "img/bigday-island.png",
    ᐃᐃᐃΔᐃΔⵠ: "img/bigday-reidite.png",
    ⵠΔΔⲆⲆⵠΔ: "img/bigday-spider.png",
    ⲆΔΔⲆⵠⵠⵠ: "img/bigday-wolf.png",
    ⵠᐃΔⲆⵠⵠⲆ: "img/bigday-fir-tree.png",
    ΔΔⲆΔⵠΔΔ: "img/bigday-fox.png",
    ⵠⵠⵠΔᐃⲆⲆ: "img/bigday-kraken.png",
    ᐃᐃⲆⵠΔᐃΔ: "img/bigday-piranha.png",
    ᐃⲆⲆⲆⵠΔⲆ: "img/bigday-cactus.png",
    ⲆⲆᐃΔᐃᐃΔ: "img/bigday-magma.png",
    ΔΔⲆⲆΔᐃᐃ: "img/bigday-aquamarine1.png",
    ⲆⲆΔⲆⲆᐃⵠ: "img/bigday-aquamarine2.png",
    ΔⲆⵠⵠΔᐃⵠ: "img/bigday-coal1.png",
    ΔⲆⵠⲆΔⵠΔ: "img/bigday-coal2.png",
    ΔᐃΔⵠΔᐃⲆ: "img/bigday-ruby1.png",
    ⵠᐃᐃΔⲆᐃⲆ: "img/bigday-ruby2.png",
    ⲆᐃᐃᐃᐃᐃΔ: "img/bigday-jade1.png",
    ⵠᐃⵠⵠⲆΔⵠ: "img/bigday-jade2.png",
    ΔⵠⲆⲆⲆⵠⲆ: "img/bigday-sapphire1.png",
    ⲆΔⲆᐃᐃⲆᐃ: "img/bigday-sapphire2.png",
    ᐃΔⵠⵠᐃⲆᐃ: "img/bigday-topaz1.png",
    ΔᐃⲆᐃⲆⵠⲆ: "img/bigday-topaz2.png",
    ᐃⵠΔⲆⲆⲆᐃ: "img/bigday-iron1.png",
    ⲆᐃΔΔΔⵠⵠ: "img/bigday-iron2.png",
    ⵠΔΔᐃⵠΔᐃ: "img/bigday-copper1.png",
    ⲆⲆᐃⵠᐃΔⲆ: "img/bigday-copper2.png",
    ⵠΔᐃᐃⵠᐃⵠ: "img/bigday-jungle-tree.png",
    ⲆᐃⵠΔⵠᐃⵠ: "img/bigday-jungle-bush.png",
    ᐃⵠᐃⵠΔⵠⵠ: "img/bigday-jungle-stone1.png",
    ⵠⲆⵠᐃⵠᐃΔ: "img/bigday-jungle-stone2.png",
    ᐃΔⵠⲆⲆᐃⲆ: "img/bigday-banana-plant.png",
    ⵠⲆⵠΔⲆⲆⵠ: "img/bigday-river1.png",
    ᐃΔᐃⲆᐃⵠⵠⵠⲆ: "img/bignight-lake.png",
    ⲆⲆΔⵠⵠⲆⲆⵠⲆ: "img/bignight-berry.png",
    ΔⵠⵠΔⲆⲆⵠ: "img/bignight-stone1.png",
    ⵠⵠⲆⲆⲆΔᐃ: "img/bignight-stone2.png",
    ΔⲆΔᐃⵠᐃⲆ: "img/bignight-gold1.png",
    ⲆΔⲆⵠⲆⵠᐃ: "img/bignight-gold2.png",
    ΔⵠΔᐃⵠⵠⲆ: "img/bignight-emerald1.png",
    ᐃⲆΔᐃⲆⵠΔ: "img/bignight-emerald2.png",
    ⲆΔΔⵠᐃⵠⲆ: "img/bignight-amethyst.png",
    ⵠᐃᐃΔΔⲆᐃ: "img/bignight-bear.png",
    ᐃΔΔⲆⵠᐃⲆ: "img/bignight-cave.png",
    ⲆⵠⵠΔᐃⲆⲆ: "img/bignight-diamond.png",
    ⵠΔΔΔᐃⵠⵠ: "img/bignight-island.png",
    ⲆᐃⲆΔⵠᐃΔ: "img/bignight-reidite.png",
    ᐃⲆⲆⲆΔᐃⵠ: "img/bignight-spider.png",
    ΔⵠΔᐃⲆΔΔ: "img/bignight-wolf.png",
    ΔᐃΔⲆⵠΔⲆ: "img/bignight-fir-tree.png",
    ΔᐃⵠⵠΔΔⲆ: "img/bignight-fox.png",
    ΔᐃⲆΔⵠⵠⲆ: "img/bignight-kraken.png",
    ΔᐃⲆᐃᐃⲆⲆ: "img/bignight-piranha.png",
    ⵠⵠⵠΔⲆΔᐃ: "img/bignight-cactus.png",
    ᐃΔⲆⲆᐃⵠᐃ: "img/bignight-magma.png",
    ΔΔⲆⵠⵠΔⵠ: "img/bignight-aquamarine1.png",
    ΔᐃΔⲆΔΔⲆ: "img/bignight-aquamarine2.png",
    ⵠⵠⲆⵠᐃᐃⵠ: "img/bignight-coal1.png",
    ΔᐃᐃΔⲆΔᐃ: "img/bignight-coal2.png",
    ΔΔⲆΔⵠᐃⵠ: "img/bignight-ruby1.png",
    ᐃᐃⲆⵠᐃⲆᐃ: "img/bignight-ruby2.png",
    ΔⵠΔⵠΔⵠⲆ: "img/bignight-jade1.png",
    ᐃΔᐃΔⲆⲆᐃ: "img/bignight-jade2.png",
    ⵠΔᐃᐃΔⲆⲆ: "img/bignight-sapphire1.png",
    ⲆⵠᐃⵠⲆᐃᐃ: "img/bignight-sapphire2.png",
    ᐃΔᐃᐃⲆⲆⲆ: "img/bignight-topaz1.png",
    ᐃᐃΔΔᐃⵠᐃ: "img/bignight-topaz2.png",
    ⵠᐃᐃᐃⲆᐃᐃ: "img/bignight-iron1.png",
    ᐃΔΔᐃΔⲆⵠ: "img/bignight-iron2.png",
    ᐃᐃⵠᐃⲆᐃⲆ: "img/bignight-copper1.png",
    ⵠⲆⵠᐃⲆⵠⵠ: "img/bignight-copper2.png",
    ΔⵠⵠᐃΔΔⵠ: "img/bignight-jungle-tree.png",
    ⵠΔΔΔⵠⲆᐃ: "img/bignight-jungle-bush.png",
    ⵠⵠᐃⵠΔᐃΔ: "img/bignight-jungle-stone1.png",
    ⵠⵠⵠᐃᐃⵠΔ: "img/bignight-jungle-stone2.png",
    ᐃⲆⲆΔⲆⵠⲆ: "img/bignight-banana-plant.png",
    ΔΔᐃⲆΔⲆΔ: "img/bigday-desert.png",
    ΔΔᐃⵠΔⵠΔ: "img/bigday-winter.png",
    ᐃΔⵠⵠᐃΔᐃ: "img/bigday-lava.png",
    ⲆⲆⲆⲆΔⵠΔ: "img/bigday-forest.png",
    ⵠΔⲆⵠΔᐃⵠ: "img/bigday-jungle.png",
    ⲆⲆᐃⲆⲆᐃΔ: "img/bignight-desert.png",
    ⲆΔΔΔⲆⵠΔ: "img/bignight-winter.png",
    ⲆᐃᐃⲆΔᐃⲆ: "img/bignight-lava.png",
    ⵠⵠⵠⲆⵠⵠᐃ: "img/bignight-forest.png",
    ᐃΔⲆΔⲆΔᐃ: "img/bignight-jungle.png",
    ΔⲆⵠΔⵠⲆⵠ: "img/day-river-wave.png",
    ⵠⵠΔᐃⲆΔⵠ: "img/night-river-wave.png",
    ΔⵠⲆΔⵠⲆΔ: "img/day-fog0.png",
    ᐃΔᐃᐃΔᐃᐃ: "img/day-fog1.png",
    ᐃⵠᐃⵠⵠᐃΔ: "img/day-fog2.png",
    ⲆΔⲆᐃΔΔⵠ: "img/night-fog0.png",
    Δⵠⵠⵠᐃⵠᐃ: "img/night-fog1.png",
    ⲆⵠⵠⲆⵠΔⵠ: "img/night-fog2.png",
    ΔᐃᐃΔᐃⵠⲆ: "img/day-fogdesert0.png",
    ⲆΔⵠⲆΔΔΔ: "img/day-fogdesert1.png",
    ⵠΔⵠᐃⲆᐃᐃ: "img/day-fogdesert2.png",
    ⵠⲆᐃΔΔᐃΔ: "img/night-fogdesert0.png",
    ⵠΔⲆⵠⲆΔᐃ: "img/night-fogdesert1.png",
    ⲆⵠⲆᐃᐃⲆⵠ: "img/night-fogdesert2.png",
    ΔⲆΔⲆᐃΔΔ: "img/day-cross-server.png",
    ⲆⵠⲆⵠᐃᐃⲆ: "img/day-here-server.png",
    ⵠᐃⲆΔⵠⵠΔ: "img/day-finish-server.png",
    ᐃΔᐃⲆⲆⲆᐃ: "img/day-item-server.png",
    ΔᐃΔⲆᐃΔΔ: "img/day-skull-server.png",
    ⲆⲆⵠᐃⵠⲆⵠ: "img/night-cross-server.png",
    ᐃᐃᐃⲆⲆΔⵠ: "img/night-here-server.png",
    ⲆⲆⵠᐃⵠⲆΔ: "img/night-finish-server.png",
    ⲆⵠΔΔΔᐃΔ: "img/night-item-server.png",
    ΔⲆⵠⵠⵠⵠᐃ: "img/night-skull-server.png",
    ⵠΔⵠΔΔⵠΔ: "img/day-reidite0.png",
    ⵠⲆⵠᐃⵠⵠΔ: "img/night-reidite0.png",
    ᐃᐃᐃΔᐃⲆᐃ: "img/day-reidite1.png",
    ΔᐃⲆᐃᐃᐃⵠ: "img/night-reidite1.png",
    ᐃΔᐃΔⲆᐃᐃ: "img/day-reidite2.png",
    ⵠᐃⵠᐃΔⵠΔ: "img/night-reidite2.png",
    ⲆᐃᐃΔᐃᐃⵠ: "img/day-lava1.png",
    ΔⲆᐃΔⵠΔⲆ: "img/night-lava1.png",
    ᐃΔⲆΔΔⲆᐃ: "img/day-lava2.png",
    ⵠΔΔΔⲆΔᐃ: "img/night-lava2.png",
    ᐃⵠᐃⲆᐃΔᐃ: "img/day-lava3.png",
    ⵠⵠⲆⲆⲆᐃⲆ: "img/night-lava3.png",
    ⲆΔΔᐃΔⲆⵠ: "img/day-lava4.png",
    ⵠⲆΔⵠⲆⵠⲆ: "img/night-lava4.png",
    ᐃΔΔⵠⵠᐃⲆ: "img/day-lava5.png",
    ᐃⵠⲆΔᐃᐃΔ: "img/night-lava5.png",
    ΔⵠⵠΔⲆᐃΔ: "img/day-lava6.png",
    ⵠᐃⵠⲆᐃᐃⵠ: "img/night-lava6.png",
    ⲆⵠⵠⵠᐃⲆⲆ: "img/day-lava-ground1.png",
    ⵠᐃⵠΔΔΔΔ: "img/night-lava-ground1.png",
    ⲆᐃⲆΔⲆⲆᐃ: "img/day-lava-ground2.png",
    ᐃⵠᐃⵠⲆⵠⵠ: "img/night-lava-ground2.png",
    ⵠᐃΔⵠⲆⲆⵠ: "img/day-lava-ground3.png",
    ΔΔᐃⵠᐃⲆⲆ: "img/night-lava-ground3.png",
    ᐃᐃⲆⲆⲆⲆⲆ: "img/day-lava-ground4.png",
    ΔⵠᐃⵠΔΔᐃ: "img/night-lava-ground4.png",
    ⵠⲆⵠⲆⵠᐃΔ: "img/day-lava-ground5.png",
    ⲆⵠΔⵠΔᐃᐃ: "img/night-lava-ground5.png",
    ⵠⵠⲆΔᐃⵠⵠ: "img/day-lava-ground6.png",
    ⵠⲆᐃᐃΔⵠⲆ: "img/night-lava-ground6.png",
    ΔΔΔᐃΔᐃᐃ: "img/day-fire-mob.png",
    ᐃᐃⵠⲆᐃⲆⵠ: "img/night-fire-mob.png",
    ΔⵠⲆⵠⲆΔⲆ: "img/hurt-fire-mob.png",
    ᐃᐃΔⲆⲆⲆⵠ: "img/day-diamond-protection.png",
    ⵠᐃᐃⵠⵠΔⲆ: "img/night-diamond-protection.png",
    ⵠⵠΔⵠΔⲆΔ: "img/day-hand-diamond-protection.png",
    ⲆⵠⵠᐃᐃΔᐃ: "img/night-hand-diamond-protection.png",
    ⲆⲆⲆⲆⲆⵠⲆ: "img/inv-diamond-protection-out.png",
    ΔⵠⵠᐃᐃΔⲆ: "img/inv-diamond-protection-in.png",
    ⵠⲆⲆⲆⲆΔᐃ: "img/inv-diamond-protection-click.png",
    ΔᐃⲆᐃᐃΔⲆ: "img/day-amethyst-protection.png",
    ΔⵠⲆⲆΔΔⲆ: "img/night-amethyst-protection.png",
    ᐃΔⵠⲆΔᐃⵠⲆⲆ: "img/day-hand-amethyst-protection.png",
    ΔⵠᐃⲆΔᐃⲆᐃΔ: "img/night-hand-amethyst-protection.png",
    ⲆⲆΔⵠᐃᐃᐃ: "img/inv-amethyst-protection-out.png",
    ⲆⲆᐃⲆⵠᐃᐃ: "img/inv-amethyst-protection-in.png",
    ᐃⲆⵠᐃΔᐃᐃ: "img/inv-amethyst-protection-click.png",
    ⵠⲆⲆΔᐃⵠⵠ: "img/day-reidite-sword.png",
    ⲆᐃⵠΔⲆΔΔ: "img/night-reidite-sword.png",
    ΔΔⲆⲆⲆᐃⵠ: "img/inv-reidite-sword-out.png",
    ᐃⲆⵠᐃⵠⵠᐃ: "img/inv-reidite-sword-in.png",
    ΔΔΔⵠⲆΔⲆ: "img/inv-reidite-sword-click.png",
    ΔΔⲆᐃΔΔⵠ: "img/inv-reidite-out.png",
    ⲆⵠⵠᐃⵠⲆΔ: "img/inv-reidite-in.png",
    ⵠΔⵠⲆᐃᐃⲆ: "img/inv-reidite-click.png",
    ᐃΔΔΔΔⲆΔ: "img/inv-flame-out.png",
    ⲆᐃΔⲆⵠᐃⲆ: "img/inv-flame-in.png",
    ⲆΔΔᐃΔⲆΔ: "img/inv-flame-click.png",
    ᐃΔⲆᐃΔⵠᐃ: "img/day-magma-buble0.png",
    ΔΔᐃᐃΔΔΔ: "img/night-magma-buble0.png",
    ⵠⵠΔⵠⵠⲆⲆ: "img/day-magma-buble1.png",
    ⵠΔⲆΔⵠⲆⵠ: "img/night-magma-buble1.png",
    ᐃᐃⵠΔⲆᐃᐃ: "img/day-magma-buble2.png",
    ΔⵠᐃⵠᐃΔⲆ: "img/night-magma-buble2.png",
    ⵠⵠᐃⲆⵠᐃⲆ: "img/day-lava-dragon.png",
    ᐃΔⲆᐃΔⵠⵠ: "img/night-lava-dragon.png",
    ΔΔⲆᐃΔⵠⲆⵠΔ: "img/day-fire-dragon.png",
    ⲆΔⲆΔᐃΔΔΔⲆ: "img/night-fire-dragon.png",
    ΔᐃⵠⵠΔⵠΔ: "img/hurt-lava-dragon.png",
    ⲆⲆⲆΔⲆⵠⵠ: "img/day-lava-wing-left.png",
    ΔⵠᐃΔΔⵠⲆ: "img/night-lava-wing-left.png",
    ⲆⲆⵠᐃᐃⲆᐃ: "img/day-lava-wing-right.png",
    Ⲇⵠⵠⵠⵠᐃⵠ: "img/night-lava-wing-right.png",
    ΔᐃⵠΔΔΔⵠ: "img/hurt-lava-wing-left.png",
    ΔᐃᐃΔⲆⲆᐃ: "img/hurt-lava-wing-right.png",
    ᐃⵠΔⲆΔΔⵠ: "img/day-reidite-spear.png",
    ⵠᐃᐃΔΔΔⲆ: "img/night-reidite-spear.png",
    ΔⵠⵠⵠᐃⲆⲆ: "img/inv-reidite-spear-out.png",
    ⵠᐃᐃΔⵠⵠᐃ: "img/inv-reidite-spear-in.png",
    ΔⵠⲆⲆᐃⲆΔ: "img/inv-reidite-spear-click.png",
    ᐃⵠⵠᐃⵠⵠⵠ: "img/day-reidite-helmet.png",
    ⵠΔⲆᐃΔⲆⵠ: "img/night-reidite-helmet.png",
    ᐃⵠⵠⵠᐃᐃⲆ: "img/inv-reidite-helmet-out.png",
    ΔᐃᐃⲆⵠᐃᐃ: "img/inv-reidite-helmet-in.png",
    ⲆᐃΔᐃΔΔΔ: "img/inv-reidite-helmet-click.png",
    ⲆⲆⲆΔⲆⲆⲆ: "img/day-hand-reidite-protection.png",
    ΔⵠⲆᐃΔΔᐃ: "img/night-hand-reidite-protection.png",
    ⵠⵠⵠᐃᐃᐃΔ: "img/day-reidite-protection.png",
    ⵠᐃⵠΔⲆⵠⵠ: "img/night-reidite-protection.png",
    ΔⵠᐃᐃᐃΔΔ: "img/inv-reidite-protection-out.png",
    ΔΔⵠⵠⲆᐃᐃ: "img/inv-reidite-protection-in.png",
    ᐃᐃΔⲆⲆᐃⲆ: "img/inv-reidite-protection-click.png",
    ⵠⵠᐃΔᐃⲆⵠ: "img/day-lava-dragon-sword.png",
    ⲆⲆᐃᐃᐃᐃⵠ: "img/night-lava-dragon-sword.png",
    ⵠΔᐃΔⲆΔᐃ: "img/inv-lava-dragon-sword-out.png",
    ⲆᐃⲆⵠⵠΔⲆ: "img/inv-lava-dragon-sword-in.png",
    ᐃⵠΔⵠⵠΔᐃ: "img/inv-lava-dragon-sword-click.png",
    ⵠᐃⵠⵠⲆⵠⲆ: "img/day-lava-spear.png",
    ᐃᐃΔⲆΔΔⲆ: "img/night-lava-spear.png",
    ⲆⵠⲆⵠⲆⲆΔ: "img/inv-lava-spear-out.png",
    ΔⲆΔΔΔᐃΔ: "img/inv-lava-spear-in.png",
    Δⵠⵠᐃⵠⵠⵠ: "img/inv-lava-spear-click.png",
    ᐃᐃⵠⵠᐃᐃⲆ: "img/day-lava-helmet.png",
    ΔΔᐃⵠⵠⲆⲆ: "img/night-lava-helmet.png",
    ΔΔᐃΔᐃᐃΔ: "img/inv-lava-helmet-out.png",
    ΔᐃⵠᐃⵠΔᐃ: "img/inv-lava-helmet-in.png",
    ⲆΔᐃⵠⵠΔⵠ: "img/inv-lava-helmet-click.png",
    ΔΔᐃᐃᐃⲆⵠ: "img/day-iron0.png",
    ⲆⲆⵠΔⵠΔⵠ: "img/night-iron0.png",
    ⵠⲆΔⵠΔᐃΔ: "img/day-iron1.png",
    ᐃΔⲆᐃᐃⵠⵠ: "img/night-iron1.png",
    ᐃⵠΔᐃΔⲆⵠ: "img/day-iron2.png",
    ᐃⵠΔⲆⵠᐃⵠ: "img/night-iron2.png",
    ⵠΔⲆᐃᐃ: "img/inv-iron-click.png",
    ΔⲆᐃⵠⵠᐃⲆ: "img/day-copper0.png",
    ⲆⲆΔⵠΔⵠⵠ: "img/night-copper0.png",
    ⵠᐃⲆΔⲆΔΔ: "img/day-copper1.png",
    ⲆᐃΔΔΔΔᐃ: "img/night-copper1.png",
    ᐃᐃⵠⲆΔᐃΔ: "img/day-copper2.png",
    ΔΔΔⵠᐃⵠΔ: "img/night-copper2.png",
    ⵠⵠᐃⵠⲆ: "img/inv-copper-click.png",
    ⲆᐃᐃⵠΔΔΔ: "img/day-topaz0.png",
    ⵠⲆⵠΔⲆⲆΔ: "img/night-topaz0.png",
    ΔⵠΔΔⵠΔⵠ: "img/day-topaz1.png",
    ⵠⵠⵠᐃⵠΔᐃ: "img/night-topaz1.png",
    ΔⵠⲆᐃⵠᐃⵠ: "img/day-topaz2.png",
    ᐃΔⵠΔⵠⲆⲆ: "img/night-topaz2.png",
    ⵠⵠΔΔᐃ: "img/inv-topaz-click.png",
    ΔΔⵠⲆᐃᐃᐃ: "img/day-sapphire0.png",
    ⵠΔⵠⵠᐃⲆⲆ: "img/night-sapphire0.png",
    ⵠⲆΔⲆΔⲆΔ: "img/day-sapphire1.png",
    ΔᐃΔΔⵠⵠⵠ: "img/night-sapphire1.png",
    ᐃⵠⵠⵠᐃⵠΔ: "img/day-sapphire2.png",
    ΔⲆΔⲆᐃⵠⵠ: "img/night-sapphire2.png",
    ΔᐃΔΔⲆ: "img/inv-sapphire-click.png",
    ΔⲆᐃⵠΔⵠⵠ: "img/day-jade0.png",
    ΔᐃⵠᐃΔⵠⲆ: "img/night-jade0.png",
    ᐃⵠᐃᐃⲆⲆΔ: "img/day-jade1.png",
    ᐃᐃⵠⲆᐃⵠΔ: "img/night-jade1.png",
    ⲆⲆᐃΔΔⵠᐃ: "img/day-jade2.png",
    ΔᐃᐃΔᐃⵠⵠ: "img/night-jade2.png",
    ⲆΔⵠⵠⵠ: "img/inv-jade-click.png",
    ᐃᐃΔⲆᐃᐃⵠ: "img/day-ruby0.png",
    ᐃⲆΔⵠΔⲆⵠ: "img/night-ruby0.png",
    ᐃΔⵠⲆᐃΔⵠ: "img/day-ruby1.png",
    ⵠⲆΔⵠΔΔᐃ: "img/night-ruby1.png",
    ΔⵠΔᐃⵠⲆΔ: "img/day-ruby2.png",
    ΔⵠⵠⲆⵠⵠⵠ: "img/night-ruby2.png",
    ⲆᐃΔᐃᐃ: "img/inv-ruby-click.png",
    ᐃᐃⵠΔᐃⲆΔ: "img/day-aquamarine0.png",
    ⲆⵠⵠΔⲆᐃⲆ: "img/night-aquamarine0.png",
    ΔⲆⲆⲆΔᐃᐃ: "img/day-aquamarine1.png",
    ⵠΔΔⲆΔⵠⲆ: "img/night-aquamarine1.png",
    ᐃᐃΔᐃⵠⵠΔ: "img/day-aquamarine2.png",
    ⲆΔⲆⵠᐃᐃΔ: "img/night-aquamarine2.png",
    ⲆΔΔᐃᐃ: "img/inv-aquamarine-click.png",
    ΔⲆⵠⵠⲆᐃⵠ: "img/day-coal0.png",
    ⲆΔⵠⲆΔΔⲆ: "img/night-coal0.png",
    ΔΔⲆΔΔⲆⲆ: "img/day-coal1.png",
    ΔⲆⲆⵠⵠᐃⵠ: "img/night-coal1.png",
    ᐃᐃΔΔᐃⲆⵠ: "img/day-coal2.png",
    ΔΔΔΔⵠⲆⲆ: "img/night-coal2.png",
    ΔΔΔⵠⲆ: "img/inv-coal-click.png",
    ⵠⵠΔᐃᐃΔⲆ: "img/day-banana-plant.png",
    ⲆᐃᐃⲆᐃⵠⲆ: "img/night-banana-plant.png",
    ΔⵠᐃΔΔⲆⲆ: "img/day-banana.png",
    ⲆⵠΔⲆᐃⵠᐃ: "img/night-banana.png",
    ΔⲆΔΔⲆⵠΔ: "img/inv-banana-click.png",
    ⵠⵠⲆᐃᐃⵠᐃ: "img/inv-banana-out.png",
    ⲆΔⵠⲆᐃⲆⵠ: "img/inv-banana-in.png",
    ΔᐃⲆⲆⲆᐃⲆ: "img/inv-banana-click.png",
    ⵠᐃΔᐃΔΔΔ: "img/day-emerald-helmet.png",
    ⵠⲆⵠⲆⲆΔⲆ: "img/night-emerald-helmet.png",
    ΔⵠᐃⲆᐃⲆⲆ: "img/inv-emerald-helmet-out.png",
    ᐃᐃⲆΔⵠⲆⲆ: "img/inv-emerald-helmet-in.png",
    ⲆΔΔΔⵠⲆΔ: "img/inv-emerald-helmet-click.png",
    ΔⵠⵠᐃⲆⵠΔ: "img/day-copper-helmet.png",
    ⵠⲆⲆᐃⵠⵠΔ: "img/night-copper-helmet.png",
    ΔⲆⵠⲆΔᐃⵠ: "img/inv-copper-helmet-out.png",
    ᐃΔᐃⲆⵠΔᐃ: "img/inv-copper-helmet-in.png",
    ΔⲆⵠⵠᐃΔᐃ: "img/inv-copper-helmet-click.png",
    ⵠⲆᐃⵠΔⵠᐃ: "img/day-iron-helmet.png",
    ᐃⵠᐃᐃᐃΔⵠ: "img/night-iron-helmet.png",
    ΔΔⵠⲆⲆᐃΔ: "img/inv-iron-helmet-out.png",
    ΔᐃΔⲆᐃⵠᐃ: "img/inv-iron-helmet-in.png",
    ⵠⵠⲆⵠᐃⲆⲆ: "img/inv-iron-helmet-click.png",
    ⲆΔΔⵠⲆΔᐃ: "img/day-topaz-helmet.png",
    ᐃΔᐃΔⵠΔΔ: "img/night-topaz-helmet.png",
    ᐃᐃΔᐃᐃᐃⲆ: "img/inv-topaz-helmet-out.png",
    ⲆΔΔⵠᐃᐃⵠ: "img/inv-topaz-helmet-in.png",
    ᐃⵠⵠⵠΔΔᐃ: "img/inv-topaz-helmet-click.png",
    ΔⵠⲆⵠᐃⲆⵠ: "img/day-sapphire-helmet.png",
    ⲆⲆΔᐃΔΔᐃ: "img/night-sapphire-helmet.png",
    ᐃⵠⲆⲆⲆΔⵠ: "img/inv-sapphire-helmet-out.png",
    ⵠⵠⵠⵠⵠⲆⵠ: "img/inv-sapphire-helmet-in.png",
    ᐃᐃⵠⵠⲆᐃᐃ: "img/inv-sapphire-helmet-click.png",
    ΔᐃⵠⲆΔⲆΔ: "img/day-jade-helmet.png",
    ⵠᐃⲆΔᐃΔⲆ: "img/night-jade-helmet.png",
    ⲆᐃΔⵠⵠⵠⵠ: "img/inv-jade-helmet-out.png",
    ⵠⲆⲆⵠᐃᐃΔ: "img/inv-jade-helmet-in.png",
    ΔⲆΔⲆⵠⲆᐃ: "img/inv-jade-helmet-click.png",
    ᐃⵠⵠᐃⵠΔΔ: "img/day-ruby-helmet.png",
    ⲆⲆᐃⲆⲆⲆΔ: "img/night-ruby-helmet.png",
    ᐃᐃᐃᐃᐃⵠⲆ: "img/inv-ruby-helmet-out.png",
    ⲆⲆᐃⲆΔΔⲆ: "img/inv-ruby-helmet-in.png",
    ΔΔΔⵠⵠΔⵠ: "img/inv-ruby-helmet-click.png",
    ⵠⵠΔⵠᐃᐃᐃ: "img/day-coal-helmet.png",
    ⵠΔΔⲆⵠΔᐃ: "img/night-coal-helmet.png",
    ᐃⵠᐃᐃⲆⲆᐃ: "img/inv-coal-helmet-out.png",
    ᐃΔᐃᐃΔⵠᐃ: "img/inv-coal-helmet-in.png",
    ΔⲆⲆᐃᐃΔΔ: "img/inv-coal-helmet-click.png",
    ᐃᐃⲆⵠΔⲆΔ: "img/day-aquamarine-helmet.png",
    ⲆⵠᐃΔⵠⲆΔ: "img/night-aquamarine-helmet.png",
    ΔⵠΔᐃⲆⲆⵠ: "img/inv-aquamarine-helmet-out.png",
    ⵠⵠΔᐃⲆᐃΔ: "img/inv-aquamarine-helmet-in.png",
    ⵠⵠⵠᐃⵠᐃᐃ: "img/inv-aquamarine-helmet-click.png",
    ᐃΔΔⵠΔⲆᐃ: "img/day-copper-pickaxe.png",
    ᐃⵠⲆΔⵠΔⵠ: "img/night-copper-pickaxe.png",
    ⲆⵠᐃⲆⲆⵠΔ: "img/inv-copper-pickaxe-out.png",
    ⲆⵠⲆⵠΔⲆΔ: "img/inv-copper-pickaxe-in.png",
    ΔΔⵠᐃΔᐃⲆ: "img/inv-copper-pickaxe-click.png",
    ᐃⲆᐃⵠⵠⲆΔ: "img/day-iron-pickaxe.png",
    ⲆⵠΔᐃⲆⲆΔ: "img/night-iron-pickaxe.png",
    ᐃᐃⲆΔᐃΔⲆ: "img/inv-iron-pickaxe-out.png",
    ⵠⲆᐃᐃᐃᐃⵠ: "img/inv-iron-pickaxe-in.png",
    ᐃⵠⲆᐃΔᐃΔ: "img/inv-iron-pickaxe-click.png",
    ⵠⵠΔᐃⲆⵠⲆ: "img/day-topaz-pickaxe.png",
    ᐃᐃⲆⵠΔᐃᐃ: "img/night-topaz-pickaxe.png",
    ⲆΔΔⲆⲆⵠⵠ: "img/inv-topaz-pickaxe-out.png",
    ΔⲆⲆⵠⲆⲆⵠ: "img/inv-topaz-pickaxe-in.png",
    ΔᐃᐃⵠΔᐃᐃ: "img/inv-topaz-pickaxe-click.png",
    ᐃⲆΔΔⲆⲆΔ: "img/day-sapphire-pickaxe.png",
    ΔᐃᐃⲆΔᐃⲆ: "img/night-sapphire-pickaxe.png",
    ⵠᐃΔΔⲆⵠⲆ: "img/inv-sapphire-pickaxe-out.png",
    ΔᐃᐃⲆⲆⲆⲆ: "img/inv-sapphire-pickaxe-in.png",
    ⲆⵠⲆⲆΔᐃⵠ: "img/inv-sapphire-pickaxe-click.png",
    ⵠΔᐃΔⵠⵠⵠ: "img/day-jade-pickaxe.png",
    ΔⲆΔᐃⵠΔⲆ: "img/night-jade-pickaxe.png",
    ⲆᐃⲆΔᐃΔᐃ: "img/inv-jade-pickaxe-out.png",
    ᐃᐃᐃᐃᐃΔⵠ: "img/inv-jade-pickaxe-in.png",
    ΔⲆΔⲆᐃⲆⲆ: "img/inv-jade-pickaxe-click.png",
    ᐃᐃⲆΔⲆⲆⲆ: "img/day-ruby-pickaxe.png",
    ᐃⲆᐃᐃΔᐃᐃ: "img/night-ruby-pickaxe.png",
    ⵠᐃᐃⵠⵠᐃⲆ: "img/inv-ruby-pickaxe-out.png",
    ⲆⲆⲆᐃⵠᐃΔ: "img/inv-ruby-pickaxe-in.png",
    ⲆᐃΔΔⲆᐃᐃ: "img/inv-ruby-pickaxe-click.png",
    ⲆᐃΔⵠΔⵠᐃ: "img/day-emerald-pickaxe.png",
    ⵠᐃⵠⵠᐃⵠⵠ: "img/night-emerald-pickaxe.png",
    ⲆᐃΔⵠⲆᐃⵠ: "img/inv-emerald-pickaxe-out.png",
    ⲆΔᐃⵠᐃⵠᐃ: "img/inv-emerald-pickaxe-in.png",
    ᐃⲆΔⵠⵠⵠΔ: "img/inv-emerald-pickaxe-click.png",
    ᐃⵠⵠΔⲆⵠⲆ: "img/day-coal-pickaxe.png",
    ⵠΔⵠΔᐃⵠΔ: "img/night-coal-pickaxe.png",
    ⲆⵠᐃⲆΔⲆΔ: "img/inv-coal-pickaxe-out.png",
    ⵠᐃᐃⵠⲆᐃⲆ: "img/inv-coal-pickaxe-in.png",
    ⵠⲆⲆΔⲆᐃΔ: "img/inv-coal-pickaxe-click.png",
    ΔᐃⲆⵠᐃⲆⲆ: "img/day-aquamarine-pickaxe.png",
    ⵠᐃΔⲆᐃΔⲆ: "img/night-aquamarine-pickaxe.png",
    ᐃⲆⵠΔᐃⲆⵠ: "img/inv-aquamarine-pickaxe-out.png",
    ᐃⲆΔΔᐃΔⵠ: "img/inv-aquamarine-pickaxe-in.png",
    ΔⲆΔⵠᐃΔΔ: "img/inv-aquamarine-pickaxe-click.png",
    ⵠⵠⵠⲆΔⲆⵠ: "img/day-copper-hammer.png",
    ⵠⲆΔⵠⵠⵠᐃ: "img/night-copper-hammer.png",
    ᐃΔΔⲆᐃΔⲆ: "img/inv-copper-hammer-out.png",
    ΔⵠⵠᐃΔⵠⲆ: "img/inv-copper-hammer-in.png",
    ΔΔⲆᐃᐃᐃⲆ: "img/inv-copper-hammer-click.png",
    ⲆΔΔΔᐃⵠᐃ: "img/day-iron-hammer.png",
    ΔΔΔΔᐃΔᐃ: "img/night-iron-hammer.png",
    ⲆᐃᐃⵠΔΔᐃ: "img/inv-iron-hammer-out.png",
    ⵠΔΔᐃⵠᐃⵠ: "img/inv-iron-hammer-in.png",
    ⲆΔⵠᐃⵠΔⲆ: "img/inv-iron-hammer-click.png",
    ᐃᐃⵠᐃᐃΔⵠ: "img/day-topaz-hammer.png",
    ᐃⵠᐃΔⲆΔⵠ: "img/night-topaz-hammer.png",
    ᐃⵠᐃⵠᐃⵠⲆ: "img/inv-topaz-hammer-out.png",
    ⲆⲆⵠⲆᐃΔⲆ: "img/inv-topaz-hammer-in.png",
    ᐃΔΔᐃⵠΔⵠ: "img/inv-topaz-hammer-click.png",
    ᐃΔⲆⵠⲆΔΔ: "img/day-sapphire-hammer.png",
    ΔⲆᐃⵠⵠⵠᐃ: "img/night-sapphire-hammer.png",
    ΔⵠᐃⵠⵠⲆΔ: "img/inv-sapphire-hammer-out.png",
    ⵠᐃⲆⵠⵠᐃᐃ: "img/inv-sapphire-hammer-in.png",
    ⲆⲆⵠⵠᐃⵠᐃ: "img/inv-sapphire-hammer-click.png",
    ᐃΔᐃᐃⲆⲆᐃ: "img/day-jade-hammer.png",
    ᐃⲆᐃᐃΔΔⵠ: "img/night-jade-hammer.png",
    ⵠⵠⲆᐃᐃⲆⵠ: "img/inv-jade-hammer-out.png",
    ΔΔΔᐃⲆΔᐃ: "img/inv-jade-hammer-in.png",
    ⵠⲆΔⲆΔᐃⲆ: "img/inv-jade-hammer-click.png",
    ΔᐃΔⵠⲆΔⲆ: "img/day-ruby-hammer.png",
    ᐃΔⲆᐃΔᐃΔ: "img/night-ruby-hammer.png",
    ⵠᐃⲆΔΔⲆᐃ: "img/inv-ruby-hammer-out.png",
    ⲆⲆⲆᐃⵠᐃⲆ: "img/inv-ruby-hammer-in.png",
    ⵠⵠᐃⵠΔᐃᐃ: "img/inv-ruby-hammer-click.png",
    ᐃΔΔᐃᐃᐃᐃ: "img/day-emerald-hammer.png",
    ⲆⲆΔΔⵠᐃⲆ: "img/night-emerald-hammer.png",
    ⵠᐃᐃΔΔⵠⲆ: "img/inv-emerald-hammer-out.png",
    ΔΔⵠⵠⵠΔⲆ: "img/inv-emerald-hammer-in.png",
    ⲆⵠⵠⲆⲆⲆⲆ: "img/inv-emerald-hammer-click.png",
    ⲆΔΔⲆᐃⲆⲆ: "img/day-coal-hammer.png",
    ⲆⲆΔᐃⵠΔΔ: "img/night-coal-hammer.png",
    ⲆⵠⲆΔⵠⲆⵠ: "img/inv-coal-hammer-out.png",
    ⲆΔⲆⲆⵠᐃᐃ: "img/inv-coal-hammer-in.png",
    ⲆᐃΔΔⵠⵠᐃ: "img/inv-coal-hammer-click.png",
    ⲆᐃⲆⲆΔⲆⵠ: "img/day-aquamarine-hammer.png",
    ⲆΔΔⵠⵠⵠⵠ: "img/night-aquamarine-hammer.png",
    ΔᐃᐃⵠᐃᐃⲆ: "img/inv-aquamarine-hammer-out.png",
    ΔΔⵠΔⵠⲆΔ: "img/inv-aquamarine-hammer-in.png",
    ⲆⵠⵠΔΔᐃⵠ: "img/inv-aquamarine-hammer-click.png",
    ᐃⵠⲆⲆΔⲆⵠ: "img/day-copper-shovel.png",
    ⲆᐃⲆᐃⲆᐃⲆ: "img/night-copper-shovel.png",
    ⵠΔⲆⲆⵠⵠᐃ: "img/inv-copper-shovel-out.png",
    ⵠΔΔᐃᐃᐃΔ: "img/inv-copper-shovel-in.png",
    ⲆᐃᐃᐃⵠⲆΔ: "img/inv-copper-shovel-click.png",
    ᐃⵠⲆᐃᐃⲆᐃ: "img/day-iron-shovel.png",
    ᐃⲆⲆᐃᐃᐃΔ: "img/night-iron-shovel.png",
    ΔⵠΔⲆⵠⵠⲆ: "img/inv-iron-shovel-out.png",
    ⵠⲆΔΔΔᐃᐃ: "img/inv-iron-shovel-in.png",
    ⵠᐃΔᐃⵠⵠⲆ: "img/inv-iron-shovel-click.png",
    ΔᐃΔᐃΔⵠΔ: "img/day-topaz-shovel.png",
    ⵠᐃⲆⲆΔᐃΔ: "img/night-topaz-shovel.png",
    ΔⵠⲆᐃⵠⵠⵠ: "img/inv-topaz-shovel-out.png",
    ⲆⲆΔⵠᐃⲆⵠ: "img/inv-topaz-shovel-in.png",
    ΔΔⲆⵠᐃΔᐃ: "img/inv-topaz-shovel-click.png",
    ΔᐃᐃⲆⲆⵠⲆ: "img/day-sapphire-shovel.png",
    ΔⵠⲆⵠΔⲆⲆ: "img/night-sapphire-shovel.png",
    ⵠⲆⲆΔⵠᐃⵠ: "img/inv-sapphire-shovel-out.png",
    ⲆᐃᐃⲆⵠⲆΔ: "img/inv-sapphire-shovel-in.png",
    ⵠⲆᐃΔᐃⲆᐃ: "img/inv-sapphire-shovel-click.png",
    ⵠⵠⲆᐃᐃⲆⲆ: "img/day-jade-shovel.png",
    ⵠⵠⲆⵠΔΔⵠ: "img/night-jade-shovel.png",
    ⵠⵠⵠⵠΔᐃᐃ: "img/inv-jade-shovel-out.png",
    ΔⵠⵠᐃΔⲆᐃ: "img/inv-jade-shovel-in.png",
    ⲆⵠᐃᐃⲆⵠᐃ: "img/inv-jade-shovel-click.png",
    ᐃΔᐃᐃΔΔⵠ: "img/day-ruby-shovel.png",
    ⵠΔⲆⲆⲆΔⵠ: "img/night-ruby-shovel.png",
    ᐃΔⲆᐃⵠⲆᐃ: "img/inv-ruby-shovel-out.png",
    ΔⲆⵠᐃⲆᐃᐃ: "img/inv-ruby-shovel-in.png",
    ᐃΔⲆᐃᐃΔⲆ: "img/inv-ruby-shovel-click.png",
    ΔⲆⵠᐃΔⲆᐃ: "img/day-emerald-shovel.png",
    ⵠⵠⲆΔᐃΔⵠ: "img/night-emerald-shovel.png",
    ΔΔΔⵠΔⲆⵠ: "img/inv-emerald-shovel-out.png",
    ΔⲆΔΔⵠⵠⵠ: "img/inv-emerald-shovel-in.png",
    ⵠᐃΔΔⲆᐃⲆ: "img/inv-emerald-shovel-click.png",
    ⵠⲆΔⵠⵠⲆⲆ: "img/day-reidite-shovel.png",
    ⲆⲆⲆᐃᐃΔΔ: "img/night-reidite-shovel.png",
    ΔⲆᐃᐃΔⵠᐃ: "img/inv-reidite-shovel-out.png",
    ⵠᐃⵠⵠⲆⵠΔ: "img/inv-reidite-shovel-in.png",
    ⵠᐃⲆΔΔⲆΔ: "img/inv-reidite-shovel-click.png",
    ᐃΔΔΔⵠⵠΔ: "img/day-coal-shovel.png",
    ⵠΔⲆⲆⵠⲆⲆ: "img/night-coal-shovel.png",
    ⲆⵠⵠⵠⵠᐃⲆ: "img/inv-coal-shovel-out.png",
    ᐃⲆᐃⵠᐃⲆⲆ: "img/inv-coal-shovel-in.png",
    ⵠⲆⲆⲆᐃΔᐃ: "img/inv-coal-shovel-click.png",
    ΔΔΔⵠᐃⵠⲆ: "img/day-aquamarine-shovel.png",
    ⵠⲆⵠΔΔΔΔ: "img/night-aquamarine-shovel.png",
    ⵠⵠΔΔΔⵠΔ: "img/inv-aquamarine-shovel-out.png",
    ⲆⵠⵠΔⲆᐃⵠ: "img/inv-aquamarine-shovel-in.png",
    ⵠⵠⵠΔΔⲆΔ: "img/inv-aquamarine-shovel-click.png",
    ⲆⵠⵠΔΔΔᐃ: "img/day-copper-sword.png",
    ᐃᐃⵠᐃⵠΔⲆ: "img/night-copper-sword.png",
    ΔⵠΔⲆΔⵠⵠ: "img/inv-copper-sword-out.png",
    ⵠⵠⵠᐃᐃⲆᐃ: "img/inv-copper-sword-in.png",
    ΔΔⲆⵠΔⲆᐃ: "img/inv-copper-sword-click.png",
    ⲆⵠⲆⵠᐃᐃⵠ: "img/day-iron-sword.png",
    ⲆᐃⲆⵠⲆΔᐃ: "img/night-iron-sword.png",
    ᐃᐃᐃΔⲆᐃⲆ: "img/inv-iron-sword-out.png",
    ΔΔᐃΔᐃΔᐃ: "img/inv-iron-sword-in.png",
    ΔᐃΔΔᐃⵠⵠ: "img/inv-iron-sword-click.png",
    ᐃⵠⲆᐃᐃΔΔ: "img/day-topaz-sword.png",
    ᐃᐃᐃⲆⵠᐃⵠ: "img/night-topaz-sword.png",
    ΔⵠᐃᐃΔⵠᐃ: "img/inv-topaz-sword-out.png",
    ⲆⵠΔᐃΔᐃⲆ: "img/inv-topaz-sword-in.png",
    ᐃᐃⲆΔⵠᐃⵠ: "img/inv-topaz-sword-click.png",
    ⵠᐃΔΔΔΔⵠ: "img/day-sapphire-sword.png",
    ⲆΔⲆᐃⵠⵠⵠ: "img/night-sapphire-sword.png",
    ⲆΔⲆΔΔⵠⵠ: "img/inv-sapphire-sword-out.png",
    ΔΔⲆᐃⵠⵠⲆ: "img/inv-sapphire-sword-in.png",
    ΔⲆⵠΔΔᐃⵠ: "img/inv-sapphire-sword-click.png",
    ⵠΔΔΔⲆᐃⲆ: "img/day-jade-sword.png",
    ᐃⲆΔⲆⵠΔᐃ: "img/night-jade-sword.png",
    ᐃⲆΔΔⵠⵠΔ: "img/inv-jade-sword-out.png",
    ⲆΔᐃᐃⵠⵠⲆ: "img/inv-jade-sword-in.png",
    ΔⲆⵠᐃⵠΔΔ: "img/inv-jade-sword-click.png",
    ᐃⲆᐃΔᐃⵠⵠ: "img/day-ruby-sword.png",
    ⵠΔⵠⵠⲆⵠⲆ: "img/night-ruby-sword.png",
    ⲆⵠⵠⲆⲆΔⵠ: "img/inv-ruby-sword-out.png",
    ΔⲆᐃᐃⵠΔⵠ: "img/inv-ruby-sword-in.png",
    ⲆΔⵠᐃΔΔᐃ: "img/inv-ruby-sword-click.png",
    ΔⵠΔΔΔⲆᐃ: "img/day-emerald-sword.png",
    ΔⲆⵠᐃᐃΔⵠ: "img/night-emerald-sword.png",
    ⲆⲆᐃᐃΔⲆⲆ: "img/inv-emerald-sword-out.png",
    ⲆⵠⲆΔᐃⲆᐃ: "img/inv-emerald-sword-in.png",
    ΔΔⵠⵠᐃⲆⵠ: "img/inv-emerald-sword-click.png",
    ᐃⲆᐃⲆⲆⵠΔ: "img/day-coal-sword.png",
    ⵠᐃⲆᐃᐃⵠΔ: "img/night-coal-sword.png",
    ⲆᐃΔᐃᐃⵠΔ: "img/inv-coal-sword-out.png",
    ⲆⵠⵠᐃⵠⵠⲆ: "img/inv-coal-sword-in.png",
    ⵠΔⵠⲆⲆᐃᐃ: "img/inv-coal-sword-click.png",
    ⵠᐃΔⲆΔΔⲆ: "img/day-aquamarine-sword.png",
    ΔⲆⵠΔᐃⵠᐃ: "img/night-aquamarine-sword.png",
    ᐃⵠΔᐃᐃⲆᐃ: "img/inv-aquamarine-sword-out.png",
    ⵠᐃᐃⵠΔⲆᐃ: "img/inv-aquamarine-sword-in.png",
    ⲆᐃᐃⵠⲆᐃⲆ: "img/inv-aquamarine-sword-click.png",
    ⵠⵠⵠⲆᐃΔⲆ: "img/day-copper-spear.png",
    ᐃΔⲆⵠⵠᐃⲆ: "img/night-copper-spear.png",
    ᐃⲆΔᐃᐃΔΔ: "img/inv-copper-spear-out.png",
    ⵠⲆΔΔΔᐃⲆ: "img/inv-copper-spear-in.png",
    ⲆΔΔᐃΔⵠⲆ: "img/inv-copper-spear-click.png",
    ᐃᐃΔⵠⲆⲆⵠ: "img/day-iron-spear.png",
    ᐃΔᐃⵠⲆⵠΔ: "img/night-iron-spear.png",
    ⵠⵠᐃΔⵠΔⵠ: "img/inv-iron-spear-out.png",
    ΔᐃⲆⵠΔⲆΔ: "img/inv-iron-spear-in.png",
    ⲆᐃΔⲆⲆΔⲆ: "img/inv-iron-spear-click.png",
    ⲆⵠⲆⵠⵠⲆᐃ: "img/day-topaz-spear.png",
    ⵠⲆⵠᐃΔⲆᐃ: "img/night-topaz-spear.png",
    ΔΔᐃᐃⵠᐃΔ: "img/inv-topaz-spear-out.png",
    ΔⲆⵠⵠᐃᐃΔ: "img/inv-topaz-spear-in.png",
    ᐃᐃⵠⲆⵠⵠⲆ: "img/inv-topaz-spear-click.png",
    ΔᐃⲆⲆᐃⲆⵠ: "img/day-sapphire-spear.png",
    ⵠᐃⵠΔⲆᐃⵠ: "img/night-sapphire-spear.png",
    ᐃΔⵠⲆᐃᐃᐃ: "img/inv-sapphire-spear-out.png",
    ΔΔᐃⵠᐃᐃⲆ: "img/inv-sapphire-spear-in.png",
    Δⵠᐃⵠᐃᐃᐃ: "img/inv-sapphire-spear-click.png",
    ᐃⵠΔΔᐃᐃᐃ: "img/day-jade-spear.png",
    ⲆΔΔΔᐃⵠⲆ: "img/night-jade-spear.png",
    ⵠΔᐃΔᐃΔΔ: "img/inv-jade-spear-out.png",
    ⵠΔᐃᐃᐃⲆⲆ: "img/inv-jade-spear-in.png",
    ᐃⵠⲆⵠᐃⲆⵠ: "img/inv-jade-spear-click.png",
    ⲆΔᐃⲆⵠᐃΔ: "img/day-ruby-spear.png",
    ⵠᐃⲆⲆⵠΔⲆ: "img/night-ruby-spear.png",
    ⲆΔⲆⵠᐃⵠΔ: "img/inv-ruby-spear-out.png",
    ⲆⲆⵠⲆⲆᐃΔ: "img/inv-ruby-spear-in.png",
    ⲆΔⵠⵠΔᐃⵠ: "img/inv-ruby-spear-click.png",
    ⵠⲆΔⲆⵠΔⵠ: "img/day-emerald-spear.png",
    ᐃᐃⲆᐃᐃⵠⵠ: "img/night-emerald-spear.png",
    ⲆΔⲆΔᐃΔⵠ: "img/inv-emerald-spear-out.png",
    ⲆⵠⲆΔⲆΔⲆ: "img/inv-emerald-spear-in.png",
    ΔⵠΔⵠⵠⵠⲆ: "img/inv-emerald-spear-click.png",
    ⵠⲆΔⲆⵠΔⵠ: "img/day-emerald-spear.png",
    ᐃᐃⲆᐃᐃⵠⵠ: "img/night-emerald-spear.png",
    ⲆΔⲆΔᐃΔⵠ: "img/inv-emerald-spear-out.png",
    ⲆⵠⲆΔⲆΔⲆ: "img/inv-emerald-spear-in.png",
    ΔⵠΔⵠⵠⵠⲆ: "img/inv-emerald-spear-click.png",
    ᐃΔᐃⵠⵠⵠⲆ: "img/day-coal-spear.png",
    Δᐃⵠᐃᐃⵠⵠ: "img/night-coal-spear.png",
    ΔᐃΔΔΔⲆⲆ: "img/inv-coal-spear-out.png",
    ΔⵠΔᐃⲆΔⲆ: "img/inv-coal-spear-in.png",
    ΔⲆⵠᐃⲆΔⲆ: "img/inv-coal-spear-click.png",
    ⲆΔⵠⲆΔⵠᐃ: "img/day-aquamarine-spear.png",
    ΔⵠⲆᐃᐃⵠⵠ: "img/night-aquamarine-spear.png",
    ⵠΔⵠⲆⵠᐃΔ: "img/inv-aquamarine-spear-out.png",
    ΔᐃᐃΔΔᐃΔ: "img/inv-aquamarine-spear-in.png",
    ΔᐃⲆⲆⲆⲆΔ: "img/inv-aquamarine-spear-click.png",
    ⵠⵠⵠΔΔΔᐃ: "img/day-copper-bow.png",
    ⵠⲆᐃᐃΔΔⵠ: "img/night-copper-bow.png",
    ΔΔᐃⵠⲆΔⵠ: "img/inv-copper-bow-out.png",
    ⲆᐃΔⵠⵠᐃΔ: "img/inv-copper-bow-in.png",
    ᐃᐃⵠⵠᐃⵠΔ: "img/inv-copper-bow-click.png",
    ᐃⲆⵠⲆᐃᐃⵠ: "img/day-iron-bow.png",
    ΔᐃᐃΔⲆΔⲆ: "img/night-iron-bow.png",
    ⵠᐃⲆⵠⵠⵠⲆ: "img/inv-iron-bow-out.png",
    ᐃᐃΔΔᐃⵠⵠ: "img/inv-iron-bow-in.png",
    ⲆᐃⲆⵠⵠᐃᐃ: "img/inv-iron-bow-click.png",
    ᐃⵠⵠΔᐃⲆΔ: "img/day-topaz-bow.png",
    ΔᐃⵠΔⵠΔΔ: "img/night-topaz-bow.png",
    ⵠⲆⲆᐃΔⵠᐃ: "img/inv-topaz-bow-out.png",
    ⵠⲆΔΔⵠᐃΔ: "img/inv-topaz-bow-in.png",
    ΔⵠⲆⵠᐃΔⵠ: "img/inv-topaz-bow-click.png",
    ⲆⲆⲆΔΔᐃⲆ: "img/day-sapphire-bow.png",
    ⲆⵠⵠⲆⲆᐃΔ: "img/night-sapphire-bow.png",
    ⲆΔᐃΔⲆᐃᐃ: "img/inv-sapphire-bow-out.png",
    ΔᐃⵠⲆᐃΔⵠ: "img/inv-sapphire-bow-in.png",
    ΔⲆᐃΔᐃΔⲆ: "img/inv-sapphire-bow-click.png",
    ᐃⲆΔⲆⲆⵠΔ: "img/day-jade-bow.png",
    ᐃⵠᐃⲆⵠΔᐃ: "img/night-jade-bow.png",
    ⵠᐃⲆᐃΔΔⲆ: "img/inv-jade-bow-out.png",
    ΔⵠΔΔᐃⲆᐃ: "img/inv-jade-bow-in.png",
    ⲆΔⲆΔⲆⵠⵠ: "img/inv-jade-bow-click.png",
    ΔΔⲆΔᐃᐃⵠ: "img/day-ruby-bow.png",
    ⲆΔᐃΔᐃⵠⵠ: "img/night-ruby-bow.png",
    ⵠᐃΔⵠΔᐃΔ: "img/inv-ruby-bow-out.png",
    ⵠⲆⲆΔⲆᐃⵠ: "img/inv-ruby-bow-in.png",
    ᐃⵠᐃⲆΔⵠΔ: "img/inv-ruby-bow-click.png",
    ⲆΔⲆⲆΔΔᐃ: "img/day-emerald-bow.png",
    ᐃᐃⵠⲆΔⲆⵠ: "img/night-emerald-bow.png",
    ⵠⲆⵠⵠⲆΔᐃ: "img/inv-emerald-bow-out.png",
    ᐃⲆΔᐃᐃⵠᐃ: "img/inv-emerald-bow-in.png",
    ᐃⵠᐃⵠᐃⵠᐃ: "img/inv-emerald-bow-click.png",
    ⲆᐃΔⵠᐃᐃᐃ: "img/day-coal-bow.png",
    ⲆⵠⲆΔᐃᐃᐃ: "img/night-coal-bow.png",
    ⲆⲆⲆⲆⲆᐃⵠ: "img/inv-coal-bow-out.png",
    ⲆᐃⲆⵠΔΔΔ: "img/inv-coal-bow-in.png",
    ΔⲆⲆΔⲆⲆⲆ: "img/inv-coal-bow-click.png",
    ⵠᐃΔⵠΔⵠⵠ: "img/day-aquamarine-bow.png",
    ⲆⲆᐃⲆⲆΔⲆ: "img/night-aquamarine-bow.png",
    ⵠⵠⵠΔⲆⵠᐃ: "img/inv-aquamarine-bow-out.png",
    ⲆⵠⵠᐃⵠᐃΔ: "img/inv-aquamarine-bow-in.png",
    ᐃⵠᐃⵠⵠⵠⵠ: "img/inv-aquamarine-bow-click.png",
    ΔⵠⵠⲆᐃᐃᐃ: "img/day-copper-arrow.png",
    ᐃⲆⲆⲆⲆⲆᐃ: "img/night-copper-arrow.png",
    ΔⲆⵠΔⵠⲆⲆ: "img/inv-copper-arrow-out.png",
    ⲆⵠⵠⵠⵠⵠΔ: "img/inv-copper-arrow-in.png",
    ΔΔⵠⲆⵠⵠⲆ: "img/inv-copper-arrow-click.png",
    ΔⲆΔⲆⲆⲆⵠ: "img/day-iron-arrow.png",
    ⵠᐃΔΔΔⵠⵠ: "img/night-iron-arrow.png",
    ⲆⲆⵠⵠᐃᐃᐃ: "img/inv-iron-arrow-out.png",
    ΔΔⵠⵠΔΔⲆ: "img/inv-iron-arrow-in.png",
    ΔᐃⲆᐃⲆⵠΔ: "img/inv-iron-arrow-click.png",
    ᐃᐃⲆᐃᐃΔⲆ: "img/day-topaz-arrow.png",
    ᐃⵠⲆⲆⲆⲆⲆ: "img/night-topaz-arrow.png",
    ⵠᐃⵠΔⵠⲆⵠ: "img/inv-topaz-arrow-out.png",
    ΔᐃᐃⲆᐃᐃⲆ: "img/inv-topaz-arrow-in.png",
    ᐃⵠΔⵠⵠⵠⵠ: "img/inv-topaz-arrow-click.png",
    ᐃΔⲆΔΔᐃᐃ: "img/day-sapphire-arrow.png",
    ᐃⲆⲆⲆΔⲆΔ: "img/night-sapphire-arrow.png",
    ᐃⵠᐃⲆⲆᐃⲆ: "img/inv-sapphire-arrow-out.png",
    ⲆΔᐃⵠΔΔⲆ: "img/inv-sapphire-arrow-in.png",
    ⵠΔᐃΔⵠᐃⵠ: "img/inv-sapphire-arrow-click.png",
    ᐃᐃⵠⵠΔⲆΔ: "img/day-jade-arrow.png",
    ΔⲆⵠⲆΔⲆⵠ: "img/night-jade-arrow.png",
    ΔⵠᐃΔΔⲆᐃ: "img/inv-jade-arrow-out.png",
    ⲆⲆᐃΔᐃΔⵠ: "img/inv-jade-arrow-in.png",
    ⵠⲆⲆⲆᐃⲆⲆ: "img/inv-jade-arrow-click.png",
    ᐃΔⲆᐃⲆΔΔ: "img/day-ruby-arrow.png",
    ⵠᐃᐃΔᐃᐃⵠ: "img/night-ruby-arrow.png",
    ⲆⵠⲆⲆⵠΔⲆ: "img/inv-ruby-arrow-out.png",
    ⲆᐃⲆⵠΔᐃⵠ: "img/inv-ruby-arrow-in.png",
    ⲆⲆⵠⲆᐃᐃⲆ: "img/inv-ruby-arrow-click.png",
    ⵠⵠⵠⲆΔⵠᐃ: "img/day-emerald-arrow.png",
    ⲆᐃⲆΔΔΔⲆ: "img/night-emerald-arrow.png",
    ΔᐃᐃⲆᐃⲆⵠ: "img/inv-emerald-arrow-out.png",
    ᐃΔΔⵠᐃΔᐃ: "img/inv-emerald-arrow-in.png",
    ⵠⵠⲆⵠⲆᐃⲆ: "img/inv-emerald-arrow-click.png",
    ᐃᐃΔⲆᐃᐃΔ: "img/day-coal-arrow.png",
    ᐃᐃΔᐃⵠᐃΔ: "img/night-coal-arrow.png",
    ᐃᐃᐃᐃΔΔΔ: "img/inv-coal-arrow-out.png",
    ⲆΔΔⵠᐃΔⲆ: "img/inv-coal-arrow-in.png",
    ⲆⵠᐃΔᐃΔᐃ: "img/inv-coal-arrow-click.png",
    ⵠᐃΔⲆᐃΔⵠ: "img/day-aquamarine-arrow.png",
    ΔᐃⲆΔΔᐃΔ: "img/night-aquamarine-arrow.png",
    ⵠᐃᐃᐃᐃⵠᐃ: "img/inv-aquamarine-arrow-out.png",
    ⲆⲆᐃⲆᐃᐃⵠ: "img/inv-aquamarine-arrow-in.png",
    ⵠᐃΔᐃⲆΔⵠ: "img/inv-aquamarine-arrow-click.png",
    ᐃⲆΔΔᐃᐃᐃ: "img/day-witch-hat.png",
    ΔⲆⵠⵠⲆⵠΔ: "img/night-witch-hat.png",
    ΔⵠΔⲆΔΔⵠ: "img/inv-witch-hat-out.png",
    ⵠΔⵠⲆΔⲆⵠ: "img/inv-witch-hat-in.png",
    ⲆⲆⵠⵠⵠᐃᐃ: "img/inv-witch-hat-click.png",
    ⲆⵠⲆⲆⲆΔⲆ: "img/day-nimbus2000.png",
    ᐃΔⵠⵠⵠᐃⲆ: "img/night-nimbus2000.png",
    ⵠⲆΔⲆᐃⲆᐃ: "img/inv-nimbus2000-out.png",
    ⲆΔⲆᐃᐃᐃⲆ: "img/inv-nimbus2000-in.png",
    ΔⲆᐃⲆᐃⵠⲆ: "img/inv-nimbus2000-click.png",
    ⲆⵠⵠⵠⵠΔᐃ: "img/day-accessory1-pacques.png",
    ΔΔᐃⲆⲆⵠᐃ: "img/night-accessory1-pacques.png",
    ⵠᐃⵠᐃⲆΔΔ: "img/day-accessory2-pacques.png",
    ⲆΔⲆΔⲆΔΔ: "img/night-accessory2-pacques.png",
    ⵠΔⵠᐃⲆⲆᐃ: "img/day-accessory3-pacques.png",
    ΔⵠΔΔⲆΔᐃ: "img/night-accessory3-pacques.png",
    ⵠᐃⲆⵠⵠΔⲆ: "img/day-accessory5-pacques.png",
    ⲆᐃⲆⲆⲆᐃᐃ: "img/night-accessory5-pacques.png",
    ΔᐃΔⲆⲆΔᐃ: "img/day-accessory6-pacques.png",
    ⲆᐃΔⵠⵠᐃᐃ: "img/night-accessory6-pacques.png",
    ⵠᐃΔⵠΔᐃⵠ: "img/day-accessory7-pacques.png",
    ⵠⵠⲆⲆⲆΔⲆ: "img/night-accessory7-pacques.png",
    ⵠⵠΔⲆΔⲆⵠ: "img/day-accessory8-pacques.png",
    ⵠⵠΔᐃᐃⵠᐃ: "img/night-accessory8-pacques.png",
    ⲆᐃᐃΔᐃⵠΔ: "img/day-bag-pacques.png",
    ⵠᐃⵠΔⵠⵠᐃ: "img/night-bag-pacques.png",
    ⵠᐃⲆⵠᐃⵠⵠ: "img/day-carrot.png",
    ΔⵠᐃⵠⵠΔⲆ: "img/night-carrot.png",
    ᐃⵠⲆΔΔⵠΔ: "img/day-carrot-dried.png",
    ΔⵠⲆᐃᐃᐃⲆ: "img/night-carrot-dried.png",
    ⵠΔᐃⵠⵠᐃⲆ: "img/day-tomato-herb.png",
    ⵠᐃΔⲆΔⲆᐃ: "img/night-tomato-herb.png",
    ⲆⲆΔΔⵠΔⲆ: "img/day-tomato-herb-dried.png",
    ⵠⲆⵠᐃΔΔᐃ: "img/night-tomato-herb-dried.png",
    ᐃΔΔⲆⵠᐃΔ: "img/day-tomato.png",
    ⵠᐃⵠΔⲆⵠᐃ: "img/night-tomato.png",
    ⲆᐃⵠⲆΔⲆⵠΔⵠ: "img/day-banana.png",
    ΔⵠΔⵠⲆᐃᐃⵠⵠ: "img/night-banana.png",
    ᐃΔⲆⵠⵠᐃⵠ: "img/day-banana-dried.png",
    ᐃΔⲆᐃⲆⵠᐃ: "img/night-banana-dried.png",
    ⵠⲆΔⵠᐃⲆΔ: "img/inv-carrot-out.png",
    ΔᐃᐃΔΔⵠΔ: "img/inv-carrot-in.png",
    ⵠⵠΔⵠⲆⵠΔ: "img/inv-carrot-click.png",
    ᐃΔᐃΔⵠⵠⵠ: "img/inv-tomato-out.png",
    ΔⵠᐃᐃᐃⲆᐃ: "img/inv-tomato-in.png",
    ⲆΔᐃⵠⵠⵠⲆ: "img/inv-tomato-click.png",
    ⵠⵠⲆᐃᐃⵠᐃ: "img/inv-banana-out.png",
    ⲆΔⵠⲆᐃⲆⵠ: "img/inv-banana-in.png",
    ΔᐃⲆⲆⲆᐃⲆ: "img/inv-banana-click.png",
    ⲆΔᐃΔᐃᐃⵠ: "img/day-player0.png",
    ΔⵠⵠⲆᐃⵠΔ: "img/night-player0.png",
    ΔⲆⵠⵠᐃΔⲆ: "img/day-player1.png",
    ᐃᐃᐃᐃⲆⲆΔ: "img/night-player1.png",
    ⲆⲆΔᐃᐃᐃΔ: "img/day-player2.png",
    ΔΔⵠᐃⵠⲆⲆ: "img/night-player22.png",
    ⲆᐃⵠΔᐃΔⲆ: "img/day-player3.png",
    ΔΔⵠΔΔⲆΔ: "img/night-player33.png",
    ᐃⵠⵠΔⵠⲆⵠ: "img/day-player4.png",
    ΔⲆᐃΔΔⲆᐃ: "img/night-player4.png",
    ⵠᐃΔⵠⵠᐃᐃ: "img/day-player5.png",
    ⵠⲆⲆⲆⵠⲆᐃ: "img/night-player5.png",
    ΔΔΔΔⲆΔΔ: "img/day-player6.png",
    ⲆΔⲆⲆⵠⲆᐃ: "img/night-player6.png",
    ⵠⵠΔⵠΔᐃⲆ: "img/day-player7.png",
    ⵠᐃⲆΔⵠⲆⵠ: "img/night-player7.png",
    ᐃᐃⲆⲆⲆⵠᐃ: "img/day-player8.png",
    ⵠⲆᐃⵠⲆᐃⲆ: "img/night-player8.png",
    ᐃⵠΔᐃᐃⲆⵠ: "img/day-player9.png",
    ⵠΔⵠⵠⵠᐃⲆ: "img/night-player9.png",
    ᐃᐃᐃⵠⲆⵠΔ: "img/day-player10.png",
    ᐃᐃⵠᐃΔΔᐃ: "img/night-player10.png",
    ⲆⲆᐃⲆΔⵠⲆ: "img/day-player11.png",
    ⲆᐃᐃⵠⲆΔⲆ: "img/night-player11.png",
    ⵠᐃᐃΔᐃⲆⲆ: "img/day-player12.png",
    ᐃⲆⲆⵠⵠᐃⵠ: "img/night-player12.png",
    ⲆΔⵠⲆⲆⲆᐃ: "img/day-player13.png",
    ᐃᐃᐃᐃⵠᐃΔ: "img/night-player13.png",
    ⲆΔⵠᐃᐃⵠⵠ: "img/day-player14.png",
    ⵠᐃⵠᐃⵠⵠⲆ: "img/night-player14.png",
    ᐃⲆᐃΔⲆⲆⵠ: "img/day-player15.png",
    ⲆⵠⲆⲆΔⵠΔ: "img/night-player15.png",
    ⲆΔΔΔᐃᐃⲆ: "img/day-player16.png",
    ⲆⵠⲆᐃΔᐃⵠ: "img/night-player16.png",
    ᐃΔᐃΔⵠⲆⵠ: "img/day-player17.png",
    ΔΔᐃᐃⲆᐃⲆ: "img/night-player17.png",
    ΔⲆⵠⵠᐃⲆⲆ: "img/day-player18.png",
    ⲆⲆⵠᐃΔⵠⵠ: "img/night-player18.png",
    ⲆⵠⲆΔⵠⵠΔ: "img/day-player19.png",
    ΔΔᐃⵠⵠⵠⵠ: "img/night-player19.png",
    ΔⵠΔᐃⲆⵠⲆ: "img/day-hand-player0.png",
    ᐃΔⲆΔᐃΔⵠ: "img/night-hand-player0.png",
    ᐃⲆⲆⲆⲆᐃⲆ: "img/day-hand-player1.png",
    ⲆΔⲆᐃΔᐃⵠ: "img/night-hand-player1.png",
    ⲆΔⵠᐃⵠⲆⲆ: "img/day-hand-player2.png",
    ⵠⲆΔΔᐃᐃⵠ: "img/night-hand-player22.png",
    ΔᐃΔᐃⵠⲆⵠ: "img/day-hand-player3.png",
    ΔⵠⵠᐃⵠⵠΔ: "img/night-hand-player33.png",
    ΔⲆΔᐃᐃⵠᐃ: "img/day-hand-player4.png",
    ΔΔⲆⵠΔⲆΔ: "img/night-hand-player4.png",
    ⲆΔᐃⵠᐃⵠⵠ: "img/day-hand-player5.png",
    ᐃⵠⵠⲆΔᐃⵠ: "img/night-hand-player5.png",
    ᐃⲆᐃⵠⲆΔΔ: "img/day-hand-player6.png",
    ⲆᐃⲆⵠⵠᐃⵠ: "img/night-hand-player6.png",
    ⲆⵠⲆΔΔᐃΔ: "img/day-hand-player7.png",
    ⲆᐃⵠⲆᐃᐃⵠ: "img/night-hand-player7.png",
    ⲆⵠᐃⲆⲆᐃᐃ: "img/day-hand-player8.png",
    ⵠⵠⲆⲆⲆⵠⲆ: "img/night-hand-player8.png",
    ⲆᐃⵠᐃⲆⵠⵠ: "img/day-hand-player9.png",
    ⲆⲆᐃⲆⵠΔΔ: "img/night-hand-player9.png",
    ΔⵠᐃΔᐃᐃᐃ: "img/day-hand-player10.png",
    ⲆⲆᐃⵠⵠΔΔ: "img/night-hand-player10.png",
    ⲆᐃⲆΔΔⲆⵠ: "img/day-hand-player11.png",
    ⲆᐃⲆΔΔᐃⲆ: "img/night-hand-player11.png",
    ⵠΔⵠⵠⵠⲆΔ: "img/day-hand-player12.png",
    ⲆΔⵠΔᐃⵠⲆ: "img/night-hand-player12.png",
    ᐃⲆᐃᐃⵠⵠΔ: "img/day-hand-player13.png",
    ΔΔⵠⵠⲆΔᐃ: "img/night-hand-player13.png",
    ΔⵠΔⵠΔΔⲆ: "img/day-hand-player14.png",
    ΔΔⲆᐃⵠⵠᐃ: "img/night-hand-player14.png",
    ᐃΔᐃΔⲆᐃⲆ: "img/day-hand-player15.png",
    ⲆⲆⵠⲆΔⲆᐃ: "img/night-hand-player15.png",
    ⲆΔᐃᐃⵠΔⲆ: "img/day-hand-player16.png",
    ⵠᐃΔᐃⲆⵠᐃ: "img/night-hand-player16.png",
    ΔᐃᐃⵠΔⵠⲆ: "img/day-hand-player17.png",
    ᐃᐃΔΔⵠⲆΔ: "img/night-hand-player17.png",
    ᐃⲆΔⵠⵠᐃᐃ: "img/day-hand-player18.png",
    ᐃⵠΔⵠΔᐃᐃ: "img/night-hand-player18.png",
    ⵠΔⲆΔᐃΔᐃ: "img/day-hand-player19.png",
    ⵠⲆⵠΔΔΔⲆ: "img/night-hand-player19.png",
    ᐃΔΔⲆⵠᐃᐃ: "img/day-accessory4.png",
    ΔⵠᐃᐃⲆΔⲆ: "img/night-accessory4.png",
    ᐃᐃᐃⵠᐃΔᐃ: "img/day-accessory9.png",
    ᐃΔΔⲆⵠⲆⵠ: "img/night-accessory9.png",
    ⵠᐃΔΔᐃⲆΔ: "img/day-accessory10.png",
    ⵠⲆᐃⵠᐃᐃᐃ: "img/night-accessory10.png",
    ⵠⲆΔΔᐃΔⵠ: "img/day-accessory11.png",
    ΔΔΔᐃᐃⲆⵠ: "img/night-accessory11.png",
    ⵠⵠΔᐃᐃΔⵠ: "img/day-accessory12.png",
    ⵠΔⵠᐃᐃⵠⵠ: "img/night-accessory12.png",
    ᐃⵠⲆⵠⲆᐃΔ: "img/day-bag.png",
    ΔΔᐃΔΔⲆΔ: "img/night-bag.png",
    ⵠᐃᐃⵠΔΔⵠ: "img/inv-bag-out.png",
    ΔᐃⲆⲆΔⵠΔ: "img/inv-bag-in.png",
    ᐃᐃⲆΔᐃⲆᐃ: "img/inv-bag-click.png",
    ᐃⲆΔΔⵠᐃᐃ: "img/day-pitchfork.png",
    ⵠⲆᐃΔᐃΔᐃ: "img/night-pitchfork.png",
    ΔᐃⵠᐃⵠΔΔ: "img/inv-pitchfork-out.png",
    ⲆΔᐃⲆⵠⲆΔ: "img/inv-pitchfork-in.png",
    ΔⵠⲆᐃᐃΔᐃ: "img/inv-pitchfork-click.png",
    ᐃΔⵠⲆⲆⵠΔ: "img/inv-wood-spike-door-out.png",
    ΔΔⵠⲆⲆⵠⵠ: "img/inv-wood-spike-door-in.png",
    ᐃⲆΔᐃⲆⲆⵠ: "img/inv-wood-spike-door-click.png",
    ᐃΔⵠΔⵠΔⵠ: "img/inv-stone-spike-door-out.png",
    ⲆⲆΔΔΔⵠΔ: "img/inv-stone-spike-door-in.png",
    ᐃⲆΔⲆⲆⵠⵠ: "img/inv-stone-spike-door-click.png",
    ⵠⵠⲆΔᐃΔⲆ: "img/inv-gold-spike-door-out.png",
    ⵠⲆⵠᐃΔΔΔ: "img/inv-gold-spike-door-in.png",
    ᐃⵠΔⲆⲆⲆⲆ: "img/inv-gold-spike-door-click.png",
    ᐃⲆⲆᐃΔⵠⲆ: "img/inv-diamond-spike-door-out.png",
    ᐃΔⵠⵠⵠᐃⵠ: "img/inv-diamond-spike-door-in.png",
    ⵠⵠⲆⲆΔᐃⲆ: "img/inv-diamond-spike-door-click.png",
    ⲆⲆᐃΔⲆⲆⵠ: "img/inv-amethyst-spike-door-out.png",
    ᐃⲆΔⵠⲆⲆΔ: "img/inv-amethyst-spike-door-in.png",
    ⵠᐃΔΔⲆⵠΔ: "img/inv-amethyst-spike-door-click.png",
    ᐃᐃᐃᐃⲆᐃⲆ: "img/day-wood-spike-door.png",
    ᐃΔⵠᐃᐃⵠⲆ: "img/night-wood-spike-door.png",
    ᐃᐃⲆᐃΔⵠΔ: "img/day-stone-spike-door.png",
    ⵠΔⲆᐃⵠⲆⵠ: "img/night-stone-spike-door.png",
    ⲆⲆⵠΔⲆᐃⲆ: "img/day-gold-spike-door.png",
    ᐃᐃⵠⵠⲆⲆΔ: "img/night-gold-spike-door.png",
    ᐃⵠⲆᐃⲆΔⲆ: "img/day-diamond-spike-door.png",
    ᐃᐃΔᐃᐃⵠΔ: "img/night-diamond-spike-door.png",
    ⲆᐃΔⲆⵠΔᐃ: "img/day-amethyst-spike-door.png",
    ⵠⵠⵠⵠⲆⲆΔ: "img/night-amethyst-spike-door.png",
    ᐃΔⵠΔⲆΔΔ: "img/inv-reidite-spike-door-out.png",
    ⲆⲆⲆΔⲆⵠᐃ: "img/inv-reidite-spike-door-in.png",
    ᐃⲆΔⲆᐃⲆᐃ: "img/inv-reidite-spike-door-click.png",
    ⵠᐃᐃⲆᐃⲆΔ: "img/inv-reidite-door-out.png",
    ⵠΔⵠⵠΔⲆⲆ: "img/inv-reidite-door-in.png",
    ⵠᐃⲆⵠᐃⲆⵠ: "img/inv-reidite-door-click.png",
    ⵠⲆⲆⲆΔᐃⲆ: "img/inv-reidite-spike-out.png",
    ⵠᐃⵠᐃⵠᐃⵠ: "img/inv-reidite-spike-in.png",
    ⲆΔⵠᐃⵠΔᐃ: "img/inv-reidite-spike-click.png",
    ⲆⵠΔⵠⵠΔⲆ: "img/inv-reidite-wall-out.png",
    ⵠⲆΔᐃⵠᐃᐃ: "img/inv-reidite-wall-in.png",
    ⵠⲆⵠΔΔᐃΔ: "img/inv-reidite-wall-click.png",
    ⵠᐃⵠⲆΔᐃⵠ: "img/day-reidite-wall.png",
    ⵠⵠΔⵠⲆΔⲆ: "img/night-reidite-wall.png",
    ᐃⵠΔᐃᐃⵠⲆ: "img/day-reidite-door.png",
    ᐃⲆᐃΔⵠⲆⵠ: "img/night-reidite-door.png",
    ⲆⵠᐃᐃⵠΔᐃ: "img/day-reidite-spike.png",
    ⵠⵠᐃⵠⲆⲆⲆ: "img/night-reidite-spike.png",
    ⵠⲆⵠⵠᐃᐃᐃ: "img/day-reidite-spike-door.png",
    ᐃᐃᐃⲆⲆⵠΔ: "img/night-reidite-spike-door.png",
    ᐃⵠⵠΔⲆⵠᐃ: "img/inv-reidite-pickaxe-out.png",
    ⵠⲆΔⵠⵠΔᐃ: "img/inv-reidite-pickaxe-in.png",
    ⵠⲆΔⵠᐃⲆⲆ: "img/inv-reidite-pickaxe-click.png",
    ⵠⲆⲆⵠⵠᐃΔ: "img/day-reidite-pickaxe.png",
    ⵠᐃⵠᐃⲆⵠΔ: "img/night-reidite-pickaxe.png",
    ⵠΔⲆⵠⵠⵠⵠ: "img/inv-reidite-hammer-out.png",
    ⵠΔⵠⲆᐃᐃⵠ: "img/inv-reidite-hammer-in.png",
    ⵠⵠⲆΔΔᐃⲆ: "img/inv-reidite-hammer-click.png",
    ΔⵠΔⵠΔᐃᐃ: "img/day-reidite-hammer.png",
    ᐃⵠⵠᐃⵠⵠΔ: "img/night-reidite-hammer.png",
    ⲆⲆΔΔΔᐃⵠ: "img/day-watermelon1.png",
    ⲆΔⲆⲆⲆᐃᐃ: "img/night-watermelon1.png",
    ⵠΔΔⲆⲆΔΔ: "img/day-watermelon-dried1.png",
    ⲆⲆΔⵠⵠⲆⲆ: "img/night-watermelon-dried1.png",
    ΔⲆΔⵠΔΔⲆ: "img/inv-watermelon-out.png",
    ΔⵠΔΔⵠᐃⵠ: "img/inv-watermelon-in.png",
    ᐃⵠᐃᐃⲆⲆⵠ: "img/inv-watermelon-click.png",
    ⲆΔⲆᐃᐃΔⲆ: "img/day-boat.png",
    ΔᐃⵠΔΔⲆⵠ: "img/night-boat.png",
    ᐃΔⲆⲆⲆᐃⲆ: "img/day-boat-wave.png",
    ᐃⵠᐃⲆⲆΔΔ: "img/night-boat-wave.png",
    ΔⲆⲆⲆⵠΔⲆ: "img/inv-boat-out.png",
    ᐃⲆΔᐃⲆᐃⵠ: "img/inv-boat-in.png",
    ⵠⵠᐃⵠΔⲆⲆ: "img/inv-boat-click.png",
    ⵠⵠⵠⲆⵠΔΔ: "img/day-plane.png",
    ΔⵠΔᐃⲆⵠⵠ: "img/night-plane.png",
    ᐃΔⲆΔᐃΔΔ: "img/inv-plane-out.png",
    ᐃᐃᐃΔΔⵠΔ: "img/inv-plane-in.png",
    ⵠⵠⵠᐃᐃᐃⲆ: "img/inv-plane-click.png",
    ᐃⵠᐃᐃΔⵠΔ: "img/day-sled.png",
    ⲆᐃⲆΔΔΔΔ: "img/night-sled.png",
    ⵠᐃᐃΔΔⲆⲆ: "img/day-sled-wave.png",
    ᐃⵠⲆⵠᐃⵠⵠ: "img/night-sled-wave.png",
    ⲆⲆⲆΔΔⲆᐃ: "img/inv-sled-out.png",
    ᐃⲆΔⵠⲆⵠⵠ: "img/inv-sled-in.png",
    ᐃΔΔⵠⵠⲆⵠ: "img/inv-sled-click.png",
    ᐃᐃⵠΔΔᐃᐃ: "img/day-pirate-hat.png",
    ΔⵠⲆⵠᐃᐃΔ: "img/night-pirate-hat.png",
    ᐃⲆⲆΔΔΔⵠ: "img/inv-pirate-hat-out.png",
    ⲆⵠⲆⲆᐃᐃᐃ: "img/inv-pirate-hat-in.png",
    ⵠⲆⲆⵠᐃᐃᐃ: "img/inv-pirate-hat-click.png",
    ⵠΔᐃⵠⲆΔⵠ: "img/day-penguin.png",
    ⵠⵠᐃᐃᐃᐃⲆ: "img/night-penguin.png",
    ΔⵠⵠᐃᐃΔᐃ: "img/hurt-penguin.png",
    ΔΔⲆⲆⵠ: "img/inv-penguin-feather-click.png",
    ⲆᐃᐃΔΔ: "img/inv-hawk-feather-click.png",
    ⲆⵠΔⲆⲆ: "img/inv-parrot-feather-click.png",
    ΔⵠΔⲆΔΔᐃ: "img/day-ocelot.png",
    ⲆΔⵠⵠⲆᐃⲆ: "img/night-ocelot.png",
    ΔⲆᐃᐃⵠⲆᐃ: "img/hurt-ocelot.png",
    ⵠⵠᐃᐃⵠ: "img/inv-ocelot-fur-click.png",
    ᐃⲆⲆⵠΔⲆⵠ: "img/day-crocodile.png",
    ⵠΔᐃᐃⵠⲆⲆ: "img/night-crocodile.png",
    ⵠΔᐃⲆᐃΔⲆ: "img/hurt-crocodile.png",
    ᐃΔⲆⵠⵠ: "img/inv-crocodile-scales-click.png",
    ᐃⲆⲆᐃᐃΔⵠ: "img/day-boar1.png",
    ⵠΔⵠΔⲆⵠᐃ: "img/day-boar1-tamed.png",
    ⵠᐃⲆᐃᐃᐃΔ: "img/day-boar1-angry.png",
    ΔᐃⵠⵠⲆΔᐃ: "img/night-boar1.png",
    ⲆΔⲆᐃᐃΔΔ: "img/night-boar1-tamed.png",
    ᐃΔᐃᐃⲆΔⲆ: "img/night-boar1-angry.png",
    ΔⲆⲆⵠΔⲆⲆ: "img/inv-mount-boar-out.png",
    ΔΔⵠΔᐃᐃᐃ: "img/inv-mount-boar-in.png",
    ᐃⲆΔΔΔⲆΔ: "img/inv-mount-boar-click.png",
    ⵠᐃⵠⵠⵠᐃⵠ: "img/day-hurt-boar1.png",
    ⵠⵠᐃΔΔᐃⲆ: "img/boar1-step.png",
    ΔᐃⲆΔⲆⲆⲆ: "img/day-saddle1.png",
    ΔⲆΔⲆΔⵠⵠ: "img/night-saddle1.png",
    ΔⲆⲆΔᐃᐃⲆ: "img/inv-saddle-out.png",
    ΔⵠⲆⲆΔⵠⵠ: "img/inv-saddle-in.png",
    ⵠΔⵠⲆΔᐃⵠ: "img/inv-saddle-click.png",
    ⲆΔᐃⵠⵠⵠⵠ: "img/day-magic-wand0.png",
    ᐃⲆᐃⲆᐃⲆⵠ: "img/night-magic-wand0.png",
    ᐃⲆⵠΔΔΔΔ: "img/day-light-wand1.png",
    ⲆⲆΔⵠΔΔⲆ: "img/night-light-wand1.png",
    ⵠⵠⲆΔⵠΔⵠ: "img/inv-magic-wand0-out.png",
    ΔΔᐃᐃⲆΔⲆ: "img/inv-magic-wand0-in.png",
    ᐃⲆᐃΔⵠᐃᐃ: "img/inv-magic-wand0-click.png",
    ⵠΔⲆᐃⲆᐃΔ: "img/day-magic-wand1.png",
    ⵠΔⵠᐃⵠᐃᐃ: "img/night-magic-wand1.png",
    ΔᐃΔΔΔⲆᐃ: "img/day-light-wand0.png",
    ⲆⵠⲆΔΔⲆΔ: "img/night-light-wand0.png",
    ⵠΔᐃⵠⲆⵠⵠ: "img/inv-magic-wand1-out.png",
    ⲆⲆⲆⲆⲆΔᐃ: "img/inv-magic-wand1-in.png",
    ⲆΔⲆΔⲆⲆⲆ: "img/inv-magic-wand1-click.png",
    ⲆᐃᐃⲆᐃΔΔ: "img/day-firefly.png",
    ⵠⲆⲆΔΔⵠΔ: "img/night-firefly.png",
    ⵠΔᐃⲆᐃⲆⲆ: "img/hurt-firefly.png",
    ⵠᐃΔⲆⲆΔⵠ: "img/inv-firefly-out.png",
    ΔⲆⲆⵠᐃᐃΔ: "img/inv-firefly-in.png",
    ⲆΔⲆΔᐃⲆⵠ: "img/inv-firefly-click.png",
    ᐃΔΔΔⲆⵠᐃ: "img/day-baby-dragon.png",
    ⵠⲆⵠᐃⲆⵠⲆ: "img/night-baby-dragon.png",
    ΔⲆⵠⵠΔⲆⵠ: "img/day-baby-dragon-angry.png",
    ᐃⲆⵠΔⲆⲆⵠ: "img/night-baby-dragon-angry.png",
    ᐃΔᐃⵠᐃⲆⵠ: "img/day-baby-dragon-tamed.png",
    ⲆⲆⲆᐃᐃⲆᐃ: "img/night-baby-dragon-tamed.png",
    ⲆⵠΔΔΔⲆᐃ: "img/day-wing-dragon-left-angry.png",
    ΔⵠΔⵠⵠⵠᐃ: "img/night-dragon-wing-left-angry.png",
    ⲆⵠⲆⲆΔⲆⲆ: "img/day-wing-dragon-right-angry.png",
    ΔⲆⲆΔΔΔΔ: "img/night-dragon-wing-right-angry.png",
    ⵠΔΔΔⵠⲆⵠ: "img/day-wing-dragon-left-tamed.png",
    ΔΔⵠⵠΔⲆΔ: "img/night-dragon-wing-left-tamed.png",
    ᐃⵠΔΔᐃᐃⵠ: "img/day-wing-dragon-right-tamed.png",
    ⲆⵠⵠⵠⲆⲆᐃ: "img/night-wing-dragon-right-tamed.png",
    ⲆⲆⵠⵠⵠⲆⵠ: "img/day-wing-dragon-left.png",
    ⵠᐃⵠΔⲆⵠⲆ: "img/night-dragon-wing-left.png",
    ⲆⲆᐃΔᐃᐃⵠ: "img/day-wing-dragon-right.png",
    ⲆᐃⲆⲆⲆᐃⲆ: "img/night-wing-dragon-right.png",
    ⵠⵠᐃΔⲆⲆⵠ: "img/hurt-baby-dragon.png",
    ⲆΔⵠΔΔᐃᐃ: "img/hurt-baby-dragon-wing-left.png",
    ᐃⲆⵠⲆⵠⵠᐃ: "img/hurt-baby-dragon-wing-right.png",
    ΔΔΔⲆⵠⲆⲆ: "img/inv-baby-dragon-out.png",
    ΔᐃΔΔᐃΔⲆ: "img/inv-baby-dragon-in.png",
    ⵠᐃᐃⵠⵠΔΔ: "img/inv-baby-dragon-click.png",
    ⲆⲆⵠᐃΔᐃⲆ: "img/day-baby-lava.png",
    ⵠⵠⵠⲆⲆᐃΔ: "img/night-baby-lava.png",
    ⵠⲆⲆΔᐃⵠⲆ: "img/day-baby-lava-angry.png",
    ΔΔᐃⵠⲆᐃΔ: "img/night-baby-lava-angry.png",
    ⵠⵠⲆⵠΔΔⲆ: "img/day-baby-lava-tamed.png",
    ᐃⲆᐃⲆᐃᐃⵠ: "img/night-baby-lava-tamed.png",
    ᐃΔΔΔᐃᐃΔ: "img/day-wing-lava-left-angry.png",
    ᐃⵠⲆᐃᐃΔⵠ: "img/night-wing-lava-left-angry.png",
    Ⲇⵠⵠⵠᐃᐃⵠ: "img/day-wing-lava-right-angry.png",
    ΔᐃᐃⵠⲆⵠᐃ: "img/night-wing-lava-right-angry.png",
    ⲆⵠΔⲆⲆⲆⵠ: "img/day-wing-lava-left-tamed.png",
    ΔᐃᐃΔᐃᐃⲆ: "img/night-wing-lava-left-tamed.png",
    ⵠⵠⲆᐃΔᐃΔ: "img/day-wing-lava-right-tamed.png",
    ⲆΔᐃᐃΔΔΔ: "img/night-wing-lava-right-tamed.png",
    ⲆⵠΔⵠᐃᐃΔ: "img/day-wing-lava-left.png",
    ⲆΔⵠⲆᐃⵠᐃ: "img/night-wing-lava-left.png",
    ΔⲆⲆⵠΔⲆⵠ: "img/day-wing-lava-right.png",
    ⵠᐃᐃᐃΔⲆⲆ: "img/night-wing-lava-right.png",
    ᐃΔⵠΔᐃΔⵠ: "img/hurt-baby-lava.png",
    ⲆᐃᐃᐃⲆⲆⲆ: "img/hurt-baby-lava-wing-left.png",
    ⲆΔᐃᐃⵠⲆⵠ: "img/hurt-baby-lava-wing-right.png",
    ΔΔΔⵠᐃⲆΔ: "img/inv-baby-lava-out.png",
    ⲆΔΔΔⵠⵠΔ: "img/inv-baby-lava-in.png",
    ⵠΔⲆΔΔᐃᐃ: "img/inv-baby-lava-click.png",
    ⲆⲆⲆΔⵠᐃⲆ: "img/day-falcon.png",
    ⵠᐃⲆΔΔᐃᐃ: "img/night-falcon.png",
    ΔⲆⲆᐃⵠΔᐃ: "img/day-falcon-angry.png",
    ᐃⵠᐃⵠⲆᐃⲆ: "img/night-falcon-angry.png",
    ᐃⲆΔΔΔΔⵠ: "img/day-falcon-ground.png",
    ᐃᐃᐃᐃⵠᐃⲆ: "img/night-falcon-ground.png",
    ΔΔⲆΔⵠⲆΔ: "img/day-falcon-ground-angry.png",
    ⵠⵠΔᐃⵠⲆⵠ: "img/night-falcon-ground-angry.png",
    ⵠⵠΔΔⵠⲆᐃ: "img/day-falcon-wings-left.png",
    ΔⵠΔⲆΔⲆⵠ: "img/night-falcon-wings-left.png",
    ᐃΔΔᐃⵠᐃⲆ: "img/day-falcon-wings-right.png",
    ⵠᐃᐃⵠⵠᐃΔ: "img/night-falcon-wings-right.png",
    ⵠΔΔᐃᐃⵠⲆ: "img/day-falcon-angry-wings-left.png",
    ΔⲆΔΔΔⵠⲆ: "img/night-falcon-angry-wings-left.png",
    ⲆⲆᐃⲆΔᐃⵠ: "img/day-falcon-angry-wings-right.png",
    ⲆᐃΔᐃⲆⵠⲆ: "img/night-falcon-angry-wings-right.png",
    ⲆᐃⲆⲆᐃΔⲆ: "img/day-falcon-wings-left-tamed.png",
    ᐃΔⵠⵠΔᐃⲆ: "img/night-falcon-wings-left-tamed.png",
    ⲆⵠΔΔⲆΔΔ: "img/day-falcon-wings-right-tamed.png",
    ΔⲆⲆΔⵠⵠΔ: "img/night-falcon-wings-right-tamed.png",
    ᐃΔΔⵠⵠᐃᐃ: "img/day-falcon-tamed.png",
    ᐃⲆᐃⵠⲆΔᐃ: "img/night-falcon-tamed.png",
    ⲆΔⲆⵠᐃⲆⲆ: "img/hurt-falcon-ground.png",
    ᐃΔⵠᐃᐃⵠⵠ: "img/hurt-falcon.png",
    ΔⵠⲆᐃΔΔⲆ: "img/hurt-falcon-wings-left.png",
    ΔᐃⲆᐃᐃⵠⵠ: "img/hurt-falcon-wings-right.png",
    ⵠᐃΔⲆΔᐃⵠ: "img/inv-falcon-out.png",
    ᐃΔⵠᐃⵠⵠΔ: "img/inv-falcon-in.png",
    ⵠΔΔⵠΔⲆᐃ: "img/inv-falcon-click.png",
    ΔⲆⲆⲆΔΔⲆ: "img/day-parrot.png",
    ⵠⵠⵠΔⵠⵠⵠ: "img/night-parrot.png",
    ⲆⲆΔᐃⲆⲆⵠ: "img/day-parrot-angry.png",
    ΔΔᐃⲆᐃΔⵠ: "img/night-parrot-angry.png",
    ᐃΔⵠᐃΔΔΔ: "img/day-parrot-ground.png",
    ΔⵠⵠᐃᐃΔΔ: "img/night-parrot-ground.png",
    ⲆΔⵠⲆⵠᐃᐃ: "img/day-parrot-ground-angry.png",
    ⲆᐃΔᐃⲆᐃⲆ: "img/night-parrot-ground-angry.png",
    ⵠΔⵠΔⲆᐃⲆ: "img/day-parrot-wing-left.png",
    ᐃᐃⲆᐃΔΔⵠ: "img/night-parrot-wing-left.png",
    ⲆⲆⲆΔⲆⵠΔ: "img/day-parrot-wing-right.png",
    ΔᐃΔⲆΔᐃΔ: "img/night-parrot-wing-right.png",
    ΔᐃΔⵠΔΔᐃ: "img/day-parrot-angry-wing-left.png",
    ᐃΔΔΔᐃⵠᐃ: "img/night-parrot-angry-wing-left.png",
    ⲆⵠΔⲆⵠΔᐃ: "img/day-parrot-angry-wing-right.png",
    ΔⲆⲆΔᐃⲆⵠ: "img/night-parrot-angry-wing-right.png",
    ⵠⲆᐃⲆⲆⲆᐃ: "img/day-parrot-wing-left-tamed.png",
    ⵠᐃⵠⲆⵠΔΔ: "img/night-parrot-wing-left-tamed.png",
    ⲆᐃᐃⲆΔⲆᐃ: "img/day-parrot-wing-right-tamed.png",
    ᐃΔⵠΔᐃⲆⵠ: "img/night-parrot-wing-right-tamed.png",
    ΔΔΔⵠⲆᐃⲆ: "img/day-parrot-tamed.png",
    ⲆⵠⲆᐃᐃⵠⲆ: "img/night-parrot-tamed.png",
    ΔᐃΔᐃⵠⲆΔ: "img/hurt-parrot-ground.png",
    ⵠⵠⲆⵠΔΔΔ: "img/hurt-parrot.png",
    ⲆᐃⲆΔᐃⵠᐃ: "img/hurt-parrot-wing-left.png",
    ⵠⲆⵠⵠⵠⲆⲆ: "img/hurt-parrot-wing-right.png",
    ⲆΔΔᐃᐃᐃΔ: "img/inv-parrot-out.png",
    ⵠᐃᐃⲆΔΔⲆ: "img/inv-parrot-in.png",
    ΔⲆⲆᐃΔⲆⵠ: "img/inv-parrot-click.png",
    ᐃⵠⲆᐃⵠᐃⵠ: "img/day-crab-boss.png",
    ⵠⲆⲆⵠΔΔᐃ: "img/night-crab-boss.png",
    ΔⲆⲆΔΔⲆᐃ: "img/day-crab-boss-angry.png",
    ⲆᐃⲆⵠΔⲆᐃ: "img/night-crab-boss-angry.png",
    Ⲇⵠᐃᐃᐃᐃⵠ: "img/day-crab-boss-tamed.png",
    ΔⲆⲆΔΔⵠᐃ: "img/night-crab-boss-tamed.png",
    ⵠⵠⵠⲆⲆⲆⵠ: "img/day-crab-boss-claw-left-attack.png",
    ΔᐃⵠⵠⵠⲆⲆ: "img/night-crab-boss-claw-left-attack.png",
    ⲆΔⲆⵠᐃΔᐃ: "img/day-crab-boss-claw-right-attack.png",
    ⵠⲆⵠⲆⲆⲆΔ: "img/night-crab-boss-claw-right-attack.png",
    ΔᐃΔⵠΔᐃᐃⲆⵠ: "img/day-crab-boss-claw-left-tamed.png",
    ΔᐃᐃⲆΔᐃⲆⵠΔ: "img/night-crab-boss-claw-left-tamed.png",
    ᐃⲆΔΔΔⲆⵠⵠⲆ: "img/day-crab-boss-claw-right-tamed.png",
    ΔΔⲆΔΔΔⲆⲆᐃ: "img/night-crab-boss-claw-right-tamed.png",
    ⵠᐃΔⲆⵠΔⵠ: "img/day-crab-boss-claw-left.png",
    ⵠΔⵠΔⵠᐃΔ: "img/night-crab-boss-claw-left.png",
    ⲆⵠΔⲆᐃᐃⲆ: "img/day-crab-boss-claw-right.png",
    ⵠⲆΔⵠᐃΔⵠ: "img/night-crab-boss-claw-right.png",
    ΔⵠⲆᐃᐃⲆΔ: "img/hurt-crab-boss.png",
    ΔΔᐃΔⲆⵠⵠ: "img/hurt-crab-boss-claw-left.png",
    ⵠΔⲆᐃᐃΔⵠ: "img/hurt-crab-boss-claw-right.png",
    ΔⲆⲆΔᐃⲆΔ: "img/heal-crab-boss.png",
    ᐃΔΔⲆᐃⲆⵠ: "img/heal-crab-boss-claw-left.png",
    ᐃΔⲆᐃᐃⲆⵠ: "img/heal-crab-boss-claw-right.png",
    ᐃΔⲆᐃᐃⲆᐃ: "img/crab-step.png",
    ⵠΔᐃΔΔᐃⵠ: "img/inv-crab-boss-out.png",
    ΔⲆⲆⲆΔⲆⵠ: "img/inv-crab-boss-in.png",
    ᐃᐃΔⲆᐃⲆⲆ: "img/inv-crab-boss-click.png",
    ΔᐃⵠᐃⵠⲆᐃ: "img/day-cactus10.png",
    ⵠⲆΔΔΔΔⵠ: "img/night-cactus10.png",
    ⲆⲆⲆΔᐃⵠⲆ: "img/inv-cactus-out.png",
    ⵠⲆΔⵠᐃΔⲆ: "img/inv-cactus-in.png",
    ⲆᐃᐃᐃⵠΔᐃ: "img/inv-cactus-click.png",
    ⲆᐃΔⵠᐃⵠⵠ: "img/day-scorpion.png",
    ᐃⵠⲆⲆᐃⲆΔ: "img/night-scorpion.png",
    ⲆⵠⲆⵠΔᐃΔ: "img/day-scorpion-hand-left.png",
    ⵠᐃⵠⵠⲆᐃᐃ: "img/night-scorpion-hand-left.png",
    ᐃᐃᐃᐃΔⵠΔ: "img/day-scorpion-hand-right.png",
    ⲆⲆⲆⵠᐃᐃⵠ: "img/night-scorpion-hand-right.png",
    ᐃⵠᐃΔᐃⵠᐃ: "img/hurt-scorpion.png",
    ΔᐃⲆⵠⲆΔⵠ: "img/hurt-scorpion-hand-left.png",
    ⲆⲆⲆⲆⵠᐃⵠ: "img/hurt-scorpion-hand-right.png",
    ⲆᐃᐃⲆⵠⵠᐃ: "img/day-vulture.png",
    ᐃᐃⵠⲆΔⵠⲆ: "img/night-vulture.png",
    ΔᐃⲆⲆΔᐃⲆ: "img/day-vulture-angry.png",
    ᐃΔΔⵠⲆⵠⲆ: "img/night-vulture-angry.png",
    ΔⵠⲆⲆΔⲆⲆ: "img/day-vulture-ground.png",
    ⲆⲆᐃΔⲆⵠⵠ: "img/night-vulture-ground.png",
    ⵠΔΔⵠΔⵠΔ: "img/day-vulture-ground-angry.png",
    ᐃⲆᐃⵠᐃΔᐃ: "img/night-vulture-ground-angry.png",
    ᐃⲆΔᐃΔⵠⵠ: "img/day-vulture-wings-left.png",
    ΔᐃΔⲆᐃⲆᐃ: "img/night-vulture-wings-left.png",
    ⲆⵠΔΔΔΔΔ: "img/day-vulture-wings-right.png",
    ⲆⵠⲆⲆᐃᐃⲆ: "img/night-vulture-wings-right.png",
    ΔⵠⲆⵠⵠΔⲆ: "img/day-vulture-angry-wings-left.png",
    ⲆΔⵠᐃᐃⲆᐃ: "img/night-vulture-angry-wings-left.png",
    ΔΔΔⵠⲆⲆᐃ: "img/day-vulture-angry-wings-right.png",
    ᐃᐃⲆⵠⲆⵠⲆ: "img/night-vulture-angry-wings-right.png",
    ⵠⵠⲆⵠᐃⵠᐃ: "img/day-vulture-wings-left-tamed.png",
    ⲆᐃΔΔΔⲆᐃ: "img/night-vulture-wings-left-tamed.png",
    ⲆᐃᐃⲆⲆⵠᐃ: "img/day-vulture-wings-right-tamed.png",
    ᐃᐃᐃⵠⵠⲆⵠ: "img/night-vulture-wings-right-tamed.png",
    ⵠᐃⲆⵠⲆⲆⵠ: "img/day-vulture-tamed.png",
    ⲆΔⲆⲆΔᐃⲆ: "img/night-vulture-tamed.png",
    ᐃⵠΔⲆⵠᐃᐃ: "img/hurt-vulture-ground.png",
    ⲆⲆᐃⵠᐃⵠⲆ: "img/hurt-vulture.png",
    ᐃᐃᐃᐃΔᐃᐃ: "img/hurt-vulture-wings-left.png",
    ⲆⲆⲆⲆⲆᐃΔ: "img/hurt-vulture-wings-right.png",
    ⲆΔᐃᐃΔⲆΔ: "img/inv-vulture-out.png",
    ⲆⵠΔⲆΔᐃⵠ: "img/inv-vulture-in.png",
    ΔⲆᐃΔΔᐃᐃ: "img/inv-vulture-click.png",
    ⵠΔⲆΔⵠⲆⲆ: "img/day-aloe-vera.png",
    ⵠᐃᐃⲆⲆⲆⲆ: "img/night-aloe-vera.png",
    ⵠᐃⲆᐃⵠⲆⲆ: "img/inv-aloe-vera-out.png",
    ⲆⲆⵠΔⵠᐃΔ: "img/inv-aloe-vera-in.png",
    ⲆⵠᐃⵠΔᐃⵠ: "img/inv-aloe-vera-click.png",
    ΔΔᐃⲆⵠᐃⲆ: "img/day-aloe-vera-grown.png",
    ⵠΔⲆⲆΔⲆⵠ: "img/night-aloe-vera-grown.png",
    ᐃΔⲆⵠΔⲆⵠ: "img/day-aloe-vera-dried.png",
    ⲆᐃᐃⲆⲆⵠⵠ: "img/night-aloe-vera-dried.png",
    ΔΔⵠⲆⵠⲆᐃ: "img/day-turban1.png",
    ᐃⲆⵠΔΔΔᐃ: "img/night-turban1.png",
    ⵠΔΔⲆᐃΔⲆ: "img/day-turban2.png",
    ⵠΔⵠΔᐃᐃᐃ: "img/night-turban2.png",
    ᐃⵠⵠⲆᐃⵠΔ: "img/inv-turban2-out.png",
    ΔΔⲆⵠΔⲆⲆ: "img/inv-turban2-in.png",
    ⲆΔΔⲆⵠᐃΔ: "img/inv-turban2-click.png",
    ⵠΔⲆᐃⲆᐃⲆ: "img/inv-turban1-out.png",
    ΔⵠⲆᐃⲆⲆⲆ: "img/inv-turban1-in.png",
    ΔᐃⵠⵠᐃΔⵠ: "img/inv-turban1-click.png",
    ᐃΔᐃΔΔⵠΔ: "img/day-pitchfork2.png",
    Ⲇⵠⵠᐃᐃⵠⵠ: "img/night-pitchfork2.png",
    ⵠⵠᐃᐃΔᐃᐃ: "img/inv-pitchfork2-out.png",
    ᐃⵠᐃⲆᐃⲆΔ: "img/inv-pitchfork2-in.png",
    ⵠⵠᐃⵠⵠⲆⵠ: "img/inv-pitchfork2-click.png",
    ᐃⵠⲆⲆⲆΔⲆ: "img/inv-gold-fork-click.png",
    ⲆᐃⵠⵠⵠⵠⲆ: "img/inv-pilot-glasses-click.png",
    ΔΔⵠⲆΔⲆΔ: "img/day-pilot-helmet.png",
    ΔΔΔᐃⵠᐃⵠ: "img/night-pilot-helmet.png",
    ΔⲆⵠΔᐃΔΔ: "img/inv-pilot-helmet-out.png",
    ⵠⲆⵠΔΔⲆᐃ: "img/inv-pilot-helmet-in.png",
    ⵠⵠᐃⵠⲆⲆⵠ: "img/inv-pilot-helmet-click.png",
    Δⵠᐃᐃᐃⵠⵠᐃⵠ: "img/day-sandworm0.png",
    ΔⵠⲆⲆⵠⵠⵠ: "img/day-sandworm1.png",
    ⲆΔΔᐃⲆΔΔ: "img/day-sandworm2.png",
    ΔᐃΔᐃⵠᐃᐃΔⵠ: "img/night-sandworm0.png",
    ᐃᐃⲆⵠΔΔⵠ: "img/night-sandworm1.png",
    ⲆⲆⲆᐃⲆΔⲆ: "img/night-sandworm2.png",
    ⲆᐃⲆⵠⵠⵠᐃ: "img/hurt-sandworm0.png",
    ΔⵠⵠⵠᐃⲆᐃ: "img/hurt-sandworm1.png",
    ᐃᐃⵠΔᐃΔᐃ: "img/hurt-sandworm2.png",
    ΔᐃⲆⲆⲆ: "img/inv-vulture-feather-click.png",
    ᐃᐃᐃᐃΔⲆᐃ: "img/day-jungle-tree0.png",
    ΔⲆΔᐃⵠⵠΔ: "img/night-jungle-tree0.png",
    ΔΔⵠⲆᐃⲆΔ: "img/day-jungle-tree1.png",
    ⲆᐃⲆᐃΔⵠⵠ: "img/night-jungle-tree1.png",
    ᐃⵠΔΔⵠᐃⲆ: "img/day-jungle-tree2.png",
    ⲆΔⵠΔⲆⵠⲆ: "img/night-jungle-tree2.png",
    ΔⵠⲆⲆΔⵠⲆ: "img/day-jungle-tree3.png",
    ΔΔⵠⲆⵠⲆⲆ: "img/night-jungle-tree3.png",
    ⵠⵠΔⵠΔΔΔ: "img/day-jungle-tree4.png",
    ΔⲆⲆⲆⲆΔⵠ: "img/night-jungle-tree4.png",
    ⲆΔⲆΔᐃΔᐃ: "img/day-jungle-bush0.png",
    ΔᐃΔΔᐃΔᐃ: "img/night-jungle-bush0.png",
    ⵠᐃⲆⵠⲆᐃⵠ: "img/day-jungle-bush1.png",
    ⵠⲆΔᐃⵠⲆΔ: "img/night-jungle-bush1.png",
    ⲆⵠⲆᐃⲆⵠΔ: "img/day-jungle-ground0.png",
    ⵠⵠⵠᐃΔΔᐃ: "img/night-jungle-ground0.png",
    ᐃΔᐃⲆⵠⵠᐃ: "img/day-jungle-ground1.png",
    ΔΔᐃⵠⵠΔⲆ: "img/night-jungle-ground1.png",
    ᐃⵠΔΔᐃⵠΔ: "img/day-jungle-ground2.png",
    ΔⵠᐃⲆᐃΔᐃ: "img/night-jungle-ground2.png",
    ⵠⲆⵠΔⵠΔΔ: "img/day-jungle-ground3.png",
    ⵠΔΔΔⵠᐃⲆ: "img/night-jungle-ground3.png",
    ⲆⵠⲆⲆᐃⵠΔ: "img/day-jungle-pebble0.png",
    ⲆⵠⵠⲆⲆΔΔ: "img/night-jungle-pebble0.png",
    ⲆΔⵠΔΔᐃⲆ: "img/day-jungle-pebble1.png",
    ⲆⵠΔᐃⵠᐃΔ: "img/night-jungle-pebble1.png",
    ᐃⲆᐃⵠΔΔΔ: "img/day-jungle-pebble2.png",
    ⵠⵠⵠΔⵠⵠᐃ: "img/night-jungle-pebble2.png",
    ⵠⲆⲆⲆᐃⵠᐃ: "img/day-jungle-pebble3.png",
    Ⲇᐃᐃⵠᐃⵠᐃ: "img/night-jungle-pebble3.png",
    ΔⲆΔΔⲆΔⲆ: "img/day-jungle-pebble4.png",
    ΔᐃᐃⵠΔⲆⵠ: "img/night-jungle-pebble4.png",
    ᐃⵠΔᐃΔⲆⲆ: "img/day-jungle-pebble5.png",
    ⵠⵠⲆⵠⲆᐃᐃ: "img/night-jungle-pebble5.png",
    ⲆᐃΔΔΔΔⲆ: "img/day-jungle-stone0.png",
    ⵠⲆΔᐃΔⵠΔ: "img/night-jungle-stone0.png",
    ⵠᐃⲆⵠⲆΔᐃ: "img/day-jungle-stone1.png",
    ⲆⲆΔⲆⵠΔⵠ: "img/night-jungle-stone1.png",
    ⲆⵠΔⲆⲆᐃΔ: "img/day-jungle-stone2.png",
    ΔΔᐃᐃᐃⵠⲆ: "img/night-jungle-stone2.png",
    ᐃⲆΔⵠⲆⵠⲆ: "img/day-emerald0.png",
    ⵠΔΔᐃΔⵠⵠ: "img/night-emerald0.png",
    ⲆᐃⵠΔⵠⲆⲆ: "img/day-emerald1.png",
    ΔΔΔΔΔᐃⵠ: "img/night-emerald1.png",
    ΔΔⵠΔⲆΔⵠ: "img/day-emerald2.png",
    ΔᐃᐃⲆΔΔⲆ: "img/night-emerald2.png",
    ⲆⵠᐃᐃⲆ: "img/inv-emerald-click.png",
    ΔᐃⵠᐃΔⲆΔ: "img/inv-sworm-juice-out.png",
    ⲆᐃⵠⵠⲆᐃⵠ: "img/inv-sworm-juice-in.png",
    ⵠⵠⵠᐃⵠΔⵠ: "img/inv-sworm-juice-click.png",
    ⵠⲆⵠⲆⵠⲆⵠ: "img/day-point-machine.png",
    ⲆⵠΔᐃᐃⲆᐃ: "img/night-point-machine.png",
    ΔⵠΔΔⵠⵠΔ: "img/day-point-machine-hole.png",
    ᐃΔᐃΔΔᐃᐃ: "img/night-point-machine-hole.png",
    ΔΔᐃᐃⵠⵠⵠ: "img/day-point-machine-ground.png",
    ΔⲆΔᐃΔⵠᐃ: "img/night-point-machine-ground.png",
    ᐃⲆⲆⲆⵠⲆⲆ: "img/day-point-machine-rotate.png",
    ΔⲆᐃΔⲆᐃΔ: "img/night-point-machine-rotate.png",
    ⲆⲆᐃΔⵠᐃᐃ: "img/inv-point-machine-out.png",
    ⵠᐃᐃᐃΔᐃᐃ: "img/inv-point-machine-in.png",
    ⵠΔⲆΔⲆΔⵠ: "img/inv-point-machine-click.png",
    ⲆᐃΔΔⲆⲆΔ: "img/day-extractor-machine0-stone.png",
    ᐃⵠⵠΔⲆⵠΔ: "img/night-extractor-machine0-stone.png",
    ⲆᐃΔᐃΔⲆΔ: "img/day-extractor-machine-stone.png",
    ΔᐃᐃΔΔⵠᐃ: "img/night-extractor-machine-stone.png",
    ⵠᐃᐃΔᐃⵠᐃ: "img/inv-extractor-machine-stone-out.png",
    ΔᐃⲆⲆΔᐃΔ: "img/inv-extractor-machine-stone-in.png",
    ⵠⲆᐃᐃⲆⲆⲆ: "img/inv-extractor-machine-stone-click.png",
    ⵠΔΔⵠᐃΔⲆ: "img/day-extractor-machine0-gold.png",
    ᐃⵠⲆⵠΔᐃⵠ: "img/night-extractor-machine0-gold.png",
    ΔΔᐃⵠⵠΔᐃ: "img/day-extractor-machine-gold.png",
    ᐃⲆⲆⲆᐃᐃⵠ: "img/night-extractor-machine-gold.png",
    ᐃⵠⲆΔⵠΔᐃ: "img/inv-extractor-machine-gold-out.png",
    ᐃΔⵠᐃΔᐃⵠ: "img/inv-extractor-machine-gold-in.png",
    ⲆⵠᐃⵠᐃⲆΔ: "img/inv-extractor-machine-gold-click.png",
    ΔᐃΔᐃΔⲆᐃ: "img/day-extractor-machine0-diamond.png",
    ⲆᐃⵠⲆⲆⲆⵠ: "img/night-extractor-machine0-diamond.png",
    ᐃⵠⲆⲆⵠⵠᐃ: "img/day-extractor-machine-diamond.png",
    ⲆⵠΔⵠΔΔᐃ: "img/night-extractor-machine-diamond.png",
    ⵠⲆⲆᐃΔΔᐃ: "img/inv-extractor-machine-diamond-out.png",
    ⵠⲆⵠⲆᐃΔᐃ: "img/inv-extractor-machine-diamond-in.png",
    ⵠᐃᐃΔΔΔΔ: "img/inv-extractor-machine-diamond-click.png",
    Δⵠᐃᐃⵠⵠⵠ: "img/day-extractor-machine0-amethyst.png",
    ΔΔᐃⵠᐃⵠⲆ: "img/night-extractor-machine0-amethyst.png",
    ΔⵠⲆⲆΔΔⵠ: "img/day-extractor-machine-amethyst.png",
    ΔΔⲆⲆΔⵠⲆ: "img/night-extractor-machine-amethyst.png",
    ⲆⲆⲆΔᐃᐃⵠ: "img/inv-extractor-machine-amethyst-out.png",
    ΔⵠⲆᐃΔΔΔ: "img/inv-extractor-machine-amethyst-in.png",
    ΔⵠⵠⵠΔⵠΔ: "img/inv-extractor-machine-amethyst-click.png",
    ⵠⲆⵠⵠΔΔΔ: "img/day-extractor-machine0-reidite.png",
    ΔⵠⵠⲆΔⲆⵠ: "img/night-extractor-machine0-reidite.png",
    ⲆᐃⲆᐃΔΔΔ: "img/day-extractor-machine-reidite.png",
    ⲆⲆΔᐃΔⲆⵠ: "img/night-extractor-machine-reidite.png",
    ᐃΔⵠⲆⵠⵠⵠ: "img/inv-extractor-machine-reidite-out.png",
    ᐃΔⲆⵠⲆΔⵠ: "img/inv-extractor-machine-reidite-in.png",
    ⲆᐃⵠᐃⵠⲆⵠ: "img/inv-extractor-machine-reidite-click.png",
    ⵠⲆⲆⲆⲆⵠᐃ: "img/day-extractor-machine0-emerald.png",
    ⵠⲆⵠΔᐃⵠⲆ: "img/night-extractor-machine0-emerald.png",
    ⲆⵠᐃⵠⲆⵠⵠ: "img/day-extractor-machine-emerald.png",
    ΔⵠⲆΔⵠⵠᐃ: "img/night-extractor-machine-emerald.png",
    ⲆΔΔΔⵠᐃⲆ: "img/inv-extractor-machine-emerald-out.png",
    ⲆΔᐃᐃᐃⵠᐃ: "img/inv-extractor-machine-emerald-in.png",
    ⵠⲆΔΔⵠΔΔ: "img/inv-extractor-machine-emerald-click.png",
    ΔᐃⲆᐃⲆΔΔ: "img/day-extractor-machine0-copper.png",
    ᐃⲆⲆᐃᐃᐃⲆ: "img/night-extractor-machine0-copper.png",
    ΔᐃΔⲆⵠᐃᐃ: "img/day-extractor-machine-copper.png",
    ⲆⵠⲆⲆΔᐃᐃ: "img/night-extractor-machine-copper.png",
    ᐃⵠⲆⲆᐃΔⲆ: "img/inv-extractor-machine-copper-out.png",
    ᐃⲆⲆⲆⲆⲆⵠ: "img/inv-extractor-machine-copper-in.png",
    ᐃⲆⵠΔⵠΔΔ: "img/inv-extractor-machine-copper-click.png",
    ᐃⵠⵠΔᐃΔΔ: "img/day-extractor-machine0-iron.png",
    ⲆⲆⲆᐃΔᐃⵠ: "img/night-extractor-machine0-iron.png",
    ΔⲆᐃⲆΔⵠⲆ: "img/day-extractor-machine-iron.png",
    ⲆⲆΔΔᐃⲆⵠ: "img/night-extractor-machine-iron.png",
    ⵠⵠᐃΔⵠΔⲆ: "img/inv-extractor-machine-iron-out.png",
    ᐃΔⵠⲆⵠᐃⵠ: "img/inv-extractor-machine-iron-in.png",
    ΔⲆΔⲆⲆⲆᐃ: "img/inv-extractor-machine-iron-click.png",
    ⲆⵠⵠᐃΔᐃⲆ: "img/day-extractor-machine0-topaz.png",
    ᐃⵠΔΔΔΔΔ: "img/night-extractor-machine0-topaz.png",
    ⲆⲆΔⵠⲆⵠⲆ: "img/day-extractor-machine-topaz.png",
    ᐃᐃⲆᐃⲆΔⵠ: "img/night-extractor-machine-topaz.png",
    ᐃΔⵠⵠᐃᐃⵠ: "img/inv-extractor-machine-topaz-out.png",
    ⵠᐃⵠⲆⲆΔⲆ: "img/inv-extractor-machine-topaz-in.png",
    ΔⵠⵠⵠⲆⲆⵠ: "img/inv-extractor-machine-topaz-click.png",
    ⲆⵠᐃⵠⲆⲆⵠ: "img/day-extractor-machine0-sapphire.png",
    ΔⲆᐃⵠⵠᐃΔ: "img/night-extractor-machine0-sapphire.png",
    ᐃΔⵠᐃⲆⵠⵠ: "img/day-extractor-machine-sapphire.png",
    ⲆⲆⵠⵠⵠᐃΔ: "img/night-extractor-machine-sapphire.png",
    ΔⵠᐃⵠⲆⲆΔ: "img/inv-extractor-machine-sapphire-out.png",
    ⲆⵠⵠⵠⵠΔⲆ: "img/inv-extractor-machine-sapphire-in.png",
    ⲆᐃⲆᐃⲆⵠᐃ: "img/inv-extractor-machine-sapphire-click.png",
    ΔⵠⲆᐃΔᐃᐃ: "img/day-extractor-machine0-jade.png",
    ΔᐃⲆⲆⵠⲆⵠ: "img/night-extractor-machine0-jade.png",
    ᐃⲆⲆΔᐃⵠΔ: "img/day-extractor-machine-jade.png",
    ᐃᐃΔⵠΔᐃⵠ: "img/night-extractor-machine-jade.png",
    ⵠᐃΔⵠⲆΔⲆ: "img/inv-extractor-machine-jade-out.png",
    ΔΔΔⲆⲆⵠΔ: "img/inv-extractor-machine-jade-in.png",
    ᐃᐃⵠΔΔᐃΔ: "img/inv-extractor-machine-jade-click.png",
    ΔΔΔⵠᐃΔΔ: "img/day-extractor-machine0-ruby.png",
    ᐃⵠᐃⲆᐃⲆⲆ: "img/night-extractor-machine0-ruby.png",
    ⵠᐃⵠΔⲆᐃᐃ: "img/day-extractor-machine-ruby.png",
    ᐃΔᐃⲆⲆⲆⲆ: "img/night-extractor-machine-ruby.png",
    ᐃᐃᐃᐃᐃΔΔ: "img/inv-extractor-machine-ruby-out.png",
    ΔⲆᐃᐃᐃⵠᐃ: "img/inv-extractor-machine-ruby-in.png",
    ⲆᐃΔⵠⲆΔⵠ: "img/inv-extractor-machine-ruby-click.png",
    ⵠⲆⵠᐃΔΔⵠ: "img/day-extractor-machine0-coal.png",
    ΔᐃⵠΔΔⲆᐃ: "img/night-extractor-machine0-coal.png",
    ⲆΔⵠⲆΔⲆⵠ: "img/day-extractor-machine-coal.png",
    ᐃⲆⲆᐃⲆⵠᐃ: "img/night-extractor-machine-coal.png",
    ᐃⵠⵠⵠⵠΔᐃ: "img/inv-extractor-machine-coal-out.png",
    ΔᐃᐃⲆⲆⵠⵠ: "img/inv-extractor-machine-coal-in.png",
    ᐃⵠⲆΔⲆⵠᐃ: "img/inv-extractor-machine-coal-click.png",
    ΔⵠᐃⲆᐃᐃᐃ: "img/day-extractor-machine0-aquamarine.png",
    ⲆΔΔⵠᐃⵠᐃ: "img/night-extractor-machine0-aquamarine.png",
    ⵠⵠⲆⲆⵠΔⵠ: "img/day-extractor-machine-aquamarine.png",
    ⵠΔΔᐃΔⲆᐃ: "img/night-extractor-machine-aquamarine.png",
    ᐃⲆⵠᐃᐃΔⵠ: "img/inv-extractor-machine-aquamarine-out.png",
    ΔⵠΔⲆⵠⵠᐃ: "img/inv-extractor-machine-aquamarine-in.png",
    ⵠⵠΔⵠⲆⲆⵠ: "img/inv-extractor-machine-aquamarine-click.png",
    ΔΔᐃᐃⲆΔΔ: "img/extractor-cases.png",
    ᐃΔΔⵠΔΔⲆ: "img/day-golden-hen.png",
    ΔΔⲆΔᐃⵠⲆ: "img/night-golden-hen.png",
    ⵠⵠⵠⲆΔⵠⲆ: "img/day-golden-chicken.png",
    ⲆⵠⵠⲆⲆⵠᐃ: "img/night-golden-chicken.png",
    ᐃΔⲆⵠΔΔΔ: "img/day-golden-hen-angry.png",
    ᐃⲆⲆΔⲆⲆⲆ: "img/night-golden-hen-angry.png",
    ᐃⲆΔᐃⲆΔⲆ: "img/hurt-golden-hen.png",
    ΔΔⲆⵠⲆⵠⵠ: "img/hurt-golden-chicken.png",
    ⲆⵠⵠᐃᐃⲆᐃ: "img/day-golden-hen-tamed.png",
    ⲆᐃⲆᐃⲆⲆⲆ: "img/night-golden-hen-tamed.png",
    ΔⵠᐃΔᐃΔΔ: "img/inv-mount-golden-hen-out.png",
    ⵠᐃΔᐃΔΔⲆ: "img/inv-mount-golden-hen-in.png",
    ⲆⲆⲆᐃᐃⵠᐃ: "img/inv-mount-golden-hen-click.png",
    ΔⵠΔᐃⲆⲆᐃ: "img/logo-interface.png",
    ΔⵠᐃΔΔᐃᐃ: "img/biome-mode-hover.png",
    ⵠᐃⲆᐃⵠⵠΔ: "img/normal-mode-hover.png",
    ⲆᐃΔⲆΔᐃⵠ: "img/vampire-mode-hover.png",
    ᐃⲆΔⵠᐃΔⵠ: "img/zombie-mode-hover.png",
    ⲆⵠΔΔᐃΔΔ: "img/community-mode-hover2.png",
    Δᐃⵠᐃⵠⵠᐃ: "img/experimental-mode-hover.png",
    ⲆⵠᐃⲆᐃΔΔ: "img/zombie-mode-out.png",
    ΔⲆᐃⲆⵠΔᐃ: "img/zombie-mode-in.png",
    ⵠᐃᐃᐃⲆᐃΔ: "img/zombie-mode-click.png",
    ⵠⲆΔⲆΔΔΔ: "img/vampire-mode-out.png",
    ᐃⵠΔⲆΔⲆⲆ: "img/vampire-mode-in.png",
    ⵠⲆⲆⵠⲆⲆⲆ: "img/vampire-mode-click.png",
    ᐃᐃΔⲆΔᐃΔ: "img/normal-mode-out.png",
    ᐃⵠᐃⵠΔⲆⲆ: "img/normal-mode-in.png",
    ⵠᐃⲆⵠΔΔΔ: "img/normal-mode-click.png",
    ΔᐃΔⲆⵠⲆⵠ: "img/biome-mode-out.png",
    ⲆΔᐃⲆΔⲆᐃ: "img/biome-mode-in.png",
    ᐃⲆⵠΔⵠΔᐃ: "img/biome-mode-click.png",
    ΔⵠΔⵠⲆⲆⲆ: "img/community-mode-out.png",
    ⲆᐃᐃΔⲆᐃΔ: "img/community-mode-in.png",
    ⲆⲆᐃⵠⵠⲆⵠ: "img/community-mode-click.png",
    ⲆᐃⲆⲆⲆΔⲆ: "img/experimental-modes-out.png",
    ⵠᐃᐃᐃΔⲆⵠ: "img/experimental-modes-in.png",
    ⵠΔⲆⵠᐃⵠⲆ: "img/experimental-modes-click.png",
    ᐃΔᐃⵠⲆᐃⵠ: "img/youtube-button-out.png",
    ⵠΔᐃⲆΔᐃΔ: "img/youtube-button-in.png",
    ⵠᐃⵠⲆᐃⲆΔ: "img/youtube-button-click.png",
    ΔΔⵠᐃᐃΔⲆ: "img/wiki-button-out.png",
    ΔΔⵠᐃᐃᐃⵠ: "img/wiki-button-in.png",
    ᐃᐃⲆΔⵠΔΔ: "img/wiki-button-click.png",
    ΔⵠⲆᐃᐃᐃΔ: "img/twitter-button-out.png",
    ⲆᐃᐃᐃⵠⲆᐃ: "img/twitter-button-in.png",
    ⲆⲆⲆᐃⵠΔᐃ: "img/twitter-button-click.png",
    ΔⵠⵠΔⲆΔᐃ: "img/facebook-button-out.png",
    ΔΔᐃᐃΔΔᐃ: "img/facebook-button-in.png",
    ⲆΔⵠⵠᐃᐃⲆ: "img/facebook-button-click.png",
    ⵠᐃⲆⵠⲆᐃΔ: "img/reddit-button-out.png",
    ΔⲆᐃⲆΔⵠⵠ: "img/reddit-button-in.png",
    ᐃⲆⵠΔⵠⲆᐃ: "img/reddit-button-click.png",
    ⵠⲆⵠᐃⵠⲆⵠ: "img/discord-button-out.png",
    ᐃᐃⲆⲆⲆΔⲆ: "img/discord-button-in.png",
    ⵠΔΔΔⵠⵠᐃ: "img/discord-button-click.png",
    ⵠΔⲆΔⲆⵠⲆ: "img/merch-button-out.png",
    ΔⲆⵠⲆᐃⵠΔ: "img/merch-button-in.png",
    ⵠΔⵠⲆΔⲆΔ: "img/merch-button-click.png",
    ⲆᐃΔⲆᐃᐃᐃⲆⵠ: "img/terminal-button-out.png",
    ΔⵠΔΔⵠΔΔⲆΔ: "img/terminal-button-in.png",
    ⲆⵠⵠⲆⵠᐃᐃᐃᐃ: "img/terminal-button-click.png",
    ᐃΔᐃᐃᐃᐃⲆ: "img/restart-out.png",
    ⲆᐃᐃⲆᐃⲆⵠ: "img/restart-in.png",
    ⲆⵠᐃⲆⵠΔᐃ: "img/restart-click.png",
    ΔⲆᐃⵠᐃᐃⵠ: "img/reboot-out.png",
    ⲆⲆⲆⲆΔΔⵠ: "img/reboot-in.png",
    ⵠΔᐃΔΔⵠⵠ: "img/reboot-click.png",
    ᐃⲆⲆΔᐃⵠⵠ: "img/guide-out.png",
    ⵠΔⲆᐃᐃⵠᐃ: "img/guide-in.png",
    ⲆΔⵠⲆᐃⲆΔ: "img/guide-click.png",
    ⲆᐃΔⵠΔΔΔ: "img/copy-paste-out.png",
    ⲆⵠⲆⲆΔⲆⵠ: "img/copy-paste-in.png",
    ᐃⵠᐃᐃΔⵠⲆ: "img/copy-paste-click.png",
    ΔΔⲆᐃⲆΔΔ: "img/link-buttons-bg.png",
    ⵠᐃⲆⲆᐃⵠΔ: "img/changelog-box2.png",
    ⵠⲆⵠⵠⵠᐃᐃ: "img/changelog_33.png",
    ⲆⵠⲆⲆⲆⵠⲆ: "img/banner-taming.png",
    ⲆᐃⵠⲆᐃⲆΔ: "img/profile-button-out.png",
    ΔⲆⵠⵠᐃⲆⵠ: "img/profile-button-in.png",
    ⲆⲆⵠᐃΔᐃΔ: "img/profile-button-click.png",
    ⲆΔⲆᐃⵠᐃΔ: "img/login-button-out.png",
    ᐃΔⵠⵠΔⵠᐃ: "img/login-button-in.png",
    ᐃᐃⲆⲆΔⲆⲆ: "img/login-button-click.png",
    ΔⵠⲆⲆᐃⲆᐃ: "img/login-google-out.png",
    ΔⲆᐃΔᐃᐃⵠ: "img/login-google-in.png",
    ⲆΔⲆΔⲆⵠⲆ: "img/login-google-click.png",
    ᐃᐃΔᐃⲆⵠᐃ: "img/login-facebook-out.png",
    ᐃⵠᐃΔΔΔⵠ: "img/login-facebook-in.png",
    ⲆᐃᐃΔⲆΔⲆ: "img/login-facebook-click.png",
    ⵠⵠⲆΔΔⲆΔ: "img/account-box.png",
    ᐃΔⵠⲆⲆᐃΔⵠΔ: "img/account-under-maintenance.png",
    ᐃᐃΔⲆⲆΔΔ: "img/close-button-account-out.png",
    ᐃⵠⵠⲆᐃᐃⵠ: "img/close-button-account-in.png",
    ⲆᐃΔᐃⲆⵠᐃ: "img/close-button-account-click.png",
    ⲆⵠⵠΔᐃᐃᐃ: "img/play-button-out.png",
    ⲆΔⵠⵠᐃΔⲆ: "img/play-button-in.png",
    ΔⵠᐃΔΔΔⲆ: "img/play-button-click.png",
    ΔΔⲆΔᐃⲆⲆΔⵠ: "img/app-store-badge.png",
    ΔⵠⲆⲆⲆᐃΔⵠᐃ: "img/play-store-badge.png",
    ⵠⵠⵠⲆⵠΔⲆⲆⲆ: "img/mobile-boxad.png",
    ᐃΔᐃᐃⲆΔⵠ: "img/modify-name-out.png",
    ΔΔᐃΔⵠⲆⲆ: "img/modify-name-in.png",
    ⵠΔΔⵠΔⵠⲆ: "img/modify-name-click.png",
    ΔΔⵠΔⲆΔᐃ: "img/copy-id-button-out.png",
    ⲆⵠⲆᐃⵠⵠⲆ: "img/copy-id-button-hover.png",
    ⵠΔΔⵠⵠⲆᐃ: "img/copy-id-button-active.png",
    ΔΔⲆⲆΔᐃⵠ: "img/yes-button-out.png",
    ᐃⵠᐃᐃΔᐃⵠ: "img/yes-button-in.png",
    ⵠⵠΔᐃⵠᐃΔ: "img/yes-button-click.png",
    ᐃᐃⲆⵠⲆⲆⲆ: "img/yes-300-button-out.png",
    ⵠⵠΔᐃΔᐃΔ: "img/yes-300-button-in.png",
    ⵠΔⵠᐃᐃⵠΔ: "img/yes-300-button-click.png",
    ᐃⵠⵠΔⵠⵠⵠ: "img/no-button-out.png",
    ⲆᐃⲆⲆⵠᐃᐃ: "img/no-button-in.png",
    ᐃΔⲆᐃⲆᐃΔ: "img/no-button-click.png",
    ᐃⵠᐃⵠⲆⵠⲆ: "img/no-thanks-button-out.png",
    ⲆⲆΔⲆᐃⲆΔ: "img/no-thanks-button-in.png",
    ᐃⵠⵠᐃⵠᐃⵠ: "img/no-thanks-button-click.png",
    ⵠᐃⵠⵠⵠᐃΔ: "img/shop-button-out.png",
    ΔΔᐃⵠᐃΔΔ: "img/shop-button-in.png",
    ⲆΔⵠⵠⵠⵠᐃ: "img/shop-button-click.png",
    ΔΔᐃⵠᐃΔⵠ: "img/logout-out.png",
    ⵠⲆΔΔΔⲆⵠ: "img/logout-in.png",
    ⲆⲆⵠΔⵠΔⲆ: "img/logout-click.png",
    ΔΔΔⵠⵠⲆⵠ: "img/terms-button-out.png",
    ⲆⵠⵠΔΔᐃⲆ: "img/terms-button-in.png",
    ⲆᐃⲆΔΔⵠᐃ: "img/terms-button-click.png",
    ⲆⵠⲆⵠⵠᐃⵠ: "img/tutorial-icon.png",
    ⵠΔⵠⲆᐃΔΔ: "img/skins-icon.png",
    ᐃᐃⲆΔΔᐃᐃ: "img/shop-icon.png",
    ⲆΔⲆⲆΔᐃⲆΔⲆ: "img/paint-icon.png",
    ᐃΔⲆⲆᐃᐃⲆ: "img/leaderboard-icon.png",
    ⲆⵠⲆⵠΔⵠⵠ: "img/start-icon.png",
    ⵠⵠⲆⵠⵠΔᐃ: "img/profile-icon.png",
    ⵠᐃΔⵠΔΔⵠ: "img/server-access-icon2.png",
    ΔᐃⵠⵠⲆΔⲆ: "img/button-homepage-bg-out.png",
    ΔⵠΔΔⲆⵠⵠ: "img/button-homepage-bg-in.png",
    ΔⵠⲆⵠⵠⲆⲆ: "img/button-homepage-bg-click.png",
    ΔᐃᐃᐃΔⵠᐃ: "img/button-bottom-homepage-bg-out.png",
    ᐃⲆⲆⲆᐃᐃΔ: "img/button-bottom-homepage-bg-in.png",
    ⲆΔⵠⲆΔᐃΔ: "img/button-bottom-homepage-bg-click.png",
    ⵠⲆⲆᐃΔΔΔ: "img/lvl-player.png",
    ΔΔⵠⲆᐃΔᐃ: "img/avatar-player.png",
    ⵠΔΔᐃΔᐃⵠ: "img/avatar-player1.png",
    ΔᐃⲆᐃⲆᐃⵠ: "img/avatar-player2.png",
    ΔⲆᐃⵠⲆⲆⵠ: "img/avatar-player3.png",
    ⵠⲆⵠⵠΔⲆᐃ: "img/avatar-player4.png",
    ΔⲆΔΔⵠⵠᐃ: "img/avatar-player5.png",
    ⵠΔΔⵠⵠΔΔ: "img/avatar-player6.png",
    ᐃΔΔᐃΔᐃⵠ: "img/avatar-player7.png",
    ⵠᐃⵠⲆᐃᐃᐃ: "img/avatar-player8.png",
    ⵠⲆⵠⲆⲆⲆⲆ: "img/avatar-player9.png",
    ⲆⲆⵠΔⲆⵠⲆ: "img/avatar-player10.png",
    ⵠΔᐃᐃⵠΔⲆ: "img/avatar-player11.png",
    ΔΔⵠΔΔᐃΔ: "img/avatar-player12.png",
    ᐃᐃΔᐃΔⲆⵠ: "img/avatar-player13.png",
    ΔΔᐃⲆΔΔΔ: "img/avatar-player14.png",
    ΔⲆⵠⵠΔΔΔ: "img/avatar-player14.png",
    ᐃΔΔΔⲆᐃⲆ: "img/avatar-player14.png",
    ᐃⵠΔᐃⲆᐃΔ: "img/avatar-player14.png",
    ΔⲆⲆΔΔΔΔΔⵠ: "img/golden-bread.png",
    ᐃⲆⲆᐃᐃⲆᐃ: "img/buy-bread-out.png",
    ΔⲆᐃⵠⲆⲆⲆ: "img/buy-bread-in.png",
    ΔᐃⵠΔⵠΔⲆ: "img/buy-bread-click.png",
    ᐃⵠⵠⵠᐃⲆᐃ: "img/gauge.png",
    ᐃᐃⵠⵠᐃᐃⲆᐃΔ: "img/season-4-out.png",
    ΔⵠᐃᐃⵠⲆΔΔⲆ: "img/season-4-in.png",
    ⲆΔᐃⵠⲆᐃⲆⲆᐃ: "img/season-4-click.png",
    ᐃⲆⲆΔⵠᐃⵠⵠⵠ: "img/season4-box.png",
    ⵠΔᐃⲆᐃⵠΔΔⵠ: "img/season-5-out.png",
    ⲆΔⲆⲆΔᐃᐃⲆΔ: "img/season-5-in.png",
    ᐃᐃⵠⲆⵠⲆⵠⵠΔ: "img/season-5-click.png",
    ⲆΔᐃⵠⵠⲆΔᐃΔ: "img/season5-box.png",
    ΔΔⲆⲆⲆⲆⲆⲆⲆ: "img/season-6-out.png",
    ᐃⲆᐃΔᐃΔΔΔⵠ: "img/season-6-in.png",
    ᐃᐃⲆⵠⲆⵠᐃⵠᐃ: "img/season-6-click.png",
    ΔⲆⲆⵠᐃΔⵠⵠⵠ: "img/season6-box.png",
    ᐃᐃΔᐃⵠⵠⲆ: "img/season-7-out.png",
    ⲆⲆΔᐃΔⲆⲆ: "img/season-7-in.png",
    ᐃⵠⵠᐃᐃⲆΔ: "img/season-7-click.png",
    ⲆᐃⲆᐃⵠⲆⵠ: "img/season7-box.png",
    ᐃᐃΔⲆⵠⲆΔ: "img/profile3-box.png",
    ΔⲆⲆⵠΔⵠᐃ: "img/skins-box.png",
    ⲆᐃΔΔΔⵠⲆ: "img/shop-box.png",
    ⲆⲆⵠΔΔⲆΔΔᐃ: "img/private-server-box.png",
    ⲆᐃᐃⵠΔⵠᐃ: "img/location-box.png",
    ᐃᐃᐃⲆⵠⵠⲆ: "img/server-duration-box.png",
    ⲆⲆⲆⵠΔΔᐃ: "img/tutorial-box.png",
    ᐃⵠⵠⵠᐃⲆΔ: "img/leaderboard2-box.png",
    ΔⲆᐃᐃᐃⵠΔ: "img/buy-breads-box.png",
    ᐃⲆⵠⲆⵠⵠⲆ: "img/bag-box.png",
    ΔᐃᐃⲆᐃⵠᐃ: "img/deadbox-box.png",
    ᐃⲆⵠΔⵠⵠΔ: "img/book-box.png",
    ΔΔᐃⵠΔΔⲆ: "img/accessories-box.png",
    ⲆΔᐃⲆᐃⵠⲆ: "img/customskin-box.png",
    ⵠⲆⵠⵠⵠⵠⵠ: "img/bag-lasts.png",
    ⲆⵠᐃΔⵠⲆᐃ: "img/server-lasts.png",
    ᐃᐃΔⲆΔᐃᐃ: "img/server-access-box3.png",
    ⲆⲆΔΔⲆⵠⵠ: "img/lootbox-box.png",
    ΔΔΔΔᐃᐃᐃ: "img/change-nickname0.png",
    ⲆⲆΔⲆⲆΔⲆ: "img/change-nickname1.png",
    ⵠⵠⲆⵠΔⲆᐃ: "img/cheating-box.png",
    ΔⲆⲆⲆΔΔΔⲆΔ: "img/daily-quest-box.png",
    ΔⵠᐃⲆⵠⵠᐃⲆⵠ: "img/daily-5-bread.png",
    ⲆΔᐃᐃⵠⲆΔΔΔ: "img/daily-10-bread.png",
    ᐃΔⵠΔⲆᐃΔᐃⲆ: "img/daily-valid.png",
    ⵠᐃΔⵠⵠᐃⲆ: "img/normal-profile-out.png",
    ⵠⲆⲆᐃⵠᐃⲆ: "img/normal-profile-in.png",
    ⵠΔᐃⵠᐃⲆΔ: "img/normal-profile-click.png",
    ⲆⵠᐃⲆΔΔᐃ: "img/forest-profile-out.png",
    ΔᐃᐃΔⲆⵠᐃ: "img/forest-profile-in.png",
    ᐃⲆⲆΔⲆΔΔ: "img/forest-profile-click.png",
    ⲆΔⲆΔᐃΔⲆ: "img/zombie-profile-out.png",
    ⵠᐃⵠᐃᐃᐃⵠ: "img/zombie-profile-in.png",
    ΔⲆⲆⲆⵠⲆⲆ: "img/zombie-profile-click.png",
    ΔΔⵠᐃⲆΔⲆ: "img/vampire-profile-out.png",
    ⲆΔⲆⲆⵠⲆⵠ: "img/vampire-profile-in.png",
    ⲆⲆΔᐃΔⲆᐃ: "img/vampire-profile-click.png",
    ᐃᐃΔΔⲆⵠⵠ: "img/total-profile-out.png",
    ⲆⲆΔⲆᐃᐃⲆ: "img/total-profile-in.png",
    ΔⵠⲆⲆᐃⵠⲆ: "img/total-profile-click.png",
    ⵠΔΔᐃᐃⲆΔ: "img/season1-out.png",
    ΔΔΔⲆΔⵠⵠ: "img/season1-in.png",
    ⵠΔΔΔⵠΔⲆ: "img/season1-click.png",
    ᐃⵠΔⵠΔⵠᐃ: "img/season2-out.png",
    ⵠΔⲆΔΔⵠⲆ: "img/season2-in.png",
    ⵠⵠⵠⵠⲆΔⵠ: "img/season2-click.png",
    ΔⲆⲆΔⲆⲆᐃ: "img/season3-out.png",
    ΔΔᐃΔΔᐃᐃ: "img/season3-in.png",
    ᐃⲆⲆΔⲆⵠⵠ: "img/season3-click.png",
    ᐃⵠⵠᐃⵠⲆΔ: "img/season4-out.png",
    ⲆΔⵠΔΔⵠⲆ: "img/season4-in.png",
    ⵠᐃⵠⲆⲆᐃⲆ: "img/season4-click.png",
    ᐃΔΔΔᐃᐃⲆ: "img/season5-out.png",
    ΔΔⲆΔⵠⲆⲆ: "img/season5-in.png",
    ⲆⲆΔⵠΔᐃᐃ: "img/season5-click.png",
    ΔΔᐃΔᐃⵠⵠ: "img/season6-out.png",
    ᐃΔΔᐃΔᐃᐃ: "img/season6-in.png",
    ΔⵠᐃⵠᐃⲆⵠ: "img/season6-click.png",
    ΔⲆΔⵠᐃⵠᐃ: "img/season7-out.png",
    ⵠⵠΔⲆΔᐃᐃ: "img/season7-in.png",
    ᐃⲆⲆⲆⲆⲆⲆ: "img/season7-click.png",
    ᐃⲆΔΔⵠⲆⲆ: "img/locked-skin-alert.png",
    ⵠⵠⲆᐃⲆΔᐃ: "img/locked-custom-alert.png",
    ⵠΔᐃⵠΔᐃⵠ: "img/bg-red-locked.png",
    ⲆⲆⲆⵠΔᐃⲆ: "img/skin-button-out.png",
    ᐃᐃΔⲆⲆΔⲆ: "img/skin-button-in.png",
    ᐃᐃᐃᐃᐃᐃⵠ: "img/skin-button-click.png",
    ⵠⵠᐃⲆᐃⲆⵠ: "img/accessory-button-out.png",
    ⵠᐃⲆⲆⲆᐃⲆ: "img/accessory-button-in.png",
    ⲆΔⲆΔⵠⲆᐃ: "img/accessory-button-click.png",
    ᐃΔⲆⵠᐃΔᐃ: "img/bag-button-out.png",
    ΔᐃⲆΔᐃᐃⵠ: "img/bag-button-in.png",
    ΔᐃⵠΔⵠⲆⵠ: "img/bag-button-click.png",
    ⵠᐃⲆⲆΔⲆⵠ: "img/book-button-out.png",
    ΔΔⵠΔⲆΔⲆ: "img/book-button-in.png",
    ⵠⲆΔΔᐃⵠΔ: "img/book-button-click.png",
    ᐃⵠⵠΔⵠᐃΔ: "img/deadbox-button-out.png",
    ᐃⲆⲆⵠᐃⵠΔ: "img/deadbox-button-in.png",
    ⵠᐃⲆΔᐃΔᐃ: "img/deadbox-button-click.png",
    ΔᐃΔⲆⵠⲆΔ: "img/loot-button-out.png",
    ⲆⲆΔΔᐃᐃΔ: "img/loot-button-in.png",
    ⲆⲆⲆΔⵠΔⵠ: "img/loot-button-click.png",
    ⵠⲆⵠΔⲆᐃⵠ: "img/free-item-out.png",
    ΔⲆⵠⲆᐃᐃΔ: "img/free-item-in.png",
    ⵠⲆᐃⵠⵠᐃᐃ: "img/free-item-click.png",
    ⲆΔΔⵠ: "img/wood-item-out.png",
    Ⲇⵠᐃᐃ: "img/wood-item-in.png",
    ⵠΔᐃᐃ: "img/wood-item-click.png",
    ΔΔⵠⲆᐃΔΔ: "img/stone-item.png",
    ⲆⲆⲆⲆΔⲆᐃ: "img/stone-item-in.png",
    ᐃᐃⲆⵠⲆⲆⵠ: "img/stone-item-click.png",
    ⵠⲆⲆⵠⵠΔⲆ: "img/gold-item.png",
    ᐃΔⲆᐃⲆⲆᐃ: "img/gold-item-in.png",
    ⲆⲆᐃΔᐃⵠΔ: "img/gold-item-click.png",
    ΔΔⲆΔᐃⵠΔ: "img/diamond-item.png",
    ⲆⵠᐃⵠⲆᐃΔ: "img/diamond-item-in.png",
    ⲆⵠⲆⵠΔⲆⲆ: "img/diamond-item-click.png",
    ⲆΔⲆⵠⵠⵠᐃ: "img/amethyst-item.png",
    ᐃΔᐃⲆΔⲆⵠ: "img/amethyst-item-in.png",
    ⲆᐃΔᐃᐃⲆᐃ: "img/amethyst-item-click.png",
    ΔΔⲆⵠΔⲆⵠ: "img/reidite-item.png",
    ᐃⵠΔⵠⲆⲆⵠ: "img/reidite-item-in.png",
    ᐃΔᐃΔⲆⵠⵠ: "img/reidite-item-click.png",
    ΔⲆΔⲆΔᐃᐃ: "img/special-item-out.png",
    ΔΔⲆΔΔΔᐃ: "img/special-item-in.png",
    ᐃⲆΔΔⲆΔⵠ: "img/special-item-click.png",
    ⵠⲆⲆⲆᐃⲆᐃ: "img/level-item-out.png",
    ΔΔⵠⲆⲆΔⵠ: "img/level-item-in.png",
    ᐃΔⵠΔⲆᐃⵠ: "img/level-item-click.png",
    ΔⲆⲆΔΔᐃΔ: "img/skin-previous-out.png",
    ⵠⲆᐃΔᐃᐃΔ: "img/skin-previous-in.png",
    ᐃᐃⵠⲆΔⲆΔ: "img/skin-previous-click.png",
    ⲆⲆΔΔᐃΔᐃ: "img/skin-next-out.png",
    ⵠΔΔᐃⵠΔⲆ: "img/skin-next-in.png",
    ΔᐃᐃᐃⲆⵠΔ: "img/skin-next-click.png",
    ΔᐃⵠⲆⲆ: "img/back-button-out.png",
    ⲆΔΔⵠᐃ: "img/back-button-in.png",
    ΔⵠⲆᐃΔ: "img/back-button-click.png",
    ᐃΔⵠΔΔⲆⵠ: "img/get-more-button-out.png",
    ⵠΔⲆᐃⵠⲆΔ: "img/get-more-button-in.png",
    ⲆΔⵠⵠⵠΔᐃ: "img/get-more-button-click.png",
    ΔⵠⵠᐃⵠᐃΔ: "img/currency1-out.png",
    ⵠᐃΔΔΔⵠᐃ: "img/currency1-in.png",
    ᐃⵠⲆⵠᐃᐃⵠ: "img/currency1-click.png",
    ᐃΔⵠⲆⵠᐃⲆ: "img/currency2-out.png",
    ᐃⵠΔᐃᐃΔᐃ: "img/currency2-in.png",
    ⵠΔᐃᐃⵠΔᐃ: "img/currency2-click.png",
    ᐃⲆᐃⵠᐃᐃⲆ: "img/currency3-out.png",
    ⲆⲆⲆᐃΔⲆᐃ: "img/currency3-in.png",
    ⲆⲆΔΔΔΔᐃ: "img/currency3-click.png",
    ⲆⲆⵠⵠⵠⲆΔ: "img/currency4-out.png",
    ⵠᐃⵠᐃΔᐃⵠ: "img/currency4-in.png",
    ΔΔΔⲆᐃⲆᐃ: "img/currency4-click.png",
    ⲆⵠⲆⵠⵠΔⲆ: "img/currency5-out.png",
    ⲆⵠⲆΔⵠΔΔ: "img/currency5-in.png",
    ⲆΔⲆᐃⲆⵠΔ: "img/currency5-click.png",
    ⵠᐃΔⲆᐃⲆⵠ: "img/price1-out.png",
    ⲆΔΔⵠⵠⲆᐃ: "img/price1-in.png",
    ᐃⵠⵠΔⵠΔⲆ: "img/price1-click.png",
    ᐃⲆᐃⲆᐃΔΔ: "img/price2-out.png",
    ᐃᐃⵠⵠⵠΔⲆ: "img/price2-in.png",
    ΔⵠᐃⵠⲆΔⵠ: "img/price2-click.png",
    ⵠΔⵠᐃⲆⵠΔ: "img/price3-out.png",
    ⵠΔⵠΔⲆᐃᐃ: "img/price3-in.png",
    ᐃΔᐃⵠᐃΔⲆ: "img/price3-click.png",
    ⲆᐃᐃᐃᐃⲆⲆ: "img/price4-out.png",
    ⲆⵠᐃⵠⵠΔⲆ: "img/price4-in.png",
    ΔⲆⵠΔΔⵠⵠ: "img/price4-click.png",
    ⵠᐃᐃΔⵠᐃΔ: "img/price5-out.png",
    ΔⲆⲆΔⲆΔⵠ: "img/price5-in.png",
    ⲆΔᐃᐃΔᐃⲆ: "img/price5-click.png",
    ΔⲆⲆⲆᐃᐃᐃᐃⵠ: "img/buy-private-server-out.png",
    ⲆⵠΔΔᐃᐃⵠⲆⵠ: "img/buy-private-server-in.png",
    ΔᐃᐃΔⵠⵠⵠΔᐃ: "img/buy-private-server-click.png",
    ⲆⲆⵠᐃΔΔⲆ: "img/atlanta-button-out.png",
    ⲆⲆΔⲆᐃⵠⵠ: "img/atlanta-button-in.png",
    ⵠΔᐃⲆⵠᐃΔ: "img/atlanta-button-click.png",
    ⲆⲆⵠᐃⲆᐃᐃ: "img/los-angeles-button-out.png",
    ᐃΔⵠⲆΔᐃⵠ: "img/los-angeles-button-in.png",
    ΔᐃⲆⵠᐃΔⲆ: "img/los-angeles-button-click.png",
    ⲆⵠⲆΔⲆⲆΔ: "img/sydney-button-out.png",
    ᐃᐃⵠⲆᐃⵠⲆ: "img/sydney-button-in.png",
    ᐃᐃΔᐃⲆΔᐃ: "img/sydney-button-click.png",
    ⲆᐃⵠᐃΔᐃᐃ: "img/frankfurt-button-out.png",
    ᐃᐃᐃᐃⵠᐃᐃ: "img/frankfurt-button-in.png",
    ΔⵠⲆⲆΔⲆΔ: "img/frankfurt-button-click.png",
    ⲆΔΔⵠΔⲆΔ: "img/osaka-button-out.png",
    ΔⵠΔΔⲆⵠΔ: "img/osaka-button-in.png",
    ⵠⲆⵠⵠⲆΔΔ: "img/osaka-button-click.png",
    ᐃⵠⵠⲆⵠⲆΔⵠΔ: "img/yes-location-out.png",
    ᐃΔⲆᐃΔⲆⲆᐃⲆ: "img/yes-location-in.png",
    ΔⲆΔᐃΔⵠⵠⲆᐃ: "img/yes-location-click.png",
    ⲆᐃᐃᐃΔⲆᐃ: "img/3days-button-out.png",
    ⵠΔⲆΔⵠΔᐃ: "img/3days-button-in.png",
    ⲆᐃᐃⲆᐃΔᐃ: "img/3days-button-click.png",
    ⵠⵠⲆⵠⲆⲆⲆ: "img/7days-button-out.png",
    ⲆΔⲆⵠⵠᐃⵠ: "img/7days-button-in.png",
    ⵠⲆᐃΔᐃⵠΔ: "img/7days-button-click.png",
    ⲆᐃΔΔⲆⵠⵠ: "img/30days-button-out.png",
    ⲆᐃⲆᐃⵠⲆΔ: "img/30days-button-in.png",
    ⵠΔⵠΔⵠⲆᐃ: "img/30days-button-click.png",
    ΔⲆⲆΔⵠΔⵠ: "img/90days-button-out.png",
    ⲆΔᐃΔΔⵠΔ: "img/90days-button-in.png",
    ⵠΔΔΔΔᐃᐃ: "img/90days-button-click.png",
    ᐃⲆⲆⲆⲆᐃΔ: "img/spin1.png",
    ⵠⵠⲆⲆⲆΔⵠ: "img/spin2.png",
    ΔΔⵠⵠΔⲆⲆ: "img/spin3.png",
    ΔⲆΔⵠᐃΔᐃ: "img/spin4.png",
    ⲆΔᐃⲆⲆΔⲆ: "img/spin5.png",
    ΔᐃᐃⲆⵠⲆⲆ: "img/spin6.png",
    ⵠⲆⵠᐃⲆⵠΔ: "img/arrow-spin.png",
    ⵠⲆⲆⵠᐃⵠΔ: "img/spin-button-1-out.png",
    ⵠΔⵠΔΔⵠⵠ: "img/spin-button-1-in.png",
    ᐃΔᐃⲆᐃΔⵠ: "img/spin-button-1-click.png",
    ⵠⵠᐃⲆⲆᐃⲆ: "img/spin-button-2-out.png",
    ΔⲆΔⵠΔᐃΔ: "img/spin-button-2-in.png",
    ⵠΔΔᐃᐃΔⵠ: "img/spin-button-2-click.png",
    ⵠᐃⲆⲆᐃⵠᐃ: "img/spin-button-3-out.png",
    ⲆᐃⲆᐃⵠᐃᐃ: "img/spin-button-3-in.png",
    ⲆⵠⲆⵠⲆᐃᐃ: "img/spin-button-3-click.png",
    ⵠᐃⵠⲆⲆⵠΔ: "img/spin-button-4-out.png",
    ⲆΔΔΔΔΔᐃ: "img/spin-button-4-in.png",
    ᐃⲆⵠⲆⵠΔⲆ: "img/spin-button-4-click.png",
    ⲆⵠΔⵠⵠⵠᐃ: "img/spin-button-5-out.png",
    ⵠΔⵠⵠᐃⲆⵠ: "img/spin-button-5-in.png",
    ⵠⵠⲆᐃⵠᐃΔ: "img/spin-button-5-click.png",
    ⵠⲆΔᐃⲆⲆᐃ: "img/spin-light.png",
    ΔΔΔⵠᐃⲆⲆ: "img/tuto-wiki-out.png",
    ᐃⵠΔⵠⲆⲆᐃ: "img/tuto-wiki-in.png",
    ⵠᐃⵠΔⵠⲆⲆ: "img/tuto-wiki-click.png",
    ⵠⵠΔΔᐃΔᐃ: "img/tuto-previous-out.png",
    ⲆΔΔΔⵠⵠⵠ: "img/tuto-previous-in.png",
    ⵠⵠᐃᐃⵠᐃᐃ: "img/tuto-previous-click.png",
    ᐃⲆΔⵠⵠⵠⵠ: "img/tuto-next-out.png",
    ⲆᐃΔΔⲆΔΔ: "img/tuto-next-in.png",
    ⵠⲆⲆΔⲆⲆⵠ: "img/tuto-next-click.png",
    ⵠᐃᐃⲆⲆⲆⵠ: "img/time-leaderboard-out.png",
    ⲆᐃΔⵠⵠΔⵠ: "img/time-leaderboard-in.png",
    ᐃΔⵠⲆⵠⲆΔ: "img/time-leaderboard-click.png",
    ⲆⲆΔⲆᐃⲆᐃ: "img/score-leaderboard-out.png",
    Ⲇᐃⵠᐃᐃⵠⵠ: "img/score-leaderboard-in.png",
    ᐃⲆᐃⵠⵠᐃΔ: "img/score-leaderboard-click.png",
    ΔΔΔᐃⵠⲆⲆ: "img/lvl-leaderboard-out.png",
    ΔΔⵠⵠΔⵠⵠ: "img/lvl-leaderboard-in.png",
    ⲆᐃⵠⲆⲆΔⲆ: "img/lvl-leaderboard-click.png",
    ⵠⲆⵠᐃⲆᐃⵠ: "img/kill-leaderboard-out.png",
    ΔΔΔⵠΔᐃⲆ: "img/kill-leaderboard-in.png",
    ᐃΔΔⲆⲆᐃᐃ: "img/kill-leaderboard-click.png",
    ᐃΔⲆⵠⲆᐃᐃ: "img/all-leaderboard-out.png",
    ⲆⲆⲆΔᐃΔᐃ: "img/all-leaderboard-in.png",
    ΔΔΔΔᐃᐃⲆ: "img/all-leaderboard-click.png",
    ⵠᐃⵠⵠⵠⲆⲆ: "img/today-leaderboard-out.png",
    ᐃᐃⵠⵠⵠΔⵠ: "img/today-leaderboard-in.png",
    ΔⲆⲆᐃⲆⵠΔ: "img/today-leaderboard-click.png",
    ᐃᐃᐃᐃᐃΔᐃ: "img/week-leaderboard-out.png",
    ⵠⲆΔⵠⵠᐃⵠ: "img/week-leaderboard-in.png",
    ᐃΔⲆᐃᐃᐃⵠ: "img/week-leaderboard-click.png",
    ᐃᐃⲆⲆⲆᐃⲆ: "img/season1-out.png",
    ⵠⲆⲆⲆᐃΔⵠ: "img/season1-in.png",
    ⵠⲆⲆᐃᐃΔⵠ: "img/season1-click.png",
    ⲆΔⵠΔⲆⲆⲆ: "img/season2-out.png",
    ⲆⵠΔΔΔⵠⵠ: "img/season2-in.png",
    ⵠᐃΔⲆⵠᐃᐃ: "img/season2-click.png",
    ΔΔᐃᐃⲆΔᐃ: "img/season3-out.png",
    ΔΔᐃⲆⵠⲆΔ: "img/season3-in.png",
    ⲆᐃⵠᐃᐃᐃΔ: "img/season3-click.png",
    ⲆΔΔⲆⲆΔΔ: "img/season4-out.png",
    ΔⵠⵠⲆⵠΔᐃ: "img/season4-in.png",
    ⲆᐃⲆⵠⲆⵠⲆ: "img/season4-click.png",
    ᐃΔⵠᐃⵠΔⵠ: "img/season5-out.png",
    ᐃⲆᐃⲆⵠⲆΔ: "img/season5-in.png",
    ⵠⲆⵠⲆᐃⵠΔ: "img/season5-click.png",
    ⲆⲆⲆⵠΔᐃΔ: "img/season6-out.png",
    ΔⵠⵠΔΔⵠⵠ: "img/season6-in.png",
    ᐃⲆⵠΔⲆΔⲆ: "img/season6-click.png",
    ⵠΔΔⵠᐃⵠΔ: "img/season7-out.png",
    ⲆᐃⵠΔΔⵠᐃ: "img/season7-in.png",
    ⵠⵠⲆΔΔⵠΔ: "img/season7-click.png",
    ᐃⲆⵠⵠⵠΔⵠ: "img/total-lead-out.png",
    ᐃᐃΔⵠΔΔⲆ: "img/total-lead-in.png",
    ΔⲆⵠΔᐃⵠⵠ: "img/total-lead-click.png",
    ΔⵠΔΔᐃΔᐃ: "img/normal-lead-out.png",
    ΔⵠⲆⵠᐃᐃⵠ: "img/normal-lead-in.png",
    ⲆⲆⵠⵠΔᐃΔ: "img/normal-lead-click.png",
    ⵠⲆⲆΔΔⲆΔ: "img/forest-lead-out.png",
    ⲆᐃⲆΔᐃⲆⵠ: "img/forest-lead-in.png",
    ⲆⵠᐃⵠⲆΔⵠ: "img/forest-lead-click.png",
    ΔΔⵠΔΔΔᐃ: "img/vampire-lead-out.png",
    ΔⲆᐃΔΔⵠⲆ: "img/vampire-lead-in.png",
    ΔᐃΔᐃⵠⵠⵠ: "img/vampire-lead-click.png",
    ⲆⲆⲆⲆⲆⵠᐃ: "img/zombie-lead-out.png",
    ΔⲆⲆᐃⲆᐃΔ: "img/zombie-lead-in.png",
    ⵠⵠⲆⵠⲆΔΔ: "img/zombie-lead-click.png",
    ᐃᐃⵠΔᐃⵠⲆ: "img/day-level5.png",
    ΔΔᐃⲆⲆⲆᐃ: "img/night-level5.png",
    ΔᐃⲆⲆⲆΔᐃ: "img/day-level10.png",
    ΔΔⲆᐃΔΔⲆ: "img/night-level10.png",
    ᐃᐃΔᐃⵠⲆⵠ: "img/day-level15.png",
    ⲆⵠⲆΔⲆⵠΔ: "img/night-level15.png",
    ⲆⵠⲆΔⲆᐃᐃ: "img/day-level20.png",
    ΔᐃΔᐃᐃᐃⲆ: "img/night-level20.png",
    ΔⵠⵠⲆⵠⵠᐃ: "img/day-level25.png",
    ⵠⲆΔᐃᐃᐃᐃ: "img/night-level25.png",
    ᐃᐃᐃⵠΔⵠⲆ: "img/day-level30.png",
    Ⲇⵠᐃⵠᐃᐃⵠ: "img/night-level30.png",
    ᐃᐃⵠⲆⲆᐃᐃ: "img/day-level35.png",
    ⵠΔᐃⲆᐃΔⵠ: "img/night-level35.png",
    ⲆⲆΔⲆⵠⲆᐃ: "img/day-level40.png",
    ⲆᐃⲆⲆⲆⲆⲆ: "img/night-level40.png",
    ΔⲆᐃⲆⲆΔᐃ: "img/day-level45.png",
    ⵠⵠⲆΔᐃⵠⲆ: "img/night-level45.png",
    ᐃᐃᐃⵠⲆΔᐃ: "img/day-level50.png",
    ΔΔⵠΔΔΔΔ: "img/night-level50.png",
    ⵠᐃⲆΔΔⲆⵠ: "img/day-level55.png",
    ⲆⵠΔⲆᐃⲆΔ: "img/night-level55.png",
    ᐃⲆΔⵠⲆⲆⲆ: "img/day-level60.png",
    ⵠᐃΔⵠᐃⲆⵠ: "img/night-level60.png",
    ⵠⲆⵠᐃⵠΔΔ: "img/day-skin-devast0.png",
    ⲆⲆᐃΔⲆΔⲆ: "img/night-skin-devast0.png",
    ΔᐃⲆⵠⵠΔΔ: "img/day-hand-devaster.png",
    ΔΔᐃⵠⵠⲆᐃ: "img/night-hand-devaster.png",
    ΔⲆᐃⵠⵠΔΔ: "img/day-skin-star0.png",
    ⲆᐃⵠᐃⵠΔⲆ: "img/night-skin-star0.png",
    ⵠⵠΔᐃΔᐃᐃ: "img/day-hand-star0.png",
    ⲆⵠΔᐃⵠⵠⲆ: "img/night-hand-star0.png",
    ΔΔⵠⲆⵠᐃΔ: "img/day-vampire.png",
    ΔΔΔⲆᐃⲆⲆ: "img/night-vampire.png",
    ⲆⵠⲆⵠⲆⲆⵠ: "img/day-hand-vampire.png",
    ⲆΔΔΔΔⵠΔ: "img/night-hand-vampire.png",
    ⲆⵠᐃⵠⵠⲆΔ: "img/day-zombie.png",
    ⵠᐃⵠᐃᐃΔⲆ: "img/night-zombie.png",
    ⲆⵠΔⵠⲆⵠΔ: "img/day-hand-zombie.png",
    ΔᐃᐃⵠΔⵠᐃ: "img/night-hand-zombie.png",
    ΔΔⵠⵠⲆⵠᐃ: "img/day-skin113.png",
    ΔᐃᐃΔΔⲆᐃ: "img/night-skin113.png",
    ΔⲆⲆⲆΔⲆⲆ: "img/day-hand-skin113.png",
    ⲆⵠΔⲆΔⵠⵠ: "img/night-hand-skin113.png",
    ⲆᐃⲆⵠⵠⵠⲆ: "img/day-skin0.png",
    ⵠⵠΔⵠᐃΔᐃ: "img/night-skin0.png",
    ⵠΔⲆΔᐃᐃᐃ: "img/day-skin1.png",
    ΔΔΔⲆⵠΔⲆ: "img/night-skin1.png",
    ΔⵠᐃΔᐃⲆΔ: "img/day-skin2.png",
    ⵠⵠⲆⲆⵠⲆᐃ: "img/night-skin2.png",
    ᐃᐃⲆᐃΔⵠⲆ: "img/day-skin3.png",
    ⲆⲆΔⲆⲆⲆⵠ: "img/night-skin3.png",
    ⲆⲆⵠΔᐃᐃΔ: "img/day-skin4.png",
    ΔΔᐃᐃⲆᐃΔ: "img/night-skin4.png",
    ᐃⵠⲆᐃⲆᐃⵠ: "img/day-skin5.png",
    ᐃΔΔᐃᐃΔΔ: "img/night-skin5.png",
    ⲆΔⵠⵠⲆⵠⲆ: "img/day-skin6.png",
    ⵠΔΔⵠᐃⵠᐃ: "img/night-skin6.png",
    ΔᐃⵠⲆᐃⲆⵠ: "img/day-skin7.png",
    ΔⲆΔⲆᐃⲆΔ: "img/night-skin7.png",
    ⵠᐃᐃⲆⲆⲆᐃ: "img/day-skin8.png",
    ⲆᐃⵠᐃⵠᐃⲆ: "img/night-skin8.png",
    ᐃᐃᐃΔⵠᐃⵠ: "img/day-skin9.png",
    ⵠΔΔᐃⲆᐃΔ: "img/night-skin9.png",
    ᐃᐃⵠⲆᐃΔⲆ: "img/day-skin10.png",
    ⲆᐃⵠⲆΔᐃⵠ: "img/night-skin10.png",
    ⵠⲆⵠⲆⲆΔΔ: "img/day-skin11.png",
    ᐃᐃᐃⲆⵠⲆⵠ: "img/night-skin11.png",
    ⲆᐃⵠᐃᐃⲆᐃ: "img/day-skin12.png",
    ⲆⵠΔⲆⵠⵠΔ: "img/night-skin12.png",
    ΔⵠᐃⲆⵠⲆΔ: "img/day-skin13.png",
    ⵠⵠⵠᐃΔⵠΔ: "img/night-skin13.png",
    ⲆᐃΔᐃᐃᐃⲆ: "img/day-skin14.png",
    ⲆⵠⲆᐃᐃᐃᐃ: "img/night-skin14.png",
    ᐃᐃⲆⲆⵠⲆⲆ: "img/day-skin15.png",
    ⵠⵠᐃΔΔᐃΔ: "img/night-skin15.png",
    ⲆᐃⲆⵠⵠⲆⲆ: "img/day-skin16.png",
    ⵠⵠΔⲆⲆΔΔ: "img/night-skin16.png",
    ⲆᐃⵠᐃⲆⵠΔ: "img/day-skin17.png",
    ΔᐃⵠⵠᐃⲆⲆ: "img/night-skin17.png",
    ΔⲆⲆᐃⵠᐃⵠ: "img/day-skin18.png",
    ⲆᐃΔⵠΔⲆⵠ: "img/night-skin18.png",
    ΔⲆᐃᐃⵠΔΔ: "img/day-skin19.png",
    ⲆⲆΔⵠᐃᐃΔ: "img/night-skin19.png",
    ΔⲆⵠᐃⲆΔⵠ: "img/day-skin20.png",
    ⵠⵠΔΔΔⵠᐃ: "img/night-skin20.png",
    ᐃΔⵠᐃΔΔⵠ: "img/day-skin21.png",
    ⵠΔᐃΔⲆΔⵠ: "img/night-skin21.png",
    ΔᐃᐃᐃΔΔΔ: "img/day-skin22.png",
    ᐃᐃᐃⵠΔΔⵠ: "img/night-skin22.png",
    ⲆᐃᐃⲆΔⲆⲆ: "img/day-skin23.png",
    ⲆᐃΔⵠⵠⲆΔ: "img/night-skin23.png",
    ⵠΔᐃᐃᐃᐃᐃ: "img/day-skin24.png",
    ΔΔⵠⵠᐃᐃᐃ: "img/night-skin24.png",
    ΔᐃⵠᐃⵠⵠΔ: "img/day-skin25.png",
    ΔⲆΔᐃΔⲆᐃ: "img/night-skin25.png",
    ᐃⲆⵠⵠΔΔΔ: "img/day-skin26.png",
    ⲆᐃⲆᐃΔᐃΔ: "img/night-skin26.png",
    ΔΔᐃⲆΔΔⵠ: "img/day-skin27.png",
    ⵠΔⲆⵠⲆⵠⵠ: "img/night-skin27.png",
    ᐃΔΔᐃΔΔⲆ: "img/day-skin28.png",
    ⲆΔΔⵠⵠⲆⵠ: "img/night-skin28.png",
    ᐃⲆᐃⲆΔⲆᐃ: "img/day-skin29.png",
    ΔΔⵠᐃⲆⵠⵠ: "img/night-skin29.png",
    ΔⲆⵠᐃΔΔᐃ: "img/day-skin30.png",
    ⲆΔᐃᐃᐃᐃΔ: "img/night-skin30.png",
    Ⲇᐃᐃⵠⵠⵠᐃ: "img/day-skin31.png",
    ⵠⵠⲆⵠᐃΔΔ: "img/night-skin31.png",
    ᐃΔⲆⲆΔΔΔ: "img/day-skin32.png",
    ⵠⵠⲆⲆⵠⵠⵠ: "img/night-skin32.png",
    ᐃⵠⲆⲆᐃᐃⵠ: "img/day-skin33.png",
    ᐃΔⵠⵠⵠᐃΔ: "img/night-skin33.png",
    ⵠⲆⵠⲆΔᐃᐃ: "img/day-skin34.png",
    ΔⵠⵠΔⲆⵠΔ: "img/night-skin34.png",
    ΔᐃΔⵠᐃⲆᐃ: "img/day-skin35.png",
    ⲆⲆⲆΔⲆᐃᐃ: "img/night-skin35.png",
    ΔΔⲆⵠΔⵠΔ: "img/day-skin36.png",
    ⲆⵠΔᐃⲆᐃΔ: "img/night-skin36.png",
    ΔⵠⲆⵠⲆⵠᐃ: "img/day-skin37.png",
    ⲆⲆΔⵠⵠⵠⵠ: "img/night-skin37.png",
    ⲆⵠⲆᐃᐃΔᐃ: "img/day-skin38.png",
    ᐃⲆΔᐃⵠᐃⲆ: "img/night-skin38.png",
    ⵠᐃⵠⲆⲆⲆⲆ: "img/day-skin39.png",
    ᐃⵠΔⵠⲆᐃⵠ: "img/night-skin39.png",
    ΔⵠⲆⲆⵠΔᐃ: "img/day-skin40.png",
    ⲆⵠⵠᐃⵠⵠΔ: "img/night-skin40.png",
    ΔᐃΔᐃᐃᐃΔ: "img/day-skin41.png",
    ΔΔΔⲆⲆΔᐃ: "img/night-skin41.png",
    ΔᐃⲆᐃᐃⲆᐃ: "img/day-skin42.png",
    ⵠⵠⲆⲆᐃᐃΔ: "img/night-skin42.png",
    ⲆᐃⲆⵠΔᐃⲆ: "img/day-skin43.png",
    ⲆⲆⵠᐃⵠⵠⲆ: "img/night-skin43.png",
    ΔⲆⵠⲆΔᐃⲆ: "img/day-skin44.png",
    ⲆⵠᐃᐃⲆⲆΔ: "img/night-skin44.png",
    ᐃⲆⵠᐃⲆⲆⲆ: "img/day-skin45.png",
    ⵠΔΔᐃᐃᐃⵠ: "img/night-skin45.png",
    ᐃⵠᐃᐃⲆⵠΔ: "img/day-skin46.png",
    ᐃΔⵠΔᐃⲆΔ: "img/night-skin46.png",
    ⲆⲆΔⲆⵠᐃⲆ: "img/day-skin47.png",
    ⲆΔⵠΔⵠⵠⲆ: "img/night-skin47.png",
    ᐃᐃⲆⲆΔΔⲆ: "img/day-skin48.png",
    ⵠⵠᐃⲆⲆΔⵠ: "img/night-skin48.png",
    ΔⲆⲆᐃΔᐃⵠ: "img/day-skin49.png",
    ΔⲆΔᐃⲆΔᐃ: "img/night-skin49.png",
    ⵠΔⲆᐃΔⵠⲆ: "img/day-skin50.png",
    ᐃⵠᐃⵠⲆΔⲆ: "img/night-skin50.png",
    ᐃⵠΔⵠΔⲆΔ: "img/day-skin51.png",
    ⵠΔⵠᐃⲆΔᐃ: "img/night-skin51.png",
    ⵠⵠⵠⲆⲆΔⵠ: "img/day-skin52.png",
    ᐃᐃᐃᐃⵠⲆⵠ: "img/night-skin52.png",
    ⲆΔⵠⲆᐃⵠⵠ: "img/day-skin53.png",
    ΔⵠⲆⵠΔΔᐃ: "img/night-skin53.png",
    ⵠⲆΔΔᐃΔᐃ: "img/day-skin54.png",
    ⲆⲆΔⵠⵠⲆᐃ: "img/night-skin54.png",
    ᐃⲆⲆⲆΔΔᐃ: "img/day-skin55.png",
    ΔΔΔⲆⲆΔΔ: "img/night-skin55.png",
    ⲆⵠᐃⲆΔⲆⲆ: "img/day-skin56.png",
    ᐃⵠᐃⲆⲆⲆⲆ: "img/night-skin56.png",
    ᐃᐃᐃⲆᐃΔⲆ: "img/day-skin57.png",
    ⲆᐃⲆᐃⲆⲆΔ: "img/night-skin57.png",
    ΔᐃⵠⲆⲆᐃΔ: "img/day-skin58.png",
    ᐃⵠⵠⲆⵠᐃⲆ: "img/night-skin58.png",
    ᐃⲆΔΔᐃⵠΔ: "img/day-skin59.png",
    ᐃⲆΔⵠⲆᐃΔ: "img/night-skin59.png",
    ᐃⵠΔⵠⵠⲆᐃ: "img/day-skin60.png",
    ⲆⲆᐃⲆᐃⵠΔ: "img/night-skin60.png",
    ᐃⲆᐃⵠΔⲆᐃ: "img/day-skin61.png",
    ⵠⵠᐃⵠⲆⵠΔ: "img/night-skin61.png",
    ⲆⲆⵠᐃᐃⲆⲆ: "img/day-skin62.png",
    ⲆΔⲆⵠΔΔᐃ: "img/night-skin62.png",
    ᐃⲆᐃⲆΔⵠᐃ: "img/day-skin63.png",
    ΔⵠᐃⵠⵠΔΔ: "img/night-skin63.png",
    ⲆᐃⲆᐃΔΔᐃ: "img/day-skin64.png",
    ᐃⵠΔⵠⵠⵠΔ: "img/night-skin64.png",
    ⲆⵠⲆⵠΔΔⵠ: "img/day-skin65.png",
    ᐃᐃᐃⵠⲆᐃⲆ: "img/night-skin65.png",
    ⵠⵠΔⲆⲆᐃⵠ: "img/day-skin66.png",
    ᐃⲆⵠⲆⲆⵠᐃ: "img/night-skin66.png",
    ⵠⲆⲆⵠⲆᐃⵠ: "img/day-skin67.png",
    ᐃΔΔᐃⲆΔᐃ: "img/night-skin67.png",
    ᐃⵠᐃⵠΔᐃᐃ: "img/day-skin68.png",
    ᐃᐃⵠⲆⵠᐃᐃ: "img/night-skin68.png",
    ⵠΔⲆⲆⲆⲆᐃ: "img/day-skin69.png",
    ⲆⲆⲆᐃⲆⲆᐃ: "img/night-skin69.png",
    ⲆᐃⵠⵠᐃΔⵠ: "img/day-skin70.png",
    ⵠⲆΔⲆᐃⵠᐃ: "img/night-skin70.png",
    ⲆΔᐃᐃᐃⵠⵠ: "img/day-skin71.png",
    ⲆᐃⵠⲆⵠⲆⲆ: "img/night-skin71.png",
    ᐃᐃⲆⲆⵠΔΔ: "img/day-skin72.png",
    ΔⲆⵠΔⲆΔΔ: "img/night-skin72.png",
    ᐃᐃⲆᐃⲆⵠⵠ: "img/day-skin73.png",
    ᐃⲆⲆΔⲆⵠΔ: "img/night-skin73.png",
    ΔᐃⲆⲆΔⵠⲆ: "img/day-skin74.png",
    ΔⲆΔΔᐃᐃΔ: "img/night-skin74.png",
    ⵠⵠΔⵠΔΔⲆ: "img/day-skin75.png",
    ⲆΔⵠᐃᐃᐃⲆ: "img/night-skin75.png",
    ᐃᐃⲆⵠⲆΔᐃ: "img/day-skin76.png",
    ⵠⵠΔΔⲆⵠᐃ: "img/night-skin76.png",
    ΔΔⵠⵠⵠᐃΔ: "img/day-skin77.png",
    ᐃⵠⵠᐃⵠⵠⲆ: "img/night-skin77.png",
    ᐃⵠⲆⲆᐃΔⵠ: "img/day-skin78.png",
    ⵠⲆΔΔᐃⵠⲆ: "img/night-skin78.png",
    ⵠⵠⲆᐃⵠᐃⵠ: "img/day-skin79.png",
    ᐃᐃⲆᐃⵠᐃⲆ: "img/night-skin79.png",
    ⵠᐃⲆᐃᐃΔⲆ: "img/day-skin80.png",
    ⲆΔⲆᐃⲆⵠⵠ: "img/night-skin80.png",
    ⲆⵠᐃᐃΔᐃⵠ: "img/day-skin81.png",
    ΔᐃⵠⲆΔᐃᐃ: "img/night-skin81.png",
    ᐃᐃΔⲆΔⵠⲆ: "img/day-skin82.png",
    ΔΔΔⲆᐃΔᐃ: "img/night-skin82.png",
    ΔΔⵠᐃΔΔᐃ: "img/day-skin83.png",
    ΔⵠⵠᐃⵠΔⵠ: "img/night-skin83.png",
    ⵠⲆᐃΔⲆⲆⲆ: "img/day-skin84.png",
    ⵠΔⲆⵠⵠᐃΔ: "img/night-skin84.png",
    ⲆⲆⵠⵠΔⲆᐃ: "img/day-skin85.png",
    ⲆⲆᐃⲆᐃⵠⲆ: "img/night-skin85.png",
    ΔⲆᐃⵠⲆᐃΔ: "img/day-skin86.png",
    ⵠΔⲆⵠⵠᐃᐃ: "img/night-skin86.png",
    ⲆΔⲆⲆΔⲆⵠ: "img/day-skin87.png",
    ᐃᐃΔⵠΔⵠⵠ: "img/night-skin87.png",
    ΔΔⵠᐃⵠⵠⲆ: "img/day-skin88.png",
    ⲆΔᐃΔⵠΔΔ: "img/night-skin88.png",
    ⵠΔⲆΔᐃⵠⲆ: "img/day-skin89.png",
    ΔΔΔⵠᐃⲆⵠ: "img/night-skin89.png",
    ⵠΔΔⵠⲆⵠⲆ: "img/day-skin90.png",
    ⲆⵠᐃⵠᐃΔᐃ: "img/night-skin90.png",
    ⲆⵠⲆⵠΔΔΔ: "img/day-skin91.png",
    ⲆⵠⵠⵠⵠⲆⲆ: "img/night-skin91.png",
    ⵠⵠΔᐃΔⵠⵠ: "img/day-skin92.png",
    ΔⵠⲆΔᐃⵠΔ: "img/night-skin92.png",
    ⲆᐃΔΔᐃᐃⲆ: "img/day-skin93.png",
    ΔᐃⵠⲆᐃᐃΔ: "img/night-skin93.png",
    ΔⵠⲆᐃⲆΔⵠ: "img/day-skin94.png",
    ⲆΔⲆⵠᐃⲆΔ: "img/night-skin94.png",
    ΔⲆΔⲆΔΔᐃ: "img/day-skin95.png",
    ⵠΔⵠᐃⲆⲆⲆ: "img/night-skin95.png",
    ΔⲆⵠΔⲆᐃⵠ: "img/day-skin96.png",
    ⲆΔΔᐃⲆΔⵠ: "img/night-skin96.png",
    ΔⲆΔᐃⵠᐃᐃ: "img/day-skin97.png",
    ⲆᐃΔᐃΔⲆⲆ: "img/night-skin97.png",
    ⵠⵠⵠᐃΔᐃⲆ: "img/day-skin98.png",
    ⲆᐃⲆⵠᐃᐃᐃ: "img/night-skin98.png",
    ⵠᐃⵠΔΔⵠⲆ: "img/day-skin99.png",
    ⵠⲆΔⵠⲆΔᐃ: "img/night-skin99.png",
    ΔⵠⵠΔΔⲆⵠ: "img/day-skin100.png",
    ΔᐃᐃⲆᐃⵠⵠ: "img/night-skin100.png",
    ᐃᐃⲆΔΔΔⵠ: "img/day-skin101.png",
    ᐃⵠⲆΔᐃⵠΔ: "img/night-skin101.png",
    ⵠⲆⵠⵠⵠᐃⵠ: "img/day-skin102.png",
    ⲆⲆⵠⵠᐃⵠΔ: "img/night-skin102.png",
    ⲆᐃⲆᐃⲆⵠΔ: "img/day-skin103.png",
    ⲆΔⵠⲆᐃΔΔ: "img/night-skin103.png",
    ΔⵠᐃΔᐃⵠᐃ: "img/day-skin104.png",
    ΔⲆⲆⲆᐃΔⵠ: "img/night-skin104.png",
    ⲆⲆⲆᐃΔΔⵠ: "img/day-skin105.png",
    ᐃΔⲆⲆⵠⲆⲆ: "img/night-skin105.png",
    ᐃΔⲆⵠⵠΔⲆ: "img/day-skin106.png",
    ⲆᐃⵠⲆⵠⲆΔ: "img/night-skin106.png",
    ⵠΔⵠⲆᐃⵠⲆ: "img/day-skin107.png",
    ΔⵠⲆⲆⲆΔⵠ: "img/night-skin107.png",
    ΔΔΔᐃⲆᐃΔ: "img/day-skin108.png",
    ΔᐃⲆΔⵠᐃΔ: "img/night-skin108.png",
    ΔⵠⵠᐃⲆⲆΔ: "img/day-skin109.png",
    ᐃᐃⲆⲆᐃΔΔ: "img/night-skin109.png",
    ΔᐃⵠⵠⵠⵠΔ: "img/day-skin110.png",
    ⲆⵠᐃᐃΔⲆⲆ: "img/night-skin110.png",
    ⲆᐃᐃⲆᐃⵠᐃ: "img/day-skin111.png",
    ⵠⵠΔΔⵠⵠᐃ: "img/night-skin111.png",
    ⵠⲆᐃᐃⲆΔⵠ: "img/day-skin112.png",
    ⲆⲆΔⵠⲆⲆⲆ: "img/night-skin112.png",
    ⲆΔᐃΔⲆⵠⵠᐃΔ: "img/day-skin113.png",
    ᐃⵠⲆᐃΔᐃΔⲆᐃ: "img/night-skin113.png",
    ⵠΔⲆΔⲆⲆⲆ: "img/day-skin114.png",
    ΔⲆᐃΔΔⲆⵠ: "img/night-skin114.png",
    ΔⲆᐃⲆΔⵠᐃ: "img/day-skin115.png",
    ᐃⵠⵠΔᐃⲆᐃ: "img/night-skin115.png",
    ⵠᐃΔⵠᐃΔⵠ: "img/day-skin116.png",
    ⲆⵠΔⲆΔⵠΔ: "img/night-skin116.png",
    ᐃⲆᐃⲆⲆᐃᐃ: "img/day-skin117.png",
    ⲆΔᐃⵠⲆⲆᐃ: "img/night-skin117.png",
    ᐃΔⵠⵠⵠⲆⵠ: "img/day-skin118.png",
    ᐃᐃᐃⲆⲆΔΔ: "img/night-skin118.png",
    ΔᐃⲆⵠⵠⲆᐃ: "img/day-skin119.png",
    ΔΔⲆⵠᐃᐃΔ: "img/night-skin119.png",
    ⲆᐃⵠⲆΔⵠⲆ: "img/day-skin120.png",
    ⵠⵠⲆᐃⵠⲆᐃ: "img/night-skin120.png",
    ᐃᐃΔⵠⵠⵠⵠ: "img/day-skin121.png",
    ⵠᐃΔᐃⲆΔᐃ: "img/night-skin121.png",
    ⵠⲆᐃΔⵠᐃⲆ: "img/day-skin122.png",
    ΔΔΔᐃⲆⵠⲆ: "img/night-skin122.png",
    ⵠΔᐃΔᐃⵠΔ: "img/day-skin123.png",
    ᐃΔΔⵠⵠⲆΔ: "img/night-skin123.png",
    ᐃᐃᐃᐃⵠᐃⵠ: "img/day-skin124.png",
    ⲆⵠⲆⲆⵠⲆΔ: "img/night-skin124.png",
    ⵠΔⵠⵠᐃΔⲆ: "img/day-skin125.png",
    ᐃΔⵠⵠⲆⵠΔ: "img/night-skin125.png",
    ΔΔΔⲆⲆΔⲆ: "img/day-skin126.png",
    ⲆΔᐃⲆⲆⵠⵠ: "img/night-skin126.png",
    ᐃⲆⲆⵠᐃᐃⲆ: "img/day-skin127.png",
    ⲆᐃⵠⲆⲆⵠᐃ: "img/night-skin127.png",
    ⵠⲆⵠᐃᐃⵠΔ: "img/day-skin128.png",
    ᐃΔΔᐃᐃᐃΔ: "img/night-skin128.png",
    ⲆΔⲆⵠΔⵠⲆ: "img/day-skin129.png",
    ᐃⵠᐃⵠᐃΔⲆ: "img/night-skin129.png",
    ⲆⲆⵠΔΔᐃⲆ: "img/day-skin130-1.png",
    ΔᐃΔᐃⲆⵠΔ: "img/night-skin130-1.png",
    ᐃΔⲆⵠᐃⲆΔ: "img/day-skin131.png",
    ⵠᐃΔⵠΔΔΔ: "img/night-skin131.png",
    ΔⵠⵠⵠⲆΔΔ: "img/day-skin132.png",
    ⲆⵠⵠⵠⲆⵠⲆ: "img/night-skin132.png",
    ⲆΔⲆⵠΔᐃΔ: "img/day-skin133.png",
    ᐃᐃⵠᐃᐃⵠΔ: "img/night-skin133.png",
    ⵠᐃΔⲆΔⵠΔ: "img/day-skin134.png",
    ⵠⵠⵠΔΔⵠΔ: "img/night-skin134.png",
    ⵠᐃⵠⵠΔⲆⵠ: "img/day-skin135.png",
    ᐃΔᐃⲆⲆᐃΔ: "img/night-skin135.png",
    ⵠᐃⲆΔⵠᐃⵠ: "img/day-skin136.png",
    ᐃⵠΔⲆΔⵠΔ: "img/night-skin136.png",
    ⵠᐃΔⲆⲆⵠⵠ: "img/day-skin137.png",
    ΔΔⵠᐃΔⲆⵠ: "img/night-skin137.png",
    ⲆⲆⵠⲆⲆΔᐃ: "img/day-skin138.png",
    ⲆⲆⵠⲆᐃⲆΔ: "img/night-skin138.png",
    ᐃⲆΔΔⲆᐃⵠ: "img/day-skin139.png",
    ΔⵠΔᐃΔⲆᐃ: "img/night-skin139.png",
    ᐃⲆⵠΔⲆᐃⲆ: "img/day-skin140.png",
    ΔⲆⲆⵠΔΔᐃ: "img/night-skin140.png",
    ⵠΔᐃΔᐃᐃⵠ: "img/day-skin141.png",
    ΔΔᐃⵠᐃⵠᐃ: "img/night-skin141.png",
    ⲆⵠⲆΔᐃⵠⲆ: "img/day-skin142.png",
    ⲆⵠⲆⵠᐃⲆⵠ: "img/night-skin142.png",
    ᐃΔⵠⲆⵠᐃᐃ: "img/day-skin143.png",
    ᐃⵠⲆΔⵠⵠⵠ: "img/night-skin143.png",
    ΔⵠᐃⵠᐃⲆᐃ: "img/day-skin144.png",
    ΔᐃΔᐃΔᐃᐃ: "img/night-skin144.png",
    ΔᐃᐃⲆⲆⵠΔ: "img/day-skin145.png",
    ΔⲆᐃᐃⲆⲆⵠ: "img/night-skin145.png",
    ⲆΔᐃᐃᐃⲆᐃ: "img/day-skin146.png",
    ΔⲆᐃⲆΔΔᐃ: "img/night-skin146.png",
    ᐃⵠⲆⵠⵠΔΔ: "img/day-skin147.png",
    Δⵠⵠᐃᐃᐃⵠ: "img/night-skin147.png",
    ⲆⲆᐃᐃᐃΔⲆ: "img/day-skin148.png",
    ⲆᐃⵠᐃⲆᐃΔ: "img/night-skin148.png",
    ⲆⵠΔᐃⵠⵠΔ: "img/day-skin149.png",
    ⵠΔᐃⵠⲆⲆΔ: "img/night-skin149.png",
    ⲆⲆᐃᐃⵠᐃᐃ: "img/day-skin150.png",
    ᐃᐃⵠⵠΔᐃⵠ: "img/night-skin150.png",
    ⵠΔⵠΔⲆⵠⲆ: "img/day-skin151.png",
    ⵠⲆⵠΔᐃΔⲆ: "img/night-skin151.png",
    ΔⲆᐃᐃΔⵠΔ: "img/day-skin152.png",
    ΔⲆⲆΔⲆᐃⲆ: "img/night-skin152.png",
    ⵠᐃᐃΔⲆⲆⵠ: "img/day-skin153.png",
    ᐃⲆⵠⵠⵠΔΔ: "img/night-skin153.png",
    ΔⵠᐃᐃⲆⲆⲆ: "img/day-skin154.png",
    ⵠΔΔΔᐃΔΔ: "img/night-skin154.png",
    ⵠⲆⲆΔⲆⲆᐃ: "img/day-skin155.png",
    ᐃᐃⵠⵠⵠⲆⵠ: "img/night-skin155.png",
    ⵠΔⲆⲆⵠΔΔ: "img/day-skin156.png",
    ΔΔⵠᐃⵠᐃᐃ: "img/night-skin156.png",
    ⲆⵠⲆᐃΔⵠⲆ: "img/day-skin157.png",
    ⲆΔᐃⲆⲆᐃⲆ: "img/night-skin157.png",
    ΔⲆΔⵠⵠΔΔ: "img/day-skin158.png",
    ⲆᐃΔⵠⲆⲆⲆ: "img/night-skin158.png",
    ΔᐃⵠΔᐃᐃⵠ: "img/day-skin159.png",
    ⲆⵠⵠⲆⲆΔᐃ: "img/night-skin159.png",
    Ⲇᐃᐃⵠⵠⵠⵠ: "img/day-skin160.png",
    ᐃⵠⲆᐃᐃᐃⲆ: "img/night-skin160.png",
    ᐃⲆΔⵠΔⵠⵠ: "img/day-skin161.png",
    ᐃΔᐃᐃⲆⲆⵠ: "img/night-skin161.png",
    ΔΔΔⵠᐃⵠᐃ: "img/day-skin162.png",
    ᐃΔΔⵠΔᐃⲆ: "img/night-skin162.png",
    ᐃⵠΔᐃⲆⵠⵠ: "img/day-skin163.png",
    ⵠⲆⵠΔᐃⲆⵠ: "img/night-skin163.png",
    ᐃⵠᐃⵠΔΔᐃ: "img/day-skin164.png",
    ᐃⲆⵠΔᐃⲆᐃ: "img/night-skin164.png",
    ᐃⲆⵠᐃΔΔⵠ: "img/day-skin165.png",
    ᐃΔᐃⲆⲆΔⵠ: "img/night-skin165.png",
    ᐃⲆΔᐃⵠᐃΔ: "img/day-skin166.png",
    ⲆΔᐃᐃⵠⵠᐃ: "img/night-skin166.png",
    ⲆΔᐃΔΔΔⵠ: "img/day-skin167.png",
    ᐃⲆᐃΔⲆⵠⵠ: "img/night-skin167.png",
    ⲆΔⵠΔΔⵠⵠ: "img/day-skin168.png",
    ⵠΔᐃᐃΔⲆᐃ: "img/night-skin168.png",
    ΔΔᐃⲆⵠΔΔ: "img/day-skin169.png",
    ᐃᐃⲆⵠⲆⵠⵠ: "img/night-skin169.png",
    ⲆⲆΔⲆΔᐃᐃ: "img/day-skin170.png",
    ⲆΔΔᐃᐃⲆⵠ: "img/night-skin170.png",
    ᐃⵠᐃⲆᐃΔΔ: "img/day-skin171.png",
    ⵠΔΔᐃΔⲆⵠ: "img/night-skin171.png",
    ⲆⲆⲆⲆⲆⲆᐃ: "img/day-skin172.png",
    ⵠⵠΔᐃΔⵠΔ: "img/night-skin172.png",
    ΔΔᐃⵠⵠᐃᐃ: "img/day-skin173.png",
    ⵠᐃΔΔⲆⵠᐃ: "img/night-skin173.png",
    ᐃΔⲆΔᐃᐃⲆ: "img/day-skin174.png",
    ⲆᐃⲆⵠᐃⲆᐃ: "img/night-skin174.png",
    ΔΔⵠᐃΔΔⲆ: "img/day-skin175.png",
    ΔⵠΔΔⵠᐃᐃ: "img/night-skin175.png",
    ᐃⵠⲆᐃΔⲆΔ: "img/day-skin176.png",
    ⲆⵠⵠⵠⲆⲆⲆ: "img/night-skin176.png",
    ᐃⵠⵠΔΔΔⲆ: "img/day-skin177.png",
    ΔΔᐃᐃⵠΔⲆ: "img/night-skin177.png",
    ΔΔⲆᐃᐃᐃⵠ: "img/day-skin178.png",
    ΔΔᐃΔⵠΔⵠ: "img/night-skin178.png",
    ⲆᐃⲆΔⲆΔΔ: "img/day-skin179.png",
    ᐃᐃⲆΔΔⲆᐃ: "img/night-skin179.png",
    ⲆΔⵠⵠⵠᐃⵠ: "img/day-skin180.png",
    ᐃᐃⵠⲆⲆⲆΔ: "img/night-skin180.png",
    ᐃⲆᐃᐃᐃΔΔ: "img/day-skin181.png",
    ⵠᐃᐃⵠⲆⵠⲆ: "img/night-skin181.png",
    ⲆΔⲆⵠⲆᐃⲆ: "img/day-skin182.png",
    ⵠᐃᐃᐃⵠⲆᐃ: "img/night-skin182.png",
    ᐃⵠⲆᐃⵠⵠᐃ: "img/day-skin183.png",
    ⵠⵠΔᐃⲆⲆᐃ: "img/night-skin183.png",
    ᐃⵠⲆᐃⵠΔⲆ: "img/day-skin184.png",
    ⵠᐃⲆΔᐃⵠΔ: "img/night-skin184.png",
    ΔⲆᐃⵠᐃⲆᐃ: "img/day-skin185.png",
    ⵠᐃⲆΔΔΔΔ: "img/night-skin185.png",
    ᐃⲆΔⲆⵠᐃᐃ: "img/day-skin186.png",
    ⵠᐃⲆᐃᐃⲆⵠ: "img/night-skin186.png",
    ᐃΔᐃᐃⵠⵠⲆ: "img/day-skin187.png",
    ⵠⲆᐃⵠᐃⵠⲆ: "img/night-skin187.png",
    ᐃⲆⲆΔΔⵠⵠ: "img/day-skin188.png",
    ΔΔΔᐃⲆⵠΔ: "img/night-skin188.png",
    ⵠΔᐃΔⵠⵠΔ: "img/day-skin189.png",
    ⵠᐃΔⵠΔΔⲆ: "img/night-skin189.png",
    ⵠᐃᐃᐃⵠⵠⵠ: "img/day-skin190.png",
    ᐃᐃⵠΔΔΔᐃ: "img/night-skin190.png",
    ΔΔⲆΔⵠⲆᐃ: "img/day-skin191.png",
    ⲆᐃⵠΔⵠᐃⲆ: "img/night-skin191.png",
    ΔⲆⵠᐃⲆⵠⲆ: "img/day-skin192.png",
    ⵠⲆᐃⲆΔᐃᐃ: "img/night-skin192.png",
    ᐃΔⲆⲆⵠⵠⵠ: "img/day-skin193.png",
    ΔⲆⵠᐃΔⵠΔ: "img/night-skin193.png",
    ⲆⵠⵠΔΔᐃΔ: "img/day-skin194.png",
    ⵠⵠⵠⵠᐃⵠⲆ: "img/night-skin194.png",
    ΔᐃⲆⲆⲆΔⲆ: "img/day-skin195.png",
    ⲆⵠᐃⲆΔΔⲆ: "img/night-skin195.png",
    ᐃᐃΔΔΔᐃΔ: "img/day-skin196.png",
    ΔⲆⲆⵠⵠⵠⲆ: "img/night-skin196.png",
    ⵠᐃᐃΔΔⲆΔ: "img/day-skin197.png",
    ⲆⵠᐃⲆᐃⵠᐃ: "img/night-skin197.png",
    ᐃⲆᐃᐃᐃᐃᐃ: "img/day-skin198.png",
    ⲆᐃᐃΔⲆᐃⲆ: "img/night-skin198.png",
    ⵠᐃΔΔᐃᐃΔ: "img/day-skin199.png",
    ⵠΔⲆⲆⲆⲆΔ: "img/night-skin199.png",
    ᐃᐃΔⵠⵠⲆⵠ: "img/day-skin200.png",
    ΔᐃΔΔⲆᐃΔ: "img/night-skin200.png",
    ᐃⵠⵠⲆⲆⵠᐃ: "img/day-skin201.png",
    ⲆⲆⵠΔⲆΔΔ: "img/night-skin201.png",
    ⲆⵠⲆⲆⵠᐃΔ: "img/day-skin202.png",
    ΔⲆⵠΔᐃΔᐃ: "img/night-skin202.png",
    ᐃΔᐃΔᐃΔⵠ: "img/day-skin203.png",
    ΔᐃΔⲆΔⵠⲆ: "img/night-skin203.png",
    ΔΔⲆⵠΔΔⲆ: "img/day-skin204.png",
    ΔᐃᐃΔⲆⲆⵠ: "img/night-skin204.png",
    ΔⲆᐃΔⵠᐃⵠ: "img/day-skin205.png",
    ΔⲆⲆⲆⲆᐃⲆ: "img/night-skin205.png",
    ⵠⵠⲆⲆⲆⵠⵠ: "img/day-skin206.png",
    ⲆΔΔⲆᐃΔⵠ: "img/night-skin206.png",
    ΔⵠᐃΔⲆΔᐃ: "img/day-skin207.png",
    ⲆΔⵠΔⵠᐃⵠ: "img/night-skin207.png",
    ⲆⵠᐃⵠΔΔⵠ: "img/day-skin208.png",
    ⵠᐃᐃΔΔΔᐃ: "img/night-skin208.png",
    ᐃⵠᐃⲆᐃⲆⵠ: "img/day-skin209.png",
    ⲆΔΔΔⵠⵠᐃ: "img/night-skin209.png",
    ΔᐃΔⲆᐃᐃⲆ: "img/day-skin210.png",
    ⲆⲆⵠᐃΔⲆᐃ: "img/night-skin210.png",
    ⵠⵠᐃⲆΔΔᐃ: "img/day-skin211.png",
    ᐃΔⵠᐃⲆΔⲆ: "img/night-skin211.png",
    ⲆⵠΔΔΔⵠᐃ: "img/day-skin212.png",
    ΔᐃΔᐃΔΔᐃ: "img/night-skin212.png",
    ⲆΔⵠᐃⵠⵠᐃ: "img/day-skin213.png",
    ᐃⵠᐃᐃΔᐃⲆ: "img/night-skin213.png",
    ⲆΔΔⵠΔⲆᐃ: "img/day-skin214.png",
    ⵠⲆΔⵠⲆᐃⲆ: "img/night-skin214.png",
    ⲆΔᐃᐃⲆⲆᐃ: "img/day-skin215.png",
    ⵠⵠⵠⲆⵠᐃᐃ: "img/night-skin215.png",
    ΔⲆⵠⲆⲆⵠΔ: "img/day-skin216.png",
    ᐃⵠᐃⵠᐃᐃᐃ: "img/night-skin216.png",
    ΔΔᐃΔΔⲆⵠ: "img/day-skin217.png",
    ΔᐃⵠⲆⵠΔᐃ: "img/night-skin217.png",
    ⵠⵠⲆΔⵠΔΔ: "img/day-skin218.png",
    ΔⵠᐃⲆⵠΔΔ: "img/night-skin218.png",
    ᐃΔΔᐃΔⵠᐃ: "img/day-skin219.png",
    ⵠⵠⲆᐃⵠⲆΔ: "img/night-skin219.png",
    ΔⲆΔᐃΔⵠⵠ: "img/day-skin220.png",
    ΔᐃΔⲆⵠᐃⵠ: "img/night-skin220.png",
    ⵠⵠΔⵠΔⲆⵠ: "img/day-skin221.png",
    ⲆᐃᐃΔΔⲆⲆ: "img/night-skin221.png",
    ᐃⵠΔᐃⲆᐃᐃ: "img/day-skin222.png",
    ΔΔⲆᐃⲆⲆΔ: "img/night-skin222.png",
    ⲆⲆΔΔⵠⵠᐃ: "img/day-skin223.png",
    ΔⲆᐃⵠΔᐃⲆ: "img/night-skin223.png",
    ⵠⲆⵠⵠⲆⲆⵠ: "img/day-skin224.png",
    ⵠΔΔᐃᐃᐃᐃ: "img/night-skin224.png",
    ⲆΔⲆⲆᐃΔⵠ: "img/day-skin225.png",
    ⲆⲆⲆΔΔⲆⵠ: "img/night-skin225.png",
    ⲆᐃⵠⵠⲆᐃⲆ: "img/day-skin226.png",
    ᐃΔΔΔΔᐃⲆ: "img/night-skin226.png",
    ᐃⵠᐃΔⲆⲆΔ: "img/day-skin227.png",
    ᐃⲆᐃⵠⲆⲆᐃ: "img/night-skin227.png",
    ᐃⵠΔΔᐃΔΔ: "img/day-skin228.png",
    ΔᐃᐃⵠΔᐃΔ: "img/night-skin228.png",
    ΔⵠΔⲆᐃᐃⵠ: "img/day-skin229.png",
    ΔΔⵠΔⵠΔΔ: "img/night-skin229.png",
    ⲆΔⲆΔⲆᐃⲆ: "img/day-skin230.png",
    ΔΔᐃⲆⵠᐃᐃ: "img/night-skin230.png",
    ᐃᐃΔᐃᐃΔⲆ: "img/day-skin231.png",
    ᐃᐃΔⲆⵠᐃΔ: "img/night-skin231.png",
    ᐃᐃΔᐃⵠⵠⵠ: "img/day-skin232.png",
    ⲆᐃⲆⵠⲆⲆΔ: "img/night-skin232.png",
    ⲆⲆᐃⵠΔᐃΔ: "img/day-skin233.png",
    ᐃᐃΔΔᐃΔᐃ: "img/night-skin233.png",
    ⵠΔⲆⵠⵠΔⲆ: "img/day-skin234.png",
    ΔᐃⵠⵠⵠⵠⲆ: "img/night-skin234.png",
    ᐃΔΔⵠΔⲆⲆ: "img/day-skin235.png",
    ⲆⲆΔᐃⲆΔΔ: "img/night-skin235.png",
    ⲆⵠⵠⲆΔⵠΔ: "img/day-skin236.png",
    ⲆⵠⵠΔᐃⵠΔ: "img/night-skin236.png",
    ⲆΔΔᐃⵠΔⲆ: "img/day-skin237.png",
    ⲆⲆⵠⵠⵠΔᐃ: "img/night-skin237.png",
    ΔΔⲆᐃΔΔᐃ: "img/day-skin238.png",
    ᐃⵠⵠΔΔΔᐃ: "img/night-skin238.png",
    ⲆᐃⵠΔᐃⲆⵠ: "img/day-skin239.png",
    ⵠΔΔⲆⵠᐃⵠ: "img/night-skin239.png",
    ⲆΔΔⵠⲆᐃΔ: "img/day-skin240.png",
    ΔΔⲆⲆⵠΔᐃ: "img/night-skin240.png",
    ΔᐃΔᐃᐃᐃᐃ: "img/day-skin241.png",
    ⲆΔΔⲆᐃΔΔ: "img/night-skin241.png",
    ⵠᐃᐃⲆΔΔⵠ: "img/day-skin242.png",
    ⲆΔⵠΔⲆᐃⲆ: "img/night-skin242.png",
    ⵠⲆᐃⲆᐃⵠⲆ: "img/day-skin243.png",
    ⲆΔⵠⲆⵠΔⵠ: "img/night-skin243.png",
    ΔᐃΔᐃᐃⵠᐃ: "img/day-skin244.png",
    ΔᐃⲆᐃⵠⲆᐃ: "img/night-skin244.png",
    ᐃΔᐃⲆⵠⲆΔ: "img/day-skin245.png",
    ⵠⵠᐃⵠΔΔΔ: "img/night-skin245.png",
    ΔⵠⲆⲆⲆⵠⵠ: "img/day-skin246.png",
    ΔⲆⲆⵠᐃΔΔ: "img/night-skin246.png",
    ⵠⵠⵠⲆⵠⵠⲆ: "img/day-hand-skin0.png",
    ΔⵠⲆᐃⲆⵠΔ: "img/night-hand-skin0.png",
    ⵠⵠΔⵠⵠΔΔ: "img/day-hand-skin1.png",
    ΔᐃᐃΔⲆᐃⲆ: "img/night-hand-skin1.png",
    ᐃⲆᐃⵠⲆΔⵠ: "img/day-hand-skin2.png",
    ⵠᐃⲆΔⲆᐃⵠ: "img/night-hand-skin2.png",
    ΔⵠⲆᐃⲆΔΔ: "img/day-hand-skin3.png",
    ⲆⲆᐃΔᐃⲆⵠ: "img/night-hand-skin3.png",
    ᐃᐃᐃᐃΔⵠᐃ: "img/day-hand-skin4.png",
    ⵠⵠⵠⵠⵠᐃⲆ: "img/night-hand-skin4.png",
    ᐃᐃⵠⵠᐃⵠᐃ: "img/day-hand-skin5.png",
    ⲆΔᐃᐃⲆⲆΔ: "img/night-hand-skin5.png",
    ⲆᐃΔᐃΔΔⲆ: "img/day-hand-skin6.png",
    ⲆⵠᐃᐃᐃⵠⵠΔⲆ: "img/night-hand-skin6.png",
    ΔᐃᐃΔⵠⲆⵠ: "img/day-hand-skin6.png",
    ⵠΔΔᐃⵠⲆⲆ: "img/night-hand-skin6.png",
    ⲆᐃⲆⲆⵠⲆᐃ: "img/day-hand-skin8.png",
    ⵠᐃᐃᐃΔΔΔ: "img/night-hand-skin8.png",
    ΔⲆΔΔᐃΔⵠ: "img/day-hand-skin9.png",
    ᐃⵠⲆⵠᐃΔᐃ: "img/night-hand-skin9.png",
    ⵠⵠᐃΔⲆΔⲆ: "img/day-hand-skin10.png",
    ⲆⵠⵠⲆⵠΔΔ: "img/night-hand-skin10.png",
    ᐃⵠΔᐃΔΔⲆ: "img/day-hand-skin11.png",
    ᐃⵠⲆⵠᐃⲆᐃ: "img/night-hand-skin11.png",
    ΔⵠⲆⲆⲆⲆⲆ: "img/day-hand-skin12.png",
    ΔᐃⲆΔⲆᐃⵠ: "img/night-hand-skin12.png",
    ΔⲆⵠᐃΔⲆΔ: "img/day-hand-skin13.png",
    ⵠⵠᐃᐃΔΔⵠ: "img/night-hand-skin13.png",
    ΔΔᐃᐃᐃⵠⵠ: "img/day-hand-skin14.png",
    ΔⲆⲆⲆⲆⲆΔ: "img/night-hand-skin14.png",
    ⲆⵠΔᐃⵠΔⵠ: "img/day-hand-skin15.png",
    ᐃᐃⵠᐃⵠⵠⲆ: "img/night-hand-skin15.png",
    ΔⵠⵠᐃΔᐃⵠ: "img/day-hand-skin16.png",
    ⲆⲆΔⵠⲆⲆΔ: "img/night-hand-skin16.png",
    ᐃⵠⲆᐃⲆⲆⲆ: "img/day-hand-skin17.png",
    ⵠⵠΔΔⲆΔⲆ: "img/night-hand-skin17.png",
    ⵠᐃⵠⲆⵠⵠΔ: "img/day-hand-skin18.png",
    ᐃΔᐃⵠᐃⲆᐃ: "img/night-hand-skin18.png",
    ⲆⲆΔⲆⲆᐃᐃ: "img/day-hand-skin19.png",
    ΔⵠᐃΔⲆⵠΔ: "img/night-hand-skin19.png",
    ᐃⵠⵠⲆⵠᐃⵠ: "img/day-hand-skin20.png",
    ⲆΔⲆⵠⲆⵠⲆ: "img/night-hand-skin20.png",
    ᐃⲆΔⲆΔΔΔ: "img/day-hand-skin21.png",
    ᐃᐃⲆᐃⲆⵠᐃ: "img/night-hand-skin21.png",
    ΔΔⵠⵠⵠⵠⵠ: "img/day-hand-skin22.png",
    ⲆⲆΔⵠΔⵠᐃ: "img/night-hand-skin22.png",
    ⲆⲆⵠⲆⵠⲆΔ: "img/day-hand-skin23.png",
    ᐃⲆᐃΔᐃᐃΔ: "img/night-hand-skin23.png",
    ⵠΔⲆⵠΔΔΔ: "img/day-hand-skin24.png",
    ⵠⲆΔⲆⲆᐃΔ: "img/night-hand-skin24.png",
    ⵠᐃΔᐃⵠⲆΔ: "img/day-hand-skin25.png",
    ⵠΔⲆΔⲆⲆΔ: "img/night-hand-skin25.png",
    ⵠΔⲆⲆⲆᐃⵠ: "img/day-hand-skin26.png",
    ᐃΔΔⲆᐃᐃⲆ: "img/night-hand-skin26.png",
    ⲆΔⵠᐃⲆᐃⲆ: "img/day-hand-skin27.png",
    ⲆᐃᐃΔⵠᐃᐃ: "img/night-hand-skin27.png",
    ⵠⵠᐃᐃΔᐃΔ: "img/day-hand-skin28.png",
    ⲆᐃΔⲆΔⲆᐃ: "img/night-hand-skin28.png",
    ⲆⵠⵠΔⵠΔⲆ: "img/day-hand-skin29.png",
    ⲆⵠΔⵠⲆⵠⲆ: "img/night-hand-skin29.png",
    ⵠⲆᐃⲆᐃⲆΔ: "img/day-hand-skin30.png",
    ΔⲆᐃΔⲆΔⲆ: "img/night-hand-skin30.png",
    ΔⵠⲆΔᐃΔΔ: "img/day-hand-skin31.png",
    ᐃΔⵠΔΔⵠⲆ: "img/night-hand-skin31.png",
    ⵠⲆᐃⲆΔᐃⵠ: "img/day-hand-skin32.png",
    ᐃΔᐃΔΔⵠⵠ: "img/night-hand-skin32.png",
    ΔⲆⵠⵠⵠΔΔ: "img/day-hand-skin33.png",
    ⲆⲆΔΔⲆⲆΔ: "img/night-hand-skin33.png",
    ᐃΔⲆᐃΔᐃᐃ: "img/day-hand-skin34.png",
    ⲆⵠᐃΔΔⵠΔ: "img/night-hand-skin34.png",
    ⲆⵠⲆᐃⲆⵠⲆ: "img/day-hand-skin35.png",
    ΔⵠⲆⲆⵠⲆᐃ: "img/night-hand-skin35.png",
    ΔᐃᐃΔⵠΔⵠ: "img/day-hand-skin36.png",
    ΔⲆΔΔⲆΔΔ: "img/night-hand-skin36.png",
    ⲆᐃⵠΔΔⵠⵠ: "img/day-hand-skin37.png",
    ΔᐃⲆⲆⵠⲆᐃ: "img/night-hand-skin37.png",
    ΔⵠΔᐃΔᐃⲆ: "img/day-hand-skin38.png",
    ᐃᐃΔᐃⵠⲆᐃ: "img/night-hand-skin38.png",
    ⵠΔᐃᐃⵠⵠⲆ: "img/day-hand-skin39.png",
    ⵠΔⲆΔᐃⲆΔ: "img/night-hand-skin39.png",
    ᐃⵠΔⵠᐃⲆᐃ: "img/day-hand-skin40.png",
    ⵠΔⵠⲆᐃΔⵠ: "img/night-hand-skin40.png",
    ΔⲆⵠᐃᐃⵠⵠ: "img/day-hand-skin41.png",
    ⲆⲆΔᐃΔⵠΔ: "img/night-hand-skin41.png",
    ⵠΔΔΔΔᐃⲆ: "img/day-hand-skin42.png",
    ⵠⲆⲆᐃΔΔⵠ: "img/night-hand-skin42.png",
    ⲆᐃⵠᐃⲆΔⵠ: "img/day-hand-skin43.png",
    ᐃⵠⵠΔⵠᐃⵠ: "img/night-hand-skin43.png",
    ᐃⲆⵠΔᐃⲆⲆ: "img/day-hand-skin16.png",
    ΔᐃⲆΔΔΔᐃ: "img/night-hand-skin16.png",
    ᐃⲆⵠⵠΔⵠᐃ: "img/day-hand-skin45.png",
    ΔⲆΔᐃⵠᐃⵠ: "img/night-hand-skin45.png",
    ⲆᐃⵠΔⵠⲆⵠ: "img/day-hand-skin46.png",
    ΔΔᐃⵠⲆΔΔ: "img/night-hand-skin46.png",
    ᐃᐃⵠⲆΔⲆᐃ: "img/day-hand-skin47.png",
    ⲆⲆᐃⲆΔⵠΔ: "img/night-hand-skin47.png",
    ⵠᐃⲆⲆⲆⲆᐃ: "img/day-hand-skin48.png",
    ⲆᐃΔΔⵠⵠΔ: "img/night-hand-skin48.png",
    ⵠΔᐃᐃᐃⲆᐃ: "img/day-hand-skin49.png",
    ⲆⲆⵠⵠⲆᐃⲆ: "img/night-hand-skin49.png",
    ⵠᐃⵠΔᐃᐃⵠ: "img/day-hand-skin49.png",
    ᐃⵠⵠⲆⵠΔᐃ: "img/night-hand-skin49.png",
    ⵠᐃⵠⵠᐃᐃⲆ: "img/day-hand-skin51.png",
    ⲆΔⲆⵠⵠΔⲆ: "img/night-hand-skin51.png",
    ⲆⵠΔⲆⵠⲆⵠ: "img/day-hand-skin52.png",
    ⵠⵠⵠⲆᐃⲆΔ: "img/night-hand-skin52.png",
    ᐃΔⵠⲆΔⵠⲆ: "img/day-hand-skin53.png",
    ΔⲆΔᐃᐃΔΔ: "img/night-hand-skin53.png",
    ⲆⲆᐃⵠΔⵠᐃ: "img/day-hand-skin53.png",
    ᐃᐃⵠΔⲆⲆᐃ: "img/night-hand-skin53.png",
    ᐃⵠⲆΔⲆΔⲆ: "img/day-hand-skin55.png",
    ⵠⲆᐃⵠᐃΔΔ: "img/night-hand-skin55.png",
    ⲆΔⲆΔⵠΔΔ: "img/day-hand-skin56.png",
    ⵠⵠⲆᐃⲆⵠΔ: "img/night-hand-skin56.png",
    ⲆⲆᐃΔⵠᐃΔ: "img/day-hand-skin57.png",
    ΔⲆΔΔΔᐃᐃ: "img/night-hand-skin57.png",
    ΔΔⵠⵠΔⵠΔ: "img/day-hand-skin58.png",
    ⵠᐃⲆᐃⵠⲆᐃ: "img/night-hand-skin58.png",
    ΔΔΔⵠΔⲆⲆ: "img/day-hand-skin59.png",
    ᐃΔᐃΔⵠᐃⵠ: "img/night-hand-skin59.png",
    ⲆΔᐃΔⵠΔⲆ: "img/day-hand-skin61.png",
    ᐃΔᐃⲆΔΔⵠ: "img/night-hand-skin61.png",
    ᐃⵠⲆΔⲆⲆⲆ: "img/day-hand-skin61.png",
    ΔⲆⲆⲆᐃⲆᐃ: "img/night-hand-skin61.png",
    ᐃΔᐃᐃΔᐃⵠ: "img/day-hand-skin62.png",
    ΔᐃᐃᐃᐃᐃΔ: "img/night-hand-skin62.png",
    ΔᐃⲆᐃⵠᐃⲆ: "img/day-hand-skin63.png",
    ⵠΔⵠᐃⲆⵠⲆ: "img/night-hand-skin63.png",
    ᐃΔⵠᐃⲆᐃΔ: "img/day-hand-skin64.png",
    ᐃⲆᐃΔᐃⲆⵠ: "img/night-hand-skin64.png",
    ⲆⵠΔᐃᐃᐃᐃ: "img/day-hand-skin65.png",
    ΔⲆᐃⲆΔᐃⲆ: "img/night-hand-skin65.png",
    ᐃᐃⵠⵠⲆᐃⵠ: "img/day-hand-skin66.png",
    ΔⲆΔⵠⲆⵠΔ: "img/night-hand-skin66.png",
    ΔΔⲆⵠⲆᐃⲆ: "img/day-hand-skin67.png",
    ΔⵠⵠⲆΔⲆᐃ: "img/night-hand-skin67.png",
    ᐃⲆᐃⲆΔᐃⵠ: "img/day-hand-skin68.png",
    ᐃⵠⵠΔⲆⲆΔ: "img/night-hand-skin68.png",
    ΔᐃⵠΔᐃᐃᐃ: "img/day-hand-skin69.png",
    ΔΔΔⲆⲆᐃⲆ: "img/night-hand-skin69.png",
    ⲆⲆⵠΔⲆΔᐃ: "img/day-hand-skin70.png",
    ΔΔᐃⵠⲆⵠⲆ: "img/night-hand-skin70.png",
    ⲆᐃΔⵠᐃⵠⲆ: "img/day-hand-skin71.png",
    ⲆⵠⲆⵠᐃΔΔ: "img/night-hand-skin71.png",
    ᐃᐃᐃᐃⵠΔⵠ: "img/day-hand-skin72.png",
    ᐃⵠⵠΔⵠⵠⲆ: "img/night-hand-skin72.png",
    ᐃⲆᐃᐃᐃⵠΔ: "img/day-hand-skin73.png",
    ⲆᐃⵠΔⵠΔΔ: "img/night-hand-skin73.png",
    ⲆᐃΔⵠᐃⵠᐃ: "img/day-hand-skin74.png",
    ⵠⲆᐃⲆᐃᐃΔ: "img/night-hand-skin74.png",
    ⵠᐃᐃⲆᐃΔΔ: "img/day-hand-skin75.png",
    ⵠⵠⲆᐃᐃΔⵠ: "img/night-hand-skin75.png",
    ⵠΔⵠⲆΔⲆᐃ: "img/day-hand-skin76.png",
    ⵠⲆⲆⵠⵠΔΔ: "img/night-hand-skin76.png",
    ᐃⵠΔⵠᐃΔΔ: "img/day-hand-skin77.png",
    ⵠⵠᐃΔΔⵠⲆ: "img/night-hand-skin77.png",
    ⲆΔⵠⲆΔⲆⲆ: "img/day-hand-skin78.png",
    ⵠⵠᐃⵠⲆⵠⵠ: "img/night-hand-skin78.png",
    ΔⵠᐃⲆⲆᐃΔ: "img/day-hand-skin79.png",
    ᐃΔⲆⲆⲆΔᐃ: "img/night-hand-skin79.png",
    ⲆᐃⵠⵠⵠⲆᐃ: "img/day-hand-skin80.png",
    ᐃⲆΔΔⲆΔΔ: "img/night-hand-skin80.png",
    ᐃΔᐃΔⵠⵠΔ: "img/day-hand-skin81.png",
    ᐃⲆⵠⲆᐃⵠⵠ: "img/night-hand-skin81.png",
    ⵠⵠᐃΔⵠᐃⲆ: "img/day-hand-skin82.png",
    ⲆΔⵠᐃᐃΔᐃ: "img/night-hand-skin82.png",
    ⲆᐃᐃⲆⵠᐃᐃ: "img/day-hand-skin83.png",
    ΔᐃᐃⲆⲆΔΔ: "img/night-hand-skin83.png",
    ΔⲆΔⲆΔⲆᐃ: "img/day-hand-skin84.png",
    ΔᐃⲆⵠⵠⲆΔ: "img/night-hand-skin84.png",
    ⵠⲆᐃⲆⵠᐃⲆ: "img/day-hand-skin85.png",
    ᐃⵠᐃΔᐃΔΔ: "img/night-hand-skin85.png",
    ⵠΔⵠΔᐃᐃⵠ: "img/day-hand-skin86.png",
    ⲆᐃᐃΔᐃⵠⵠ: "img/night-hand-skin86.png",
    ⵠⵠᐃΔⲆⵠᐃ: "img/day-hand-skin87.png",
    ᐃᐃΔⲆⲆⵠⲆ: "img/night-hand-skin87.png",
    ⲆⵠΔⲆᐃΔⵠ: "img/day-hand-skin88.png",
    ᐃⵠᐃΔᐃⵠΔ: "img/night-hand-skin88.png",
    ⲆΔᐃⵠⵠⲆΔ: "img/day-hand-skin89.png",
    ΔᐃⵠΔⲆⲆⲆ: "img/night-hand-skin89.png",
    ⵠΔᐃⵠΔⲆᐃ: "img/day-hand-skin90.png",
    ⵠΔⵠΔⵠΔΔ: "img/night-hand-skin90.png",
    ⵠⵠⲆⵠᐃⲆΔ: "img/day-hand-skin91.png",
    ⵠⲆᐃᐃΔⲆᐃ: "img/night-hand-skin91.png",
    ⲆᐃᐃⲆᐃⵠΔ: "img/day-hand-skin92.png",
    ΔΔΔⲆΔⲆΔ: "img/night-hand-skin92.png",
    ⲆⵠⵠⵠᐃΔΔ: "img/day-hand-skin93.png",
    ᐃⲆΔⲆΔⲆᐃ: "img/night-hand-skin93.png",
    ᐃⲆⲆⲆᐃΔᐃ: "img/day-hand-skin94.png",
    ΔⵠⲆⲆΔⵠΔ: "img/night-hand-skin94.png",
    ᐃΔΔⲆⲆΔⵠ: "img/day-hand-skin95.png",
    ΔΔΔⵠΔᐃⵠ: "img/night-hand-skin95.png",
    ΔⲆΔⵠⲆᐃΔ: "img/day-hand-skin96.png",
    ΔᐃⵠΔᐃᐃΔ: "img/night-hand-skin96.png",
    ⲆᐃΔΔⵠⲆᐃ: "img/day-hand-skin97.png",
    ⵠᐃᐃⵠⲆⵠⵠ: "img/night-hand-skin97.png",
    ⲆᐃᐃΔⲆⵠⵠ: "img/day-hand-skin98.png",
    ᐃᐃⲆⲆⲆⲆⵠ: "img/night-hand-skin98.png",
    ⲆᐃⵠⲆΔⵠΔ: "img/day-hand-skin99.png",
    ΔΔᐃⵠⲆⵠᐃ: "img/night-hand-skin99.png",
    ⵠΔᐃΔΔᐃΔ: "img/day-hand-skin100.png",
    ⲆᐃⲆⵠⲆᐃᐃ: "img/night-hand-skin100.png",
    ⵠⲆᐃⵠᐃⵠⵠ: "img/day-hand-skin101.png",
    ᐃᐃᐃⲆⲆᐃⲆ: "img/night-hand-skin101.png",
    ᐃⵠᐃⲆⵠⲆⵠ: "img/day-hand-skin102.png",
    ᐃᐃᐃⵠⵠⵠᐃ: "img/night-hand-skin102.png",
    ⵠᐃⲆⲆΔⵠᐃ: "img/day-hand-skin103.png",
    ΔⵠᐃΔΔΔⵠ: "img/night-hand-skin103.png",
    ΔⵠⵠᐃⲆΔᐃ: "img/day-hand-skin104.png",
    ᐃⲆⲆᐃΔΔⲆ: "img/night-hand-skin104.png",
    ᐃⵠⵠᐃΔΔⵠ: "img/day-hand-skin105.png",
    ΔᐃⲆⵠΔᐃⲆ: "img/night-hand-skin105.png",
    ⵠⲆᐃⲆΔⲆᐃ: "img/day-hand-skin106.png",
    ᐃΔᐃΔⵠΔᐃ: "img/night-hand-skin106.png",
    ⵠΔᐃᐃᐃⵠΔ: "img/day-hand-skin107.png",
    ΔΔⵠⵠᐃⵠⵠ: "img/night-hand-skin107.png",
    ⵠⵠΔⲆⵠⵠᐃ: "img/day-hand-skin108.png",
    ᐃΔΔᐃⲆⵠⵠ: "img/night-hand-skin108.png",
    ⵠᐃⵠⲆᐃⵠᐃ: "img/day-hand-skin109.png",
    ᐃⵠᐃⲆⵠΔⲆ: "img/night-hand-skin109.png",
    ᐃⲆⵠΔⲆⵠᐃ: "img/day-hand-skin110.png",
    ΔⲆᐃᐃᐃᐃⲆ: "img/night-hand-skin110.png",
    ⲆΔⵠⲆⵠⲆⲆ: "img/day-hand-skin111.png",
    ᐃΔⵠΔΔᐃᐃ: "img/night-hand-skin111.png",
    ⵠⲆΔᐃᐃᐃΔ: "img/day-hand-skin112.png",
    ᐃᐃᐃⵠⵠΔᐃ: "img/night-hand-skin112.png",
    ⵠⲆⵠΔᐃⲆΔⵠⲆ: "img/day-hand-skin113.png",
    ⵠⵠⵠΔⲆⵠᐃⲆⵠ: "img/night-hand-skin113.png",
    ΔⲆⲆᐃⵠⲆᐃ: "img/day-hand-skin114.png",
    ⵠⲆⵠΔⲆⵠⵠ: "img/night-hand-skin114.png",
    ᐃΔᐃΔΔⲆΔ: "img/day-hand-skin115.png",
    ΔⵠⲆⲆΔᐃⵠ: "img/night-hand-skin115.png",
    ⵠΔΔⲆΔᐃⵠ: "img/day-hand-skin116.png",
    ᐃΔⲆΔᐃΔᐃ: "img/night-hand-skin116.png",
    ⵠΔⲆⲆⵠⲆᐃ: "img/day-hand-skin117.png",
    ᐃⵠᐃΔΔΔΔ: "img/night-hand-skin117.png",
    ᐃⲆᐃΔⵠᐃⵠ: "img/day-hand-skin118.png",
    ⲆᐃᐃᐃⵠⲆⲆ: "img/night-hand-skin118.png",
    ⲆⲆᐃᐃⵠᐃⵠ: "img/day-hand-skin119.png",
    ⲆΔᐃⵠⲆΔⵠ: "img/night-hand-skin119.png",
    ⵠⵠᐃΔᐃΔⲆ: "img/day-hand-skin120.png",
    ⲆΔⵠΔⵠⵠᐃ: "img/night-hand-skin120.png",
    ΔⵠⵠᐃΔⵠᐃ: "img/day-hand-skin122.png",
    ᐃᐃΔⵠⵠΔⵠ: "img/night-hand-skin122.png",
    ⵠᐃⲆⲆᐃᐃᐃ: "img/day-hand-skin122.png",
    ᐃΔᐃⵠⲆᐃⲆ: "img/night-hand-skin122.png",
    ΔⲆΔⵠᐃⵠⵠ: "img/day-hand-skin122.png",
    ΔⵠⵠⲆΔⵠⲆ: "img/night-hand-skin122.png",
    ⵠᐃΔΔΔⲆᐃ: "img/day-hand-skin124.png",
    ⵠᐃᐃⵠᐃΔΔ: "img/night-hand-skin124.png",
    ΔᐃᐃⵠᐃⲆΔ: "img/day-hand-skin125.png",
    ⲆᐃᐃΔⲆⲆᐃ: "img/night-hand-skin125.png",
    ΔΔᐃᐃᐃⲆⲆ: "img/day-hand-skin126.png",
    ΔⵠΔᐃᐃΔΔ: "img/night-hand-skin126.png",
    ⵠᐃΔᐃᐃΔΔ: "img/day-hand-skin127.png",
    ᐃᐃᐃⵠΔᐃΔ: "img/night-hand-skin127.png",
    ΔⵠⵠⵠⵠΔΔ: "img/day-hand-skin128.png",
    ⵠᐃⲆᐃⲆᐃⵠ: "img/night-hand-skin128.png",
    ᐃⲆⲆΔᐃⵠᐃ: "img/day-hand-skin129.png",
    ᐃᐃⲆᐃⲆΔᐃ: "img/night-hand-skin129.png",
    ⵠᐃΔⲆⲆⵠᐃ: "img/day-hand-skin130.png",
    ⵠⵠⲆᐃᐃΔⲆ: "img/night-hand-skin130.png",
    ΔΔᐃⲆᐃⲆᐃ: "img/day-hand-skin131.png",
    ⲆⵠᐃΔᐃⵠⲆ: "img/night-hand-skin131.png",
    ⲆⲆⲆⲆΔΔᐃ: "img/day-hand-skin130.png",
    ᐃⲆⵠΔⵠᐃⵠ: "img/night-hand-skin130.png",
    ΔⲆⵠⵠᐃⲆᐃ: "img/day-hand-skin133.png",
    ᐃⲆⲆᐃⵠᐃⲆ: "img/night-hand-skin133.png",
    ΔⵠᐃⵠⲆᐃΔ: "img/day-hand-skin134.png",
    ⲆⵠⲆⲆΔⵠᐃ: "img/night-hand-skin134.png",
    ⲆᐃⲆⵠⵠᐃΔ: "img/day-hand-skin135.png",
    ᐃΔⵠᐃⲆⲆᐃ: "img/night-hand-skin135.png",
    ⲆⲆᐃᐃⵠᐃⲆ: "img/day-hand-skin136.png",
    ᐃⵠⲆΔΔᐃᐃ: "img/night-hand-skin136.png",
    ⲆΔᐃⲆᐃᐃΔ: "img/day-hand-skin137.png",
    ᐃⵠⲆᐃΔᐃᐃ: "img/night-hand-skin137.png",
    ΔΔᐃⵠΔΔⵠ: "img/day-hand-skin138.png",
    ᐃⵠᐃⵠΔΔΔ: "img/night-hand-skin138.png",
    ᐃᐃᐃⵠΔⵠⵠ: "img/day-hand-skin139.png",
    ΔᐃᐃΔⲆΔⵠ: "img/night-hand-skin139.png",
    ΔΔⵠᐃΔᐃᐃ: "img/day-hand-skin140.png",
    ⲆⵠᐃᐃΔⲆᐃ: "img/night-hand-skin140.png",
    ⲆⵠⲆⵠΔᐃᐃ: "img/day-hand-skin141.png",
    ΔⲆΔᐃⲆᐃⲆ: "img/night-hand-skin141.png",
    ⵠⲆⵠⵠⵠⲆⵠ: "img/day-hand-skin142.png",
    ⵠⵠᐃⵠᐃⵠⲆ: "img/night-hand-skin142.png",
    ΔΔⵠⵠᐃΔᐃ: "img/day-hand-skin143.png",
    ⵠⲆⵠⵠᐃⲆⲆ: "img/night-hand-skin143.png",
    ⵠⲆΔΔΔⵠⲆ: "img/day-hand-skin144.png",
    ᐃΔᐃⵠΔᐃⲆ: "img/night-hand-skin144.png",
    ᐃⵠⲆⲆᐃⵠᐃ: "img/day-hand-skin145.png",
    ⲆⲆΔⲆΔⲆⲆ: "img/night-hand-skin145.png",
    ⵠⵠᐃⲆⵠⵠᐃ: "img/day-hand-skin146.png",
    ΔᐃΔⵠΔⲆⵠ: "img/night-hand-skin146.png",
    ΔⲆⵠⲆⲆᐃⲆ: "img/day-hand-skin147.png",
    ⲆΔⲆⲆᐃⵠⲆ: "img/night-hand-skin147.png",
    ΔⵠⲆΔΔⲆΔ: "img/day-hand-skin148.png",
    ⲆⵠⲆⵠᐃⲆΔ: "img/night-hand-skin148.png",
    ΔⲆᐃⵠᐃᐃΔ: "img/day-hand-skin149.png",
    ΔⲆⵠⲆΔⵠᐃ: "img/night-hand-skin149.png",
    ᐃⲆᐃΔⲆⲆΔ: "img/day-hand-skin150.png",
    ΔᐃΔⲆᐃᐃᐃ: "img/night-hand-skin150.png",
    ⵠΔΔⲆⲆᐃΔ: "img/day-hand-skin151.png",
    ΔᐃΔⵠᐃⲆⲆ: "img/night-hand-skin151.png",
    ⲆⲆⲆⲆΔⵠⵠ: "img/day-hand-skin152.png",
    ΔⵠΔⲆᐃⲆΔ: "img/night-hand-skin152.png",
    ⵠⲆⵠⲆⵠⵠⵠ: "img/day-hand-skin153.png",
    ⵠⲆΔᐃⵠⵠΔ: "img/night-hand-skin153.png",
    ⵠⲆᐃᐃᐃⵠΔ: "img/day-hand-skin154.png",
    ᐃᐃⲆⲆᐃⲆᐃ: "img/night-hand-skin154.png",
    ΔᐃⵠⲆᐃΔⲆ: "img/day-hand-skin155.png",
    ΔⵠⵠΔΔⵠᐃ: "img/night-hand-skin155.png",
    ᐃⲆⵠΔⲆᐃⵠ: "img/day-hand-skin156.png",
    ᐃΔⵠΔΔᐃΔ: "img/night-hand-skin156.png",
    ⵠΔⵠᐃᐃⲆⵠ: "img/day-hand-skin157.png",
    ΔᐃΔⵠᐃᐃᐃ: "img/night-hand-skin157.png",
    ᐃⵠᐃⵠⵠⵠΔ: "img/day-hand-skin158.png",
    ᐃᐃᐃⵠⲆΔⵠ: "img/night-hand-skin158.png",
    ⲆⲆΔⵠⵠⲆⵠ: "img/day-hand-skin159.png",
    ⵠⵠⵠⵠⲆᐃⲆ: "img/night-hand-skin159.png",
    ΔᐃᐃᐃⵠΔⲆ: "img/day-hand-skin160.png",
    ᐃᐃᐃΔⲆⵠⵠ: "img/night-hand-skin160.png",
    ᐃᐃΔΔᐃⵠⲆ: "img/day-hand-skin161.png",
    ⲆᐃΔΔΔⲆΔ: "img/night-hand-skin161.png",
    ⵠᐃᐃⲆⵠᐃⲆ: "img/day-hand-skin162.png",
    ⲆᐃᐃΔΔᐃⲆ: "img/night-hand-skin162.png",
    ⵠⲆⵠΔⵠᐃᐃ: "img/day-hand-skin163.png",
    ΔΔΔⲆⵠⲆⵠ: "img/night-hand-skin163.png",
    ⲆᐃⲆⲆⲆⵠⲆ: "img/day-hand-skin164.png",
    ΔᐃⲆⵠⵠᐃᐃ: "img/night-hand-skin164.png",
    ⵠⲆΔⲆⵠᐃΔ: "img/day-hand-skin165.png",
    ΔⵠⵠᐃⵠΔⲆ: "img/night-hand-skin165.png",
    ⵠⲆᐃⲆᐃⲆᐃ: "img/day-hand-skin166.png",
    ⲆⲆⵠᐃᐃⵠⲆ: "img/night-hand-skin166.png",
    ΔⵠᐃⵠⲆΔᐃ: "img/day-hand-skin167.png",
    ΔⵠᐃⵠΔᐃⲆ: "img/night-hand-skin167.png",
    ᐃⵠᐃΔⲆΔᐃ: "img/day-hand-skin168.png",
    ⲆΔⵠᐃⲆΔⲆ: "img/night-hand-skin168.png",
    ΔᐃⵠᐃΔΔᐃ: "img/day-hand-skin169.png",
    ΔᐃᐃⵠⲆᐃⵠ: "img/night-hand-skin169.png",
    ΔᐃΔΔⲆᐃⲆ: "img/day-hand-skin170.png",
    ᐃⲆⲆΔᐃᐃΔ: "img/night-hand-skin170.png",
    ⲆⵠᐃⵠⲆΔⲆ: "img/day-hand-skin171.png",
    ᐃⵠⵠΔΔΔΔ: "img/night-hand-skin171.png",
    ᐃᐃΔⲆⵠᐃⵠ: "img/day-hand-skin172.png",
    ⲆⲆΔΔⵠΔⵠ: "img/night-hand-skin172.png",
    ᐃⵠⲆᐃⵠⲆⲆ: "img/day-hand-skin173.png",
    ΔⵠⲆΔⵠΔᐃ: "img/night-hand-skin173.png",
    ᐃΔΔⲆᐃΔⵠ: "img/day-hand-skin174.png",
    ᐃⵠⵠᐃᐃΔⵠ: "img/night-hand-skin174.png",
    ⵠΔΔΔⲆⲆⲆ: "img/day-hand-skin175.png",
    ΔⲆΔᐃᐃΔⵠ: "img/night-hand-skin175.png",
    ⵠᐃⵠΔⵠΔΔ: "img/day-hand-skin176.png",
    ⲆᐃⲆΔⲆᐃⲆ: "img/night-hand-skin176.png",
    ᐃΔⵠⲆⲆⲆⲆ: "img/day-hand-skin177.png",
    ᐃⲆᐃⲆⵠᐃⵠ: "img/night-hand-skin177.png",
    ᐃⲆⵠᐃⲆⵠⲆ: "img/day-hand-skin178.png",
    ᐃᐃᐃᐃᐃᐃⲆ: "img/night-hand-skin178.png",
    ᐃⲆⵠᐃⲆᐃⲆ: "img/day-hand-skin179.png",
    ⵠᐃⵠΔᐃᐃΔ: "img/night-hand-skin179.png",
    ⲆⵠⲆᐃⲆᐃⲆ: "img/day-hand-skin180.png",
    ᐃΔⵠⲆᐃᐃΔ: "img/night-hand-skin180.png",
    ⲆᐃⲆᐃⵠΔⲆ: "img/day-hand-skin181.png",
    ⲆΔᐃΔⲆΔᐃ: "img/night-hand-skin181.png",
    ⵠΔᐃᐃⲆⲆⲆ: "img/day-hand-skin182.png",
    ΔⲆᐃᐃΔΔᐃ: "img/night-hand-skin182.png",
    ⲆⵠⵠⲆΔⲆᐃ: "img/day-hand-skin183.png",
    ᐃⲆⵠᐃⲆⲆᐃ: "img/night-hand-skin183.png",
    ΔᐃⵠⲆⲆⲆΔ: "img/day-hand-skin184.png",
    ⵠⵠᐃΔΔΔⲆ: "img/night-hand-skin184.png",
    ⵠⵠΔΔⵠΔⵠ: "img/day-hand-skin185.png",
    ⲆᐃⲆΔⵠΔⲆ: "img/night-hand-skin185.png",
    ᐃⵠᐃⵠⵠΔᐃ: "img/day-hand-skin186.png",
    ΔⲆⵠᐃⲆΔΔ: "img/night-hand-skin186.png",
    ΔⵠᐃⲆⲆΔⲆ: "img/day-hand-skin187.png",
    ΔⵠΔⲆⵠΔⲆ: "img/night-hand-skin187.png",
    ᐃΔⲆⵠΔⲆᐃ: "img/day-hand-skin188.png",
    ⵠⲆΔⲆⵠⵠΔ: "img/night-hand-skin188.png",
    ΔⲆΔΔΔᐃⲆ: "img/day-hand-skin189.png",
    ⲆⵠⵠΔⲆΔΔ: "img/night-hand-skin189.png",
    ⵠⲆⵠᐃᐃᐃⵠ: "img/day-hand-skin190.png",
    ⵠᐃΔⵠⵠᐃⵠ: "img/night-hand-skin190.png",
    ΔⵠⲆⵠⵠⵠⵠ: "img/day-hand-skin191.png",
    ⵠᐃᐃᐃᐃⲆⲆ: "img/night-hand-skin191.png",
    ⲆᐃⲆⲆⲆⲆⵠ: "img/day-hand-skin192.png",
    ⵠⲆᐃΔⵠΔᐃ: "img/night-hand-skin192.png",
    ΔⲆⲆΔⵠⲆⲆ: "img/day-hand-skin193.png",
    ᐃⵠᐃᐃΔᐃΔ: "img/night-hand-skin193.png",
    ⵠⲆⵠⲆΔᐃⲆ: "img/day-hand-skin194.png",
    ᐃᐃⵠᐃΔⲆᐃ: "img/night-hand-skin194.png",
    ⲆⲆᐃΔⲆⲆⲆ: "img/day-hand-skin195.png",
    ΔⵠⲆⵠⲆⵠΔ: "img/night-hand-skin195.png",
    ΔΔΔⵠⵠⲆᐃ: "img/day-hand-skin196.png",
    ⵠⵠᐃⵠⵠΔΔ: "img/night-hand-skin196.png",
    ⵠΔⲆⲆᐃᐃⵠ: "img/day-hand-skin197.png",
    ΔⵠᐃᐃⲆⵠΔ: "img/night-hand-skin197.png",
    ᐃᐃⵠⲆⲆⲆᐃ: "img/day-hand-skin198.png",
    ⲆΔⵠΔΔⲆΔ: "img/night-hand-skin198.png",
    ⲆⵠᐃΔⲆⲆⵠ: "img/day-hand-skin199.png",
    ⵠᐃΔⲆᐃⲆᐃ: "img/night-hand-skin199.png",
    ᐃΔⲆΔⲆΔΔ: "img/day-hand-skin200.png",
    ᐃⲆᐃⵠᐃᐃᐃ: "img/night-hand-skin200.png",
    ⵠΔⵠⵠⲆⵠᐃ: "img/day-hand-skin201.png",
    ᐃᐃᐃⵠᐃⲆⲆ: "img/night-hand-skin201.png",
    ᐃⵠᐃⵠⵠΔΔ: "img/day-hand-skin202.png",
    ⵠⲆᐃᐃᐃΔⵠ: "img/night-hand-skin202.png",
    ᐃᐃⵠⵠⲆⵠΔ: "img/day-hand-skin203.png",
    ΔⲆⲆⲆⲆⵠᐃ: "img/night-hand-skin203.png",
    ⲆᐃⲆⲆⵠᐃⵠ: "img/day-hand-skin204.png",
    ⲆⲆⵠΔⵠⲆᐃ: "img/night-hand-skin204.png",
    ⵠΔΔⲆⵠⵠΔ: "img/day-hand-skin205.png",
    ᐃΔᐃᐃⵠⲆⵠ: "img/night-hand-skin205.png",
    ⲆⲆΔΔⲆΔⵠ: "img/day-hand-skin206.png",
    ᐃⵠᐃΔΔⲆⲆ: "img/night-hand-skin206.png",
    ⲆᐃΔΔⵠΔΔ: "img/day-hand-skin207.png",
    ⵠΔᐃⵠⲆᐃᐃ: "img/night-hand-skin207.png",
    ᐃΔⲆⵠΔᐃᐃ: "img/day-hand-skin208.png",
    ΔΔᐃΔⲆᐃᐃ: "img/night-hand-skin208.png",
    ΔⲆΔⲆⵠⲆⵠ: "img/day-hand-skin209.png",
    ΔⲆⲆᐃⵠⲆΔ: "img/night-hand-skin209.png",
    ⵠᐃᐃⲆⵠᐃΔ: "img/day-hand-skin210.png",
    ΔᐃΔⵠⵠΔᐃ: "img/night-hand-skin210.png",
    ⵠⲆⲆⵠⵠⵠᐃ: "img/day-hand-skin211.png",
    ⵠⲆᐃᐃⵠᐃΔ: "img/night-hand-skin211.png",
    ᐃⲆⲆⵠΔᐃⲆ: "img/day-hand-skin212.png",
    ᐃⵠᐃΔⲆᐃⲆ: "img/night-hand-skin212.png",
    ⲆⵠⵠⲆᐃΔⵠ: "img/day-hand-skin213.png",
    ᐃΔΔⵠΔⲆΔ: "img/night-hand-skin213.png",
    ΔⵠΔⲆⵠⲆΔ: "img/day-hand-skin214.png",
    ΔᐃΔⵠⲆⲆᐃ: "img/night-hand-skin214.png",
    ⵠⵠᐃᐃᐃᐃⵠ: "img/day-hand-skin215.png",
    ⲆᐃⵠΔΔⲆⲆ: "img/night-hand-skin215.png",
    ᐃΔⲆⲆΔᐃⲆ: "img/day-hand-skin216.png",
    ᐃᐃΔⵠΔᐃⲆ: "img/night-hand-skin216.png",
    ⵠⵠΔⵠᐃⵠᐃ: "img/day-hand-skin217.png",
    ⵠΔᐃⲆⵠᐃⵠ: "img/night-hand-skin217.png",
    ⲆⵠᐃⲆⵠⲆⲆ: "img/day-hand-skin218.png",
    ⲆᐃⲆⵠⲆⵠⵠ: "img/night-hand-skin218.png",
    ⵠᐃⵠⲆⵠⵠᐃ: "img/day-hand-skin219.png",
    ⵠⲆᐃⵠᐃⲆᐃ: "img/night-hand-skin219.png",
    ⵠⵠΔᐃⵠⵠⲆ: "img/day-hand-skin220.png",
    ⵠΔᐃⵠᐃⲆⲆ: "img/night-hand-skin220.png",
    ΔⲆⲆΔⵠⲆᐃ: "img/day-hand-skin221.png",
    ⲆⵠΔᐃⵠⲆᐃ: "img/night-hand-skin221.png",
    ᐃΔⵠᐃⵠΔᐃ: "img/day-hand-skin222.png",
    ⲆⵠᐃⲆⲆⲆⲆ: "img/night-hand-skin222.png",
    ᐃᐃᐃⵠΔⲆᐃ: "img/day-hand-skin223.png",
    ᐃᐃⵠⲆᐃⲆΔ: "img/night-hand-skin223.png",
    ⲆⲆⵠⲆⵠⲆⵠ: "img/day-hand-skin224.png",
    ⲆⵠᐃⲆᐃΔᐃ: "img/night-hand-skin224.png",
    ⲆⲆᐃᐃΔΔⵠ: "img/day-hand-skin225.png",
    ΔⵠᐃⲆⲆⵠⲆ: "img/night-hand-skin225.png",
    ΔᐃⵠΔᐃΔᐃ: "img/day-hand-skin226.png",
    ⵠᐃⲆⵠⵠᐃⲆ: "img/night-hand-skin226.png",
    ΔⲆⵠΔΔΔΔ: "img/day-hand-skin227.png",
    ⲆᐃⵠⲆᐃⵠΔ: "img/night-hand-skin227.png",
    ᐃⲆΔⲆⲆⵠᐃ: "img/day-hand-skin228.png",
    ᐃΔΔⲆⵠΔΔ: "img/night-hand-skin228.png",
    ᐃⵠᐃⲆᐃⵠⵠ: "img/day-hand-skin229.png",
    ᐃⲆⲆⵠⵠⵠⵠ: "img/night-hand-skin229.png",
    ⵠᐃⵠᐃΔⵠⵠ: "img/day-hand-skin230.png",
    ᐃⵠⵠⲆⵠⵠΔ: "img/night-hand-skin230.png",
    ⲆⵠΔⲆⵠⵠᐃ: "img/day-hand-skin231.png",
    ⲆⲆᐃⵠⲆⲆⵠ: "img/night-hand-skin231.png",
    ΔΔⵠⲆΔⵠⵠ: "img/day-hand-skin232.png",
    ⵠⵠⵠΔᐃΔⵠ: "img/night-hand-skin232.png",
    ⵠⲆΔᐃⵠᐃⵠ: "img/day-hand-skin233.png",
    ᐃᐃΔⲆⲆᐃΔ: "img/night-hand-skin233.png",
    ⲆⲆⲆⲆⵠⲆⲆ: "img/day-hand-skin234.png",
    ⲆⵠᐃΔⲆᐃΔ: "img/night-hand-skin234.png",
    ⵠΔᐃⲆΔⲆⲆ: "img/day-hand-skin235.png",
    ⲆᐃΔⲆᐃⵠᐃ: "img/night-hand-skin235.png",
    ΔΔΔᐃⵠⵠⲆ: "img/day-hand-skin236.png",
    ΔΔΔⲆᐃⵠᐃ: "img/night-hand-skin236.png",
    ΔⲆⵠᐃΔⲆⲆ: "img/day-hand-skin237.png",
    ΔΔΔΔΔΔᐃ: "img/night-hand-skin237.png",
    ⵠⲆΔᐃᐃⲆΔ: "img/day-hand-skin238.png",
    ⵠⵠΔΔⲆᐃΔ: "img/night-hand-skin238.png",
    ⵠΔΔᐃⲆⵠⵠ: "img/day-hand-skin239.png",
    ᐃⵠᐃⲆΔⵠⲆ: "img/night-hand-skin239.png",
    ΔⵠᐃᐃᐃΔⵠ: "img/day-hand-skin240.png",
    ΔⲆᐃⵠⲆⲆᐃ: "img/night-hand-skin240.png",
    ⲆⵠⲆⵠⵠⲆΔ: "img/day-hand-skin241.png",
    ΔⲆᐃᐃⲆᐃΔ: "img/night-hand-skin241.png",
    ᐃΔᐃΔⵠΔⲆ: "img/day-hand-skin242.png",
    ᐃⲆⲆΔᐃΔᐃ: "img/night-hand-skin242.png",
    ΔᐃΔΔⵠⵠΔ: "img/day-hand-skin243.png",
    ΔΔᐃⲆⲆΔⲆ: "img/night-hand-skin243.png",
    ⲆⲆΔⵠᐃⵠΔ: "img/day-hand-skin244.png",
    ⲆⲆⵠΔⵠΔᐃ: "img/night-hand-skin244.png",
    ⲆⲆⵠⲆΔᐃᐃ: "img/day-hand-skin245.png",
    ΔᐃⵠΔᐃⵠⲆ: "img/night-hand-skin245.png",
    ΔΔΔΔⲆᐃᐃ: "img/day-hand-skin246.png",
    ⲆⵠⵠᐃᐃⵠΔ: "img/night-hand-skin246.png",
    ᐃΔᐃᐃᐃΔᐃ: "img/day-bag-star0.png",
    ᐃΔⵠⲆᐃⲆⵠ: "img/night-bag-star0.png",
    ᐃⵠᐃΔⲆⵠⵠ: "img/day-bag0.png",
    ΔΔⲆΔΔⵠΔ: "img/night-bag0.png",
    ⲆⵠᐃΔⵠᐃΔ: "img/day-bag1.png",
    ⲆⲆΔⲆᐃΔΔ: "img/night-bag1.png",
    ⲆᐃⵠᐃⲆⵠᐃ: "img/day-bag2.png",
    ⵠᐃΔⵠⵠΔᐃ: "img/night-bag2.png",
    ᐃΔⵠᐃⲆⲆⵠ: "img/day-bag3.png",
    ΔᐃⲆⵠΔΔᐃ: "img/night-bag3.png",
    ⵠⵠⵠΔᐃⵠⲆ: "img/day-bag4.png",
    ᐃΔⲆⵠⲆⵠΔ: "img/night-bag4.png",
    ⵠⵠⵠᐃΔΔⲆ: "img/day-bag5.png",
    ᐃⵠⲆᐃⲆⵠΔ: "img/night-bag5.png",
    ⵠⲆⵠⲆᐃΔΔ: "img/day-bag6.png",
    ΔⵠΔⲆᐃᐃⲆ: "img/night-bag6.png",
    ⵠⲆⲆⵠⵠⲆΔ: "img/day-bag7.png",
    ⲆⵠΔⲆΔⲆᐃ: "img/night-bag7.png",
    ⵠⵠⵠᐃᐃⲆⵠ: "img/day-bag8.png",
    ΔⲆⲆΔⵠⲆⵠ: "img/night-bag8.png",
    ⲆⲆⲆⲆᐃⲆⵠ: "img/day-bag9.png",
    ⵠⵠᐃᐃᐃΔΔ: "img/night-bag9.png",
    ⲆΔΔⵠΔᐃⵠ: "img/day-bag10.png",
    ⲆⲆⵠΔᐃΔⲆ: "img/night-bag10.png",
    ⵠᐃΔᐃᐃⲆΔ: "img/day-bag11.png",
    ᐃⵠⲆΔᐃⲆⵠ: "img/night-bag11.png",
    ΔⵠᐃⲆⲆⲆⵠ: "img/day-bag13.png",
    ΔΔᐃΔⵠⵠⲆ: "img/night-bag13.png",
    ΔⲆⲆⵠⲆΔΔ: "img/day-bag14.png",
    ⲆⲆΔⲆΔΔⵠ: "img/night-bag14.png",
    ᐃⲆⵠⲆΔⵠᐃ: "img/day-bag16.png",
    ⵠᐃᐃᐃΔΔⵠ: "img/night-bag16.png",
    ᐃⵠⵠⲆⲆⵠⵠ: "img/day-bag17.png",
    ⲆᐃⲆⲆⲆΔΔ: "img/night-bag17.png",
    ⲆΔΔⲆᐃᐃᐃ: "img/day-bag18.png",
    ᐃΔⵠⲆᐃⵠⵠ: "img/night-bag18.png",
    ⲆΔⲆⲆⲆⵠᐃ: "img/day-bag19.png",
    ΔΔᐃⵠⵠⵠᐃ: "img/night-bag19.png",
    ᐃᐃⲆⵠᐃⵠⵠ: "img/day-bag20.png",
    ⲆⵠⲆⵠⲆⵠᐃ: "img/night-bag20.png",
    ⲆⵠᐃᐃⵠΔΔ: "img/day-bag21.png",
    ⲆⵠⲆᐃⵠⵠᐃ: "img/night-bag21.png",
    ⲆⵠⵠΔⲆΔᐃ: "img/day-bag22.png",
    ⵠⵠΔΔᐃⵠᐃ: "img/night-bag22.png",
    ΔΔΔΔⵠᐃΔ: "img/day-bag23.png",
    ⵠⵠᐃⲆⵠⲆΔ: "img/night-bag23.png",
    ᐃⲆⵠΔᐃⵠⵠ: "img/day-bag24.png",
    ⲆΔⲆⲆⲆⲆΔ: "img/night-bag24.png",
    ⲆⵠᐃⲆⵠⵠⵠ: "img/day-bag25.png",
    ⲆⵠᐃⲆᐃΔⵠ: "img/night-bag25.png",
    ⵠⵠᐃᐃⵠⵠⲆ: "img/day-bag26.png",
    ᐃᐃᐃⲆⵠᐃΔ: "img/night-bag26.png",
    ⲆⲆᐃᐃᐃⵠΔ: "img/day-bag27.png",
    ᐃΔⲆΔᐃⲆᐃ: "img/night-bag27.png",
    ΔᐃⵠΔⲆⵠᐃ: "img/day-bag28.png",
    ⲆⵠᐃⲆⵠᐃⵠ: "img/night-bag28.png",
    ΔᐃΔⵠΔⵠⵠ: "img/day-bag29.png",
    ⲆᐃⵠᐃⵠⲆΔ: "img/night-bag29.png",
    ΔᐃᐃᐃⵠⵠΔ: "img/day-bag30.png",
    ⲆⲆᐃⵠᐃᐃᐃ: "img/night-bag30.png",
    ΔΔⲆⵠⵠⲆᐃ: "img/day-bag31.png",
    ⲆⵠᐃⲆΔᐃⲆ: "img/night-bag31.png",
    ⲆⵠᐃᐃᐃⲆᐃ: "img/day-bag32.png",
    ⵠⲆᐃⲆΔΔⵠ: "img/night-bag32.png",
    ⵠΔΔΔΔⲆΔ: "img/day-bag33.png",
    ᐃⲆΔⲆⵠⲆⵠ: "img/night-bag33.png",
    ΔⲆⲆⲆⵠᐃⵠ: "img/day-bag34.png",
    ⲆⵠⲆᐃᐃⵠᐃ: "img/night-bag34.png",
    ⲆⵠΔΔⵠᐃᐃ: "img/day-bag35.png",
    ⵠⵠᐃᐃᐃⵠΔ: "img/night-bag35.png",
    ΔⵠᐃᐃⵠⲆⵠ: "img/day-bag36.png",
    ΔᐃΔⵠⲆⵠⲆ: "img/night-bag36.png",
    ⲆⵠᐃᐃⲆⲆᐃ: "img/day-bag37.png",
    ⵠⵠᐃⲆⵠᐃᐃ: "img/night-bag37.png",
    ᐃᐃΔᐃⲆΔΔ: "img/day-bag38.png",
    ΔΔⲆΔⵠᐃⲆ: "img/night-bag38.png",
    ⲆⲆⲆⲆⵠᐃⲆ: "img/day-bag39.png",
    ⲆΔⵠⵠᐃⵠᐃ: "img/night-bag39.png",
    ᐃⲆΔⲆΔⲆⵠ: "img/day-bag40.png",
    ΔⲆΔⵠᐃⲆⵠ: "img/night-bag40.png",
    ⵠᐃᐃⵠᐃⵠᐃ: "img/day-bag41.png",
    ΔΔΔᐃΔᐃⲆ: "img/night-bag41.png",
    ⲆᐃΔⵠⲆⲆᐃ: "img/day-bag42.png",
    ᐃᐃΔᐃΔᐃⵠ: "img/night-bag42.png",
    ⵠᐃΔᐃⲆⲆΔ: "img/day-bag43.png",
    ⲆΔⵠⵠⵠⲆΔ: "img/night-bag43.png",
    ⲆⲆⵠΔᐃΔⵠ: "img/day-bag44.png",
    ΔⵠΔᐃᐃΔⲆ: "img/night-bag44.png",
    ⲆⲆΔⵠⵠᐃΔ: "img/day-bag45.png",
    ΔⲆᐃⵠⵠΔᐃ: "img/night-bag45.png",
    ΔⵠΔᐃΔⵠⲆ: "img/day-bag46.png",
    ΔᐃΔⵠⲆⲆⵠ: "img/night-bag46.png",
    ⵠⵠⵠⵠⲆΔⲆ: "img/day-bag47.png",
    ᐃⲆΔⵠΔΔⲆ: "img/night-bag47.png",
    ᐃⲆᐃⵠⵠΔⲆ: "img/day-bag48.png",
    ⲆᐃⵠᐃΔⲆⲆ: "img/night-bag48.png",
    ⲆⵠΔΔⲆⵠᐃ: "img/day-bag49.png",
    ᐃᐃΔΔⵠᐃⲆ: "img/night-bag49.png",
    ΔⵠⵠⵠⲆⵠᐃ: "img/day-bag50.png",
    ⲆⵠᐃⲆⵠᐃⲆ: "img/night-bag50.png",
    ᐃᐃⵠⲆΔⲆⲆ: "img/day-bag51.png",
    ⲆⲆΔⲆᐃⲆⵠ: "img/night-bag51.png",
    ⲆᐃⲆΔⵠᐃᐃ: "img/day-bag52.png",
    ⲆΔⵠΔᐃⵠΔ: "img/night-bag52.png",
    ᐃⲆᐃⲆᐃᐃᐃ: "img/day-bag53.png",
    ⲆⲆΔⲆⲆᐃⲆ: "img/night-bag53.png",
    ⲆᐃⲆᐃⵠᐃΔ: "img/day-bag54.png",
    ⲆᐃⲆⵠⲆⲆᐃ: "img/night-bag54.png",
    ΔᐃΔⲆΔᐃⲆ: "img/day-bag55.png",
    ᐃⲆᐃⲆⵠⵠⲆ: "img/night-bag55.png",
    ΔᐃⵠᐃΔᐃΔ: "img/day-bag56.png",
    ⵠΔⲆΔᐃⵠᐃ: "img/night-bag56.png",
    ΔᐃᐃΔⵠᐃⵠ: "img/day-bag57.png",
    ᐃⲆⵠΔⲆⵠΔ: "img/night-bag57.png",
    ⵠΔⲆⵠᐃᐃⲆ: "img/day-bag58.png",
    ᐃᐃᐃΔⵠⲆⲆ: "img/night-bag58.png",
    ⵠᐃⲆⵠⲆⲆⲆ: "img/day-bag59.png",
    ⲆⲆᐃⵠⲆΔᐃ: "img/night-bag59.png",
    ⲆⵠⲆⲆⵠΔΔ: "img/day-bag60.png",
    ΔⵠⲆᐃⵠⵠΔ: "img/night-bag60.png",
    ⵠⲆᐃΔⲆᐃⲆ: "img/day-bag61.png",
    ⵠᐃⲆΔⵠⵠᐃ: "img/night-bag61.png",
    ⲆⲆⵠⵠᐃⵠⲆ: "img/day-bag62.png",
    ᐃⲆΔⵠΔⲆΔ: "img/night-bag62.png",
    ᐃⲆᐃⵠΔΔᐃ: "img/day-bag63.png",
    ⵠⵠⲆⲆΔⵠⵠ: "img/night-bag63.png",
    ⵠᐃΔⵠΔⲆΔ: "img/day-bag64.png",
    ΔΔᐃΔᐃⲆᐃ: "img/night-bag64.png",
    ᐃⵠⵠᐃⲆᐃⲆ: "img/day-bag65.png",
    ⲆΔⲆⲆΔΔΔ: "img/night-bag65.png",
    ᐃⵠᐃⲆᐃⵠΔ: "img/day-bag66.png",
    ΔΔⲆⲆᐃⲆᐃ: "img/night-bag66.png",
    ⵠⵠᐃᐃⲆΔⲆ: "img/day-bag67.png",
    ⲆΔᐃⵠΔⲆⵠ: "img/night-bag67.png",
    ⵠᐃⲆΔⲆⵠΔ: "img/day-bag68.png",
    ᐃⵠⲆΔⲆⵠΔ: "img/night-bag68.png",
    ΔᐃᐃⲆΔⲆⲆ: "img/day-bag69.png",
    ΔⵠᐃᐃΔⲆΔ: "img/night-bag69.png",
    ⵠⲆⵠᐃⵠΔᐃ: "img/day-bag70.png",
    ΔᐃⵠⲆᐃⲆⲆ: "img/night-bag70.png",
    ΔᐃⲆᐃᐃⵠⲆ: "img/day-bag71.png",
    ⲆⵠⵠᐃᐃⵠⲆ: "img/night-bag71.png",
    ΔⲆⲆΔᐃΔΔ: "img/day-bag72.png",
    ᐃΔᐃⲆᐃⵠⲆ: "img/night-bag72.png",
    Δᐃⵠᐃⵠⵠⵠ: "img/day-bag73.png",
    ⵠΔᐃⲆⲆΔᐃ: "img/night-bag73.png",
    ΔΔᐃⵠⲆⲆⵠ: "img/day-bag74.png",
    ⵠⲆⲆΔⵠⲆⵠ: "img/night-bag74.png",
    ΔΔⲆᐃⵠΔᐃ: "img/day-bag75.png",
    ΔΔⲆⵠⲆΔᐃ: "img/night-bag75.png",
    ⵠᐃⵠⵠΔⵠᐃ: "img/day-bag76.png",
    ΔⲆⵠⵠΔᐃᐃ: "img/night-bag76.png",
    ᐃΔᐃᐃᐃⵠⵠ: "img/day-bag77.png",
    ⵠⲆᐃⲆⵠⵠΔ: "img/night-bag77.png",
    ᐃⵠⵠⲆΔᐃᐃ: "img/day-bag78.png",
    ⲆⲆᐃⵠⵠᐃΔ: "img/night-bag78.png",
    ⵠⲆᐃΔⲆΔΔ: "img/day-bag79.png",
    ΔᐃΔᐃⲆΔⲆ: "img/night-bag79.png",
    ⲆⲆΔⲆΔᐃΔ: "img/day-bag80.png",
    ⲆᐃᐃΔⲆΔᐃ: "img/night-bag80.png",
    ⲆΔΔⲆⲆΔⵠ: "img/day-accessory0.png",
    ⲆᐃᐃΔΔΔΔ: "img/day-accessory0-pacques.png",
    ᐃᐃⲆᐃⵠᐃᐃ: "img/night-accessory0-pacques.png",
    ⲆᐃⵠᐃᐃᐃⲆ: "img/day-accessory13.png",
    ᐃⲆⵠᐃΔΔⲆ: "img/night-accessory13.png",
    ΔⲆⲆⵠⵠᐃⲆ: "img/day-accessory14.png",
    ⵠᐃⲆᐃⵠΔⵠ: "img/night-accessory14.png",
    ΔⲆᐃⲆᐃⵠᐃ: "img/day-accessory15.png",
    ΔᐃⲆⵠⵠⲆⲆ: "img/night-accessory15.png",
    ⲆⵠⵠⲆⲆⵠⵠ: "img/day-accessory16.png",
    ⲆΔᐃⵠᐃΔΔ: "img/night-accessory16.png",
    ⲆᐃⲆⲆᐃΔΔ: "img/day-accessory17.png",
    ΔⵠΔⲆⲆᐃᐃ: "img/day-accessory17.png",
    ΔⲆⵠΔⵠΔΔ: "img/day-accessory19.png",
    ᐃᐃⵠᐃⲆⵠⲆ: "img/night-accessory19.png",
    ⲆⲆΔⲆΔᐃⲆ: "img/day-accessory20.png",
    ΔΔΔΔΔⲆⲆ: "img/night-accessory20.png",
    ⵠᐃᐃᐃⲆΔᐃ: "img/day-accessory21.png",
    ΔΔⲆⲆΔᐃΔ: "img/night-accessory21.png",
    Ⲇᐃⵠⵠⵠᐃⵠ: "img/day-accessory22.png",
    ΔⵠⲆⲆⵠᐃⵠ: "img/night-accessory22.png",
    ⵠⵠⵠⵠⵠᐃᐃ: "img/day-accessory23.png",
    ΔᐃⵠᐃᐃᐃⲆ: "img/night-accessory23.png",
    ΔⵠⲆΔⵠⲆᐃ: "img/day-accessory24.png",
    Δᐃᐃⵠᐃⵠᐃ: "img/night-accessory24.png",
    ⲆΔᐃΔⵠᐃⲆ: "img/day-accessory25.png",
    ᐃᐃΔⵠΔⲆⲆ: "img/night-accessory25.png",
    ΔᐃᐃⲆᐃΔΔ: "img/day-accessory26.png",
    ΔᐃⵠⲆᐃᐃⵠ: "img/night-accessory26.png",
    ⵠΔᐃΔⵠΔΔ: "img/day-accessory27.png",
    ⲆᐃᐃΔᐃⲆⵠ: "img/night-accessory27.png",
    ΔⵠⵠⵠΔⵠᐃ: "img/day-accessory18.png",
    ⲆΔΔΔᐃⲆⵠ: "img/night-accessory18.png",
    ΔⲆᐃⵠᐃΔⵠ: "img/day-accessory29.png",
    ΔᐃⲆⵠⲆⵠΔ: "img/night-accessory29.png",
    ⲆᐃⵠⲆΔᐃⲆ: "img/day-accessory30.png",
    ⵠᐃⵠⵠⲆᐃⲆ: "img/night-accessory30.png",
    ᐃⲆⵠⵠΔⵠΔ: "img/day-accessory31.png",
    ᐃᐃᐃΔⵠΔΔ: "img/night-accessory31.png",
    ⲆⲆΔΔⵠⵠⲆ: "img/day-accessory32.png",
    ⵠⵠΔᐃΔΔᐃ: "img/night-accessory32.png",
    ⲆᐃⲆⵠᐃⵠⵠ: "img/day-accessory33.png",
    ΔⵠᐃⵠᐃΔᐃ: "img/night-accessory33.png",
    ΔᐃΔⵠᐃᐃⵠ: "img/day-accessory34.png",
    ⵠⵠⲆᐃᐃⵠΔ: "img/night-accessory34.png",
    ⵠⵠⵠⲆⲆᐃᐃ: "img/day-accessory35.png",
    ⵠⵠⵠᐃⲆΔⵠ: "img/night-accessory35.png",
    ᐃⵠⲆⲆⵠΔΔ: "img/day-accessory28.png",
    ⵠⲆΔⵠⲆⲆᐃ: "img/night-accessory28.png",
    ⲆⵠⵠᐃᐃΔⲆ: "img/day-accessory36.png",
    ΔⲆᐃⵠⲆⵠΔ: "img/night-accessory36.png",
    ΔᐃΔᐃⵠΔⲆ: "img/day-accessory37.png",
    ᐃⲆΔΔᐃⲆᐃ: "img/night-accessory37.png",
    ⵠⵠⲆᐃᐃΔΔ: "img/day-accessory39.png",
    ᐃΔΔΔⲆΔΔ: "img/night-accessory39.png",
    ΔⵠΔⲆⵠᐃᐃ: "img/day-accessory40.png",
    ᐃⵠᐃⵠᐃⲆΔ: "img/night-accessory40.png",
    ᐃⲆⵠᐃⵠᐃᐃ: "img/day-accessory41.png",
    ⲆⲆⵠᐃⲆΔᐃ: "img/night-accessory41.png",
    ⲆⵠⵠⲆᐃⲆΔ: "img/day-accessory42.png",
    ᐃⵠΔⲆΔⵠⵠ: "img/night-accessory42.png",
    ᐃⵠᐃⵠᐃᐃΔ: "img/day-accessory43.png",
    ᐃΔᐃⵠⲆⲆⵠ: "img/night-accessory43.png",
    ⵠᐃᐃᐃⲆⲆΔ: "img/day-accessory44.png",
    ⵠΔΔΔⲆⵠⲆ: "img/night-accessory44.png",
    ⵠΔⵠⲆⵠⲆⲆ: "img/day-accessory38.png",
    ΔⲆⲆΔΔΔⲆ: "img/night-accessory38.png",
    ⵠᐃⲆΔΔᐃⵠ: "img/day-accessory46.png",
    ⵠΔⵠⲆⲆΔⵠ: "img/night-accessory46.png",
    ΔᐃⲆΔᐃᐃᐃ: "img/day-accessory47.png",
    ⲆᐃᐃⵠⵠΔᐃ: "img/night-accessory47.png",
    ᐃᐃᐃⵠᐃΔⵠ: "img/day-accessory48.png",
    ⲆΔⲆΔᐃᐃᐃ: "img/night-accessory48.png",
    ⵠⵠⲆΔⲆⲆⵠ: "img/day-accessory49.png",
    ΔᐃⵠΔⵠᐃΔ: "img/night-accessory49.png",
    ⵠᐃⲆΔΔⵠᐃ: "img/day-accessory45.png",
    ⵠΔⲆΔⲆΔⲆ: "img/night-accessory45.png",
    ⲆᐃⵠⲆⵠΔᐃ: "img/day-accessory50.png",
    ᐃΔⵠᐃⲆᐃᐃ: "img/night-accessory50.png",
    ΔⵠⲆⵠΔΔⵠ: "img/day-accessory51.png",
    ᐃᐃⲆⵠⵠᐃⲆ: "img/night-accessory51.png",
    ᐃⵠΔᐃⵠⲆᐃ: "img/day-accessory52.png",
    ⵠⵠⵠⵠⲆⲆⵠ: "img/night-accessory52.png",
    ᐃᐃΔⵠᐃᐃⵠ: "img/day-accessory53.png",
    ⲆⲆᐃᐃⲆⵠΔ: "img/night-accessory53.png",
    ᐃⲆᐃⲆⵠⵠΔ: "img/day-accessory54.png",
    ⵠᐃᐃⲆΔᐃⵠ: "img/night-accessory54.png",
    ⵠᐃⵠⵠᐃΔΔ: "img/day-accessory55.png",
    ΔⵠᐃⵠⵠⲆᐃ: "img/night-accessory55.png",
    ⲆᐃⲆΔⵠⵠΔ: "img/day-accessory56.png",
    ⲆⵠⲆⲆⵠᐃⵠ: "img/night-accessory56.png",
    ⲆΔⵠΔΔᐃⵠ: "img/day-accessory57.png",
    ⵠⲆⵠΔⲆΔΔ: "img/night-accessory57.png",
    ΔΔᐃⲆⲆΔⵠ: "img/day-accessory58.png",
    ⵠᐃⲆΔⲆΔᐃ: "img/night-accessory58.png",
    ᐃⲆⵠⵠⲆΔΔ: "img/day-accessory59.png",
    ⵠⲆⵠᐃⲆᐃᐃ: "img/night-accessory59.png",
    ⵠⵠⲆᐃᐃᐃⵠ: "img/day-accessory60.png",
    ᐃⵠΔΔⲆⲆⵠ: "img/night-accessory60.png",
    ⵠΔΔⲆᐃⲆⵠ: "img/day-accessory61.png",
    ᐃⲆᐃⲆⵠᐃⲆ: "img/night-accessory61.png",
    ⵠᐃⲆΔⲆΔⲆ: "img/day-accessory62.png",
    ΔⲆⵠΔⲆᐃΔ: "img/night-accessory62.png",
    ⵠⵠⵠⲆⲆΔⲆ: "img/day-accessory63.png",
    ⵠΔᐃⲆⵠⵠⲆ: "img/night-accessory63.png",
    ⲆⵠⵠᐃΔΔᐃ: "img/day-accessory64.png",
    ΔᐃᐃΔⵠⲆΔ: "img/night-accessory64.png",
    ⵠΔᐃⵠⲆⵠⲆ: "img/day-accessory65.png",
    ΔⲆⵠⲆΔΔᐃ: "img/night-accessory65.png",
    ᐃᐃⲆⵠΔⵠᐃ: "img/day-accessory66.png",
    ᐃⲆⲆⲆⵠⵠᐃ: "img/night-accessory66.png",
    ᐃⲆᐃᐃΔΔᐃ: "img/day-accessory67.png",
    ᐃⲆᐃⲆΔᐃΔ: "img/night-accessory67.png",
    ⲆⵠᐃᐃᐃⲆⵠ: "img/day-accessory68.png",
    ⲆⵠⵠᐃⲆΔΔ: "img/night-accessory68.png",
    ⲆΔⲆΔΔⲆⵠ: "img/day-accessory69.png",
    ΔⵠΔᐃⵠⵠⵠ: "img/night-accessory69.png",
    ⲆⵠΔⲆⵠΔⵠ: "img/day-accessory70.png",
    ᐃΔΔⲆΔⵠᐃ: "img/night-accessory70.png",
    ⵠᐃΔⵠᐃᐃᐃ: "img/day-accessory71.png",
    ΔⲆᐃΔⲆᐃᐃ: "img/night-accessory71.png",
    ⵠⵠΔⲆΔᐃΔ: "img/day-accessory72.png",
    ᐃΔᐃⵠⲆⲆᐃ: "img/night-accessory72.png",
    ⵠⵠᐃᐃᐃᐃᐃ: "img/day-accessory73.png",
    ⵠⵠΔⲆΔⲆΔ: "img/night-accessory73.png",
    ΔⵠΔᐃΔⲆΔ: "img/day-accessory74.png",
    ΔⵠⲆᐃⵠΔΔ: "img/night-accessory74.png",
    ᐃᐃᐃⵠᐃΔΔ: "img/day-accessory75.png",
    ᐃᐃⵠΔⵠⵠⲆ: "img/night-accessory75.png",
    ⵠΔΔⵠΔΔᐃ: "img/day-accessory76.png",
    ⲆᐃΔⲆᐃⲆⵠ: "img/night-accessory76.png",
    ᐃᐃⲆᐃⲆⵠⲆ: "img/day-accessory77.png",
    ⵠⲆΔᐃᐃⵠⵠ: "img/night-accessory77.png",
    ⵠΔᐃⵠⵠᐃᐃ: "img/day-accessory78.png",
    ⲆᐃΔⲆᐃⵠⲆ: "img/night-accessory78.png",
    ᐃⲆⲆΔΔΔΔ: "img/day-accessory79.png",
    ΔΔΔⲆⵠᐃⲆ: "img/night-accessory79.png",
    ᐃⲆⲆᐃᐃΔΔ: "img/day-accessory80.png",
    ⲆΔᐃⲆᐃΔᐃ: "img/night-accessory80.png",
    ⵠΔΔⵠⲆΔⲆ: "img/day-accessory81.png",
    ⲆⵠᐃⲆⵠⲆⵠ: "img/night-accessory81.png",
    ⲆᐃⲆΔᐃⵠⵠ: "img/day-accessory83.png",
    ⵠⲆᐃⲆⲆᐃⵠ: "img/night-accessory83.png",
    ⲆⵠᐃᐃⵠᐃΔ: "img/day-accessory84.png",
    ᐃᐃᐃᐃᐃⵠⵠ: "img/night-accessory84.png",
    ΔᐃᐃⲆⲆⲆᐃ: "img/day-accessory85.png",
    ᐃⵠⵠⵠᐃΔᐃ: "img/night-accessory85.png",
    ΔⲆᐃΔⵠΔᐃ: "img/day-accessory86.png",
    ⵠⵠᐃⵠⵠᐃⲆ: "img/night-accessory86.png",
    ⵠⲆⵠΔΔᐃⲆ: "img/day-accessory87.png",
    ᐃᐃΔᐃᐃⲆΔ: "img/night-accessory87.png",
    ⵠᐃⲆⲆⵠᐃΔ: "img/day-accessory88.png",
    ⵠⵠΔⲆⲆⲆⵠ: "img/night-accessory88.png",
    ⵠᐃⵠᐃΔᐃⲆ: "img/day-accessory89.png",
    ᐃΔⲆⵠⲆⲆᐃ: "img/night-accessory89.png",
    ⵠⲆⵠⲆΔΔᐃ: "img/day-accessory90.png",
    ⵠΔⵠᐃᐃᐃⲆ: "img/night-accessory90.png",
    ΔⵠⵠᐃⲆⵠⲆ: "img/day-accessory91.png",
    ᐃⲆᐃΔΔΔⲆ: "img/night-accessory91.png",
    ⲆΔΔΔᐃⵠⵠ: "img/day-accessory92.png",
    ⲆⲆⲆΔⵠⵠⵠ: "img/night-accessory92.png",
    ΔⵠⵠΔᐃΔᐃ: "img/day-accessory93.png",
    ⲆΔⲆΔⵠᐃᐃ: "img/night-accessory93.png",
    ΔᐃⲆΔΔᐃⵠ: "img/day-accessory94.png",
    ⲆⲆΔᐃᐃΔΔ: "img/night-accessory94.png",
    ᐃᐃᐃⲆᐃΔΔ: "img/day-accessory95.png",
    ⲆΔⵠⲆⵠⲆΔ: "img/night-accessory95.png",
    ᐃΔⲆΔⲆᐃⵠ: "img/day-accessory96.png",
    ᐃΔᐃᐃΔⵠΔ: "img/night-accessory96.png",
    ΔᐃⵠΔⲆΔΔ: "img/day-accessory97.png",
    ⵠⵠᐃⲆᐃᐃΔ: "img/night-accessory97.png",
    ⵠΔᐃⵠⵠⲆᐃ: "img/day-accessory98.png",
    ⵠᐃΔⵠⵠⲆᐃ: "img/night-accessory98.png",
    ᐃΔⲆⲆⲆᐃᐃ: "img/day-accessory99.png",
    ⵠⲆⵠⲆᐃᐃΔ: "img/night-accessory99.png",
    ΔⲆⲆⵠⲆⵠⲆ: "img/day-accessory100.png",
    ⵠⵠⵠⵠΔⲆⲆ: "img/night-accessory100.png",
    ΔΔⵠⵠⲆⲆᐃ: "img/day-accessory101.png",
    ⵠᐃΔⲆᐃⲆΔ: "img/night-accessory101.png",
    ᐃⲆΔⲆᐃΔᐃ: "img/day-accessory102.png",
    ᐃᐃᐃⵠⵠᐃⲆ: "img/night-accessory102.png",
    ᐃΔᐃᐃᐃᐃⵠ: "img/day-accessory103.png",
    ΔΔΔᐃΔⵠᐃ: "img/night-accessory103.png",
    ΔᐃΔⲆⲆⲆΔ: "img/day-accessory104.png",
    ⵠΔΔⵠΔⲆⵠ: "img/night-accessory104.png",
    ΔⲆΔΔᐃᐃᐃ: "img/day-accessory105.png",
    ᐃᐃⲆᐃⵠⲆⲆ: "img/night-accessory105.png",
    ΔⲆᐃᐃΔΔΔᐃⲆ: "img/day-accessory106.png",
    ⵠΔⵠΔΔⵠⵠΔΔ: "img/night-accessory106.png",
    ᐃⲆⵠΔΔⵠⲆⲆᐃ: "img/day-accessory107.png",
    ⲆᐃᐃⵠΔⵠⵠᐃΔ: "img/night-accessory107.png",
    ΔⵠⲆᐃΔⵠΔ: "img/day-accessory82.png",
    ⵠᐃⲆᐃᐃⲆΔ: "img/night-accessory82.png",
    ΔⲆⵠⲆⵠᐃΔ: "img/day-accessory108.png",
    ⲆᐃΔⵠᐃⲆΔ: "img/night-accessory108.png",
    ΔⵠΔⲆⲆⵠΔ: "img/day-accessory109.png",
    ᐃΔⲆᐃⲆᐃⵠ: "img/night-accessory109.png",
    ⵠⲆⵠⵠΔᐃΔ: "img/day-book0.png",
    ⲆΔⲆΔⵠΔⲆ: "img/night-book0.png",
    ⵠᐃⵠΔᐃⲆⵠ: "img/day-book1.png",
    ΔΔΔⲆⵠⵠᐃ: "img/night-book1.png",
    ᐃⵠⵠᐃᐃᐃⲆ: "img/day-book2.png",
    ᐃᐃⵠᐃᐃⵠⵠ: "img/night-book2.png",
    ᐃΔⵠⵠⲆᐃᐃ: "img/day-book3.png",
    ΔⵠⵠΔⲆᐃᐃ: "img/night-book3.png",
    ᐃⲆΔⵠΔⵠᐃ: "img/day-book4.png",
    ΔⲆⵠⲆⵠΔᐃ: "img/night-book4.png",
    ⲆΔⵠⲆΔᐃᐃ: "img/day-book5.png",
    ᐃⵠᐃᐃΔΔΔ: "img/night-book5.png",
    ⲆᐃⵠᐃᐃⵠΔ: "img/day-book6.png",
    ⵠΔⵠΔᐃⵠⲆ: "img/night-book6.png",
    ⲆⲆⵠΔᐃΔᐃ: "img/day-book7.png",
    ⲆΔⵠⲆᐃⵠⲆ: "img/night-book7.png",
    ᐃΔⵠⵠⵠΔᐃ: "img/day-book8.png",
    ⵠⵠⲆⲆΔⲆⲆ: "img/night-book8.png",
    ⵠΔᐃᐃⵠᐃⲆ: "img/day-book9.png",
    ΔΔᐃᐃⵠΔᐃ: "img/night-book9.png",
    ᐃⵠΔᐃⲆⵠΔ: "img/day-book10.png",
    ⲆⵠⲆΔⵠⵠⲆ: "img/night-book10.png",
    ⲆΔⵠΔᐃΔΔ: "img/day-book11.png",
    ᐃⲆᐃΔᐃᐃᐃ: "img/night-book11.png",
    ⵠΔⲆᐃΔΔΔ: "img/day-book12.png",
    ᐃᐃⵠᐃⲆⵠΔ: "img/night-book12.png",
    ⵠΔⵠΔⵠⲆΔ: "img/day-book13.png",
    ⲆΔΔΔΔⲆᐃ: "img/night-book13.png",
    ΔᐃΔⲆᐃⵠⲆ: "img/day-book14.png",
    ⲆᐃⵠᐃᐃⲆⵠ: "img/night-book14.png",
    ⵠΔᐃᐃⲆᐃⲆ: "img/day-book15.png",
    ⵠⵠⵠⵠⲆⵠᐃ: "img/night-book15.png",
    ΔⲆⵠΔΔⲆᐃ: "img/day-book16.png",
    ⵠΔΔⵠΔⲆⲆ: "img/night-book16.png",
    ΔᐃᐃᐃⲆⵠⵠ: "img/day-book17.png",
    ⲆⲆⲆΔⵠⵠⲆ: "img/night-book17.png",
    ΔΔᐃⵠⵠⲆΔ: "img/day-book18.png",
    ⵠᐃΔΔⲆⲆⵠ: "img/night-book18.png",
    ΔᐃΔᐃⵠᐃᐃ: "img/day-book19.png",
    ⵠΔⲆⵠΔⲆⵠ: "img/night-book19.png",
    ⵠⲆⲆΔᐃΔⵠ: "img/day-book20.png",
    ᐃΔᐃᐃΔΔΔ: "img/night-book20.png",
    ᐃⲆⵠⵠᐃⵠΔ: "img/day-book21.png",
    ΔⵠᐃⲆⵠΔⵠ: "img/night-book21.png",
    ᐃᐃᐃᐃⵠΔᐃ: "img/day-book22.png",
    ΔᐃᐃⲆΔⲆⵠ: "img/night-book22.png",
    ᐃⲆⲆⲆⲆⵠΔ: "img/day-book23.png",
    ᐃΔΔᐃΔⵠⵠ: "img/night-book23.png",
    ΔᐃᐃⵠΔΔⵠ: "img/day-book24.png",
    ⵠⵠⲆΔΔⲆᐃ: "img/night-book24.png",
    ᐃⵠⲆⲆᐃΔΔ: "img/day-book25.png",
    ΔⲆᐃΔⲆΔⵠ: "img/night-book25.png",
    ⵠΔⲆΔⲆΔᐃ: "img/day-book26.png",
    ⵠᐃⲆⵠᐃᐃⲆ: "img/night-book26.png",
    ᐃᐃᐃΔᐃᐃⵠ: "img/day-book27.png",
    ΔⵠΔᐃᐃᐃⲆ: "img/night-book27.png",
    ⲆⵠⲆⲆⲆΔΔ: "img/day-book28.png",
    ⵠⵠΔⵠⵠⵠⲆ: "img/night-book28.png",
    ΔΔⲆΔⲆⵠΔ: "img/day-book29.png",
    ΔΔΔΔᐃⲆⵠΔΔ: "img/night-book29.png",
    ᐃⲆⵠⵠⲆⲆⲆⲆᐃ: "img/day-book30.png",
    ΔΔΔᐃᐃⲆΔⲆⵠ: "img/night-book30.png",
    ΔⵠⲆⲆⵠᐃⵠⲆΔ: "img/day-book31.png",
    ⵠⲆΔΔⵠⵠⲆᐃΔ: "img/night-book31.png",
    ᐃⵠⵠⲆᐃᐃΔΔΔ: "img/day-book32.png",
    ΔᐃⵠΔⲆⵠⲆΔⵠ: "img/night-book32.png",
    ⵠᐃᐃⲆΔⵠⲆⵠᐃ: "img/day-book33.png",
    ΔΔΔᐃΔᐃⵠᐃⲆ: "img/night-book33.png",
    ΔⵠⵠᐃⵠⵠΔⵠᐃ: "img/day-book34.png",
    ⲆⵠⵠⲆⵠⲆⲆᐃᐃ: "img/night-book34.png",
    ⲆⲆΔⵠⵠⲆⵠᐃⲆ: "img/day-book35.png",
    ⵠᐃᐃⲆⵠⵠΔⲆΔ: "img/night-book35.png",
    ⲆⵠΔⵠΔΔⲆΔΔ: "img/day-book36.png",
    ΔΔⲆⲆᐃⲆⵠΔᐃ: "img/night-book36.png",
    ᐃⵠΔΔⲆᐃᐃᐃΔ: "img/day-book37.png",
    ⲆⵠΔᐃⵠⵠᐃΔⲆ: "img/night-book37.png",
    ⲆᐃᐃⵠᐃΔᐃⲆᐃ: "img/day-book38.png",
    ⵠᐃⲆᐃᐃⵠᐃΔᐃ: "img/night-book38.png",
    ᐃΔⲆΔⵠᐃⵠⲆᐃ: "img/day-book39.png",
    ⵠⲆΔⲆⲆΔᐃΔⲆ: "img/night-book39.png",
    ⵠⵠⵠⲆⲆΔⲆⲆⲆ: "img/day-book40.png",
    ΔᐃᐃⵠᐃⵠᐃⵠⲆ: "img/night-book40.png",
    ᐃᐃⵠᐃᐃΔᐃᐃΔ: "img/day-book41.png",
    ⵠⲆΔΔⲆⵠᐃᐃⵠ: "img/night-book41.png",
    ΔⵠΔⲆΔΔᐃΔᐃ: "img/day-book42.png",
    ⵠⵠΔⵠᐃⵠⵠⵠᐃ: "img/night-book42.png",
    ΔⲆΔᐃⲆⲆⲆᐃᐃ: "img/day-book43.png",
    ΔᐃᐃΔᐃΔΔᐃΔ: "img/night-book43.png",
    ᐃΔΔⲆⵠΔⲆⵠⲆ: "img/day-book44.png",
    ⲆⲆⲆⵠᐃᐃⵠⲆΔ: "img/night-book44.png",
    ΔΔⵠⵠᐃⲆⵠⵠⲆ: "img/day-book45.png",
    ⲆΔⲆᐃΔᐃᐃΔⲆ: "img/night-book45.png",
    ΔⵠᐃᐃᐃⵠⲆⲆΔ: "img/day-book46.png",
    ΔⲆⲆᐃᐃⲆᐃᐃⲆ: "img/night-book46.png",
    ΔⵠⵠⲆΔΔᐃΔⲆ: "img/day-book47.png",
    ᐃᐃⵠⵠⵠⵠⵠᐃⵠ: "img/night-book47.png",
    ⵠⲆᐃⵠⵠΔⲆᐃΔ: "img/day-book48.png",
    ΔⲆⲆⵠⵠᐃⲆⲆΔ: "img/night-book48.png",
    ⵠⲆⲆⲆⲆᐃᐃⲆᐃ: "img/day-book49.png",
    ⲆⵠΔⵠⵠⲆⲆⵠᐃ: "img/night-book49.png",
    ⲆΔᐃΔᐃΔⲆⵠᐃ: "img/day-book50.png",
    ⲆᐃⲆⲆⵠⲆⵠΔⵠ: "img/night-book50.png",
    ⲆΔΔΔᐃΔᐃⵠᐃ: "img/day-crate1.png",
    ᐃⲆᐃⲆⵠΔⲆⲆΔ: "img/night-crate1.png",
    ⵠⲆᐃᐃⲆⵠᐃⵠⲆ: "img/day-crate2.png",
    ⲆⲆⲆΔⲆᐃΔⲆⵠ: "img/night-crate2.png",
    ⵠⲆᐃΔΔᐃᐃΔᐃ: "img/day-crate3.png",
    ΔⲆⵠⲆΔⵠⲆⲆΔ: "img/night-crate3.png",
    ⵠΔⵠΔΔΔⲆᐃΔ: "img/day-crate4.png",
    ⵠⲆᐃΔⵠᐃⲆⲆⵠ: "img/night-crate4.png",
    ⲆⲆΔΔΔⵠΔΔⲆ: "img/day-crate5.png",
    ᐃΔΔⲆΔᐃΔΔΔ: "img/night-crate5.png",
    ⵠᐃᐃⲆⵠⲆⵠⵠⵠ: "img/day-crate6.png",
    ⲆᐃⲆⵠⲆⵠᐃⲆΔ: "img/night-crate6.png",
    ⲆᐃⲆΔᐃⲆⲆᐃⲆ: "img/day-crate7.png",
    ΔᐃⵠⲆⲆⲆⲆᐃⲆ: "img/night-crate7.png",
    ⵠⵠⲆᐃᐃΔΔᐃΔ: "img/day-crate8.png",
    ᐃᐃΔⵠⵠⵠⲆⵠⵠ: "img/night-crate8.png",
    ΔᐃΔⵠⲆⲆᐃⵠⵠ: "img/day-crate9.png",
    ΔⵠⲆᐃⲆΔⲆΔΔ: "img/night-crate9.png",
    ΔΔⵠⲆⵠⵠⵠⵠⲆ: "img/day-crate10.png",
    ΔΔⵠᐃᐃΔⲆᐃⲆ: "img/night-crate10.png",
    ᐃⵠⲆⲆᐃⵠⲆⲆᐃ: "img/day-crate11.png",
    ΔⲆⵠⵠⲆⲆⲆᐃΔ: "img/night-crate11.png",
    Δᐃᐃⵠⵠᐃⵠᐃⵠ: "img/day-crate12.png",
    ᐃⵠⲆΔⲆΔⲆⵠⲆ: "img/night-crate12.png",
    ⲆᐃᐃⲆⵠⲆΔⵠⲆ: "img/day-crate13.png",
    ⵠⵠⲆⵠⵠΔΔᐃᐃ: "img/night-crate13.png",
    ΔᐃᐃΔⲆΔᐃᐃΔ: "img/day-crate14.png",
    ᐃᐃⵠΔᐃΔΔⲆⵠ: "img/night-crate14.png",
    ⲆⵠᐃⲆΔⵠΔΔΔ: "img/day-crate15.png",
    ⲆⲆⲆΔᐃΔᐃⲆⲆ: "img/night-crate15.png",
    ᐃⲆⲆΔᐃΔᐃⲆⲆ: "img/day-crate16.png",
    ⵠⵠⲆᐃΔΔⲆⲆⲆ: "img/night-crate16.png",
    ᐃΔⵠᐃΔΔⲆᐃᐃ: "img/day-crate17.png",
    ᐃΔᐃΔⲆⵠⲆᐃⵠ: "img/night-crate17.png",
    ᐃⲆⲆᐃᐃᐃⵠΔΔ: "img/day-crate18.png",
    ΔΔᐃᐃⵠᐃⲆⲆⵠ: "img/night-crate18.png",
    ⲆⲆⵠᐃᐃΔⲆᐃᐃ: "img/day-crate19.png",
    ⵠⲆⲆΔⲆΔⲆⲆⵠ: "img/night-crate19.png",
    ΔΔΔⵠⵠᐃᐃΔⲆ: "img/day-crate20.png",
    ⲆⵠᐃⵠΔⵠⵠⵠⲆ: "img/night-crate20.png",
    ΔⲆΔΔᐃⵠᐃⲆⵠ: "img/day-crate21.png",
    ΔΔᐃⲆᐃΔᐃⲆⲆ: "img/night-crate21.png",
    ⵠΔΔⵠᐃΔⵠᐃⵠ: "img/day-crate22.png",
    ⲆⲆⵠΔᐃⵠΔⲆⲆ: "img/night-crate22.png",
    ⵠⲆⵠⵠⵠⵠᐃΔᐃ: "img/day-crate23.png",
    ⲆΔⲆᐃΔΔΔⲆΔ: "img/night-crate23.png",
    ⲆΔⲆⵠⵠᐃᐃⲆΔ: "img/day-crate24.png",
    ᐃⵠΔᐃᐃΔᐃⲆΔ: "img/night-crate24.png",
    ⲆᐃⵠⵠⲆΔᐃⲆΔ: "img/day-crate25.png",
    ᐃΔⲆⵠⵠᐃᐃⲆⵠ: "img/night-crate25.png",
    ᐃΔⲆⲆᐃᐃⵠΔᐃ: "img/day-crate26.png",
    ᐃⲆⲆⵠᐃΔᐃΔᐃ: "img/night-crate26.png",
    ΔΔⵠΔⲆᐃΔⵠⵠ: "img/day-crate27.png",
    ᐃⵠⲆΔᐃᐃᐃΔⵠ: "img/night-crate27.png",
    ΔⲆΔᐃΔⵠⵠᐃᐃ: "img/day-crate28.png",
    ⵠⲆⲆᐃⲆⵠⵠᐃⲆ: "img/night-crate28.png",
    ᐃΔᐃⵠⵠⲆⲆⵠᐃ: "img/day-crate29.png",
    ⵠⵠⲆᐃᐃΔΔⵠᐃ: "img/night-crate29.png",
    ᐃⲆⲆΔᐃⵠᐃⲆⵠ: "img/day-crate30.png",
    ᐃᐃᐃⵠⵠⲆⲆⲆⲆ: "img/night-crate30.png",
    ⲆᐃⲆⲆⵠⲆᐃΔⲆ: "img/day-crate31.png",
    ᐃⲆⲆⲆⵠⵠⲆᐃΔ: "img/night-crate31.png",
    ⵠⲆⲆⲆᐃⵠᐃⵠⲆ: "img/day-crate32.png",
    ᐃᐃΔⵠᐃΔⲆΔⲆ: "img/night-crate32.png",
    ᐃΔⵠΔⵠⵠᐃⲆᐃ: "img/day-crate33.png",
    ⵠⵠΔΔΔΔΔⲆⵠ: "img/night-crate33.png",
    ΔΔⵠⵠⲆⵠⵠⲆᐃ: "img/day-crate34.png",
    ᐃΔⵠᐃΔΔⵠΔⲆ: "img/night-crate34.png",
    ⲆΔᐃᐃⲆΔΔⵠⵠ: "img/day-crate35.png",
    ᐃΔΔΔⲆⵠⲆᐃⲆ: "img/night-crate35.png",
    ⵠΔᐃⵠᐃΔᐃᐃⵠ: "img/day-crate36.png",
    ⲆᐃⲆΔΔⲆⵠᐃΔ: "img/night-crate36.png",
    ⲆΔⲆⲆⵠΔⵠΔⵠ: "img/day-crate37.png",
    ᐃⵠᐃⲆⲆΔᐃⵠⲆ: "img/night-crate37.png",
    ᐃⲆⵠΔⵠΔⲆΔᐃ: "img/day-crate38.png",
    ᐃⵠⲆⲆⵠΔᐃⲆᐃ: "img/night-crate38.png",
    ᐃΔⲆⲆΔⵠⲆⲆᐃ: "img/day-crate39.png",
    ᐃᐃΔΔⲆⵠⵠⲆΔ: "img/night-crate39.png",
    ⵠⵠⲆᐃΔΔΔᐃΔ: "img/day-crate40.png",
    ΔΔᐃΔⲆⵠᐃⵠⵠ: "img/night-crate40.png",
    ⲆⲆⵠⲆⲆᐃⵠΔⵠ: "img/day-crate41.png",
    ᐃⲆᐃΔⲆΔᐃⵠΔ: "img/night-crate41.png",
    ⲆᐃⲆΔΔⵠΔⲆⵠ: "img/day-crate42.png",
    ΔᐃΔⵠᐃᐃᐃⵠⵠ: "img/night-crate42.png",
    ⵠΔⵠΔΔΔⲆⵠᐃ: "img/day-crate43.png",
    ⵠⵠⲆⵠᐃΔⲆᐃΔ: "img/night-crate43.png",
    ΔⲆⵠᐃᐃΔⵠⵠΔ: "img/day-crate44.png",
    ᐃᐃΔⲆⲆⲆᐃΔΔ: "img/night-crate44.png",
    ᐃᐃᐃΔᐃᐃⵠⲆⵠ: "img/day-crate45.png",
    ᐃᐃⲆᐃⵠᐃΔΔⵠ: "img/night-crate45.png",
    ΔⵠⲆⲆⲆᐃⲆⲆⵠ: "img/day-crate46.png",
    ⲆΔⵠⵠΔⵠⲆΔⲆ: "img/night-crate46.png",
    ⵠⵠΔᐃⵠⲆᐃΔⲆ: "img/day-crate47.png",
    ΔⵠⵠⵠᐃᐃⲆᐃⲆ: "img/night-crate47.png",
    ⵠⲆⲆⲆⲆⲆᐃᐃⵠ: "img/day-crate48.png",
    ΔⵠᐃᐃᐃⵠⲆⵠⵠ: "img/night-crate48.png",
    ΔⵠⲆⲆΔᐃᐃⵠⵠ: "img/day-crate49.png",
    ᐃΔΔᐃⲆⵠⵠᐃᐃ: "img/night-crate49.png",
    ⵠᐃⵠΔΔⵠΔⲆⲆ: "img/day-crate50.png",
    ᐃⲆᐃΔᐃⵠΔⲆⵠ: "img/night-crate50.png",
    ⲆⵠΔΔᐃᐃᐃΔᐃ: "img/day-crate51.png",
    ΔᐃᐃᐃΔΔΔΔⲆ: "img/night-crate51.png",
    ⲆᐃΔⵠᐃᐃⲆⵠⲆ: "img/day-crate52.png",
    ⲆⵠΔᐃⵠⵠⲆΔΔ: "img/night-crate52.png",
    ⲆⲆⵠᐃⵠⵠⲆᐃᐃ: "img/day-crate53.png",
    ⲆᐃΔΔΔΔⵠⲆᐃ: "img/night-crate53.png",
    ΔΔᐃΔᐃⵠᐃⵠⲆ: "img/day-crate54.png",
    ⵠᐃᐃⲆⲆⵠⲆⲆᐃ: "img/night-crate54.png",
    ᐃΔⵠⲆⵠᐃⵠⵠⵠ: "img/day-crate55.png",
    ⵠⲆⵠᐃΔⵠᐃᐃⲆ: "img/night-crate55.png",
    ΔⵠΔⲆⲆΔΔⵠᐃ: "img/day-crate56.png",
    ᐃᐃΔΔⲆΔᐃⲆΔ: "img/night-crate56.png",
    ᐃᐃⲆᐃⵠΔⲆⵠᐃ: "img/day-crate57.png",
    ⲆΔΔⲆΔᐃⵠΔⵠ: "img/night-crate57.png",
    ⵠΔΔⲆⵠⲆᐃΔᐃ: "img/day-crate58.png",
    ᐃⲆⵠⲆⵠⵠΔΔΔ: "img/night-crate58.png",
    ΔⵠᐃⵠⵠΔΔⲆⲆ: "img/day-crate59.png",
    ⵠⵠⲆᐃⵠΔⲆⲆⵠ: "img/night-crate59.png",
    ᐃⵠⵠᐃⲆⵠⵠⲆⲆ: "img/day-crate60.png",
    ⵠⲆΔⵠΔⵠΔⲆᐃ: "img/night-crate60.png",
    ΔⵠⵠᐃⵠᐃⲆⲆⵠ: "img/day-crate61.png",
    ⵠⲆⲆⵠⲆᐃⲆⵠⲆ: "img/night-crate61.png",
    ⵠⵠⵠⵠΔᐃⲆᐃΔ: "img/day-crate62.png",
    ΔⲆⵠⵠⲆᐃⲆⲆⵠ: "img/night-crate62.png",
    ᐃᐃⵠᐃⵠⵠΔΔⵠ: "img/day-crate63.png",
    ⲆⲆⲆΔⵠⲆⵠⲆⵠ: "img/night-crate63.png",
    ⵠⲆᐃᐃⵠΔΔⵠⲆ: "img/day-crate64.png",
    ⵠᐃⵠΔⵠᐃΔⵠⵠ: "img/night-crate64.png",
    ⲆΔⲆΔΔⲆⲆⵠᐃ: "img/day-crate65.png",
    ᐃᐃⵠᐃΔⵠΔᐃᐃ: "img/night-crate65.png",
    ⵠⲆⲆⲆᐃᐃⵠᐃⵠ: "img/day-crate66.png",
    ⵠⵠᐃⲆⲆⵠⲆⵠᐃ: "img/night-crate66.png",
    ΔᐃᐃᐃⲆᐃⵠⲆⲆ: "img/day-crate67.png",
    ΔΔⲆΔΔⵠⲆᐃⵠ: "img/night-crate67.png",
    ⵠⵠΔⲆᐃⲆⵠⵠⵠ: "img/day-crate68.png",
    ᐃⵠⲆⲆᐃⵠᐃⲆⵠ: "img/night-crate68.png",
    ᐃⵠᐃⲆΔΔⲆⵠⵠ: "img/day-crate69.png",
    ᐃⲆΔⲆⲆⵠᐃᐃⵠ: "img/night-crate69.png",
    ᐃⲆⲆⵠΔⲆⵠᐃⵠ: "img/day-crate70.png",
    ⲆᐃⲆⵠⲆᐃᐃᐃⵠ: "img/night-crate70.png",
    ⵠⲆⲆΔⲆⲆᐃⵠⲆ: "img/day-crate71.png",
    ⲆᐃΔᐃⵠⲆΔΔᐃ: "img/night-crate71.png",
    ᐃᐃΔⲆⵠⵠΔᐃᐃ: "img/day-crate72.png",
    ΔⵠⵠᐃⵠᐃⲆⵠΔ: "img/night-crate72.png",
    ⲆⲆΔᐃⵠⵠⲆⲆⵠ: "img/day-crate73.png",
    ᐃᐃΔⲆⵠⵠᐃΔΔ: "img/night-crate73.png",
    ⵠΔⲆΔΔᐃⵠⵠⲆ: "img/day-crate74.png",
    ⲆⵠⲆᐃⵠⵠⲆⵠⵠ: "img/night-crate74.png",
    ΔᐃΔⵠⲆᐃⵠⵠΔ: "img/day-crate75.png",
    ΔΔⵠⵠⲆⲆⵠᐃⵠ: "img/night-crate75.png",
    ΔᐃΔⲆⲆⲆⲆᐃΔ: "img/day-crate76.png",
    ΔⲆᐃⵠⲆΔⵠⵠᐃ: "img/night-crate76.png",
    ⵠⲆⲆΔΔᐃᐃΔⵠ: "img/day-crate77.png",
    ΔⵠⲆᐃⲆⲆⲆᐃⲆ: "img/night-crate77.png",
    ΔΔΔᐃᐃⲆᐃᐃⵠ: "img/day-crate78.png",
    ᐃΔᐃⲆᐃⵠΔⵠⲆ: "img/night-crate78.png",
    ⲆⵠⲆⲆⲆᐃⲆΔⲆ: "img/day-crate79.png",
    ⵠΔⲆᐃⲆⲆⵠᐃⵠ: "img/night-crate79.png",
    ᐃⲆᐃⵠᐃᐃⵠΔⵠ: "img/day-crate80.png",
    ᐃΔⵠΔΔⲆⵠⵠΔ: "img/night-crate80.png",
    ᐃᐃⲆⲆⲆⲆⲆᐃⵠ: "img/day-crate81.png",
    ΔΔᐃⲆᐃᐃΔⵠᐃ: "img/night-crate81.png",
    ⲆⲆⵠΔΔⵠⵠᐃᐃ: "img/day-crate82.png",
    ⲆⵠⲆⵠⲆᐃⲆΔΔ: "img/night-crate82.png",
    ⲆⵠⵠᐃⵠⵠΔⵠΔ: "img/day-crate83.png",
    ᐃⲆⵠⲆᐃⵠⲆⵠⵠ: "img/night-crate83.png",
    ⵠⵠⲆΔⵠⵠΔᐃⲆ: "img/day-crate84.png",
    ⲆⵠΔΔⲆᐃⲆⵠΔ: "img/night-crate84.png",
    ⵠᐃⲆᐃΔⵠⲆΔΔ: "img/day-herb0.png",
    ΔⵠᐃⲆⵠⲆᐃⲆᐃ: "img/day-herb1.png",
    ⵠᐃᐃΔᐃᐃΔᐃⵠ: "img/day-herb2.png",
    ⲆⵠⵠᐃΔΔᐃΔⲆ: "img/day-herb3.png",
    ⲆⲆⵠΔΔΔⵠΔⲆ: "img/day-herb4.png",
    ⲆⲆᐃΔᐃΔⵠⵠⲆ: "img/day-herb5.png",
    ΔΔⲆⲆⲆᐃⵠΔⲆ: "img/day-herb6.png",
    ⲆΔⵠⲆⲆⲆᐃΔᐃ: "img/day-herb7.png",
    ⵠⲆⵠΔᐃⲆⲆᐃⲆ: "img/day-herb8.png",
    ⵠⲆⵠⲆⵠΔΔⲆⲆ: "img/day-herb9.png",
    ᐃⲆⲆΔⵠᐃᐃᐃⲆ: "img/day-herb10.png",
    ⲆⵠᐃⵠⲆΔΔᐃᐃ: "img/day-herb11.png",
    ᐃⲆⵠΔᐃᐃⲆΔⲆ: "img/day-herb12.png",
    ⲆⲆⲆⵠᐃΔΔⲆΔ: "img/day-herb13.png",
    ΔⲆⲆᐃΔΔⲆⲆⲆ: "img/day-herb14.png",
    ΔᐃΔᐃⲆⲆᐃᐃⵠ: "img/day-herb15.png",
    ⲆᐃΔΔⲆΔᐃᐃᐃ: "img/day-shell0.png",
    ⵠⵠⲆⵠⵠΔⵠᐃΔ: "img/day-shell1.png",
    ΔᐃᐃΔΔⲆᐃⵠᐃ: "img/day-shell2.png",
    ⲆⵠΔΔⲆᐃΔⵠⵠ: "img/day-leaf1.png",
    ⵠⵠΔᐃⵠⵠⵠΔΔ: "img/day-leaf2.png",
    ΔⲆⵠΔⲆⵠᐃⵠⲆ: "img/day-leaf3.png",
    ᐃᐃⵠⵠΔΔⵠⵠᐃ: "img/day-leaf4.png",
    ΔᐃⲆᐃᐃᐃᐃᐃᐃ: "img/day-leaf5.png",
    ⲆⵠᐃⲆΔⵠΔΔᐃ: "img/day-leaf6.png",
    ΔΔᐃⲆᐃⲆⲆⲆⲆ: "img/day-leaf7.png",
    ⲆΔⵠᐃⲆᐃⲆⲆᐃ: "img/day-leaf8.png",
    ⵠᐃᐃⲆᐃΔⵠⵠᐃ: "img/day-rock0.png",
    ᐃᐃᐃΔΔⲆᐃⵠⲆ: "img/day-rock1.png",
    ⵠⲆⵠⵠⵠⲆᐃᐃⵠ: "img/day-rock2.png",
    ΔΔᐃΔⲆⵠⵠΔⲆ: "img/day-rock3.png",
    ΔΔⵠΔΔⵠΔᐃⲆ: "img/day-rock4.png",
    ⵠⲆⲆᐃⲆᐃᐃΔⲆ: "img/day-rock5.png",
    ΔᐃᐃΔΔΔⵠⵠΔ: "img/day-rock6.png",
    ⲆᐃΔⵠᐃⲆᐃᐃⲆ: "img/day-rock7.png",
    ΔⲆᐃⵠΔΔⵠᐃᐃ: "img/day-rock8.png",
    ⲆᐃⲆⵠᐃΔᐃⲆΔ: "img/day-rock9.png",
    ⲆⲆⵠⲆΔⲆⵠΔⵠ: "img/day-rock10.png",
    ᐃΔⵠᐃⲆΔⲆⲆΔ: "img/day-rock11.png",
    ⵠⵠⵠⵠⵠΔᐃⲆᐃ: "img/day-rock12.png",
    ⵠᐃⵠⲆⲆⵠⲆⲆᐃ: "img/day-rock13.png",
    ΔⵠᐃⲆΔⲆᐃⵠΔ: "img/day-flower1.png",
    ᐃΔᐃᐃΔⲆⲆᐃⲆ: "img/day-flower2.png",
    ⲆⵠⵠΔΔⵠⵠⲆΔ: "img/day-flower3.png",
    ᐃⵠᐃⲆΔᐃⲆⲆᐃ: "img/day-flower4.png",
    ᐃᐃⵠᐃΔⵠΔⲆᐃ: "img/day-flower5.png",
    ΔΔΔⲆⲆⲆⵠⲆⲆ: "img/day-flower6.png",
    ΔᐃⵠΔⵠΔΔΔⲆ: "img/day-flower7.png",
    ᐃⵠⵠΔᐃΔⲆⲆᐃ: "img/day-flower8.png",
    ⲆⲆⵠᐃΔⲆᐃⵠΔ: "img/day-flower9.png",
    ⲆᐃⲆⵠⲆⵠⲆΔᐃ: "img/day-herb16.png",
    ⵠⲆᐃᐃⲆⵠᐃᐃⵠ: "img/day-herb17.png",
    ⵠΔᐃΔⵠⵠⲆⲆΔ: "img/day-herb18.png",
    ⲆⲆᐃΔᐃⵠᐃΔΔ: "img/day-herb19.png",
    ⲆⲆᐃᐃⲆⵠⲆⵠⵠ: "img/day-herb20.png",
    ΔⵠⵠⲆᐃᐃⲆⵠⵠ: "img/day-herb21.png",
    ⵠⲆΔᐃⲆⵠⵠΔᐃ: "img/day-jungle-ground0.png",
    ΔⲆⲆⲆΔⲆΔᐃⲆ: "img/day-jungle-ground1.png",
    ᐃⲆⵠⵠΔⵠⵠⲆⲆ: "img/day-jungle-ground2.png",
    ᐃⲆⲆΔⵠΔᐃⲆᐃ: "img/day-jungle-ground3.png",
    ⲆⵠⲆⵠᐃⵠⲆⲆΔ: "img/day-jungle-pebble0.png",
    ᐃᐃᐃⲆΔᐃⲆΔΔ: "img/day-jungle-pebble1.png",
    ⵠᐃⵠⵠΔᐃᐃⵠᐃ: "img/day-jungle-pebble2.png",
    ᐃⲆᐃⵠΔΔΔΔⵠ: "img/day-jungle-pebble3.png",
    ⵠΔᐃⵠΔΔⵠⵠΔ: "img/day-jungle-pebble4.png",
    ᐃᐃⵠΔⲆⲆⲆⵠⵠ: "img/day-jungle-pebble5.png",
    ⲆᐃⵠⵠⲆΔⲆΔⲆ: "img/night-herb0.png",
    ΔᐃᐃᐃⲆⵠᐃᐃΔ: "img/night-herb1.png",
    ΔⲆⵠΔᐃⲆⵠⲆⵠ: "img/night-herb2.png",
    ΔⵠΔⵠᐃⵠΔⵠⲆ: "img/night-herb3.png",
    ᐃᐃᐃⵠᐃᐃⲆᐃⵠ: "img/night-herb4.png",
    ᐃⲆⵠΔⲆΔⵠᐃᐃ: "img/night-herb5.png",
    ᐃΔⲆΔΔᐃⲆΔΔ: "img/night-herb6.png",
    ᐃᐃᐃΔΔⵠᐃⲆᐃ: "img/night-herb7.png",
    ΔⵠⲆⲆⵠⵠⲆⵠᐃ: "img/night-herb8.png",
    ΔⲆΔᐃΔⵠⵠⵠΔ: "img/night-herb9.png",
    ⲆⲆⲆᐃⵠΔΔⵠΔ: "img/night-herb10.png",
    ΔΔⲆΔⲆᐃⵠⲆⵠ: "img/night-herb11.png",
    ᐃⲆⲆΔΔΔᐃⵠΔ: "img/night-herb12.png",
    ⲆΔⲆⵠⲆΔΔⵠΔ: "img/night-herb13.png",
    ⲆⵠⲆⲆᐃⲆΔᐃᐃ: "img/night-herb14.png",
    ⵠᐃⵠΔΔⲆΔⵠΔ: "img/night-herb15.png",
    ΔⵠⲆⲆΔⲆΔᐃᐃ: "img/night-shell0.png",
    ⲆΔᐃΔΔΔⲆΔΔ: "img/night-shell1.png",
    ΔⵠᐃⲆⵠⲆᐃᐃΔ: "img/night-shell2.png",
    ᐃᐃⲆⵠⵠΔΔΔⲆ: "img/night-leaf1.png",
    ΔⲆᐃⵠⵠΔⲆⲆⵠ: "img/night-leaf2.png",
    ⵠΔᐃⲆⲆⵠΔᐃΔ: "img/night-leaf3.png",
    ᐃⲆⵠᐃⵠⲆᐃΔᐃ: "img/night-leaf4.png",
    ΔᐃᐃΔⲆⲆᐃΔᐃ: "img/night-leaf5.png",
    ΔᐃⵠΔᐃⲆΔⲆᐃ: "img/night-leaf6.png",
    ⲆΔΔΔⵠΔᐃᐃᐃ: "img/night-leaf7.png",
    ⲆⲆΔⲆᐃⲆⲆⵠⵠ: "img/night-leaf8.png",
    ⲆⲆⵠⲆⵠⵠⲆⲆᐃ: "img/night-rock0.png",
    ⲆΔΔΔΔΔⵠᐃⲆ: "img/night-rock1.png",
    ⲆⲆⵠⵠⵠⲆⵠⲆᐃ: "img/night-rock2.png",
    ΔⲆⵠᐃⵠⵠᐃΔᐃ: "img/night-rock3.png",
    ⵠⵠⲆΔᐃΔⵠᐃⲆ: "img/night-rock4.png",
    ⵠⵠΔⵠⲆᐃⵠᐃⵠ: "img/night-rock5.png",
    ΔΔⵠΔⲆⲆΔⵠⵠ: "img/night-rock6.png",
    ⲆᐃⵠⵠⲆⲆᐃᐃᐃ: "img/night-rock7.png",
    ⲆΔⵠᐃⲆⲆⲆⵠⵠ: "img/night-rock8.png",
    ⲆΔᐃⲆⲆΔⵠΔᐃ: "img/night-rock9.png",
    ⲆⵠⵠⵠᐃΔΔⲆⲆ: "img/night-rock10.png",
    ⵠⲆⵠᐃⲆΔⵠⲆᐃ: "img/night-rock11.png",
    ΔΔΔⲆΔⵠⵠⲆᐃ: "img/night-rock12.png",
    ⵠΔΔᐃⵠⵠᐃΔᐃ: "img/night-rock13.png",
    ΔΔΔⲆⲆⲆΔⲆⲆ: "img/night-flower1.png",
    ΔⲆᐃᐃᐃⲆⲆΔΔ: "img/night-flower2.png",
    ΔⵠⵠΔⲆᐃᐃⲆⵠ: "img/night-flower3.png",
    ΔΔᐃⲆⲆⲆⲆⵠᐃ: "img/night-flower4.png",
    ⲆΔⲆᐃⵠⲆᐃⲆⲆ: "img/night-flower5.png",
    ᐃᐃⲆΔᐃⵠⲆⲆⵠ: "img/night-flower6.png",
    ᐃΔⲆⲆᐃⵠᐃⲆΔ: "img/night-flower7.png",
    ᐃⵠⲆΔⵠΔⵠⲆⵠ: "img/night-flower8.png",
    ⵠΔΔΔⲆⵠⲆΔⵠ: "img/night-flower9.png",
    ΔᐃᐃⵠΔⲆᐃᐃⲆ: "img/night-herb16.png",
    ΔΔⲆΔΔⵠΔⵠᐃ: "img/night-herb17.png",
    ᐃⵠⲆⲆΔⲆΔΔⵠ: "img/night-herb18.png",
    ⵠⵠⲆᐃᐃᐃΔⲆΔ: "img/night-herb19.png",
    ᐃⵠⵠⵠᐃΔⲆⲆᐃ: "img/night-herb20.png",
    ΔᐃΔΔᐃᐃⵠΔⲆ: "img/night-herb21.png",
    ᐃΔᐃⲆⲆΔᐃΔΔ: "img/night-jungle-ground0.png",
    ᐃΔⲆᐃΔΔᐃᐃⵠ: "img/night-jungle-ground1.png",
    ΔⵠⵠⵠΔⲆΔᐃΔ: "img/night-jungle-ground2.png",
    ⲆⵠⵠΔᐃⲆⵠᐃΔ: "img/night-jungle-ground3.png",
    ⵠⵠΔⵠᐃΔⲆⵠᐃ: "img/night-jungle-pebble0.png",
    ⲆⲆᐃⲆΔΔⵠⲆΔ: "img/night-jungle-pebble1.png",
    ⲆⵠⲆⵠⲆⵠΔⲆᐃ: "img/night-jungle-pebble2.png",
    ᐃᐃⵠⲆΔᐃⵠⵠⲆ: "img/night-jungle-pebble3.png",
    ⵠΔᐃΔᐃⲆⵠⵠΔ: "img/night-jungle-pebble4.png",
    ᐃᐃⵠᐃⵠⵠΔᐃⲆ: "img/night-jungle-pebble5.png",
    ΔⲆⲆᐃⲆΔⲆⵠⵠ: "img/day-river000-010-000.png",
    ⲆⵠᐃΔⲆᐃⲆΔᐃ: "img/day-river000-010-010.png",
    ⲆΔⵠⵠⲆΔΔⲆΔ: "img/day-river000-011-000.png",
    ᐃⵠⲆΔⵠᐃⵠᐃΔ: "img/day-river000-011-010.png",
    ⲆⵠⵠᐃⵠⲆⲆᐃΔ: "img/day-river000-011-011.png",
    ᐃΔⲆΔΔⵠᐃⵠΔ: "img/day-river000-110-000.png",
    ⲆΔⵠᐃⲆΔΔᐃⲆ: "img/day-river000-110-010.png",
    ⲆⲆᐃⵠⵠⵠᐃᐃΔ: "img/day-river000-110-110.png",
    ⵠᐃⵠᐃᐃᐃⲆⵠᐃ: "img/day-river000-111-000.png",
    ⲆΔⵠΔⲆᐃⲆⵠᐃ: "img/day-river000-111-010.png",
    ᐃⵠᐃΔⲆⲆᐃⵠⵠ: "img/day-river000-111-011.png",
    ᐃΔⵠᐃⲆΔΔΔⵠ: "img/day-river000-111-110.png",
    ⲆⲆⵠⲆᐃΔⵠⵠⵠ: "img/day-river000-111-111.png",
    ⵠΔⲆΔΔⵠⵠⲆΔ: "img/day-river010-010-000.png",
    ⵠⵠⵠⵠⵠⲆⵠᐃΔ: "img/day-river010-010-010.png",
    ᐃⵠΔⵠᐃᐃΔⵠⲆ: "img/day-river010-011-000.png",
    ΔⲆᐃⲆⵠΔⵠΔⵠ: "img/day-river010-011-010.png",
    ⵠᐃᐃᐃⵠⲆΔΔⲆ: "img/day-river010-011-011.png",
    ⵠΔΔⲆΔⵠⲆᐃⵠ: "img/day-river010-110-000.png",
    ⵠⵠᐃΔⵠⵠᐃⵠⲆ: "img/day-river010-110-010.png",
    ᐃⵠᐃᐃΔⵠΔΔᐃ: "img/day-river010-110-110.png",
    ᐃⵠΔΔᐃΔᐃⲆⵠ: "img/day-river010-111-000.png",
    ΔⵠΔⲆⵠⲆⵠᐃᐃ: "img/day-river010-111-010.png",
    ⲆᐃᐃⲆΔᐃΔⵠΔ: "img/day-river010-111-011.png",
    ᐃΔⲆⵠΔᐃⵠᐃΔ: "img/day-river010-111-110.png",
    ΔΔᐃΔⲆᐃⲆΔⲆ: "img/day-river010-111-111.png",
    ⵠⵠΔⵠⲆⵠΔⲆⲆ: "img/day-river011-011-000.png",
    ᐃⵠⲆⲆΔⵠⵠⵠⲆ: "img/day-river011-011-010.png",
    ΔⵠΔⲆⵠⵠⲆΔᐃ: "img/day-river011-011-011.png",
    ⵠᐃΔⲆⵠⲆᐃΔⲆ: "img/day-river011-111-000.png",
    ⵠⲆᐃⲆᐃⲆⵠⵠⵠ: "img/day-river011-111-010.png",
    ᐃᐃⲆΔⵠΔⵠⵠΔ: "img/day-river011-111-011.png",
    ΔᐃΔⵠⲆⲆΔⲆⲆ: "img/day-river011-111-110.png",
    ⲆᐃⵠΔⲆⲆᐃΔΔ: "img/day-river011-111-111.png",
    ᐃᐃᐃΔⵠⲆⵠΔⵠ: "img/day-river110-110-000.png",
    ⵠΔᐃⲆᐃⵠⲆΔⵠ: "img/day-river110-110-010.png",
    ⲆΔᐃΔⵠΔⵠΔⵠ: "img/day-river110-110-110.png",
    ⲆᐃⵠΔΔᐃⲆᐃⵠ: "img/day-river110-111-000.png",
    ⲆⵠᐃᐃⵠⲆΔΔΔ: "img/day-river110-111-010.png",
    ᐃⵠᐃⵠⲆΔⲆΔⵠ: "img/day-river110-111-011.png",
    ᐃᐃΔⲆᐃᐃⵠΔΔ: "img/day-river110-111-110.png",
    ⲆᐃΔⲆᐃᐃΔⵠⵠ: "img/day-river110-111-111.png",
    ⲆᐃᐃᐃⲆΔᐃ: "img/day-river111-111-011.png",
    ΔⲆᐃⲆⵠΔᐃⵠⲆ: "img/day-river111-111-110.png",
    ⲆᐃᐃᐃⲆΔᐃ: "img/day-river111-111-011.png",
    ΔⵠⲆⵠᐃⲆᐃΔⲆ: "img/day-river111-111-000.png",
    ⲆⲆΔⲆᐃⵠΔⲆⵠ: "img/day-river111-111-111.png",
    ᐃΔΔⲆⲆᐃⵠⲆᐃ: "img/day-river111-111-010.png",
    ΔᐃⲆⵠⲆᐃᐃⵠⵠ: "img/night-river000-010-000.png",
    ΔⲆⲆΔⲆΔⵠⵠΔ: "img/night-river000-010-010.png",
    ⵠⵠⲆⵠⲆᐃⲆΔⵠ: "img/night-river000-011-000.png",
    ⵠⲆᐃΔⵠᐃΔΔᐃ: "img/night-river000-011-010.png",
    ᐃⲆⵠᐃⲆⲆΔᐃᐃ: "img/night-river000-011-011.png",
    ⵠᐃⵠⵠⲆΔᐃᐃΔ: "img/night-river000-110-000.png",
    ⲆᐃᐃⵠⵠΔⵠⵠΔ: "img/night-river000-110-010.png",
    ⵠⵠⲆⲆⵠᐃΔⲆᐃ: "img/night-river000-110-110.png",
    ⲆⵠᐃΔΔⵠΔΔⵠ: "img/night-river000-111-000.png",
    ⵠⲆΔⵠΔⵠᐃⵠΔ: "img/night-river000-111-010.png",
    ⵠⲆᐃᐃⲆⲆΔΔᐃ: "img/night-river000-111-011.png",
    ΔⵠⲆⵠⲆⲆΔΔⲆ: "img/night-river000-111-110.png",
    ΔΔΔᐃⵠΔΔΔᐃ: "img/night-river000-111-111.png",
    ⲆⵠⵠⵠⵠΔΔⲆⵠ: "img/night-river010-010-000.png",
    ⲆⵠΔΔⵠⵠΔΔⵠ: "img/night-river010-010-010.png",
    ΔⲆⲆⵠⵠⵠΔΔⲆ: "img/night-river010-011-000.png",
    ᐃᐃᐃⲆᐃⲆΔⵠⲆ: "img/night-river010-011-010.png",
    ⲆⵠᐃⵠⲆΔΔⵠΔ: "img/night-river010-011-011.png",
    ⲆⵠⲆⵠⲆΔⵠᐃΔ: "img/night-river010-110-000.png",
    ᐃᐃⲆᐃⲆⵠⵠΔᐃ: "img/night-river010-110-010.png",
    ᐃᐃⲆᐃᐃᐃΔᐃⵠ: "img/night-river010-110-110.png",
    ᐃᐃⲆⵠΔⵠⲆⵠⵠ: "img/night-river010-111-000.png",
    ⵠⲆⵠⲆⵠⵠᐃⲆΔ: "img/night-river010-111-010.png",
    ⲆΔⵠⲆᐃⲆΔΔᐃ: "img/night-river010-111-011.png",
    ⲆΔΔΔΔⵠΔΔⲆ: "img/night-river010-111-110.png",
    ᐃⵠᐃⵠⲆⲆⲆⲆⵠ: "img/night-river010-111-111.png",
    ΔⲆᐃᐃⵠΔᐃΔⲆ: "img/night-river011-011-000.png",
    ΔⵠᐃᐃΔΔⵠᐃⲆ: "img/night-river011-011-010.png",
    ᐃᐃⵠⵠΔⲆΔΔⲆ: "img/night-river011-011-011.png",
    ⵠⵠᐃⲆⵠⲆᐃᐃΔ: "img/night-river011-111-000.png",
    ⵠᐃΔⵠⵠⵠⲆⲆᐃ: "img/night-river011-111-010.png",
    ᐃⲆᐃᐃΔΔΔΔⵠ: "img/night-river011-111-011.png",
    ⲆⲆⵠⲆⲆΔΔⲆΔ: "img/night-river011-111-110.png",
    ⵠⲆⲆⲆᐃⵠΔⵠⵠ: "img/night-river011-111-111.png",
    ⵠⲆᐃΔⲆᐃᐃⲆΔ: "img/night-river110-110-000.png",
    ⲆᐃΔΔΔⵠΔⵠⲆ: "img/night-river110-110-010.png",
    ⵠⵠΔⵠⵠᐃᐃⵠⵠ: "img/night-river110-110-110.png",
    ΔᐃⲆⲆⵠᐃⵠᐃᐃ: "img/night-river110-111-000.png",
    ⲆᐃΔⲆΔΔⵠⲆᐃ: "img/night-river110-111-010.png",
    ᐃⲆⲆᐃᐃᐃΔᐃΔ: "img/night-river110-111-011.png",
    ΔᐃⵠⲆⵠⲆⲆᐃΔ: "img/night-river110-111-110.png",
    ⲆᐃΔⲆⵠΔΔᐃΔ: "img/night-river110-111-111.png",
    ⵠᐃΔΔⵠΔΔ: "img/night-river111-111-011.png",
    ΔΔᐃΔᐃⵠᐃⲆΔ: "img/night-river111-111-110.png",
    ⵠᐃΔΔⵠΔΔ: "img/night-river111-111-011.png",
    ΔⲆⵠᐃⵠⲆᐃⵠΔ: "img/night-river111-111-000.png",
    ΔΔΔᐃⵠΔᐃⵠΔ: "img/night-river111-111-111.png",
    ᐃⵠᐃⵠⲆⲆⲆⵠⲆ: "img/night-river111-111-010.png",
    ⲆⵠⲆⲆⲆⵠᐃ: "img/day-pebblecompo1.png",
    ᐃⵠΔⵠⵠ: "img/day-pebblecompo2.png",
    ⲆⲆᐃⵠᐃ: "img/day-pebblecompo3.png",
    Δⵠᐃᐃᐃᐃⵠ: "img/day-pebblecompo4.png",
    ⵠⲆⲆⲆⵠⲆⲆ: "img/day-pebblecompo5.png",
    ᐃᐃΔⵠⵠⲆᐃ: "img/day-pebblecompo6.png",
    ⵠⵠⲆΔᐃ: "img/day-pebblecompo7.png",
    ᐃⲆΔᐃⲆΔᐃᐃⵠ: "img/day-pebblecompo8.png",
    ⵠᐃᐃⵠⲆⵠᐃ: "img/day-pebblecompo9.png",
    ⵠᐃⲆⲆᐃⵠⲆ: "img/day-pebblecompo10.png",
    ᐃᐃⵠⲆΔ: "img/day-pebblecompo11.png",
    ⲆᐃΔᐃⵠᐃᐃ: "img/day-pebblecompo12.png",
    ⵠⵠⵠᐃⲆᐃΔ: "img/day-pebblecompo13.png",
    ᐃⲆⵠⲆⵠⵠⵠ: "img/day-pebblecompo14.png",
    ᐃᐃⵠᐃᐃΔⲆ: "img/day-pebblecompo15.png",
    ΔⵠⲆⲆⲆⲆᐃ: "img/day-pebblecompo16.png",
    ΔᐃΔΔᐃ: "img/day-pebblecompo17.png",
    ⵠⲆᐃᐃⵠⵠⲆ: "img/day-pebblecompo18.png",
    ΔΔᐃΔⲆΔⵠ: "img/day-pebblecompo19.png",
    ⲆⲆⲆᐃΔ: "img/day-pebblecompo20.png",
    ⵠⲆⲆΔⵠ: "img/day-pebblecompo21.png",
    ⲆᐃᐃⵠᐃΔⵠ: "img/day-pebblecompo22.png",
    ᐃⵠⵠᐃⲆⲆⵠ: "img/day-pebblecompo23.png",
    ΔⲆⲆⵠΔⲆᐃ: "img/day-pebblecompo24.png",
    ⲆⲆⵠᐃΔ: "img/day-pebblecompo25.png",
    ᐃΔΔΔᐃ: "img/day-pebblecompo26.png",
    ⲆᐃᐃⲆᐃⲆⲆ: "img/day-pebblecompo27.png",
    ᐃⲆⲆΔⵠ: "img/day-pebblecompo28.png",
    ⲆⲆΔⵠⵠᐃⵠ: "img/night-pebblecompo1.png",
    ⲆⵠⲆᐃⵠ: "img/night-pebblecompo2.png",
    ⵠΔᐃΔⵠ: "img/night-pebblecompo3.png",
    ΔⵠΔⵠᐃⵠᐃ: "img/night-pebblecompo4.png",
    ΔᐃⲆᐃΔΔΔ: "img/night-pebblecompo5.png",
    ΔᐃⵠⵠⲆᐃΔ: "img/night-pebblecompo6.png",
    ⲆΔⲆⲆⵠ: "img/night-pebblecompo7.png",
    ΔΔⲆᐃᐃᐃⲆⵠᐃ: "img/night-pebblecompo8.png",
    ᐃⵠⵠΔᐃΔⲆ: "img/night-pebblecompo9.png",
    ⲆⵠΔⲆᐃⵠΔ: "img/night-pebblecompo10.png",
    ⲆⵠⲆΔᐃ: "img/night-pebblecompo11.png",
    ⵠⲆⵠⵠᐃⵠΔ: "img/night-pebblecompo12.png",
    ᐃΔⲆΔⵠⲆⲆ: "img/night-pebblecompo13.png",
    ΔᐃΔΔᐃᐃⵠ: "img/night-pebblecompo14.png",
    ⵠᐃⵠⵠⲆΔᐃ: "img/night-pebblecompo15.png",
    ⵠᐃⵠⲆΔᐃΔ: "img/night-pebblecompo16.png",
    ᐃΔᐃΔᐃ: "img/night-pebblecompo17.png",
    ⵠⵠⵠΔΔΔΔ: "img/night-pebblecompo18.png",
    ⲆⲆΔⲆᐃⵠᐃ: "img/night-pebblecompo19.png",
    ᐃᐃⵠⲆⲆ: "img/night-pebblecompo20.png",
    ⲆᐃᐃⵠⲆ: "img/night-pebblecompo21.png",
    ΔᐃΔΔⲆᐃᐃ: "img/night-pebblecompo22.png",
    ᐃᐃΔⵠⵠΔΔ: "img/night-pebblecompo23.png",
    ⲆⲆⲆΔⵠⲆⲆ: "img/night-pebblecompo24.png",
    ΔⲆΔⲆⵠ: "img/night-pebblecompo25.png",
    ΔᐃᐃΔⲆ: "img/night-pebblecompo26.png",
    ⵠΔⲆⵠⵠᐃⵠ: "img/night-pebblecompo27.png",
    ΔⲆⲆᐃᐃ: "img/night-pebblecompo28.png",
    ⲆⵠⵠᐃⲆΔⵠΔⵠ: "img/day-baby-mammoth.png",
    ⲆΔⲆⵠⲆⵠΔⵠⲆ: "img/day-baby-mammoth-tamed.png",
    ᐃΔⲆΔΔⲆⵠⲆⲆ: "img/day-baby-mammoth-angry.png",
    ΔⲆᐃⵠⵠⲆᐃⵠⵠ: "img/night-baby-mammoth.png",
    ⲆⵠⲆᐃⲆⵠⵠΔᐃ: "img/night-baby-mammoth-tamed.png",
    ⲆⲆⵠᐃⲆⲆⲆᐃᐃ: "img/night-baby-mammoth-angry.png",
    ᐃΔΔᐃⲆΔΔᐃΔ: "img/inv-mammoth-out.png",
    ⲆᐃΔⵠᐃⲆⵠⲆⲆ: "img/inv-mammoth-in.png",
    ΔⲆⲆⲆᐃⵠⵠⲆⵠ: "img/inv-mammoth-click.png",
    ᐃⵠΔⲆⵠⵠⲆ: "img/hurt-baby-mammoth.png",
    ⲆⲆⵠΔᐃⲆⲆ: "img/baby-mammoth-step.png",
    ⵠⵠᐃⲆⵠᐃΔᐃᐃ: "img/day-flower-hat.png",
    ᐃᐃⲆⵠΔΔⲆⲆΔ: "img/night-flower-hat.png",
    ⲆΔΔᐃⲆᐃΔΔᐃ: "img/inv-flower-hat-out.png",
    ⵠΔΔⲆⵠΔⵠΔⲆ: "img/inv-flower-hat-in.png",
    ΔⵠΔⵠᐃΔᐃΔⵠ: "img/inv-flower-hat-click.png",
    ⲆᐃΔᐃⲆⵠⲆⵠΔ: "img/day-fur-hat.png",
    ᐃⲆΔᐃΔΔΔΔΔ: "img/night-fur-hat.png",
    ΔⲆⵠᐃⵠⲆᐃΔᐃ: "img/inv-fur-hat-out.png",
    ΔⵠΔΔᐃᐃᐃᐃⲆ: "img/inv-fur-hat-in.png",
    ᐃⲆⵠᐃⵠⵠⵠΔᐃ: "img/inv-fur-hat-click.png",
    ᐃⲆⵠⲆΔⵠᐃΔΔ: "img/day-mammoth.png",
    ⲆᐃⵠⲆᐃΔΔⵠΔ: "img/night-mammoth.png",
    ⲆᐃΔΔⲆⲆⲆ: "img/hurt-mammoth.png",
    ΔⲆᐃⵠΔⲆᐃΔᐃ: "img/inv-mammoth-fur-out.png",
    ⵠΔᐃⵠᐃⲆΔᐃᐃ: "img/inv-mammoth-fur-in.png",
    ᐃⲆΔⲆΔΔΔᐃᐃ: "img/inv-mammoth-fur-click.png",
    ᐃΔⵠᐃⵠᐃⵠⲆⵠ: "img/inv-wood-bow-out.png",
    ⵠⵠⲆΔⵠⵠᐃᐃⲆ: "img/inv-wood-bow-in.png",
    ⲆᐃᐃⵠⲆᐃᐃⵠⵠ: "img/inv-wood-bow-click.png",
    ⵠΔⵠΔᐃᐃⵠΔᐃ: "img/inv-wood-arrow-out.png",
    ⲆⲆΔᐃΔΔᐃΔⵠ: "img/inv-wood-arrow-in.png",
    ⵠᐃⲆⵠΔᐃΔΔⲆ: "img/inv-wood-arrow-click.png",
    ⲆⲆⵠᐃⲆᐃΔⲆⵠ: "img/day-wood-bow2.png",
    ᐃΔᐃⵠΔΔΔⲆΔ: "img/night-wood-bow2.png",
    ⲆⵠⲆᐃⲆⲆΔ: "img/day-wood-arrow.png",
    ⵠΔⵠⵠⵠΔⵠ: "img/night-wood-arrow.png",
    ᐃᐃⲆΔᐃᐃΔⲆⵠ: "img/inv-stone-bow-out.png",
    ⵠΔⵠⵠΔΔⲆⲆⵠ: "img/inv-stone-bow-in.png",
    ᐃᐃⲆᐃⲆᐃᐃⵠⲆ: "img/inv-stone-bow-click.png",
    ⲆⵠΔᐃⲆⵠᐃⵠⲆ: "img/inv-stone-arrow-out.png",
    ⲆⵠⲆᐃᐃⵠᐃᐃᐃ: "img/inv-stone-arrow-in.png",
    ⲆⵠⵠᐃᐃΔᐃΔΔ: "img/inv-stone-arrow-click.png",
    ⲆᐃᐃᐃᐃⲆⲆᐃⲆ: "img/day-stone-bow.png",
    ⵠᐃᐃᐃᐃⵠΔΔΔ: "img/night-stone-bow.png",
    ⲆⲆΔᐃΔᐃⲆ: "img/day-stone-arrow.png",
    ⵠⵠⲆⲆⵠΔΔ: "img/night-stone-arrow.png",
    ᐃΔⲆᐃᐃᐃΔᐃΔ: "img/inv-gold-bow-out.png",
    ΔⲆᐃⲆΔᐃⵠⲆⵠ: "img/inv-gold-bow-in.png",
    ⲆⵠⲆᐃΔΔⲆᐃᐃ: "img/inv-gold-bow-click.png",
    ⵠⲆⲆᐃᐃⵠᐃⵠΔ: "img/inv-gold-arrow-out.png",
    ⵠⵠᐃᐃΔΔⵠᐃΔ: "img/inv-gold-arrow-in.png",
    ΔᐃΔⵠᐃⲆⵠΔΔ: "img/inv-gold-arrow-click.png",
    ⵠⲆΔᐃᐃⵠᐃᐃⲆ: "img/day-gold-bow.png",
    ⲆᐃᐃⲆⲆⲆΔΔⵠ: "img/night-gold-bow.png",
    ᐃΔᐃΔΔⲆⵠ: "img/day-gold-arrow.png",
    ⲆᐃΔΔΔΔΔ: "img/night-gold-arrow.png",
    ⵠⵠΔΔⵠᐃⵠⲆᐃ: "img/inv-diamond-bow-out.png",
    ΔⵠᐃⵠᐃᐃⲆᐃⵠ: "img/inv-diamond-bow-in.png",
    ⵠⵠᐃᐃⵠⲆⵠᐃᐃ: "img/inv-diamond-bow-click.png",
    ᐃⲆⵠⵠⲆΔᐃⵠΔ: "img/inv-diamond-arrow-out.png",
    ⲆⲆΔⲆⵠΔⲆΔΔ: "img/inv-diamond-arrow-in.png",
    ᐃΔⲆⵠΔᐃⵠⵠⵠ: "img/inv-diamond-arrow-click.png",
    ᐃᐃΔⲆⲆⵠΔⵠⵠ: "img/day-diamond-bow.png",
    ᐃⵠᐃΔᐃᐃᐃⲆⲆ: "img/night-diamond-bow.png",
    ΔΔᐃΔⵠΔⲆ: "img/day-diamond-arrow.png",
    ⲆᐃⲆⵠᐃⲆⵠ: "img/night-diamond-arrow.png",
    ᐃⲆⲆⲆᐃⵠΔΔᐃ: "img/inv-amethyst-bow-out.png",
    ΔΔΔᐃΔⵠⲆΔᐃ: "img/inv-amethyst-bow-in.png",
    ΔΔⲆⲆΔΔΔᐃᐃ: "img/inv-amethyst-bow-click.png",
    ᐃⵠⵠⵠΔⵠᐃⵠⲆ: "img/inv-amethyst-arrow-out.png",
    ΔᐃⲆⲆᐃⵠⵠⲆΔ: "img/inv-amethyst-arrow-in.png",
    ⲆᐃᐃΔⲆⲆⵠᐃⲆ: "img/inv-amethyst-arrow-click.png",
    ᐃⲆⲆⲆⵠΔΔⲆΔ: "img/day-amethyst-bow.png",
    ⵠΔᐃⵠⵠᐃᐃⲆᐃ: "img/night-amethyst-bow.png",
    ⲆᐃᐃⵠⲆⲆᐃ: "img/day-amethyst-arrow.png",
    ᐃⲆᐃᐃⵠΔΔ: "img/night-amethyst-arrow.png",
    ᐃⲆΔᐃⵠⲆᐃᐃⲆ: "img/inv-dragon-bow-out.png",
    ΔΔᐃΔᐃⲆⲆΔⲆ: "img/inv-dragon-bow-in.png",
    ⵠⵠᐃⲆΔᐃᐃᐃᐃ: "img/inv-dragon-bow-click.png",
    ᐃⲆΔΔⵠⵠΔⵠᐃ: "img/inv-dragon-arrow-out.png",
    ⵠᐃᐃⲆΔΔⲆᐃⲆ: "img/inv-dragon-arrow-in.png",
    ᐃⲆⲆΔΔᐃΔΔⲆ: "img/inv-dragon-arrow-click.png",
    ΔⲆᐃᐃⵠⲆΔⵠⲆ: "img/day-dragon-bow.png",
    ΔᐃⵠΔⲆⲆᐃⲆⲆ: "img/night-dragon-bow.png",
    ᐃⲆΔᐃⲆⵠⵠ: "img/day-dragon-arrow.png",
    ᐃⵠⵠᐃⵠⲆⵠ: "img/night-dragon-arrow.png",
    ΔⵠᐃⵠᐃΔΔⲆⲆ: "img/inv-reidite-bow-out.png",
    ΔΔⲆΔⲆᐃⵠⲆΔ: "img/inv-reidite-bow-in.png",
    ᐃᐃᐃᐃⲆⵠᐃᐃᐃ: "img/inv-reidite-bow-click.png",
    ᐃᐃΔⵠΔᐃⲆΔⲆ: "img/inv-reidite-arrow-out.png",
    ΔⵠⵠᐃⵠⵠⵠⵠΔ: "img/inv-reidite-arrow-in.png",
    ⲆⲆⵠᐃᐃΔⲆᐃⲆ: "img/inv-reidite-arrow-click.png",
    ⲆⲆⲆⲆⲆᐃᐃΔᐃ: "img/day-reidite-bow.png",
    ⵠⵠᐃΔᐃⲆΔᐃⲆ: "img/night-reidite-bow.png",
    ⲆᐃΔᐃⲆΔⲆ: "img/day-reidite-arrow.png",
    ΔⵠᐃΔⲆΔⵠⵠⲆ: "img/night-reidite-arrow.png",
    ⵠᐃᐃⲆⵠΔⵠⲆᐃ: "img/inv-wooden-axe-out.png",
    ⵠⵠΔⵠᐃⲆᐃᐃᐃ: "img/inv-wooden-axe-in.png",
    ᐃⲆⲆⲆⲆⵠΔⲆⲆ: "img/inv-wooden-axe-click.png",
    ΔᐃⲆⵠⲆΔⲆΔⵠ: "img/day-wooden-axe.png",
    ᐃΔⲆⵠⵠⲆⵠⵠΔ: "img/night-wooden-axe.png",
    ᐃⵠⲆⲆⵠΔᐃᐃᐃ: "img/inv-stone-axe-out.png",
    ⵠᐃᐃᐃⵠΔΔᐃΔ: "img/inv-stone-axe-in.png",
    ΔⲆᐃᐃⵠⲆⵠᐃⵠ: "img/inv-stone-axe-click.png",
    ΔⲆᐃᐃΔᐃⲆⵠΔ: "img/day-stone-axe.png",
    ⲆⵠⲆΔⲆᐃᐃⵠⲆ: "img/night-stone-axe.png",
    ⲆΔⲆᐃⵠΔⲆΔΔ: "img/inv-golden-axe-out.png",
    ⲆⵠᐃᐃⵠΔⵠΔΔ: "img/inv-golden-axe-in.png",
    ⲆΔⵠᐃⵠᐃᐃⵠⲆ: "img/inv-golden-axe-click.png",
    ΔⲆⲆᐃⵠᐃᐃΔⵠ: "img/day-golden-axe.png",
    ᐃᐃᐃⵠᐃΔᐃⲆᐃ: "img/night-golden-axe.png",
    ΔΔΔᐃⲆΔⵠⵠΔ: "img/inv-diamond-axe-out.png",
    ΔⲆⵠᐃⲆⵠΔⵠⵠ: "img/inv-diamond-axe-in.png",
    ΔⲆⵠΔΔⲆΔΔⲆ: "img/inv-diamond-axe-click.png",
    ᐃΔⲆⲆⲆᐃⵠⵠⵠ: "img/day-diamond-axe.png",
    ⲆΔⲆⲆⲆΔΔΔⵠ: "img/night-diamond-axe.png",
    ᐃΔⲆⲆΔⲆΔΔⲆ: "img/inv-amethyst-axe-out.png",
    ⲆⵠⵠᐃΔΔᐃⵠⲆ: "img/inv-amethyst-axe-in.png",
    ΔⲆΔⲆⲆᐃⲆⵠΔ: "img/inv-amethyst-axe-click.png",
    ΔⲆΔᐃⲆᐃΔᐃᐃ: "img/day-amethyst-axe.png",
    ΔⵠᐃΔᐃΔΔᐃⲆ: "img/night-amethyst-axe.png",
    ΔᐃⲆⵠⵠⲆΔᐃⲆ: "img/inv-reidite-axe-out.png",
    ⲆⵠᐃⵠⵠᐃᐃⵠⲆ: "img/inv-reidite-axe-in.png",
    ΔⵠⵠᐃⵠⵠᐃⵠⲆ: "img/inv-reidite-axe-click.png",
    ⵠΔⵠⵠⲆⲆΔΔᐃ: "img/day-reidite-axe.png",
    ΔⲆⲆΔᐃⲆᐃΔΔ: "img/night-reidite-axe.png",
    ⲆⵠΔⲆⲆⵠⵠⲆΔ: "img/inv-emerald-axe-out.png",
    ᐃⵠΔᐃΔⲆⲆᐃⵠ: "img/inv-emerald-axe-in.png",
    ΔⲆⲆⵠᐃᐃᐃᐃᐃ: "img/inv-emerald-axe-click.png",
    ⵠΔᐃⲆᐃΔΔΔΔ: "img/day-emerald-axe.png",
    ᐃΔᐃⵠⲆⲆᐃⲆⵠ: "img/night-emerald-axe.png",
    ΔΔⲆΔⵠⵠᐃΔᐃ: "img/inv-copper-axe-out.png",
    ΔⵠᐃⲆⵠⲆⲆΔⵠ: "img/inv-copper-axe-in.png",
    ⵠΔΔⲆⵠΔΔⵠᐃ: "img/inv-copper-axe-click.png",
    ΔΔΔΔⲆⲆΔⵠᐃ: "img/day-copper-axe.png",
    ⲆᐃᐃᐃᐃΔⵠⵠⵠ: "img/night-copper-axe.png",
    ΔΔᐃⵠⲆᐃⲆⵠΔ: "img/inv-iron-axe-out.png",
    ⲆⲆⲆΔᐃΔⵠᐃⵠ: "img/inv-iron-axe-in.png",
    ᐃΔΔᐃᐃᐃΔᐃΔ: "img/inv-iron-axe-click.png",
    ⲆⲆⲆᐃⵠᐃⵠᐃᐃ: "img/day-iron-axe.png",
    ᐃⵠⲆⵠⲆⲆΔⲆⲆ: "img/night-iron-axe.png",
    ⲆΔⵠⲆΔΔⵠⲆΔ: "img/inv-topaz-axe-out.png",
    ⲆΔⵠᐃⵠⵠᐃⵠⵠ: "img/inv-topaz-axe-in.png",
    ⲆⲆⵠᐃⵠⲆⲆⵠᐃ: "img/inv-topaz-axe-click.png",
    ⲆⲆⵠᐃⲆⲆΔⵠⵠ: "img/day-topaz-axe.png",
    ⲆⲆΔⵠⵠⲆᐃᐃΔ: "img/night-topaz-axe.png",
    ΔᐃⲆⲆⵠΔⵠⲆⵠ: "img/inv-sapphire-axe-out.png",
    ΔᐃΔⲆΔᐃⲆⵠⵠ: "img/inv-sapphire-axe-in.png",
    ⲆⲆⵠⲆⵠⲆⲆᐃᐃ: "img/inv-sapphire-axe-click.png",
    ⵠᐃΔⲆΔΔΔⲆΔ: "img/day-sapphire-axe.png",
    ΔᐃᐃᐃⵠΔⵠⲆΔ: "img/night-sapphire-axe.png",
    ΔᐃᐃⲆⵠᐃᐃⵠΔ: "img/inv-jade-axe-out.png",
    ⵠΔᐃᐃⵠⵠΔΔⵠ: "img/inv-jade-axe-in.png",
    ᐃⵠⵠⵠᐃⵠΔⲆⲆ: "img/inv-jade-axe-click.png",
    ⲆⵠⵠΔⲆᐃⵠⲆΔ: "img/day-jade-axe.png",
    ᐃᐃᐃⵠᐃⲆΔⵠⲆ: "img/night-jade-axe.png",
    ΔⵠΔᐃⲆᐃᐃᐃᐃ: "img/inv-ruby-axe-out.png",
    ᐃΔΔΔⲆΔΔⲆⵠ: "img/inv-ruby-axe-in.png",
    ᐃⲆⲆΔΔⲆⵠⲆΔ: "img/inv-ruby-axe-click.png",
    ᐃⲆⲆᐃΔⲆᐃⲆᐃ: "img/day-ruby-axe.png",
    ⵠⲆᐃⲆⲆⵠⵠΔⲆ: "img/night-ruby-axe.png",
    ⲆⵠⲆⲆΔⵠᐃⲆⲆ: "img/inv-coal-axe-out.png",
    ΔⵠⵠᐃⵠⵠⵠΔⵠ: "img/inv-coal-axe-in.png",
    ⲆⲆΔⲆⲆΔΔⵠⲆ: "img/inv-coal-axe-click.png",
    ΔⲆΔⵠᐃⲆⲆⵠⵠ: "img/day-coal-axe.png",
    ⵠΔᐃᐃᐃᐃⲆⵠΔ: "img/night-coal-axe.png",
    ⵠΔⲆⵠⲆⲆΔΔⵠ: "img/inv-aquamarine-axe-out.png",
    ᐃᐃⵠⵠΔΔᐃⵠⲆ: "img/inv-aquamarine-axe-in.png",
    ΔⵠᐃⲆᐃᐃΔᐃⲆ: "img/inv-aquamarine-axe-click.png",
    ⵠⵠᐃⵠⵠΔΔΔⵠ: "img/day-aquamarine-axe.png",
    ⵠᐃⵠⵠⲆΔⵠᐃᐃ: "img/night-aquamarine-axe.png",
    ΔⵠΔⵠⲆⵠⵠ: "img/bandage-activated.png",
    ⵠΔΔΔⲆⵠⵠ: "img/auto-feed.png",
    ⵠᐃΔⵠΔⵠᐃ: "img/stop-regeneration.png",
    ΔΔⲆⲆΔΔᐃ: "img/stop-regeneration2.png",
    ⵠΔΔⵠΔⲆⲆⵠⵠ: "img/day-wood-platform.png",
    ΔⵠⵠΔⵠᐃⲆΔΔ: "img/night-wood-platform.png",
    ⲆΔⲆⵠΔΔᐃᐃΔ: "img/inv-wood-platform-in.png",
    ⵠⵠⲆᐃⲆⲆΔᐃΔ: "img/inv-wood-platform-out.png",
    ⲆⵠⲆΔⵠΔΔⵠⲆ: "img/inv-wood-platform-click.png",
    ᐃⲆⲆⵠⵠⲆⵠΔⵠ: "img/day-wood-shield.png",
    ⵠⲆᐃᐃᐃΔΔⲆᐃ: "img/night-wood-shield.png",
    ⲆᐃⵠⲆᐃⵠⵠⵠᐃ: "img/day-stone-shield.png",
    ΔΔⲆΔΔᐃΔΔⲆ: "img/night-stone-shield.png",
    ⵠⵠΔⲆΔⲆΔΔΔ: "img/day-gold-shield.png",
    ⵠᐃᐃⲆⵠⲆⲆⲆᐃ: "img/night-gold-shield.png",
    ᐃΔⲆⵠⲆΔᐃᐃΔ: "img/day-diamond-shield.png",
    ⵠⵠⵠΔⵠⲆⲆⲆⵠ: "img/night-diamond-shield.png",
    ᐃⲆⲆΔⲆΔᐃⲆⵠ: "img/day-amethyst-shield.png",
    ⵠᐃΔⵠΔⵠⵠΔΔ: "img/night-amethyst-shield.png",
    ΔⵠΔⵠΔⲆΔᐃᐃ: "img/day-reidite-shield.png",
    ⲆΔⲆⵠᐃⵠᐃⲆⲆ: "img/night-reidite-shield.png",
    ⲆᐃⲆᐃⲆΔⲆᐃΔ: "img/inv-wood-shield-in.png",
    ⵠⲆᐃΔΔΔⵠⵠⲆ: "img/inv-wood-shield-out.png",
    ⲆΔᐃᐃᐃᐃᐃⲆⲆ: "img/inv-wood-shield-click.png",
    ᐃⵠᐃΔᐃᐃΔⵠΔ: "img/inv-stone-shield-in.png",
    ᐃΔᐃⲆⲆᐃΔⵠⵠ: "img/inv-stone-shield-out.png",
    ΔᐃᐃΔⲆⲆᐃⲆᐃ: "img/inv-stone-shield-click.png",
    ⵠⲆⲆᐃΔΔⲆᐃΔ: "img/inv-gold-shield-in.png",
    ⵠᐃⲆᐃΔⵠΔΔⲆ: "img/inv-gold-shield-out.png",
    ⵠⵠⲆΔⵠΔᐃΔⵠ: "img/inv-gold-shield-click.png",
    ⵠΔⵠⲆΔΔᐃΔⲆ: "img/inv-diamond-shield-in.png",
    ⵠⵠᐃⲆΔⵠⲆⲆᐃ: "img/inv-diamond-shield-out.png",
    ⵠⵠᐃᐃⲆⵠᐃⵠΔ: "img/inv-diamond-shield-click.png",
    ᐃΔⵠΔⲆΔⲆⵠᐃ: "img/inv-amethyst-shield-in.png",
    ᐃᐃⵠΔΔⲆⲆΔΔ: "img/inv-amethyst-shield-out.png",
    ΔⲆΔⲆΔⵠΔᐃⵠ: "img/inv-amethyst-shield-click.png",
    ᐃⵠᐃⵠⵠⵠᐃΔᐃ: "img/inv-reidite-shield-in.png",
    ⵠΔΔᐃⵠⲆⵠⲆᐃ: "img/inv-reidite-shield-out.png",
    ⵠᐃⲆⲆⲆᐃⵠᐃⲆ: "img/inv-reidite-shield-click.png",
    ⵠⵠⵠΔᐃᐃᐃⵠⲆ: "img/day-machete.png",
    ⲆⵠΔᐃⲆΔⲆⲆⵠ: "img/night-machete.png",
    ΔⵠⲆΔⲆⵠᐃΔⲆ: "img/inv-machete-in.png",
    ᐃⵠᐃⲆⲆⵠᐃᐃⲆ: "img/inv-machete-out.png",
    ΔΔΔⲆⲆⵠΔΔⲆ: "img/inv-machete-click.png"
  };
  ᐃⲆΔΔⵠᐃΔ = [{}];
  ᐃⲆΔΔⵠᐃΔ[0].stringify = function (p527) {
    var v766 = new Uint8Array(new ArrayBuffer(p527.length));
    for (var v767 = 0; v767 < p527.length; v767++) {
      v766[v767] = p527[v767];
    }
    return v766;
  };
  ⲆⵠⲆᐃⲆⲆⵠ = {};
  ᐃΔⵠᐃⲆⵠⵠⵠⲆ = {};
  for (var v768 in ᐃΔ) {
    ⲆⵠⲆᐃⲆⲆⵠ[v768] = ᐃΔ[v768];
  }
  const v769 = 0;
  ⵠΔ = [];
  ⲆⲆΔ = {};
  ⲆⲆΔ.ⵠᐃΔΔᐃ = 0;
  ⲆⲆΔ.ᐃⲆⵠⵠ = 1;
  ⲆⲆΔ.ⵠᐃⵠᐃ = 2;
  ⲆⲆΔ.ᐃⵠΔⵠ = 3;
  ⲆⲆΔ.Ⲇᐃⵠᐃ = 4;
  const v770 = 18;
  ⲆⲆΔ.ᐃⲆⵠⲆ = 5;
  ⲆⲆΔ.ᐃⲆⲆⲆ = 6;
  ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ = 7;
  ⲆⲆΔ.ⵠΔⲆⵠⵠ = 8;
  ΔⵠΔΔ = {};
  ⲆⲆⲆⵠ = [];
  const v771 = 1;
  ⲆⵠⵠΔⲆᐃΔ = function (p528, p529) {
    for (var v772 = 0; v772 < p528.length; v772++) {
      if (p528[v772].id === p529) {
        return v772;
      }
    }
    return -1;
  };
  var v773 = [];
  function f87(p530, p531) {
    for (var v774 = 0; v774 < v773.length; v774 += p531) {
      var v775 = v773[v774];
      if (p530 === v775[0]) {
        f88(v775[0], v775[1], v775[2], v775[3]);
      }
    }
  }
  const v776 = 10;
  function f88(p532, p533, p534, p535) {
    var v777 = ⲆⲆⲆⵠ[p532];
    if (v777 !== undefined) {
      for (var v778 = 0; v778 < 2; v778++) {
        var v779 = v777[p533][v778];
        var v780 = p535 * 193 / v2859.ⲆᐃᐃⲆΔ;
        var v781 = p534 * 193 / v2859.ⵠΔᐃΔⲆ;
        var v782 = v779.width / 3.5;
        var v783 = v779.height / 3.5;
        ⵠΔ[1067][v778].drawImage(v779, v780 - v782 / 2, v781 - v783 / 2, v782, v783);
        v780 = p535 * 600 / v2859.ⲆᐃᐃⲆΔ;
        v781 = p534 * 600 / v2859.ⵠΔᐃΔⲆ;
        v782 = v779.width / 1.5;
        v783 = v779.height / 1.5;
        ⵠΔ[1068][v778].drawImage(v779, v780 - v782 / 2, v781 - v783 / 2, v782, v783);
      }
    }
  }
  function f89(p536, p537, p538, p539) {
    if (p537) {
      p536.fillStyle = p537;
      p536.fill();
    }
    if (p538) {
      p536.lineWidth = p539;
      p536.strokeStyle = p538;
      p536.stroke();
    }
  }
  function f90(p540, p541, p542, p543, p544, p545) {
    if (p545 * 2 > p543) {
      p545 = p543 / 2;
    }
    if (p544 < p545 * 2) {
      p545 = p544 / 2;
    }
    if (p545 < 0) {
      p545 = 0;
    }
    p540.beginPath();
    p540.moveTo(p541 + p545, p542);
    p540.arcTo(p541 + p543, p542, p541 + p543, p542 + p544, p545);
    p540.arcTo(p541 + p543, p542 + p544, p541, p542 + p544, p545);
    p540.arcTo(p541, p542 + p544, p541, p542, p545);
    p540.arcTo(p541, p542, p541 + p543, p542, p545);
    p540.closePath();
  }
  function f91(p546, p547, p548, p549, p550) {
    p546.beginPath();
    p546.lineCap = "round";
    p546.arc(p547, p548, p549, 0, p550 * (Math.PI * 2));
  }
  function f92(p551, p552, p553, p554) {
    var v784 = Math.PI * 2 / p552;
    p551.beginPath();
    var v785 = [{
      x: p553,
      y: 0
    }];
    var v786 = [];
    for (var v787 = 1; v787 < p552; v787++) {
      v785.push({
        x: Math.sin(v787 * v784) * p553,
        y: p553 * Math.cos(v787 * v784)
      });
      var v788 = v785.length;
      v786.push(ⵠⵠΔ.ⲆⵠᐃΔΔΔⵠ(v785[v788 - 2], v785[v788 - 1]));
    }
    v786.push(ⵠⵠΔ.ⲆⵠᐃΔΔΔⵠ(v785[v785.length - 1], v785[0]));
    var v789 = v786[v786.length - 1];
    p551.moveTo(v789.x, v789.y);
    for (v787 = 0; p552 > v787; v787++) {
      p551.arcTo(v785[v787].x, v785[v787].y, v786[v787].x, v786[v787].y, p554);
    }
    p551.closePath();
  }
  function f93(p555, p556) {
    var v790 = document.createElement("canvas");
    var v791 = v790.getContext("2d");
    var v792 = Math.floor(p555 * 28);
    var v793 = Math.floor(p555 * 20);
    v791.font = v793 + "px Baloo Paaji";
    var v794 = p555 * 8;
    var v795 = v791.measureText(p556).width + v794 * 2;
    v790.width = v795;
    v790.height = v792;
    f90(v791, 0, 0, v795, v792, p555 * 10);
    v791.globalAlpha = 0.5;
    f89(v791, "#000");
    v791.globalAlpha = 1;
    v791.textBaseline = "middle";
    v791.font = v793 + "px Baloo Paaji";
    v791.beginPath();
    v791.fillStyle = "#FFF";
    v791.fillText(p556, v794, v792 / 2);
    return v790;
  }
  function f94(p557, p558, p559, p560) {
    p557.beginPath();
    p557.arc(p558, p559, p560, 0, Math.PI * 2);
  }
  function f95(p561, p562) {
    var v796 = document.createElement("canvas");
    var v797 = v796.getContext("2d");
    var v798 = Math.sqrt(p562.width * p562.width + p562.height * p562.height);
    d2 = v798 / 2;
    v796.width = v798;
    v796.height = v798;
    v797.translate(d2, d2);
    v797.rotate(p561);
    v797.drawImage(p562, -p562.width / 2, -p562.height / 2);
    return v796;
  }
  ΔⲆᐃⲆⵠⲆΔᐃⲆ = function () {
    for (var v799 = 0; v799 < 2; v799++) {
      ⵠΔ[1067][v799].clearRect(0, 0, 193, 193);
      ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.MAP[v799], 0, 0, 193, 193);
      ⵠΔ[1068][v799].clearRect(0, 0, 600, 600);
      ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.MAP[v799], 0, 0, 600, 600);
      for (var v800 = v2859.ⵠᐃᐃΔΔ.length - 1; v800 >= 0; v800--) {
        var v801 = v2859.ⵠᐃᐃΔΔ[v800];
        var v802 = v801.x1 * 193 / (v2859.ⲆᐃᐃⲆΔ * 100);
        var v803 = v801.y1 * 193 / (v2859.ⵠΔᐃΔⲆ * 100);
        var v804 = v801.w * 193 / (v2859.ⲆᐃᐃⲆΔ * 100);
        var v805 = v801.ᐃⵠⵠ * 193 / (v2859.ⵠΔᐃΔⲆ * 100);
        var v806 = v801.x1 * 600 / (v2859.ⲆᐃᐃⲆΔ * 100);
        var v807 = v801.y1 * 600 / (v2859.ⵠΔᐃΔⲆ * 100);
        var v808 = v801.w * 600 / (v2859.ⲆᐃᐃⲆΔ * 100);
        var v809 = v801.ᐃⵠⵠ * 600 / (v2859.ⵠΔᐃΔⲆ * 100);
        if (v2859.ⲆΔᐃΔᐃⵠⲆ === v801.ⵠⲆΔ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.FOREST[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.FOREST[v799], v806, v807, v808, v809);
        }
        if (v2859.ⲆᐃΔⲆⵠΔΔ === v801.ⵠⲆΔ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.JUNGLE[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.JUNGLE[v799], v806, v807, v808, v809);
        }
        if (v801.ⵠⲆΔ === v2859.ⵠⵠⵠᐃⲆⲆⲆ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.WINTER[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.WINTER[v799], v806, v807, v808, v809);
        }
        if (v801.ⵠⲆΔ === v2859.ΔΔΔΔⵠΔⲆ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.LAVA[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.LAVA[v799], v806, v807, v808, v809);
        }
        if (v2859.ⵠⲆΔⲆⵠⵠⵠ === v801.ⵠⲆΔ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.CAVE[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.CAVE[v799], v806, v807, v808, v809);
        }
        if (v801.ⵠⲆΔ === v2859.ᐃⲆᐃⵠⵠⲆⲆ) {
          ⵠΔ[1067][v799].drawImage(ⲆⲆⲆⵠ.DESERT[v799], v802, v803, v804, v805);
          ⵠΔ[1068][v799].drawImage(ⲆⲆⲆⵠ.DESERT[v799], v806, v807, v808, v809);
        }
      }
    }
  };
  ⵠΔⲆΔΔΔⵠⵠΔ = function () {
    ΔⵠΔΔ = {
      ΔΔΔⲆⲆ: [{
        id: 0,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃΔᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠⲆᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠΔᐃⲆⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⲆΔᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Starver"
      }, {
        id: 3,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠΔᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠΔΔⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃΔᐃⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⵠᐃⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Angry"
      }, {
        id: 2,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔᐃᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠᐃⵠⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔⵠᐃⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆΔΔᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Sad"
      }, {
        id: 9,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔᐃᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠⵠⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠᐃⲆⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆᐃⲆⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Happy 1"
      }, {
        id: 1,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠⵠᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃᐃⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⲆⲆⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⲆᐃΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "What?"
      }, {
        id: 4,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠΔⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃΔΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔᐃᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔⲆⵠΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Suspicious"
      }, {
        id: 5,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⲆⲆⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔᐃⵠᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠⲆΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Scar"
      }, {
        id: 6,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔΔⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆⲆⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃⵠⲆΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆⵠⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "In Trouble"
      }, {
        id: 7,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⵠΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆΔⵠⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆΔΔᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⵠⲆᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Cute"
      }, {
        id: 8,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⲆⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⵠⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠᐃⲆⲆᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⲆⲆⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bored 1"
      }, {
        id: 10,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃΔᐃᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆᐃⵠⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Happy 2"
      }, {
        id: 11,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆᐃⲆΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃⵠⲆΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆΔΔⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆΔΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Crazy"
      }, {
        id: 12,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃΔᐃⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⲆⵠⵠᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⵠⵠⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⵠΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Happy 3"
      }, {
        id: 13,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃᐃⵠᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃᐃⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔⵠⵠⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Very Cute"
      }, {
        id: 14,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠᐃᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⵠᐃⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠΔⵠΔΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔⲆᐃⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Curious"
      }, {
        id: 15,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃΔⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⲆΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔᐃΔⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆⵠⲆΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bored 2"
      }, {
        id: 16,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔΔᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆᐃΔᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔᐃᐃⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃΔᐃⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Happy 4"
      }, {
        id: 17,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃΔⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃᐃⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃᐃⵠΔⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔΔⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Scar 2"
      }, {
        id: 18,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠⵠᐃⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠᐃΔⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆΔⵠⵠᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠΔⵠΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Sick"
      }, {
        id: 19,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆΔⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⵠⵠⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⲆΔᐃΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆⵠΔΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Somnambule"
      }, {
        id: 24,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠⲆᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆΔⲆᐃⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃᐃΔⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔΔᐃⵠⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Pixelbitie",
        name: "Feel Bad"
      }, {
        id: 23,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⵠⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⵠᐃΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠⵠⲆⵠⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Pixelbitie",
        name: "Mmmh."
      }, {
        id: 103,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⲆᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔΔᐃⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔⵠⲆΔⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Panic"
      }, {
        id: 105,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆᐃᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆᐃⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠⵠⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆΔΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Hypnotic"
      }, {
        id: 106,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆΔᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔᐃΔⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⵠⲆᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Stars in the eyes"
      }, {
        id: 220,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃΔΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆᐃⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⲆⲆᐃᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠᐃᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Seams"
      }, {
        id: 239,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔⲆᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠΔⵠΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃⲆᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⲆⵠⵠⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Wooden Door"
      }, {
        id: 104,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆᐃⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆᐃⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃⲆⲆᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⲆⲆⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Scared at night"
      }, {
        id: 20,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⲆⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆᐃⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆⵠⲆⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔΔΔΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Vampire"
      }, {
        id: 21,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃⵠⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⵠᐃᐃΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔⵠⲆⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃⵠΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Zombie"
      }, {
        id: 22,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠᐃⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃΔⲆΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⲆⵠⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃⵠⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Pixelbitie",
        name: "Devaster"
      }, {
        id: 116,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⵠΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠⵠⵠⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠⲆⵠᐃⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃᐃΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Fukss",
        name: "Dead Devaster"
      }, {
        id: 27,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃᐃⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⵠᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆΔⲆⲆᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠᐃΔⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Winter",
        name: "Cactus"
      }, {
        id: 28,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠᐃⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔΔΔⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⵠⲆⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⲆⵠⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Bee"
      }, {
        id: 49,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃᐃᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠⵠᐃᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⲆⵠΔΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆΔⲆⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life",
        name: "Camo Skin"
      }, {
        id: 58,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⲆΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠΔⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⲆᐃΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃΔΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Blue Limax Skin"
      }, {
        id: 59,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⲆᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠⵠⵠᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠⵠⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔΔⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Red Limax Skin"
      }, {
        id: 94,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆᐃⲆⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⵠΔᐃᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔⲆⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Pumpkin"
      }, {
        id: 109,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃΔⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆⵠⵠᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔⲆΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆⵠⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Wood"
      }, {
        id: 114,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆΔᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⵠᐃⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔᐃⵠⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⵠΔⲆⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Zebra"
      }, {
        id: 120,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔⲆΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠᐃⲆⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔΔⲆⲆΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔⵠΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "CrysTal",
        name: "Tiger"
      }, {
        id: 134,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠᐃⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆⲆᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠⲆᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃⲆⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Franchestcreator",
        name: "Day or Night"
      }, {
        id: 135,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠⵠⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃᐃΔⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠΔⲆⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Poinet",
        name: "Square Starver"
      }, {
        id: 136,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃⲆᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔΔⵠⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔⵠⲆⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⵠΔΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Voodoo Doll"
      }, {
        id: 137,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃᐃⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⵠⲆⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆΔᐃᐃᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⵠⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Frankenstein"
      }, {
        id: 138,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆΔⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃΔΔⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⲆᐃⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆⵠΔⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Mummy"
      }, {
        id: 139,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⲆΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⵠΔᐃⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔᐃΔΔⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆⲆΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Werewolf"
      }, {
        id: 140,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⵠᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔⲆΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔⲆΔᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⲆΔᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Cthulhu"
      }, {
        id: 141,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⲆⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⵠⲆⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⲆⲆⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃΔΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Sea Man"
      }, {
        id: 142,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠⵠⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⲆⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃΔⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃᐃᐃⵠⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Pumpkin"
      }, {
        id: 148,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃᐃⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⲆⵠⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃΔΔΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃᐃⵠᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Snowman"
      }, {
        id: 149,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠⵠᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠⵠⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃᐃⵠᐃⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃᐃΔⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Christmas Tree Man"
      }, {
        id: 150,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔⲆⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⲆⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔᐃᐃᐃⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠΔᐃᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Mrs Bell"
      }, {
        id: 151,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆⵠᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠⲆⲆⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃΔᐃᐃΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⵠΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Elfy"
      }, {
        id: 152,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠᐃᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔᐃᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⵠⵠⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃⲆᐃⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Mr Present"
      }, {
        id: 153,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⵠΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⵠᐃΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⲆΔᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⲆᐃⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "My Dear Old Deer"
      }, {
        id: 154,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠΔΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔᐃⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃΔⲆⲆⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⲆᐃᐃΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr Angel"
      }, {
        id: 155,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⵠᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⵠΔΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔᐃⲆᐃⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr Ice Cube"
      }, {
        id: 156,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠⵠⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠⵠⲆⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⲆⲆΔΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⵠΔⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr Snowman"
      }, {
        id: 159,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠⵠΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⲆⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆⵠⵠᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⵠᐃⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "CrysTal",
        name: "Crystal Sky Skin"
      }, {
        id: 167,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠⲆⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔⵠⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⵠⵠᐃΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆⵠⵠᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Franchestcreator",
        name: "Radioactive Starver"
      }, {
        id: 169,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃᐃᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃⲆΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃⲆⵠⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⵠΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "TheScaryBlaze",
        name: "Eaten Cookie"
      }, {
        id: 170,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⵠⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.Δⵠⵠᐃᐃᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠⲆⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⲆⲆᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "aloner",
        name: "Blob Thing"
      }, {
        id: 172,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔᐃⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃⵠⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆᐃⵠᐃᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⵠⲆΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "aloner",
        name: "Machine Mask"
      }, {
        id: 184,
        ⵠᐃⵠ: ᐃΔ.Ⲇᐃᐃⵠⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆᐃᐃᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃᐃᐃⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃΔⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mad"
      }, {
        id: 206,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆᐃⵠⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔᐃⲆⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⵠⲆΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⵠᐃⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Survivor"
      }, {
        id: 209,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⲆⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆᐃᐃⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃⵠⵠΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⵠᐃⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Starverator"
      }, {
        id: 230,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃΔⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠΔⵠᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃΔΔⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔᐃⵠⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Totem"
      }, {
        id: 231,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃⵠΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃΔΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⲆⵠΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃΔⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Big Pile of Sand"
      }, {
        id: 232,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⲆᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔΔⵠⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔⲆⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⲆᐃⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Big Pile of Dirt"
      }, {
        id: 235,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠᐃΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃᐃⲆⵠᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⵠⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Sandstone"
      }, {
        id: 240,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠⲆⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⵠᐃᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⲆⲆΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔⵠΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Berry Stone"
      }, {
        id: 241,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃΔⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃⵠⲆⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠΔΔΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⵠⲆᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Blue Pattern"
      }, {
        id: 242,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔᐃⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⵠⲆΔⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⵠΔᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Pond"
      }, {
        id: 29,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃΔᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃⵠⲆΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃⲆΔⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Pixelbitie",
        name: "Lollipop 1"
      }, {
        id: 30,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆᐃΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⲆⲆⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⲆᐃⲆΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆᐃΔᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Lollipop 2"
      }, {
        id: 31,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠΔᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃᐃⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃᐃᐃΔⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⵠⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Lollipop 3"
      }, {
        id: 32,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆᐃⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔᐃᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃⵠⵠᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔᐃᐃⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Lollipop 4"
      }, {
        id: 33,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆⲆⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃᐃᐃΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Sushui",
        name: "Yellow Bird"
      }, {
        id: 34,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃΔⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔᐃⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔΔᐃΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⲆⵠᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Sushui",
        name: "Red Bird"
      }, {
        id: 35,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠⲆᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠⲆΔᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃΔⲆΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⵠⲆⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Sushui",
        name: "Blue Bird"
      }, {
        id: 37,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠᐃⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⵠᐃⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⲆᐃⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠΔΔⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Winter",
        name: "Owl"
      }, {
        id: 52,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⲆΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆⵠⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔⵠᐃⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃᐃΔⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Nemo"
      }, {
        id: 53,
        ⵠᐃⵠ: ᐃΔ.ᐃΔΔᐃΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔⵠⵠⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃᐃΔᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃΔⲆΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Bread"
      }, {
        id: 74,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆᐃΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆΔᐃⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃᐃᐃⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆⵠⵠⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Communist & Taco4Life",
        name: "Mr. Bread 2"
      }, {
        id: 75,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆᐃΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⵠⲆΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠΔᐃᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠⲆⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Communist & Taco4Life",
        name: "Mr. Bread 3"
      }, {
        id: 60,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⵠᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔⲆᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆᐃⲆⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆⲆⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Red Berry"
      }, {
        id: 61,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆⵠΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔᐃⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃᐃΔⵠΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Old Berry"
      }, {
        id: 70,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠᐃⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔᐃᐃᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠⵠΔⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔᐃⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Cake"
      }, {
        id: 71,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃᐃⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠΔᐃⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠΔⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃⵠⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Christmas Cake"
      }, {
        id: 77,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⲆⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃᐃⵠⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔⲆⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⵠⲆᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Pancakez",
        name: "Mr. Pancake"
      }, {
        id: 87,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠᐃᐃⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆⵠΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔᐃᐃΔᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃᐃᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Taco"
      }, {
        id: 78,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠⲆᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆⵠΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⵠⲆΔⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔᐃᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Bottle"
      }, {
        id: 79,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆΔΔᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⵠⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃⵠΔⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⵠΔⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Bottle 2"
      }, {
        id: 97,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃᐃᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠⲆⵠⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃΔⵠᐃⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⲆⵠᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Pink Rabbit"
      }, {
        id: 102,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⵠⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⵠᐃⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠΔⵠᐃΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃΔΔⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Marshmallow"
      }, {
        id: 107,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔⲆΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆᐃΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃΔⵠᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⵠᐃᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Fox"
      }, {
        id: 132,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠⲆᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆⲆⲆΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃᐃᐃⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔⵠⵠᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Raccoon"
      }, {
        id: 111,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⵠⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆⵠⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⵠΔᐃᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃᐃΔᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Cloud"
      }, {
        id: 113,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠᐃⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃΔⵠΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔⲆᐃΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃΔᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Moon"
      }, {
        id: 117,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔᐃΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆΔᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃᐃⲆᐃⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔⲆΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Mr. Panda"
      }, {
        id: 118,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃΔΔᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⵠⵠᐃΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆΔⲆΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Mr. Strawberry"
      }, {
        id: 119,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆᐃⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆⵠᐃⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⲆⲆᐃΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆⲆΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito & Sushuui",
        name: "Mummy"
      }, {
        id: 122,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔᐃⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔᐃΔⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃΔΔⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃᐃⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Dino"
      }, {
        id: 127,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⵠⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠⵠᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃⲆⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⵠⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Mr. Koala"
      }, {
        id: 160,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔⲆΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃᐃⵠᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⲆΔΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bottle Protection"
      }, {
        id: 162,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠⲆⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠⲆᐃⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔᐃⵠΔΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃⵠΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "CrysTal",
        name: "Leaf Man"
      }, {
        id: 166,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆΔᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⵠᐃⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⵠⵠⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃⵠᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Bubble"
      }, {
        id: 174,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃⲆⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃᐃⲆⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⲆⲆᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔⲆΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "upfiz",
        name: "Potato"
      }, {
        id: 171,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆᐃᐃᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⲆΔΔⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⲆⵠᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "aloner",
        name: "Axolotl"
      }, {
        id: 178,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃᐃⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔΔᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃᐃᐃⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⲆⲆᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Rusted Machine"
      }, {
        id: 179,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆΔⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠⵠⵠⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⵠⲆᐃΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⵠΔΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Starving Machine"
      }, {
        id: 181,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆᐃΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⲆⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⵠᐃᐃⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⵠᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Night Stars"
      }, {
        id: 191,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃΔΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃΔⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃⵠⲆΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠᐃⵠΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Blue Jay"
      }, {
        id: 198,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆΔᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠᐃⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔΔⲆᐃΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠᐃᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "AWTP",
        name: "Dave"
      }, {
        id: 200,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆᐃΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠⵠⲆⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠΔⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆΔⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Jinty",
        name: "Smug"
      }, {
        id: 203,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆΔΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠᐃⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃⵠΔᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Reclaimed"
      }, {
        id: 204,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠⵠⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠⲆⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆᐃⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⵠⲆᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Legacy Wolf"
      }, {
        id: 211,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆΔΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⲆⵠΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆΔⲆⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Starver of the Seas"
      }, {
        id: 213,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃᐃⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠΔΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⵠᐃᐃᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃΔⵠⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Ice"
      }, {
        id: 219,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔΔΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⵠⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔΔⵠⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃⵠⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Ramil",
        name: "Sandwich Cookie"
      }, {
        id: 221,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃᐃᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃΔⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃⵠⲆⲆⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⵠΔΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Purple Geode"
      }, {
        id: 222,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔΔᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆⲆⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠᐃΔⲆⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃΔⲆᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Cyan Geode"
      }, {
        id: 223,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔⵠⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔΔⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⲆΔⲆΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆᐃⵠᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Yellow Geode"
      }, {
        id: 228,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃΔⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⲆⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔⲆⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃᐃⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Furnace Head"
      }, {
        id: 229,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆⲆⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔⲆᐃΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆΔΔⲆΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃΔΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bag"
      }, {
        id: 227,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆⵠΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃΔⲆⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆⲆⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆⵠΔⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Lit Furnace Head"
      }, {
        id: 243,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⵠΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃΔΔⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⲆΔⵠⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠΔᐃⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Pink Donut"
      }, {
        id: 244,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔᐃⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆᐃⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⵠᐃⵠΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃⲆⲆⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Brown Donut"
      }, {
        id: 245,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔΔⵠⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃⵠΔᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃᐃⵠΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⵠⲆᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "White Donut"
      }, {
        id: 246,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆΔⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⲆⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠᐃΔⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠⲆⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Empty Well"
      }, {
        id: 247,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔᐃᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⲆⵠᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔⲆⵠⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆᐃⵠⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Water Well"
      }, {
        id: 248,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆⵠⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⵠⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⲆⲆⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃΔⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Fall Starver"
      }, {
        id: 263,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠΔᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔⲆⵠᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔᐃⲆⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃⲆΔⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Clock"
      }, {
        id: 264,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃⲆⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⵠΔΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⵠⲆΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⵠΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Behind You"
      }, {
        id: 25,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠⵠⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔⵠᐃⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃΔᐃΔΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Pixelbitie",
        name: "Test Dummy"
      }, {
        id: 41,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⵠⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃⵠΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔᐃΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠΔᐃⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Star-ver"
      }, {
        id: 43,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⲆⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⲆⵠⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠΔᐃΔΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⲆⵠᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Starver Chest"
      }, {
        id: 88,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⲆΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃⵠⵠΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⲆᐃⵠᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔⵠᐃⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Starver Workbench"
      }, {
        id: 121,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠΔⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔᐃⲆΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔⵠⲆᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⵠΔᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Fish"
      }, {
        id: 39,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃᐃΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⵠΔΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⵠⵠⵠⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔⵠΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Negligent4Dia",
        name: "Crab"
      }, {
        id: 40,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃⲆΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⵠⵠⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⵠⲆⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆᐃΔᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Negligent4Dia",
        name: "Piranha"
      }, {
        id: 36,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⵠⵠⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⲆⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⵠᐃΔᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔⵠⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Winter Fox"
      }, {
        id: 69,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠⲆΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃᐃⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠΔᐃⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆΔΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Zed",
        name: "Baby Foxy"
      }, {
        id: 51,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⵠΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆᐃΔᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⲆⲆⲆᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔΔⲆᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "HOWI",
        name: "Winter Bear"
      }, {
        id: 133,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔᐃⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⲆΔⵠᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔⲆⵠⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔΔᐃⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Hawk"
      }, {
        id: 55,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃᐃᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⲆᐃⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃΔⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Nice Little Yuki"
      }, {
        id: 68,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⵠΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠᐃⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠᐃⲆΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠΔⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life",
        name: "Baby Yuki"
      }, {
        id: 62,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⵠⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⵠⵠⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠΔΔⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆⲆⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Carrot"
      }, {
        id: 56,
        ⵠᐃⵠ: ᐃΔ.Ⲇᐃᐃⵠⵠⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⵠᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⲆΔᐃΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⵠΔΔⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bat Limax"
      }, {
        id: 72,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⲆⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠΔⵠⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃⵠⲆΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆᐃⲆΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Mr. Crate"
      }, {
        id: 73,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⲆΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⲆⲆΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⲆⲆⲆⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃΔΔⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life & eogito",
        name: "Mr. Spider"
      }, {
        id: 93,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⵠΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠⲆⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃⲆΔᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠΔⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Anyone want to play?",
        name: "Mr. Spider 2"
      }, {
        id: 82,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⲆᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆᐃⲆⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃΔⵠᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔΔΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Blue Starfish"
      }, {
        id: 83,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠⲆⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⵠⲆⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⵠⵠΔⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃⲆᐃⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Orange Starfish"
      }, {
        id: 84,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔΔᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔⵠⲆᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔΔⵠΔⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃΔⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Pink Starfish"
      }, {
        id: 85,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔⵠⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃⲆᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔᐃΔⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃⲆΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. ShellMauve"
      }, {
        id: 86,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⵠΔⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⵠⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⲆΔⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⲆⲆᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Shell Bead"
      }, {
        id: 96,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⲆⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠΔⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃᐃᐃⵠΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠΔⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Fukss",
        name: "Angry Crab"
      }, {
        id: 98,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆᐃⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⲆΔⲆⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃᐃᐃⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⵠΔⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Penguin"
      }, {
        id: 126,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆΔΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⵠᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⲆⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Anyone want to play?",
        name: "Mr. Boar"
      }, {
        id: 145,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔⵠⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔᐃⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⵠᐃΔⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔⵠⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "I saw you"
      }, {
        id: 146,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃΔⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃⲆⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⲆⲆᐃᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃⵠⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "It was funny"
      }, {
        id: 147,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃΔᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔⵠⵠⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔⵠᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⵠⲆΔⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "You can scream"
      }, {
        id: 158,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⲆΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠΔΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃⵠⲆᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⲆⲆΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Mr. Book"
      }, {
        id: 163,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔΔⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔᐃΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃᐃⵠΔⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃΔⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Anyone want to play?",
        name: "Mr. Mammoth"
      }, {
        id: 164,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠΔⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⵠΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⵠᐃΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃᐃΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "SoOw",
        name: "Mr. Mammoth 2"
      }, {
        id: 161,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⲆⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠᐃΔⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔᐃⲆᐃᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⲆᐃΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Nightmare"
      }, {
        id: 168,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃⵠᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔᐃΔᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆΔΔΔⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃⵠΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Shiny Crystal"
      }, {
        id: 173,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆᐃᐃⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠⵠΔᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆᐃΔⲆⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⲆᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Water skin"
      }, {
        id: 175,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠΔⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠΔᐃΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔⲆⲆᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⵠᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Fall Berry Bush Starver"
      }, {
        id: 176,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃᐃΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆΔⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⲆⲆΔⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠΔⲆᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Christmas Berry Bush Starver"
      }, {
        id: 177,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃΔⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠⵠⵠΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⵠⲆⵠⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆΔᐃⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Berry Bush Starver"
      }, {
        id: 182,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔⵠⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⵠⲆⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃⵠⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⵠⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamer"
      }, {
        id: 185,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⵠΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃᐃⲆⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃΔΔᐃⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃΔΔΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Wolf"
      }, {
        id: 186,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔⵠᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔⵠΔᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃᐃⲆⵠᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃᐃΔΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Snow Wolf"
      }, {
        id: 187,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔᐃⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠΔᐃⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⵠΔⵠᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔⲆⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Rabbit"
      }, {
        id: 188,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⵠΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠΔᐃⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆⲆⲆⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆⵠⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Snow Rabbit"
      }, {
        id: 189,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠᐃΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⲆⲆΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆΔⲆⵠᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⵠᐃⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Bear"
      }, {
        id: 190,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔᐃⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃᐃⵠⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⲆᐃⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆⵠᐃᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Polar Bear"
      }, {
        id: 196,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⲆⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔᐃΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃΔⲆⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔΔⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Crying Angel"
      }, {
        id: 202,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆᐃᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃΔⵠΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠᐃⲆⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Fennec"
      }, {
        id: 207,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆᐃⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆΔᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⵠⲆⲆⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃΔΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Decay"
      }, {
        id: 212,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃΔⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⵠΔΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆΔΔΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⵠΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Pillow"
      }, {
        id: 218,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆⲆⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆΔΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃΔⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆⵠⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Exotic"
      }, {
        id: 224,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠⲆⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠΔⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⵠⵠⲆⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃᐃⵠᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Apple"
      }, {
        id: 225,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⲆⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠΔᐃΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃⵠⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃᐃᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Golden Apple"
      }, {
        id: 233,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔΔΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔᐃΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⲆⵠΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃΔⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Lava Cube"
      }, {
        id: 234,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠᐃⲆΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠᐃⲆΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⲆⵠⵠⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃᐃⵠᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Dragon Cube"
      }, {
        id: 249,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⵠⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔᐃᐃᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⵠⲆⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠᐃⲆᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Parrot"
      }, {
        id: 250,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⲆᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔΔⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃᐃΔΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠᐃⲆⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Angry Parrot"
      }, {
        id: 251,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆᐃⵠΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔΔᐃΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆΔᐃⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔⲆⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Winter Starver"
      }, {
        id: 252,
        ⵠᐃⵠ: ᐃΔ.ᐃΔΔⵠΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔᐃⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃⲆΔⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃΔⲆᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Light Bulb"
      }, {
        id: 265,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔⵠⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⲆⵠΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃᐃᐃΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Map"
      }, {
        id: 266,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔᐃᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔⲆᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆⵠⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃᐃⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "New Map"
      }, {
        id: 267,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⲆⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⵠᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔΔΔⲆᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠⵠᐃᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Witch Broom"
      }, {
        id: 42,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃΔᐃᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆᐃᐃᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔᐃᐃᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⲆⲆⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Winter",
        name: "Will-O'-The-Wisp"
      }, {
        id: 91,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⲆⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠⲆⲆⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃⵠⵠⲆᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔⵠⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "ExpertyAnimations",
        name: "Flame"
      }, {
        id: 26,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⲆⵠⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃΔΔᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔᐃⵠΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⵠᐃⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Be a Tree"
      }, {
        id: 38,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆᐃⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⵠΔⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠⲆⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃⵠᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Winter",
        name: "Toxic Mutant"
      }, {
        id: 50,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠᐃⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆΔᐃΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃΔᐃⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔⲆΔⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Communist",
        name: "Mr. Tomato"
      }, {
        id: 54,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⲆΔⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠᐃⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⵠΔⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠΔⵠⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Mauve, the Lapa"
      }, {
        id: 57,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⲆΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆⵠⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⲆΔᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃΔΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Golden Fish"
      }, {
        id: 64,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠⲆⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔⵠⲆᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃᐃⵠⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔⲆΔᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "LapaMauve"
      }, {
        id: 65,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⲆⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠᐃⵠⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠΔⵠᐃⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔⵠⲆᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "LapaMauve "
      }, {
        id: 92,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⵠⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔᐃⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔⲆⵠⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⵠⲆΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Burger"
      }, {
        id: 66,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔᐃᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠᐃᐃⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆΔᐃΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "pizza wa",
        name: "Tropical Starver"
      }, {
        id: 80,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆⲆΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆⲆΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⲆΔⲆΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃⵠᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. ShellPink"
      }, {
        id: 81,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃⲆΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⲆⲆⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆΔⲆΔⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⲆᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. OranShell"
      }, {
        id: 99,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆⲆΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆΔΔᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃΔⵠᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃⲆᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Pepe"
      }, {
        id: 100,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⵠΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠᐃᐃᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃᐃⲆᐃΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⲆᐃᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "fatant",
        name: "Mr. Ant"
      }, {
        id: 115,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⵠⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⵠᐃΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃⵠΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔⵠΔⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Mr. Watermelon"
      }, {
        id: 101,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⵠⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔΔⲆⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔⵠⲆΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆⲆⵠⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Thornbush"
      }, {
        id: 131,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⵠⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠⲆⵠⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⲆΔⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔᐃΔⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Cthulhu"
      }, {
        id: 143,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆⵠⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⵠᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆᐃᐃⵠᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔᐃⵠⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Mr. Cactus"
      }, {
        id: 144,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⲆΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃΔᐃΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⵠΔⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Momo"
      }, {
        id: 180,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆⲆⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠᐃⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆⵠΔⲆᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔⵠΔΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Scream"
      }, {
        id: 193,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⲆⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆⵠⲆⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⵠᐃΔΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃⵠⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Dragon"
      }, {
        id: 195,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔᐃΔⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠᐃⵠⲆΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠⵠΔΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Forest Spirit"
      }, {
        id: 197,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔΔⲆⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⲆᐃⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠⲆΔⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Evil Goat"
      }, {
        id: 199,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠᐃΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔΔⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔΔⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔᐃᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Rotten"
      }, {
        id: 201,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠΔΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃᐃⵠΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⵠⲆⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆᐃⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Fossil"
      }, {
        id: 205,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃᐃᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃⵠⲆⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆᐃⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔᐃΔⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Spectrum"
      }, {
        id: 210,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃᐃⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⵠᐃⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠᐃⲆⲆΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠΔⲆⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Helpy",
        name: "Black Cat"
      }, {
        id: 214,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆΔⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠΔⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⲆⵠⵠⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃᐃᐃᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Lynx"
      }, {
        id: 215,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠᐃⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⲆΔᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⲆⲆⲆⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃΔⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Warg"
      }, {
        id: 217,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠΔΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠⵠᐃⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆⵠⲆΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⵠᐃΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Menhir"
      }, {
        id: 253,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃΔΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆⵠΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔⵠᐃⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔᐃⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Ocelot"
      }, {
        id: 254,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆΔⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃⲆⵠΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠᐃⲆⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Angry Ocelot"
      }, {
        id: 255,
        ⵠᐃⵠ: ᐃΔ.ᐃΔΔᐃΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃⵠⲆΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠⲆⵠⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆᐃⵠᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Crocodile"
      }, {
        id: 256,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔᐃΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔⲆⵠᐃⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔᐃⵠⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠΔᐃⵠᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Angry Crocodile"
      }, {
        id: 257,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⵠⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔΔΔᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃⵠΔᐃΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠᐃⲆⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Candle"
      }, {
        id: 258,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠⲆΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠΔᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔΔΔᐃⵠⵠⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔⲆᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Bomb"
      }, {
        id: 259,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔᐃⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠⵠⵠΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠᐃΔⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔΔΔΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Red Mushroom"
      }, {
        id: 260,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⵠΔΔΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆΔᐃᐃⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠΔΔⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Green Mushroom"
      }, {
        id: 95,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⵠᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⲆᐃⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆⵠΔⲆΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃⵠⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Mr. Garlic"
      }, {
        id: 76,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔⵠΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠᐃⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⵠⵠᐃᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⲆⵠⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Robot Dragon"
      }, {
        id: 44,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆΔᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆⵠΔⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔⵠⵠΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃΔⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Lava Dragon Version 1"
      }, {
        id: 90,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⵠΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⵠⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠΔᐃᐃᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃⲆΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "ExpertyAnimations",
        name: "Lava Dragon Version 2"
      }, {
        id: 124,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠΔΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⵠⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃⵠⲆΔⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃⵠⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Lava Dragon Version 3"
      }, {
        id: 45,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠᐃᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔⲆⵠⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⲆⲆⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆΔⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Sushui",
        name: "Ice Dragon Version 1"
      }, {
        id: 46,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃⲆⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠᐃΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠᐃΔⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠᐃᐃΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Ice Dragon Version 2"
      }, {
        id: 108,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠᐃⵠΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃᐃⲆⵠᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃᐃⲆⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Ice Dragon Version 3"
      }, {
        id: 123,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠᐃΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠᐃᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆᐃᐃΔⲆⵠⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⲆⲆⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Baby Dragon Version 1"
      }, {
        id: 128,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆᐃⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⲆᐃΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠᐃⲆⲆΔⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⵠᐃΔΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Baby Dragon Version 2"
      }, {
        id: 125,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠΔΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃⲆᐃⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃΔΔᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆⵠⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Baby Lava"
      }, {
        id: 47,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠᐃΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃΔⲆΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆΔⲆΔΔΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃⲆᐃⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Kraken"
      }, {
        id: 129,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃΔᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⲆᐃΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠⵠᐃⲆΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⲆᐃΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Sandworm"
      }, {
        id: 63,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆᐃᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔᐃⵠᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠΔᐃΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔᐃⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Golden Bread"
      }, {
        id: 67,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆᐃᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆᐃᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔΔΔΔᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⲆⲆᐃΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "ForgottenHeroe",
        name: "Starver Ores"
      }, {
        id: 130,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⲆᐃΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆⲆⵠⲆⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠⵠᐃΔΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃⲆⵠΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Poo"
      }, {
        id: 89,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔⵠⵠⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔⵠᐃⲆᐃΔ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆᐃΔᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Poinet",
        name: "Volcano Starver"
      }, {
        id: 112,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⲆΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⵠΔⵠⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃΔⲆⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃᐃΔⲆⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Lava Starver"
      }, {
        id: 183,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠΔᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠⲆⲆΔᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆΔⵠⵠⲆⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⵠⵠⵠⵠⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Revaster"
      }, {
        id: 192,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠΔΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃᐃΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⵠᐃΔⲆΔᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆΔⵠᐃⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Awakened"
      }, {
        id: 194,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⲆΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔᐃᐃⲆⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃΔΔⲆᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⲆΔᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Ice Dragon"
      }, {
        id: 236,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⵠⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃᐃⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠΔᐃᐃⲆⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆᐃᐃΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Crystal Dragon"
      }, {
        id: 208,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⵠᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆΔΔΔΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠΔΔⵠΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⲆΔⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Bone Dragon"
      }, {
        id: 216,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⲆⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠᐃΔⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⲆΔⵠⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃᐃΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Warg Ghost"
      }, {
        id: 226,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃΔᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔⲆΔⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃᐃⵠⵠⲆⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆⲆⲆⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Cursed"
      }, {
        id: 261,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃᐃⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠⲆⵠᐃᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⵠᐃᐃᐃᐃⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆᐃⵠΔΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Orange Robot"
      }, {
        id: 262,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔΔᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃⵠΔᐃΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃⲆΔⲆⲆⵠᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔΔⲆⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Windmill"
      }, {
        id: 268,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃⲆΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠΔⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ᐃΔᐃΔⵠΔⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⲆΔᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Golden Hen"
      }, {
        id: 269,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃⲆᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⲆⵠΔⵠ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔᐃΔΔⵠⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔΔᐃⲆⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Angry Golden Hen"
      }, {
        id: 270,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔᐃᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⲆᐃⵠⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⲆΔⵠᐃⵠΔ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⲆⵠΔⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Volcanic Bomb"
      }, {
        id: 48,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⵠⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃΔΔⲆᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⲆⲆΔⲆⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ⲆⵠΔⲆΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "eogito",
        name: "Robot"
      }, {
        id: 110,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠⵠΔⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃⲆᐃⵠⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⵠⲆᐃⲆⵠᐃⲆ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⵠᐃΔᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "pizza wa",
        name: "Blue Butterfly"
      }, {
        id: 157,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⵠΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃᐃⵠΔ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⲆⵠⵠᐃⲆᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃⲆⲆᐃⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "eogito",
        name: "Yrifox"
      }, {
        id: 165,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃΔᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⵠᐃⵠᐃ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⲆⵠΔᐃᐃ,
        ΔᐃⵠⲆ: ᐃΔ.ΔⲆΔᐃⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "OmarJr13",
        name: "Blob Skin"
      }, {
        id: 237,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠᐃⵠⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃᐃΔᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ⲆⵠⵠⲆᐃΔⵠ,
        ΔᐃⵠⲆ: ᐃΔ.ᐃΔΔⵠΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "NotBonnie",
        name: "NotBonnie"
      }, {
        id: 238,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔⵠΔⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⵠⲆᐃⲆ,
        ⵠⵠⲆⵠ: ᐃΔ.ΔⵠΔⲆⵠⲆΔ,
        ΔᐃⵠⲆ: ᐃΔ.ΔᐃΔⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ,
        Δᐃⵠ: "NotBonnie",
        name: "Cynder"
      }],
      ⲆⲆΔⲆ: [{
        id: 0,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⵠⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃΔΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bag 1"
      }, {
        id: 1,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃΔⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆΔΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Old Bag"
      }, {
        id: 2,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠΔᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆⵠⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bag 2"
      }, {
        id: 3,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠᐃΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bag 3"
      }, {
        id: 4,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔⲆᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bag 4"
      }, {
        id: 5,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⵠⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔⲆΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bag 5"
      }, {
        id: 11,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔΔⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⲆⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wood Pickaxe Bag"
      }, {
        id: 19,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⲆΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃᐃΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io ",
        name: "Wood Carrier"
      }, {
        id: 37,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃᐃⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔⵠⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Bag 6"
      }, {
        id: 39,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔᐃⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆΔⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Bag with Wooden Swords"
      }, {
        id: 44,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔᐃⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⵠⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Communist",
        name: "Big Bag"
      }, {
        id: 7,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆⵠⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⲆΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Bag 6"
      }, {
        id: 8,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃΔᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⵠΔⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Easter Bag"
      }, {
        id: 9,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃᐃᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠⲆᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Star Bag"
      }, {
        id: 10,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⲆⲆᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃᐃᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Winter Bag"
      }, {
        id: 20,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠⲆⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⲆⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io ",
        name: "Stone Carrier"
      }, {
        id: 24,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠΔᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆⲆⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Stone Pickaxe Bag"
      }, {
        id: 6,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃⲆⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃΔⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Bag Camouflage"
      }, {
        id: 38,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⲆⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Bag with Stone Swords"
      }, {
        id: 54,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⲆᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⲆⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Cow Bag"
      }, {
        id: 59,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆⵠᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃΔⵠⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "CrysTal",
        name: "Starver Bag"
      }, {
        id: 62,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃΔⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆΔⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "CrysTal",
        name: "Crystal Sky Bag"
      }, {
        id: 71,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠᐃⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Portable Furnace"
      }, {
        id: 78,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃᐃᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⲆⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Crate Bag"
      }, {
        id: 13,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔⵠΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠΔᐃΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Honey Pot"
      }, {
        id: 21,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔⲆᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠⲆᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io ",
        name: "Gold Carrier"
      }, {
        id: 30,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃⲆⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Gold Pickaxe Bag"
      }, {
        id: 29,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆⵠⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Ariel",
        name: "Mr and Mrs Bakers"
      }, {
        id: 41,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⲆΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆΔⵠᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Bag with Golden Swords"
      }, {
        id: 47,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔᐃΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔⵠⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Explorer Bag"
      }, {
        id: 51,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠⵠⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Bamboo Bag"
      }, {
        id: 53,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠΔᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Mummy Bag"
      }, {
        id: 58,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃΔⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠΔⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Watermelon Bag"
      }, {
        id: 60,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆⵠⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆᐃⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Garlic Bag"
      }, {
        id: 61,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⲆⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃⵠⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Pumpkin Bag"
      }, {
        id: 64,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⵠΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "upfiz",
        name: "Oil Barel bag"
      }, {
        id: 67,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Tree Bag"
      }, {
        id: 70,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃⲆΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃᐃΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Lit Portable Furnace"
      }, {
        id: 72,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆᐃᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠᐃᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Christmas Berry Bush Bag"
      }, {
        id: 73,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆΔᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⲆᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Berry Bush Bag"
      }, {
        id: 74,
        ⵠᐃⵠ: ᐃΔ.Δᐃⵠᐃⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃⲆⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Fall Berry Bush Bag"
      }, {
        id: 76,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆᐃⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⵠⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Reclaimed Bag"
      }, {
        id: 14,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃΔⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⲆᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "a Rabbit in my Bag"
      }, {
        id: 15,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠᐃⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⵠⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bird's nest"
      }, {
        id: 16,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠᐃⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⲆⵠΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "a Fish on your Back"
      }, {
        id: 17,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠᐃᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆΔⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "a Squirrel in my Bag"
      }, {
        id: 22,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⲆⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⵠⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io ",
        name: "Diamond Carrier"
      }, {
        id: 12,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠΔⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔΔᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Resources Bag"
      }, {
        id: 32,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠᐃᐃⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⲆⵠᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Diamond Pickaxe Bag"
      }, {
        id: 40,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⲆⲆⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⵠᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Bag with Diamond Swords"
      }, {
        id: 45,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠΔᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔᐃᐃΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "My Cake Bag"
      }, {
        id: 46,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⵠⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃⵠⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "My Christmas Cake Bag"
      }, {
        id: 52,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠⲆΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔⲆᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Fish Bag"
      }, {
        id: 65,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⵠΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃΔᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Cloud Bag"
      }, {
        id: 68,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⲆᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⲆᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Bee Bag"
      }, {
        id: 77,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠⵠΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⵠΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bag and Bedroll"
      }, {
        id: 80,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃΔⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔᐃⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Peasant's Bag"
      }, {
        id: 81,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⲆΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃΔⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Probably Stolen Bag"
      }, {
        id: 48,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⵠⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔⵠΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "fatant",
        name: "Natural Bag"
      }, {
        id: 23,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⵠᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⵠⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io ",
        name: "Amethyst Carrier"
      }, {
        id: 25,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆᐃᐃᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆΔᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Amethyst Pickaxe Bag"
      }, {
        id: 28,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃᐃⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃⵠᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Your Baby"
      }, {
        id: 33,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⲆΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "pizza wa",
        name: "Tropical Bag"
      }, {
        id: 43,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃΔⵠⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔᐃΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Bag with Amethyst Swords"
      }, {
        id: 35,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆⲆⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆᐃᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Ice Bag"
      }, {
        id: 50,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔΔⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔΔⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Thornbush Bag"
      }, {
        id: 56,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃⲆⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Autumn Bag"
      }, {
        id: 57,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠᐃΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆΔᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Dino Egg Bag"
      }, {
        id: 66,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠᐃⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆⲆΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "pizza wa",
        name: "Magic Cloud Bag"
      }, {
        id: 69,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠᐃᐃⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⵠΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "pizza wa",
        name: "Chest Bag"
      }, {
        id: 75,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⵠⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⲆΔⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Spectum Bag"
      }, {
        id: 79,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠⲆΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃⵠⵠᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Winter Peasant's Bag"
      }, {
        id: 31,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆᐃⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io ",
        name: "Reidite Carrier"
      }, {
        id: 18,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔᐃᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Lava Bag"
      }, {
        id: 49,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⵠⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Lava Bag 2"
      }, {
        id: 36,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔΔⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃᐃᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Dragon Bag"
      }, {
        id: 55,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆᐃⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Winter Ice Bag"
      }, {
        id: 26,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠΔⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Reidite Pickaxe Bag"
      }, {
        id: 27,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⵠΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Octopus Bowl"
      }, {
        id: 34,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔΔΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔⲆⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Cave Bag"
      }, {
        id: 42,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃⵠᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃΔᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Bag with Reidite Swords"
      }, {
        id: 63,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠⵠᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔⵠΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Engineer Bag"
      }],
      ΔⲆⵠΔⵠ: [{
        id: 0,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔᐃⲆⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆⲆⲆⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "eogito",
        name: "Wooden Dead Box"
      }, {
        id: 1,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃⲆⵠⲆⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠⲆⵠᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "eogito",
        name: "Hidden item"
      }, {
        id: 2,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔΔᐃΔᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃⲆⵠΔⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box 1"
      }, {
        id: 3,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃᐃⲆⵠᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔⲆᐃΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box 2"
      }, {
        id: 4,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃΔΔᐃᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⲆΔⵠⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box 3"
      }, {
        id: 5,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠΔΔΔⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃΔⵠᐃⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Broken Wooden Box"
      }, {
        id: 6,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔΔΔⵠΔΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔⲆΔᐃΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box"
      }, {
        id: 7,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆᐃᐃΔΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⵠⵠⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Battle Box"
      }, {
        id: 8,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⵠⲆⲆᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆᐃⲆΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box with a Cross"
      }, {
        id: 9,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⲆⵠⵠⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠᐃᐃΔⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box with Bubbles"
      }, {
        id: 10,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⲆᐃⵠⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⵠⲆⲆⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden Box with Eyes"
      }, {
        id: 11,
        ⵠᐃⵠ: ᐃΔ.Δᐃᐃⵠⵠᐃⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔⲆΔⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Dark Wooden Box"
      }, {
        id: 38,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⲆΔⵠⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔΔⲆⵠⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Weddlz",
        name: "Noob Box"
      }, {
        id: 12,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃⲆⵠⲆΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⵠⵠΔΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Wooden and Stone Box"
      }, {
        id: 14,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠᐃᐃΔⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⲆΔⲆΔⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Star Box 1"
      }, {
        id: 15,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔⵠⵠᐃᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⵠΔⵠⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Star Box 2"
      }, {
        id: 27,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃⵠⵠⲆⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃᐃΔΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Flower Box"
      }, {
        id: 46,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔᐃⵠⲆᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠⵠᐃᐃⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Blue Box"
      }, {
        id: 75,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆⲆⲆⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃⵠⲆΔⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Night Stars Crate"
      }, {
        id: 19,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔΔᐃⵠᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⲆᐃΔᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Beehive"
      }, {
        id: 13,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃΔⲆΔᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠΔᐃΔΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Wooden and Golden Box"
      }, {
        id: 21,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⵠᐃΔⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠΔᐃⵠΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Gravestone"
      }, {
        id: 25,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⲆᐃᐃⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⲆⵠᐃΔᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Communist",
        name: "Sky Box"
      }, {
        id: 29,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆΔᐃⵠᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⵠⵠⲆⲆⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Winter",
        name: "Golden Box"
      }, {
        id: 34,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃᐃⲆΔΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔΔⲆⵠⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Communist",
        name: "Water Crate"
      }, {
        id: 35,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃⵠᐃΔᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆΔΔⲆⵠᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Communist",
        name: "Glass Crate"
      }, {
        id: 70,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆΔⲆⲆᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔᐃⵠⲆΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "CrysTal",
        name: "Crystal Sky Box"
      }, {
        id: 74,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⵠⲆᐃⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠⵠⲆⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Reclaimed Crate"
      }, {
        id: 77,
        ⵠᐃⵠ: ᐃΔ.ΔΔΔᐃᐃⲆᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⲆᐃⵠΔⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Workplace Accident"
      }, {
        id: 16,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃⲆΔⵠΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔᐃΔᐃⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Wooden and Diamond Box"
      }, {
        id: 18,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆᐃᐃᐃⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃᐃⵠᐃⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Don't Hit Me"
      }, {
        id: 26,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠΔⲆᐃΔⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆΔᐃᐃᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Underwater Box"
      }, {
        id: 31,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⲆᐃⵠᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⵠᐃΔⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Items Pile"
      }, {
        id: 32,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠΔⵠⵠᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔΔΔΔΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Cake Box"
      }, {
        id: 33,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⵠⲆⵠⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠᐃΔΔⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Christmas Cake Box"
      }, {
        id: 36,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⲆⵠΔⵠΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⲆⲆΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Fukss",
        name: "Crab Box"
      }, {
        id: 42,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠΔΔΔⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⵠᐃΔⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Fishing Box"
      }, {
        id: 72,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔᐃⵠⵠⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⲆⵠⵠᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Storage Machine"
      }, {
        id: 22,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⵠⵠⵠᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆᐃΔΔΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Let me out of here"
      }, {
        id: 17,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆΔᐃΔᐃⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃΔΔⲆⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Wooden and Amethyst Box"
      }, {
        id: 24,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⵠⲆΔᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆⵠⵠᐃᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Aquarium"
      }, {
        id: 28,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔᐃΔⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⲆᐃⲆⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Gift Box"
      }, {
        id: 40,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠⲆⲆᐃⵠΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃΔⲆΔᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Open Watermelon Box"
      }, {
        id: 41,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔΔⵠΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔⵠᐃᐃᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Watermelon Box"
      }, {
        id: 39,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆᐃΔΔΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃΔⲆⵠᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Thornbush Box"
      }, {
        id: 43,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠᐃᐃΔⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⲆⲆⲆᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Rabbit in the Box"
      }, {
        id: 47,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⲆⲆⲆᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃᐃᐃⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Garlic Plot"
      }, {
        id: 48,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⲆΔᐃᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔᐃⲆⵠⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Pumpkin Plot"
      }, {
        id: 78,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⲆⲆᐃⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆᐃⲆⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Spectrum Portal"
      }, {
        id: 45,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⲆⲆᐃⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⵠΔⵠⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Autumn Box"
      }, {
        id: 44,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃΔᐃᐃⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆᐃⵠᐃΔΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Winter Box"
      }, {
        id: 20,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠᐃΔΔⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃΔⲆⵠⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Metal and Reidite Box"
      }, {
        id: 23,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆⵠⵠᐃᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔᐃᐃΔᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Kraken Box"
      }, {
        id: 30,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⲆⵠⲆᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⲆⲆⵠⵠⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Lava Box"
      }, {
        id: 37,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠΔⵠΔⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆⲆⵠΔᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Lava Box 2"
      }, {
        id: 49,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠΔΔⵠΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃΔᐃⵠΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Rabbit"
      }, {
        id: 50,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔΔᐃᐃᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃᐃΔΔΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Wolf"
      }, {
        id: 51,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃΔⵠᐃᐃⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔᐃⵠⵠⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Spider"
      }, {
        id: 52,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠᐃⵠⵠⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔΔΔΔⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Hawk"
      }, {
        id: 53,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃΔᐃⵠᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃⲆⲆⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Bear"
      }, {
        id: 54,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠⲆⵠᐃⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠᐃΔⵠᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Fox"
      }, {
        id: 55,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔⲆⲆΔΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔΔⲆΔᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Baby Mammoth"
      }, {
        id: 56,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆᐃⵠΔⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔⲆΔᐃⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Mammoth"
      }, {
        id: 57,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⲆⵠⲆᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠⲆⵠⵠΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Sandworm"
      }, {
        id: 58,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃⵠⵠΔΔⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃⵠΔⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Vulture"
      }, {
        id: 59,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠᐃⲆⵠⵠⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⵠΔⵠΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Kraken"
      }, {
        id: 60,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠᐃⵠᐃⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⲆⵠⲆᐃⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Piranha"
      }, {
        id: 61,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⵠΔᐃⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⵠⲆᐃⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Baby Dragon"
      }, {
        id: 62,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠᐃⵠⵠΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔⵠⲆⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Baby Lava"
      }, {
        id: 63,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃᐃⵠΔΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⵠΔⵠᐃΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Dragon"
      }, {
        id: 64,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆΔΔⲆⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃΔⵠΔᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Penguin"
      }, {
        id: 65,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⲆᐃᐃⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⲆⲆⵠⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Lava Dragon"
      }, {
        id: 66,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃᐃⲆᐃⵠⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆΔΔⵠⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Boar"
      }, {
        id: 67,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⲆᐃⲆⵠⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⲆⲆᐃⵠᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Fire mob"
      }, {
        id: 68,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⲆΔΔⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔⲆⲆⵠᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Crab"
      }, {
        id: 69,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆⵠΔⲆⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⵠⲆᐃᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the King Crab"
      }, {
        id: 71,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔⲆⵠⵠΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠᐃⵠᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Dragon Box"
      }, {
        id: 73,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆΔΔᐃⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆᐃⵠⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Rekt"
      }, {
        id: 76,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆΔΔᐃᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆᐃⲆⲆⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Sleeping Tamon Dragon"
      }, {
        id: 79,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⵠᐃᐃⵠΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠΔΔⲆⵠⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Crocodile"
      }, {
        id: 80,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⲆⲆⲆⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⲆᐃᐃΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Ocelot"
      }, {
        id: 81,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠΔΔⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⵠⲆᐃⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Parrot"
      }, {
        id: 82,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠᐃⵠⵠΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠⲆᐃⵠⲆⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Golden Hen"
      }, {
        id: 83,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆΔⵠⵠΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔΔⲆᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Box of the Golden Chicken"
      }],
      ⲆᐃⲆΔⵠ: [{
        id: 0,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⵠΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆΔⵠΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Book 1"
      }, {
        id: 1,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠⵠⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⵠΔⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Book 2"
      }, {
        id: 2,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⵠΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⲆⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Book 3"
      }, {
        id: 3,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠⲆΔᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃᐃΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Book 4"
      }, {
        id: 4,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Damaged Book 1"
      }, {
        id: 18,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⵠⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔΔⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "SeveR",
        name: "Damaged Book 2"
      }, {
        id: 5,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠΔᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Doctorpus",
        name: "Scroll"
      }, {
        id: 6,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠᐃᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Doctorpus",
        name: "Clipboard"
      }, {
        id: 7,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆⵠΔᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⲆᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Seed Book"
      }, {
        id: 20,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆΔᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃᐃΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life",
        name: "Camo Book"
      }, {
        id: 24,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃⵠΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆΔΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Communist",
        name: "Stone Tablet"
      }, {
        id: 47,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆᐃⵠⵠΔⲆᐃΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆⵠⵠᐃⲆⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Reclaimed Book"
      }, {
        id: 10,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠΔⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔΔΔⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Star Book"
      }, {
        id: 8,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃᐃⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃᐃⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Gold Book"
      }, {
        id: 15,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃᐃⲆᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠⵠⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Old Mysterious Paper"
      }, {
        id: 17,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃᐃⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Gold Engraving"
      }, {
        id: 25,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃΔⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "fatant",
        name: "Ant Book"
      }, {
        id: 32,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⵠⲆᐃᐃΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠΔⲆⵠⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Mummy Book"
      }, {
        id: 37,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆΔⵠᐃⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⲆⲆΔᐃΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Garlic Book"
      }, {
        id: 38,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃⵠᐃΔᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆᐃᐃⵠᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Pumpkin Book"
      }, {
        id: 39,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⲆⲆΔⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃⵠᐃⵠᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Christmas Tree Book"
      }, {
        id: 11,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔᐃⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆΔⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Diamond Book"
      }, {
        id: 9,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⵠⵠⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Obscure Book"
      }, {
        id: 16,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠΔΔⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔⵠΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Rolled Parchment"
      }, {
        id: 22,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃᐃⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃⲆΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Cake Book"
      }, {
        id: 23,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆⲆⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔᐃΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Christmas Cake Book"
      }, {
        id: 30,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⵠⲆⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃᐃⲆΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "MADBalgouthi",
        name: "Fish Book"
      }, {
        id: 31,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⲆⵠᐃⵠⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔΔⵠⵠⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "CrysTal",
        name: "Once upon a time"
      }, {
        id: 48,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⲆⲆⲆᐃᐃⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔⵠⵠⲆⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Chrono Clock"
      }, {
        id: 49,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃΔᐃΔⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⲆⵠⲆⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Recipe Book"
      }, {
        id: 13,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠΔᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃΔᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Amethyst Book"
      }, {
        id: 28,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆⲆⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⵠⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Paint Pallet"
      }, {
        id: 29,
        ⵠᐃⵠ: ᐃΔ.ΔΔⲆΔⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔΔᐃⲆⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "CrysTal",
        name: "Watermelon Book"
      }, {
        id: 27,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃΔᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Thornbush Book"
      }, {
        id: 35,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⵠⵠⲆⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃⲆⵠⵠΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Taco4Life",
        name: "Menu"
      }, {
        id: 36,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔⵠΔΔⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⲆᐃⲆⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "CrysTal",
        name: "Lover Letter"
      }, {
        id: 40,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠᐃᐃΔᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔΔⲆⵠᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Fresh-Baked Cookies"
      }, {
        id: 41,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔⲆΔΔᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⵠᐃⵠⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Inside, there is just a book."
      }, {
        id: 45,
        ⵠᐃⵠ: ᐃΔ.ΔⵠᐃᐃᐃⵠⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆᐃᐃⲆᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Crafting Machine"
      }, {
        id: 33,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃⲆΔⵠⲆⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃΔᐃⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Winter Book"
      }, {
        id: 34,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠᐃⵠⵠΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠⲆⵠⲆⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Autumn Book"
      }, {
        id: 14,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆᐃΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Reidite Book"
      }, {
        id: 12,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⵠᐃᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Lava Book"
      }, {
        id: 26,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⲆΔⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆⵠᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Lava Book 2"
      }, {
        id: 19,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔᐃⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆⵠΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Winter",
        name: "Ocean Mystery"
      }, {
        id: 21,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⵠᐃⵠΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃⲆⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Dragon Book"
      }, {
        id: 42,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔᐃⲆⲆⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃΔᐃΔΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Engineer Book"
      }, {
        id: 43,
        ⵠᐃⵠ: ᐃΔ.ᐃΔΔⲆⵠΔⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆⵠᐃᐃⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Nightmare Book"
      }, {
        id: 44,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⵠᐃⲆⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆᐃΔᐃᐃΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "aloner",
        name: "Mystery Book"
      }, {
        id: 46,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠⲆΔΔᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠⵠⵠⵠⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Cursed Book"
      }],
      ⵠΔⲆⲆⵠ: [{
        id: 0,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔⲆⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔⲆⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Nothing"
      }, {
        id: 2,
        ⵠᐃⵠ: ᐃΔ.ᐃΔΔⲆⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃᐃⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Pink Cheeks"
      }, {
        id: 3,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆⵠⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⲆⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Heart"
      }, {
        id: 1,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠᐃⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔΔⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bandage 1"
      }, {
        id: 4,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⵠⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃΔΔᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Flower 1"
      }, {
        id: 5,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⲆΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔᐃᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Bow 1"
      }, {
        id: 6,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔⲆⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Bandage 2"
      }, {
        id: 7,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⲆᐃⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⲆⵠⵠⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Flower 2"
      }, {
        id: 8,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔΔᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⵠᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Bandage 3"
      }, {
        id: 36,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠⲆⲆⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Foliage"
      }, {
        id: 59,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆΔᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃⵠⵠΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "eogito",
        name: "Peaceful"
      }, {
        id: 67,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃⲆⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃᐃⲆΔᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Sparkles"
      }, {
        id: 68,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠⵠᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃⵠⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Luxury"
      }, {
        id: 69,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔⵠⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Snow Flakes Crown"
      }, {
        id: 17,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃᐃΔΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆᐃⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Glasses 1"
      }, {
        id: 10,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⵠΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆⲆⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Bow 2"
      }, {
        id: 11,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠᐃᐃᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⵠᐃΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Little Stars"
      }, {
        id: 12,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆΔΔᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Pirate Eye Patch 1"
      }, {
        id: 44,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃᐃⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔΔⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Taco4Life",
        name: "Pirate Eye Patch 2"
      }, {
        id: 23,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Clown nose"
      }, {
        id: 16,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠᐃⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Eye Patch"
      }, {
        id: 30,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⲆΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⵠⵠⲆᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Flower 3"
      }, {
        id: 38,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔᐃⵠΔⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆΔΔᐃⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Winter",
        name: "False Nose"
      }, {
        id: 74,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⲆᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃⲆⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Red Cloth"
      }, {
        id: 75,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠΔⲆᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Blue Cloth"
      }, {
        id: 79,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆⵠΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆⲆⲆⵠⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Transparent Mask"
      }, {
        id: 89,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⵠΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⲆᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Anyone want to play?",
        name: "Starve.io Anime"
      }, {
        id: 94,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⲆᐃⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔᐃᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Ant",
        name: "Hero Mask"
      }, {
        id: 100,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠΔΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔᐃᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "This starver is mad"
      }, {
        id: 104,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠᐃⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃΔΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Scars"
      }, {
        id: 106,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠΔᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆΔⵠᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "In Search of Intelligence"
      }, {
        id: 109,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆΔⲆᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃᐃΔⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Reclaimed Bandage"
      }, {
        id: 111,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃⵠⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⵠⵠⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Unwrap Starver for Gift"
      }, {
        id: 15,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠⲆⲆⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⵠᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Star Glasses"
      }, {
        id: 21,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃᐃᐃⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆⲆΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Great-aunt's Glasses"
      }, {
        id: 24,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆΔⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.Δᐃᐃⵠᐃⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Little Starver"
      }, {
        id: 22,
        ⵠᐃⵠ: ᐃΔ.Ⲇᐃⵠⵠⵠᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆⲆⵠᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Little Glasses"
      }, {
        id: 13,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆⵠⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆᐃⵠΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Flower Chain"
      }, {
        id: 29,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⵠᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⲆⵠⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Horns"
      }, {
        id: 31,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⵠΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃΔⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Golden Flower"
      }, {
        id: 40,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔⲆⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠᐃⵠᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "pizza wa",
        name: "Sleeping Mask"
      }, {
        id: 57,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⲆΔⲆΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Taco4Life",
        name: "Fish on your head"
      }, {
        id: 58,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠⲆⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "eogito",
        name: "Rose"
      }, {
        id: 91,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆΔΔΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔⲆⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "upfiz",
        name: "Grey Scarf"
      }, {
        id: 92,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⲆᐃᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔᐃⲆᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "upfiz",
        name: "Black Scarf"
      }, {
        id: 93,
        ⵠᐃⵠ: ᐃΔ.ⵠΔΔⵠⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠᐃⲆⵠⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "upfiz",
        name: "Skull Mask"
      }, {
        id: 95,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆᐃΔⵠΔ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆᐃᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Golden Monocle"
      }, {
        id: 96,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆΔᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆᐃⲆⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "A simple instruction"
      }, {
        id: 102,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⵠᐃΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Garland"
      }, {
        id: 103,
        ⵠᐃⵠ: ᐃΔ.ⵠⲆⵠⲆΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "The Doormat"
      }, {
        id: 108,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⵠⲆⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Copium Tanks"
      }, {
        id: 117,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⲆⲆⲆΔ,
        ΔᐃⲆ: ᐃΔ.ⵠΔΔⵠΔⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Eyelashes"
      }, {
        id: 118,
        ⵠᐃⵠ: ᐃΔ.ΔⲆΔΔᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆᐃⵠⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⵠΔⵠ,
        Δᐃⵠ: "Starve.io",
        name: "Helmet Prototype"
      }, {
        id: 9,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠⵠⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⲆⲆⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Fancy Glasses"
      }, {
        id: 25,
        ⵠᐃⵠ: ᐃΔ.ⲆΔᐃΔⵠᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃΔⵠΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Medecin Mask"
      }, {
        id: 14,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔᐃᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠΔⵠᐃᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mr. Mayor"
      }, {
        id: 19,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠΔⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠᐃⲆⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Sunglasses 2"
      }, {
        id: 28,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠⵠΔⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆΔΔΔᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "pizza wa",
        name: "Starfish"
      }, {
        id: 37,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠᐃᐃΔⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃⵠⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Berry"
      }, {
        id: 39,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆᐃᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Flake"
      }, {
        id: 43,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠᐃⵠᐃᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⵠⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Leaf "
      }, {
        id: 61,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆΔⲆⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠΔⵠᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "A sword in your head"
      }, {
        id: 62,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⵠⲆⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⵠᐃⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Winter Scarf"
      }, {
        id: 64,
        ⵠᐃⵠ: ᐃΔ.ᐃⵠΔᐃⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠⵠⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Winter Scarf 2"
      }, {
        id: 66,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔⵠᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆᐃᐃⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "eogito",
        name: "Winter Scarf 3"
      }, {
        id: 70,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⵠΔΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠΔⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Mask with animal tracks"
      }, {
        id: 71,
        ⵠᐃⵠ: ᐃΔ.ΔΔᐃⲆⲆΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃⲆΔⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Spring Mask"
      }, {
        id: 72,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠⵠⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠᐃⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Pink Mask"
      }, {
        id: 73,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⲆᐃᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔΔⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Blue Mask"
      }, {
        id: 76,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⲆⲆΔⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃⲆⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Military Mask"
      }, {
        id: 77,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃᐃΔⵠⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Orange Mask"
      }, {
        id: 78,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃⵠⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⵠⲆΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "White and Red Points Mask"
      }, {
        id: 80,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆᐃᐃΔΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⲆᐃⲆΔᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Stick out your tongue Mask"
      }, {
        id: 81,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃᐃⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⵠᐃⲆΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Two Teeth Mask"
      }, {
        id: 82,
        ⵠᐃⵠ: ᐃΔ.ⲆΔⲆΔΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔᐃⵠⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Make-up Mask"
      }, {
        id: 83,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠΔⲆⵠΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃΔΔⲆΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Sad Mask"
      }, {
        id: 84,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃΔⵠᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔⲆᐃΔⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Happy Mask"
      }, {
        id: 90,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃⵠⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⲆᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "aloner",
        name: "Blood"
      }, {
        id: 101,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆⲆⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⲆⲆⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Axed Plans"
      }, {
        id: 105,
        ⵠᐃⵠ: ᐃΔ.ⲆΔΔΔᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⲆΔⵠⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Saddle"
      }, {
        id: 113,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⲆⵠⲆⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠⵠΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "I see"
      }, {
        id: 114,
        ⵠᐃⵠ: ᐃΔ.ΔΔⵠⵠⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⲆᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "I have no body and I must dress"
      }, {
        id: 115,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⲆᐃΔᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Cursed Crown"
      }, {
        id: 119,
        ⵠᐃⵠ: ᐃΔ.ΔⲆⵠⲆⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃΔⵠᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.Ⲇᐃⵠᐃ,
        Δᐃⵠ: "Starve.io",
        name: "Arrow in the Starver"
      }, {
        id: 27,
        ⵠᐃⵠ: ᐃΔ.ⵠΔᐃΔⵠΔΔ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃᐃΔᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Clown Face"
      }, {
        id: 20,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⲆΔᐃⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔΔΔⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Sunglasses 3"
      }, {
        id: 32,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔΔⵠⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔᐃΔΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Engineer's Glasses"
      }, {
        id: 33,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⵠᐃⵠⵠ,
        ΔᐃⲆ: ᐃΔ.ΔⵠᐃⵠᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Engineer's Monocle"
      }, {
        id: 34,
        ⵠᐃⵠ: ᐃΔ.ΔᐃΔⵠᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆᐃᐃⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mauve's butt"
      }, {
        id: 41,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆⵠᐃⵠᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆⵠᐃⲆΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Lapa Head"
      }, {
        id: 42,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⵠⲆᐃⲆΔ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠΔⲆΔⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "eogito",
        name: "Lapa Head "
      }, {
        id: 85,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠΔⲆΔᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔᐃⵠⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Mask and Glasses"
      }, {
        id: 110,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⵠΔⲆΔΔ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⲆᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Spectrum Pet"
      }, {
        id: 120,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔⲆⲆⵠΔ,
        ΔᐃⲆ: ᐃΔ.ᐃΔⲆᐃⲆᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⵠⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Ice Crown"
      }, {
        id: 60,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠᐃΔⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆΔⲆΔᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Jason"
      }, {
        id: 26,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔᐃⵠⲆᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Devil Horns"
      }, {
        id: 18,
        ⵠᐃⵠ: ᐃΔ.ⲆᐃⲆⲆᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠΔⲆⲆᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Big Boss"
      }, {
        id: 35,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠⵠⲆⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⵠᐃⲆΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Baby Kraken"
      }, {
        id: 63,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⲆⵠΔΔⵠ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⲆⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Deer Antlers"
      }, {
        id: 65,
        ⵠᐃⵠ: ᐃΔ.ⵠΔⵠⲆⵠⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ΔⲆⲆΔΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Baby Dragon on your head"
      }, {
        id: 86,
        ⵠᐃⵠ: ᐃΔ.ⵠⵠᐃᐃᐃᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠΔⲆΔⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Gaz Mask and Glasses"
      }, {
        id: 87,
        ⵠᐃⵠ: ᐃΔ.ΔⵠΔᐃΔⲆΔ,
        ΔᐃⲆ: ᐃΔ.ΔⵠⲆᐃⵠΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Pink Gaz Mask and Glasses"
      }, {
        id: 88,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠᐃΔΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃⵠΔⵠⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "eogito",
        name: "Engineer Glasses"
      }, {
        id: 97,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠᐃᐃⵠᐃΔ,
        ΔᐃⲆ: ᐃΔ.ᐃᐃᐃᐃᐃⵠⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Jagged Horns"
      }, {
        id: 98,
        ⵠᐃⵠ: ᐃΔ.ΔᐃᐃⲆⲆⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ᐃⵠⵠⵠᐃΔᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Curved Horns"
      }, {
        id: 99,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃΔⵠΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠᐃⵠⵠᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Evil Goat Horns"
      }, {
        id: 107,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆΔΔᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⲆΔᐃᐃΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Decorative Earmuffs"
      }, {
        id: 112,
        ⵠᐃⵠ: ᐃΔ.ᐃΔⲆⲆⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆⵠⲆᐃᐃΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Tamon Dragon Pet"
      }, {
        id: 116,
        ⵠᐃⵠ: ᐃΔ.ᐃΔᐃᐃᐃᐃⵠ,
        ΔᐃⲆ: ᐃΔ.ΔΔΔᐃΔⵠᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ᐃⲆⲆⲆ,
        Δᐃⵠ: "Starve.io",
        name: "Blanket"
      }, {
        id: 45,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠΔᐃⵠⲆ,
        ΔᐃⲆ: ᐃΔ.ΔΔᐃⲆⲆⲆᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 5",
        level: 5
      }, {
        id: 46,
        ⵠᐃⵠ: ᐃΔ.ΔᐃⲆⲆⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⲆᐃΔΔⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 10",
        level: 10
      }, {
        id: 47,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃΔᐃⵠⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠⲆΔⲆⵠΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 15",
        level: 15
      }, {
        id: 48,
        ⵠᐃⵠ: ᐃΔ.ⲆⵠⲆΔⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ΔᐃΔᐃᐃᐃⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 20",
        level: 20
      }, {
        id: 49,
        ⵠᐃⵠ: ᐃΔ.ΔⵠⵠⲆⵠⵠᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⲆΔᐃᐃᐃᐃ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 25",
        level: 25
      }, {
        id: 50,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠΔⵠⲆ,
        ΔᐃⲆ: ᐃΔ.Ⲇⵠᐃⵠᐃᐃⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 30",
        level: 30
      }, {
        id: 51,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃⵠⲆⲆᐃᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠΔᐃⲆᐃΔⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 35",
        level: 35
      }, {
        id: 52,
        ⵠᐃⵠ: ᐃΔ.ⲆⲆΔⲆⵠⲆᐃ,
        ΔᐃⲆ: ᐃΔ.ⲆᐃⲆⲆⲆⲆⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 40",
        level: 40
      }, {
        id: 53,
        ⵠᐃⵠ: ᐃΔ.ΔⲆᐃⲆⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ⵠⵠⲆΔᐃⵠⲆ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 45",
        level: 45
      }, {
        id: 54,
        ⵠᐃⵠ: ᐃΔ.ᐃᐃᐃⵠⲆΔᐃ,
        ΔᐃⲆ: ᐃΔ.ΔΔⵠΔΔΔΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 50",
        level: 50
      }, {
        id: 55,
        ⵠᐃⵠ: ᐃΔ.ⵠᐃⲆΔΔⲆⵠ,
        ΔᐃⲆ: ᐃΔ.ⲆⵠΔⲆᐃⲆΔ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 55",
        level: 55
      }, {
        id: 56,
        ⵠᐃⵠ: ᐃΔ.ᐃⲆΔⵠⲆⲆⲆ,
        ΔᐃⲆ: ᐃΔ.ⵠᐃΔⵠᐃⲆⵠ,
        ᐃⵠᐃ: ⲆⲆΔ.ⵠΔⲆⵠⵠ,
        Δᐃⵠ: "Starve.io",
        name: "More than Level 60",
        level: 60
      }]
    };
    v2289.ⵠⲆΔⲆⲆⵠⲆ = ⲆⵠⵠΔⲆᐃΔ(ΔⵠΔΔ.ΔΔΔⲆⲆ, 21);
    v2289.ΔⲆᐃᐃΔⵠⵠ = ⲆⵠⵠΔⲆᐃΔ(ΔⵠΔΔ.ΔΔΔⲆⲆ, 20);
    ⵠΔ[365] = [];
    ⵠΔ[7] = [];
    ⵠΔ[360] = [];
    ⵠΔ[46] = [];
    ⵠΔ[47] = [];
    ⵠΔ[1045] = [];
    for (var v810 = 0; v810 < ΔⵠΔΔ.ΔΔΔⲆⲆ.length; v810++) {
      ⵠΔ[365][v810] = [ΔⵠΔΔ.ΔΔΔⲆⲆ[v810].ⵠᐃⵠ, ΔⵠΔΔ.ΔΔΔⲆⲆ[v810].ΔᐃⲆ];
      ⵠΔ[7][v810] = [ΔⵠΔΔ.ΔΔΔⲆⲆ[v810].ⵠⵠⲆⵠ, ΔⵠΔΔ.ΔΔΔⲆⲆ[v810].ΔᐃⵠⲆ];
    }
    for (v810 = 0; ΔⵠΔΔ.ⲆᐃⲆΔⵠ.length > v810; v810++) {
      ⵠΔ[46][v810] = [ΔⵠΔΔ.ⲆᐃⲆΔⵠ[v810].ⵠᐃⵠ, ΔⵠΔΔ.ⲆᐃⲆΔⵠ[v810].ΔᐃⲆ];
    }
    for (v810 = 0; ΔⵠΔΔ.ΔⲆⵠΔⵠ.length > v810; v810++) {
      ⵠΔ[360][v810] = [ΔⵠΔΔ.ΔⲆⵠΔⵠ[v810].ⵠᐃⵠ, ΔⵠΔΔ.ΔⲆⵠΔⵠ[v810].ΔᐃⲆ];
    }
    for (v810 = 0; ΔⵠΔΔ.ⲆⲆΔⲆ.length > v810; v810++) {
      ⵠΔ[47][v810] = [ΔⵠΔΔ.ⲆⲆΔⲆ[v810].ⵠᐃⵠ, ΔⵠΔΔ.ⲆⲆΔⲆ[v810].ΔᐃⲆ];
    }
    for (v810 = 0; ΔⵠΔΔ.ⵠΔⲆⲆⵠ.length > v810; v810++) {
      ⵠΔ[1045][v810] = [ΔⵠΔΔ.ⵠΔⲆⲆⵠ[v810].ⵠᐃⵠ, ΔⵠΔΔ.ⵠΔⲆⲆⵠ[v810].ΔᐃⲆ];
    }
  };
  const v811 = 1;
  function f96(p563, p564) {
    var v812 = document.createElement("canvas");
    var v813 = v812.getContext("2d");
    var v814 = p563 * 120;
    var v815 = p563 * 110;
    var v816 = v814 / 2;
    var v817 = v815 / 2;
    var v818 = p563 * 20;
    var v819 = p563 * 112;
    var v820 = p563 * 82;
    var v821 = v819 / 2;
    var v822 = v820 / 2;
    var v823 = p563 * 4;
    v812.width = v814;
    v812.height = v815;
    v813.globalAlpha = 1;
    v813.translate(v816, v817);
    f90(v813, -v821, -v822, v819, v820, v818);
    f89(v813, p564, p564, v823);
    return v812;
  }
  function f97(p565, p566, p567) {
    var v824 = document.createElement("canvas");
    var v825 = v824.getContext("2d");
    v824.width = p565 * 264;
    v824.height = p565 * 246;
    v825.translate(0, p565 * 10);
    v825.globalAlpha = p566 ? 0.5 : 1;
    v825.beginPath();
    v825.lineCap = "round";
    v825.lineJoin = "round";
    v825.moveTo(p565 * 75, p565 * 54);
    v825.bezierCurveTo(p565 * 79, p565 * 21, p565 * 131, p565 * 13, p565 * 153, p565 * 36);
    v825.bezierCurveTo(p565 * 204, p565 * 27, p565 * 221, p565 * 52, p565 * 216, p565 * 83);
    v825.bezierCurveTo(p565 * 241, p565 * 103, p565 * 232, p565 * 138, p565 * 214, p565 * 147);
    v825.bezierCurveTo(p565 * 223, p565 * 184, p565 * 201, p565 * 200, p565 * 175, p565 * 199);
    v825.bezierCurveTo(p565 * 156, p565 * 218, p565 * 135, p565 * 222, p565 * 114, p565 * 203);
    v825.bezierCurveTo(p565 * 62, p565 * 213, p565 * 66, p565 * 189, p565 * 59, p565 * 170);
    v825.bezierCurveTo(p565 * 27, p565 * 164, p565 * 31, p565 * 134, p565 * 38, p565 * 123);
    v825.bezierCurveTo(p565 * 11, p565 * 80, p565 * 51, p565 * 52, p565 * 75, p565 * 54);
    v825.closePath();
    f89(v825, p567[0]);
    v825.translate(0, p565 * -10);
    v825.globalAlpha = 1;
    v825.beginPath();
    v825.lineCap = "round";
    v825.lineJoin = "round";
    v825.moveTo(p565 * 75, p565 * 54);
    v825.bezierCurveTo(p565 * 79, p565 * 21, p565 * 131, p565 * 13, p565 * 153, p565 * 36);
    v825.bezierCurveTo(p565 * 204, p565 * 27, p565 * 221, p565 * 52, p565 * 216, p565 * 83);
    v825.bezierCurveTo(p565 * 241, p565 * 103, p565 * 232, p565 * 138, p565 * 214, p565 * 147);
    v825.bezierCurveTo(p565 * 223, p565 * 184, p565 * 201, p565 * 200, p565 * 175, p565 * 199);
    v825.bezierCurveTo(p565 * 156, p565 * 218, p565 * 135, p565 * 222, p565 * 114, p565 * 203);
    v825.bezierCurveTo(p565 * 62, p565 * 213, p565 * 66, p565 * 189, p565 * 59, p565 * 170);
    v825.bezierCurveTo(p565 * 27, p565 * 164, p565 * 31, p565 * 134, p565 * 38, p565 * 123);
    v825.bezierCurveTo(p565 * 11, p565 * 80, p565 * 51, p565 * 52, p565 * 75, p565 * 54);
    v825.closePath();
    f89(v825, p567[1], p567[2], p565 * 8);
    v825.beginPath();
    v825.lineCap = "round";
    v825.lineJoin = "round";
    v825.moveTo(p565 * 121, p565 * 102);
    v825.bezierCurveTo(p565 * 111, p565 * 80, p565 * 110, p565 * 66, p565 * 108, p565 * 51);
    v825.bezierCurveTo(p565 * 119, p565 * 65, p565 * 129, p565 * 85, p565 * 135, p565 * 99);
    v825.bezierCurveTo(p565 * 142, p565 * 67, p565 * 146, p565 * 60, p565 * 152, p565 * 50);
    v825.bezierCurveTo(p565 * 154, p565 * 71, p565 * 152, p565 * 85, p565 * 149, p565 * 104);
    v825.bezierCurveTo(p565 * 166, p565 * 88, p565 * 175, p565 * 83, p565 * 188, p565 * 78);
    v825.bezierCurveTo(p565 * 179, p565 * 91, p565 * 170, p565 * 103, p565 * 160, p565 * 112);
    v825.bezierCurveTo(p565 * 186, p565 * 107, p565 * 191, p565 * 107, p565 * 204, p565 * 108);
    v825.bezierCurveTo(p565 * 195, p565 * 114, p565 * 179, p565 * 120, p565 * 163, p565 * 123);
    v825.bezierCurveTo(p565 * 183, p565 * 130, p565 * 186, p565 * 135, p565 * 192, p565 * 140);
    v825.bezierCurveTo(p565 * 179, p565 * 141, p565 * 164, p565 * 139, p565 * 153, p565 * 135);
    v825.bezierCurveTo(p565 * 158, p565 * 145, p565 * 163, p565 * 159, p565 * 165, p565 * 177);
    v825.bezierCurveTo(p565 * 154, p565 * 166, p565 * 145, p565 * 153, p565 * 138, p565 * 139);
    v825.bezierCurveTo(p565 * 133, p565 * 155, p565 * 125, p565 * 170, p565 * 117, p565 * 182);
    v825.bezierCurveTo(p565 * 116, p565 * 160, p565 * 119, p565 * 151, p565 * 124, p565 * 138);
    v825.bezierCurveTo(p565 * 107, p565 * 150, p565 * 95, p565 * 156, p565 * 82, p565 * 159);
    v825.bezierCurveTo(p565 * 94, p565 * 140, p565 * 101, p565 * 136, p565 * 113, p565 * 128);
    v825.bezierCurveTo(p565 * 78, p565 * 123, p565 * 75, p565 * 121, p565 * 67, p565 * 118);
    v825.bezierCurveTo(p565 * 85, p565 * 112, p565 * 94, p565 * 112, p565 * 111, p565 * 113);
    v825.bezierCurveTo(p565 * 89, p565 * 97, p565 * 85, p565 * 93, p565 * 78, p565 * 82);
    v825.bezierCurveTo(p565 * 92, p565 * 85, p565 * 101, p565 * 90, p565 * 121, p565 * 102);
    v825.closePath();
    f89(v825, p567[2]);
    v825.beginPath();
    v825.lineCap = "round";
    v825.lineJoin = "round";
    v825.moveTo(p565 * 128, p565 * 103);
    v825.bezierCurveTo(p565 * 111, p565 * 112, p565 * 117, p565 * 136, p565 * 140, p565 * 130);
    v825.bezierCurveTo(p565 * 151, p565 * 126, p565 * 156, p565 * 115, p565 * 155, p565 * 107);
    v825.bezierCurveTo(p565 * 155, p565 * 96, p565 * 154, p565 * 94, p565 * 148, p565 * 94);
    v825.bezierCurveTo(p565 * 141, p565 * 94, p565 * 146, p565 * 104, p565 * 136, p565 * 104);
    v825.closePath();
    f89(v825, p567[3], p567[4], p565 * 4);
    return v824;
  }
  function f98(p568, p569, p570) {
    var v826 = document.createElement("canvas");
    var v827 = v826.getContext("2d");
    v826.width = p568 * 70;
    v826.height = p568 * 70;
    v827.globalAlpha = 0.5;
    f94(v827, p568 * 26, p568 * 26, p568 * 9);
    f89(v827, p570[0]);
    f94(v827, p568 * 56, p568 * 36, p568 * 9);
    f89(v827, p570[1]);
    f94(v827, p568 * 40, p568 * 50, p568 * 9);
    f89(v827, p570[2]);
    v827.globalAlpha = 1;
    f94(v827, p568 * 26, p568 * 26, p568 * 5);
    f89(v827, p570[0]);
    f94(v827, p568 * 56, p568 * 36, p568 * 5);
    f89(v827, p570[1]);
    f94(v827, p568 * 40, p568 * 50, p568 * 5);
    f89(v827, p570[2]);
    return v826;
  }
  const v828 = 11;
  function f99(p571, p572, p573) {
    var v829 = document.createElement("canvas");
    var v830 = v829.getContext("2d");
    v829.width = p571 * 22;
    v829.height = p571 * 22;
    v830.globalAlpha = 0.4;
    f94(v830, p571 * 11, p571 * 11, p571 * 10);
    f89(v830, p573[0]);
    v830.globalAlpha = 0.7;
    f94(v830, p571 * 11, p571 * 11, p571 * 7);
    f89(v830, p573[0]);
    v830.globalAlpha = 1;
    f94(v830, p571 * 11, p571 * 11, p571 * 4);
    f89(v830, p573[0]);
    return v829;
  }
  const v831 = 1;
  function f100(p574, p575, p576) {
    var v832 = document.createElement("canvas");
    var v833 = v832.getContext("2d");
    v832.width = p574 * 248;
    v832.height = p574 * 247;
    v833.save();
    v833.translate(p574 * 183, p574 * 107);
    f90(v833, p574 * -8, p574 * -70.5, p574 * 16, p574 * 141, p574 * 1);
    v833.restore();
    f89(v833, p576[0]);
    v833.save();
    v833.translate(p574 * 69.5, p574 * 110);
    f90(v833, p574 * -8.5, p574 * -71, p574 * 17, p574 * 143, p574 * 1);
    v833.restore();
    f89(v833, p576[0]);
    v833.save();
    v833.translate(p574 * 123.5, p574 * 181);
    f90(v833, p574 * -84.5, p574 * -26, p574 * 169, p574 * 52, p574 * 5);
    v833.restore();
    f89(v833, p576[2], p576[1], p574 * 6);
    v833.beginPath();
    v833.lineCap = "round";
    v833.lineJoin = "round";
    v833.moveTo(p574 * 41, p574 * 95);
    v833.bezierCurveTo(p574 * 105, p574 * 96, p574 * 113, p574 * 99, p574 * 134, p574 * 102);
    v833.bezierCurveTo(p574 * 147, p574 * 106, p574 * 173, p574 * 100, p574 * 207, p574 * 105);
    v833.bezierCurveTo(p574 * 210, p574 * 105, p574 * 207, p574 * 140, p574 * 207, p574 * 154);
    v833.bezierCurveTo(p574 * 123.5, p574 * 151.5, p574 * 123.5, p574 * 151.5, p574 * 40, p574 * 149);
    v833.bezierCurveTo(p574 * 37, p574 * 145, p574 * 39, p574 * 95, p574 * 41, p574 * 96);
    v833.closePath();
    f89(v833, p576[2], p576[1], p574 * 6);
    v833.beginPath();
    v833.lineCap = "round";
    v833.lineJoin = "round";
    v833.moveTo(p574 * 68, p574 * 75);
    v833.bezierCurveTo(p574 * 54, p574 * 72.5, p574 * 54, p574 * 72.5, p574 * 40, p574 * 70);
    v833.bezierCurveTo(p574 * 38, p574 * 46, p574 * 40, p574 * 46, p574 * 53, p574 * 46);
    v833.bezierCurveTo(p574 * 201, p574 * 41, p574 * 201, p574 * 41, p574 * 201, p574 * 42);
    v833.bezierCurveTo(p574 * 211, p574 * 40, p574 * 208, p574 * 53, p574 * 208, p574 * 72);
    v833.bezierCurveTo(p574 * 209, p574 * 91, p574 * 210, p574 * 96, p574 * 194, p574 * 94);
    v833.bezierCurveTo(p574 * 119, p574 * 97, p574 * 119, p574 * 97, p574 * 44, p574 * 100);
    v833.bezierCurveTo(p574 * 39, p574 * 99, p574 * 40, p574 * 96, p574 * 40, p574 * 80);
    v833.bezierCurveTo(p574 * 54, p574 * 77.5, p574 * 54, p574 * 77.5, p574 * 68, p574 * 75);
    v833.closePath();
    f89(v833, p576[3], p576[1], p574 * 6);
    return v832;
  }
  function f101(p577, p578, p579) {
    var v834 = document.createElement("canvas");
    var v835 = v834.getContext("2d");
    v834.width = p577 * 248;
    v834.height = p577 * 247;
    v835.save();
    v835.translate(p577 * 69.5, p577 * 145);
    f90(v835, p577 * -8.5, p577 * -63, p577 * 17, p577 * 127, p577 * 1);
    v835.restore();
    f89(v835, p579[0]);
    v835.save();
    v835.translate(p577 * 183, p577 * 145);
    f90(v835, p577 * -8, p577 * -63, p577 * 16, p577 * 126, p577 * 1);
    v835.restore();
    f89(v835, p579[0]);
    v835.save();
    v835.translate(p577 * 123.5, p577 * 62.5);
    v835.rotate(6.28);
    f90(v835, p577 * -84.5, p577 * -25.5, p577 * 169, p577 * 51, p577 * 5);
    v835.restore();
    f89(v835, p579[2], p579[1], p577 * 6);
    v835.save();
    v835.translate(p577 * 123.5, p577 * 118);
    v835.rotate(6.24);
    f90(v835, p577 * -85.5, p577 * -24, p577 * 169, p577 * 48, p577 * 5);
    v835.restore();
    f89(v835, p579[3], p579[1], p577 * 6);
    v835.save();
    v835.translate(p577 * 122, p577 * 177.5);
    v835.rotate(6.32);
    f90(v835, p577 * -84, p577 * -23.5, p577 * 169, p577 * 47, p577 * 5);
    v835.restore();
    f89(v835, p579[2], p579[1], p577 * 6);
    v835.beginPath();
    v835.lineCap = "round";
    v835.lineJoin = "round";
    v835.moveTo(p577 * 37, p577 * 157);
    v835.bezierCurveTo(p577 * 49, p577 * 160, p577 * 49, p577 * 160, p577 * 61, p577 * 163);
    v835.bezierCurveTo(p577 * 49.5, p577 * 165.5, p577 * 49.5, p577 * 165.5, p577 * 38, p577 * 168);
    v835.closePath();
    f89(v835, p579[1]);
    v835.beginPath();
    v835.lineCap = "round";
    v835.lineJoin = "round";
    v835.moveTo(p577 * 205, p577 * 175);
    v835.bezierCurveTo(p577 * 192.5, p577 * 180, p577 * 192.5, p577 * 180, p577 * 180, p577 * 185);
    v835.bezierCurveTo(p577 * 193, p577 * 188, p577 * 193, p577 * 188, p577 * 206, p577 * 191);
    v835.closePath();
    f89(v835, p579[1]);
    return v834;
  }
  function f102(p580, p581, p582) {
    var v836 = document.createElement("canvas");
    var v837 = v836.getContext("2d");
    v836.width = p580 * 248;
    v836.height = p580 * 247;
    v837.save();
    v837.translate(p580 * 182, p580 * 120);
    f90(v837, p580 * -8, p580 * -67, p580 * 16, p580 * 134, p580 * 1);
    v837.restore();
    f89(v837, p582[0]);
    v837.save();
    v837.translate(p580 * 68.5, p580 * 127.5);
    f90(v837, p580 * -8.5, p580 * -70.5, p580 * 17, p580 * 141, p580 * 1);
    v837.restore();
    f89(v837, p582[0]);
    v837.save();
    v837.translate(p580 * 123.5, p580 * 68);
    f90(v837, p580 * -82.5, p580 * -24, p580 * 165, p580 * 48, p580 * 4);
    v837.restore();
    f89(v837, p582[2], p582[1], p580 * 6);
    v837.save();
    v837.translate(p580 * 123, p580 * 179.5);
    f90(v837, p580 * -83, p580 * -24.5, p580 * 166, p580 * 49, p580 * 4);
    v837.restore();
    f89(v837, p582[2], p582[1], p580 * 6);
    v837.save();
    v837.translate(p580 * 123.5, p580 * 123.5);
    v837.rotate(6.24);
    f90(v837, p580 * -82.5, p580 * -24.5, p580 * 165, p580 * 49, p580 * 4);
    v837.restore();
    f89(v837, p582[3], p582[1], p580 * 6);
    v837.beginPath();
    v837.lineCap = "round";
    v837.lineJoin = "round";
    v837.moveTo(p580 * 204, p580 * 112);
    v837.bezierCurveTo(p580 * 149, p580 * 121.5, p580 * 96, p580 * 130, p580 * 94, p580 * 131);
    v837.bezierCurveTo(p580 * 149.5, p580 * 127.5, p580 * 149.5, p580 * 127.5, p580 * 205, p580 * 124);
    v837.closePath();
    f89(v837, p582[1]);
    return v836;
  }
  function f103(p583, p584, p585) {
    var v838 = document.createElement("canvas");
    var v839 = v838.getContext("2d");
    v838.width = p583 * 191;
    v838.height = p583 * 153;
    v839.globalAlpha = 0.5;
    v839.translate(0, p583 * 10);
    v839.save();
    v839.translate(p583 * 97.49996948242188, p583 * 95.12844848632812);
    f90(v839, p583 * -62.5, p583 * -41.5, p583 * 125, p583 * 83, p583 * 20);
    v839.restore();
    f89(v839, p585[0], p585[0], p583 * 4);
    v839.globalAlpha = 1;
    v839.translate(0, p583 * -10);
    v839.save();
    v839.translate(p583 * 97.49996948242188, p583 * 95.12844848632812);
    f90(v839, p583 * -62.5, p583 * -41.5, p583 * 125, p583 * 83, p583 * 20);
    v839.restore();
    f89(v839, p585[1], p585[2], p583 * 4);
    v839.globalCompositeOperation = "destination-out";
    v839.beginPath();
    v839.lineCap = "round";
    v839.lineJoin = "round";
    v839.moveTo(p583 * 26.999969482421875, p583 * 50.850677490234375);
    v839.bezierCurveTo(p583 * 46.499969482421875, p583 * 64.85067749023438, p583 * 46.499969482421875, p583 * 64.85067749023438, p583 * 65.99996948242188, p583 * 78.85067749023438);
    v839.bezierCurveTo(p583 * 80.99996948242188, p583 * 87.85067749023438, p583 * 105.99996948242188, p583 * 82.85067749023438, p583 * 114.99996948242188, p583 * 80.85067749023438);
    v839.bezierCurveTo(p583 * 130.99996948242188, p583 * 69.85067749023438, p583 * 152.99996948242188, p583 * 70.85067749023438, p583 * 166.99996948242188, p583 * 67.85067749023438);
    v839.bezierCurveTo(p583 * 156.99996948242188, p583 * 52.850677490234375, p583 * 156.99996948242188, p583 * 52.850677490234375, p583 * 146.99996948242188, p583 * 37.850677490234375);
    v839.bezierCurveTo(p583 * 101.49996948242188, p583 * 37.350677490234375, p583 * 101.49996948242188, p583 * 37.350677490234375, p583 * 55.999969482421875, p583 * 36.850677490234375);
    v839.closePath();
    f89(v839, p585[2], p585[3], p583 * 4);
    v839.globalCompositeOperation = "source-over";
    v839.beginPath();
    v839.lineCap = "round";
    v839.lineJoin = "round";
    v839.moveTo(p583 * 40.999969482421875, p583 * 59.850677490234375);
    v839.bezierCurveTo(p583 * 41.999969482421875, p583 * 50.850677490234375, p583 * 47.999969482421875, p583 * 47.850677490234375, p583 * 56.999969482421875, p583 * 49.850677490234375);
    v839.bezierCurveTo(p583 * 65.99996948242188, p583 * 41.850677490234375, p583 * 76.99996948242188, p583 * 42.850677490234375, p583 * 90.99996948242188, p583 * 47.850677490234375);
    v839.bezierCurveTo(p583 * 94.99996948242188, p583 * 42.850677490234375, p583 * 104.99996948242188, p583 * 42.850677490234375, p583 * 114.99996948242188, p583 * 47.850677490234375);
    v839.bezierCurveTo(p583 * 131.99996948242188, p583 * 42.850677490234375, p583 * 142.99996948242188, p583 * 48.850677490234375, p583 * 145.99996948242188, p583 * 56.850677490234375);
    v839.bezierCurveTo(p583 * 160.99996948242188, p583 * 63.850677490234375, p583 * 154.99996948242188, p583 * 69.85067749023438, p583 * 155.99996948242188, p583 * 70.85067749023438);
    v839.bezierCurveTo(p583 * 141.99996948242188, p583 * 71.85067749023438, p583 * 141.99996948242188, p583 * 71.85067749023438, p583 * 127.99996948242188, p583 * 72.85067749023438);
    v839.bezierCurveTo(p583 * 110.99996948242188, p583 * 83.85067749023438, p583 * 107.99996948242188, p583 * 82.85067749023438, p583 * 90.99996948242188, p583 * 85.85067749023438);
    v839.bezierCurveTo(p583 * 70.99996948242188, p583 * 83.85067749023438, p583 * 64.99996948242188, p583 * 79.85067749023438, p583 * 53.999969482421875, p583 * 70.85067749023438);
    v839.closePath();
    f89(v839, p585[3], p585[4], p583 * 4);
    v839.beginPath();
    v839.lineCap = "round";
    v839.lineJoin = "round";
    v839.moveTo(p583 * 33.999969482421875, p583 * 65.85067749023438);
    v839.bezierCurveTo(p583 * 36.999969482421875, p583 * 59.850677490234375, p583 * 34.999969482421875, p583 * 60.850677490234375, p583 * 39.999969482421875, p583 * 59.850677490234375);
    v839.bezierCurveTo(p583 * 47.999969482421875, p583 * 61.850677490234375, p583 * 62.999969482421875, p583 * 76.85067749023438, p583 * 74.99996948242188, p583 * 79.85067749023438);
    v839.bezierCurveTo(p583 * 93.99996948242188, p583 * 85.85067749023438, p583 * 111.99996948242188, p583 * 83.85067749023438, p583 * 124.99996948242188, p583 * 70.85067749023438);
    v839.bezierCurveTo(p583 * 129.99996948242188, p583 * 67.85067749023438, p583 * 145.99996948242188, p583 * 65.85067749023438, p583 * 159.99996948242188, p583 * 67.85067749023438);
    v839.bezierCurveTo(p583 * 159.99996948242188, p583 * 71.85067749023438, p583 * 159.99996948242188, p583 * 71.85067749023438, p583 * 159.99996948242188, p583 * 75.85067749023438);
    v839.bezierCurveTo(p583 * 146.99996948242188, p583 * 72.85067749023438, p583 * 144.99996948242188, p583 * 75.85067749023438, p583 * 143.99996948242188, p583 * 82.85067749023438);
    v839.bezierCurveTo(p583 * 144.99996948242188, p583 * 86.85067749023438, p583 * 140.99996948242188, p583 * 90.85067749023438, p583 * 137.99996948242188, p583 * 86.85067749023438);
    v839.bezierCurveTo(p583 * 139.99996948242188, p583 * 72.85067749023438, p583 * 135.99996948242188, p583 * 72.85067749023438, p583 * 133.99996948242188, p583 * 82.85067749023438);
    v839.bezierCurveTo(p583 * 127.99996948242188, p583 * 88.85067749023438, p583 * 124.99996948242188, p583 * 70.85067749023438, p583 * 116.99996948242188, p583 * 86.85067749023438);
    v839.bezierCurveTo(p583 * 110.99996948242188, p583 * 91.85067749023438, p583 * 96.99996948242188, p583 * 81.85067749023438, p583 * 89.99996948242188, p583 * 90.85067749023438);
    v839.bezierCurveTo(p583 * 85.99996948242188, p583 * 92.85067749023438, p583 * 81.99996948242188, p583 * 95.85067749023438, p583 * 76.99996948242188, p583 * 86.85067749023438);
    v839.bezierCurveTo(p583 * 67.99996948242188, p583 * 93.85067749023438, p583 * 67.99996948242188, p583 * 91.85067749023438, p583 * 60.999969482421875, p583 * 79.85067749023438);
    v839.bezierCurveTo(p583 * 53.999969482421875, p583 * 71.85067749023438, p583 * 52.999969482421875, p583 * 72.85067749023438, p583 * 46.999969482421875, p583 * 77.85067749023438);
    v839.bezierCurveTo(p583 * 41.999969482421875, p583 * 78.85067749023438, p583 * 42.999969482421875, p583 * 69.85067749023438, p583 * 33.999969482421875, p583 * 65.85067749023438);
    v839.closePath();
    f89(v839, p585[5], p585[6], p583 * 4);
    f94(v839, p583 * 68, p583 * 111.29513549804688, p583 * 15);
    f89(v839, p585[7], p585[8], p583 * 4);
    f94(v839, p583 * 123, p583 * 111.29510498046875, p583 * 15);
    f89(v839, p585[7], p585[8], p583 * 4);
    f94(v839, p583 * 63, p583 * 106, p583 * 5);
    f89(v839, p585[9]);
    f94(v839, p583 * 118, p583 * 106, p583 * 5);
    f89(v839, p585[9]);
    return v838;
  }
  function f104(p586, p587, p588) {
    var v840 = document.createElement("canvas");
    var v841 = v840.getContext("2d");
    var v842 = (v851 = p586 * 125) / 2;
    var v843 = (v852 = p586 * 95) / 2;
    var v844 = p586 * 10;
    var v845 = p586 * 8;
    var v846 = p586 * 112;
    var v847 = p586 * 82;
    var v848 = v846 / 2;
    var v849 = v847 / 2;
    var v850 = p586 * 4;
    v840.width = v851;
    v840.height = v852;
    v841.translate(v842 - p586 * 4, v843 + p586 * 4);
    v841.globalAlpha = p587 ? 0.5 : 1;
    f90(v841, -v848, -v849, v846, v847, v844);
    f89(v841, p588[0]);
    v841.globalAlpha = 1;
    v841.translate(0, -v845);
    f90(v841, -v848, -v849, v846, v847, v844);
    f89(v841, p588[1], p588[2], v850);
    var v851 = p586 * 55;
    var v852 = p586 * 45;
    v844 = 5;
    v841.translate(p586 * -40, p586 * -30);
    f90(v841, 0, 0, v851, v852, v844);
    f89(v841, p588[3]);
    var vBl = f111(p586 * 0.7, p588[3]);
    v841.drawImage(vBl, p586 * 45, p586 * -25);
    vBl = f111(p586 * 0.7, p588[3]);
    v841.drawImage(vBl, p586 * 45, p586 * 15);
    vBl = f111(p586 * 1.2, p588[3]);
    v841.drawImage(vBl, p586 * 28, p586 * -30);
    v851 = p586 * 15;
    v852 = p586 * 70;
    v844 = p586 * 5;
    v841.translate(p586 * 78, p586 * -5);
    f90(v841, 0, 0, v851, v852, v844);
    f89(v841, p588[4]);
    v851 = p586 * 9;
    v852 = p586 * 50;
    v844 = p586 * 3;
    v841.translate(p586 * -20, p586 * 20);
    v841.rotate(Math.PI / 5);
    v841.globalAlpha = 0.6;
    f90(v841, 0, 0, v851, v852, v844);
    f89(v841, p588[5]);
    v841.translate(p586 * -20, p586 * 29);
    v841.rotate(Math.PI / 5);
    v841.globalAlpha = 0.6;
    v841.beginPath();
    v841.lineJoin = "round";
    v841.moveTo(0, 0);
    v841.lineTo(0, p586 * 30);
    v841.lineTo(p586 * 30, p586 * 30);
    v841.closePath();
    f89(v841, null, p588[5], p586 * 8);
    return v840;
  }
  function f105(p589, p590, p591, p592) {
    var v853 = document.createElement("canvas");
    var v854 = v853.getContext("2d");
    v853.width = p589 * 185;
    v853.height = p589 * 240;
    v854.globalAlpha = 0.5;
    v854.translate(0, p589 * 10);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 44, p589 * 137);
    v854.bezierCurveTo(p589 * 60, p589 * 87, p589 * 68, p589 * 66, p589 * 92, p589 * 67);
    v854.bezierCurveTo(p589 * 115, p589 * 64, p589 * 129, p589 * 97, p589 * 137, p589 * 136);
    v854.closePath();
    f89(v854, p591[0]);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 53, p589 * 181);
    v854.bezierCurveTo(p589 * 30, p589 * 164, p589 * 19, p589 * 150, p589 * 11, p589 * 136);
    v854.bezierCurveTo(p589 * 28, p589 * 121, p589 * 38, p589 * 132, p589 * 48, p589 * 150);
    v854.closePath();
    f89(v854, p591[0]);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 63, p589 * 208);
    v854.bezierCurveTo(p589 * 75, p589 * 224, p589 * 86, p589 * 228, p589 * 93, p589 * 228);
    v854.bezierCurveTo(p589 * 104, p589 * 229, p589 * 116, p589 * 219, p589 * 122, p589 * 205);
    v854.closePath();
    f89(v854, p591[0]);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 130, p589 * 170);
    v854.bezierCurveTo(p589 * 146, p589 * 125, p589 * 156, p589 * 126, p589 * 173, p589 * 137);
    v854.bezierCurveTo(p589 * 167, p589 * 151, p589 * 143, p589 * 174, p589 * 131, p589 * 183);
    v854.closePath();
    f89(v854, p591[0]);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 39, p589 * 140);
    v854.bezierCurveTo(p589 * 75, p589 * 126, p589 * 113, p589 * 127, p589 * 143, p589 * 137);
    v854.bezierCurveTo(p589 * 141, p589 * 186, p589 * 130, p589 * 202, p589 * 113, p589 * 214);
    v854.bezierCurveTo(p589 * 85, p589 * 228, p589 * 56, p589 * 219, p589 * 48, p589 * 173);
    v854.bezierCurveTo(p589 * 40, p589 * 148, p589 * 43, p589 * 145, p589 * 39, p589 * 140);
    v854.closePath();
    f89(v854, p591[0]);
    v854.globalAlpha = 1;
    v854.translate(0, p589 * -10);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 44, p589 * 137);
    v854.bezierCurveTo(p589 * 60, p589 * 87, p589 * 68, p589 * 66, p589 * 92, p589 * 67);
    v854.bezierCurveTo(p589 * 115, p589 * 64, p589 * 129, p589 * 97, p589 * 137, p589 * 136);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 53, p589 * 181);
    v854.bezierCurveTo(p589 * 30, p589 * 164, p589 * 19, p589 * 150, p589 * 11, p589 * 136);
    v854.bezierCurveTo(p589 * 28, p589 * 121, p589 * 38, p589 * 132, p589 * 48, p589 * 150);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 63, p589 * 208);
    v854.bezierCurveTo(p589 * 75, p589 * 224, p589 * 86, p589 * 228, p589 * 93, p589 * 228);
    v854.bezierCurveTo(p589 * 104, p589 * 229, p589 * 116, p589 * 219, p589 * 122, p589 * 205);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 130, p589 * 170);
    v854.bezierCurveTo(p589 * 146, p589 * 125, p589 * 156, p589 * 126, p589 * 173, p589 * 137);
    v854.bezierCurveTo(p589 * 167, p589 * 151, p589 * 143, p589 * 174, p589 * 131, p589 * 183);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 39, p589 * 140);
    v854.bezierCurveTo(p589 * 75, p589 * 126, p589 * 113, p589 * 127, p589 * 143, p589 * 137);
    v854.bezierCurveTo(p589 * 141, p589 * 186, p589 * 130, p589 * 202, p589 * 113, p589 * 214);
    v854.bezierCurveTo(p589 * 85, p589 * 228, p589 * 56, p589 * 219, p589 * 48, p589 * 173);
    v854.bezierCurveTo(p589 * 40, p589 * 148, p589 * 43, p589 * 145, p589 * 39, p589 * 140);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 59, p589 * 99);
    v854.bezierCurveTo(p589 * 71, p589 * 68, p589 * 81, p589 * 68, p589 * 94, p589 * 67);
    v854.bezierCurveTo(p589 * 105, p589 * 66, p589 * 119, p589 * 75, p589 * 123, p589 * 96);
    v854.bezierCurveTo(p589 * 104, p589 * 91, p589 * 101, p589 * 94, p589 * 94, p589 * 97);
    v854.bezierCurveTo(p589 * 76, p589 * 92, p589 * 73, p589 * 93, p589 * 60, p589 * 99);
    v854.closePath();
    f89(v854, p591[3], p591[2], p589 * 4);
    if (p592 === 0) {
      v854.beginPath();
      v854.lineCap = "round";
      v854.lineJoin = "round";
      v854.moveTo(p589 * 47, p589 * 149);
      v854.bezierCurveTo(p589 * 43, p589 * 140, p589 * 48, p589 * 130, p589 * 59, p589 * 127);
      v854.bezierCurveTo(p589 * 77, p589 * 126, p589 * 90, p589 * 131, p589 * 131, p589 * 127);
      v854.bezierCurveTo(p589 * 143, p589 * 130, p589 * 144, p589 * 143, p589 * 132, p589 * 154);
      v854.bezierCurveTo(p589 * 90, p589 * 152, p589 * 90, p589 * 152, p589 * 48, p589 * 150);
      v854.closePath();
      f89(v854, p591[1]);
      v854.beginPath();
      v854.lineCap = "round";
      v854.lineJoin = "round";
      v854.moveTo(p589 * 40, p589 * 139);
      v854.bezierCurveTo(p589 * 48, p589 * 113, p589 * 76, p589 * 119, p589 * 91, p589 * 126);
      v854.bezierCurveTo(p589 * 117, p589 * 113, p589 * 135, p589 * 117, p589 * 144, p589 * 134);
      v854.bezierCurveTo(p589 * 144, p589 * 138, p589 * 144, p589 * 138, p589 * 144, p589 * 142);
      v854.bezierCurveTo(p589 * 128, p589 * 124, p589 * 108, p589 * 124, p589 * 91, p589 * 136);
      v854.bezierCurveTo(p589 * 59, p589 * 124, p589 * 50, p589 * 137, p589 * 42, p589 * 148);
      v854.closePath();
      f89(v854, p591[3], p591[2], p589 * 4);
    } else {
      v854.beginPath();
      v854.lineCap = "round";
      v854.lineJoin = "round";
      v854.moveTo(p589 * 41, p589 * 139);
      v854.bezierCurveTo(p589 * 53, p589 * 117, p589 * 69, p589 * 118, p589 * 92, p589 * 127);
      v854.bezierCurveTo(p589 * 124, p589 * 111, p589 * 136, p589 * 121, p589 * 143, p589 * 136);
      v854.bezierCurveTo(p589 * 142, p589 * 144, p589 * 142, p589 * 144, p589 * 141, p589 * 152);
      v854.bezierCurveTo(p589 * 128, p589 * 131, p589 * 113, p589 * 138, p589 * 92, p589 * 145);
      v854.bezierCurveTo(p589 * 57, p589 * 133, p589 * 57, p589 * 147, p589 * 44, p589 * 154);
      v854.closePath();
      f89(v854, p591[3], p591[2], p589 * 4);
    }
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 90, p589 * 95);
    v854.bezierCurveTo(p589 * 99, p589 * 82, p589 * 98, p589 * 58, p589 * 99, p589 * 40);
    v854.bezierCurveTo(p589 * 90, p589 * 38, p589 * 89, p589 * 34, p589 * 92, p589 * 17);
    v854.bezierCurveTo(p589 * 92, p589 * 5, p589 * 83, p589 * 16, p589 * 78, p589 * 29);
    v854.bezierCurveTo(p589 * 72, p589 * 59, p589 * 87, p589 * 81, p589 * 89, p589 * 87);
    v854.closePath();
    f89(v854, p591[1], p591[2], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 90, p589 * 86);
    v854.bezierCurveTo(p589 * 95, p589 * 74, p589 * 95, p589 * 62, p589 * 95, p589 * 43);
    v854.bezierCurveTo(p589 * 84, p589 * 37, p589 * 86, p589 * 34, p589 * 89, p589 * 16);
    v854.bezierCurveTo(p589 * 75, p589 * 29, p589 * 80, p589 * 58, p589 * 90, p589 * 85);
    v854.closePath();
    f89(v854, p591[1], p591[3], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 92, p589 * 117);
    v854.bezierCurveTo(p589 * 98, p589 * 87, p589 * 93, p589 * 78, p589 * 85, p589 * 76);
    v854.bezierCurveTo(p589 * 85.5, p589 * 79.5, p589 * 85.5, p589 * 79.5, p589 * 86, p589 * 83);
    v854.bezierCurveTo(p589 * 84, p589 * 85.5, p589 * 84, p589 * 85.5, p589 * 82, p589 * 88);
    v854.bezierCurveTo(p589 * 90, p589 * 93, p589 * 89, p589 * 100, p589 * 92, p589 * 117);
    v854.closePath();
    f89(v854, p591[1], p591[3], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 92, p589 * 175);
    v854.bezierCurveTo(p589 * 95, p589 * 135, p589 * 98, p589 * 125, p589 * 109, p589 * 121);
    v854.bezierCurveTo(p589 * 106, p589 * 114, p589 * 104, p589 * 114, p589 * 102, p589 * 113);
    v854.bezierCurveTo(p589 * 103, p589 * 106, p589 * 104, p589 * 103, p589 * 107, p589 * 96);
    v854.bezierCurveTo(p589 * 74, p589 * 108, p589 * 86, p589 * 157, p589 * 92, p589 * 174);
    v854.closePath();
    f89(v854, p591[1], p591[3], p589 * 4);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 48, p589 * 169);
    v854.bezierCurveTo(p589 * 42, p589 * 187, p589 * 50, p589 * 193, p589 * 59, p589 * 198);
    v854.closePath();
    f89(v854, vVVUndefined142, p591[2], p589 * 5);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p589 * 136, p589 * 171);
    v854.bezierCurveTo(p589 * 139, p589 * 186, p589 * 138, p589 * 191, p589 * 124, p589 * 199);
    v854.closePath();
    f89(v854, vVVVVVUndefined173, p591[2], p589 * 4);
    f94(v854, p589 * 63, p589 * 180, p589 * 15.231546211727817);
    f89(v854, p591[4]);
    f94(v854, p589 * 121, p589 * 181, p589 * 15.652475842498529);
    f89(v854, p591[4]);
    f94(v854, p589 * 58, p589 * 175, p589 * 5.656854249492381);
    f89(v854, p591[2]);
    f94(v854, p589 * 116, p589 * 175, p589 * 5.656854249492381);
    f89(v854, p591[2]);
    return v853;
  }
  function f106(p593, p594, p595) {
    var v855 = document.createElement("canvas");
    var v856 = v855.getContext("2d");
    var v857 = p593 * 40;
    var v858 = p593 * 40;
    v855.width = v857;
    v855.height = v858;
    var v859 = v857 * p593 / 2;
    var v860 = v858 * p593 / 2;
    var v861 = p593 * 15;
    v856.save();
    v856.translate(v859, v860);
    v856.globalAlpha = 1;
    f94(v856, 0, 0, v861);
    f89(v856, p595[0]);
    v861 = p593 * 5;
    v859 = p593 * 2;
    v860 = p593 * 1;
    v856.translate(v859, v860);
    v856.globalAlpha = 1;
    f94(v856, 0, 0, v861);
    f89(v856, p595[1]);
    v856.restore();
    return v855;
  }
  function f107(p596, p597) {
    var v862 = document.createElement("canvas");
    var v863 = v862.getContext("2d");
    v862.width = p596 * 185;
    v862.height = p596 * 240;
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 44, p596 * 137);
    v863.bezierCurveTo(p596 * 60, p596 * 87, p596 * 68, p596 * 66, p596 * 92, p596 * 67);
    v863.bezierCurveTo(p596 * 115, p596 * 64, p596 * 129, p596 * 97, p596 * 137, p596 * 136);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 53, p596 * 181);
    v863.bezierCurveTo(p596 * 30, p596 * 164, p596 * 19, p596 * 150, p596 * 11, p596 * 136);
    v863.bezierCurveTo(p596 * 28, p596 * 121, p596 * 38, p596 * 132, p596 * 48, p596 * 150);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 63, p596 * 208);
    v863.bezierCurveTo(p596 * 75, p596 * 224, p596 * 86, p596 * 228, p596 * 93, p596 * 228);
    v863.bezierCurveTo(p596 * 104, p596 * 229, p596 * 116, p596 * 219, p596 * 122, p596 * 205);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 130, p596 * 170);
    v863.bezierCurveTo(p596 * 146, p596 * 125, p596 * 156, p596 * 126, p596 * 173, p596 * 137);
    v863.bezierCurveTo(p596 * 167, p596 * 151, p596 * 143, p596 * 174, p596 * 131, p596 * 183);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 39, p596 * 140);
    v863.bezierCurveTo(p596 * 75, p596 * 126, p596 * 113, p596 * 127, p596 * 143, p596 * 137);
    v863.bezierCurveTo(p596 * 141, p596 * 186, p596 * 130, p596 * 202, p596 * 113, p596 * 214);
    v863.bezierCurveTo(p596 * 85, p596 * 228, p596 * 56, p596 * 219, p596 * 48, p596 * 173);
    v863.bezierCurveTo(p596 * 40, p596 * 148, p596 * 43, p596 * 145, p596 * 39, p596 * 140);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 90, p596 * 95);
    v863.bezierCurveTo(p596 * 99, p596 * 82, p596 * 98, p596 * 58, p596 * 99, p596 * 40);
    v863.bezierCurveTo(p596 * 90, p596 * 38, p596 * 89, p596 * 34, p596 * 92, p596 * 17);
    v863.bezierCurveTo(p596 * 92, p596 * 5, p596 * 83, p596 * 16, p596 * 78, p596 * 29);
    v863.bezierCurveTo(p596 * 72, p596 * 59, p596 * 87, p596 * 81, p596 * 89, p596 * 87);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 90, p596 * 86);
    v863.bezierCurveTo(p596 * 95, p596 * 74, p596 * 95, p596 * 62, p596 * 95, p596 * 43);
    v863.bezierCurveTo(p596 * 84, p596 * 37, p596 * 86, p596 * 34, p596 * 89, p596 * 16);
    v863.bezierCurveTo(p596 * 75, p596 * 29, p596 * 80, p596 * 58, p596 * 90, p596 * 85);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 92, p596 * 117);
    v863.bezierCurveTo(p596 * 98, p596 * 87, p596 * 93, p596 * 78, p596 * 85, p596 * 76);
    v863.bezierCurveTo(p596 * 85.5, p596 * 79.5, p596 * 85.5, p596 * 79.5, p596 * 86, p596 * 83);
    v863.bezierCurveTo(p596 * 84, p596 * 85.5, p596 * 84, p596 * 85.5, p596 * 82, p596 * 88);
    v863.bezierCurveTo(p596 * 90, p596 * 93, p596 * 89, p596 * 100, p596 * 92, p596 * 117);
    v863.closePath();
    f89(v863, p597[0]);
    v863.beginPath();
    v863.lineCap = "round";
    v863.lineJoin = "round";
    v863.moveTo(p596 * 92, p596 * 175);
    v863.bezierCurveTo(p596 * 95, p596 * 135, p596 * 98, p596 * 125, p596 * 109, p596 * 121);
    v863.bezierCurveTo(p596 * 106, p596 * 114, p596 * 104, p596 * 114, p596 * 102, p596 * 113);
    v863.bezierCurveTo(p596 * 103, p596 * 106, p596 * 104, p596 * 103, p596 * 107, p596 * 96);
    v863.bezierCurveTo(p596 * 74, p596 * 108, p596 * 86, p596 * 157, p596 * 92, p596 * 174);
    v863.closePath();
    f89(v863, p597[0]);
    return v862;
  }
  function f108(p598, p599) {
    var v864 = document.createElement("canvas");
    var v865 = v864.getContext("2d");
    v864.width = p598 * 188;
    v864.height = p598 * 190;
    v865.globalAlpha = 0.5;
    v865.translate(0, p598 * 5);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 33.00567626953125, p598 * 95.44320678710938);
    v865.bezierCurveTo(p598 * 42.00567626953125, p598 * 87.44320678710938, p598 * 48.00567626953125, p598 * 51.443206787109375, p598 * 74.00567626953125, p598 * 47.443206787109375);
    v865.bezierCurveTo(p598 * 100.00567626953125, p598 * 42.443206787109375, p598 * 118.00567626953125, p598 * 49.443206787109375, p598 * 131.00567626953125, p598 * 55.443206787109375);
    v865.bezierCurveTo(p598 * 140.00567626953125, p598 * 70.44320678710938, p598 * 145.00567626953125, p598 * 87.44320678710938, p598 * 152.00567626953125, p598 * 94.44320678710938);
    v865.bezierCurveTo(p598 * 149.00567626953125, p598 * 99.44320678710938, p598 * 147.00567626953125, p598 * 98.44320678710938, p598 * 141.00567626953125, p598 * 101.44320678710938);
    v865.bezierCurveTo(p598 * 147.00567626953125, p598 * 108.44320678710938, p598 * 147.00567626953125, p598 * 111.44320678710938, p598 * 147.00567626953125, p598 * 112.44320678710938);
    v865.bezierCurveTo(p598 * 143.00567626953125, p598 * 112.44320678710938, p598 * 141.00567626953125, p598 * 112.44320678710938, p598 * 137.00567626953125, p598 * 111.44320678710938);
    v865.bezierCurveTo(p598 * 138.00567626953125, p598 * 117.44320678710938, p598 * 138.00567626953125, p598 * 120.44320678710938, p598 * 138.00567626953125, p598 * 124.44320678710938);
    v865.bezierCurveTo(p598 * 125.00567626953125, p598 * 107.44320678710938, p598 * 121.00567626953125, p598 * 124.44320678710938, p598 * 110.00567626953125, p598 * 141.44320678710938);
    v865.bezierCurveTo(p598 * 102.00567626953125, p598 * 158.44320678710938, p598 * 89.00567626953125, p598 * 158.44320678710938, p598 * 80.00567626953125, p598 * 144.44320678710938);
    v865.bezierCurveTo(p598 * 61.00567626953125, p598 * 111.44320678710938, p598 * 56.00567626953125, p598 * 117.44320678710938, p598 * 48.00567626953125, p598 * 120.44320678710938);
    v865.bezierCurveTo(p598 * 46.00567626953125, p598 * 118.44320678710938, p598 * 47.00567626953125, p598 * 112.44320678710938, p598 * 48.00567626953125, p598 * 107.44320678710938);
    v865.bezierCurveTo(p598 * 43.00567626953125, p598 * 111.44320678710938, p598 * 40.00567626953125, p598 * 111.44320678710938, p598 * 37.00567626953125, p598 * 110.44320678710938);
    v865.bezierCurveTo(p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 42.00567626953125, p598 * 99.44320678710938);
    v865.bezierCurveTo(p598 * 33.00567626953125, p598 * 99.44320678710938, p598 * 33.00567626953125, p598 * 98.44320678710938, p598 * 33.00567626953125, p598 * 96.44320678710938);
    v865.closePath();
    f89(v865, p599[0], p599[0], p598 * 4);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 60.00567626953125, p598 * 99.35227966308594);
    v865.bezierCurveTo(p598 * 70.00567626953125, p598 * 82.35227966308594, p598 * 85.00567626953125, p598 * 86.35227966308594, p598 * 87.00567626953125, p598 * 97.35227966308594);
    v865.bezierCurveTo(p598 * 89.00567626953125, p598 * 101.35227966308594, p598 * 88.00567626953125, p598 * 105.35227966308594, p598 * 87.00567626953125, p598 * 110.35227966308594);
    v865.bezierCurveTo(p598 * 89.00567626953125, p598 * 111.35227966308594, p598 * 91.00567626953125, p598 * 112.35227966308594, p598 * 93.00567626953125, p598 * 115.35227966308594);
    v865.bezierCurveTo(p598 * 96.00567626953125, p598 * 111.35227966308594, p598 * 99.00567626953125, p598 * 111.35227966308594, p598 * 100.00567626953125, p598 * 110.35227966308594);
    v865.bezierCurveTo(p598 * 98.00567626953125, p598 * 92.35227966308594, p598 * 103.00567626953125, p598 * 86.35227966308594, p598 * 113.00567626953125, p598 * 89.35227966308594);
    v865.bezierCurveTo(p598 * 122.00567626953125, p598 * 92.35227966308594, p598 * 123.00567626953125, p598 * 94.35227966308594, p598 * 126.00567626953125, p598 * 98.35227966308594);
    v865.bezierCurveTo(p598 * 124.00567626953125, p598 * 102.35227966308594, p598 * 123.00567626953125, p598 * 103.35227966308594, p598 * 121.00567626953125, p598 * 104.35227966308594);
    v865.bezierCurveTo(p598 * 124.00567626953125, p598 * 105.35227966308594, p598 * 126.00567626953125, p598 * 107.35227966308594, p598 * 129.00567626953125, p598 * 111.35227966308594);
    v865.bezierCurveTo(p598 * 115.00567626953125, p598 * 122.35227966308594, p598 * 113.00567626953125, p598 * 145.35227966308594, p598 * 100.00567626953125, p598 * 152.35227966308594);
    v865.bezierCurveTo(p598 * 91.00567626953125, p598 * 158.35227966308594, p598 * 83.00567626953125, p598 * 149.35227966308594, p598 * 76.00567626953125, p598 * 138.35227966308594);
    v865.bezierCurveTo(p598 * 67.00567626953125, p598 * 114.35227966308594, p598 * 63.00567626953125, p598 * 113.35227966308594, p598 * 59.00567626953125, p598 * 111.35227966308594);
    v865.bezierCurveTo(p598 * 62.00567626953125, p598 * 107.35227966308594, p598 * 64.00567626953125, p598 * 105.35227966308594, p598 * 66.00567626953125, p598 * 104.35227966308594);
    v865.bezierCurveTo(p598 * 63.00567626953125, p598 * 100.35227966308594, p598 * 62.00567626953125, p598 * 100.35227966308594, p598 * 60.00567626953125, p598 * 99.35227966308594);
    v865.closePath();
    f89(v865, p599[0], p599[0], p598 * 2);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 51.00567626953125, p598 * 72.53409576416016);
    v865.bezierCurveTo(p598 * 48.00567626953125, p598 * 56.534095764160156, p598 * 48.00567626953125, p598 * 49.534095764160156, p598 * 54.00567626953125, p598 * 35.534095764160156);
    v865.bezierCurveTo(p598 * 58.00567626953125, p598 * 26.534095764160156, p598 * 65.00567626953125, p598 * 27.534095764160156, p598 * 73.00567626953125, p598 * 40.534095764160156);
    v865.bezierCurveTo(p598 * 81.00567626953125, p598 * 49.534095764160156, p598 * 82.00567626953125, p598 * 50.534095764160156, p598 * 83.00567626953125, p598 * 51.534095764160156);
    v865.bezierCurveTo(p598 * 77.00567626953125, p598 * 71.53409576416016, p598 * 64.00567626953125, p598 * 75.53409576416016, p598 * 51.00567626953125, p598 * 72.53409576416016);
    v865.closePath();
    f89(v865, p599[0], p599[0], p598 * 2);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 105.00567626953125, p598 * 50.53410339355469);
    v865.bezierCurveTo(p598 * 112.00567626953125, p598 * 48.53410339355469, p598 * 125.00567626953125, p598 * 21.534103393554688, p598 * 132.00567626953125, p598 * 33.53410339355469);
    v865.bezierCurveTo(p598 * 138.00567626953125, p598 * 42.53410339355469, p598 * 140.00567626953125, p598 * 64.53410339355469, p598 * 136.00567626953125, p598 * 75.53410339355469);
    v865.closePath();
    f89(v865, p599[0], p599[0], p598 * 2);
    v865.globalAlpha = 1;
    v865.translate(0, p598 * -5);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 33.00567626953125, p598 * 95.44320678710938);
    v865.bezierCurveTo(p598 * 42.00567626953125, p598 * 87.44320678710938, p598 * 48.00567626953125, p598 * 51.443206787109375, p598 * 74.00567626953125, p598 * 47.443206787109375);
    v865.bezierCurveTo(p598 * 100.00567626953125, p598 * 42.443206787109375, p598 * 118.00567626953125, p598 * 49.443206787109375, p598 * 131.00567626953125, p598 * 55.443206787109375);
    v865.bezierCurveTo(p598 * 140.00567626953125, p598 * 70.44320678710938, p598 * 145.00567626953125, p598 * 87.44320678710938, p598 * 152.00567626953125, p598 * 94.44320678710938);
    v865.bezierCurveTo(p598 * 149.00567626953125, p598 * 99.44320678710938, p598 * 147.00567626953125, p598 * 98.44320678710938, p598 * 141.00567626953125, p598 * 101.44320678710938);
    v865.bezierCurveTo(p598 * 147.00567626953125, p598 * 108.44320678710938, p598 * 147.00567626953125, p598 * 111.44320678710938, p598 * 147.00567626953125, p598 * 112.44320678710938);
    v865.bezierCurveTo(p598 * 143.00567626953125, p598 * 112.44320678710938, p598 * 141.00567626953125, p598 * 112.44320678710938, p598 * 137.00567626953125, p598 * 111.44320678710938);
    v865.bezierCurveTo(p598 * 138.00567626953125, p598 * 117.44320678710938, p598 * 138.00567626953125, p598 * 120.44320678710938, p598 * 138.00567626953125, p598 * 124.44320678710938);
    v865.bezierCurveTo(p598 * 125.00567626953125, p598 * 107.44320678710938, p598 * 121.00567626953125, p598 * 124.44320678710938, p598 * 110.00567626953125, p598 * 141.44320678710938);
    v865.bezierCurveTo(p598 * 102.00567626953125, p598 * 158.44320678710938, p598 * 89.00567626953125, p598 * 158.44320678710938, p598 * 80.00567626953125, p598 * 144.44320678710938);
    v865.bezierCurveTo(p598 * 61.00567626953125, p598 * 111.44320678710938, p598 * 56.00567626953125, p598 * 117.44320678710938, p598 * 48.00567626953125, p598 * 120.44320678710938);
    v865.bezierCurveTo(p598 * 46.00567626953125, p598 * 118.44320678710938, p598 * 47.00567626953125, p598 * 112.44320678710938, p598 * 48.00567626953125, p598 * 107.44320678710938);
    v865.bezierCurveTo(p598 * 43.00567626953125, p598 * 111.44320678710938, p598 * 40.00567626953125, p598 * 111.44320678710938, p598 * 37.00567626953125, p598 * 110.44320678710938);
    v865.bezierCurveTo(p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 42.00567626953125, p598 * 99.44320678710938);
    v865.bezierCurveTo(p598 * 33.00567626953125, p598 * 99.44320678710938, p598 * 33.00567626953125, p598 * 98.44320678710938, p598 * 33.00567626953125, p598 * 96.44320678710938);
    v865.closePath();
    f89(v865, p599[1], p599[2], p598 * 3);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 60.00567626953125, p598 * 99.35227966308594);
    v865.bezierCurveTo(p598 * 70.00567626953125, p598 * 82.35227966308594, p598 * 85.00567626953125, p598 * 86.35227966308594, p598 * 87.00567626953125, p598 * 97.35227966308594);
    v865.bezierCurveTo(p598 * 89.00567626953125, p598 * 101.35227966308594, p598 * 88.00567626953125, p598 * 105.35227966308594, p598 * 87.00567626953125, p598 * 110.35227966308594);
    v865.bezierCurveTo(p598 * 89.00567626953125, p598 * 111.35227966308594, p598 * 91.00567626953125, p598 * 112.35227966308594, p598 * 93.00567626953125, p598 * 115.35227966308594);
    v865.bezierCurveTo(p598 * 96.00567626953125, p598 * 111.35227966308594, p598 * 99.00567626953125, p598 * 111.35227966308594, p598 * 100.00567626953125, p598 * 110.35227966308594);
    v865.bezierCurveTo(p598 * 98.00567626953125, p598 * 92.35227966308594, p598 * 103.00567626953125, p598 * 86.35227966308594, p598 * 113.00567626953125, p598 * 89.35227966308594);
    v865.bezierCurveTo(p598 * 122.00567626953125, p598 * 92.35227966308594, p598 * 123.00567626953125, p598 * 94.35227966308594, p598 * 126.00567626953125, p598 * 98.35227966308594);
    v865.bezierCurveTo(p598 * 124.00567626953125, p598 * 102.35227966308594, p598 * 123.00567626953125, p598 * 103.35227966308594, p598 * 121.00567626953125, p598 * 104.35227966308594);
    v865.bezierCurveTo(p598 * 124.00567626953125, p598 * 105.35227966308594, p598 * 126.00567626953125, p598 * 107.35227966308594, p598 * 129.00567626953125, p598 * 111.35227966308594);
    v865.bezierCurveTo(p598 * 115.00567626953125, p598 * 122.35227966308594, p598 * 113.00567626953125, p598 * 145.35227966308594, p598 * 100.00567626953125, p598 * 152.35227966308594);
    v865.bezierCurveTo(p598 * 91.00567626953125, p598 * 158.35227966308594, p598 * 83.00567626953125, p598 * 149.35227966308594, p598 * 76.00567626953125, p598 * 138.35227966308594);
    v865.bezierCurveTo(p598 * 67.00567626953125, p598 * 114.35227966308594, p598 * 63.00567626953125, p598 * 113.35227966308594, p598 * 59.00567626953125, p598 * 111.35227966308594);
    v865.bezierCurveTo(p598 * 62.00567626953125, p598 * 107.35227966308594, p598 * 64.00567626953125, p598 * 105.35227966308594, p598 * 66.00567626953125, p598 * 104.35227966308594);
    v865.bezierCurveTo(p598 * 63.00567626953125, p598 * 100.35227966308594, p598 * 62.00567626953125, p598 * 100.35227966308594, p598 * 60.00567626953125, p598 * 99.35227966308594);
    v865.closePath();
    f89(v865, p599[3]);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 33.00567626953125, p598 * 95.44320678710938);
    v865.bezierCurveTo(p598 * 42.00567626953125, p598 * 87.44320678710938, p598 * 48.00567626953125, p598 * 51.443206787109375, p598 * 74.00567626953125, p598 * 47.443206787109375);
    v865.bezierCurveTo(p598 * 100.00567626953125, p598 * 42.443206787109375, p598 * 118.00567626953125, p598 * 49.443206787109375, p598 * 131.00567626953125, p598 * 55.443206787109375);
    v865.bezierCurveTo(p598 * 140.00567626953125, p598 * 70.44320678710938, p598 * 145.00567626953125, p598 * 87.44320678710938, p598 * 152.00567626953125, p598 * 94.44320678710938);
    v865.bezierCurveTo(p598 * 149.00567626953125, p598 * 99.44320678710938, p598 * 147.00567626953125, p598 * 98.44320678710938, p598 * 141.00567626953125, p598 * 101.44320678710938);
    v865.bezierCurveTo(p598 * 147.00567626953125, p598 * 108.44320678710938, p598 * 147.00567626953125, p598 * 111.44320678710938, p598 * 147.00567626953125, p598 * 112.44320678710938);
    v865.bezierCurveTo(p598 * 143.00567626953125, p598 * 112.44320678710938, p598 * 141.00567626953125, p598 * 112.44320678710938, p598 * 137.00567626953125, p598 * 111.44320678710938);
    v865.bezierCurveTo(p598 * 138.00567626953125, p598 * 117.44320678710938, p598 * 138.00567626953125, p598 * 120.44320678710938, p598 * 138.00567626953125, p598 * 124.44320678710938);
    v865.bezierCurveTo(p598 * 125.00567626953125, p598 * 107.44320678710938, p598 * 121.00567626953125, p598 * 124.44320678710938, p598 * 110.00567626953125, p598 * 141.44320678710938);
    v865.bezierCurveTo(p598 * 102.00567626953125, p598 * 158.44320678710938, p598 * 89.00567626953125, p598 * 158.44320678710938, p598 * 80.00567626953125, p598 * 144.44320678710938);
    v865.bezierCurveTo(p598 * 61.00567626953125, p598 * 111.44320678710938, p598 * 56.00567626953125, p598 * 117.44320678710938, p598 * 48.00567626953125, p598 * 120.44320678710938);
    v865.bezierCurveTo(p598 * 46.00567626953125, p598 * 118.44320678710938, p598 * 47.00567626953125, p598 * 112.44320678710938, p598 * 48.00567626953125, p598 * 107.44320678710938);
    v865.bezierCurveTo(p598 * 43.00567626953125, p598 * 111.44320678710938, p598 * 40.00567626953125, p598 * 111.44320678710938, p598 * 37.00567626953125, p598 * 110.44320678710938);
    v865.bezierCurveTo(p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 39.50567626953125, p598 * 104.94320678710938, p598 * 42.00567626953125, p598 * 99.44320678710938);
    v865.bezierCurveTo(p598 * 33.00567626953125, p598 * 99.44320678710938, p598 * 33.00567626953125, p598 * 98.44320678710938, p598 * 33.00567626953125, p598 * 96.44320678710938);
    v865.closePath();
    f89(v865, undefined, p599[2], p598 * 3);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 51.00567626953125, p598 * 72.53409576416016);
    v865.bezierCurveTo(p598 * 48.00567626953125, p598 * 56.534095764160156, p598 * 48.00567626953125, p598 * 49.534095764160156, p598 * 54.00567626953125, p598 * 35.534095764160156);
    v865.bezierCurveTo(p598 * 58.00567626953125, p598 * 26.534095764160156, p598 * 65.00567626953125, p598 * 27.534095764160156, p598 * 73.00567626953125, p598 * 40.534095764160156);
    v865.bezierCurveTo(p598 * 81.00567626953125, p598 * 49.534095764160156, p598 * 82.00567626953125, p598 * 50.534095764160156, p598 * 83.00567626953125, p598 * 51.534095764160156);
    f89(v865, p599[1], p599[2], p598 * 3);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 105.00567626953125, p598 * 50.53410339355469);
    v865.bezierCurveTo(p598 * 112.00567626953125, p598 * 48.53410339355469, p598 * 125.00567626953125, p598 * 21.534103393554688, p598 * 132.00567626953125, p598 * 33.53410339355469);
    v865.bezierCurveTo(p598 * 138.00567626953125, p598 * 42.53410339355469, p598 * 140.00567626953125, p598 * 64.53410339355469, p598 * 136.00567626953125, p598 * 75.53410339355469);
    f89(v865, p599[1], p599[2], p598 * 3);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 57.00567626953125, p598 * 68.53410339355469);
    v865.bezierCurveTo(p598 * 63.00567626953125, p598 * 69.53410339355469, p598 * 69.00567626953125, p598 * 66.53410339355469, p598 * 73.00567626953125, p598 * 60.53410339355469);
    v865.bezierCurveTo(p598 * 66.00567626953125, p598 * 47.53410339355469, p598 * 61.00567626953125, p598 * 42.53410339355469, p598 * 58.00567626953125, p598 * 49.53410339355469);
    v865.bezierCurveTo(p598 * 56.00567626953125, p598 * 59.53410339355469, p598 * 56.00567626953125, p598 * 64.53410339355469, p598 * 57.00567626953125, p598 * 67.53410339355469);
    v865.closePath();
    f89(v865, p599[3]);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 115.00567626953125, p598 * 59.715911865234375);
    v865.bezierCurveTo(p598 * 119.00567626953125, p598 * 48.715911865234375, p598 * 126.00567626953125, p598 * 41.715911865234375, p598 * 129.00567626953125, p598 * 48.715911865234375);
    v865.bezierCurveTo(p598 * 131.00567626953125, p598 * 56.715911865234375, p598 * 133.00567626953125, p598 * 71.71591186523438, p598 * 127.00567626953125, p598 * 68.71591186523438);
    v865.bezierCurveTo(p598 * 120.00567626953125, p598 * 67.71591186523438, p598 * 114.00567626953125, p598 * 59.715911865234375, p598 * 116.00567626953125, p598 * 58.715911865234375);
    v865.closePath();
    f89(v865, p599[3]);
    f94(v865, p598 * 77, p598 * 107, p598 * 6);
    f89(v865, p599[2]);
    f94(v865, p598 * 110, p598 * 107, p598 * 6);
    f89(v865, p599[2]);
    f94(v865, p598 * 75, p598 * 105, p598 * 3);
    f89(v865, p599[4]);
    f94(v865, p598 * 108, p598 * 105, p598 * 3);
    f89(v865, p599[4]);
    v865.beginPath();
    v865.lineCap = "round";
    v865.lineJoin = "round";
    v865.moveTo(p598 * 88.00567626953125, p598 * 141.4431915283203);
    v865.bezierCurveTo(p598 * 93.00567626953125, p598 * 137.4431915283203, p598 * 96.00567626953125, p598 * 138.4431915283203, p598 * 100.00567626953125, p598 * 141.4431915283203);
    v865.bezierCurveTo(p598 * 103.00567626953125, p598 * 143.4431915283203, p598 * 101.00567626953125, p598 * 149.4431915283203, p598 * 95.00567626953125, p598 * 148.4431915283203);
    v865.bezierCurveTo(p598 * 85.00567626953125, p598 * 148.4431915283203, p598 * 86.00567626953125, p598 * 145.4431915283203, p598 * 88.00567626953125, p598 * 142.4431915283203);
    v865.closePath();
    f89(v865, p599[1]);
    return v864;
  }
  function f109(p600, p601) {
    var v866 = document.createElement("canvas");
    var v867 = v866.getContext("2d");
    v866.width = p600 * 238;
    v866.height = p600 * 230;
    v867.translate(p600 * -93, p600 * -110 + p600 * 5);
    v867.globalAlpha = 0.3;
    f94(v867, p600 * 213.5, p600 * 256.75, p600 * 75);
    f89(v867, p601[5]);
    f94(v867, p600 * 213.5, p600 * 175.75, p600 * 25);
    f89(v867, p601[5]);
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 156.5, p600 * 137.75);
    v867.bezierCurveTo(p600 * 170.5, p600 * 173.75, p600 * 195.5, p600 * 177.75, p600 * 209.5, p600 * 177.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 217.5, p600 * 178.75);
    v867.bezierCurveTo(p600 * 251.5, p600 * 177.75, p600 * 263.5, p600 * 153.75, p600 * 270.5, p600 * 140.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 130.5, p600 * 124.75);
    v867.bezierCurveTo(p600 * 153.5, p600 * 185.75, p600 * 198.5, p600 * 185.75, p600 * 213.5, p600 * 185.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 183.75);
    v867.bezierCurveTo(p600 * 265.5, p600 * 192.75, p600 * 293.5, p600 * 141.75, p600 * 297.5, p600 * 124.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 107.5, p600 * 213.75);
    v867.bezierCurveTo(p600 * 151.5, p600 * 190.75, p600 * 198.5, p600 * 184.75, p600 * 210.5, p600 * 184.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 212.5, p600 * 187.75);
    v867.bezierCurveTo(p600 * 258.5, p600 * 182.75, p600 * 286.5, p600 * 194.75, p600 * 314.5, p600 * 206.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 102.5, p600 * 258.75);
    v867.bezierCurveTo(p600 * 142.5, p600 * 200.75, p600 * 193.5, p600 * 194.75, p600 * 211.5, p600 * 185.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 192.75);
    v867.bezierCurveTo(p600 * 276.5, p600 * 194.75, p600 * 306.5, p600 * 233.75, p600 * 316.5, p600 * 246.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[5];
    v867.stroke();
    v867.translate(0, -5);
    v867.globalAlpha = 1;
    f94(v867, p600 * 213.5, p600 * 256.75, p600 * 75);
    f89(v867, p601[3]);
    f94(v867, p600 * 213.5, p600 * 175.75, p600 * 25);
    f89(v867, p601[3]);
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 219.5, p600 * 158.75);
    v867.bezierCurveTo(p600 * 226.5, p600 * 159.75, p600 * 227.5, p600 * 147.75, p600 * 219.5, p600 * 145.75);
    v867.closePath();
    v867.lineWidth = p600 * 10;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 210.5, p600 * 160.75);
    v867.bezierCurveTo(p600 * 203.5, p600 * 159.75, p600 * 199.5, p600 * 146.75, p600 * 210.5, p600 * 145.75);
    v867.closePath();
    v867.lineWidth = p600 * 10;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 219.5, p600 * 158.75);
    v867.bezierCurveTo(p600 * 226.5, p600 * 159.75, p600 * 227.5, p600 * 147.75, p600 * 219.5, p600 * 145.75);
    v867.closePath();
    v867.fillStyle = p601[0];
    v867.fill();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 210.5, p600 * 160.75);
    v867.bezierCurveTo(p600 * 203.5, p600 * 159.75, p600 * 199.5, p600 * 146.75, p600 * 210.5, p600 * 145.75);
    v867.closePath();
    v867.fillStyle = p601[0];
    v867.fill();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 156.5, p600 * 137.75);
    v867.bezierCurveTo(p600 * 170.5, p600 * 173.75, p600 * 195.5, p600 * 177.75, p600 * 209.5, p600 * 177.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 217.5, p600 * 178.75);
    v867.bezierCurveTo(p600 * 251.5, p600 * 177.75, p600 * 263.5, p600 * 153.75, p600 * 270.5, p600 * 140.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 130.5, p600 * 124.75);
    v867.bezierCurveTo(p600 * 153.5, p600 * 185.75, p600 * 198.5, p600 * 185.75, p600 * 213.5, p600 * 185.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 183.75);
    v867.bezierCurveTo(p600 * 265.5, p600 * 192.75, p600 * 293.5, p600 * 141.75, p600 * 297.5, p600 * 124.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 107.5, p600 * 213.75);
    v867.bezierCurveTo(p600 * 151.5, p600 * 190.75, p600 * 198.5, p600 * 184.75, p600 * 210.5, p600 * 184.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 212.5, p600 * 187.75);
    v867.bezierCurveTo(p600 * 258.5, p600 * 182.75, p600 * 286.5, p600 * 194.75, p600 * 314.5, p600 * 206.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 102.5, p600 * 258.75);
    v867.bezierCurveTo(p600 * 142.5, p600 * 200.75, p600 * 193.5, p600 * 194.75, p600 * 211.5, p600 * 185.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 192.75);
    v867.bezierCurveTo(p600 * 276.5, p600 * 194.75, p600 * 306.5, p600 * 233.75, p600 * 316.5, p600 * 246.75);
    v867.lineWidth = p600 * 17;
    v867.strokeStyle = p601[3];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 156.5, p600 * 137.75);
    v867.bezierCurveTo(p600 * 170.5, p600 * 173.75, p600 * 195.5, p600 * 177.75, p600 * 209.5, p600 * 177.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 217.5, p600 * 178.75);
    v867.bezierCurveTo(p600 * 251.5, p600 * 177.75, p600 * 263.5, p600 * 153.75, p600 * 270.5, p600 * 140.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 130.5, p600 * 124.75);
    v867.bezierCurveTo(p600 * 153.5, p600 * 185.75, p600 * 198.5, p600 * 185.75, p600 * 213.5, p600 * 185.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 183.75);
    v867.bezierCurveTo(p600 * 265.5, p600 * 192.75, p600 * 293.5, p600 * 141.75, p600 * 297.5, p600 * 124.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 107.5, p600 * 213.75);
    v867.bezierCurveTo(p600 * 151.5, p600 * 190.75, p600 * 198.5, p600 * 184.75, p600 * 210.5, p600 * 184.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 212.5, p600 * 187.75);
    v867.bezierCurveTo(p600 * 258.5, p600 * 182.75, p600 * 286.5, p600 * 194.75, p600 * 314.5, p600 * 206.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 102.5, p600 * 258.75);
    v867.bezierCurveTo(p600 * 142.5, p600 * 200.75, p600 * 193.5, p600 * 194.75, p600 * 211.5, p600 * 185.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p600 * 214.5, p600 * 192.75);
    v867.bezierCurveTo(p600 * 276.5, p600 * 194.75, p600 * 306.5, p600 * 233.75, p600 * 316.5, p600 * 246.75);
    v867.lineWidth = p600 * 8;
    v867.strokeStyle = p601[0];
    v867.stroke();
    f94(v867, p600 * 213.5, p600 * 256.75, p600 * 70);
    f89(v867, p601[0]);
    f94(v867, p600 * 213.5, p600 * 175.75, p600 * 20);
    f89(v867, p601[0]);
    f94(v867, p600 * 222, p600 * 166, p600 * 5);
    v867.fillStyle = p601[2];
    v867.fill();
    f94(v867, p600 * 205, p600 * 166, p600 * 5);
    v867.fillStyle = p601[2];
    v867.fill();
    f94(v867, p600 * 206.2, p600 * 167, p600 * 2.5);
    v867.fillStyle = p601[4];
    v867.fill();
    f94(v867, p600 * 223.2, p600 * 167, p600 * 2.5);
    v867.fillStyle = p601[4];
    v867.fill();
    v867.save();
    v867.translate(p600 * 213.5, p600 * 293.75);
    v867.rotate(0.76);
    f90(v867, p600 * -22, p600 * -21, p600 * 44, p600 * 42, p600 * 6);
    v867.restore();
    v867.fillStyle = p601[1];
    v867.fill();
    v867.save();
    v867.translate(p600 * 212.5, p600 * 258.25);
    v867.rotate(0.8);
    f90(v867, p600 * -15, p600 * -14.5, p600 * 30, p600 * 29, p600 * 6);
    v867.restore();
    v867.fillStyle = p601[1];
    v867.fill();
    return v866;
  }
  function f110(p602, p603, p604) {
    var v868 = document.createElement("canvas");
    var v869 = v868.getContext("2d");
    v868.width = p602 * 400;
    v868.height = p602 * 400;
    v869.save();
    v869.translate(p602 * 202.5, p602 * 147.5);
    f90(v869, p602 * -96.5, p602 * -21.5, p602 * 193, p602 * 193, p602 * 0);
    v869.restore();
    f89(v869, p603[0], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 202.5, p602 * 190.5);
    f90(v869, p602 * 96.5, p602 * -21.5, p602 * -193, p602 * 43, p602 * 0);
    v869.restore();
    f89(v869, p603[2], p603[1], p602 * 12);
    v869.save();
    v869.save();
    v869.translate(p602 * 202.5, p602 * 233.5);
    f90(v869, p602 * -96.5, p602 * -20.5, p602 * 193, p602 * 41, p602 * 0);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 202.5, p602 * 275);
    f90(v869, p602 * 96.5, p602 * -21, p602 * -193, p602 * 42, p602 * 0);
    v869.restore();
    f89(v869, p603[0], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 201, p602 * 212);
    v869.rotate(8.64);
    f90(v869, p602 * -116, p602 * -22, p602 * 232, p602 * 44, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 203.5, p602 * 121.5);
    f90(v869, p602 * -115.5, p602 * -20.5, p602 * 231, p602 * 41, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 203.5, p602 * 299);
    f90(v869, p602 * -115.5, p602 * -20, p602 * 231, p602 * 40, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 298.5, p602 * 210);
    f90(v869, p602 * -20.5, p602 * -109, p602 * 41, p602 * 218, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 108.5, p602 * 210);
    f90(v869, p602 * -20.5, p602 * -109, p602 * 41, p602 * 218, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[1], p602 * 12);
    v869.save();
    v869.translate(p602 * 204, p602 * 121.5);
    f90(v869, p602 * -92, p602 * -9.5, p602 * 184, p602 * 19, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[3], p602 * 10);
    v869.save();
    v869.translate(p602 * 197, p602 * 299);
    f90(v869, p602 * 85, p602 * -9, p602 * -170, p602 * 18, p602 * 10);
    v869.restore();
    f89(v869, p603[3], p603[3], p602 * 10);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p602 * 94, p602 * 317);
    v869.bezierCurveTo(p602 * 110.5, p602 * 299.5, p602 * 110.5, p602 * 299.5, p602 * 127, p602 * 282);
    v869.closePath();
    f89(v869, undefined, p603[1], p602 * 12);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p602 * 279, p602 * 142);
    v869.bezierCurveTo(p602 * 296.5, p602 * 125.5, p602 * 296.5, p602 * 125.5, p602 * 314, p602 * 109);
    v869.closePath();
    f89(v869, vVVVVUndefined172, p603[1], p602 * 12);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p602 * 93, p602 * 106);
    v869.bezierCurveTo(p602 * 110.5, p602 * 124, p602 * 110.5, p602 * 124, p602 * 128, p602 * 142);
    v869.closePath();
    f89(v869, undefined, p603[1], p602 * 12);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p602 * 281, p602 * 282);
    v869.bezierCurveTo(p602 * 296, p602 * 297.5, p602 * 296, p602 * 297.5, p602 * 311, p602 * 313);
    v869.closePath();
    f89(v869, vVVVVUndefined172, p603[1], p602 * 12);
    if (p604 == 0) {
      v869.scale(2, 2);
      v869.translate(p602 * -7, p602 * 55);
      v869.rotate(-0.5);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 60, p602 * 47);
      v869.bezierCurveTo(p602 * 81, p602 * 46, p602 * 85, p602 * 47, p602 * 83, p602 * 63);
      v869.bezierCurveTo(p602 * 83, p602 * 72, p602 * 83, p602 * 75, p602 * 72, p602 * 73);
      v869.bezierCurveTo(p602 * 68, p602 * 80, p602 * 69, p602 * 82, p602 * 66, p602 * 73);
      v869.bezierCurveTo(p602 * 62, p602 * 81, p602 * 61, p602 * 82, p602 * 59, p602 * 73);
      v869.bezierCurveTo(p602 * 54, p602 * 81, p602 * 55, p602 * 81, p602 * 52, p602 * 74);
      v869.bezierCurveTo(p602 * 38, p602 * 76, p602 * 41, p602 * 74, p602 * 40, p602 * 66);
      v869.bezierCurveTo(p602 * 38, p602 * 45, p602 * 39, p602 * 49, p602 * 59, p602 * 47);
      v869.closePath();
      f89(v869, p603[4], p603[4], p602 * 5);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 68, p602 * 54);
      v869.bezierCurveTo(p602 * 75, p602 * 54, p602 * 77, p602 * 62, p602 * 71, p602 * 64);
      v869.bezierCurveTo(p602 * 62, p602 * 65, p602 * 63, p602 * 54, p602 * 68, p602 * 54);
      v869.closePath();
      f89(v869, p603[3]);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 50, p602 * 55);
      v869.bezierCurveTo(p602 * 57, p602 * 55, p602 * 58, p602 * 65, p602 * 52, p602 * 65);
      v869.bezierCurveTo(p602 * 44, p602 * 66, p602 * 44, p602 * 54, p602 * 50, p602 * 55);
      v869.closePath();
      f89(v869, p603[3]);
    } else if (p604 == 1) {
      v869.scale(0.6, 0.6);
      v869.translate(p602 * 185, p602 * 165);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 108, p602 * 56);
      v869.bezierCurveTo(p602 * 136, p602 * 58, p602 * 203, p602 * 69, p602 * 234, p602 * 75);
      v869.bezierCurveTo(p602 * 246, p602 * 77, p602 * 247, p602 * 78, p602 * 245, p602 * 90);
      v869.bezierCurveTo(p602 * 238, p602 * 143, p602 * 228, p602 * 197, p602 * 214, p602 * 259);
      v869.bezierCurveTo(p602 * 212, p602 * 267, p602 * 209, p602 * 270, p602 * 189, p602 * 268);
      v869.bezierCurveTo(p602 * 142, p602 * 264, p602 * 106, p602 * 260, p602 * 75, p602 * 253);
      v869.bezierCurveTo(p602 * 60, p602 * 250, p602 * 64, p602 * 250, p602 * 66, p602 * 221);
      v869.bezierCurveTo(p602 * 71, p602 * 168, p602 * 87, p602 * 95, p602 * 98, p602 * 67);
      v869.bezierCurveTo(p602 * 101, p602 * 57, p602 * 103, p602 * 56, p602 * 106, p602 * 56);
      v869.closePath();
      f89(v869, p603[4], p603[4], p602 * 20);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 112, p602 * 72);
      v869.bezierCurveTo(p602 * 132, p602 * 73, p602 * 227, p602 * 85, p602 * 226, p602 * 91);
      v869.bezierCurveTo(p602 * 231, p602 * 89, p602 * 217, p602 * 196, p602 * 200, p602 * 250);
      v869.bezierCurveTo(p602 * 196, p602 * 254, p602 * 175, p602 * 249, p602 * 166, p602 * 249);
      v869.bezierCurveTo(p602 * 91, p602 * 241, p602 * 82, p602 * 236, p602 * 83, p602 * 232);
      v869.bezierCurveTo(p602 * 90, p602 * 144, p602 * 108, p602 * 71, p602 * 111, p602 * 72);
      v869.closePath();
      f89(v869, undefined, p603[0], p602 * 13);
      v869.beginPath();
      v869.lineCap = "round";
      v869.lineJoin = "round";
      v869.moveTo(p602 * 132, p602 * 117);
      v869.bezierCurveTo(p602 * 171, p602 * 86, p602 * 191, p602 * 101, p602 * 188, p602 * 134);
      v869.bezierCurveTo(p602 * 185, p602 * 154, p602 * 170, p602 * 158, p602 * 153, p602 * 158);
      v869.bezierCurveTo(p602 * 143, p602 * 172, p602 * 146, p602 * 180, p602 * 147, p602 * 193);
      f89(v869, undefined, p603[0], p602 * 20);
      f94(v869, p602 * 142, p602 * 221, p602 * 16.1245154965971);
      f89(v869, p603[0]);
    }
    return v868;
  }
  const v870 = 1617797;
  const v871 = 1617797 .Δᐃ;
  const v872 = `const ⲆⲆᐃ = (typeof ΔᐃΔ === "${v871}") ? 1 : 0; return ⲆⲆᐃ;`;
  function f111(p605, p606) {
    var v873 = document.createElement("canvas");
    var v874 = v873.getContext("2d");
    var v875 = p605 * 100;
    var v876 = p605 * 100;
    var v877 = v875 / 2;
    var v878 = v876 / 2;
    v873.width = v875;
    v873.height = v876;
    var v879 = p605 * 5;
    var v880 = p605 * 28;
    var v881 = v879 / 2;
    var v882 = v880 / 2;
    v874.translate(v877, v878);
    for (var v883 = 0; v883 < 4; v883++) {
      f90(v874, -v881, -v882, v879, v880, p605 * 2);
      v874.rotate(Math.PI / 4);
      f89(v874, p606);
    }
    v874.arc(0, 0, p605 * 10, 0, Math.PI * 2);
    f89(v874, p606);
    v874.globalCompositeOperation = "destination-out";
    f94(v874, 0, 0, p605 * 4);
    v874.fill();
    return v873;
  }
  function f112(p607, p608) {
    var v884 = document.createElement("canvas");
    var v885 = v884.getContext("2d");
    v884.width = p607 * 191;
    v884.height = p607 * 153;
    v885.save();
    v885.translate(p607 * 96.49996948242188, p607 * 66.79510498046875);
    f90(v885, p607 * -79.5, p607 * -48.5, p607 * 159, p607 * 97, p607 * 22);
    v885.restore();
    f89(v885, p608[0], p608[0], p607 * 4);
    v885.translate(p607 * 2, 0);
    v885.beginPath();
    v885.lineCap = "round";
    v885.lineJoin = "round";
    v885.moveTo(p607 * 119, p607 * 28);
    v885.bezierCurveTo(p607 * 119, p607 * 22, p607 * 119, p607 * 20, p607 * 122, p607 * 16);
    v885.bezierCurveTo(p607 * 149, p607 * 39, p607 * 149, p607 * 39, p607 * 176, p607 * 63);
    v885.bezierCurveTo(p607 * 176, p607 * 75, p607 * 176, p607 * 75, p607 * 175, p607 * 88);
    v885.bezierCurveTo(p607 * 174, p607 * 90, p607 * 174, p607 * 90, p607 * 172, p607 * 93);
    v885.bezierCurveTo(p607 * 171, p607 * 101, p607 * 169, p607 * 109, p607 * 164, p607 * 113);
    v885.bezierCurveTo(p607 * 163, p607 * 104, p607 * 163, p607 * 104, p607 * 162, p607 * 95);
    v885.bezierCurveTo(p607 * 155, p607 * 105, p607 * 155, p607 * 105, p607 * 147, p607 * 116);
    v885.bezierCurveTo(p607 * 87, p607 * 114, p607 * 87, p607 * 114, p607 * 26, p607 * 112);
    v885.bezierCurveTo(p607 * 27, p607 * 106, p607 * 27, p607 * 106, p607 * 27, p607 * 101);
    v885.bezierCurveTo(p607 * 24, p607 * 104, p607 * 24, p607 * 104, p607 * 20, p607 * 108);
    v885.bezierCurveTo(p607 * 17, p607 * 103, p607 * 20, p607 * 86, p607 * 23, p607 * 72);
    v885.bezierCurveTo(p607 * 15, p607 * 74, p607 * 14, p607 * 78, p607 * 12, p607 * 83);
    v885.bezierCurveTo(p607 * 12, p607 * 65, p607 * 12, p607 * 54, p607 * 16, p607 * 42);
    v885.bezierCurveTo(p607 * 14, p607 * 39, p607 * 14, p607 * 39, p607 * 12, p607 * 36);
    v885.bezierCurveTo(p607 * 16, p607 * 33, p607 * 16, p607 * 33, p607 * 19, p607 * 30);
    v885.bezierCurveTo(p607 * 18, p607 * 27, p607 * 18, p607 * 27, p607 * 17, p607 * 25);
    v885.bezierCurveTo(p607 * 24, p607 * 24, p607 * 31, p607 * 21, p607 * 29, p607 * 19);
    v885.bezierCurveTo(p607 * 37, p607 * 25, p607 * 37, p607 * 25, p607 * 45, p607 * 31);
    v885.bezierCurveTo(p607 * 40, p607 * 23, p607 * 40, p607 * 21, p607 * 42, p607 * 16);
    v885.bezierCurveTo(p607 * 74, p607 * 16, p607 * 74, p607 * 16, p607 * 106, p607 * 16);
    v885.bezierCurveTo(p607 * 113, p607 * 21, p607 * 113, p607 * 21, p607 * 119, p607 * 26);
    v885.closePath();
    f89(v885, p608[0], p608[0], p607 * 4);
    v885.save();
    v885.translate(p607 * 97.49996948242188, p607 * 95.12844848632812);
    f90(v885, p607 * -62.5, p607 * -41.5, p607 * 125, p607 * 83, p607 * 20);
    v885.restore();
    f89(v885, p608[0], p608[0], p607 * 4);
    return v884;
  }
  function f113(p609, p610, p611) {
    var v886 = document.createElement("canvas");
    var v887 = v886.getContext("2d");
    var v888 = p609 * 32;
    var v889 = p609 * 32;
    var v890 = v888 / 2;
    var v891 = v889 / 2;
    v886.width = v888;
    v886.height = v889;
    var v892 = p609 * 5;
    var v893 = p609 * 28;
    var v894 = v892 / 2;
    var v895 = v893 / 2;
    v887.translate(p609 * 0, p609 * 0);
    v887.translate(v890, v891);
    if (p611 == 1) {
      f94(v887, 0, 0, p609 * 10);
      f89(v887, p610[2], p610[2], p609 * 3);
      for (var v896 = 0; v896 < 4; v896++) {
        f90(v887, -v894, -v895, v892, v893, p609 * 2);
        v887.rotate(Math.PI / 4);
        f89(v887, p610[2], p610[2], p609 * 4);
      }
    }
    f94(v887, 0, 0, p609 * 10);
    f89(v887, p610[0], p610[1], p609 * 1.5);
    for (v896 = 0; v896 < 4; v896++) {
      f90(v887, -v894, -v895, v892, v893, p609 * 2);
      v887.rotate(Math.PI / 4);
      f89(v887, p610[0], p610[1], p609 * 1.5);
    }
    f94(v887, 0, 0, p609 * 10);
    f89(v887, p610[0]);
    f94(v887, 0, 0, p609 * 4);
    f89(v887, p610[2], p610[1], p609 * 1.5);
    v887.globalCompositeOperation = "destination-out";
    f94(v887, 0, 0, p609 * 4);
    f89(v887, p610[0], p610[1], p609 * 2);
    v887.globalCompositeOperation = "source-over";
    f94(v887, 0, 0, p609 * 4);
    f89(v887, undefined, p610[1], p609 * 2);
    return v886;
  }
  function f114(p612, p613) {
    var v897 = document.createElement("canvas");
    var v898 = v897.getContext("2d");
    var v899 = p612 * 85;
    var v900 = p612 * 115;
    var v901 = p612 * 6;
    v897.width = v899;
    v897.height = v900;
    v898.translate(p612 * -130, p612 * -60 + v901);
    v898.globalAlpha = 0.5;
    v898.beginPath();
    v898.bezierCurveTo(p612 * 190, p612 * 87, p612 * 201, p612 * 59, p612 * 208, p612 * 64);
    v898.bezierCurveTo(p612 * 213, p612 * 68, p612 * 204, p612 * 93, p612 * 195, p612 * 109);
    v898.bezierCurveTo(p612 * 195, p612 * 109, p612 * 202, p612 * 124, p612 * 191, p612 * 141);
    v898.bezierCurveTo(p612 * 182, p612 * 151, p612 * 164, p612 * 155, p612 * 148, p612 * 144);
    v898.bezierCurveTo(p612 * 136, p612 * 135, p612 * 138, p612 * 111, p612 * 145, p612 * 104);
    v898.bezierCurveTo(p612 * 140, p612 * 92, p612 * 131, p612 * 67, p612 * 138, p612 * 63);
    v898.bezierCurveTo(p612 * 145, p612 * 61, p612 * 153, p612 * 82, p612 * 155, p612 * 96);
    v898.bezierCurveTo(p612 * 167, p612 * 91, p612 * 178, p612 * 92, p612 * 187, p612 * 98);
    v898.closePath();
    f89(v898, p613[0]);
    v898.translate(0, -v901);
    v898.globalAlpha = 1;
    v898.beginPath();
    v898.bezierCurveTo(p612 * 190, p612 * 87, p612 * 201, p612 * 59, p612 * 208, p612 * 64);
    v898.bezierCurveTo(p612 * 213, p612 * 68, p612 * 204, p612 * 93, p612 * 195, p612 * 109);
    v898.bezierCurveTo(p612 * 195, p612 * 109, p612 * 202, p612 * 124, p612 * 191, p612 * 141);
    v898.bezierCurveTo(p612 * 182, p612 * 151, p612 * 164, p612 * 155, p612 * 148, p612 * 144);
    v898.bezierCurveTo(p612 * 136, p612 * 135, p612 * 138, p612 * 111, p612 * 145, p612 * 104);
    v898.bezierCurveTo(p612 * 140, p612 * 92, p612 * 131, p612 * 67, p612 * 138, p612 * 63);
    v898.bezierCurveTo(p612 * 145, p612 * 61, p612 * 153, p612 * 82, p612 * 155, p612 * 96);
    v898.bezierCurveTo(p612 * 167, p612 * 91, p612 * 178, p612 * 92, p612 * 187, p612 * 98);
    v898.closePath();
    f89(v898, p613[1], p613[2], 4);
    var v902 = p612 * 155;
    var v903 = p612 * 133;
    var v904 = p612 * 10;
    var v905 = p612 * 3;
    var v906 = v902 + p612 * -3;
    var v907 = v903 + p612 * -5;
    v898.save();
    v898.translate(v902, v903);
    v898.globalAlpha = 1;
    f94(v898, 0, 0, v904);
    f89(v898, p613[3]);
    v898.restore();
    v898.save();
    v898.translate(v906, v907);
    v898.globalAlpha = 1;
    f94(v898, 0, 0, v905);
    f89(v898, p613[4]);
    v898.restore();
    v898.save();
    v898.translate(v902 + p612 * 27, v903);
    v898.globalAlpha = 1;
    f94(v898, 0, 0, v904);
    f89(v898, p613[3]);
    v898.restore();
    v898.save();
    v898.translate(p612 * 27 + v906, v907);
    v898.globalAlpha = 1;
    f94(v898, 0, 0, v905);
    f89(v898, p613[4]);
    return v897;
  }
  function f115(p614) {
    var v908 = document.createElement("canvas");
    var v909 = v908.getContext("2d");
    var v910 = p614 * 200;
    var v911 = p614 * 200;
    v908.width = v910;
    v908.height = v911;
    var vCu = f163(0.35, false, ["#0e3022", "#0b8052", "#077b49"]);
    v909.drawImage(vCu, 10, 10);
    vCu = f201(0.9, false, ["#3d2a6e", "#8255b5"]);
    v909.drawImage(vCu, 21, 20);
    vCu = f201(0.9, false, ["#3d2a6e", "#8255b5"]);
    v909.drawImage(vCu, 38, 28);
    vCu = f201(0.9, vVV164, ["#3d2a6e", "#8255b5"]);
    v909.drawImage(vCu, 15, 37);
    vCu = f201(0.9, false, ["#3d2a6e", "#8255b5"]);
    v909.drawImage(vCu, 32, 45);
    return v908;
  }
  ;
  function f116(p615, p616, p617) {
    var v912 = document.createElement("canvas");
    var v913 = v912.getContext("2d");
    v912.width = p615 * 191;
    v912.height = p615 * 153;
    v913.globalAlpha = 0.5;
    v913.translate(0, p615 * 10);
    v913.save();
    v913.translate(p615 * 96.49996948242188, p615 * 66.79510498046875);
    v913.rotate(0);
    f90(v913, p615 * -79.5, p615 * -48.5, p615 * 159, p615 * 97, p615 * 22);
    v913.restore();
    f89(v913, p617[0], p617[0], p615 * 4);
    v913.globalAlpha = 1;
    v913.translate(0, p615 * -10);
    v913.save();
    v913.translate(p615 * 96.49996948242188, p615 * 66.79510498046875);
    v913.rotate(0);
    f90(v913, p615 * -79.5, p615 * -48.5, p615 * 159, p615 * 97, p615 * 22);
    v913.restore();
    f89(v913, p617[1], p617[2], p615 * 4);
    v913.translate(p615 * 2, 0);
    v913.beginPath();
    v913.lineCap = "round";
    v913.lineJoin = "round";
    v913.moveTo(p615 * 119, p615 * 28);
    v913.bezierCurveTo(p615 * 119, p615 * 22, p615 * 119, p615 * 20, p615 * 122, p615 * 16);
    v913.bezierCurveTo(p615 * 149, p615 * 39, p615 * 149, p615 * 39, p615 * 176, p615 * 63);
    v913.bezierCurveTo(p615 * 176, p615 * 75, p615 * 176, p615 * 75, p615 * 175, p615 * 88);
    v913.bezierCurveTo(p615 * 174, p615 * 90, p615 * 174, p615 * 90, p615 * 172, p615 * 93);
    v913.bezierCurveTo(p615 * 171, p615 * 101, p615 * 169, p615 * 109, p615 * 164, p615 * 113);
    v913.bezierCurveTo(p615 * 163, p615 * 104, p615 * 163, p615 * 104, p615 * 162, p615 * 95);
    v913.bezierCurveTo(p615 * 155, p615 * 105, p615 * 155, p615 * 105, p615 * 147, p615 * 116);
    v913.bezierCurveTo(p615 * 87, p615 * 114, p615 * 87, p615 * 114, p615 * 26, p615 * 112);
    v913.bezierCurveTo(p615 * 27, p615 * 106, p615 * 27, p615 * 106, p615 * 27, p615 * 101);
    v913.bezierCurveTo(p615 * 24, p615 * 104, p615 * 24, p615 * 104, p615 * 20, p615 * 108);
    v913.bezierCurveTo(p615 * 17, p615 * 103, p615 * 20, p615 * 86, p615 * 23, p615 * 72);
    v913.bezierCurveTo(p615 * 15, p615 * 74, p615 * 14, p615 * 78, p615 * 12, p615 * 83);
    v913.bezierCurveTo(p615 * 12, p615 * 65, p615 * 12, p615 * 54, p615 * 16, p615 * 42);
    v913.bezierCurveTo(p615 * 14, p615 * 39, p615 * 14, p615 * 39, p615 * 12, p615 * 36);
    v913.bezierCurveTo(p615 * 16, p615 * 33, p615 * 16, p615 * 33, p615 * 19, p615 * 30);
    v913.bezierCurveTo(p615 * 18, p615 * 27, p615 * 18, p615 * 27, p615 * 17, p615 * 25);
    v913.bezierCurveTo(p615 * 24, p615 * 24, p615 * 31, p615 * 21, p615 * 29, p615 * 19);
    v913.bezierCurveTo(p615 * 37, p615 * 25, p615 * 37, p615 * 25, p615 * 45, p615 * 31);
    v913.bezierCurveTo(p615 * 40, p615 * 23, p615 * 40, p615 * 21, p615 * 42, p615 * 16);
    v913.bezierCurveTo(p615 * 74, p615 * 16, p615 * 74, p615 * 16, p615 * 106, p615 * 16);
    v913.bezierCurveTo(p615 * 113, p615 * 21, p615 * 113, p615 * 21, p615 * 119, p615 * 26);
    v913.closePath();
    f89(v913, p617[3], p617[4], p615 * 4);
    return v912;
  }
  function f117(p618, p619, p620) {
    var v914 = document.createElement("canvas");
    var v915 = v914.getContext("2d");
    var v916 = p618 * 55;
    var v917 = p618 * 55;
    var v918 = p618 * 8;
    v914.width = v916;
    v914.height = v917;
    v915.translate(p618 * -65, p618 * -55 + v918);
    v915.globalAlpha = 1;
    v915.beginPath();
    v915.moveTo(p618 * 95, p618 * 60);
    v915.bezierCurveTo(p618 * 107, p618 * 62, p618 * 110, p618 * 73, p618 * 107, p618 * 79);
    v915.bezierCurveTo(p618 * 104, p618 * 85, p618 * 85, p618 * 93, p618 * 81, p618 * 88);
    v915.bezierCurveTo(p618 * 74, p618 * 80, p618 * 85, p618 * 60, p618 * 95, p618 * 60);
    v915.closePath();
    f89(v915, p620[0], p620[1], 3);
    v915.globalAlpha = 1;
    v915.beginPath();
    v915.moveTo(p618 * 91, p618 * 70);
    v915.bezierCurveTo(p618 * 91, p618 * 75, p618 * 100, p618 * 76, p618 * 100, p618 * 73);
    v915.bezierCurveTo(p618 * 100, p618 * 69, p618 * 89, p618 * 65, p618 * 91, p618 * 70);
    v915.closePath();
    f89(v915, p620[2], p620[3], 3);
    return v914;
  }
  const v919 = 0;
  function f118(p621, p622, p623) {
    var v920 = document.createElement("canvas");
    var v921 = v920.getContext("2d");
    v920.width = p621 * 400;
    v920.height = p621 * 400;
    v921.save();
    v921.translate(p621 * 85, p621 * 237);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 54.585977194239184, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 178, p621 * 238);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 52.53573932334064, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 270, p621 * 239);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 53.58058329516393, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 222, p621 * 312);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 52.53573932334064, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 317, p621 * 159);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 57.63465889766331, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 223.5, p621 * 139.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 51.66236541235796, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 132.5, p621 * 137.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 52.009614495783374, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 178.5, p621 * 58.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 53.16013544000805, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 177.5, p621 * 216.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 50, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 84.5, p621 * 215.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 54, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 319.5, p621 * 138.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 55.08175741568164, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 269.5, p621 * 216.0625);
    v921.rotate(1.5707963267948966);
    f92(v921, 6, p621 * 54.589376255824725, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 221.5, p621 * 293.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 49.49747468305833, p621 * 1);
    v921.restore();
    f89(v921, p623[1], p623[2], p621 * 12);
    v921.beginPath();
    v921.lineCap = "round";
    v921.lineJoin = "round";
    v921.moveTo(p621 * 221.5, p621 * 342.0625);
    v921.bezierCurveTo(p621 * 221.5, p621 * 350.5625, p621 * 221.5, p621 * 350.5625, p621 * 221.5, p621 * 359.0625);
    v921.closePath();
    f89(v921, vVUndefined15, p623[2], p621 * 12);
    v921.beginPath();
    v921.lineCap = "round";
    v921.lineJoin = "round";
    v921.moveTo(p621 * 84.5, p621 * 270.0625);
    v921.bezierCurveTo(p621 * 84.5, p621 * 277.0625, p621 * 84.5, p621 * 277.0625, p621 * 84.5, p621 * 284.0625);
    v921.closePath();
    f89(v921, undefined, p623[2], p621 * 12);
    v921.save();
    v921.translate(p621 * 84.5, p621 * 215.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 177.5, p621 * 215.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 222.5, p621 * 294.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 270.5, p621 * 216.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 320.5, p621 * 134.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 224.5, p621 * 138.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 133.5, p621 * 137.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    v921.save();
    v921.translate(p621 * 178.5, p621 * 56.0625);
    v921.rotate(0.5235987755982988);
    f92(v921, 6, p621 * 30, p621 * 15);
    v921.restore();
    f89(v921, p623[3]);
    return v920;
  }
  function f119(p624, p625, p626) {
    var v922 = document.createElement("canvas");
    var v923 = v922.getContext("2d");
    v922.width = p624 * 170;
    v922.height = p624 * 173;
    v923.globalAlpha = p625 ? 0.5 : 1;
    v923.translate(p624 * 5, p624 * 5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 85.25, p624 * 82.953125);
    v923.bezierCurveTo(p624 * 98.25, p624 * 46.453125, p624 * 98.25, p624 * 46.453125, p624 * 111.25, p624 * 9.953125);
    v923.closePath();
    f89(v923, undefined, p626[0], p624 * 4);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 111.25, p624 * 8.953125);
    v923.bezierCurveTo(p624 * 117.75, p624 * 12.453125, p624 * 117.75, p624 * 12.453125, p624 * 124.25, p624 * 15.953125);
    v923.bezierCurveTo(p624 * 113.75, p624 * 39.953125, p624 * 113.75, p624 * 39.953125, p624 * 103.25, p624 * 63.953125);
    v923.bezierCurveTo(p624 * 97.75, p624 * 64.953125, p624 * 97.75, p624 * 64.953125, p624 * 92.25, p624 * 65.953125);
    v923.closePath();
    f89(v923, p626[0]);
    v923.globalAlpha = 1;
    v923.translate(p624 * -5, p624 * -5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 111.25, p624 * 8.953125);
    v923.bezierCurveTo(p624 * 117.75, p624 * 12.453125, p624 * 117.75, p624 * 12.453125, p624 * 124.25, p624 * 15.953125);
    v923.bezierCurveTo(p624 * 113.75, p624 * 39.953125, p624 * 113.75, p624 * 39.953125, p624 * 103.25, p624 * 63.953125);
    v923.bezierCurveTo(p624 * 97.75, p624 * 64.953125, p624 * 97.75, p624 * 64.953125, p624 * 92.25, p624 * 65.953125);
    v923.closePath();
    f89(v923, p626[7]);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 85.25, p624 * 82.953125);
    v923.bezierCurveTo(p624 * 98.25, p624 * 46.453125, p624 * 98.25, p624 * 46.453125, p624 * 111.25, p624 * 9.953125);
    v923.closePath();
    f89(v923, vUndefined, p626[6], p624 * 4);
    v923.globalAlpha = p625 ? 0.5 : 1;
    v923.translate(p624 * 5, p624 * 5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 87.25, p624 * 84.953125);
    v923.bezierCurveTo(p624 * 123.75, p624 * 100.453125, p624 * 123.75, p624 * 100.453125, p624 * 160.25, p624 * 115.953125);
    v923.closePath();
    f89(v923, undefined, p626[0], p624 * 4);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 160.25, p624 * 114.953125);
    v923.bezierCurveTo(p624 * 156.25, p624 * 122.453125, p624 * 156.25, p624 * 122.453125, p624 * 152.25, p624 * 129.953125);
    v923.bezierCurveTo(p624 * 130.25, p624 * 117.953125, p624 * 130.25, p624 * 117.953125, p624 * 108.25, p624 * 105.953125);
    v923.bezierCurveTo(p624 * 107.25, p624 * 98.953125, p624 * 107.25, p624 * 98.953125, p624 * 106.25, p624 * 91.953125);
    v923.closePath();
    f89(v923, p626[0]);
    v923.globalAlpha = 1;
    v923.translate(p624 * -5, p624 * -5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 160.25, p624 * 114.953125);
    v923.bezierCurveTo(p624 * 156.25, p624 * 122.453125, p624 * 156.25, p624 * 122.453125, p624 * 152.25, p624 * 129.953125);
    v923.bezierCurveTo(p624 * 130.25, p624 * 117.953125, p624 * 130.25, p624 * 117.953125, p624 * 108.25, p624 * 105.953125);
    v923.bezierCurveTo(p624 * 107.25, p624 * 98.953125, p624 * 107.25, p624 * 98.953125, p624 * 106.25, p624 * 91.953125);
    v923.closePath();
    f89(v923, p626[7]);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 87.25, p624 * 84.953125);
    v923.bezierCurveTo(p624 * 123.75, p624 * 100.453125, p624 * 123.75, p624 * 100.453125, p624 * 160.25, p624 * 115.953125);
    v923.closePath();
    f89(v923, vVVVVVUndefined173, p626[6], p624 * 4);
    v923.globalAlpha = p625 ? 0.5 : 1;
    v923.translate(p624 * 5, p624 * 5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 83.25, p624 * 83.953125);
    v923.bezierCurveTo(p624 * 47.75, p624 * 68.453125, p624 * 47.75, p624 * 68.453125, p624 * 12.25, p624 * 52.953125);
    v923.closePath();
    f89(v923, undefined, p626[0], p624 * 4);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 13.25, p624 * 53.953125);
    v923.bezierCurveTo(p624 * 17.25, p624 * 46.953125, p624 * 17.25, p624 * 46.953125, p624 * 21.25, p624 * 39.953125);
    v923.bezierCurveTo(p624 * 42.75, p624 * 52.453125, p624 * 42.75, p624 * 52.453125, p624 * 64.25, p624 * 64.953125);
    v923.bezierCurveTo(p624 * 64.25, p624 * 70.953125, p624 * 64.25, p624 * 70.953125, p624 * 64.25, p624 * 76.953125);
    v923.closePath();
    f89(v923, p626[0]);
    v923.globalAlpha = 1;
    v923.translate(p624 * -5, p624 * -5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 13.25, p624 * 53.953125);
    v923.bezierCurveTo(p624 * 17.25, p624 * 46.953125, p624 * 17.25, p624 * 46.953125, p624 * 21.25, p624 * 39.953125);
    v923.bezierCurveTo(p624 * 42.75, p624 * 52.453125, p624 * 42.75, p624 * 52.453125, p624 * 64.25, p624 * 64.953125);
    v923.bezierCurveTo(p624 * 64.25, p624 * 70.953125, p624 * 64.25, p624 * 70.953125, p624 * 64.25, p624 * 76.953125);
    v923.closePath();
    f89(v923, p626[7]);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 83.25, p624 * 83.953125);
    v923.bezierCurveTo(p624 * 47.75, p624 * 68.453125, p624 * 47.75, p624 * 68.453125, p624 * 12.25, p624 * 52.953125);
    v923.closePath();
    f89(v923, undefined, p626[6], p624 * 4);
    v923.globalAlpha = p625 ? 0.5 : 1;
    v923.translate(p624 * 5, p624 * 5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 84.25, p624 * 86.953125);
    v923.bezierCurveTo(p624 * 70.25, p624 * 123.953125, p624 * 70.25, p624 * 123.953125, p624 * 56.25, p624 * 160.953125);
    v923.closePath();
    f89(v923, vVVVUndefined1422, p626[0], p624 * 4);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 56.25, p624 * 159.953125);
    v923.bezierCurveTo(p624 * 49.25, p624 * 155.453125, p624 * 49.25, p624 * 155.453125, p624 * 42.25, p624 * 150.953125);
    v923.bezierCurveTo(p624 * 54.25, p624 * 127.953125, p624 * 54.25, p624 * 127.953125, p624 * 66.25, p624 * 104.953125);
    v923.bezierCurveTo(p624 * 71.25, p624 * 104.953125, p624 * 71.25, p624 * 104.953125, p624 * 76.25, p624 * 104.953125);
    v923.closePath();
    f89(v923, p626[0]);
    v923.globalAlpha = 1;
    v923.translate(p624 * -5, p624 * -5);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 56.25, p624 * 159.953125);
    v923.bezierCurveTo(p624 * 49.25, p624 * 155.453125, p624 * 49.25, p624 * 155.453125, p624 * 42.25, p624 * 150.953125);
    v923.bezierCurveTo(p624 * 54.25, p624 * 127.953125, p624 * 54.25, p624 * 127.953125, p624 * 66.25, p624 * 104.953125);
    v923.bezierCurveTo(p624 * 71.25, p624 * 104.953125, p624 * 71.25, p624 * 104.953125, p624 * 76.25, p624 * 104.953125);
    v923.closePath();
    f89(v923, p626[7]);
    v923.beginPath();
    v923.lineCap = "round";
    v923.lineJoin = "round";
    v923.moveTo(p624 * 84.25, p624 * 86.953125);
    v923.bezierCurveTo(p624 * 70.25, p624 * 123.953125, p624 * 70.25, p624 * 123.953125, p624 * 56.25, p624 * 160.953125);
    v923.closePath();
    f89(v923, vVUndefined15, p626[6], p624 * 4);
    return v922;
  }
  function f120(p627, p628, p629) {
    var v924 = document.createElement("canvas");
    var v925 = v924.getContext("2d");
    var v926 = p627 * 193;
    var v927 = p627 * 198;
    var v928 = p627 * 140;
    var v929 = p627 * 90;
    v924.width = v926;
    v924.height = v927;
    var v930 = p627 * 10;
    var v931 = p627 * 25;
    var v932 = p627 * 180;
    var v933 = v931 / 2;
    var v934 = v932 / 2;
    var v935 = p627 * 4;
    v925.translate(p627 * -25, p627 * 1);
    v925.translate(v928, v929);
    v925.rotate(-Math.PI / 5);
    f90(v925, -v933, -v934, v931, v932, v930);
    f89(v925, p629[0], p629[1], v935);
    v925.translate(p627 * -30, p627 * -25);
    v925.rotate(Math.PI / 3);
    f90(v925, -v933, -v934, v931, v932, v930);
    f89(v925, p629[0], p629[1], v935);
    v925.translate(p627 * 35, p627 * 30);
    v925.rotate(Math.PI / 3);
    f90(v925, -v933, -v934, v931, v932, v930);
    f89(v925, p629[0], p629[1], v935);
    return v924;
  }
  function f121(p630, p631, p632) {
    var v936 = document.createElement("canvas");
    var v937 = v936.getContext("2d");
    v936.width = p630 * 170;
    v936.height = p630 * 173;
    v937.translate(p630 * 5, p630 * 5);
    v937.globalAlpha = p631 ? 0.5 : 1;
    v937.save();
    v937.translate(p630 * 86.25, p630 * 84.953125);
    v937.rotate(0.32);
    f92(v937, 7, p630 * 42.15447781671598, p630 * 10);
    v937.restore();
    f89(v937, p632[0]);
    v937.globalAlpha = 1;
    v937.translate(p630 * -5, p630 * -5);
    v937.save();
    v937.translate(p630 * 86.25, p630 * 84.953125);
    v937.rotate(0.32);
    f92(v937, 7, p630 * 42.15447781671598, p630 * 10);
    v937.restore();
    f89(v937, p632[1], p632[2], p630 * 4);
    v937.globalAlpha = p631 ? 0.5 : 1;
    v937.translate(p630 * 5, p630 * 5);
    v937.save();
    v937.translate(p630 * 86.25, p630 * 84.953125);
    v937.rotate(0.28);
    f92(v937, 7, p630 * 30.463092423455635, p630 * 10);
    v937.restore();
    f89(v937, p632[0]);
    v937.globalAlpha = 1;
    v937.translate(p630 * -5, p630 * -5);
    v937.save();
    v937.translate(p630 * 86.25, p630 * 84.953125);
    v937.rotate(0.28);
    f92(v937, 7, p630 * 30.463092423455635, p630 * 10);
    v937.restore();
    f89(v937, p632[3], p632[4], p630 * 4);
    v937.globalAlpha = p631 ? 0.5 : 1;
    v937.translate(p630 * 5, p630 * 5);
    f94(v937, p630 * 86.25, p630 * 84.953125, p630 * 18.867962264113206);
    f89(v937, p632[0]);
    v937.globalAlpha = 1;
    v937.translate(p630 * -5, p630 * -5);
    f94(v937, p630 * 86.25, p630 * 84.953125, p630 * 18.867962264113206);
    f89(v937, p632[5], p632[6], p630 * 4);
    return v936;
  }
  function f122(p633, p634, p635) {
    var v938 = document.createElement("canvas");
    var v939 = v938.getContext("2d");
    v938.width = p633 * 400;
    v938.height = p633 * 400;
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 101, p633 * 255);
    v939.bezierCurveTo(p633 * 113, p633 * 243, p633 * 179, p633 * 210, p633 * 219, p633 * 196);
    v939.bezierCurveTo(p633 * 252, p633 * 203, p633 * 288, p633 * 215, p633 * 318, p633 * 233);
    v939.bezierCurveTo(p633 * 304, p633 * 254, p633 * 258, p633 * 273, p633 * 215, p633 * 296);
    v939.bezierCurveTo(p633 * 161, p633 * 287, p633 * 119, p633 * 270, p633 * 102, p633 * 257);
    v939.closePath();
    f89(v939, p635[0], p635[1], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 99, p633 * 258);
    v939.bezierCurveTo(p633 * 99, p633 * 272.5, p633 * 99, p633 * 272.5, p633 * 99, p633 * 287);
    v939.bezierCurveTo(p633 * 166, p633 * 319, p633 * 193, p633 * 320, p633 * 212, p633 * 324);
    v939.bezierCurveTo(p633 * 292, p633 * 286, p633 * 312, p633 * 271, p633 * 319, p633 * 263);
    v939.bezierCurveTo(p633 * 320, p633 * 249, p633 * 320, p633 * 241, p633 * 318, p633 * 234);
    v939.bezierCurveTo(p633 * 300, p633 * 254, p633 * 254, p633 * 277, p633 * 216, p633 * 294);
    v939.bezierCurveTo(p633 * 190, p633 * 296, p633 * 135, p633 * 276, p633 * 102, p633 * 258);
    v939.closePath();
    f89(v939, p635[2], p635[1], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 212, p633 * 323);
    v939.bezierCurveTo(p633 * 211.5, p633 * 310.5, p633 * 211.5, p633 * 310.5, p633 * 211, p633 * 298);
    v939.closePath();
    f89(v939, undefined, p635[1], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 212, p633 * 210);
    v939.bezierCurveTo(p633 * 286, p633 * 210, p633 * 331, p633 * 254, p633 * 212, p633 * 276);
    v939.bezierCurveTo(p633 * 108, p633 * 276, p633 * 112, p633 * 222, p633 * 213, p633 * 208);
    v939.closePath();
    f89(v939, p635[3], p635[4], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 98, p633 * 200);
    v939.bezierCurveTo(p633 * 126, p633 * 216, p633 * 177, p633 * 232, p633 * 213, p633 * 237);
    v939.bezierCurveTo(p633 * 266, p633 * 218, p633 * 288, p633 * 209, p633 * 318, p633 * 190);
    v939.bezierCurveTo(p633 * 269, p633 * 164, p633 * 239, p633 * 158, p633 * 214, p633 * 153);
    v939.bezierCurveTo(p633 * 148, p633 * 172, p633 * 131, p633 * 182, p633 * 98, p633 * 200);
    v939.closePath();
    f89(v939, p635[0], p635[1], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 97, p633 * 204);
    v939.bezierCurveTo(p633 * 97, p633 * 215.5, p633 * 97, p633 * 215.5, p633 * 97, p633 * 227);
    v939.bezierCurveTo(p633 * 148, p633 * 250, p633 * 179, p633 * 256, p633 * 212, p633 * 262);
    v939.bezierCurveTo(p633 * 268, p633 * 244, p633 * 281, p633 * 233, p633 * 318, p633 * 214);
    v939.bezierCurveTo(p633 * 318, p633 * 203, p633 * 318, p633 * 203, p633 * 318, p633 * 192);
    v939.bezierCurveTo(p633 * 250, p633 * 225, p633 * 236, p633 * 231, p633 * 214, p633 * 239);
    v939.bezierCurveTo(p633 * 158, p633 * 228, p633 * 126, p633 * 215, p633 * 99, p633 * 201);
    v939.closePath();
    f89(v939, p635[2], p635[1], p633 * 14);
    v939.beginPath();
    v939.lineCap = "round";
    v939.lineJoin = "round";
    v939.moveTo(p633 * 212, p633 * 260);
    v939.bezierCurveTo(p633 * 212, p633 * 251.5, p633 * 212, p633 * 251.5, p633 * 212, p633 * 243);
    v939.closePath();
    f89(v939, vVVVUndefined1422, p635[1], p633 * 14);
    f94(v939, p633 * 161, p633 * 201, p633 * 13);
    f89(v939, p635[5]);
    f94(v939, p633 * 216, p633 * 205, p633 * 8.06225774829855);
    f89(v939, p635[5]);
    f94(v939, p633 * 216, p633 * 175, p633 * 6.708203932499369);
    f89(v939, p635[5]);
    f94(v939, p633 * 271, p633 * 191, p633 * 5.0990195135927845);
    f89(v939, p635[5]);
    f94(v939, p633 * 206, p633 * 180, p633 * 11.180339887498949);
    f89(v939, p635[5]);
    return v938;
  }
  function f123(p636, p637, p638, p639, p640) {
    var v940 = document.createElement("canvas");
    var v941 = v940.getContext("2d");
    var v942 = p636 * 70;
    var v943 = p636 * 70;
    var v944 = p636 * 10;
    var v945 = p636 * 5;
    v940.width = v942;
    v940.height = v943 + v945;
    for (var v946 = 0; p637.length > v946; v946++) {
      var v947 = p637[v946];
      v941.globalAlpha = v947.a;
      var v948 = v947.f(p638, vV163, v947.c);
      v941.save();
      v941.translate(v942 / 2 + v947.x * p636, v943 / 2 + v947.y * p636);
      v941.rotate(v947.r);
      v941.drawImage(v948, -v948.width / 2, -v948.height / 2);
      v941.restore();
    }
    var v949 = [];
    for (v946 = 0; p639.length > v946; v946++) {
      var v950 = document.createElement("canvas");
      var v951 = v950.getContext("2d");
      v950.width = v942;
      v950.height = v943 + v945;
      v951.globalAlpha = p640 / 2;
      if (v946 == 2) {
        f90(v951, 0, v945, v942, v943, v944);
      } else {
        f90(v951, 0, 0, v942, v943 + v945, v944);
      }
      f89(v951, "#081a19");
      v951.globalAlpha = p640;
      if (v946 == 2) {
        f90(v951, 0, v945, v942, v943, v944);
      } else {
        f90(v951, 0, 0, v942, v943, v944);
      }
      f89(v951, p639[v946]);
      v951.globalAlpha = 1;
      if (v946 == 2) {
        v951.drawImage(v940, 0, v945);
      } else {
        v951.drawImage(v940, 0, 0);
      }
      v949.push(f50(v950));
    }
    return v949;
  }
  function f124(p641, p642, p643) {
    var v952 = document.createElement("canvas");
    var v953 = v952.getContext("2d");
    var v954 = p641 * 145;
    var v955 = p641 * 145;
    var v956 = v954 / 2;
    var v957 = v955 / 2;
    v952.width = v954;
    v952.height = v955;
    var v958 = p641 * 70;
    v953.translate(v956, v957);
    v953.globalAlpha = 0.4;
    f94(v953, 0, 0, v958);
    f89(v953, p643[0]);
    v958 = p641 * 50;
    v953.translate(0, 0);
    v953.globalAlpha = 0.8;
    f94(v953, 0, 0, v958);
    f89(v953, p643[0]);
    v958 = p641 * 35;
    v953.translate(0, 0);
    v953.globalAlpha = 0.8;
    f94(v953, 0, 0, v958);
    f89(v953, p643[1]);
    v958 = p641 * 20;
    v953.translate(0, 0);
    v953.globalAlpha = 0.8;
    f94(v953, 0, 0, v958);
    f89(v953, p643[2]);
    return v952;
  }
  function f125(p644, p645, p646) {
    var v959 = document.createElement("canvas");
    var v960 = v959.getContext("2d");
    v959.width = p644 * 52;
    v959.height = p644 * 65;
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 9.833328247070312, p644 * 12.078125);
    v960.bezierCurveTo(p644 * 15.333328247070312, p644 * 28.078125, p644 * 15.333328247070312, p644 * 28.078125, p644 * 20.833328247070312, p644 * 44.078125);
    v960.closePath();
    f89(v960, vVVUndefined152, p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 7.8333282470703125, p644 * 20.078125);
    v960.bezierCurveTo(p644 * 16.833328247070312, p644 * 32.578125, p644 * 16.833328247070312, p644 * 32.578125, p644 * 25.833328247070312, p644 * 45.078125);
    v960.closePath();
    f89(v960, undefined, p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 23.833328247070312, p644 * 26.078125);
    v960.bezierCurveTo(p644 * 25.833328247070312, p644 * 11.078125, p644 * 16.833328247070312, p644 * 8.078125, p644 * 14.833328247070312, p644 * 7.078125);
    v960.bezierCurveTo(p644 * 11.833328247070312, p644 * 17.078125, p644 * 13.833328247070312, p644 * 22.078125, p644 * 23.833328247070312, p644 * 27.078125);
    v960.closePath();
    f89(v960, p646[0], p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 35.83332824707031, p644 * 8.078125);
    v960.bezierCurveTo(p644 * 34.83332824707031, p644 * 27.078125, p644 * 28.833328247070312, p644 * 27.078125, p644 * 23.833328247070312, p644 * 28.078125);
    v960.bezierCurveTo(p644 * 21.833328247070312, p644 * 14.078125, p644 * 26.833328247070312, p644 * 11.078125, p644 * 35.83332824707031, p644 * 8.078125);
    v960.closePath();
    f89(v960, p646[0], p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 25.833328247070312, p644 * 39.078125);
    v960.bezierCurveTo(p644 * 20.833328247070312, p644 * 29.078125, p644 * 14.833328247070312, p644 * 27.078125, p644 * 5.8333282470703125, p644 * 29.078125);
    v960.bezierCurveTo(p644 * 9.833328247070312, p644 * 39.078125, p644 * 16.833328247070312, p644 * 42.078125, p644 * 25.833328247070312, p644 * 40.078125);
    v960.closePath();
    f89(v960, p646[0], p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 42.83332824707031, p644 * 23.078125);
    v960.bezierCurveTo(p644 * 35.83332824707031, p644 * 35.078125, p644 * 31.833328247070312, p644 * 37.078125, p644 * 25.833328247070312, p644 * 36.078125);
    v960.bezierCurveTo(p644 * 25.833328247070312, p644 * 24.078125, p644 * 33.83332824707031, p644 * 21.078125, p644 * 42.83332824707031, p644 * 23.078125);
    v960.closePath();
    f89(v960, p646[0], p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 23.833328247070312, p644 * 24.078125);
    v960.bezierCurveTo(p644 * 20.833328247070312, p644 * 34.078125, p644 * 23.833328247070312, p644 * 40.078125, p644 * 27.833328247070312, p644 * 43.078125);
    v960.bezierCurveTo(p644 * 37.33332824707031, p644 * 28.078125, p644 * 37.33332824707031, p644 * 28.078125, p644 * 46.83332824707031, p644 * 13.078125);
    f89(v960, undefined, p646[1], p644 * 2);
    v960.beginPath();
    v960.lineCap = "round";
    v960.lineJoin = "round";
    v960.moveTo(p644 * 38.83332824707031, p644 * 14.078125);
    v960.bezierCurveTo(p644 * 34.83332824707031, p644 * 24.078125, p644 * 34.83332824707031, p644 * 24.078125, p644 * 30.833328247070312, p644 * 34.078125);
    f89(v960, undefined, p646[1], p644 * 2);
    return v959;
  }
  function f126(p647, p648, p649) {
    var v961 = document.createElement("canvas");
    var v962 = v961.getContext("2d");
    v961.width = p647 * 170;
    v961.height = p647 * 173;
    v962.globalAlpha = p648 ? 0.5 : 1;
    v962.translate(p647 * 5, p647 * 5);
    v962.save();
    v962.translate(p647 * 86.25, p647 * 84.953125);
    f92(v962, 7, p647 * 9.848857801796104, p647 * 5);
    v962.restore();
    f89(v962, p649[0]);
    v962.globalAlpha = 1;
    v962.translate(p647 * -5, p647 * -5);
    v962.save();
    v962.translate(p647 * 86.25, p647 * 84.953125);
    f92(v962, 7, p647 * 9.848857801796104, p647 * 5);
    v962.restore();
    f89(v962, p649[8], p649[9], p647 * 4);
    return v961;
  }
  function f127(p650, p651, p652) {
    var v963 = document.createElement("canvas");
    var v964 = v963.getContext("2d");
    var v965 = p650 * 75;
    var v966 = p650 * 55;
    v963.width = v965;
    v963.height = v966;
    v964.translate(p650 * -30, p650 * -40);
    v964.globalAlpha = 1;
    v964.beginPath();
    v964.bezierCurveTo(p650 * 67, p650 * 56, p650 * 72, p650 * 71, p650 * 72, p650 * 71);
    v964.bezierCurveTo(p650 * 72, p650 * 71, p650 * 84, p650 * 70, p650 * 75, p650 * 82);
    v964.bezierCurveTo(p650 * 70, p650 * 88, p650 * 61, p650 * 89, p650 * 58, p650 * 89);
    v964.bezierCurveTo(p650 * 55, p650 * 89, p650 * 40, p650 * 89, p650 * 46, p650 * 77);
    v964.bezierCurveTo(p650 * 46, p650 * 77, p650 * 43, p650 * 63, p650 * 43, p650 * 63);
    v964.bezierCurveTo(p650 * 35, p650 * 61, p650 * 35, p650 * 53, p650 * 42, p650 * 47);
    v964.bezierCurveTo(p650 * 48, p650 * 42, p650 * 62, p650 * 41, p650 * 66, p650 * 43);
    v964.bezierCurveTo(p650 * 70, p650 * 45, p650 * 72, p650 * 48, p650 * 67, p650 * 56);
    v964.closePath();
    f89(v964, p652[0]);
    v964.beginPath();
    v964.bezierCurveTo(p650 * 68, p650 * 61, p650 * 72, p650 * 76, p650 * 72, p650 * 76);
    v964.bezierCurveTo(p650 * 65, p650 * 85, p650 * 61, p650 * 85, p650 * 49, p650 * 83);
    v964.bezierCurveTo(p650 * 49, p650 * 83, p650 * 44, p650 * 63, p650 * 44, p650 * 63);
    v964.bezierCurveTo(p650 * 54, p650 * 63, p650 * 60, p650 * 63, p650 * 67, p650 * 55);
    v964.closePath();
    f89(v964, p652[1]);
    v964.beginPath();
    v964.moveTo(p650 * 69, p650 * 65);
    v964.bezierCurveTo(p650 * 70, p650 * 61, p650 * 81, p650 * 66, p650 * 86, p650 * 66);
    v964.bezierCurveTo(p650 * 90, p650 * 66, p650 * 97, p650 * 63, p650 * 97, p650 * 56);
    v964.bezierCurveTo(p650 * 97, p650 * 50, p650 * 93, p650 * 47, p650 * 88, p650 * 44);
    f89(v964, false, p652[1], 2);
    v964.beginPath();
    v964.moveTo(p650 * 50, p650 * 48);
    v964.bezierCurveTo(p650 * 43, p650 * 52, p650 * 50, p650 * 54, p650 * 51, p650 * 54);
    v964.bezierCurveTo(p650 * 54, p650 * 54, p650 * 59, p650 * 52, p650 * 59, p650 * 49);
    v964.bezierCurveTo(p650 * 59, p650 * 48, p650 * 55, p650 * 46, p650 * 50, p650 * 48);
    f89(v964, p652[2]);
    return v963;
  }
  function f128(p653, p654, p655) {
    var v967 = document.createElement("canvas");
    var v968 = v967.getContext("2d");
    var v969 = p653 * 195;
    var v970 = p653 * 190;
    var v971 = v969 / 2;
    var v972 = v970 / 2;
    v967.width = v969;
    v967.height = v970;
    var v973 = p653 * 10;
    var v974 = p653 * 35;
    var v975 = p653 * 150;
    var v976 = v974 / 2;
    var v977 = v975 / 2;
    var v978 = p653 * 4;
    v968.translate(v971 - p653 * 5, v972 - p653 * 5);
    v968.rotate(-Math.PI / 1.25);
    v968.globalAlpha = 1;
    f90(v968, -v976, -v977, v974, v975, v973);
    f89(v968, p655[0], p655[1], v978);
    v968.translate(0, 0);
    v968.rotate(Math.PI / 3);
    v968.globalAlpha = 1;
    f90(v968, -v976, -v977, v974, v975, v973);
    f89(v968, p655[0], p655[1], v978);
    v968.translate(0, 5);
    f90(v968, -v976 / 2, -v977 / 2, v974 / 2, v975 / 3, v973 - 2);
    f89(v968, p655[1]);
    return v967;
  }
  function f129(p656, p657, p658) {
    var v979 = document.createElement("canvas");
    var v980 = v979.getContext("2d");
    v979.width = p656 * 155;
    v979.height = p656 * 127;
    v980.globalAlpha = 0.5;
    v980.translate(0, p656 * 8);
    v980.translate(p656 * -7, p656 * -20);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 55, p656 * 68);
    v980.bezierCurveTo(p656 * 86, p656 * 64, p656 * 117, p656 * 66, p656 * 134, p656 * 68);
    v980.bezierCurveTo(p656 * 152, p656 * 69, p656 * 165, p656 * 86, p656 * 152, p656 * 104);
    v980.bezierCurveTo(p656 * 146, p656 * 87, p656 * 122, p656 * 89, p656 * 98, p656 * 90);
    v980.bezierCurveTo(p656 * 64, p656 * 89, p656 * 41, p656 * 91, p656 * 36, p656 * 106);
    v980.bezierCurveTo(p656 * 19, p656 * 92, p656 * 31, p656 * 71, p656 * 54, p656 * 69);
    v980.closePath();
    f89(v980, p658[0]);
    v980.globalAlpha = 1;
    v980.translate(0, p656 * -8);
    v980.translate(p656 * 7, p656 * 20);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 24, p656 * 28);
    v980.bezierCurveTo(p656 * 39, p656 * 30, p656 * 37, p656 * 31, p656 * 40, p656 * 32);
    v980.bezierCurveTo(p656 * 22, p656 * 45, p656 * 26, p656 * 58, p656 * 29, p656 * 66);
    v980.bezierCurveTo(p656 * 86.5, p656 * 65, p656 * 86.5, p656 * 65, p656 * 144, p656 * 64);
    v980.bezierCurveTo(p656 * 151, p656 * 42, p656 * 132, p656 * 20, p656 * 120, p656 * 16);
    v980.bezierCurveTo(p656 * 106, p656 * 12, p656 * 89, p656 * 0, p656 * 73, p656 * 3);
    v980.bezierCurveTo(p656 * 51, p656 * 5, p656 * 36, p656 * 20, p656 * 25, p656 * 28);
    v980.closePath();
    f89(v980, p658[1], p658[2], p656 * 4);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 30, p656 * 41);
    v980.bezierCurveTo(p656 * 49, p656 * 31, p656 * 53, p656 * 29, p656 * 62, p656 * 27);
    v980.bezierCurveTo(p656 * 59, p656 * 24, p656 * 56, p656 * 25, p656 * 53, p656 * 24);
    v980.bezierCurveTo(p656 * 67, p656 * 15, p656 * 84, p656 * 12, p656 * 120, p656 * 16);
    v980.bezierCurveTo(p656 * 107, p656 * 11, p656 * 96, p656 * 6, p656 * 85, p656 * 2);
    v980.bezierCurveTo(p656 * 59, p656 * 3, p656 * 54, p656 * 7, p656 * 40, p656 * 17);
    v980.bezierCurveTo(p656 * 32.5, p656 * 22.5, p656 * 32.5, p656 * 22.5, p656 * 25, p656 * 28);
    v980.bezierCurveTo(p656 * 32, p656 * 30, p656 * 32, p656 * 30, p656 * 39, p656 * 32);
    v980.closePath();
    f89(v980, p658[3]);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 24, p656 * 28);
    v980.bezierCurveTo(p656 * 39, p656 * 30, p656 * 37, p656 * 31, p656 * 40, p656 * 32);
    v980.bezierCurveTo(p656 * 22, p656 * 45, p656 * 26, p656 * 58, p656 * 29, p656 * 66);
    v980.bezierCurveTo(p656 * 86.5, p656 * 65, p656 * 86.5, p656 * 65, p656 * 144, p656 * 64);
    v980.bezierCurveTo(p656 * 151, p656 * 42, p656 * 132, p656 * 20, p656 * 120, p656 * 16);
    v980.bezierCurveTo(p656 * 106, p656 * 12, p656 * 89, p656 * 0, p656 * 73, p656 * 3);
    v980.bezierCurveTo(p656 * 51, p656 * 5, p656 * 36, p656 * 20, p656 * 25, p656 * 28);
    v980.closePath();
    f89(v980, vVVVUndefined172, p658[2], p656 * 4);
    f94(v980, p656 * 18, p656 * 38, p656 * 14.866068747318506);
    f89(v980, p658[4], p658[5], p656 * 4);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 39, p656 * 30);
    v980.bezierCurveTo(p656 * 27, p656 * 38, p656 * 25, p656 * 50, p656 * 26, p656 * 60);
    v980.bezierCurveTo(p656 * 36.5, p656 * 58.5, p656 * 36.5, p656 * 58.5, p656 * 47, p656 * 57);
    f89(v980, p658[1], p658[2], p656 * 4);
    v980.translate(p656 * -7, p656 * -20);
    v980.beginPath();
    v980.lineCap = "round";
    v980.lineJoin = "round";
    v980.moveTo(p656 * 55, p656 * 68);
    v980.bezierCurveTo(p656 * 86, p656 * 64, p656 * 117, p656 * 66, p656 * 134, p656 * 68);
    v980.bezierCurveTo(p656 * 152, p656 * 69, p656 * 165, p656 * 86, p656 * 152, p656 * 104);
    v980.bezierCurveTo(p656 * 146, p656 * 87, p656 * 122, p656 * 89, p656 * 98, p656 * 90);
    v980.bezierCurveTo(p656 * 64, p656 * 89, p656 * 41, p656 * 91, p656 * 36, p656 * 106);
    v980.bezierCurveTo(p656 * 19, p656 * 92, p656 * 31, p656 * 71, p656 * 54, p656 * 69);
    v980.closePath();
    f89(v980, p658[4], p658[5], p656 * 4);
    return v979;
  }
  function f130(p659, p660) {
    var v981 = document.createElement("canvas");
    var v982 = v981.getContext("2d");
    var v983 = p659 * 40;
    var v984 = p659 * 40;
    var v985 = p659 * 16;
    var v986 = p659 * 4;
    v981.width = v983;
    v981.height = v984;
    v982.translate(v983 / 2, v984 / 2);
    v982.globalAlpha = 1;
    f94(v982, 0, 0, v985);
    f89(v982, p660[0], p660[1], v986);
    return v981;
  }
  function f131(p661, p662, p663) {
    var v987 = document.createElement("canvas");
    var v988 = v987.getContext("2d");
    var v989 = p661 * 370;
    var v990 = p661 * 370;
    var v991 = v989 / 2;
    var v992 = v990 / 2;
    v987.width = v989;
    v987.height = v990;
    var v993 = p661 * 180;
    v988.globalAlpha = 0.2;
    f94(v988, v991, v992, v993);
    f89(v988, p663[0]);
    return v987;
  }
  function f132(p664, p665) {
    var v994 = document.createElement("canvas");
    var v995 = v994.getContext("2d");
    var v996 = p664 * 220;
    var v997 = p664 * 220;
    var v998 = p664 * 16;
    v994.width = v996;
    v994.height = v997;
    v995.translate(v996 / 2, v997 / 2);
    v995.globalAlpha = 0.5;
    f94(v995, 0, 0, v998);
    f89(v995, p665[0]);
    v995.globalAlpha = 1;
    return v994;
  }
  function f133(p666, p667, p668) {
    var v999 = document.createElement("canvas");
    var v1000 = v999.getContext("2d");
    var v1001 = p666 * 135;
    var v1002 = p666 * 190;
    var v1003 = v1001 / 2;
    var v1004 = v1002 / 2;
    v999.width = v1001;
    v999.height = v1002;
    var v1005 = p666 * 10;
    var v1006 = p666 * 25;
    var v1007 = p666 * 180;
    var v1008 = v1006 / 2;
    var v1009 = v1007 / 2;
    var v1010 = p666 * 4;
    v1000.translate(v1003, v1004);
    v1000.rotate(-Math.PI / 5);
    v1000.globalAlpha = 1;
    f90(v1000, -v1008, -v1009, v1006, v1007, v1005);
    f89(v1000, p668[0], p668[1], v1010);
    v1000.translate(0, 0);
    v1000.rotate(Math.PI / 5);
    v1000.globalAlpha = 1;
    f90(v1000, -v1008, -v1009, v1006, v1007, v1005);
    f89(v1000, p668[0], p668[1], v1010);
    return v999;
  }
  function f134(p669, p670, p671) {
    var v1011 = document.createElement("canvas");
    var v1012 = v1011.getContext("2d");
    var v1013 = p669 * 205;
    var v1014 = p669 * 205;
    var v1015 = v1013 / 2;
    var v1016 = v1014 / 2;
    v1011.width = v1013;
    v1011.height = v1014;
    var v1017 = p669 * 100;
    v1012.translate(v1015, v1016);
    v1012.globalAlpha = 1;
    f94(v1012, 0, 0, v1017);
    f89(v1012, p671[0]);
    return v1011;
  }
  function f135(p672, p673, p674) {
    var v1018 = document.createElement("canvas");
    var v1019 = v1018.getContext("2d");
    v1018.width = p672 * 155;
    v1018.height = p672 * 127;
    v1019.globalAlpha = 0.5;
    v1019.translate(0, p672 * 8);
    v1019.translate(p672 * -7, p672 * -20);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 55, p672 * 68);
    v1019.bezierCurveTo(p672 * 86, p672 * 64, p672 * 117, p672 * 66, p672 * 134, p672 * 68);
    v1019.bezierCurveTo(p672 * 152, p672 * 69, p672 * 165, p672 * 86, p672 * 152, p672 * 104);
    v1019.bezierCurveTo(p672 * 146, p672 * 87, p672 * 122, p672 * 89, p672 * 98, p672 * 90);
    v1019.bezierCurveTo(p672 * 64, p672 * 89, p672 * 41, p672 * 91, p672 * 36, p672 * 106);
    v1019.bezierCurveTo(p672 * 19, p672 * 92, p672 * 31, p672 * 71, p672 * 54, p672 * 69);
    v1019.closePath();
    f89(v1019, p674[0]);
    v1019.globalAlpha = 1;
    v1019.translate(0, p672 * -8);
    v1019.translate(p672 * 7, p672 * 20);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 24, p672 * 28);
    v1019.bezierCurveTo(p672 * 39, p672 * 30, p672 * 37, p672 * 31, p672 * 40, p672 * 32);
    v1019.bezierCurveTo(p672 * 22, p672 * 45, p672 * 26, p672 * 58, p672 * 29, p672 * 66);
    v1019.bezierCurveTo(p672 * 86.5, p672 * 65, p672 * 86.5, p672 * 65, p672 * 144, p672 * 64);
    v1019.bezierCurveTo(p672 * 151, p672 * 42, p672 * 132, p672 * 20, p672 * 120, p672 * 16);
    v1019.bezierCurveTo(p672 * 106, p672 * 12, p672 * 89, p672 * 0, p672 * 73, p672 * 3);
    v1019.bezierCurveTo(p672 * 51, p672 * 5, p672 * 36, p672 * 20, p672 * 25, p672 * 28);
    v1019.closePath();
    f89(v1019, p674[1], p674[2], p672 * 4);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 30, p672 * 41);
    v1019.bezierCurveTo(p672 * 49, p672 * 31, p672 * 53, p672 * 29, p672 * 62, p672 * 27);
    v1019.bezierCurveTo(p672 * 59, p672 * 24, p672 * 56, p672 * 25, p672 * 53, p672 * 24);
    v1019.bezierCurveTo(p672 * 67, p672 * 15, p672 * 84, p672 * 12, p672 * 120, p672 * 16);
    v1019.bezierCurveTo(p672 * 107, p672 * 11, p672 * 96, p672 * 6, p672 * 85, p672 * 2);
    v1019.bezierCurveTo(p672 * 59, p672 * 3, p672 * 54, p672 * 7, p672 * 40, p672 * 17);
    v1019.bezierCurveTo(p672 * 32.5, p672 * 22.5, p672 * 32.5, p672 * 22.5, p672 * 25, p672 * 28);
    v1019.bezierCurveTo(p672 * 32, p672 * 30, p672 * 32, p672 * 30, p672 * 39, p672 * 32);
    v1019.closePath();
    f89(v1019, p674[3]);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 24, p672 * 28);
    v1019.bezierCurveTo(p672 * 39, p672 * 30, p672 * 37, p672 * 31, p672 * 40, p672 * 32);
    v1019.bezierCurveTo(p672 * 22, p672 * 45, p672 * 26, p672 * 58, p672 * 29, p672 * 66);
    v1019.bezierCurveTo(p672 * 86.5, p672 * 65, p672 * 86.5, p672 * 65, p672 * 144, p672 * 64);
    v1019.bezierCurveTo(p672 * 151, p672 * 42, p672 * 132, p672 * 20, p672 * 120, p672 * 16);
    v1019.bezierCurveTo(p672 * 106, p672 * 12, p672 * 89, p672 * 0, p672 * 73, p672 * 3);
    v1019.bezierCurveTo(p672 * 51, p672 * 5, p672 * 36, p672 * 20, p672 * 25, p672 * 28);
    v1019.closePath();
    f89(v1019, vVVUndefined152, p674[2], p672 * 4);
    f94(v1019, p672 * 18, p672 * 38, p672 * 14.866068747318506);
    f89(v1019, p674[4], p674[5], p672 * 4);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 39, p672 * 30);
    v1019.bezierCurveTo(p672 * 27, p672 * 38, p672 * 25, p672 * 50, p672 * 26, p672 * 60);
    v1019.bezierCurveTo(p672 * 36.5, p672 * 58.5, p672 * 36.5, p672 * 58.5, p672 * 47, p672 * 57);
    f89(v1019, p674[1], p674[2], p672 * 4);
    v1019.translate(p672 * -7, p672 * -20);
    v1019.beginPath();
    v1019.lineCap = "round";
    v1019.lineJoin = "round";
    v1019.moveTo(p672 * 27, p672 * 74);
    v1019.bezierCurveTo(p672 * 38, p672 * 77.5, p672 * 38, p672 * 77.5, p672 * 49, p672 * 81);
    v1019.bezierCurveTo(p672 * 54.5, p672 * 75.5, p672 * 54.5, p672 * 75.5, p672 * 60, p672 * 70);
    v1019.bezierCurveTo(p672 * 64, p672 * 72, p672 * 64, p672 * 72, p672 * 68, p672 * 74);
    v1019.bezierCurveTo(p672 * 80.5, p672 * 67.5, p672 * 80.5, p672 * 67.5, p672 * 93, p672 * 61);
    v1019.bezierCurveTo(p672 * 104.5, p672 * 68, p672 * 104.5, p672 * 68, p672 * 116, p672 * 75);
    v1019.bezierCurveTo(p672 * 120.5, p672 * 72.5, p672 * 120.5, p672 * 72.5, p672 * 125, p672 * 70);
    v1019.bezierCurveTo(p672 * 129, p672 * 75, p672 * 129, p672 * 75, p672 * 133, p672 * 80);
    v1019.bezierCurveTo(p672 * 145.5, p672 * 76.5, p672 * 145.5, p672 * 76.5, p672 * 158, p672 * 73);
    v1019.bezierCurveTo(p672 * 158, p672 * 87, p672 * 158, p672 * 93, p672 * 155, p672 * 95);
    v1019.bezierCurveTo(p672 * 152.5, p672 * 96, p672 * 152.5, p672 * 96, p672 * 150, p672 * 97);
    v1019.bezierCurveTo(p672 * 121, p672 * 85, p672 * 108, p672 * 86, p672 * 93, p672 * 85);
    v1019.bezierCurveTo(p672 * 64, p672 * 85, p672 * 52, p672 * 95, p672 * 38, p672 * 99);
    v1019.bezierCurveTo(p672 * 36, p672 * 98.5, p672 * 36, p672 * 98.5, p672 * 34, p672 * 98);
    v1019.bezierCurveTo(p672 * 25, p672 * 98, p672 * 27, p672 * 91, p672 * 27, p672 * 76);
    v1019.closePath();
    f89(v1019, p674[6], p674[7], p672 * 6);
    return v1018;
  }
  function f136(p675, p676) {
    var v1020 = document.createElement("canvas");
    var v1021 = v1020.getContext("2d");
    var v1022 = p675 * 220;
    var v1023 = p675 * 220;
    var v1024 = p675 * 32;
    var v1025 = p675 * 4;
    v1020.width = v1022;
    v1020.height = v1023;
    v1021.translate(v1022 / 2, v1023 / 2 + p675 * 10);
    v1021.globalAlpha = 0.5;
    f94(v1021, 0, 0, v1024);
    f89(v1021, p676[0], p676[0]);
    v1021.translate(0, p675 * -8);
    v1021.globalAlpha = 1;
    f94(v1021, 0, 0, v1024);
    f89(v1021, p676[1], p676[2], v1025);
    return v1020;
  }
  function f137(p677, p678, p679, p680) {
    var v1026 = document.createElement("canvas");
    var v1027 = v1026.getContext("2d");
    var v1028 = p677 * 210;
    var v1029 = p677 * 205;
    var v1030 = p677 * 30;
    var v1031 = p677 * 20;
    var v1032 = p677 * 200;
    var v1033 = p677 * 180;
    var v1034 = v1032 / 2;
    var v1035 = v1033 / 2;
    v1026.width = v1028;
    v1026.height = v1029;
    v1026.width = p677 * 419;
    v1026.height = p677 * 412;
    if (p680 == 1) {
      v1027.save();
      v1027.translate(p677 * 10, p677 * 0);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 117.99996948242188, p677 * 216.40621948242188);
      v1027.bezierCurveTo(p677 * 86.99996948242188, p677 * 221.40621948242188, p677 * 74.99996948242188, p677 * 217.40621948242188, p677 * 60.999969482421875, p677 * 205.40621948242188);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 114.99996948242188, p677 * 227.40621948242188);
      v1027.bezierCurveTo(p677 * 90.99996948242188, p677 * 233.40621948242188, p677 * 66.99996948242188, p677 * 228.40621948242188, p677 * 43.999969482421875, p677 * 225.40621948242188);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 110.99996948242188, p677 * 236.40621948242188);
      v1027.bezierCurveTo(p677 * 94.99996948242188, p677 * 244.40621948242188, p677 * 79.99996948242188, p677 * 249.40621948242188, p677 * 60.999969482421875, p677 * 249.40621948242188);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 111.99996948242188, p677 * 206.29513549804688);
      v1027.bezierCurveTo(p677 * 91.99996948242188, p677 * 206.29513549804688, p677 * 87.99996948242188, p677 * 201.29513549804688, p677 * 79.99996948242188, p677 * 192.29513549804688);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 109.99996948242188, p677 * 249.18402099609375);
      v1027.bezierCurveTo(p677 * 97.99996948242188, p677 * 263.18402099609375, p677 * 85.99996948242188, p677 * 271.18402099609375, p677 * 65.99996948242188, p677 * 277.18402099609375);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 105.99996948242188, p677 * 192.18402099609375);
      v1027.bezierCurveTo(p677 * 99.49996948242188, p677 * 197.68402099609375, p677 * 99.49996948242188, p677 * 197.68402099609375, p677 * 92.99996948242188, p677 * 203.18402099609375);
      v1027.bezierCurveTo(p677 * 95.99996948242188, p677 * 213.18402099609375, p677 * 95.99996948242188, p677 * 215.18402099609375, p677 * 89.99996948242188, p677 * 219.18402099609375);
      v1027.bezierCurveTo(p677 * 91.99996948242188, p677 * 223.18402099609375, p677 * 91.99996948242188, p677 * 226.18402099609375, p677 * 87.99996948242188, p677 * 230.18402099609375);
      v1027.bezierCurveTo(p677 * 89.99996948242188, p677 * 234.18402099609375, p677 * 91.99996948242188, p677 * 237.18402099609375, p677 * 90.99996948242188, p677 * 244.18402099609375);
      v1027.bezierCurveTo(p677 * 96.99996948242188, p677 * 252.18402099609375, p677 * 96.99996948242188, p677 * 256.18402099609375, p677 * 95.99996948242188, p677 * 262.18402099609375);
      v1027.bezierCurveTo(p677 * 106.49996948242188, p677 * 264.18402099609375, p677 * 106.49996948242188, p677 * 264.18402099609375, p677 * 116.99996948242188, p677 * 266.18402099609375);
      f89(v1027, vVVVVVUndefined173, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 104.99996948242188, p677 * 183.29513549804688);
      v1027.bezierCurveTo(p677 * 99.99996948242188, p677 * 193.29513549804688, p677 * 93.99996948242188, p677 * 195.29513549804688, p677 * 89.99996948242188, p677 * 201.29513549804688);
      v1027.bezierCurveTo(p677 * 86.99996948242188, p677 * 212.29513549804688, p677 * 85.99996948242188, p677 * 214.29513549804688, p677 * 81.99996948242188, p677 * 215.29513549804688);
      v1027.bezierCurveTo(p677 * 83.99996948242188, p677 * 223.29513549804688, p677 * 83.99996948242188, p677 * 227.29513549804688, p677 * 79.99996948242188, p677 * 230.29513549804688);
      v1027.bezierCurveTo(p677 * 83.99996948242188, p677 * 235.29513549804688, p677 * 84.99996948242188, p677 * 240.29513549804688, p677 * 79.99996948242188, p677 * 246.29513549804688);
      v1027.bezierCurveTo(p677 * 86.99996948242188, p677 * 251.29513549804688, p677 * 91.99996948242188, p677 * 256.2951354980469, p677 * 89.99996948242188, p677 * 266.2951354980469);
      v1027.bezierCurveTo(p677 * 102.99996948242188, p677 * 269.2951354980469, p677 * 102.99996948242188, p677 * 269.2951354980469, p677 * 115.99996948242188, p677 * 272.2951354980469);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 107.99996948242188, p677 * 177.85067749023438);
      v1027.bezierCurveTo(p677 * 95.99996948242188, p677 * 187.35067749023438, p677 * 95.99996948242188, p677 * 187.35067749023438, p677 * 83.99996948242188, p677 * 196.85067749023438);
      v1027.bezierCurveTo(p677 * 82.99996948242188, p677 * 203.85067749023438, p677 * 80.99996948242188, p677 * 209.85067749023438, p677 * 72.99996948242188, p677 * 210.85067749023438);
      v1027.bezierCurveTo(p677 * 73.99996948242188, p677 * 220.85067749023438, p677 * 73.99996948242188, p677 * 221.85067749023438, p677 * 66.99996948242188, p677 * 227.85067749023438);
      v1027.bezierCurveTo(p677 * 71.99996948242188, p677 * 235.85067749023438, p677 * 73.99996948242188, p677 * 239.85067749023438, p677 * 71.99996948242188, p677 * 247.85067749023438);
      v1027.bezierCurveTo(p677 * 80.99996948242188, p677 * 257.8506774902344, p677 * 81.99996948242188, p677 * 263.8506774902344, p677 * 77.99996948242188, p677 * 271.8506774902344);
      v1027.bezierCurveTo(p677 * 95.49996948242188, p677 * 272.8506774902344, p677 * 95.49996948242188, p677 * 272.8506774902344, p677 * 112.99996948242188, p677 * 273.8506774902344);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.restore();
    } else if (p680 == 2) {
      v1027.save();
      v1027.translate(p677 * 130, p677 * 35);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 170.99996948242188, p677 * 133.85067749023438);
      v1027.bezierCurveTo(p677 * 195.99996948242188, p677 * 129.85067749023438, p677 * 196.99996948242188, p677 * 111.85067749023438, p677 * 200.99996948242188, p677 * 88.85067749023438);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 169.99996948242188, p677 * 143.85067749023438);
      v1027.bezierCurveTo(p677 * 189.99996948242188, p677 * 145.85067749023438, p677 * 207.99996948242188, p677 * 126.85067749023438, p677 * 222.99996948242188, p677 * 100.85067749023438);
      f89(v1027, vVVVVUndefined1722, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 170.99996948242188, p677 * 157.85067749023438);
      v1027.bezierCurveTo(p677 * 193.99996948242188, p677 * 160.85067749023438, p677 * 210.99996948242188, p677 * 151.85067749023438, p677 * 232.99996948242188, p677 * 139.85067749023438);
      f89(v1027, vVUndefined16, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 169.99996948242188, p677 * 168.85067749023438);
      v1027.bezierCurveTo(p677 * 192.99996948242188, p677 * 175.85067749023438, p677 * 203.99996948242188, p677 * 177.85067749023438, p677 * 245.99996948242188, p677 * 168.85067749023438);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 167.99996948242188, p677 * 168.85067749023438);
      v1027.bezierCurveTo(p677 * 183.99996948242188, p677 * 189.85067749023438, p677 * 191.99996948242188, p677 * 193.85067749023438, p677 * 220.99996948242188, p677 * 196.85067749023438);
      f89(v1027, vVVVUndefined17, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 176.99996948242188, p677 * 117.85067749023438);
      v1027.bezierCurveTo(p677 * 181.99996948242188, p677 * 120.85067749023438, p677 * 181.99996948242188, p677 * 120.85067749023438, p677 * 186.99996948242188, p677 * 123.85067749023438);
      v1027.bezierCurveTo(p677 * 183.99996948242188, p677 * 137.85067749023438, p677 * 185.99996948242188, p677 * 136.85067749023438, p677 * 190.99996948242188, p677 * 136.85067749023438);
      v1027.bezierCurveTo(p677 * 186.99996948242188, p677 * 147.85067749023438, p677 * 189.99996948242188, p677 * 152.85067749023438, p677 * 193.99996948242188, p677 * 155.85067749023438);
      v1027.bezierCurveTo(p677 * 187.99996948242188, p677 * 165.85067749023438, p677 * 190.99996948242188, p677 * 169.85067749023438, p677 * 190.99996948242188, p677 * 172.85067749023438);
      v1027.bezierCurveTo(p677 * 186.99996948242188, p677 * 183.85067749023438, p677 * 186.99996948242188, p677 * 185.85067749023438, p677 * 189.99996948242188, p677 * 188.85067749023438);
      v1027.bezierCurveTo(p677 * 182.49996948242188, p677 * 195.35067749023438, p677 * 182.49996948242188, p677 * 195.35067749023438, p677 * 174.99996948242188, p677 * 201.85067749023438);
      f89(v1027, vVVUndefined142, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 176.99996948242188, p677 * 112.18402099609375);
      v1027.bezierCurveTo(p677 * 183.99996948242188, p677 * 119.18402099609375, p677 * 186.99996948242188, p677 * 117.18402099609375, p677 * 192.99996948242188, p677 * 116.18402099609375);
      v1027.bezierCurveTo(p677 * 191.99996948242188, p677 * 126.18402099609375, p677 * 193.99996948242188, p677 * 130.18402099609375, p677 * 199.99996948242188, p677 * 130.18402099609375);
      v1027.bezierCurveTo(p677 * 194.99996948242188, p677 * 145.18402099609375, p677 * 197.99996948242188, p677 * 147.18402099609375, p677 * 201.99996948242188, p677 * 153.18402099609375);
      v1027.bezierCurveTo(p677 * 196.99996948242188, p677 * 164.18402099609375, p677 * 197.99996948242188, p677 * 169.18402099609375, p677 * 201.99996948242188, p677 * 174.18402099609375);
      v1027.bezierCurveTo(p677 * 194.99996948242188, p677 * 184.18402099609375, p677 * 196.99996948242188, p677 * 187.18402099609375, p677 * 200.99996948242188, p677 * 193.18402099609375);
      v1027.bezierCurveTo(p677 * 185.99996948242188, p677 * 195.18402099609375, p677 * 181.99996948242188, p677 * 201.18402099609375, p677 * 174.99996948242188, p677 * 210.18402099609375);
      f89(v1027, vVVUndefined17, p678[4], p677 * 3);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 176.99996948242188, p677 * 101.29513549804688);
      v1027.bezierCurveTo(p677 * 181.99996948242188, p677 * 108.29513549804688, p677 * 189.99996948242188, p677 * 110.29513549804688, p677 * 195.99996948242188, p677 * 107.29513549804688);
      v1027.bezierCurveTo(p677 * 197.99996948242188, p677 * 121.29513549804688, p677 * 200.99996948242188, p677 * 122.29513549804688, p677 * 206.99996948242188, p677 * 122.29513549804688);
      v1027.bezierCurveTo(p677 * 201.99996948242188, p677 * 138.29513549804688, p677 * 204.99996948242188, p677 * 142.29513549804688, p677 * 211.99996948242188, p677 * 148.29513549804688);
      v1027.bezierCurveTo(p677 * 201.99996948242188, p677 * 156.29513549804688, p677 * 205.99996948242188, p677 * 167.29513549804688, p677 * 213.99996948242188, p677 * 173.29513549804688);
      v1027.bezierCurveTo(p677 * 204.99996948242188, p677 * 181.29513549804688, p677 * 204.99996948242188, p677 * 187.29513549804688, p677 * 205.99996948242188, p677 * 193.29513549804688);
      v1027.bezierCurveTo(p677 * 190.99996948242188, p677 * 198.29513549804688, p677 * 181.99996948242188, p677 * 205.29513549804688, p677 * 174.99996948242188, p677 * 214.29513549804688);
      f89(v1027, undefined, p678[4], p677 * 3);
      v1027.restore();
    }
    v1027.translate(v1026.width / 2, v1026.height / 2);
    if (!p680) {
      v1027.globalAlpha = 0.5;
      f90(v1027, -v1034, -v1035, v1032, v1033 + v1031, v1030);
      f89(v1027, p678[0]);
      if (p679) {
        v1027.rotate(Math.PI);
      }
      v1027.globalAlpha = 1;
      f90(v1027, -v1034, -v1035, v1032, v1033, v1030);
      f89(v1027, p678[1], p678[2], 4);
      v1027.globalAlpha = 1;
      f90(v1027, p677 * 35 - v1034, p677 * 20 - v1035, v1032 - p677 * 50, v1033 - p677 * 50, v1030 - p677 * 10);
      f89(v1027, p678[3]);
    }
    if (p680 == 3) {
      v1027.translate(-v1026.width / 2, -v1026.height / 2);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 121, p677 * 190);
      v1027.bezierCurveTo(p677 * 129, p677 * 186, p677 * 137, p677 * 183, p677 * 135, p677 * 163);
      v1027.bezierCurveTo(p677 * 131, p677 * 135, p677 * 153, p677 * 127, p677 * 177, p677 * 124);
      v1027.bezierCurveTo(p677 * 198, p677 * 120, p677 * 208, p677 * 122, p677 * 226, p677 * 128);
      v1027.bezierCurveTo(p677 * 261, p677 * 112, p677 * 271, p677 * 126, p677 * 287, p677 * 147);
      v1027.bezierCurveTo(p677 * 310, p677 * 163, p677 * 304, p677 * 183, p677 * 283, p677 * 196);
      v1027.bezierCurveTo(p677 * 296, p677 * 249, p677 * 278, p677 * 262, p677 * 253, p677 * 263);
      v1027.bezierCurveTo(p677 * 210, p677 * 264, p677 * 188, p677 * 252, p677 * 177, p677 * 234);
      v1027.bezierCurveTo(p677 * 133, p677 * 242, p677 * 123, p677 * 241, p677 * 115, p677 * 225);
      v1027.bezierCurveTo(p677 * 109, p677 * 206, p677 * 115, p677 * 193, p677 * 121, p677 * 190);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 219, p677 * 144);
      v1027.bezierCurveTo(p677 * 251, p677 * 121, p677 * 277, p677 * 136, p677 * 276, p677 * 159);
      v1027.bezierCurveTo(p677 * 276, p677 * 176, p677 * 273, p677 * 191, p677 * 242, p677 * 193);
      v1027.bezierCurveTo(p677 * 226, p677 * 228, p677 * 155, p677 * 219, p677 * 150, p677 * 183);
      v1027.bezierCurveTo(p677 * 142, p677 * 144, p677 * 174, p677 * 127, p677 * 219, p677 * 144);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 123, p677 * 214);
      v1027.bezierCurveTo(p677 * 119, p677 * 198, p677 * 129, p677 * 189, p677 * 146, p677 * 194);
      v1027.bezierCurveTo(p677 * 158, p677 * 201, p677 * 165, p677 * 218, p677 * 147, p677 * 226);
      v1027.bezierCurveTo(p677 * 135, p677 * 230, p677 * 125, p677 * 222, p677 * 123, p677 * 214);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 257, p677 * 199);
      v1027.bezierCurveTo(p677 * 264, p677 * 199, p677 * 275, p677 * 213, p677 * 261, p677 * 220);
      v1027.bezierCurveTo(p677 * 246, p677 * 225, p677 * 235, p677 * 200, p677 * 257, p677 * 199);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.translate(p677 * -5, p677 * 55);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 186, p677 * 123);
      v1027.bezierCurveTo(p677 * 198, p677 * 115, p677 * 219, p677 * 110, p677 * 219, p677 * 123);
      v1027.bezierCurveTo(p677 * 216, p677 * 135, p677 * 171, p677 * 143, p677 * 186, p677 * 123);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.translate(p677 * 5, p677 * -55);
      v1027.translate(p677 * -5, p677 * 15);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 171, p677 * 241);
      v1027.bezierCurveTo(p677 * 189, p677 * 234, p677 * 200, p677 * 248, p677 * 189, p677 * 254);
      v1027.bezierCurveTo(p677 * 179, p677 * 260, p677 * 158, p677 * 246, p677 * 171, p677 * 241);
      v1027.closePath();
      f89(v1027, p678[5]);
    } else if (p680 == 4) {
      v1027.translate(-v1026.width / 2, -v1026.height / 2);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 30, p677 * 167);
      v1027.bezierCurveTo(p677 * 47, p677 * 144, p677 * 64, p677 * 140, p677 * 80, p677 * 147);
      v1027.bezierCurveTo(p677 * 95, p677 * 154, p677 * 95, p677 * 159, p677 * 100, p677 * 179);
      v1027.bezierCurveTo(p677 * 105, p677 * 202, p677 * 95, p677 * 218, p677 * 69, p677 * 218);
      v1027.bezierCurveTo(p677 * 48, p677 * 236, p677 * 26, p677 * 223, p677 * 28, p677 * 213);
      v1027.bezierCurveTo(p677 * 28, p677 * 205, p677 * 29, p677 * 199, p677 * 32, p677 * 195);
      v1027.bezierCurveTo(p677 * 21, p677 * 183, p677 * 27, p677 * 173, p677 * 30, p677 * 167);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 26, p677 * 145);
      v1027.bezierCurveTo(p677 * 32, p677 * 138, p677 * 37, p677 * 137, p677 * 40, p677 * 139);
      v1027.bezierCurveTo(p677 * 43, p677 * 140, p677 * 41, p677 * 150, p677 * 31, p677 * 159);
      v1027.bezierCurveTo(p677 * 23, p677 * 166, p677 * 17, p677 * 158, p677 * 26, p677 * 145);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 13, p677 * 193);
      v1027.bezierCurveTo(p677 * 21, p677 * 187, p677 * 30, p677 * 190, p677 * 20, p677 * 202);
      v1027.bezierCurveTo(p677 * 13, p677 * 208, p677 * 7, p677 * 202, p677 * 13, p677 * 193);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 121, p677 * 190);
      v1027.bezierCurveTo(p677 * 129, p677 * 186, p677 * 137, p677 * 183, p677 * 135, p677 * 163);
      v1027.bezierCurveTo(p677 * 131, p677 * 135, p677 * 153, p677 * 127, p677 * 177, p677 * 124);
      v1027.bezierCurveTo(p677 * 198, p677 * 120, p677 * 208, p677 * 122, p677 * 226, p677 * 128);
      v1027.bezierCurveTo(p677 * 261, p677 * 112, p677 * 271, p677 * 126, p677 * 287, p677 * 147);
      v1027.bezierCurveTo(p677 * 310, p677 * 163, p677 * 304, p677 * 183, p677 * 283, p677 * 196);
      v1027.bezierCurveTo(p677 * 296, p677 * 249, p677 * 278, p677 * 262, p677 * 253, p677 * 263);
      v1027.bezierCurveTo(p677 * 210, p677 * 264, p677 * 188, p677 * 252, p677 * 177, p677 * 234);
      v1027.bezierCurveTo(p677 * 133, p677 * 242, p677 * 123, p677 * 241, p677 * 115, p677 * 225);
      v1027.bezierCurveTo(p677 * 109, p677 * 206, p677 * 115, p677 * 193, p677 * 121, p677 * 190);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 335, p677 * 196);
      v1027.bezierCurveTo(p677 * 312, p677 * 208, p677 * 300, p677 * 185, p677 * 309, p677 * 167);
      v1027.bezierCurveTo(p677 * 314, p677 * 141, p677 * 339, p677 * 127, p677 * 359, p677 * 144);
      v1027.bezierCurveTo(p677 * 363, p677 * 148, p677 * 364, p677 * 150, p677 * 364, p677 * 150);
      v1027.bezierCurveTo(p677 * 392, p677 * 143, p677 * 396, p677 * 183, p677 * 378, p677 * 204);
      v1027.bezierCurveTo(p677 * 367, p677 * 215, p677 * 339, p677 * 208, p677 * 335, p677 * 196);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 349, p677 * 212);
      v1027.bezierCurveTo(p677 * 339, p677 * 216, p677 * 334, p677 * 208, p677 * 341, p677 * 203);
      v1027.bezierCurveTo(p677 * 353, p677 * 198, p677 * 361, p677 * 205, p677 * 349, p677 * 212);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 46, p677 * 165);
      v1027.bezierCurveTo(p677 * 55, p677 * 148, p677 * 85, p677 * 157, p677 * 83, p677 * 175);
      v1027.bezierCurveTo(p677 * 99, p677 * 185, p677 * 89, p677 * 212, p677 * 66, p677 * 204);
      v1027.bezierCurveTo(p677 * 55, p677 * 212, p677 * 43, p677 * 212, p677 * 41, p677 * 202);
      v1027.bezierCurveTo(p677 * 39, p677 * 194, p677 * 42, p677 * 187, p677 * 49, p677 * 185);
      v1027.bezierCurveTo(p677 * 44, p677 * 175, p677 * 45, p677 * 172, p677 * 46, p677 * 165);
      v1027.closePath();
      f89(v1027, p678[4]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 219, p677 * 144);
      v1027.bezierCurveTo(p677 * 251, p677 * 121, p677 * 277, p677 * 136, p677 * 276, p677 * 159);
      v1027.bezierCurveTo(p677 * 276, p677 * 176, p677 * 273, p677 * 191, p677 * 242, p677 * 193);
      v1027.bezierCurveTo(p677 * 226, p677 * 228, p677 * 155, p677 * 219, p677 * 150, p677 * 183);
      v1027.bezierCurveTo(p677 * 142, p677 * 144, p677 * 174, p677 * 127, p677 * 219, p677 * 144);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 123, p677 * 214);
      v1027.bezierCurveTo(p677 * 119, p677 * 198, p677 * 129, p677 * 189, p677 * 146, p677 * 194);
      v1027.bezierCurveTo(p677 * 158, p677 * 201, p677 * 165, p677 * 218, p677 * 147, p677 * 226);
      v1027.bezierCurveTo(p677 * 135, p677 * 230, p677 * 125, p677 * 222, p677 * 123, p677 * 214);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 257, p677 * 199);
      v1027.bezierCurveTo(p677 * 264, p677 * 199, p677 * 275, p677 * 213, p677 * 261, p677 * 220);
      v1027.bezierCurveTo(p677 * 246, p677 * 225, p677 * 235, p677 * 200, p677 * 257, p677 * 199);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.translate(p677 * -5, p677 * 55);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 186, p677 * 123);
      v1027.bezierCurveTo(p677 * 198, p677 * 115, p677 * 219, p677 * 110, p677 * 219, p677 * 123);
      v1027.bezierCurveTo(p677 * 216, p677 * 135, p677 * 171, p677 * 143, p677 * 186, p677 * 123);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.translate(p677 * 5, p677 * -55);
      v1027.translate(p677 * -5, p677 * 15);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 171, p677 * 241);
      v1027.bezierCurveTo(p677 * 189, p677 * 234, p677 * 200, p677 * 248, p677 * 189, p677 * 254);
      v1027.bezierCurveTo(p677 * 179, p677 * 260, p677 * 158, p677 * 246, p677 * 171, p677 * 241);
      v1027.closePath();
      f89(v1027, p678[5]);
      v1027.beginPath();
      v1027.lineCap = "round";
      v1027.lineJoin = "round";
      v1027.moveTo(p677 * 367, p677 * 164);
      v1027.bezierCurveTo(p677 * 380, p677 * 160, p677 * 391, p677 * 185, p677 * 371, p677 * 189);
      v1027.bezierCurveTo(p677 * 362, p677 * 192, p677 * 354, p677 * 191, p677 * 350, p677 * 185);
      v1027.bezierCurveTo(p677 * 326, p677 * 205, p677 * 314, p677 * 182, p677 * 316, p677 * 171);
      v1027.bezierCurveTo(p677 * 317, p677 * 150, p677 * 332, p677 * 143, p677 * 347, p677 * 147);
      v1027.bezierCurveTo(p677 * 361, p677 * 151, p677 * 366, p677 * 158, p677 * 367, p677 * 164);
      v1027.closePath();
      f89(v1027, p678[4]);
    }
    return v1026;
  }
  function f138(p681, p682, p683) {
    var v1036 = document.createElement("canvas");
    var v1037 = v1036.getContext("2d");
    v1036.width = p681 * 424;
    v1036.height = p681 * 788;
    v1037.translate(p681 * 25, p681 * 25);
    v1037.globalAlpha = p682 ? 0.5 : 1;
    v1037.save();
    v1037.translate(p681 * 193.5, p681 * 602.5);
    v1037.rotate(-0.12);
    f90(v1037, p681 * -26.5, p681 * -97.5, p681 * 53, p681 * 195, p681 * 25);
    v1037.restore();
    f89(v1037, p683[0]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 137, p681 * 519);
    v1037.bezierCurveTo(p681 * 182, p681 * 513, p681 * 182, p681 * 513, p681 * 227, p681 * 507);
    v1037.bezierCurveTo(p681 * 214, p681 * 417, p681 * 189, p681 * 304, p681 * 221, p681 * 180);
    v1037.bezierCurveTo(p681 * 191, p681 * 126, p681 * 192, p681 * 105, p681 * 198, p681 * 64);
    v1037.bezierCurveTo(p681 * 123, p681 * 102, p681 * 99, p681 * 285, p681 * 137, p681 * 517);
    v1037.closePath();
    f89(v1037, p683[0]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 175, p681 * 119);
    v1037.bezierCurveTo(p681 * 176, p681 * 142, p681 * 184, p681 * 165, p681 * 197, p681 * 183);
    v1037.bezierCurveTo(p681 * 167, p681 * 325, p681 * 191, p681 * 405, p681 * 202, p681 * 502);
    v1037.bezierCurveTo(p681 * 180, p681 * 503, p681 * 180, p681 * 503, p681 * 158, p681 * 504);
    v1037.bezierCurveTo(p681 * 135, p681 * 396, p681 * 134, p681 * 185, p681 * 175, p681 * 119);
    v1037.closePath();
    f89(v1037, p683[0]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 110, p681 * 518);
    v1037.bezierCurveTo(p681 * 111.5, p681 * 533, p681 * 111.5, p681 * 533, p681 * 113, p681 * 548);
    v1037.bezierCurveTo(p681 * 162.5, p681 * 544, p681 * 162.5, p681 * 544, p681 * 212, p681 * 540);
    v1037.bezierCurveTo(p681 * 312, p681 * 535, p681 * 281, p681 * 665, p681 * 225, p681 * 665);
    v1037.bezierCurveTo(p681 * 227, p681 * 686.5, p681 * 227, p681 * 686.5, p681 * 229, p681 * 708);
    v1037.bezierCurveTo(p681 * 343, p681 * 684, p681 * 354, p681 * 496, p681 * 222, p681 * 498);
    v1037.bezierCurveTo(p681 * 165.5, p681 * 503, p681 * 165.5, p681 * 503, p681 * 109, p681 * 508);
    v1037.closePath();
    f89(v1037, p683[0]);
    f94(v1037, p681 * 204, p681 * 693, p681 * 36.013886210738214);
    f89(v1037, p683[0]);
    f94(v1037, p681 * 105, p681 * 518, p681 * 30);
    f89(v1037, p683[0]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 171, p681 * 535);
    v1037.bezierCurveTo(p681 * 139.5, p681 * 537.5, p681 * 139.5, p681 * 537.5, p681 * 108, p681 * 540);
    v1037.bezierCurveTo(p681 * 110, p681 * 527.5, p681 * 110, p681 * 527.5, p681 * 112, p681 * 515);
    v1037.bezierCurveTo(p681 * 148, p681 * 513, p681 * 148, p681 * 513, p681 * 184, p681 * 511);
    v1037.closePath();
    f89(v1037, p683[0]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 244, p681 * 669);
    v1037.bezierCurveTo(p681 * 248.5, p681 * 680, p681 * 248.5, p681 * 680, p681 * 253, p681 * 691);
    v1037.bezierCurveTo(p681 * 239.5, p681 * 697, p681 * 239.5, p681 * 697, p681 * 226, p681 * 703);
    v1037.bezierCurveTo(p681 * 223, p681 * 691.5, p681 * 223, p681 * 691.5, p681 * 220, p681 * 680);
    v1037.closePath();
    f89(v1037, p683[0]);
    v1037.translate(p681 * -25, p681 * -25);
    v1037.globalAlpha = 1;
    v1037.save();
    v1037.translate(p681 * 193.5, p681 * 602.5);
    v1037.rotate(-0.12);
    f90(v1037, p681 * -26.5, p681 * -97.5, p681 * 53, p681 * 195, p681 * 25);
    v1037.restore();
    f89(v1037, p683[1], p683[2], p681 * 16);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 137, p681 * 519);
    v1037.bezierCurveTo(p681 * 182, p681 * 513, p681 * 182, p681 * 513, p681 * 227, p681 * 507);
    v1037.bezierCurveTo(p681 * 214, p681 * 417, p681 * 189, p681 * 304, p681 * 221, p681 * 180);
    v1037.bezierCurveTo(p681 * 191, p681 * 126, p681 * 192, p681 * 105, p681 * 198, p681 * 64);
    v1037.bezierCurveTo(p681 * 123, p681 * 102, p681 * 99, p681 * 285, p681 * 137, p681 * 517);
    v1037.closePath();
    f89(v1037, p683[3], p683[4], p681 * 16);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 175, p681 * 119);
    v1037.bezierCurveTo(p681 * 176, p681 * 142, p681 * 184, p681 * 165, p681 * 197, p681 * 183);
    v1037.bezierCurveTo(p681 * 167, p681 * 325, p681 * 191, p681 * 405, p681 * 202, p681 * 502);
    v1037.bezierCurveTo(p681 * 180, p681 * 503, p681 * 180, p681 * 503, p681 * 158, p681 * 504);
    v1037.bezierCurveTo(p681 * 135, p681 * 396, p681 * 134, p681 * 185, p681 * 175, p681 * 119);
    v1037.closePath();
    f89(v1037, p683[5]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 110, p681 * 518);
    v1037.bezierCurveTo(p681 * 111.5, p681 * 533, p681 * 111.5, p681 * 533, p681 * 113, p681 * 548);
    v1037.bezierCurveTo(p681 * 162.5, p681 * 544, p681 * 162.5, p681 * 544, p681 * 212, p681 * 540);
    v1037.bezierCurveTo(p681 * 312, p681 * 535, p681 * 281, p681 * 665, p681 * 225, p681 * 665);
    v1037.bezierCurveTo(p681 * 227, p681 * 686.5, p681 * 227, p681 * 686.5, p681 * 229, p681 * 708);
    v1037.bezierCurveTo(p681 * 343, p681 * 684, p681 * 354, p681 * 496, p681 * 222, p681 * 498);
    v1037.bezierCurveTo(p681 * 165.5, p681 * 503, p681 * 165.5, p681 * 503, p681 * 109, p681 * 508);
    v1037.closePath();
    f89(v1037, p683[6], p683[4], p681 * 16);
    f94(v1037, p681 * 204, p681 * 693, p681 * 36.013886210738214);
    f89(v1037, p683[6], p683[4], p681 * 16);
    f94(v1037, p681 * 105, p681 * 518, p681 * 30);
    f89(v1037, p683[6], p683[4], p681 * 16);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 171, p681 * 535);
    v1037.bezierCurveTo(p681 * 139.5, p681 * 537.5, p681 * 139.5, p681 * 537.5, p681 * 108, p681 * 540);
    v1037.bezierCurveTo(p681 * 110, p681 * 527.5, p681 * 110, p681 * 527.5, p681 * 112, p681 * 515);
    v1037.bezierCurveTo(p681 * 148, p681 * 513, p681 * 148, p681 * 513, p681 * 184, p681 * 511);
    v1037.closePath();
    f89(v1037, p683[6]);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p681 * 244, p681 * 669);
    v1037.bezierCurveTo(p681 * 248.5, p681 * 680, p681 * 248.5, p681 * 680, p681 * 253, p681 * 691);
    v1037.bezierCurveTo(p681 * 239.5, p681 * 697, p681 * 239.5, p681 * 697, p681 * 226, p681 * 703);
    v1037.bezierCurveTo(p681 * 223, p681 * 691.5, p681 * 223, p681 * 691.5, p681 * 220, p681 * 680);
    v1037.closePath();
    f89(v1037, p683[6]);
    f94(v1037, p681 * 204, p681 * 693, p681 * 17.029386365926403);
    f89(v1037, p683[7]);
    f94(v1037, p681 * 106, p681 * 518, p681 * 12);
    f89(v1037, p683[7]);
    return v1036;
  }
  function f139(p684, p685, p686, p687) {
    var v1038 = document.createElement("canvas");
    var v1039 = v1038.getContext("2d");
    v1038.width = p684 * 121;
    v1038.height = p684 * 130;
    v1039.translate(0, p684 * 20);
    if (p686 == 1) {
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 6, p684 * 23);
      v1039.bezierCurveTo(p684 * 6, p684 * 46, p684 * 6, p684 * 46, p684 * 6, p684 * 69);
      v1039.bezierCurveTo(p684 * 21, p684 * 69, p684 * 21, p684 * 69, p684 * 36, p684 * 69);
      v1039.bezierCurveTo(p684 * 45.5, p684 * 78.5, p684 * 45.5, p684 * 78.5, p684 * 55, p684 * 88);
      v1039.bezierCurveTo(p684 * 55.5, p684 * 45.5, p684 * 55.5, p684 * 45.5, p684 * 56, p684 * 3);
      v1039.bezierCurveTo(p684 * 47, p684 * 14, p684 * 47, p684 * 14, p684 * 38, p684 * 25);
      v1039.bezierCurveTo(p684 * 23, p684 * 25, p684 * 23, p684 * 25, p684 * 6, p684 * 23);
      v1039.closePath();
      f89(v1039, vVVVVUndefined173, p685[3], p684 * 13);
    }
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p684 * 6, p684 * 23);
    v1039.bezierCurveTo(p684 * 6, p684 * 46, p684 * 6, p684 * 46, p684 * 6, p684 * 69);
    v1039.bezierCurveTo(p684 * 21, p684 * 69, p684 * 21, p684 * 69, p684 * 36, p684 * 69);
    v1039.bezierCurveTo(p684 * 45.5, p684 * 78.5, p684 * 45.5, p684 * 78.5, p684 * 55, p684 * 88);
    v1039.bezierCurveTo(p684 * 55.5, p684 * 45.5, p684 * 55.5, p684 * 45.5, p684 * 56, p684 * 3);
    v1039.bezierCurveTo(p684 * 47, p684 * 14, p684 * 47, p684 * 14, p684 * 38, p684 * 25);
    v1039.bezierCurveTo(p684 * 23, p684 * 25, p684 * 23, p684 * 25, p684 * 6, p684 * 23);
    v1039.closePath();
    f89(v1039, p685[1], p685[2], p684 * 4);
    if (p687 == 1) {
      v1039.translate(0, p684 * 5);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 67, p684 * 30);
      v1039.bezierCurveTo(p684 * 73, p684 * 47, p684 * 69, p684 * 45, p684 * 67, p684 * 58);
      f89(v1039, undefined, p685[0], p684 * 10);
      v1039.translate(3, p684 * 0);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 70, p684 * 17);
      v1039.bezierCurveTo(p684 * 83, p684 * 45, p684 * 76, p684 * 55, p684 * 70, p684 * 69);
      f89(v1039, undefined, p685[0], p684 * 10);
      v1039.translate(3, p684 * 0);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 76, p684 * 8);
      v1039.bezierCurveTo(p684 * 88, p684 * 31, p684 * 89, p684 * 55, p684 * 76, p684 * 79);
      f89(v1039, undefined, p685[0], p684 * 10);
      if (p686 == 1) {
        v1039.translate(p684 * -6, p684 * -5);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 67, p684 * 30);
        v1039.bezierCurveTo(p684 * 73, p684 * 47, p684 * 69, p684 * 45, p684 * 67, p684 * 58);
        f89(v1039, vVVVVUndefined1722, p685[3], p684 * 18);
        v1039.translate(3, p684 * 0);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 70, p684 * 17);
        v1039.bezierCurveTo(p684 * 83, p684 * 45, p684 * 76, p684 * 55, p684 * 70, p684 * 69);
        f89(v1039, vVVUndefined142, p685[3], p684 * 18);
        v1039.translate(3, p684 * 0);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 76, p684 * 8);
        v1039.bezierCurveTo(p684 * 88, p684 * 31, p684 * 89, p684 * 55, p684 * 76, p684 * 79);
        f89(v1039, undefined, p685[3], p684 * 18);
        v1039.translate(-6, p684 * 0);
      } else {
        v1039.translate(p684 * -6, p684 * -5);
      }
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 67, p684 * 30);
      v1039.bezierCurveTo(p684 * 73, p684 * 47, p684 * 69, p684 * 45, p684 * 67, p684 * 58);
      f89(v1039, vVVUndefined18, p685[2], p684 * 10);
      v1039.translate(3, p684 * 0);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 70, p684 * 17);
      v1039.bezierCurveTo(p684 * 83, p684 * 45, p684 * 76, p684 * 55, p684 * 70, p684 * 69);
      f89(v1039, vVVUndefined142, p685[2], p684 * 10);
      v1039.translate(3, p684 * 0);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 76, p684 * 8);
      v1039.bezierCurveTo(p684 * 88, p684 * 31, p684 * 89, p684 * 55, p684 * 76, p684 * 79);
      f89(v1039, vVVVUndefined142, p685[2], p684 * 10);
    } else {
      if (p686 == 1) {
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 108, p684 * 27);
        v1039.bezierCurveTo(p684 * 94, p684 * 45.5, p684 * 94, p684 * 45.5, p684 * 80, p684 * 64);
        v1039.closePath();
        f89(v1039, vVVVVUndefined1722, p685[3], p684 * 18);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 79, p684 * 30);
        v1039.bezierCurveTo(p684 * 93, p684 * 47, p684 * 93, p684 * 47, p684 * 107, p684 * 64);
        v1039.closePath();
        f89(v1039, vVVUndefined152, p685[3], p684 * 18);
      } else {
        v1039.translate(0, p684 * -5);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 108, p684 * 27);
        v1039.bezierCurveTo(p684 * 94, p684 * 45.5, p684 * 94, p684 * 45.5, p684 * 80, p684 * 64);
        v1039.closePath();
        f89(v1039, vVUndefined15, p685[0], p684 * 7);
        v1039.beginPath();
        v1039.lineCap = "round";
        v1039.lineJoin = "round";
        v1039.moveTo(p684 * 79, p684 * 30);
        v1039.bezierCurveTo(p684 * 93, p684 * 47, p684 * 93, p684 * 47, p684 * 107, p684 * 64);
        v1039.closePath();
        f89(v1039, undefined, p685[0], p684 * 7);
        v1039.translate(0, p684 * 5);
      }
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 108, p684 * 27);
      v1039.bezierCurveTo(p684 * 94, p684 * 45.5, p684 * 94, p684 * 45.5, p684 * 80, p684 * 64);
      v1039.closePath();
      f89(v1039, undefined, p685[2], p684 * 7);
      v1039.beginPath();
      v1039.lineCap = "round";
      v1039.lineJoin = "round";
      v1039.moveTo(p684 * 79, p684 * 30);
      v1039.bezierCurveTo(p684 * 93, p684 * 47, p684 * 93, p684 * 47, p684 * 107, p684 * 64);
      v1039.closePath();
      f89(v1039, vVVVUndefined172, p685[2], p684 * 7);
    }
    return v1038;
  }
  function f140(p688, p689, p690) {
    var v1040 = document.createElement("canvas");
    var v1041 = v1040.getContext("2d");
    v1040.width = p688 * 290;
    v1040.height = p688 * 525;
    v1041.globalAlpha = p689 ? 0.5 : 1;
    v1041.translate(p688 * 20, p688 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p688 * 111, p688 * 351);
    v1041.bezierCurveTo(p688 * 129, p688 * 218, p688 * 129, p688 * 218, p688 * 147, p688 * 85);
    v1041.bezierCurveTo(p688 * 167, p688 * 65.5, p688 * 167, p688 * 65.5, p688 * 187, p688 * 46);
    v1041.bezierCurveTo(p688 * 201.5, p688 * 70.5, p688 * 201.5, p688 * 70.5, p688 * 216, p688 * 95);
    v1041.bezierCurveTo(p688 * 194.5, p688 * 227.5, p688 * 194.5, p688 * 227.5, p688 * 173, p688 * 360);
    v1041.closePath();
    f89(v1041, p690[0]);
    v1041.save();
    v1041.translate(p688 * 131, p688 * 425.5);
    v1041.rotate(0.16);
    f90(v1041, p688 * -14, p688 * -56.5, p688 * 28, p688 * 113, p688 * 8);
    v1041.restore();
    f89(v1041, p690[0]);
    f94(v1041, p688 * 122, p688 * 480, p688 * 18.439088914585774);
    f89(v1041, p690[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p688 * 79, p688 * 371);
    v1041.bezierCurveTo(p688 * 131, p688 * 373, p688 * 145, p688 * 378, p688 * 197, p688 * 388);
    v1041.bezierCurveTo(p688 * 205, p688 * 382.5, p688 * 205, p688 * 382.5, p688 * 213, p688 * 377);
    v1041.bezierCurveTo(p688 * 167, p688 * 352, p688 * 117, p688 * 345, p688 * 69, p688 * 355);
    v1041.closePath();
    f89(v1041, p690[0]);
    v1041.globalAlpha = 1;
    v1041.translate(p688 * -20, p688 * -20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p688 * 111, p688 * 351);
    v1041.bezierCurveTo(p688 * 129, p688 * 218, p688 * 129, p688 * 218, p688 * 147, p688 * 85);
    v1041.bezierCurveTo(p688 * 167, p688 * 65.5, p688 * 167, p688 * 65.5, p688 * 187, p688 * 46);
    v1041.bezierCurveTo(p688 * 201.5, p688 * 70.5, p688 * 201.5, p688 * 70.5, p688 * 216, p688 * 95);
    v1041.bezierCurveTo(p688 * 194.5, p688 * 227.5, p688 * 194.5, p688 * 227.5, p688 * 173, p688 * 360);
    v1041.closePath();
    f89(v1041, p690[1], p690[2], p688 * 12.5);
    v1041.save();
    v1041.translate(p688 * 131, p688 * 425.5);
    v1041.rotate(0.16);
    f90(v1041, p688 * -14, p688 * -56.5, p688 * 28, p688 * 113, p688 * 8);
    v1041.restore();
    f89(v1041, p690[4], p690[5], p688 * 12.5);
    f94(v1041, p688 * 122, p688 * 480, p688 * 18.439088914585774);
    f89(v1041, p690[4], p690[5], p688 * 12.5);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p688 * 79, p688 * 371);
    v1041.bezierCurveTo(p688 * 131, p688 * 373, p688 * 145, p688 * 378, p688 * 197, p688 * 388);
    v1041.bezierCurveTo(p688 * 205, p688 * 382.5, p688 * 205, p688 * 382.5, p688 * 213, p688 * 377);
    v1041.bezierCurveTo(p688 * 167, p688 * 352, p688 * 117, p688 * 345, p688 * 69, p688 * 355);
    v1041.closePath();
    f89(v1041, p690[4], p690[5], p688 * 12.5);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p688 * 128, p688 * 345);
    v1041.bezierCurveTo(p688 * 142, p688 * 345, p688 * 147, p688 * 346, p688 * 158, p688 * 349);
    v1041.bezierCurveTo(p688 * 177.5, p688 * 224.5, p688 * 177.5, p688 * 224.5, p688 * 197, p688 * 100);
    v1041.bezierCurveTo(p688 * 190.5, p688 * 84.5, p688 * 190.5, p688 * 84.5, p688 * 184, p688 * 69);
    v1041.bezierCurveTo(p688 * 173.5, p688 * 82, p688 * 173.5, p688 * 82, p688 * 163, p688 * 95);
    v1041.closePath();
    f89(v1041, p690[3]);
    return v1040;
  }
  function f141(p691, p692, p693) {
    var v1042 = document.createElement("canvas");
    var v1043 = v1042.getContext("2d");
    v1042.width = p691 * 170;
    v1042.height = p691 * 469;
    v1043.globalAlpha = p692 ? 0.5 : 1;
    v1043.translate(p691 * 20, p691 * 20);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 88, p691 * 30);
    v1043.bezierCurveTo(p691 * 96, p691 * 49.5, p691 * 96, p691 * 49.5, p691 * 104, p691 * 69);
    v1043.bezierCurveTo(p691 * 105.5, p691 * 41.5, p691 * 105.5, p691 * 41.5, p691 * 107, p691 * 14);
    v1043.bezierCurveTo(p691 * 114, p691 * 9.5, p691 * 114, p691 * 9.5, p691 * 121, p691 * 5);
    v1043.bezierCurveTo(p691 * 135.5, p691 * 27.5, p691 * 135.5, p691 * 27.5, p691 * 150, p691 * 50);
    v1043.bezierCurveTo(p691 * 110.5, p691 * 286, p691 * 110.5, p691 * 286, p691 * 103, p691 * 331);
    v1043.bezierCurveTo(p691 * 69.5, p691 * 325, p691 * 69.5, p691 * 325, p691 * 36, p691 * 319);
    v1043.bezierCurveTo(p691 * 56.5, p691 * 180, p691 * 56.5, p691 * 180, p691 * 77, p691 * 41);
    v1043.closePath();
    f89(v1043, p693[0]);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 118, p691 * 31);
    v1043.bezierCurveTo(p691 * 125, p691 * 43, p691 * 125, p691 * 43, p691 * 132, p691 * 55);
    v1043.bezierCurveTo(p691 * 109.5, p691 * 185.5, p691 * 109.5, p691 * 185.5, p691 * 87, p691 * 316);
    v1043.bezierCurveTo(p691 * 72, p691 * 313.5, p691 * 72, p691 * 313.5, p691 * 57, p691 * 311);
    v1043.bezierCurveTo(p691 * 76.5, p691 * 181, p691 * 76.5, p691 * 181, p691 * 96, p691 * 51);
    v1043.closePath();
    f89(v1043, p693[0]);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 56, p691 * 328);
    v1043.bezierCurveTo(p691 * 47, p691 * 385.5, p691 * 47, p691 * 385.5, p691 * 38, p691 * 443);
    v1043.bezierCurveTo(p691 * 52, p691 * 446, p691 * 52, p691 * 446, p691 * 66, p691 * 449);
    v1043.bezierCurveTo(p691 * 76.5, p691 * 388.5, p691 * 76.5, p691 * 388.5, p691 * 87, p691 * 328);
    v1043.closePath();
    f89(v1043, p693[0]);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 74, p691 * 302);
    v1043.bezierCurveTo(p691 * 104, p691 * 316.5, p691 * 104, p691 * 316.5, p691 * 134, p691 * 331);
    v1043.bezierCurveTo(p691 * 133, p691 * 341, p691 * 133, p691 * 341, p691 * 132, p691 * 351);
    v1043.bezierCurveTo(p691 * 69.5, p691 * 342, p691 * 69.5, p691 * 342, p691 * 7, p691 * 333);
    v1043.bezierCurveTo(p691 * 8, p691 * 323, p691 * 8, p691 * 323, p691 * 9, p691 * 313);
    v1043.closePath();
    f89(v1043, p693[0]);
    v1043.save();
    v1043.translate(p691 * 51.5, p691 * 440.5);
    v1043.rotate(0.2);
    f90(v1043, p691 * -20.5, p691 * -18.5, p691 * 41, p691 * 37, p691 * 10);
    v1043.restore();
    f89(v1043, p693[0]);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 73, p691 * 316);
    v1043.bezierCurveTo(p691 * 90, p691 * 324.5, p691 * 90, p691 * 324.5, p691 * 107, p691 * 333);
    v1043.bezierCurveTo(p691 * 70, p691 * 327.5, p691 * 70, p691 * 327.5, p691 * 33, p691 * 322);
    v1043.closePath();
    f89(v1043, p693[0]);
    v1043.globalAlpha = 1;
    v1043.translate(p691 * -20, p691 * -20);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 88, p691 * 30);
    v1043.bezierCurveTo(p691 * 96, p691 * 49.5, p691 * 96, p691 * 49.5, p691 * 104, p691 * 69);
    v1043.bezierCurveTo(p691 * 105.5, p691 * 41.5, p691 * 105.5, p691 * 41.5, p691 * 107, p691 * 14);
    v1043.bezierCurveTo(p691 * 114, p691 * 9.5, p691 * 114, p691 * 9.5, p691 * 121, p691 * 5);
    v1043.bezierCurveTo(p691 * 135.5, p691 * 27.5, p691 * 135.5, p691 * 27.5, p691 * 150, p691 * 50);
    v1043.bezierCurveTo(p691 * 110.5, p691 * 286, p691 * 110.5, p691 * 286, p691 * 103, p691 * 331);
    v1043.bezierCurveTo(p691 * 69.5, p691 * 325, p691 * 69.5, p691 * 325, p691 * 36, p691 * 319);
    v1043.bezierCurveTo(p691 * 56.5, p691 * 180, p691 * 56.5, p691 * 180, p691 * 77, p691 * 41);
    v1043.closePath();
    f89(v1043, p693[1], p693[2], p691 * 7);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 118, p691 * 31);
    v1043.bezierCurveTo(p691 * 125, p691 * 43, p691 * 125, p691 * 43, p691 * 132, p691 * 55);
    v1043.bezierCurveTo(p691 * 109.5, p691 * 185.5, p691 * 109.5, p691 * 185.5, p691 * 87, p691 * 316);
    v1043.bezierCurveTo(p691 * 72, p691 * 313.5, p691 * 72, p691 * 313.5, p691 * 57, p691 * 311);
    v1043.bezierCurveTo(p691 * 76.5, p691 * 181, p691 * 76.5, p691 * 181, p691 * 96, p691 * 51);
    v1043.closePath();
    f89(v1043, p693[3]);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 88, p691 * 30);
    v1043.bezierCurveTo(p691 * 96, p691 * 49.5, p691 * 96, p691 * 49.5, p691 * 104, p691 * 69);
    v1043.bezierCurveTo(p691 * 105.5, p691 * 41.5, p691 * 105.5, p691 * 41.5, p691 * 107, p691 * 14);
    v1043.bezierCurveTo(p691 * 114, p691 * 9.5, p691 * 114, p691 * 9.5, p691 * 121, p691 * 5);
    v1043.bezierCurveTo(p691 * 135.5, p691 * 27.5, p691 * 135.5, p691 * 27.5, p691 * 150, p691 * 50);
    v1043.bezierCurveTo(p691 * 110.5, p691 * 286, p691 * 110.5, p691 * 286, p691 * 103, p691 * 331);
    v1043.bezierCurveTo(p691 * 69.5, p691 * 325, p691 * 69.5, p691 * 325, p691 * 36, p691 * 319);
    v1043.bezierCurveTo(p691 * 56.5, p691 * 180, p691 * 56.5, p691 * 180, p691 * 77, p691 * 41);
    v1043.closePath();
    f89(v1043, vVVUndefined18, p693[2], p691 * 7);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 56, p691 * 328);
    v1043.bezierCurveTo(p691 * 47, p691 * 385.5, p691 * 47, p691 * 385.5, p691 * 38, p691 * 443);
    v1043.bezierCurveTo(p691 * 52, p691 * 446, p691 * 52, p691 * 446, p691 * 66, p691 * 449);
    v1043.bezierCurveTo(p691 * 76.5, p691 * 388.5, p691 * 76.5, p691 * 388.5, p691 * 87, p691 * 328);
    v1043.closePath();
    f89(v1043, p693[4], p693[5], p691 * 7);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 74, p691 * 302);
    v1043.bezierCurveTo(p691 * 104, p691 * 316.5, p691 * 104, p691 * 316.5, p691 * 134, p691 * 331);
    v1043.bezierCurveTo(p691 * 133, p691 * 341, p691 * 133, p691 * 341, p691 * 132, p691 * 351);
    v1043.bezierCurveTo(p691 * 69.5, p691 * 342, p691 * 69.5, p691 * 342, p691 * 7, p691 * 333);
    v1043.bezierCurveTo(p691 * 8, p691 * 323, p691 * 8, p691 * 323, p691 * 9, p691 * 313);
    v1043.closePath();
    f89(v1043, p693[4], p693[5], p691 * 7);
    v1043.save();
    v1043.translate(p691 * 51.5, p691 * 440.5);
    v1043.rotate(0.2);
    f90(v1043, p691 * -20.5, p691 * -18.5, p691 * 41, p691 * 37, p691 * 10);
    v1043.restore();
    f89(v1043, p693[4], p693[5], p691 * 7);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p691 * 73, p691 * 316);
    v1043.bezierCurveTo(p691 * 90, p691 * 324.5, p691 * 90, p691 * 324.5, p691 * 107, p691 * 333);
    v1043.bezierCurveTo(p691 * 70, p691 * 327.5, p691 * 70, p691 * 327.5, p691 * 33, p691 * 322);
    v1043.closePath();
    f89(v1043, p693[6]);
    return v1042;
  }
  function f142(p694, p695, p696, p697) {
    var v1044 = document.createElement("canvas");
    var v1045 = v1044.getContext("2d");
    v1044.width = p694 * 283;
    v1044.height = p694 * 224;
    v1045.translate(0, p694 * 15);
    v1045.globalAlpha = 0.5;
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 93, p694 * 55);
    v1045.bezierCurveTo(p694 * 127, p694 * 27, p694 * 195, p694 * 42, p694 * 213, p694 * 78);
    v1045.bezierCurveTo(p694 * 254, p694 * 134, p694 * 226, p694 * 198, p694 * 153, p694 * 197);
    v1045.bezierCurveTo(p694 * 59, p694 * 204, p694 * 56, p694 * 158, p694 * 51, p694 * 115);
    v1045.bezierCurveTo(p694 * 50, p694 * 93, p694 * 81, p694 * 62, p694 * 90, p694 * 57);
    v1045.closePath();
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 100, p694 * 33);
    v1045.bezierCurveTo(p694 * 85, p694 * 62, p694 * 102, p694 * 66, p694 * 110, p694 * 83);
    v1045.closePath();
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 181, p694 * 32);
    v1045.bezierCurveTo(p694 * 196, p694 * 62, p694 * 181, p694 * 68, p694 * 178, p694 * 69);
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 225, p694 * 52);
    v1045.bezierCurveTo(p694 * 228, p694 * 78, p694 * 207, p694 * 77, p694 * 192, p694 * 88);
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 34, p694 * 134);
    v1045.bezierCurveTo(p694 * 46, p694 * 111, p694 * 57, p694 * 111, p694 * 79, p694 * 109);
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 249, p694 * 135);
    v1045.bezierCurveTo(p694 * 233, p694 * 107, p694 * 212, p694 * 112, p694 * 202, p694 * 115);
    f89(v1045, p696[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 56, p694 * 50);
    v1045.bezierCurveTo(p694 * 56, p694 * 82, p694 * 73, p694 * 82, p694 * 93, p694 * 89);
    f89(v1045, p696[0]);
    v1045.translate(0, p694 * -15);
    v1045.globalAlpha = 1;
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 100, p694 * 33);
    v1045.bezierCurveTo(p694 * 85, p694 * 62, p694 * 102, p694 * 66, p694 * 110, p694 * 83);
    f89(v1045, undefined, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 181, p694 * 32);
    v1045.bezierCurveTo(p694 * 196, p694 * 62, p694 * 181, p694 * 68, p694 * 178, p694 * 69);
    f89(v1045, vVVVUndefined1422, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 225, p694 * 52);
    v1045.bezierCurveTo(p694 * 228, p694 * 78, p694 * 207, p694 * 77, p694 * 192, p694 * 88);
    f89(v1045, undefined, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 34, p694 * 134);
    v1045.bezierCurveTo(p694 * 46, p694 * 111, p694 * 57, p694 * 111, p694 * 79, p694 * 109);
    f89(v1045, vVVVVUndefined173, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 249, p694 * 135);
    v1045.bezierCurveTo(p694 * 233, p694 * 107, p694 * 212, p694 * 112, p694 * 202, p694 * 115);
    f89(v1045, vVVUndefined17, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 56, p694 * 50);
    v1045.bezierCurveTo(p694 * 56, p694 * 82, p694 * 73, p694 * 82, p694 * 93, p694 * 89);
    f89(v1045, undefined, p696[2], p694 * 40);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 93, p694 * 55);
    v1045.bezierCurveTo(p694 * 127, p694 * 27, p694 * 195, p694 * 42, p694 * 213, p694 * 78);
    v1045.bezierCurveTo(p694 * 254, p694 * 134, p694 * 226, p694 * 198, p694 * 153, p694 * 197);
    v1045.bezierCurveTo(p694 * 59, p694 * 204, p694 * 56, p694 * 158, p694 * 51, p694 * 115);
    v1045.bezierCurveTo(p694 * 50, p694 * 93, p694 * 81, p694 * 62, p694 * 90, p694 * 57);
    v1045.closePath();
    f89(v1045, p696[1], p696[2], p694 * 10);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 100, p694 * 33);
    v1045.bezierCurveTo(p694 * 85, p694 * 62, p694 * 102, p694 * 66, p694 * 110, p694 * 83);
    f89(v1045, undefined, p696[1], p694 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 181, p694 * 32);
    v1045.bezierCurveTo(p694 * 196, p694 * 62, p694 * 181, p694 * 68, p694 * 178, p694 * 69);
    f89(v1045, vVUndefined6, p696[1], p694 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 225, p694 * 52);
    v1045.bezierCurveTo(p694 * 228, p694 * 78, p694 * 207, p694 * 77, p694 * 192, p694 * 88);
    f89(v1045, undefined, p696[1], p694 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 34, p694 * 134);
    v1045.bezierCurveTo(p694 * 46, p694 * 111, p694 * 57, p694 * 111, p694 * 79, p694 * 109);
    f89(v1045, vVUndefined16, p696[1], p694 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 249, p694 * 135);
    v1045.bezierCurveTo(p694 * 233, p694 * 107, p694 * 212, p694 * 112, p694 * 202, p694 * 115);
    f89(v1045, vVUndefined, p696[1], p694 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p694 * 56, p694 * 50);
    v1045.bezierCurveTo(p694 * 56, p694 * 82, p694 * 73, p694 * 82, p694 * 93, p694 * 89);
    f89(v1045, vVVUndefined142, p696[1], p694 * 20);
    f94(v1045, p694 * 101, p694 * 155, p694 * 20.591260281974);
    f89(v1045, p696[3]);
    f94(v1045, p694 * 180, p694 * 155, p694 * 20.591260281974);
    f89(v1045, p696[3]);
    f94(v1045, p694 * 95, p694 * 148, p694 * 7.211102550927978);
    f89(v1045, p696[4]);
    f94(v1045, p694 * 173, p694 * 148, p694 * 7.211102550927978);
    f89(v1045, p696[4]);
    if (p697 === 1) {
      v1045.beginPath();
      v1045.lineCap = "round";
      v1045.lineJoin = "round";
      v1045.moveTo(p694 * 191, p694 * 107);
      v1045.bezierCurveTo(p694 * 180, p694 * 104, p694 * 175, p694 * 101, p694 * 180, p694 * 95);
      v1045.bezierCurveTo(p694 * 180, p694 * 95, p694 * 181, p694 * 99, p694 * 188, p694 * 103);
      v1045.bezierCurveTo(p694 * 191, p694 * 101, p694 * 191, p694 * 95, p694 * 190, p694 * 91);
      v1045.bezierCurveTo(p694 * 190, p694 * 91, p694 * 196, p694 * 89, p694 * 195, p694 * 99);
      v1045.closePath();
      f89(v1045, p696[2]);
      v1045.beginPath();
      v1045.lineCap = "round";
      v1045.lineJoin = "round";
      v1045.moveTo(p694 * 206, p694 * 98);
      v1045.bezierCurveTo(p694 * 203, p694 * 95, p694 * 200, p694 * 93, p694 * 198, p694 * 101);
      v1045.bezierCurveTo(p694 * 194, p694 * 109, p694 * 193, p694 * 109, p694 * 196, p694 * 110);
      v1045.bezierCurveTo(p694 * 206, p694 * 115, p694 * 209, p694 * 114, p694 * 211, p694 * 111);
      v1045.bezierCurveTo(p694 * 211, p694 * 106, p694 * 208, p694 * 108, p694 * 203, p694 * 108);
      v1045.bezierCurveTo(p694 * 193, p694 * 107, p694 * 204, p694 * 101, p694 * 206, p694 * 99);
      v1045.closePath();
      f89(v1045, p696[2]);
      v1045.beginPath();
      v1045.lineCap = "round";
      v1045.lineJoin = "round";
      v1045.moveTo(p694 * 172, p694 * 111);
      v1045.bezierCurveTo(p694 * 172, p694 * 106, p694 * 174, p694 * 105, p694 * 185, p694 * 109);
      v1045.bezierCurveTo(p694 * 190, p694 * 109, p694 * 189, p694 * 114, p694 * 185, p694 * 120);
      v1045.bezierCurveTo(p694 * 181, p694 * 125, p694 * 180, p694 * 126, p694 * 176, p694 * 122);
      v1045.bezierCurveTo(p694 * 182, p694 * 119, p694 * 187, p694 * 110, p694 * 182, p694 * 112);
      v1045.closePath();
      f89(v1045, p696[2]);
      v1045.beginPath();
      v1045.lineCap = "round";
      v1045.lineJoin = "round";
      v1045.moveTo(p694 * 202, p694 * 125);
      v1045.bezierCurveTo(p694 * 197, p694 * 117, p694 * 193, p694 * 116, p694 * 193, p694 * 120);
      v1045.bezierCurveTo(p694 * 192.5, p694 * 124.5, p694 * 192.5, p694 * 124.5, p694 * 192, p694 * 129);
      v1045.bezierCurveTo(p694 * 188, p694 * 129, p694 * 187, p694 * 124, p694 * 189, p694 * 120);
      v1045.bezierCurveTo(p694 * 191, p694 * 110, p694 * 192, p694 * 110, p694 * 200, p694 * 116);
      v1045.bezierCurveTo(p694 * 208, p694 * 120, p694 * 207, p694 * 123, p694 * 202, p694 * 125);
      v1045.closePath();
      f89(v1045, p696[2]);
    }
    return v1044;
  }
  function f143(p698, p699, p700) {
    var v1046 = document.createElement("canvas");
    var v1047 = v1046.getContext("2d");
    var v1048 = p698 * 105;
    var v1049 = p698 * 125;
    var v1050 = p698 * 4;
    var v1051 = p698 * 10;
    var v1052 = p698 * 5;
    var v1053 = p698 * 10;
    var v1054 = p698 * 110;
    var v1055 = v1053 / 2;
    var v1056 = v1054 / 2;
    v1046.width = v1048;
    v1046.height = v1049;
    v1047.save();
    v1047.globalAlpha = p699 ? 0.5 : 1;
    v1047.translate(v1048 / 2 + p698 * 8, v1049 / 2 + v1052);
    f90(v1047, -v1055, -v1056, v1053, v1054, v1051);
    f89(v1047, p699 ? p700[0] : p700[1]);
    v1047.translate(p698 * -130 + v1052, p698 * -128 + v1052);
    v1047.beginPath();
    v1047.bezierCurveTo(p698 * 159, p698 * 93, p698 * 156, p698 * 99, p698 * 154, p698 * 102);
    v1047.bezierCurveTo(p698 * 128, p698 * 92, p698 * 90, p698 * 93, p698 * 72, p698 * 96);
    v1047.bezierCurveTo(p698 * 68, p698 * 84, p698 * 143, p698 * 73, p698 * 162, p698 * 86);
    v1047.closePath();
    f89(v1047, p700[2]);
    v1047.restore();
    v1047.translate(v1048 / 2 + 8, v1049 / 2);
    v1047.globalAlpha = 1;
    f90(v1047, -v1055, -v1056, v1053, v1054, v1051);
    f89(v1047, p700[3], p700[4], v1050);
    v1047.translate(p698 * -130, p698 * -125);
    v1047.beginPath();
    v1047.bezierCurveTo(p698 * 159, p698 * 93, p698 * 156, p698 * 99, p698 * 154, p698 * 102);
    v1047.bezierCurveTo(p698 * 128, p698 * 92, p698 * 90, p698 * 93, p698 * 72, p698 * 96);
    v1047.bezierCurveTo(p698 * 68, p698 * 84, p698 * 143, p698 * 73, p698 * 162, p698 * 86);
    v1047.closePath();
    f89(v1047, p700[5], p700[6], v1050);
    return v1046;
  }
  function f144(p701, p702, p703) {
    var v1057 = document.createElement("canvas");
    var v1058 = v1057.getContext("2d");
    var v1059 = (v1066 = p701 * 450) / 2;
    var v1060 = (v1067 = p701 * 145) / 2;
    var v1061 = p701 * 10;
    var v1062 = p701 * 300;
    var v1063 = p701 * 30;
    var v1064 = v1062 / 2;
    var v1065 = v1063 / 2;
    if (p703) {
      var v1066 = p701 * 145;
      var v1067 = p701 * 450;
      v1057.width = v1066;
      v1057.height = v1067;
      v1058.rotate(Math.PI / 2);
      v1058.save();
      v1058.globalAlpha = 0.5;
      f90(v1058, p701 * 100, p701 * -110, v1062, v1063, v1061);
      f89(v1058, p702[0]);
      v1058.translate(p701 * 178, p701 * -98);
      f90(v1058, -v1064, -v1065 - p701 * 6, p701 * 100, p701 * 100, v1061);
      f89(v1058, p702[0]);
      v1058.translate(p701 * -50, p701 * 5);
      f90(v1058, p701 * 220, p701 * -15, p701 * 90, p701 * 90, v1061);
      f89(v1058, p702[0]);
      v1058.restore();
      v1058.save();
      v1058.globalAlpha = 1;
      v1058.translate(p701 * 250, p701 * -63);
      f90(v1058, -v1064 - p701 * 20, -v1065, v1062, v1063, v1061);
      f89(v1058, p702[1], p702[2], 4);
      v1058.translate(p701 * -70, p701 * -40);
      f90(v1058, -v1064 - p701 * 20, -v1065, p701 * 100, p701 * 100, v1061);
      f89(v1058, p702[3], p702[4], 4);
      v1058.translate(p701 * -70, p701 * 15);
      f90(v1058, p701 * 220, p701 * -22, p701 * 90, p701 * 90, v1061);
      f89(v1058, p702[3], p702[4], 4);
      f90(v1058, p701 * 230, p701 * -12, p701 * 55, p701 * 55, v1061);
      f89(v1058, p702[5]);
      v1058.translate(p701 * -70, 0);
      f90(v1058, p701 * -15, p701 * -2, p701 * 60, p701 * 60, v1061);
      f89(v1058, p702[5]);
      v1058.restore();
    } else {
      v1057.width = v1066;
      v1057.height = v1067;
      v1058.save();
      v1058.globalAlpha = 0.5;
      v1058.translate(v1059, v1060 + p701 * 10);
      f90(v1058, -v1064, -v1065, v1062, v1063, v1061);
      f89(v1058, p702[0]);
      v1058.translate(p701 * -65, p701 * -25);
      f90(v1058, -v1064, -v1065 - p701 * 6, p701 * 100, p701 * 100, p701 * 15);
      f89(v1058, p702[0]);
      v1058.translate(p701 * -35, p701 * -5);
      f90(v1058, p701 * 220, p701 * -15, p701 * 90, p701 * 90, p701 * 15);
      f89(v1058, p702[0]);
      v1058.restore();
      v1058.save();
      v1058.globalAlpha = 1;
      v1058.translate(p701 * 240, p701 * 70);
      f90(v1058, -v1064, -v1065, v1062, v1063, v1061);
      f89(v1058, p702[1], p702[2], 4);
      v1058.translate(p701 * -60, p701 * -40);
      f90(v1058, -v1064 - p701 * 20, -v1065, p701 * 100, p701 * 100, p701 * 15);
      f89(v1058, p702[3], p702[4], 4);
      v1058.translate(p701 * -55, p701 * 10);
      f90(v1058, p701 * 220, p701 * -22, p701 * 90, p701 * 90, p701 * 15);
      f89(v1058, p702[3], p702[4], 4);
      f90(v1058, p701 * 240, p701 * -12, p701 * 55, p701 * 55, p701 * 12);
      f89(v1058, p702[5]);
      v1058.translate(p701 * 45, p701 * 0);
      f90(v1058, p701 * -145, p701 * -2, p701 * 60, p701 * 60, p701 * 12);
      f89(v1058, p702[5]);
      v1058.restore();
    }
    return v1057;
  }
  function f145(p704, p705) {
    var v1068 = document.createElement("canvas");
    var v1069 = v1068.getContext("2d");
    var v1070 = Math.max(p705.width, p704.width);
    var v1071 = Math.max(p705.height, p704.height);
    v1068.width = v1070;
    v1068.height = v1071;
    v1069.drawImage(p704, (v1070 - p704.width) / 2, (v1071 - p704.height) / 2);
    v1069.drawImage(p705, (v1070 - p705.width) / 2, (v1071 - p705.height) / 2);
    return v1068;
  }
  function f146(p706, p707, p708) {
    var v1072 = document.createElement("canvas");
    var v1073 = v1072.getContext("2d");
    v1072.width = p706 * 100;
    v1072.height = p706 * 250;
    v1073.translate(p706 * -135, p706 * -75);
    v1073.globalAlpha = p707 ? 0.8 : 1;
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 178.5, p706 * 238.03125);
    v1073.bezierCurveTo(p706 * 177, p706 * 175.03125, p706 * 177, p706 * 175.03125, p706 * 175.5, p706 * 112.03125);
    v1073.bezierCurveTo(p706 * 184.5, p706 * 100.53125, p706 * 184.5, p706 * 100.53125, p706 * 193.5, p706 * 89.03125);
    v1073.bezierCurveTo(p706 * 202, p706 * 100.03125, p706 * 202, p706 * 100.03125, p706 * 210.5, p706 * 111.03125);
    v1073.bezierCurveTo(p706 * 209.5, p706 * 174.03125, p706 * 209.5, p706 * 174.03125, p706 * 208.5, p706 * 237.03125);
    v1073.closePath();
    f89(v1073, p708[0]);
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 155.5, p706 * 239.03125);
    v1073.bezierCurveTo(p706 * 194, p706 * 238.53125, p706 * 194, p706 * 238.53125, p706 * 232.5, p706 * 238.03125);
    v1073.bezierCurveTo(p706 * 232.5, p706 * 243.03125, p706 * 232.5, p706 * 243.03125, p706 * 232.5, p706 * 248.03125);
    v1073.bezierCurveTo(p706 * 194, p706 * 248.53125, p706 * 194, p706 * 248.53125, p706 * 155.5, p706 * 249.03125);
    v1073.closePath();
    f89(v1073, p708[0]);
    f94(v1073, p706 * 160.5, p706 * 243.03125, p706 * 7);
    f89(v1073, p708[0]);
    f94(v1073, p706 * 227.5, p706 * 242.03125, p706 * 7);
    f89(v1073, p708[0]);
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 185.5, p706 * 253.03125);
    v1073.bezierCurveTo(p706 * 193.5, p706 * 253.03125, p706 * 193.5, p706 * 253.03125, p706 * 201.5, p706 * 253.03125);
    v1073.bezierCurveTo(p706 * 201.5, p706 * 276.03125, p706 * 201.5, p706 * 276.03125, p706 * 201.5, p706 * 299.03125);
    v1073.bezierCurveTo(p706 * 194.5, p706 * 299.03125, p706 * 194.5, p706 * 299.03125, p706 * 187.5, p706 * 299.03125);
    v1073.closePath();
    f89(v1073, p708[0], p708[0], p706 * 5);
    f94(v1073, p706 * 194, p706 * 298, p706 * 9);
    f89(v1073, p708[0], p708[0], p706 * 5);
    v1073.globalAlpha = 1;
    v1073.translate(p706 * -10, p706 * 10);
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 178.5, p706 * 238.03125);
    v1073.bezierCurveTo(p706 * 177, p706 * 175.03125, p706 * 177, p706 * 175.03125, p706 * 175.5, p706 * 112.03125);
    v1073.bezierCurveTo(p706 * 184.5, p706 * 100.53125, p706 * 184.5, p706 * 100.53125, p706 * 193.5, p706 * 89.03125);
    v1073.bezierCurveTo(p706 * 202, p706 * 100.03125, p706 * 202, p706 * 100.03125, p706 * 210.5, p706 * 111.03125);
    v1073.bezierCurveTo(p706 * 209.5, p706 * 174.03125, p706 * 209.5, p706 * 174.03125, p706 * 208.5, p706 * 237.03125);
    v1073.closePath();
    f89(v1073, p708[3], p708[4], p706 * 5);
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 155.5, p706 * 239.03125);
    v1073.bezierCurveTo(p706 * 194, p706 * 238.53125, p706 * 194, p706 * 238.53125, p706 * 232.5, p706 * 238.03125);
    v1073.bezierCurveTo(p706 * 232.5, p706 * 243.03125, p706 * 232.5, p706 * 243.03125, p706 * 232.5, p706 * 248.03125);
    v1073.bezierCurveTo(p706 * 194, p706 * 248.53125, p706 * 194, p706 * 248.53125, p706 * 155.5, p706 * 249.03125);
    v1073.closePath();
    f89(v1073, p708[1], p708[2], p706 * 5);
    f94(v1073, p706 * 160.5, p706 * 243.03125, p706 * 7);
    f89(v1073, p708[1], p708[2], p706 * 5);
    f94(v1073, p706 * 227.5, p706 * 242.03125, p706 * 7);
    f89(v1073, p708[1], p708[2], p706 * 5);
    v1073.beginPath();
    v1073.lineCap = "round";
    v1073.lineJoin = "round";
    v1073.moveTo(p706 * 185.5, p706 * 253.03125);
    v1073.bezierCurveTo(p706 * 193.5, p706 * 253.03125, p706 * 193.5, p706 * 253.03125, p706 * 201.5, p706 * 253.03125);
    v1073.bezierCurveTo(p706 * 201.5, p706 * 276.03125, p706 * 201.5, p706 * 276.03125, p706 * 201.5, p706 * 299.03125);
    v1073.bezierCurveTo(p706 * 194.5, p706 * 299.03125, p706 * 194.5, p706 * 299.03125, p706 * 187.5, p706 * 299.03125);
    v1073.closePath();
    f89(v1073, p708[1], p708[2], p706 * 7);
    f94(v1073, p706 * 194, p706 * 298, p706 * 9);
    f89(v1073, p708[1], p708[2], p706 * 7);
    return v1072;
  }
  function f147(p709, p710, p711) {
    var v1074 = document.createElement("canvas");
    var v1075 = v1074.getContext("2d");
    v1074.width = p709 * 131;
    v1074.height = p709 * 121;
    v1075.translate(0, p709 * 20);
    v1075.beginPath();
    v1075.lineCap = "round";
    v1075.lineJoin = "round";
    v1075.moveTo(p709 * 110, p709 * 59);
    v1075.bezierCurveTo(p709 * 93, p709 * 61.5, p709 * 93, p709 * 61.5, p709 * 76, p709 * 64);
    v1075.bezierCurveTo(p709 * 84.5, p709 * 78.5, p709 * 84.5, p709 * 78.5, p709 * 93, p709 * 93);
    v1075.bezierCurveTo(p709 * 70, p709 * 111, p709 * 43, p709 * 103, p709 * 30, p709 * 82);
    v1075.bezierCurveTo(p709 * 17, p709 * 61, p709 * 25, p709 * 30, p709 * 51, p709 * 21);
    v1075.bezierCurveTo(p709 * 66, p709 * 15, p709 * 83, p709 * 18, p709 * 96, p709 * 29);
    v1075.bezierCurveTo(p709 * 104, p709 * 35, p709 * 109, p709 * 47, p709 * 110, p709 * 58);
    v1075.closePath();
    f89(v1075, p711[0]);
    v1075.globalAlpha = 1;
    v1075.translate(0, p709 * -20);
    v1075.beginPath();
    v1075.lineCap = "round";
    v1075.lineJoin = "round";
    v1075.moveTo(p709 * 110, p709 * 59);
    v1075.bezierCurveTo(p709 * 93, p709 * 61.5, p709 * 93, p709 * 61.5, p709 * 76, p709 * 64);
    v1075.bezierCurveTo(p709 * 84.5, p709 * 78.5, p709 * 84.5, p709 * 78.5, p709 * 93, p709 * 93);
    v1075.bezierCurveTo(p709 * 70, p709 * 111, p709 * 43, p709 * 103, p709 * 30, p709 * 82);
    v1075.bezierCurveTo(p709 * 17, p709 * 61, p709 * 25, p709 * 30, p709 * 51, p709 * 21);
    v1075.bezierCurveTo(p709 * 66, p709 * 15, p709 * 83, p709 * 18, p709 * 96, p709 * 29);
    v1075.bezierCurveTo(p709 * 104, p709 * 35, p709 * 109, p709 * 47, p709 * 110, p709 * 58);
    v1075.closePath();
    f89(v1075, p711[1], p711[2], p709 * 10);
    return v1074;
  }
  function f148(p712, p713, p714) {
    var v1076 = document.createElement("canvas");
    var v1077 = v1076.getContext("2d");
    v1076.width = p712 * 290;
    v1076.height = p712 * 525;
    v1077.globalAlpha = p713 ? 0.5 : 1;
    v1077.translate(p712 * 20, p712 * 20);
    v1077.translate(p712 * -20, p712 * -20);
    v1077.save();
    v1077.translate(p712 * 132, p712 * 423);
    v1077.rotate(0.16);
    f90(v1077, p712 * -14, p712 * -61, p712 * 28, p712 * 122, p712 * 10);
    v1077.restore();
    f89(v1077, p714[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 100, p712 * 344);
    v1077.bezierCurveTo(p712 * 123, p712 * 214, p712 * 123, p712 * 214, p712 * 146, p712 * 84);
    v1077.bezierCurveTo(p712 * 166.5, p712 * 65, p712 * 166.5, p712 * 65, p712 * 187, p712 * 46);
    v1077.bezierCurveTo(p712 * 201, p712 * 71, p712 * 201, p712 * 71, p712 * 215, p712 * 96);
    v1077.bezierCurveTo(p712 * 199.5, p712 * 226.5, p712 * 199.5, p712 * 226.5, p712 * 184, p712 * 357);
    v1077.bezierCurveTo(p712 * 162.5, p712 * 362.5, p712 * 162.5, p712 * 362.5, p712 * 141, p712 * 368);
    v1077.closePath();
    f89(v1077, p714[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 75, p712 * 328);
    v1077.bezierCurveTo(p712 * 88, p712 * 336.5, p712 * 88, p712 * 336.5, p712 * 101, p712 * 345);
    v1077.bezierCurveTo(p712 * 123.5, p712 * 337.5, p712 * 123.5, p712 * 337.5, p712 * 146, p712 * 330);
    v1077.bezierCurveTo(p712 * 165, p712 * 343.5, p712 * 165, p712 * 343.5, p712 * 184, p712 * 357);
    v1077.bezierCurveTo(p712 * 198.5, p712 * 353, p712 * 198.5, p712 * 353, p712 * 213, p712 * 349);
    v1077.bezierCurveTo(p712 * 200.5, p712 * 364.5, p712 * 200.5, p712 * 364.5, p712 * 188, p712 * 380);
    v1077.bezierCurveTo(p712 * 163, p712 * 380.5, p712 * 163, p712 * 380.5, p712 * 138, p712 * 381);
    v1077.bezierCurveTo(p712 * 112, p712 * 373.5, p712 * 112, p712 * 373.5, p712 * 86, p712 * 366);
    v1077.closePath();
    f89(v1077, p714[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 121, p712 * 332);
    v1077.bezierCurveTo(p712 * 133.5, p712 * 327.5, p712 * 133.5, p712 * 327.5, p712 * 146, p712 * 323);
    v1077.bezierCurveTo(p712 * 157, p712 * 330.5, p712 * 157, p712 * 330.5, p712 * 168, p712 * 338);
    v1077.bezierCurveTo(p712 * 182.5, p712 * 219.5, p712 * 182.5, p712 * 219.5, p712 * 197, p712 * 101);
    v1077.bezierCurveTo(p712 * 190, p712 * 84.5, p712 * 190, p712 * 84.5, p712 * 183, p712 * 68);
    v1077.bezierCurveTo(p712 * 172.5, p712 * 81, p712 * 172.5, p712 * 81, p712 * 162, p712 * 94);
    v1077.closePath();
    f89(v1077, p714[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 105, p712 * 463);
    v1077.bezierCurveTo(p712 * 124.5, p712 * 466, p712 * 124.5, p712 * 466, p712 * 144, p712 * 469);
    v1077.bezierCurveTo(p712 * 145.5, p712 * 478.5, p712 * 145.5, p712 * 478.5, p712 * 147, p712 * 488);
    v1077.bezierCurveTo(p712 * 133.5, p712 * 495.5, p712 * 133.5, p712 * 495.5, p712 * 120, p712 * 503);
    v1077.bezierCurveTo(p712 * 108.5, p712 * 492, p712 * 108.5, p712 * 492, p712 * 97, p712 * 481);
    v1077.closePath();
    f89(v1077, p714[0]);
    v1077.globalAlpha = 1;
    v1077.translate(p712 * -20, p712 * -20);
    v1077.save();
    v1077.translate(p712 * 132, p712 * 423);
    v1077.rotate(0.16);
    f90(v1077, p712 * -14, p712 * -61, p712 * 28, p712 * 122, p712 * 10);
    v1077.restore();
    f89(v1077, p714[4], p714[5], p712 * 12.5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 100, p712 * 344);
    v1077.bezierCurveTo(p712 * 123, p712 * 214, p712 * 123, p712 * 214, p712 * 146, p712 * 84);
    v1077.bezierCurveTo(p712 * 166.5, p712 * 65, p712 * 166.5, p712 * 65, p712 * 187, p712 * 46);
    v1077.bezierCurveTo(p712 * 201, p712 * 71, p712 * 201, p712 * 71, p712 * 215, p712 * 96);
    v1077.bezierCurveTo(p712 * 199.5, p712 * 226.5, p712 * 199.5, p712 * 226.5, p712 * 184, p712 * 357);
    v1077.bezierCurveTo(p712 * 162.5, p712 * 362.5, p712 * 162.5, p712 * 362.5, p712 * 141, p712 * 368);
    v1077.closePath();
    f89(v1077, p714[1], p714[2], p712 * 12.5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 75, p712 * 328);
    v1077.bezierCurveTo(p712 * 88, p712 * 336.5, p712 * 88, p712 * 336.5, p712 * 101, p712 * 345);
    v1077.bezierCurveTo(p712 * 123.5, p712 * 337.5, p712 * 123.5, p712 * 337.5, p712 * 146, p712 * 330);
    v1077.bezierCurveTo(p712 * 165, p712 * 343.5, p712 * 165, p712 * 343.5, p712 * 184, p712 * 357);
    v1077.bezierCurveTo(p712 * 198.5, p712 * 353, p712 * 198.5, p712 * 353, p712 * 213, p712 * 349);
    v1077.bezierCurveTo(p712 * 200.5, p712 * 364.5, p712 * 200.5, p712 * 364.5, p712 * 188, p712 * 380);
    v1077.bezierCurveTo(p712 * 163, p712 * 380.5, p712 * 163, p712 * 380.5, p712 * 138, p712 * 381);
    v1077.bezierCurveTo(p712 * 112, p712 * 373.5, p712 * 112, p712 * 373.5, p712 * 86, p712 * 366);
    v1077.closePath();
    f89(v1077, p714[1], p714[2], p712 * 12.5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 121, p712 * 332);
    v1077.bezierCurveTo(p712 * 133.5, p712 * 327.5, p712 * 133.5, p712 * 327.5, p712 * 146, p712 * 323);
    v1077.bezierCurveTo(p712 * 157, p712 * 330.5, p712 * 157, p712 * 330.5, p712 * 168, p712 * 338);
    v1077.bezierCurveTo(p712 * 182.5, p712 * 219.5, p712 * 182.5, p712 * 219.5, p712 * 197, p712 * 101);
    v1077.bezierCurveTo(p712 * 190, p712 * 84.5, p712 * 190, p712 * 84.5, p712 * 183, p712 * 68);
    v1077.bezierCurveTo(p712 * 172.5, p712 * 81, p712 * 172.5, p712 * 81, p712 * 162, p712 * 94);
    v1077.closePath();
    f89(v1077, p714[3]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 105, p712 * 463);
    v1077.bezierCurveTo(p712 * 124.5, p712 * 466, p712 * 124.5, p712 * 466, p712 * 144, p712 * 469);
    v1077.bezierCurveTo(p712 * 145.5, p712 * 478.5, p712 * 145.5, p712 * 478.5, p712 * 147, p712 * 488);
    v1077.bezierCurveTo(p712 * 133.5, p712 * 495.5, p712 * 133.5, p712 * 495.5, p712 * 120, p712 * 503);
    v1077.bezierCurveTo(p712 * 108.5, p712 * 492, p712 * 108.5, p712 * 492, p712 * 97, p712 * 481);
    v1077.closePath();
    f89(v1077, p714[1], p714[2], p712 * 12.5);
    v1077.globalAlpha = 1;
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p712 * 143, p712 * 346);
    v1077.bezierCurveTo(p712 * 125, p712 * 352, p712 * 125, p712 * 352, p712 * 107, p712 * 358);
    v1077.bezierCurveTo(p712 * 124, p712 * 363, p712 * 140, p712 * 368, p712 * 141, p712 * 368);
    v1077.bezierCurveTo(p712 * 156.5, p712 * 367, p712 * 156.5, p712 * 367, p712 * 172, p712 * 366);
    v1077.closePath();
    f89(v1077, p714[3]);
    return v1076;
  }
  function f149(p715, p716, p717) {
    var v1078 = document.createElement("canvas");
    var v1079 = v1078.getContext("2d");
    v1078.width = p715 * 217;
    v1078.height = p715 * 215;
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 79, p715 * 113);
    v1079.bezierCurveTo(p715 * 135, p715 * 98, p715 * 136, p715 * 96, p715 * 142, p715 * 97);
    v1079.bezierCurveTo(p715 * 167, p715 * 106, p715 * 167, p715 * 106, p715 * 171, p715 * 109);
    v1079.bezierCurveTo(p715 * 173, p715 * 120, p715 * 173, p715 * 134, p715 * 169, p715 * 141);
    v1079.bezierCurveTo(p715 * 140, p715 * 149.5, p715 * 140, p715 * 149.5, p715 * 111, p715 * 158);
    v1079.closePath();
    f89(v1079, p717[1], p717[2], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 154, p715 * 103);
    v1079.bezierCurveTo(p715 * 167, p715 * 91, p715 * 175, p715 * 87, p715 * 176, p715 * 94);
    v1079.bezierCurveTo(p715 * 175, p715 * 102, p715 * 176, p715 * 102, p715 * 186, p715 * 103);
    v1079.bezierCurveTo(p715 * 191, p715 * 104, p715 * 192, p715 * 105, p715 * 185, p715 * 116);
    v1079.bezierCurveTo(p715 * 183, p715 * 120, p715 * 191, p715 * 124, p715 * 189, p715 * 129);
    v1079.bezierCurveTo(p715 * 185, p715 * 139, p715 * 178, p715 * 134, p715 * 166, p715 * 131);
    v1079.closePath();
    f89(v1079, p717[1], p717[2], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 60, p715 * 46);
    v1079.bezierCurveTo(p715 * 60, p715 * 34, p715 * 60, p715 * 29, p715 * 56, p715 * 19);
    v1079.bezierCurveTo(p715 * 52, p715 * 12, p715 * 52, p715 * 16, p715 * 49, p715 * 24);
    v1079.bezierCurveTo(p715 * 48, p715 * 27, p715 * 46, p715 * 28, p715 * 39, p715 * 27);
    v1079.bezierCurveTo(p715 * 33, p715 * 26, p715 * 34, p715 * 31, p715 * 35, p715 * 37);
    v1079.bezierCurveTo(p715 * 36, p715 * 41, p715 * 27, p715 * 46, p715 * 29, p715 * 52);
    v1079.bezierCurveTo(p715 * 36, p715 * 55, p715 * 35, p715 * 56, p715 * 31, p715 * 59);
    v1079.bezierCurveTo(p715 * 27, p715 * 65, p715 * 32, p715 * 64, p715 * 35, p715 * 62);
    v1079.closePath();
    f89(v1079, p717[4], p717[5], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 46, p715 * 50);
    v1079.bezierCurveTo(p715 * 51, p715 * 35, p715 * 70, p715 * 32, p715 * 78, p715 * 29);
    v1079.bezierCurveTo(p715 * 84, p715 * 27, p715 * 113, p715 * 36, p715 * 127, p715 * 41);
    v1079.bezierCurveTo(p715 * 140, p715 * 47, p715 * 147, p715 * 69, p715 * 137, p715 * 73);
    v1079.bezierCurveTo(p715 * 124, p715 * 92, p715 * 117, p715 * 92, p715 * 109, p715 * 94);
    v1079.bezierCurveTo(p715 * 101, p715 * 96, p715 * 89, p715 * 92, p715 * 65, p715 * 83);
    v1079.bezierCurveTo(p715 * 54, p715 * 80, p715 * 46, p715 * 58, p715 * 46, p715 * 51);
    v1079.closePath();
    f89(v1079, p717[4], p717[5], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 51, p715 * 40);
    v1079.bezierCurveTo(p715 * 49, p715 * 34, p715 * 49, p715 * 34, p715 * 47, p715 * 28);
    v1079.bezierCurveTo(p715 * 38, p715 * 28, p715 * 34, p715 * 27, p715 * 37, p715 * 37);
    v1079.bezierCurveTo(p715 * 43, p715 * 40.5, p715 * 43, p715 * 40.5, p715 * 49, p715 * 44);
    v1079.closePath();
    f89(v1079, p717[7]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 29, p715 * 48);
    v1079.bezierCurveTo(p715 * 38, p715 * 49, p715 * 38, p715 * 49, p715 * 47, p715 * 50);
    v1079.bezierCurveTo(p715 * 46.5, p715 * 51.5, p715 * 46.5, p715 * 51.5, p715 * 46, p715 * 53);
    v1079.bezierCurveTo(p715 * 40, p715 * 53.5, p715 * 40, p715 * 53.5, p715 * 34, p715 * 54);
    v1079.bezierCurveTo(p715 * 29, p715 * 51, p715 * 32, p715 * 51.5, p715 * 30, p715 * 49);
    v1079.closePath();
    f89(v1079, p717[7]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 89, p715 * 61);
    v1079.bezierCurveTo(p715 * 101, p715 * 70, p715 * 109, p715 * 90, p715 * 102, p715 * 90);
    v1079.bezierCurveTo(p715 * 97, p715 * 91, p715 * 87, p715 * 91, p715 * 60, p715 * 80);
    v1079.bezierCurveTo(p715 * 48, p715 * 65, p715 * 46, p715 * 56, p715 * 48, p715 * 53);
    v1079.bezierCurveTo(p715 * 50, p715 * 52, p715 * 66, p715 * 56, p715 * 89, p715 * 61);
    v1079.closePath();
    f89(v1079, p717[7]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 99, p715 * 59);
    v1079.bezierCurveTo(p715 * 115, p715 * 45, p715 * 125, p715 * 42, p715 * 129, p715 * 47);
    v1079.bezierCurveTo(p715 * 138, p715 * 56, p715 * 140, p715 * 63, p715 * 138, p715 * 67);
    v1079.bezierCurveTo(p715 * 131, p715 * 80, p715 * 122, p715 * 87, p715 * 114, p715 * 90);
    v1079.bezierCurveTo(p715 * 105, p715 * 80, p715 * 95, p715 * 62, p715 * 98, p715 * 61);
    v1079.closePath();
    f89(v1079, p717[7]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 118, p715 * 62);
    v1079.bezierCurveTo(p715 * 139, p715 * 45, p715 * 153, p715 * 40, p715 * 150, p715 * 48);
    v1079.bezierCurveTo(p715 * 145, p715 * 57, p715 * 157, p715 * 63, p715 * 157, p715 * 70);
    v1079.bezierCurveTo(p715 * 157, p715 * 74, p715 * 142, p715 * 77, p715 * 142, p715 * 85);
    v1079.bezierCurveTo(p715 * 143, p715 * 91, p715 * 141, p715 * 92, p715 * 135, p715 * 90);
    v1079.bezierCurveTo(p715 * 132, p715 * 90, p715 * 132, p715 * 96, p715 * 124, p715 * 99);
    v1079.bezierCurveTo(p715 * 118, p715 * 93, p715 * 116, p715 * 77, p715 * 116, p715 * 64);
    v1079.closePath();
    f89(v1079, p717[4], p717[5], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 90, p715 * 130);
    v1079.bezierCurveTo(p715 * 157, p715 * 115, p715 * 165, p715 * 111, p715 * 167, p715 * 115);
    v1079.bezierCurveTo(p715 * 170, p715 * 117, p715 * 171, p715 * 135, p715 * 167, p715 * 141);
    v1079.bezierCurveTo(p715 * 135.5, p715 * 149.5, p715 * 135.5, p715 * 149.5, p715 * 104, p715 * 158);
    v1079.closePath();
    f89(v1079, p717[8]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 53, p715 * 119);
    v1079.bezierCurveTo(p715 * 46, p715 * 120, p715 * 40, p715 * 118, p715 * 34, p715 * 116);
    v1079.bezierCurveTo(p715 * 28, p715 * 111, p715 * 41, p715 * 112, p715 * 39, p715 * 108);
    v1079.bezierCurveTo(p715 * 36, p715 * 100, p715 * 49, p715 * 102, p715 * 53, p715 * 95);
    v1079.bezierCurveTo(p715 * 57, p715 * 84, p715 * 58, p715 * 85, p715 * 63, p715 * 93);
    v1079.bezierCurveTo(p715 * 68, p715 * 96, p715 * 72, p715 * 94, p715 * 80, p715 * 88);
    v1079.bezierCurveTo(p715 * 80, p715 * 96, p715 * 78, p715 * 107, p715 * 66, p715 * 115);
    v1079.closePath();
    f89(v1079, p717[9], p717[10], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 118, p715 * 64);
    v1079.bezierCurveTo(p715 * 133.5, p715 * 57, p715 * 133.5, p715 * 57, p715 * 149, p715 * 50);
    v1079.bezierCurveTo(p715 * 145, p715 * 54, p715 * 154, p715 * 65, p715 * 157, p715 * 68);
    v1079.bezierCurveTo(p715 * 138.5, p715 * 66.5, p715 * 138.5, p715 * 66.5, p715 * 120, p715 * 65);
    v1079.closePath();
    f89(v1079, p717[8]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 118, p715 * 65);
    v1079.bezierCurveTo(p715 * 129, p715 * 77, p715 * 129, p715 * 77, p715 * 140, p715 * 89);
    v1079.bezierCurveTo(p715 * 131, p715 * 89, p715 * 130, p715 * 92, p715 * 128, p715 * 96);
    v1079.bezierCurveTo(p715 * 123.5, p715 * 82, p715 * 123.5, p715 * 82, p715 * 119, p715 * 68);
    v1079.closePath();
    f89(v1079, p717[8]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 51, p715 * 112);
    v1079.bezierCurveTo(p715 * 63, p715 * 108, p715 * 78, p715 * 111, p715 * 88, p715 * 112);
    v1079.bezierCurveTo(p715 * 98, p715 * 122, p715 * 117, p715 * 136, p715 * 125, p715 * 157);
    v1079.bezierCurveTo(p715 * 123, p715 * 180, p715 * 123, p715 * 185, p715 * 118, p715 * 186);
    v1079.bezierCurveTo(p715 * 101, p715 * 190, p715 * 89, p715 * 191, p715 * 79, p715 * 187);
    v1079.bezierCurveTo(p715 * 53, p715 * 165, p715 * 50, p715 * 153, p715 * 47, p715 * 144);
    v1079.bezierCurveTo(p715 * 46, p715 * 128, p715 * 46, p715 * 124, p715 * 50, p715 * 112);
    v1079.closePath();
    f89(v1079, p717[9], p717[10], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 50, p715 * 114);
    v1079.bezierCurveTo(p715 * 81, p715 * 149, p715 * 80, p715 * 147, p715 * 80, p715 * 149);
    v1079.bezierCurveTo(p715 * 82, p715 * 155, p715 * 80, p715 * 182, p715 * 74, p715 * 182);
    v1079.bezierCurveTo(p715 * 60, p715 * 172, p715 * 52, p715 * 157, p715 * 47, p715 * 144);
    v1079.closePath();
    f89(v1079, p717[11], p717[11], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 85, p715 * 152);
    v1079.bezierCurveTo(p715 * 99, p715 * 150, p715 * 109, p715 * 152, p715 * 119, p715 * 156);
    v1079.bezierCurveTo(p715 * 122, p715 * 163, p715 * 122, p715 * 174, p715 * 117, p715 * 182);
    v1079.closePath();
    v1079.bezierCurveTo(p715 * 93, p715 * 188, p715 * 82, p715 * 187, p715 * 83, p715 * 179);
    f89(v1079, p717[11], p717[11], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 104, p715 * 166);
    v1079.bezierCurveTo(p715 * 133, p715 * 165, p715 * 142, p715 * 168, p715 * 137, p715 * 173);
    v1079.bezierCurveTo(p715 * 127, p715 * 177, p715 * 137, p715 * 195, p715 * 126, p715 * 196);
    v1079.bezierCurveTo(p715 * 112, p715 * 195, p715 * 112, p715 * 194, p715 * 109, p715 * 199);
    v1079.bezierCurveTo(p715 * 105, p715 * 205, p715 * 102, p715 * 195, p715 * 96, p715 * 197);
    v1079.bezierCurveTo(p715 * 84, p715 * 201, p715 * 88, p715 * 198, p715 * 90, p715 * 187);
    v1079.bezierCurveTo(p715 * 96, p715 * 171, p715 * 97, p715 * 170, p715 * 103, p715 * 167);
    v1079.closePath();
    f89(v1079, p717[9], p717[10], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 105, p715 * 168);
    v1079.bezierCurveTo(p715 * 118, p715 * 172.5, p715 * 118, p715 * 172.5, p715 * 131, p715 * 177);
    v1079.bezierCurveTo(p715 * 133, p715 * 190, p715 * 132, p715 * 199, p715 * 116, p715 * 194);
    v1079.bezierCurveTo(p715 * 110, p715 * 182, p715 * 110, p715 * 182, p715 * 104, p715 * 170);
    v1079.closePath();
    f89(v1079, p717[10]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 102, p715 * 169);
    v1079.bezierCurveTo(p715 * 100.5, p715 * 182, p715 * 100.5, p715 * 182, p715 * 99, p715 * 195);
    v1079.bezierCurveTo(p715 * 93.5, p715 * 196.5, p715 * 93.5, p715 * 196.5, p715 * 88, p715 * 198);
    v1079.bezierCurveTo(p715 * 94, p715 * 176, p715 * 96, p715 * 174, p715 * 101, p715 * 168);
    v1079.closePath();
    f89(v1079, p717[9], p717[9], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 64, p715 * 107);
    v1079.bezierCurveTo(p715 * 64, p715 * 101, p715 * 64, p715 * 101, p715 * 64, p715 * 95);
    v1079.bezierCurveTo(p715 * 57, p715 * 86, p715 * 57, p715 * 84, p715 * 53, p715 * 97);
    v1079.bezierCurveTo(p715 * 55, p715 * 103.5, p715 * 55, p715 * 103.5, p715 * 57, p715 * 110);
    v1079.closePath();
    f89(v1079, p717[11], p717[11], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 40, p715 * 108);
    v1079.bezierCurveTo(p715 * 46.5, p715 * 111, p715 * 46.5, p715 * 111, p715 * 53, p715 * 114);
    v1079.bezierCurveTo(p715 * 50.5, p715 * 117, p715 * 50.5, p715 * 117, p715 * 48, p715 * 120);
    v1079.bezierCurveTo(p715 * 40.5, p715 * 117.5, p715 * 40.5, p715 * 117.5, p715 * 33, p715 * 115);
    v1079.bezierCurveTo(p715 * 36, p715 * 112, p715 * 36, p715 * 112, p715 * 39, p715 * 109);
    v1079.closePath();
    f89(v1079, p717[11], p717[11], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 189, p715 * 106);
    v1079.bezierCurveTo(p715 * 178.5, p715 * 110.5, p715 * 178.5, p715 * 110.5, p715 * 168, p715 * 115);
    v1079.bezierCurveTo(p715 * 168.5, p715 * 119, p715 * 168.5, p715 * 119, p715 * 169, p715 * 123);
    v1079.bezierCurveTo(p715 * 179, p715 * 124.5, p715 * 179, p715 * 124.5, p715 * 189, p715 * 126);
    v1079.bezierCurveTo(p715 * 182, p715 * 118, p715 * 183, p715 * 115, p715 * 188, p715 * 106);
    v1079.closePath();
    f89(v1079, p717[8]);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 69, p715 * 178);
    v1079.bezierCurveTo(p715 * 69, p715 * 141, p715 * 70, p715 * 136, p715 * 77, p715 * 137);
    v1079.bezierCurveTo(p715 * 88, p715 * 133, p715 * 101, p715 * 134, p715 * 108, p715 * 137);
    f89(v1079, undefined, p717[3], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 55, p715 * 161);
    v1079.bezierCurveTo(p715 * 54, p715 * 124, p715 * 55, p715 * 119, p715 * 62, p715 * 119);
    v1079.bezierCurveTo(p715 * 74, p715 * 117, p715 * 85, p715 * 117, p715 * 93, p715 * 119);
    f89(v1079, vVVVUndefined173, p717[3], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 91, p715 * 29);
    v1079.bezierCurveTo(p715 * 74, p715 * 33, p715 * 62, p715 * 46, p715 * 57, p715 * 54);
    v1079.bezierCurveTo(p715 * 57, p715 * 63, p715 * 68, p715 * 76, p715 * 77, p715 * 87);
    f89(v1079, undefined, p717[6], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 107, p715 * 33);
    v1079.bezierCurveTo(p715 * 82, p715 * 51, p715 * 80, p715 * 52, p715 * 79, p715 * 59);
    v1079.bezierCurveTo(p715 * 78, p715 * 65, p715 * 93, p715 * 86, p715 * 101, p715 * 93);
    f89(v1079, undefined, p717[6], p715 * 4);
    v1079.beginPath();
    v1079.lineCap = "round";
    v1079.lineJoin = "round";
    v1079.moveTo(p715 * 130, p715 * 98);
    v1079.bezierCurveTo(p715 * 126.5, p715 * 103, p715 * 126.5, p715 * 103, p715 * 123, p715 * 108);
    v1079.bezierCurveTo(p715 * 133.5, p715 * 107, p715 * 133.5, p715 * 107, p715 * 144, p715 * 106);
    v1079.bezierCurveTo(p715 * 138.5, p715 * 110, p715 * 138.5, p715 * 110, p715 * 133, p715 * 114);
    v1079.bezierCurveTo(p715 * 142, p715 * 114, p715 * 142, p715 * 114, p715 * 151, p715 * 114);
    v1079.bezierCurveTo(p715 * 146.5, p715 * 119.5, p715 * 146.5, p715 * 119.5, p715 * 142, p715 * 125);
    v1079.bezierCurveTo(p715 * 146.5, p715 * 127, p715 * 146.5, p715 * 127, p715 * 151, p715 * 129);
    v1079.bezierCurveTo(p715 * 147.5, p715 * 132, p715 * 147.5, p715 * 132, p715 * 144, p715 * 135);
    v1079.bezierCurveTo(p715 * 148, p715 * 137, p715 * 148, p715 * 137, p715 * 152, p715 * 139);
    v1079.bezierCurveTo(p715 * 149, p715 * 142.5, p715 * 149, p715 * 142.5, p715 * 146, p715 * 146);
    f89(v1079, undefined, p717[3], p715 * 4);
    return v1078;
  }
  function f150(p718, p719, p720) {
    var v1080 = document.createElement("canvas");
    var v1081 = v1080.getContext("2d");
    v1080.width = p718 * 290;
    v1080.height = p718 * 525;
    v1081.globalAlpha = p719 ? 0.5 : 1;
    v1081.translate(p718 * 20, p718 * 20);
    v1081.beginPath();
    v1081.lineCap = "round";
    v1081.lineJoin = "round";
    v1081.moveTo(p718 * 111, p718 * 351);
    v1081.bezierCurveTo(p718 * 128.5, p718 * 218.5, p718 * 128.5, p718 * 218.5, p718 * 146, p718 * 86);
    v1081.bezierCurveTo(p718 * 166.5, p718 * 66.5, p718 * 166.5, p718 * 66.5, p718 * 187, p718 * 47);
    v1081.bezierCurveTo(p718 * 201, p718 * 71.5, p718 * 201, p718 * 71.5, p718 * 215, p718 * 96);
    v1081.bezierCurveTo(p718 * 193, p718 * 228.5, p718 * 193, p718 * 228.5, p718 * 171, p718 * 361);
    v1081.closePath();
    f89(v1081, p720[0]);
    v1081.save();
    v1081.translate(p718 * 129.5, p718 * 424);
    v1081.rotate(0.16);
    f90(v1081, p718 * -15.5, p718 * -63, p718 * 31, p718 * 126, p718 * 10);
    v1081.restore();
    f89(v1081, p720[0]);
    f94(v1081, p718 * 121, p718 * 480, p718 * 20.396078054371138);
    f89(v1081, p720[0]);
    v1081.beginPath();
    v1081.lineCap = "round";
    v1081.lineJoin = "round";
    v1081.moveTo(p718 * 90, p718 * 311);
    v1081.bezierCurveTo(p718 * 95, p718 * 324, p718 * 95, p718 * 324, p718 * 100, p718 * 337);
    v1081.bezierCurveTo(p718 * 141.5, p718 * 345.5, p718 * 141.5, p718 * 345.5, p718 * 183, p718 * 354);
    v1081.bezierCurveTo(p718 * 193.5, p718 * 342.5, p718 * 193.5, p718 * 342.5, p718 * 204, p718 * 331);
    v1081.bezierCurveTo(p718 * 202, p718 * 354, p718 * 202, p718 * 354, p718 * 200, p718 * 377);
    v1081.bezierCurveTo(p718 * 147, p718 * 388, p718 * 106, p718 * 371, p718 * 79, p718 * 356);
    v1081.closePath();
    f89(v1081, p720[0]);
    v1081.globalAlpha = 1;
    v1081.translate(p718 * -20, p718 * -20);
    v1081.beginPath();
    v1081.lineCap = "round";
    v1081.lineJoin = "round";
    v1081.moveTo(p718 * 111, p718 * 351);
    v1081.bezierCurveTo(p718 * 128.5, p718 * 218.5, p718 * 128.5, p718 * 218.5, p718 * 146, p718 * 86);
    v1081.bezierCurveTo(p718 * 166.5, p718 * 66.5, p718 * 166.5, p718 * 66.5, p718 * 187, p718 * 47);
    v1081.bezierCurveTo(p718 * 201, p718 * 71.5, p718 * 201, p718 * 71.5, p718 * 215, p718 * 96);
    v1081.bezierCurveTo(p718 * 193, p718 * 228.5, p718 * 193, p718 * 228.5, p718 * 171, p718 * 361);
    v1081.closePath();
    f89(v1081, p720[1], p720[2], p718 * 12.5);
    v1081.save();
    v1081.translate(p718 * 129.5, p718 * 424);
    v1081.rotate(0.16);
    f90(v1081, p718 * -15.5, p718 * -63, p718 * 31, p718 * 126, p718 * 10);
    v1081.restore();
    f89(v1081, p720[4], p720[5], p718 * 12.5);
    f94(v1081, p718 * 121, p718 * 480, p718 * 20.396078054371138);
    f89(v1081, p720[4], p720[5], p718 * 12.5);
    v1081.beginPath();
    v1081.lineCap = "round";
    v1081.lineJoin = "round";
    v1081.moveTo(p718 * 90, p718 * 311);
    v1081.bezierCurveTo(p718 * 95, p718 * 324, p718 * 95, p718 * 324, p718 * 100, p718 * 337);
    v1081.bezierCurveTo(p718 * 141.5, p718 * 345.5, p718 * 141.5, p718 * 345.5, p718 * 183, p718 * 354);
    v1081.bezierCurveTo(p718 * 193.5, p718 * 342.5, p718 * 193.5, p718 * 342.5, p718 * 204, p718 * 331);
    v1081.bezierCurveTo(p718 * 202, p718 * 354, p718 * 202, p718 * 354, p718 * 200, p718 * 377);
    v1081.bezierCurveTo(p718 * 147, p718 * 388, p718 * 106, p718 * 371, p718 * 79, p718 * 356);
    v1081.closePath();
    f89(v1081, p720[1], p720[2], p718 * 12.5);
    return v1080;
  }
  function f151(p721, p722) {
    var v1082 = document.createElement("canvas");
    var v1083 = v1082.getContext("2d");
    v1082.width = p721 * 283;
    v1082.height = p721 * 224;
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 100, p721 * 33);
    v1083.bezierCurveTo(p721 * 85, p721 * 62, p721 * 102, p721 * 66, p721 * 110, p721 * 83);
    f89(v1083, undefined, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 181, p721 * 32);
    v1083.bezierCurveTo(p721 * 196, p721 * 62, p721 * 181, p721 * 68, p721 * 178, p721 * 69);
    f89(v1083, vVVVUndefined1422, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 225, p721 * 52);
    v1083.bezierCurveTo(p721 * 228, p721 * 78, p721 * 207, p721 * 77, p721 * 192, p721 * 88);
    f89(v1083, undefined, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 34, p721 * 134);
    v1083.bezierCurveTo(p721 * 46, p721 * 111, p721 * 57, p721 * 111, p721 * 79, p721 * 109);
    f89(v1083, undefined, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 249, p721 * 135);
    v1083.bezierCurveTo(p721 * 233, p721 * 107, p721 * 212, p721 * 112, p721 * 202, p721 * 115);
    f89(v1083, vVVUndefined18, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 56, p721 * 50);
    v1083.bezierCurveTo(p721 * 56, p721 * 82, p721 * 73, p721 * 82, p721 * 93, p721 * 89);
    f89(v1083, undefined, p722[0], p721 * 40);
    v1083.beginPath();
    v1083.lineCap = "round";
    v1083.lineJoin = "round";
    v1083.moveTo(p721 * 93, p721 * 55);
    v1083.bezierCurveTo(p721 * 124, p721 * 29, p721 * 179, p721 * 44, p721 * 188, p721 * 52);
    v1083.bezierCurveTo(p721 * 207, p721 * 64, p721 * 226, p721 * 94, p721 * 231, p721 * 118);
    v1083.bezierCurveTo(p721 * 236, p721 * 145, p721 * 222, p721 * 184, p721 * 193, p721 * 192);
    v1083.bezierCurveTo(p721 * 147, p721 * 201, p721 * 116, p721 * 200, p721 * 93, p721 * 193);
    v1083.bezierCurveTo(p721 * 61, p721 * 180, p721 * 48, p721 * 147, p721 * 50, p721 * 123);
    v1083.bezierCurveTo(p721 * 50, p721 * 93, p721 * 76, p721 * 66, p721 * 92, p721 * 56);
    v1083.closePath();
    f89(v1083, p722[0]);
    return v1082;
  }
  function f152(p723, p724, p725) {
    var v1084 = document.createElement("canvas");
    var v1085 = v1084.getContext("2d");
    v1084.width = p723 * 118;
    v1084.height = p723 * 114;
    v1085.translate(0, p723 * 10);
    f94(v1085, p723 * 42, p723 * 43, p723 * 24.758836806279895);
    f89(v1085, p725[0]);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 65, p723 * 90);
    v1085.bezierCurveTo(p723 * 72, p723 * 91, p723 * 75, p723 * 92, p723 * 71, p723 * 96);
    v1085.bezierCurveTo(p723 * 65, p723 * 98, p723 * 65, p723 * 94, p723 * 65, p723 * 91);
    v1085.closePath();
    f89(v1085, p725[0]);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 87, p723 * 45);
    v1085.bezierCurveTo(p723 * 108, p723 * 59, p723 * 100, p723 * 86, p723 * 85, p723 * 91);
    v1085.bezierCurveTo(p723 * 80, p723 * 96, p723 * 68, p723 * 95, p723 * 58, p723 * 87);
    v1085.bezierCurveTo(p723 * 53, p723 * 80, p723 * 61, p723 * 64, p723 * 66, p723 * 58);
    v1085.bezierCurveTo(p723 * 73, p723 * 48, p723 * 78, p723 * 44, p723 * 87, p723 * 45);
    v1085.closePath();
    f89(v1085, p725[0]);
    v1085.translate(0, p723 * -10);
    f94(v1085, p723 * 42, p723 * 43, p723 * 24.758836806279895);
    f89(v1085, p725[1], p725[2], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 65, p723 * 90);
    v1085.bezierCurveTo(p723 * 72, p723 * 91, p723 * 75, p723 * 92, p723 * 71, p723 * 96);
    v1085.bezierCurveTo(p723 * 65, p723 * 98, p723 * 65, p723 * 94, p723 * 65, p723 * 91);
    v1085.closePath();
    f89(v1085, p725[1], p725[2], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 87, p723 * 45);
    v1085.bezierCurveTo(p723 * 108, p723 * 59, p723 * 100, p723 * 86, p723 * 85, p723 * 91);
    v1085.bezierCurveTo(p723 * 80, p723 * 96, p723 * 68, p723 * 95, p723 * 58, p723 * 87);
    v1085.bezierCurveTo(p723 * 53, p723 * 80, p723 * 61, p723 * 64, p723 * 66, p723 * 58);
    v1085.bezierCurveTo(p723 * 73, p723 * 48, p723 * 78, p723 * 44, p723 * 87, p723 * 45);
    v1085.closePath();
    f89(v1085, p725[1], p725[2], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 52, p723 * 16);
    v1085.bezierCurveTo(p723 * 55, p723 * 19, p723 * 54, p723 * 20, p723 * 55, p723 * 22);
    v1085.bezierCurveTo(p723 * 52, p723 * 24.5, p723 * 52, p723 * 24.5, p723 * 49, p723 * 27);
    v1085.bezierCurveTo(p723 * 45, p723 * 25, p723 * 45, p723 * 25, p723 * 41, p723 * 23);
    v1085.bezierCurveTo(p723 * 45, p723 * 19, p723 * 48, p723 * 16, p723 * 52, p723 * 16);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 62, p723 * 30);
    v1085.bezierCurveTo(p723 * 66, p723 * 29, p723 * 64, p723 * 30, p723 * 66, p723 * 30);
    v1085.bezierCurveTo(p723 * 67, p723 * 31, p723 * 67, p723 * 31, p723 * 68, p723 * 32);
    v1085.bezierCurveTo(p723 * 66.5, p723 * 33.5, p723 * 66.5, p723 * 33.5, p723 * 65, p723 * 35);
    v1085.bezierCurveTo(p723 * 63.5, p723 * 32.5, p723 * 63.5, p723 * 32.5, p723 * 62, p723 * 30);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 29, p723 * 21);
    v1085.bezierCurveTo(p723 * 31, p723 * 22, p723 * 31, p723 * 26, p723 * 29, p723 * 29);
    v1085.bezierCurveTo(p723 * 26, p723 * 28.5, p723 * 26, p723 * 28.5, p723 * 23, p723 * 28);
    v1085.bezierCurveTo(p723 * 23, p723 * 26.5, p723 * 23, p723 * 26.5, p723 * 23, p723 * 25);
    v1085.bezierCurveTo(p723 * 25, p723 * 23, p723 * 25, p723 * 23, p723 * 27, p723 * 21);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 18, p723 * 36);
    v1085.bezierCurveTo(p723 * 23, p723 * 36, p723 * 24, p723 * 42, p723 * 19, p723 * 46);
    v1085.bezierCurveTo(p723 * 12, p723 * 39, p723 * 15, p723 * 38, p723 * 18, p723 * 37);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 30, p723 * 34);
    v1085.bezierCurveTo(p723 * 35, p723 * 36, p723 * 36, p723 * 39, p723 * 32, p723 * 45);
    v1085.bezierCurveTo(p723 * 25, p723 * 46, p723 * 25, p723 * 44, p723 * 30, p723 * 34);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 59, p723 * 35);
    v1085.bezierCurveTo(p723 * 58, p723 * 27, p723 * 57, p723 * 27, p723 * 52, p723 * 31);
    v1085.bezierCurveTo(p723 * 50, p723 * 36, p723 * 53, p723 * 38, p723 * 58, p723 * 36);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 63, p723 * 46);
    v1085.bezierCurveTo(p723 * 64.5, p723 * 46.5, p723 * 64.5, p723 * 46.5, p723 * 66, p723 * 47);
    v1085.bezierCurveTo(p723 * 70, p723 * 50, p723 * 70, p723 * 53, p723 * 61, p723 * 55);
    v1085.bezierCurveTo(p723 * 62, p723 * 50.5, p723 * 62, p723 * 50.5, p723 * 63, p723 * 46);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 41, p723 * 42);
    v1085.bezierCurveTo(p723 * 47, p723 * 41, p723 * 53, p723 * 47, p723 * 46, p723 * 51);
    v1085.bezierCurveTo(p723 * 38, p723 * 49, p723 * 39, p723 * 46, p723 * 41, p723 * 43);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 44, p723 * 57);
    v1085.bezierCurveTo(p723 * 54, p723 * 57, p723 * 54, p723 * 58, p723 * 55, p723 * 61);
    v1085.bezierCurveTo(p723 * 54, p723 * 63, p723 * 52, p723 * 64, p723 * 48, p723 * 65);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 20, p723 * 52);
    v1085.bezierCurveTo(p723 * 25, p723 * 51, p723 * 27, p723 * 50, p723 * 28, p723 * 54);
    v1085.bezierCurveTo(p723 * 27, p723 * 58, p723 * 24, p723 * 58, p723 * 22, p723 * 58);
    v1085.bezierCurveTo(p723 * 21, p723 * 55.5, p723 * 21, p723 * 55.5, p723 * 20, p723 * 53);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 30, p723 * 61);
    v1085.bezierCurveTo(p723 * 37, p723 * 61, p723 * 39, p723 * 63, p723 * 39, p723 * 68);
    v1085.bezierCurveTo(p723 * 36, p723 * 68.5, p723 * 36, p723 * 68.5, p723 * 33, p723 * 69);
    v1085.bezierCurveTo(p723 * 30.5, p723 * 67.5, p723 * 30.5, p723 * 67.5, p723 * 28, p723 * 66);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 88, p723 * 45);
    v1085.bezierCurveTo(p723 * 90, p723 * 46.5, p723 * 90, p723 * 46.5, p723 * 92, p723 * 48);
    v1085.bezierCurveTo(p723 * 92, p723 * 50, p723 * 92, p723 * 50, p723 * 92, p723 * 52);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 96, p723 * 53);
    v1085.bezierCurveTo(p723 * 97.5, p723 * 55, p723 * 97.5, p723 * 55, p723 * 99, p723 * 57);
    v1085.bezierCurveTo(p723 * 97.5, p723 * 59.5, p723 * 97.5, p723 * 59.5, p723 * 96, p723 * 62);
    v1085.bezierCurveTo(p723 * 93.5, p723 * 60.5, p723 * 93.5, p723 * 60.5, p723 * 91, p723 * 59);
    v1085.bezierCurveTo(p723 * 91.5, p723 * 57, p723 * 91.5, p723 * 57, p723 * 92, p723 * 55);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 92, p723 * 71);
    v1085.bezierCurveTo(p723 * 94.5, p723 * 70.5, p723 * 94.5, p723 * 70.5, p723 * 97, p723 * 70);
    v1085.bezierCurveTo(p723 * 98.5, p723 * 72.5, p723 * 98.5, p723 * 72.5, p723 * 100, p723 * 75);
    v1085.bezierCurveTo(p723 * 97, p723 * 76.5, p723 * 97, p723 * 76.5, p723 * 94, p723 * 78);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 95, p723 * 82);
    v1085.bezierCurveTo(p723 * 96, p723 * 83, p723 * 96, p723 * 83, p723 * 97, p723 * 84);
    v1085.bezierCurveTo(p723 * 97, p723 * 85.5, p723 * 97, p723 * 85.5, p723 * 97, p723 * 87);
    v1085.bezierCurveTo(p723 * 93.5, p723 * 87.5, p723 * 93.5, p723 * 87.5, p723 * 90, p723 * 88);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 86, p723 * 72);
    v1085.bezierCurveTo(p723 * 89, p723 * 76, p723 * 88, p723 * 81, p723 * 85, p723 * 82);
    v1085.bezierCurveTo(p723 * 80, p723 * 80, p723 * 82, p723 * 78, p723 * 85, p723 * 72);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 80, p723 * 86);
    v1085.bezierCurveTo(p723 * 84, p723 * 88, p723 * 86, p723 * 88, p723 * 85, p723 * 93);
    v1085.bezierCurveTo(p723 * 80, p723 * 96, p723 * 79, p723 * 96, p723 * 76, p723 * 91);
    v1085.closePath();
    f89(v1085, p725[3], p725[4], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 84, p723 * 46);
    v1085.bezierCurveTo(p723 * 93, p723 * 51, p723 * 91, p723 * 62, p723 * 80, p723 * 78);
    v1085.bezierCurveTo(p723 * 74, p723 * 86, p723 * 66, p723 * 90, p723 * 60, p723 * 86);
    v1085.bezierCurveTo(p723 * 55, p723 * 79, p723 * 57, p723 * 73, p723 * 67, p723 * 57);
    v1085.bezierCurveTo(p723 * 71, p723 * 51, p723 * 79, p723 * 44, p723 * 84, p723 * 46);
    v1085.closePath();
    f89(v1085, p725[5], p725[6], p723 * 5);
    v1085.beginPath();
    v1085.lineCap = "round";
    v1085.lineJoin = "round";
    v1085.moveTo(p723 * 76, p723 * 60);
    v1085.bezierCurveTo(p723 * 80, p723 * 66, p723 * 75, p723 * 74, p723 * 68, p723 * 74);
    v1085.bezierCurveTo(p723 * 60, p723 * 64, p723 * 68, p723 * 59, p723 * 76, p723 * 59);
    v1085.closePath();
    f89(v1085, p725[7], p725[8], p723 * 5);
    return v1084;
  }
  function f153(p726, p727, p728) {
    var v1086 = document.createElement("canvas");
    var v1087 = v1086.getContext("2d");
    var v1088 = p726 * 70;
    var v1089 = p726 * 90;
    var v1090 = p726 * 4;
    var v1091 = p726 * 5;
    v1086.width = v1088;
    v1086.height = v1089;
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70 + v1091);
    v1087.globalAlpha = 0.5;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 130, p726 * 79, p726 * 132, p726 * 86, p726 * 130, p726 * 93);
    v1087.bezierCurveTo(p726 * 128, p726 * 100, p726 * 121, p726 * 107, p726 * 120, p726 * 107);
    v1087.bezierCurveTo(p726 * 120, p726 * 107, p726 * 115, p726 * 98, p726 * 115, p726 * 92);
    v1087.bezierCurveTo(p726 * 115, p726 * 86, p726 * 119, p726 * 76, p726 * 127, p726 * 73);
    v1087.closePath();
    f89(v1087, "#0d1b1c");
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70 + v1091);
    v1087.globalAlpha = 0.5;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 112, p726 * 109, p726 * 111, p726 * 100, p726 * 106, p726 * 93);
    v1087.bezierCurveTo(p726 * 104, p726 * 90, p726 * 91, p726 * 87, p726 * 91, p726 * 87);
    v1087.bezierCurveTo(p726 * 91, p726 * 88, p726 * 91, p726 * 96, p726 * 94, p726 * 102);
    v1087.bezierCurveTo(p726 * 97, p726 * 108, p726 * 106, p726 * 112, p726 * 113, p726 * 112);
    v1087.closePath();
    f89(v1087, "#0d1b1c");
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70 + v1091);
    v1087.globalAlpha = 0.5;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 108, p726 * 120, p726 * 100, p726 * 119, p726 * 91, p726 * 127);
    v1087.bezierCurveTo(p726 * 83, p726 * 134, p726 * 82, p726 * 146, p726 * 83, p726 * 146);
    v1087.bezierCurveTo(p726 * 84, p726 * 146, p726 * 98, p726 * 142, p726 * 103, p726 * 138);
    v1087.bezierCurveTo(p726 * 107, p726 * 135, p726 * 110, p726 * 130, p726 * 112, p726 * 121);
    v1087.closePath();
    f89(v1087, "#0d1b1c");
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * 3, p726 * -93 + v1091);
    v1087.rotate(Math.PI / 5);
    v1087.globalAlpha = 0.5;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 130, p726 * 79, p726 * 132, p726 * 86, p726 * 130, p726 * 93);
    v1087.bezierCurveTo(p726 * 128, p726 * 100, p726 * 121, p726 * 107, p726 * 120, p726 * 107);
    v1087.bezierCurveTo(p726 * 120, p726 * 107, p726 * 115, p726 * 98, p726 * 115, p726 * 92);
    v1087.bezierCurveTo(p726 * 115, p726 * 86, p726 * 119, p726 * 76, p726 * 127, p726 * 73);
    v1087.closePath();
    f89(v1087, "#0d1b1c");
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70);
    v1087.globalAlpha = 1;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 130, p726 * 79, p726 * 132, p726 * 86, p726 * 130, p726 * 93);
    v1087.bezierCurveTo(p726 * 128, p726 * 100, p726 * 121, p726 * 107, p726 * 120, p726 * 107);
    v1087.bezierCurveTo(p726 * 120, p726 * 107, p726 * 115, p726 * 98, p726 * 115, p726 * 92);
    v1087.bezierCurveTo(p726 * 115, p726 * 86, p726 * 119, p726 * 76, p726 * 127, p726 * 73);
    v1087.closePath();
    f89(v1087, p728[0], p728[1], v1090);
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70);
    v1087.globalAlpha = 1;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 112, p726 * 109, p726 * 111, p726 * 100, p726 * 106, p726 * 93);
    v1087.bezierCurveTo(p726 * 104, p726 * 90, p726 * 91, p726 * 87, p726 * 91, p726 * 87);
    v1087.bezierCurveTo(p726 * 91, p726 * 88, p726 * 91, p726 * 96, p726 * 94, p726 * 102);
    v1087.bezierCurveTo(p726 * 97, p726 * 108, p726 * 106, p726 * 112, p726 * 113, p726 * 112);
    v1087.closePath();
    f89(v1087, p728[0], p728[1], v1090);
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * -80, p726 * -70);
    v1087.globalAlpha = 1;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 108, p726 * 120, p726 * 100, p726 * 119, p726 * 91, p726 * 127);
    v1087.bezierCurveTo(p726 * 83, p726 * 134, p726 * 82, p726 * 146, p726 * 83, p726 * 146);
    v1087.bezierCurveTo(p726 * 84, p726 * 146, p726 * 98, p726 * 142, p726 * 103, p726 * 138);
    v1087.bezierCurveTo(p726 * 107, p726 * 135, p726 * 110, p726 * 130, p726 * 112, p726 * 121);
    v1087.closePath();
    f89(v1087, p728[0], p728[1], v1090);
    v1087.restore();
    v1087.save();
    v1087.translate(p726 * 3, p726 * -93);
    v1087.rotate(Math.PI / 5);
    v1087.globalAlpha = 1;
    v1087.beginPath();
    v1087.bezierCurveTo(p726 * 130, p726 * 79, p726 * 132, p726 * 86, p726 * 130, p726 * 93);
    v1087.bezierCurveTo(p726 * 128, p726 * 100, p726 * 121, p726 * 107, p726 * 120, p726 * 107);
    v1087.bezierCurveTo(p726 * 120, p726 * 107, p726 * 115, p726 * 98, p726 * 115, p726 * 92);
    v1087.bezierCurveTo(p726 * 115, p726 * 86, p726 * 119, p726 * 76, p726 * 127, p726 * 73);
    v1087.closePath();
    f89(v1087, p728[0], p728[1], v1090);
    v1087.restore();
    return v1086;
  }
  function f154(p729, p730, p731) {
    var v1092 = document.createElement("canvas");
    var v1093 = v1092.getContext("2d");
    v1092.width = p729 * 290;
    v1092.height = p729 * 525;
    v1093.globalAlpha = p730 ? 0.5 : 1;
    v1093.translate(p729 * 20, p729 * 20);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 112, p729 * 356);
    v1093.bezierCurveTo(p729 * 124, p729 * 220.5, p729 * 124, p729 * 220.5, p729 * 136, p729 * 85);
    v1093.bezierCurveTo(p729 * 162.5, p729 * 65.5, p729 * 162.5, p729 * 65.5, p729 * 189, p729 * 46);
    v1093.bezierCurveTo(p729 * 208.5, p729 * 72.5, p729 * 208.5, p729 * 72.5, p729 * 228, p729 * 99);
    v1093.bezierCurveTo(p729 * 200, p729 * 232, p729 * 200, p729 * 232, p729 * 172, p729 * 365);
    v1093.closePath();
    f89(v1093, p731[0]);
    v1093.save();
    v1093.translate(p729 * 131, p729 * 423);
    v1093.rotate(0.16);
    f90(v1093, p729 * -14, p729 * -53, p729 * 28, p729 * 106, p729 * 10);
    v1093.restore();
    f89(v1093, p731[0]);
    v1093.save();
    v1093.translate(p729 * 122, p729 * 480);
    v1093.rotate(1.72);
    f92(v1093, 4, p729 * 26.476404589747453, p729 * 10);
    v1093.restore();
    f89(v1093, p731[0]);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 210, p729 * 387);
    v1093.bezierCurveTo(p729 * 138, p729 * 376, p729 * 138, p729 * 376, p729 * 66, p729 * 365);
    v1093.bezierCurveTo(p729 * 76, p729 * 355, p729 * 76, p729 * 355, p729 * 86, p729 * 345);
    v1093.bezierCurveTo(p729 * 99, p729 * 346.5, p729 * 99, p729 * 346.5, p729 * 112, p729 * 348);
    v1093.bezierCurveTo(p729 * 128.5, p729 * 344, p729 * 128.5, p729 * 344, p729 * 145, p729 * 340);
    v1093.bezierCurveTo(p729 * 158, p729 * 348, p729 * 158, p729 * 348, p729 * 171, p729 * 356);
    v1093.bezierCurveTo(p729 * 184, p729 * 358, p729 * 184, p729 * 358, p729 * 197, p729 * 360);
    v1093.closePath();
    f89(v1093, p731[0]);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 129, p729 * 338);
    v1093.bezierCurveTo(p729 * 137, p729 * 336, p729 * 137, p729 * 336, p729 * 145, p729 * 334);
    v1093.bezierCurveTo(p729 * 152.5, p729 * 338, p729 * 152.5, p729 * 338, p729 * 160, p729 * 342);
    v1093.bezierCurveTo(p729 * 184, p729 * 224, p729 * 184, p729 * 224, p729 * 208, p729 * 106);
    v1093.bezierCurveTo(p729 * 197, p729 * 88, p729 * 187, p729 * 70, p729 * 186, p729 * 70);
    v1093.bezierCurveTo(p729 * 169.5, p729 * 83, p729 * 169.5, p729 * 83, p729 * 153, p729 * 96);
    v1093.closePath();
    f89(v1093, p731[0]);
    v1093.globalAlpha = 1;
    v1093.translate(p729 * -20, p729 * -20);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 112, p729 * 356);
    v1093.bezierCurveTo(p729 * 124, p729 * 220.5, p729 * 124, p729 * 220.5, p729 * 136, p729 * 85);
    v1093.bezierCurveTo(p729 * 162.5, p729 * 65.5, p729 * 162.5, p729 * 65.5, p729 * 189, p729 * 46);
    v1093.bezierCurveTo(p729 * 208.5, p729 * 72.5, p729 * 208.5, p729 * 72.5, p729 * 228, p729 * 99);
    v1093.bezierCurveTo(p729 * 200, p729 * 232, p729 * 200, p729 * 232, p729 * 172, p729 * 365);
    v1093.closePath();
    f89(v1093, p731[1], p731[2], p729 * 12.5);
    v1093.save();
    v1093.translate(p729 * 131, p729 * 423);
    v1093.rotate(0.16);
    f90(v1093, p729 * -14, p729 * -53, p729 * 28, p729 * 106, p729 * 10);
    v1093.restore();
    f89(v1093, p731[4], p731[5], p729 * 12.5);
    v1093.save();
    v1093.translate(p729 * 122, p729 * 480);
    v1093.rotate(1.72);
    f92(v1093, 4, p729 * 26.476404589747453, p729 * 10);
    v1093.restore();
    f89(v1093, p731[1], p731[2], p729 * 12.5);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 210, p729 * 387);
    v1093.bezierCurveTo(p729 * 138, p729 * 376, p729 * 138, p729 * 376, p729 * 66, p729 * 365);
    v1093.bezierCurveTo(p729 * 76, p729 * 355, p729 * 76, p729 * 355, p729 * 86, p729 * 345);
    v1093.bezierCurveTo(p729 * 99, p729 * 346.5, p729 * 99, p729 * 346.5, p729 * 112, p729 * 348);
    v1093.bezierCurveTo(p729 * 128.5, p729 * 344, p729 * 128.5, p729 * 344, p729 * 145, p729 * 340);
    v1093.bezierCurveTo(p729 * 158, p729 * 348, p729 * 158, p729 * 348, p729 * 171, p729 * 356);
    v1093.bezierCurveTo(p729 * 184, p729 * 358, p729 * 184, p729 * 358, p729 * 197, p729 * 360);
    v1093.closePath();
    f89(v1093, p731[1], p731[2], p729 * 12.5);
    v1093.beginPath();
    v1093.lineCap = "round";
    v1093.lineJoin = "round";
    v1093.moveTo(p729 * 129, p729 * 338);
    v1093.bezierCurveTo(p729 * 137, p729 * 336, p729 * 137, p729 * 336, p729 * 145, p729 * 334);
    v1093.bezierCurveTo(p729 * 152.5, p729 * 338, p729 * 152.5, p729 * 338, p729 * 160, p729 * 342);
    v1093.bezierCurveTo(p729 * 184, p729 * 224, p729 * 184, p729 * 224, p729 * 208, p729 * 106);
    v1093.bezierCurveTo(p729 * 197, p729 * 88, p729 * 187, p729 * 70, p729 * 186, p729 * 70);
    v1093.bezierCurveTo(p729 * 169.5, p729 * 83, p729 * 169.5, p729 * 83, p729 * 153, p729 * 96);
    v1093.closePath();
    f89(v1093, p731[3]);
    return v1092;
  }
  function f155(p732, p733, p734) {
    var v1094 = document.createElement("canvas");
    var v1095 = v1094.getContext("2d");
    v1094.width = p732 * 154;
    v1094.height = p732 * 261;
    v1095.globalAlpha = p733 ? 0.5 : 1;
    v1095.translate(0, p732 * 10);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 125, p732 * 69);
    v1095.bezierCurveTo(p732 * 123.5, p732 * 141.5, p732 * 123.5, p732 * 141.5, p732 * 122, p732 * 214);
    v1095.bezierCurveTo(p732 * 123, p732 * 228, p732 * 119, p732 * 239, p732 * 102, p732 * 239);
    v1095.bezierCurveTo(p732 * 90, p732 * 238, p732 * 86, p732 * 225, p732 * 89, p732 * 197);
    v1095.bezierCurveTo(p732 * 92, p732 * 159, p732 * 92, p732 * 141, p732 * 94, p732 * 84);
    v1095.bezierCurveTo(p732 * 94, p732 * 58, p732 * 87, p732 * 50, p732 * 73, p732 * 52);
    v1095.bezierCurveTo(p732 * 53, p732 * 54, p732 * 54, p732 * 92, p732 * 34, p732 * 87);
    v1095.bezierCurveTo(p732 * 13, p732 * 85, p732 * 22, p732 * 58, p732 * 34, p732 * 40);
    v1095.bezierCurveTo(p732 * 44, p732 * 24, p732 * 68, p732 * 17, p732 * 86, p732 * 21);
    v1095.bezierCurveTo(p732 * 111, p732 * 23, p732 * 123, p732 * 39, p732 * 125, p732 * 67);
    v1095.closePath();
    f89(v1095, p734[0]);
    v1095.globalAlpha = 1;
    v1095.translate(0, p732 * -10);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 125, p732 * 69);
    v1095.bezierCurveTo(p732 * 123.5, p732 * 141.5, p732 * 123.5, p732 * 141.5, p732 * 122, p732 * 214);
    v1095.bezierCurveTo(p732 * 123, p732 * 228, p732 * 119, p732 * 239, p732 * 102, p732 * 239);
    v1095.bezierCurveTo(p732 * 90, p732 * 238, p732 * 86, p732 * 225, p732 * 89, p732 * 197);
    v1095.bezierCurveTo(p732 * 92, p732 * 159, p732 * 92, p732 * 141, p732 * 94, p732 * 84);
    v1095.bezierCurveTo(p732 * 94, p732 * 58, p732 * 87, p732 * 50, p732 * 73, p732 * 52);
    v1095.bezierCurveTo(p732 * 53, p732 * 54, p732 * 54, p732 * 92, p732 * 34, p732 * 87);
    v1095.bezierCurveTo(p732 * 13, p732 * 85, p732 * 22, p732 * 58, p732 * 34, p732 * 40);
    v1095.bezierCurveTo(p732 * 44, p732 * 24, p732 * 68, p732 * 17, p732 * 86, p732 * 21);
    v1095.bezierCurveTo(p732 * 111, p732 * 23, p732 * 123, p732 * 39, p732 * 125, p732 * 67);
    v1095.closePath();
    f89(v1095, p734[1], p734[2], p732 * 4);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 31, p732 * 43);
    v1095.bezierCurveTo(p732 * 31, p732 * 61, p732 * 43, p732 * 70, p732 * 51, p732 * 75);
    v1095.bezierCurveTo(p732 * 48, p732 * 84, p732 * 41, p732 * 89, p732 * 33, p732 * 86);
    v1095.bezierCurveTo(p732 * 23, p732 * 88, p732 * 20, p732 * 76, p732 * 23, p732 * 62);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 45, p732 * 29);
    v1095.bezierCurveTo(p732 * 49, p732 * 45, p732 * 61, p732 * 54, p732 * 64, p732 * 55);
    v1095.bezierCurveTo(p732 * 67.5, p732 * 53, p732 * 67.5, p732 * 53, p732 * 71, p732 * 51);
    v1095.bezierCurveTo(p732 * 80, p732 * 44, p732 * 83, p732 * 33, p732 * 82, p732 * 20);
    v1095.bezierCurveTo(p732 * 59, p732 * 17, p732 * 51, p732 * 23, p732 * 45, p732 * 30);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 86, p732 * 56);
    v1095.bezierCurveTo(p732 * 90, p732 * 33, p732 * 103, p732 * 25, p732 * 105, p732 * 27);
    v1095.bezierCurveTo(p732 * 116, p732 * 31, p732 * 121, p732 * 45, p732 * 122, p732 * 50);
    v1095.bezierCurveTo(p732 * 112, p732 * 62, p732 * 103, p732 * 63, p732 * 91, p732 * 62);
    v1095.bezierCurveTo(p732 * 89, p732 * 59.5, p732 * 89, p732 * 59.5, p732 * 87, p732 * 57);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 93, p732 * 81);
    v1095.bezierCurveTo(p732 * 109, p732 * 82, p732 * 123, p732 * 70, p732 * 124, p732 * 63);
    v1095.bezierCurveTo(p732 * 124, p732 * 75.5, p732 * 124, p732 * 75.5, p732 * 124, p732 * 88);
    v1095.bezierCurveTo(p732 * 119, p732 * 99, p732 * 103, p732 * 103, p732 * 94, p732 * 103);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 93, p732 * 124);
    v1095.bezierCurveTo(p732 * 108, p732 * 125, p732 * 122, p732 * 113, p732 * 124, p732 * 106);
    v1095.bezierCurveTo(p732 * 124, p732 * 119, p732 * 124, p732 * 129, p732 * 124, p732 * 132);
    v1095.bezierCurveTo(p732 * 110, p732 * 147, p732 * 94, p732 * 148, p732 * 90, p732 * 147);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 90, p732 * 170);
    v1095.bezierCurveTo(p732 * 104, p732 * 166, p732 * 122, p732 * 158, p732 * 122, p732 * 151);
    v1095.bezierCurveTo(p732 * 122, p732 * 162.5, p732 * 122, p732 * 162.5, p732 * 122, p732 * 174);
    v1095.bezierCurveTo(p732 * 111, p732 * 191, p732 * 97, p732 * 191, p732 * 89, p732 * 191);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 88, p732 * 208);
    v1095.bezierCurveTo(p732 * 100, p732 * 209, p732 * 115, p732 * 205, p732 * 122, p732 * 193);
    v1095.bezierCurveTo(p732 * 122, p732 * 205.5, p732 * 122, p732 * 205.5, p732 * 122, p732 * 218);
    v1095.bezierCurveTo(p732 * 115, p732 * 229, p732 * 103, p732 * 235, p732 * 90, p732 * 228);
    v1095.bezierCurveTo(p732 * 88, p732 * 224, p732 * 88, p732 * 217, p732 * 88, p732 * 211);
    v1095.closePath();
    f89(v1095, p734[3]);
    v1095.globalAlpha = 0.4;
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 22, p732 * 81);
    v1095.bezierCurveTo(p732 * 32, p732 * 84, p732 * 41, p732 * 81, p732 * 45, p732 * 68);
    v1095.bezierCurveTo(p732 * 50, p732 * 50, p732 * 62, p732 * 40, p732 * 79, p732 * 43);
    v1095.bezierCurveTo(p732 * 95, p732 * 45, p732 * 102, p732 * 58, p732 * 101, p732 * 81);
    v1095.bezierCurveTo(p732 * 99.5, p732 * 120.5, p732 * 99.5, p732 * 120.5, p732 * 98, p732 * 160);
    v1095.bezierCurveTo(p732 * 96.5, p732 * 191.5, p732 * 96.5, p732 * 191.5, p732 * 95, p732 * 223);
    v1095.bezierCurveTo(p732 * 93, p732 * 232, p732 * 101, p732 * 235, p732 * 108, p732 * 238);
    v1095.bezierCurveTo(p732 * 100, p732 * 240, p732 * 90, p732 * 233, p732 * 90, p732 * 224);
    v1095.bezierCurveTo(p732 * 92, p732 * 157, p732 * 92, p732 * 157, p732 * 94, p732 * 90);
    v1095.bezierCurveTo(p732 * 94, p732 * 56, p732 * 89, p732 * 53, p732 * 77, p732 * 51);
    v1095.bezierCurveTo(p732 * 58, p732 * 50, p732 * 54, p732 * 59, p732 * 49, p732 * 75);
    v1095.bezierCurveTo(p732 * 44, p732 * 91, p732 * 28, p732 * 90, p732 * 23, p732 * 81);
    v1095.closePath();
    f89(v1095, p734[0]);
    v1095.globalAlpha = 1;
    v1095.beginPath();
    v1095.lineCap = "round";
    v1095.lineJoin = "round";
    v1095.moveTo(p732 * 82, p732 * 123);
    v1095.bezierCurveTo(p732 * 88, p732 * 130, p732 * 88, p732 * 127, p732 * 94, p732 * 128);
    v1095.bezierCurveTo(p732 * 91, p732 * 136, p732 * 94, p732 * 137, p732 * 99, p732 * 142);
    v1095.bezierCurveTo(p732 * 97, p732 * 149, p732 * 99, p732 * 152, p732 * 105, p732 * 155);
    v1095.bezierCurveTo(p732 * 107, p732 * 159, p732 * 113, p732 * 159, p732 * 120, p732 * 158);
    v1095.bezierCurveTo(p732 * 121, p732 * 160, p732 * 125, p732 * 163, p732 * 132, p732 * 163);
    v1095.bezierCurveTo(p732 * 133, p732 * 166, p732 * 136, p732 * 169, p732 * 138, p732 * 170);
    v1095.bezierCurveTo(p732 * 133, p732 * 171, p732 * 132, p732 * 172, p732 * 129, p732 * 174);
    v1095.bezierCurveTo(p732 * 122, p732 * 170, p732 * 120, p732 * 170, p732 * 116, p732 * 174);
    v1095.bezierCurveTo(p732 * 108, p732 * 170.5, p732 * 108, p732 * 170.5, p732 * 100, p732 * 167);
    v1095.bezierCurveTo(p732 * 95, p732 * 172, p732 * 94, p732 * 179, p732 * 95, p732 * 184);
    v1095.bezierCurveTo(p732 * 87, p732 * 185, p732 * 87, p732 * 189, p732 * 88, p732 * 194);
    v1095.bezierCurveTo(p732 * 82, p732 * 194, p732 * 81, p732 * 195, p732 * 79, p732 * 197);
    v1095.bezierCurveTo(p732 * 78, p732 * 192, p732 * 78, p732 * 191, p732 * 77, p732 * 189);
    v1095.bezierCurveTo(p732 * 81, p732 * 185, p732 * 82, p732 * 183, p732 * 80, p732 * 176);
    v1095.bezierCurveTo(p732 * 89, p732 * 170, p732 * 92, p732 * 168, p732 * 95, p732 * 163);
    v1095.bezierCurveTo(p732 * 91, p732 * 151, p732 * 88, p732 * 151, p732 * 82, p732 * 147);
    v1095.bezierCurveTo(p732 * 85, p732 * 142, p732 * 85, p732 * 137, p732 * 81, p732 * 133);
    v1095.bezierCurveTo(p732 * 84, p732 * 127, p732 * 84, p732 * 125, p732 * 82, p732 * 124);
    v1095.closePath();
    f89(v1095, p734[4], p734[5], p732 * 4);
    f94(v1095, p732 * 107, p732 * 152, p732 * 9);
    f89(v1095, p734[6]);
    f94(v1095, p732 * 105, p732 * 173, p732 * 9);
    f89(v1095, p734[6]);
    f94(v1095, p732 * 87, p732 * 161, p732 * 9);
    f89(v1095, p734[6]);
    f94(v1095, p732 * 106, p732 * 147, p732 * 4);
    f89(v1095, p734[7]);
    f94(v1095, p732 * 104, p732 * 167, p732 * 4);
    f89(v1095, p734[7]);
    f94(v1095, p732 * 86, p732 * 154, p732 * 4);
    f89(v1095, p734[7]);
    return v1094;
  }
  function f156(p735, p736, p737, p738, p739, p740, p741, p742, p743, p744, p745) {
    if (vVUndefined === p745) {
      p745 = 0;
    }
    var v1096 = document.createElement("canvas");
    var v1097 = v1096.getContext("2d");
    p740 = p740 ? p735 * p740 : 0;
    var v1098 = Math.floor(p735 * p737);
    v1097.font = v1098 + "px Baloo Paaji";
    v1097.lineJoin = "round";
    p742 *= p735;
    var v1099 = p741 ? p742 * 2 : 0;
    if (p743) {
      var v1100 = Math.min(v1097.measureText(p736).width + p735 * 2 + v1099, p743);
    } else {
      v1100 = v1097.measureText(p736).width + p735 * 2 + v1099 + p735 * p745 * 2;
    }
    v1098 = (v1098 + p740 + p745) * p735 + v1099;
    v1096.width = v1100;
    v1096.height = v1098;
    if (p741) {
      v1097.fillStyle = p741;
      f90(v1097, 0, 0, v1100, v1098, p742 * 2);
      v1097.fill();
      v1097.translate(p742, p742);
    }
    v1097.textBaseline = "middle";
    v1097.font = p737 + "px Baloo Paaji";
    v1097.lineJoin = "round";
    if (p739) {
      v1097.beginPath();
      v1097.fillStyle = p739;
      v1097.fillText(p736, 0, v1098 / 2 + p740 - v1099 / 2, v1100);
    }
    v1097.beginPath();
    if (p744) {
      v1097.strokeStyle = p744;
      v1097.lineWidth = p745;
      v1097.strokeText(p736, p745, (v1098 - v1099) / 2, v1100);
    }
    v1097.fillStyle = p738;
    v1097.fillText(p736, p745, (v1098 - v1099) / 2, v1100);
    return v1096;
  }
  function f157(p746, p747, p748) {
    var v1101 = document.createElement("canvas");
    var v1102 = v1101.getContext("2d");
    v1101.width = p746 * 321;
    v1101.height = p746 * 284;
    v1102.translate(p746 * 100, p746 * 30);
    v1102.translate(p746 * 5, p746 * 10);
    v1102.globalAlpha = p747 ? 0.5 : 1;
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[0]);
    v1102.globalAlpha = 1;
    v1102.translate(p746 * -5, p746 * -10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[1], p748[2], p746 * 10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 167, p746 * 120);
    v1102.bezierCurveTo(p746 * 196, p746 * 106, p746 * 207, p746 * 111, p746 * 199, p746 * 135);
    v1102.bezierCurveTo(p746 * 185, p746 * 172, p746 * 166, p746 * 187, p746 * 145, p746 * 179);
    v1102.bezierCurveTo(p746 * 118, p746 * 166, p746 * 127, p746 * 139, p746 * 166, p746 * 121);
    v1102.closePath();
    f89(v1102, p748[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 25, p746 * 64);
    v1102.bezierCurveTo(p746 * 59, p746 * 96, p746 * 97, p746 * 128, p746 * 129, p746 * 151);
    v1102.bezierCurveTo(p746 * 126, p746 * 163, p746 * 134, p746 * 174, p746 * 142, p746 * 180);
    v1102.bezierCurveTo(p746 * 114, p746 * 170, p746 * 68, p746 * 134, p746 * 31, p746 * 85);
    v1102.bezierCurveTo(p746 * 24, p746 * 71, p746 * 24, p746 * 70, p746 * 25, p746 * 65);
    v1102.closePath();
    f89(v1102, p748[2]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 161, p746 * 141);
    v1102.bezierCurveTo(p746 * 181, p746 * 131, p746 * 186, p746 * 135, p746 * 173, p746 * 152);
    v1102.bezierCurveTo(p746 * 163, p746 * 163, p746 * 155, p746 * 161, p746 * 151, p746 * 150);
    v1102.bezierCurveTo(p746 * 147, p746 * 140, p746 * 155, p746 * 131, p746 * 175, p746 * 125);
    v1102.bezierCurveTo(p746 * 190, p746 * 120, p746 * 196, p746 * 121, p746 * 189, p746 * 143);
    v1102.bezierCurveTo(p746 * 182, p746 * 167, p746 * 169, p746 * 174, p746 * 157, p746 * 174);
    v1102.bezierCurveTo(p746 * 138, p746 * 172, p746 * 139, p746 * 162, p746 * 140, p746 * 156);
    f89(v1102, vVUndefined14, p748[4], p746 * 4);
    v1102.translate(p746 * -100, p746 * -30);
    v1102.translate(p746 * 10, p746 * 70);
    v1102.translate(p746 * 5, p746 * 10);
    v1102.globalAlpha = p747 ? 0.5 : 1;
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[0]);
    v1102.globalAlpha = 1;
    v1102.translate(p746 * -5, p746 * -10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[1], p748[2], p746 * 10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 167, p746 * 120);
    v1102.bezierCurveTo(p746 * 196, p746 * 106, p746 * 207, p746 * 111, p746 * 199, p746 * 135);
    v1102.bezierCurveTo(p746 * 185, p746 * 172, p746 * 166, p746 * 187, p746 * 145, p746 * 179);
    v1102.bezierCurveTo(p746 * 118, p746 * 166, p746 * 127, p746 * 139, p746 * 166, p746 * 121);
    v1102.closePath();
    f89(v1102, p748[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 25, p746 * 64);
    v1102.bezierCurveTo(p746 * 59, p746 * 96, p746 * 97, p746 * 128, p746 * 129, p746 * 151);
    v1102.bezierCurveTo(p746 * 126, p746 * 163, p746 * 134, p746 * 174, p746 * 142, p746 * 180);
    v1102.bezierCurveTo(p746 * 114, p746 * 170, p746 * 68, p746 * 134, p746 * 31, p746 * 85);
    v1102.bezierCurveTo(p746 * 24, p746 * 71, p746 * 24, p746 * 70, p746 * 25, p746 * 65);
    v1102.closePath();
    f89(v1102, p748[2]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 161, p746 * 141);
    v1102.bezierCurveTo(p746 * 181, p746 * 131, p746 * 186, p746 * 135, p746 * 173, p746 * 152);
    v1102.bezierCurveTo(p746 * 163, p746 * 163, p746 * 155, p746 * 161, p746 * 151, p746 * 150);
    v1102.bezierCurveTo(p746 * 147, p746 * 140, p746 * 155, p746 * 131, p746 * 175, p746 * 125);
    v1102.bezierCurveTo(p746 * 190, p746 * 120, p746 * 196, p746 * 121, p746 * 189, p746 * 143);
    v1102.bezierCurveTo(p746 * 182, p746 * 167, p746 * 169, p746 * 174, p746 * 157, p746 * 174);
    v1102.bezierCurveTo(p746 * 138, p746 * 172, p746 * 139, p746 * 162, p746 * 140, p746 * 156);
    f89(v1102, vVVUndefined18, p748[4], p746 * 4);
    v1102.translate(p746 * 20, p746 * -80);
    v1102.translate(p746 * 5, p746 * 10);
    v1102.globalAlpha = p747 ? 0.5 : 1;
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[0]);
    v1102.globalAlpha = 1;
    v1102.translate(p746 * -5, p746 * -10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 58, p746 * 33);
    v1102.bezierCurveTo(p746 * 81, p746 * 22, p746 * 93, p746 * 26, p746 * 123, p746 * 47);
    v1102.bezierCurveTo(p746 * 160, p746 * 73, p746 * 169, p746 * 80, p746 * 191, p746 * 99);
    v1102.bezierCurveTo(p746 * 202, p746 * 107, p746 * 211, p746 * 118, p746 * 195, p746 * 151);
    v1102.bezierCurveTo(p746 * 181, p746 * 183, p746 * 157, p746 * 192, p746 * 129, p746 * 174);
    v1102.bezierCurveTo(p746 * 78, p746 * 140, p746 * 68, p746 * 129, p746 * 37, p746 * 94);
    v1102.bezierCurveTo(p746 * 15, p746 * 68, p746 * 25, p746 * 52, p746 * 56, p746 * 34);
    v1102.closePath();
    f89(v1102, p748[1], p748[2], p746 * 10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 167, p746 * 120);
    v1102.bezierCurveTo(p746 * 196, p746 * 106, p746 * 207, p746 * 111, p746 * 199, p746 * 135);
    v1102.bezierCurveTo(p746 * 185, p746 * 172, p746 * 166, p746 * 187, p746 * 145, p746 * 179);
    v1102.bezierCurveTo(p746 * 118, p746 * 166, p746 * 127, p746 * 139, p746 * 166, p746 * 121);
    v1102.closePath();
    f89(v1102, p748[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 25, p746 * 64);
    v1102.bezierCurveTo(p746 * 59, p746 * 96, p746 * 97, p746 * 128, p746 * 129, p746 * 151);
    v1102.bezierCurveTo(p746 * 126, p746 * 163, p746 * 134, p746 * 174, p746 * 142, p746 * 180);
    v1102.bezierCurveTo(p746 * 114, p746 * 170, p746 * 68, p746 * 134, p746 * 31, p746 * 85);
    v1102.bezierCurveTo(p746 * 24, p746 * 71, p746 * 24, p746 * 70, p746 * 25, p746 * 65);
    v1102.closePath();
    f89(v1102, p748[2]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p746 * 161, p746 * 141);
    v1102.bezierCurveTo(p746 * 181, p746 * 131, p746 * 186, p746 * 135, p746 * 173, p746 * 152);
    v1102.bezierCurveTo(p746 * 163, p746 * 163, p746 * 155, p746 * 161, p746 * 151, p746 * 150);
    v1102.bezierCurveTo(p746 * 147, p746 * 140, p746 * 155, p746 * 131, p746 * 175, p746 * 125);
    v1102.bezierCurveTo(p746 * 190, p746 * 120, p746 * 196, p746 * 121, p746 * 189, p746 * 143);
    v1102.bezierCurveTo(p746 * 182, p746 * 167, p746 * 169, p746 * 174, p746 * 157, p746 * 174);
    v1102.bezierCurveTo(p746 * 138, p746 * 172, p746 * 139, p746 * 162, p746 * 140, p746 * 156);
    f89(v1102, vVVVVUndefined173, p748[4], p746 * 4);
    return v1101;
  }
  function f158(p749, p750, p751) {
    var v1103 = document.createElement("canvas");
    var v1104 = v1103.getContext("2d");
    v1103.width = p749 * 350;
    v1103.height = p749 * 140;
    v1104.translate(p749 * -50, p749 * -150);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 184.5, p749 * 222.0625);
    v1104.bezierCurveTo(p749 * 185.5, p749 * 184.0625, p749 * 302.5, p749 * 171.0625, p749 * 313.5, p749 * 222.0625);
    v1104.bezierCurveTo(p749 * 330.5, p749 * 263.0625, p749 * 181.5, p749 * 274.0625, p749 * 184.5, p749 * 223.0625);
    v1104.closePath();
    f89(v1104, p751[0], p751[1], p749 * 8);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 131.5, p749 * 241.0625);
    v1104.bezierCurveTo(p749 * 144.5, p749 * 278.0625, p749 * 270.5, p749 * 209.0625, p749 * 228.5, p749 * 174.0625);
    v1104.bezierCurveTo(p749 * 196.5, p749 * 147.0625, p749 * 117.5, p749 * 196.0625, p749 * 131.5, p749 * 240.0625);
    v1104.closePath();
    f89(v1104, p751[0], p751[1], p749 * 8);
    f94(v1104, p749 * 270.5, p749 * 225.0625, p749 * 15.811388300841896);
    f89(v1104, p751[2]);
    f94(v1104, p749 * 243.5, p749 * 225.0625, p749 * 6.082762530298219);
    f89(v1104, p751[2]);
    f94(v1104, p749 * 255.5, p749 * 210.0625, p749 * 10.816653826391969);
    f89(v1104, p751[2]);
    f94(v1104, p749 * 167.5, p749 * 215.0625, p749 * 15.297058540778355);
    f89(v1104, p751[2]);
    f94(v1104, p749 * 176.5, p749 * 204.0625, p749 * 7.280109889280518);
    f89(v1104, p751[2]);
    f94(v1104, p749 * 206.5, p749 * 189.0625, p749 * 7.280109889280518);
    f89(v1104, p751[2]);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 151.5, p749 * 212.0625);
    v1104.bezierCurveTo(p749 * 161.5, p749 * 204.0625, p749 * 173.5, p749 * 214.0625, p749 * 158.5, p749 * 221.0625);
    v1104.bezierCurveTo(p749 * 145.5, p749 * 228.0625, p749 * 144.5, p749 * 216.0625, p749 * 151.5, p749 * 212.0625);
    v1104.closePath();
    f89(v1104, p751[3], p751[4], p749 * 4);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 194.5, p749 * 209.0625);
    v1104.bezierCurveTo(p749 * 205.5, p749 * 202.0625, p749 * 215.5, p749 * 207.0625, p749 * 199.5, p749 * 217.0625);
    v1104.bezierCurveTo(p749 * 187.5, p749 * 224.0625, p749 * 182.5, p749 * 217.0625, p749 * 194.5, p749 * 209.0625);
    v1104.closePath();
    f89(v1104, p751[3], p751[4], p749 * 4);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 188.5, p749 * 183.0625);
    v1104.bezierCurveTo(p749 * 201.5, p749 * 176.0625, p749 * 213.5, p749 * 187.0625, p749 * 193.5, p749 * 193.0625);
    v1104.bezierCurveTo(p749 * 185.5, p749 * 194.0625, p749 * 175.5, p749 * 189.0625, p749 * 188.5, p749 * 183.0625);
    v1104.closePath();
    f89(v1104, p751[3], p751[4], p749 * 4);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 261.5, p749 * 202.0625);
    v1104.bezierCurveTo(p749 * 274.5, p749 * 201.0625, p749 * 282.5, p749 * 214.0625, p749 * 261.5, p749 * 215.0625);
    v1104.bezierCurveTo(p749 * 246.5, p749 * 214.0625, p749 * 248.5, p749 * 203.0625, p749 * 261.5, p749 * 202.0625);
    v1104.closePath();
    f89(v1104, p751[3], p751[4], p749 * 4);
    v1104.beginPath();
    v1104.lineCap = "round";
    v1104.lineJoin = "round";
    v1104.moveTo(p749 * 240.5, p749 * 231.0625);
    v1104.bezierCurveTo(p749 * 255.5, p749 * 231.0625, p749 * 254.5, p749 * 243.0625, p749 * 240.5, p749 * 242.0625);
    v1104.bezierCurveTo(p749 * 225.5, p749 * 239.0625, p749 * 225.5, p749 * 232.0625, p749 * 240.5, p749 * 231.0625);
    v1104.closePath();
    f89(v1104, p751[3], p751[4], p749 * 4);
    return v1103;
  }
  function f159(p752, p753, p754) {
    var v1105 = document.createElement("canvas");
    var v1106 = v1105.getContext("2d");
    v1105.width = p752 * 104;
    v1105.height = p752 * 112;
    v1106.translate(0, p752 * 15);
    v1106.beginPath();
    v1106.lineCap = "round";
    v1106.lineJoin = "round";
    v1106.moveTo(p752 * 16, p752 * 44);
    v1106.bezierCurveTo(p752 * 30.5, p752 * 48, p752 * 30.5, p752 * 48, p752 * 45, p752 * 52);
    v1106.bezierCurveTo(p752 * 36.5, p752 * 63, p752 * 36.5, p752 * 63, p752 * 28, p752 * 74);
    v1106.bezierCurveTo(p752 * 32, p752 * 86, p752 * 61, p752 * 92, p752 * 78, p752 * 76);
    v1106.bezierCurveTo(p752 * 93, p752 * 62, p752 * 92, p752 * 40, p752 * 80, p752 * 26);
    v1106.bezierCurveTo(p752 * 65, p752 * 11, p752 * 42, p752 * 16, p752 * 34, p752 * 21);
    v1106.bezierCurveTo(p752 * 22, p752 * 27, p752 * 16, p752 * 39, p752 * 16, p752 * 44);
    v1106.closePath();
    f89(v1106, p754[0]);
    v1106.globalAlpha = 1;
    v1106.translate(0, p752 * -15);
    v1106.beginPath();
    v1106.lineCap = "round";
    v1106.lineJoin = "round";
    v1106.moveTo(p752 * 16, p752 * 44);
    v1106.bezierCurveTo(p752 * 30.5, p752 * 48, p752 * 30.5, p752 * 48, p752 * 45, p752 * 52);
    v1106.bezierCurveTo(p752 * 36.5, p752 * 63, p752 * 36.5, p752 * 63, p752 * 28, p752 * 74);
    v1106.bezierCurveTo(p752 * 32, p752 * 86, p752 * 61, p752 * 92, p752 * 78, p752 * 76);
    v1106.bezierCurveTo(p752 * 93, p752 * 62, p752 * 92, p752 * 40, p752 * 80, p752 * 26);
    v1106.bezierCurveTo(p752 * 65, p752 * 11, p752 * 42, p752 * 16, p752 * 34, p752 * 21);
    v1106.bezierCurveTo(p752 * 22, p752 * 27, p752 * 16, p752 * 39, p752 * 16, p752 * 44);
    v1106.closePath();
    f89(v1106, p754[1], p754[2], p752 * 8);
    return v1105;
  }
  function f160(p755, p756, p757, p758) {
    var v1107 = document.createElement("canvas");
    var v1108 = v1107.getContext("2d");
    var v1109 = p755 * 220;
    var v1110 = p755 * 220;
    var v1111 = p755 * 100;
    var v1112 = v1111 / 4;
    v1107.width = v1109;
    v1107.height = v1110;
    v1108.translate(v1109 / 2, v1110 / 2);
    v1108.globalAlpha = p756 ? 0.5 : 1;
    if (!p756) {
      v1108.translate(p755 * 0, p755 * -8);
    }
    f92(v1108, 7, v1111, v1112);
    f89(v1108, p756 ? p757[0] : p757[1]);
    v1108.globalAlpha = 1;
    if (p758 == 0) {
      f92(v1108, 6, v1111 * 0.65, v1112 * 0.65);
      f89(v1108, p757[2]);
    } else if (p758 == 1) {
      v1108.translate(p755 * 20, p755 * 20);
      f92(v1108, 6, v1111 * 0.45, v1112 * 0.4);
      f89(v1108, p757[2]);
    }
    return v1107;
  }
  function f161(p759, p760, p761) {
    var v1113 = document.createElement("canvas");
    var v1114 = v1113.getContext("2d");
    var v1115 = p759 * 220;
    var v1116 = p759 * 230;
    var v1117 = p759 * 100;
    var v1118 = v1117 / 4;
    var v1119 = p759 * 20;
    v1113.width = v1115;
    v1113.height = v1116;
    v1114.translate(v1115 / 2, v1116 / 2 + v1119);
    v1114.globalAlpha = 0.5;
    f92(v1114, 7, v1117, v1118);
    f89(v1114, p761[0]);
    v1114.globalAlpha = 1;
    v1114.translate(0, -v1119);
    f92(v1114, 7, v1117, v1118);
    f89(v1114, p761[1]);
    f92(v1114, 6, v1117 * 0.65, v1118 * 0.65);
    f89(v1114, p761[2]);
    return v1113;
  }
  const v1120 = 1;
  function f162(p762, p763, p764) {
    var v1121 = document.createElement("canvas");
    var v1122 = v1121.getContext("2d");
    v1121.width = p762 * 373;
    v1121.height = p762 * 314;
    v1122.globalAlpha = p763 ? 0.5 : 1;
    v1122.translate(p762 * 5, p762 * 5);
    v1122.save();
    v1122.translate(p762 * 184.048583984375, p762 * 69.1805419921875);
    f90(v1122, p762 * -40, p762 * -28.5, p762 * 80, p762 * 57, p762 * 10);
    v1122.restore();
    f89(v1122, p764[1], p764[2], p762 * 4);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p762 * 185.048583984375, p762 * 61.6805419921875);
    v1122.bezierCurveTo(p762 * 145.048583984375, p762 * 59.6805419921875, p762 * 138.048583984375, p762 * 41.6805419921875, p762 * 148.048583984375, p762 * 33.6805419921875);
    v1122.bezierCurveTo(p762 * 169.048583984375, p762 * 17.6805419921875, p762 * 194.048583984375, p762 * 20.6805419921875, p762 * 210.048583984375, p762 * 27.6805419921875);
    v1122.bezierCurveTo(p762 * 234.048583984375, p762 * 40.6805419921875, p762 * 225.048583984375, p762 * 57.6805419921875, p762 * 186.048583984375, p762 * 61.6805419921875);
    v1122.closePath();
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p762 * 224.048583984375, p762 * 56.6805419921875);
    v1122.bezierCurveTo(p762 * 326.048583984375, p762 * 69.6805419921875, p762 * 363.048583984375, p762 * 148.6805419921875, p762 * 349.048583984375, p762 * 206.6805419921875);
    v1122.bezierCurveTo(p762 * 329.048583984375, p762 * 278.6805419921875, p762 * 252.048583984375, p762 * 283.6805419921875, p762 * 206.048583984375, p762 * 275.6805419921875);
    v1122.bezierCurveTo(p762 * 206.548583984375, p762 * 266.6805419921875, p762 * 206.548583984375, p762 * 266.6805419921875, p762 * 207.048583984375, p762 * 257.6805419921875);
    v1122.bezierCurveTo(p762 * 276.048583984375, p762 * 268.6805419921875, p762 * 308.048583984375, p762 * 239.6805419921875, p762 * 323.048583984375, p762 * 208.6805419921875);
    v1122.bezierCurveTo(p762 * 352.048583984375, p762 * 145.6805419921875, p762 * 292.048583984375, p762 * 86.6805419921875, p762 * 223.048583984375, p762 * 74.6805419921875);
    v1122.closePath();
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.548583984375, p762 * 119.6805419921875);
    f90(v1122, p762 * -121.5, p762 * -45, p762 * 243, p762 * 90, p762 * 40);
    v1122.restore();
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.048583984375, p762 * 155.6805419921875);
    f90(v1122, p762 * -121, p762 * -52, p762 * 242, p762 * 104, p762 * 40);
    v1122.restore();
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.048583984375, p762 * 205.1805419921875);
    f90(v1122, p762 * -121, p762 * -50.5, p762 * 242, p762 * 101, p762 * 40);
    v1122.restore();
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 185.048583984375, p762 * 204.1805419921875);
    f90(v1122, p762 * -100, p762 * -34.5, p762 * 200, p762 * 69, p762 * 40);
    v1122.restore();
    f89(v1122, p764[0], p764[0], p762 * 6);
    f94(v1122, p762 * 185.048583984375, p762 * 257.6805419921875, p762 * 27.018512172212592);
    f89(v1122, p764[0], p764[0], p762 * 6);
    v1122.globalAlpha = 1;
    v1122.translate(p762 * -5, p762 * -5);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p762 * 224.048583984375, p762 * 56.6805419921875);
    v1122.bezierCurveTo(p762 * 326.048583984375, p762 * 69.6805419921875, p762 * 363.048583984375, p762 * 148.6805419921875, p762 * 349.048583984375, p762 * 206.6805419921875);
    v1122.bezierCurveTo(p762 * 329.048583984375, p762 * 278.6805419921875, p762 * 252.048583984375, p762 * 283.6805419921875, p762 * 206.048583984375, p762 * 275.6805419921875);
    v1122.bezierCurveTo(p762 * 206.548583984375, p762 * 266.6805419921875, p762 * 206.548583984375, p762 * 266.6805419921875, p762 * 207.048583984375, p762 * 257.6805419921875);
    v1122.bezierCurveTo(p762 * 276.048583984375, p762 * 268.6805419921875, p762 * 308.048583984375, p762 * 239.6805419921875, p762 * 323.048583984375, p762 * 208.6805419921875);
    v1122.bezierCurveTo(p762 * 352.048583984375, p762 * 145.6805419921875, p762 * 292.048583984375, p762 * 86.6805419921875, p762 * 223.048583984375, p762 * 74.6805419921875);
    v1122.closePath();
    f89(v1122, p764[3], p764[4], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 184.048583984375, p762 * 69.1805419921875);
    f90(v1122, p762 * -40, p762 * -28.5, p762 * 80, p762 * 57, p762 * 10);
    v1122.restore();
    f89(v1122, p764[1], p764[2], p762 * 4);
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p762 * 185.048583984375, p762 * 61.6805419921875);
    v1122.bezierCurveTo(p762 * 145.048583984375, p762 * 59.6805419921875, p762 * 138.048583984375, p762 * 41.6805419921875, p762 * 148.048583984375, p762 * 33.6805419921875);
    v1122.bezierCurveTo(p762 * 169.048583984375, p762 * 17.6805419921875, p762 * 194.048583984375, p762 * 20.6805419921875, p762 * 210.048583984375, p762 * 27.6805419921875);
    v1122.bezierCurveTo(p762 * 234.048583984375, p762 * 40.6805419921875, p762 * 225.048583984375, p762 * 57.6805419921875, p762 * 186.048583984375, p762 * 61.6805419921875);
    v1122.closePath();
    f89(v1122, p764[1], p764[2], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.548583984375, p762 * 119.6805419921875);
    f90(v1122, p762 * -121.5, p762 * -45, p762 * 243, p762 * 90, p762 * 40);
    v1122.restore();
    f89(v1122, p764[5], p764[4], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.048583984375, p762 * 155.6805419921875);
    f90(v1122, p762 * -121, p762 * -52, p762 * 242, p762 * 104, p762 * 40);
    v1122.restore();
    f89(v1122, p764[3], p764[4], p762 * 6);
    v1122.save();
    v1122.translate(p762 * 183.048583984375, p762 * 205.1805419921875);
    f90(v1122, p762 * -121, p762 * -50.5, p762 * 242, p762 * 101, p762 * 40);
    v1122.restore();
    f89(v1122, p764[6], p764[4], p762 * 6);
    v1122.globalCompositeOperation = "destination-out";
    v1122.save();
    v1122.translate(p762 * 185.048583984375, p762 * 204.1805419921875);
    f90(v1122, p762 * -100, p762 * -34.5, p762 * 200, p762 * 69, p762 * 40);
    v1122.restore();
    f89(v1122, p764[7], p764[8], p762 * 6);
    v1122.globalCompositeOperation = "source-over";
    v1122.globalAlpha = 0.5;
    v1122.save();
    v1122.translate(p762 * 185.048583984375, p762 * 204.1805419921875);
    f90(v1122, p762 * -100, p762 * -34.5, p762 * 200, p762 * 69, p762 * 40);
    v1122.restore();
    f89(v1122, p764[7], p764[8], p762 * 6);
    v1122.globalAlpha = 1;
    v1122.save();
    f94(v1122, p762 * 185.048583984375, p762 * 257.6805419921875, p762 * 27.018512172212592);
    f89(v1122, p764[3], p764[4], p762 * 6);
    v1122.restore();
    return v1121;
  }
  function f163(p765, p766, p767) {
    var v1123 = document.createElement("canvas");
    var v1124 = v1123.getContext("2d");
    var v1125 = p765 * 140;
    var v1126 = p765 * 150;
    var v1127 = p765 * 10;
    var v1128 = p765 * 4;
    v1123.width = v1125;
    v1123.height = v1126;
    v1124.translate(p765 * -50, p765 * -38 + v1127);
    v1124.globalAlpha = p766 ? 0.5 : 1;
    v1124.beginPath();
    v1124.bezierCurveTo(p765 * 160, p765 * 65, p765 * 160, p765 * 85, p765 * 152, p765 * 95);
    v1124.bezierCurveTo(p765 * 152, p765 * 95, p765 * 173, p765 * 94, p765 * 187, p765 * 102);
    v1124.bezierCurveTo(p765 * 187, p765 * 102, p765 * 180, p765 * 120, p765 * 155, p765 * 126);
    v1124.bezierCurveTo(p765 * 154, p765 * 126, p765 * 166, p765 * 138, p765 * 169, p765 * 148);
    v1124.bezierCurveTo(p765 * 169, p765 * 148, p765 * 148, p765 * 152, p765 * 133, p765 * 140);
    v1124.bezierCurveTo(p765 * 133, p765 * 140, p765 * 134, p765 * 160, p765 * 122, p765 * 175);
    v1124.bezierCurveTo(p765 * 122, p765 * 175, p765 * 107, p765 * 162, p765 * 107, p765 * 144);
    v1124.bezierCurveTo(p765 * 107, p765 * 144, p765 * 98, p765 * 164, p765 * 73, p765 * 167);
    v1124.bezierCurveTo(p765 * 73, p765 * 167, p765 * 72, p765 * 134, p765 * 90, p765 * 127);
    v1124.bezierCurveTo(p765 * 90, p765 * 127, p765 * 70, p765 * 134, p765 * 55, p765 * 123);
    v1124.bezierCurveTo(p765 * 55, p765 * 123, p765 * 58, p765 * 115, p765 * 75, p765 * 104);
    v1124.bezierCurveTo(p765 * 75, p765 * 104, p765 * 66, p765 * 96, p765 * 61, p765 * 77);
    v1124.bezierCurveTo(p765 * 61, p765 * 77, p765 * 83, p765 * 74, p765 * 102, p765 * 89);
    v1124.bezierCurveTo(p765 * 102, p765 * 89, p765 * 92, p765 * 66, p765 * 110, p765 * 41);
    v1124.bezierCurveTo(p765 * 111, p765 * 40, p765 * 130, p765 * 54, p765 * 130, p765 * 82);
    v1124.bezierCurveTo(p765 * 130, p765 * 82, p765 * 143, p765 * 67, p765 * 159, p765 * 65);
    v1124.closePath();
    f89(v1124, p767[0]);
    v1124.translate(0, 0 - v1127);
    v1124.globalAlpha = 1;
    v1124.beginPath();
    v1124.bezierCurveTo(p765 * 160, p765 * 65, p765 * 160, p765 * 85, p765 * 152, p765 * 95);
    v1124.bezierCurveTo(p765 * 152, p765 * 95, p765 * 173, p765 * 94, p765 * 187, p765 * 102);
    v1124.bezierCurveTo(p765 * 187, p765 * 102, p765 * 180, p765 * 120, p765 * 155, p765 * 126);
    v1124.bezierCurveTo(p765 * 154, p765 * 126, p765 * 166, p765 * 138, p765 * 169, p765 * 148);
    v1124.bezierCurveTo(p765 * 169, p765 * 148, p765 * 148, p765 * 152, p765 * 133, p765 * 140);
    v1124.bezierCurveTo(p765 * 133, p765 * 140, p765 * 134, p765 * 160, p765 * 122, p765 * 175);
    v1124.bezierCurveTo(p765 * 122, p765 * 175, p765 * 107, p765 * 162, p765 * 107, p765 * 144);
    v1124.bezierCurveTo(p765 * 107, p765 * 144, p765 * 98, p765 * 164, p765 * 73, p765 * 167);
    v1124.bezierCurveTo(p765 * 73, p765 * 167, p765 * 72, p765 * 134, p765 * 90, p765 * 127);
    v1124.bezierCurveTo(p765 * 90, p765 * 127, p765 * 70, p765 * 134, p765 * 55, p765 * 123);
    v1124.bezierCurveTo(p765 * 55, p765 * 123, p765 * 58, p765 * 115, p765 * 75, p765 * 104);
    v1124.bezierCurveTo(p765 * 75, p765 * 104, p765 * 66, p765 * 96, p765 * 61, p765 * 77);
    v1124.bezierCurveTo(p765 * 61, p765 * 77, p765 * 83, p765 * 74, p765 * 102, p765 * 89);
    v1124.bezierCurveTo(p765 * 102, p765 * 89, p765 * 92, p765 * 66, p765 * 110, p765 * 41);
    v1124.bezierCurveTo(p765 * 111, p765 * 40, p765 * 130, p765 * 54, p765 * 130, p765 * 82);
    v1124.bezierCurveTo(p765 * 130, p765 * 82, p765 * 143, p765 * 67, p765 * 159, p765 * 65);
    v1124.closePath();
    f89(v1124, p767[1], p767[2], v1128);
    return v1123;
  }
  function f164(p768, p769, p770) {
    var v1129 = document.createElement("canvas");
    var v1130 = v1129.getContext("2d");
    var v1131 = p768 * p769 * 2;
    var v1132 = p769 * p768 * 2;
    var v1133 = v1131 / 2;
    var v1134 = v1132 / 2;
    v1129.width = v1131;
    v1129.height = v1132;
    v1130.translate(v1133, v1134);
    f94(v1130, 0, 0, p768 * p769);
    f89(v1130, p770);
    return v1129;
  }
  function f165(p771, p772, p773) {
    var v1135 = document.createElement("canvas");
    var v1136 = v1135.getContext("2d");
    v1135.width = p771 * 92;
    v1135.height = p771 * 108;
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p771 * 31, p771 * 10);
    v1136.bezierCurveTo(p771 * 37, p771 * 2, p771 * 49, p771 * 0, p771 * 61, p771 * 15);
    v1136.bezierCurveTo(p771 * 81, p771 * 31, p771 * 78, p771 * 25, p771 * 79, p771 * 37);
    v1136.bezierCurveTo(p771 * 76, p771 * 44, p771 * 81, p771 * 56, p771 * 85, p771 * 63);
    v1136.bezierCurveTo(p771 * 91, p771 * 71, p771 * 90, p771 * 78, p771 * 83, p771 * 84);
    v1136.bezierCurveTo(p771 * 60, p771 * 98, p771 * 67, p771 * 95, p771 * 57, p771 * 102);
    v1136.bezierCurveTo(p771 * 47, p771 * 106, p771 * 43, p771 * 106, p771 * 31, p771 * 98);
    v1136.bezierCurveTo(p771 * 22, p771 * 91, p771 * 17, p771 * 89, p771 * 7, p771 * 84);
    v1136.bezierCurveTo(p771 * 1, p771 * 77, p771 * 4, p771 * 73, p771 * 7, p771 * 60);
    v1136.bezierCurveTo(p771 * 11, p771 * 50, p771 * 5, p771 * 32, p771 * 15, p771 * 27);
    v1136.bezierCurveTo(p771 * 26, p771 * 18, p771 * 26, p771 * 24, p771 * 31, p771 * 10);
    v1136.closePath();
    f89(v1136, p773[0], p773[1], 4);
    return v1135;
  }
  function f166(p774, p775) {
    var v1137 = document.createElement("canvas");
    var v1138 = v1137.getContext("2d");
    v1137.width = p774 * 372;
    v1137.height = p774 * 375;
    v1138.globalAlpha = 0.5;
    v1138.translate(p774 * 15, p774 * 15);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 313.0000305175781, p774 * 76.58523559570312);
    v1138.bezierCurveTo(p774 * 308.0000305175781, p774 * 130.58523559570312, p774 * 279.0000305175781, p774 * 158.58523559570312, p774 * 254.00003051757812, p774 * 175.58523559570312);
    v1138.bezierCurveTo(p774 * 287.0000305175781, p774 * 182.58523559570312, p774 * 274.0000305175781, p774 * 181.08523559570312, p774 * 294.0000305175781, p774 * 186.58523559570312);
    v1138.bezierCurveTo(p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.0000305175781, p774 * 205.58523559570312);
    v1138.bezierCurveTo(p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 315.0000305175781, p774 * 196.58523559570312);
    v1138.bezierCurveTo(p774 * 350.0000305175781, p774 * 219.58523559570312, p774 * 343.0000305175781, p774 * 221.58523559570312, p774 * 351.0000305175781, p774 * 230.58523559570312);
    v1138.bezierCurveTo(p774 * 296.0000305175781, p774 * 260.5852355957031, p774 * 264.0000305175781, p774 * 256.5852355957031, p774 * 220.00003051757812, p774 * 236.58523559570312);
    v1138.bezierCurveTo(p774 * 233.00003051757812, p774 * 266.5852355957031, p774 * 232.00003051757812, p774 * 279.5852355957031, p774 * 231.00003051757812, p774 * 295.5852355957031);
    v1138.bezierCurveTo(p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 213.00003051757812, p774 * 299.5852355957031);
    v1138.bezierCurveTo(p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 226.00003051757812, p774 * 316.5852355957031);
    v1138.bezierCurveTo(p774 * 223.00003051757812, p774 * 344.5852355957031, p774 * 216.00003051757812, p774 * 350.5852355957031, p774 * 209.00003051757812, p774 * 363.5852355957031);
    v1138.bezierCurveTo(p774 * 154.00003051757812, p774 * 318.5852355957031, p774 * 156.00003051757812, p774 * 268.5852355957031, p774 * 160.00003051757812, p774 * 238.58523559570312);
    v1138.bezierCurveTo(p774 * 135.00003051757812, p774 * 268.5852355957031, p774 * 125.00003051757812, p774 * 267.5852355957031, p774 * 112.00003051757812, p774 * 272.5852355957031);
    v1138.bezierCurveTo(p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 97.00003051757812, p774 * 260.5852355957031);
    v1138.bezierCurveTo(p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 89.00003051757812, p774 * 281.5852355957031);
    v1138.bezierCurveTo(p774 * 66.00003051757812, p774 * 288.5852355957031, p774 * 59.000030517578125, p774 * 288.5852355957031, p774 * 39.000030517578125, p774 * 285.5852355957031);
    v1138.bezierCurveTo(p774 * 56.000030517578125, p774 * 216.58523559570312, p774 * 91.00003051757812, p774 * 204.58523559570312, p774 * 129.00003051757812, p774 * 189.58523559570312);
    v1138.bezierCurveTo(p774 * 90.00003051757812, p774 * 176.58523559570312, p774 * 89.00003051757812, p774 * 173.58523559570312, p774 * 79.00003051757812, p774 * 166.58523559570312);
    v1138.bezierCurveTo(p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 85.00003051757812, p774 * 143.58523559570312);
    v1138.bezierCurveTo(p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 66.00003051757812, p774 * 151.58523559570312);
    v1138.bezierCurveTo(p774 * 44.000030517578125, p774 * 133.58523559570312, p774 * 41.000030517578125, p774 * 124.58523559570312, p774 * 34.000030517578125, p774 * 102.58523559570312);
    v1138.bezierCurveTo(p774 * 100.00003051757812, p774 * 81.58523559570312, p774 * 134.00003051757812, p774 * 118.58523559570312, p774 * 150.00003051757812, p774 * 128.58523559570312);
    v1138.bezierCurveTo(p774 * 144.00003051757812, p774 * 102.58523559570312, p774 * 147.00003051757812, p774 * 90.58523559570312, p774 * 150.00003051757812, p774 * 80.58523559570312);
    v1138.bezierCurveTo(p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 169.00003051757812, p774 * 77.58523559570312);
    v1138.bezierCurveTo(p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 157.00003051757812, p774 * 67.58523559570312);
    v1138.bezierCurveTo(p774 * 162.00003051757812, p774 * 42.585235595703125, p774 * 169.00003051757812, p774 * 29.585235595703125, p774 * 182.00003051757812, p774 * 14.585235595703125);
    v1138.bezierCurveTo(p774 * 219.00003051757812, p774 * 48.585235595703125, p774 * 222.00003051757812, p774 * 92.58523559570312, p774 * 218.00003051757812, p774 * 112.58523559570312);
    v1138.bezierCurveTo(p774 * 239.00003051757812, p774 * 95.58523559570312, p774 * 242.00003051757812, p774 * 97.58523559570312, p774 * 249.00003051757812, p774 * 94.58523559570312);
    v1138.bezierCurveTo(p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 261.0000305175781, p774 * 111.58523559570312);
    v1138.bezierCurveTo(p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 262.0000305175781, p774 * 87.58523559570312);
    v1138.bezierCurveTo(p774 * 282.0000305175781, p774 * 77.58523559570312, p774 * 301.0000305175781, p774 * 74.58523559570312, p774 * 314.0000305175781, p774 * 76.58523559570312);
    v1138.closePath();
    f89(v1138, p775[0]);
    v1138.globalAlpha = 1;
    v1138.translate(p774 * -15, p774 * -15);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 313.0000305175781, p774 * 76.58523559570312);
    v1138.bezierCurveTo(p774 * 308.0000305175781, p774 * 130.58523559570312, p774 * 279.0000305175781, p774 * 158.58523559570312, p774 * 254.00003051757812, p774 * 175.58523559570312);
    v1138.bezierCurveTo(p774 * 287.0000305175781, p774 * 182.58523559570312, p774 * 274.0000305175781, p774 * 181.08523559570312, p774 * 294.0000305175781, p774 * 186.58523559570312);
    v1138.bezierCurveTo(p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.0000305175781, p774 * 205.58523559570312);
    v1138.bezierCurveTo(p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 315.0000305175781, p774 * 196.58523559570312);
    v1138.bezierCurveTo(p774 * 350.0000305175781, p774 * 219.58523559570312, p774 * 343.0000305175781, p774 * 221.58523559570312, p774 * 351.0000305175781, p774 * 230.58523559570312);
    v1138.bezierCurveTo(p774 * 296.0000305175781, p774 * 260.5852355957031, p774 * 264.0000305175781, p774 * 256.5852355957031, p774 * 220.00003051757812, p774 * 236.58523559570312);
    v1138.bezierCurveTo(p774 * 233.00003051757812, p774 * 266.5852355957031, p774 * 232.00003051757812, p774 * 279.5852355957031, p774 * 231.00003051757812, p774 * 295.5852355957031);
    v1138.bezierCurveTo(p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 213.00003051757812, p774 * 299.5852355957031);
    v1138.bezierCurveTo(p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 226.00003051757812, p774 * 316.5852355957031);
    v1138.bezierCurveTo(p774 * 223.00003051757812, p774 * 344.5852355957031, p774 * 216.00003051757812, p774 * 350.5852355957031, p774 * 209.00003051757812, p774 * 363.5852355957031);
    v1138.bezierCurveTo(p774 * 154.00003051757812, p774 * 318.5852355957031, p774 * 156.00003051757812, p774 * 268.5852355957031, p774 * 160.00003051757812, p774 * 238.58523559570312);
    v1138.bezierCurveTo(p774 * 135.00003051757812, p774 * 268.5852355957031, p774 * 125.00003051757812, p774 * 267.5852355957031, p774 * 112.00003051757812, p774 * 272.5852355957031);
    v1138.bezierCurveTo(p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 97.00003051757812, p774 * 260.5852355957031);
    v1138.bezierCurveTo(p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 89.00003051757812, p774 * 281.5852355957031);
    v1138.bezierCurveTo(p774 * 66.00003051757812, p774 * 288.5852355957031, p774 * 59.000030517578125, p774 * 288.5852355957031, p774 * 39.000030517578125, p774 * 285.5852355957031);
    v1138.bezierCurveTo(p774 * 56.000030517578125, p774 * 216.58523559570312, p774 * 91.00003051757812, p774 * 204.58523559570312, p774 * 129.00003051757812, p774 * 189.58523559570312);
    v1138.bezierCurveTo(p774 * 90.00003051757812, p774 * 176.58523559570312, p774 * 89.00003051757812, p774 * 173.58523559570312, p774 * 79.00003051757812, p774 * 166.58523559570312);
    v1138.bezierCurveTo(p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 85.00003051757812, p774 * 143.58523559570312);
    v1138.bezierCurveTo(p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 66.00003051757812, p774 * 151.58523559570312);
    v1138.bezierCurveTo(p774 * 44.000030517578125, p774 * 133.58523559570312, p774 * 41.000030517578125, p774 * 124.58523559570312, p774 * 34.000030517578125, p774 * 102.58523559570312);
    v1138.bezierCurveTo(p774 * 100.00003051757812, p774 * 81.58523559570312, p774 * 134.00003051757812, p774 * 118.58523559570312, p774 * 150.00003051757812, p774 * 128.58523559570312);
    v1138.bezierCurveTo(p774 * 144.00003051757812, p774 * 102.58523559570312, p774 * 147.00003051757812, p774 * 90.58523559570312, p774 * 150.00003051757812, p774 * 80.58523559570312);
    v1138.bezierCurveTo(p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 169.00003051757812, p774 * 77.58523559570312);
    v1138.bezierCurveTo(p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 157.00003051757812, p774 * 67.58523559570312);
    v1138.bezierCurveTo(p774 * 162.00003051757812, p774 * 42.585235595703125, p774 * 169.00003051757812, p774 * 29.585235595703125, p774 * 182.00003051757812, p774 * 14.585235595703125);
    v1138.bezierCurveTo(p774 * 219.00003051757812, p774 * 48.585235595703125, p774 * 222.00003051757812, p774 * 92.58523559570312, p774 * 218.00003051757812, p774 * 112.58523559570312);
    v1138.bezierCurveTo(p774 * 239.00003051757812, p774 * 95.58523559570312, p774 * 242.00003051757812, p774 * 97.58523559570312, p774 * 249.00003051757812, p774 * 94.58523559570312);
    v1138.bezierCurveTo(p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 261.0000305175781, p774 * 111.58523559570312);
    v1138.bezierCurveTo(p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 262.0000305175781, p774 * 87.58523559570312);
    v1138.bezierCurveTo(p774 * 282.0000305175781, p774 * 77.58523559570312, p774 * 301.0000305175781, p774 * 74.58523559570312, p774 * 314.0000305175781, p774 * 76.58523559570312);
    v1138.closePath();
    f89(v1138, p775[1], p775[2], p774 * 4);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 186.00003051757812, p774 * 192.94886779785156);
    v1138.bezierCurveTo(p774 * 185.00003051757812, p774 * 66.94886779785156, p774 * 184.50003051757812, p774 * 104.94886779785156, p774 * 183.00003051757812, p774 * 16.948867797851562);
    v1138.bezierCurveTo(p774 * 216.00003051757812, p774 * 47.94886779785156, p774 * 219.00003051757812, p774 * 80.94886779785156, p774 * 218.00003051757812, p774 * 113.94886779785156);
    v1138.bezierCurveTo(p774 * 209.00003051757812, p774 * 165.94886779785156, p774 * 200.00003051757812, p774 * 176.94886779785156, p774 * 189.00003051757812, p774 * 192.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 190.00003051757812, p774 * 191.94886779785156);
    v1138.bezierCurveTo(p774 * 207.00003051757812, p774 * 348.94886779785156, p774 * 205.00003051757812, p774 * 323.94886779785156, p774 * 209.00003051757812, p774 * 358.94886779785156);
    v1138.bezierCurveTo(p774 * 171.00003051757812, p774 * 334.94886779785156, p774 * 167.00003051757812, p774 * 302.94886779785156, p774 * 161.00003051757812, p774 * 268.94886779785156);
    v1138.bezierCurveTo(p774 * 160.00003051757812, p774 * 218.94886779785156, p774 * 181.00003051757812, p774 * 191.94886779785156, p774 * 189.00003051757812, p774 * 186.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 194.00003051757812, p774 * 195.94886779785156);
    v1138.bezierCurveTo(p774 * 116.00003051757812, p774 * 150.94886779785156, p774 * 116.00003051757812, p774 * 150.94886779785156, p774 * 38.000030517578125, p774 * 105.94886779785156);
    v1138.bezierCurveTo(p774 * 67.00003051757812, p774 * 90.94886779785156, p774 * 96.00003051757812, p774 * 99.94886779785156, p774 * 123.00003051757812, p774 * 111.94886779785156);
    v1138.bezierCurveTo(p774 * 183.00003051757812, p774 * 152.94886779785156, p774 * 179.00003051757812, p774 * 180.94886779785156, p774 * 193.00003051757812, p774 * 194.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 189.00003051757812, p774 * 190.94886779785156);
    v1138.bezierCurveTo(p774 * 250.00003051757812, p774 * 133.94886779785156, p774 * 311.0000305175781, p774 * 78.94886779785156, p774 * 311.0000305175781, p774 * 76.94886779785156);
    v1138.bezierCurveTo(p774 * 306.0000305175781, p774 * 127.94886779785156, p774 * 283.0000305175781, p774 * 148.94886779785156, p774 * 261.0000305175781, p774 * 166.94886779785156);
    v1138.bezierCurveTo(p774 * 220.00003051757812, p774 * 197.94886779785156, p774 * 191.00003051757812, p774 * 194.94886779785156, p774 * 189.00003051757812, p774 * 195.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 189.00003051757812, p774 * 194.94886779785156);
    v1138.bezierCurveTo(p774 * 268.5000305175781, p774 * 211.94886779785156, p774 * 268.5000305175781, p774 * 211.94886779785156, p774 * 348.0000305175781, p774 * 228.94886779785156);
    v1138.bezierCurveTo(p774 * 316.0000305175781, p774 * 247.94886779785156, p774 * 298.0000305175781, p774 * 256.94886779785156, p774 * 250.00003051757812, p774 * 246.94886779785156);
    v1138.bezierCurveTo(p774 * 197.00003051757812, p774 * 229.94886779785156, p774 * 189.00003051757812, p774 * 202.94886779785156, p774 * 188.00003051757812, p774 * 199.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 192.00003051757812, p774 * 191.94886779785156);
    v1138.bezierCurveTo(p774 * 116.50003051757812, p774 * 238.44886779785156, p774 * 116.50003051757812, p774 * 238.44886779785156, p774 * 41.000030517578125, p774 * 284.94886779785156);
    v1138.bezierCurveTo(p774 * 49.000030517578125, p774 * 252.94886779785156, p774 * 56.000030517578125, p774 * 242.94886779785156, p774 * 80.00003051757812, p774 * 215.94886779785156);
    v1138.bezierCurveTo(p774 * 125.00003051757812, p774 * 181.94886779785156, p774 * 174.00003051757812, p774 * 183.94886779785156, p774 * 192.00003051757812, p774 * 191.94886779785156);
    v1138.closePath();
    f89(v1138, p775[3], p775[3], p774 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p774 * 313.0000305175781, p774 * 76.58523559570312);
    v1138.bezierCurveTo(p774 * 308.0000305175781, p774 * 130.58523559570312, p774 * 279.0000305175781, p774 * 158.58523559570312, p774 * 254.00003051757812, p774 * 175.58523559570312);
    v1138.bezierCurveTo(p774 * 287.0000305175781, p774 * 182.58523559570312, p774 * 274.0000305175781, p774 * 181.08523559570312, p774 * 294.0000305175781, p774 * 186.58523559570312);
    v1138.bezierCurveTo(p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.5000305175781, p774 * 196.08523559570312, p774 * 293.0000305175781, p774 * 205.58523559570312);
    v1138.bezierCurveTo(p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 304.0000305175781, p774 * 201.08523559570312, p774 * 315.0000305175781, p774 * 196.58523559570312);
    v1138.bezierCurveTo(p774 * 350.0000305175781, p774 * 219.58523559570312, p774 * 343.0000305175781, p774 * 221.58523559570312, p774 * 351.0000305175781, p774 * 230.58523559570312);
    v1138.bezierCurveTo(p774 * 296.0000305175781, p774 * 260.5852355957031, p774 * 264.0000305175781, p774 * 256.5852355957031, p774 * 220.00003051757812, p774 * 236.58523559570312);
    v1138.bezierCurveTo(p774 * 233.00003051757812, p774 * 266.5852355957031, p774 * 232.00003051757812, p774 * 279.5852355957031, p774 * 231.00003051757812, p774 * 295.5852355957031);
    v1138.bezierCurveTo(p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 222.00003051757812, p774 * 297.5852355957031, p774 * 213.00003051757812, p774 * 299.5852355957031);
    v1138.bezierCurveTo(p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 219.50003051757812, p774 * 308.0852355957031, p774 * 226.00003051757812, p774 * 316.5852355957031);
    v1138.bezierCurveTo(p774 * 223.00003051757812, p774 * 344.5852355957031, p774 * 216.00003051757812, p774 * 350.5852355957031, p774 * 209.00003051757812, p774 * 363.5852355957031);
    v1138.bezierCurveTo(p774 * 154.00003051757812, p774 * 318.5852355957031, p774 * 156.00003051757812, p774 * 268.5852355957031, p774 * 160.00003051757812, p774 * 238.58523559570312);
    v1138.bezierCurveTo(p774 * 135.00003051757812, p774 * 268.5852355957031, p774 * 125.00003051757812, p774 * 267.5852355957031, p774 * 112.00003051757812, p774 * 272.5852355957031);
    v1138.bezierCurveTo(p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 104.50003051757812, p774 * 266.5852355957031, p774 * 97.00003051757812, p774 * 260.5852355957031);
    v1138.bezierCurveTo(p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 93.00003051757812, p774 * 271.0852355957031, p774 * 89.00003051757812, p774 * 281.5852355957031);
    v1138.bezierCurveTo(p774 * 66.00003051757812, p774 * 288.5852355957031, p774 * 59.000030517578125, p774 * 288.5852355957031, p774 * 39.000030517578125, p774 * 285.5852355957031);
    v1138.bezierCurveTo(p774 * 56.000030517578125, p774 * 216.58523559570312, p774 * 91.00003051757812, p774 * 204.58523559570312, p774 * 129.00003051757812, p774 * 189.58523559570312);
    v1138.bezierCurveTo(p774 * 90.00003051757812, p774 * 176.58523559570312, p774 * 89.00003051757812, p774 * 173.58523559570312, p774 * 79.00003051757812, p774 * 166.58523559570312);
    v1138.bezierCurveTo(p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 82.00003051757812, p774 * 155.08523559570312, p774 * 85.00003051757812, p774 * 143.58523559570312);
    v1138.bezierCurveTo(p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 75.50003051757812, p774 * 147.58523559570312, p774 * 66.00003051757812, p774 * 151.58523559570312);
    v1138.bezierCurveTo(p774 * 44.000030517578125, p774 * 133.58523559570312, p774 * 41.000030517578125, p774 * 124.58523559570312, p774 * 34.000030517578125, p774 * 102.58523559570312);
    v1138.bezierCurveTo(p774 * 100.00003051757812, p774 * 81.58523559570312, p774 * 134.00003051757812, p774 * 118.58523559570312, p774 * 150.00003051757812, p774 * 128.58523559570312);
    v1138.bezierCurveTo(p774 * 144.00003051757812, p774 * 102.58523559570312, p774 * 147.00003051757812, p774 * 90.58523559570312, p774 * 150.00003051757812, p774 * 80.58523559570312);
    v1138.bezierCurveTo(p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 159.50003051757812, p774 * 79.08523559570312, p774 * 169.00003051757812, p774 * 77.58523559570312);
    v1138.bezierCurveTo(p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 163.00003051757812, p774 * 72.58523559570312, p774 * 157.00003051757812, p774 * 67.58523559570312);
    v1138.bezierCurveTo(p774 * 162.00003051757812, p774 * 42.585235595703125, p774 * 169.00003051757812, p774 * 29.585235595703125, p774 * 182.00003051757812, p774 * 14.585235595703125);
    v1138.bezierCurveTo(p774 * 219.00003051757812, p774 * 48.585235595703125, p774 * 222.00003051757812, p774 * 92.58523559570312, p774 * 218.00003051757812, p774 * 112.58523559570312);
    v1138.bezierCurveTo(p774 * 239.00003051757812, p774 * 95.58523559570312, p774 * 242.00003051757812, p774 * 97.58523559570312, p774 * 249.00003051757812, p774 * 94.58523559570312);
    v1138.bezierCurveTo(p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 255.00003051757812, p774 * 103.08523559570312, p774 * 261.0000305175781, p774 * 111.58523559570312);
    v1138.bezierCurveTo(p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 261.5000305175781, p774 * 99.58523559570312, p774 * 262.0000305175781, p774 * 87.58523559570312);
    v1138.bezierCurveTo(p774 * 282.0000305175781, p774 * 77.58523559570312, p774 * 301.0000305175781, p774 * 74.58523559570312, p774 * 314.0000305175781, p774 * 76.58523559570312);
    v1138.closePath();
    f89(v1138, vVUndefined15, p775[2], p774 * 4);
    return v1137;
  }
  function f167(p776, p777, p778) {
    var v1139 = document.createElement("canvas");
    var v1140 = v1139.getContext("2d");
    v1139.width = p776 * 108;
    v1139.height = p776 * 669;
    v1140.translate(p776 * 20, p776 * 20);
    v1140.globalAlpha = p777 ? 0.5 : 1;
    v1140.save();
    v1140.translate(p776 * 54, p776 * 389.5);
    f90(v1140, p776 * -15, p776 * -228.5, p776 * 30, p776 * 457, p776 * 10);
    v1140.restore();
    f89(v1140, p778[0]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 35, p776 * 579);
    v1140.bezierCurveTo(p776 * 47, p776 * 587, p776 * 61, p776 * 584, p776 * 71, p776 * 579);
    v1140.bezierCurveTo(p776 * 75, p776 * 597.5, p776 * 75, p776 * 597.5, p776 * 79, p776 * 616);
    v1140.bezierCurveTo(p776 * 66.5, p776 * 628, p776 * 66.5, p776 * 628, p776 * 54, p776 * 640);
    v1140.bezierCurveTo(p776 * 41, p776 * 628.5, p776 * 41, p776 * 628.5, p776 * 28, p776 * 617);
    v1140.closePath();
    f89(v1140, p778[0]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 30, p776 * 141);
    v1140.bezierCurveTo(p776 * 40, p776 * 136, p776 * 40, p776 * 136, p776 * 50, p776 * 131);
    v1140.bezierCurveTo(p776 * 63, p776 * 136, p776 * 63, p776 * 136, p776 * 76, p776 * 141);
    v1140.bezierCurveTo(p776 * 72.5, p776 * 161.5, p776 * 72.5, p776 * 161.5, p776 * 69, p776 * 182);
    v1140.bezierCurveTo(p776 * 61.5, p776 * 186.5, p776 * 61.5, p776 * 186.5, p776 * 54, p776 * 191);
    v1140.bezierCurveTo(p776 * 45, p776 * 186.5, p776 * 45, p776 * 186.5, p776 * 36, p776 * 182);
    v1140.closePath();
    f89(v1140, p778[0]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 42, p776 * 152);
    v1140.bezierCurveTo(p776 * 53, p776 * 152, p776 * 53, p776 * 152, p776 * 64, p776 * 152);
    v1140.bezierCurveTo(p776 * 62, p776 * 171, p776 * 62, p776 * 176, p776 * 55, p776 * 177);
    v1140.bezierCurveTo(p776 * 42, p776 * 176, p776 * 45, p776 * 174, p776 * 42, p776 * 152);
    v1140.closePath();
    f89(v1140, p778[0]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 52, p776 * 28);
    v1140.bezierCurveTo(p776 * 67.5, p776 * 55, p776 * 67.5, p776 * 55, p776 * 83, p776 * 82);
    v1140.bezierCurveTo(p776 * 80, p776 * 106.5, p776 * 80, p776 * 106.5, p776 * 77, p776 * 131);
    v1140.bezierCurveTo(p776 * 58, p776 * 147, p776 * 44, p776 * 141, p776 * 29, p776 * 131);
    v1140.bezierCurveTo(p776 * 26.5, p776 * 106.5, p776 * 26.5, p776 * 106.5, p776 * 24, p776 * 82);
    v1140.closePath();
    f89(v1140, p778[0]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 53, p776 * 53);
    v1140.bezierCurveTo(p776 * 61, p776 * 70, p776 * 61, p776 * 70, p776 * 69, p776 * 87);
    v1140.bezierCurveTo(p776 * 67, p776 * 106, p776 * 67, p776 * 106, p776 * 65, p776 * 125);
    v1140.bezierCurveTo(p776 * 54, p776 * 130, p776 * 51, p776 * 130, p776 * 41, p776 * 125);
    v1140.bezierCurveTo(p776 * 39, p776 * 105, p776 * 39, p776 * 105, p776 * 37, p776 * 85);
    v1140.closePath();
    f89(v1140, p778[0]);
    v1140.translate(p776 * -20, p776 * -20);
    v1140.globalAlpha = 1;
    v1140.save();
    v1140.translate(p776 * 54, p776 * 389.5);
    v1140.rotate(0);
    f90(v1140, p776 * -15, p776 * -228.5, p776 * 30, p776 * 457, p776 * 10);
    v1140.restore();
    f89(v1140, p778[1], p778[2], p776 * 8);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 35, p776 * 579);
    v1140.bezierCurveTo(p776 * 47, p776 * 587, p776 * 61, p776 * 584, p776 * 71, p776 * 579);
    v1140.bezierCurveTo(p776 * 75, p776 * 597.5, p776 * 75, p776 * 597.5, p776 * 79, p776 * 616);
    v1140.bezierCurveTo(p776 * 66.5, p776 * 628, p776 * 66.5, p776 * 628, p776 * 54, p776 * 640);
    v1140.bezierCurveTo(p776 * 41, p776 * 628.5, p776 * 41, p776 * 628.5, p776 * 28, p776 * 617);
    v1140.closePath();
    f89(v1140, p778[3], p778[4], p776 * 8);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 30, p776 * 141);
    v1140.bezierCurveTo(p776 * 40, p776 * 136, p776 * 40, p776 * 136, p776 * 50, p776 * 131);
    v1140.bezierCurveTo(p776 * 63, p776 * 136, p776 * 63, p776 * 136, p776 * 76, p776 * 141);
    v1140.bezierCurveTo(p776 * 72.5, p776 * 161.5, p776 * 72.5, p776 * 161.5, p776 * 69, p776 * 182);
    v1140.bezierCurveTo(p776 * 61.5, p776 * 186.5, p776 * 61.5, p776 * 186.5, p776 * 54, p776 * 191);
    v1140.bezierCurveTo(p776 * 45, p776 * 186.5, p776 * 45, p776 * 186.5, p776 * 36, p776 * 182);
    v1140.closePath();
    f89(v1140, p778[3], p778[4], p776 * 8);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 42, p776 * 152);
    v1140.bezierCurveTo(p776 * 53, p776 * 152, p776 * 53, p776 * 152, p776 * 64, p776 * 152);
    v1140.bezierCurveTo(p776 * 62, p776 * 171, p776 * 62, p776 * 176, p776 * 55, p776 * 177);
    v1140.bezierCurveTo(p776 * 42, p776 * 176, p776 * 45, p776 * 174, p776 * 42, p776 * 152);
    v1140.closePath();
    f89(v1140, p778[5]);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 52, p776 * 28);
    v1140.bezierCurveTo(p776 * 67.5, p776 * 55, p776 * 67.5, p776 * 55, p776 * 83, p776 * 82);
    v1140.bezierCurveTo(p776 * 80, p776 * 106.5, p776 * 80, p776 * 106.5, p776 * 77, p776 * 131);
    v1140.bezierCurveTo(p776 * 58, p776 * 147, p776 * 44, p776 * 141, p776 * 29, p776 * 131);
    v1140.bezierCurveTo(p776 * 26.5, p776 * 106.5, p776 * 26.5, p776 * 106.5, p776 * 24, p776 * 82);
    v1140.closePath();
    f89(v1140, p778[6], p778[7], p776 * 8);
    v1140.beginPath();
    v1140.lineCap = "round";
    v1140.lineJoin = "round";
    v1140.moveTo(p776 * 53, p776 * 53);
    v1140.bezierCurveTo(p776 * 61, p776 * 70, p776 * 61, p776 * 70, p776 * 69, p776 * 87);
    v1140.bezierCurveTo(p776 * 67, p776 * 106, p776 * 67, p776 * 106, p776 * 65, p776 * 125);
    v1140.bezierCurveTo(p776 * 54, p776 * 130, p776 * 51, p776 * 130, p776 * 41, p776 * 125);
    v1140.bezierCurveTo(p776 * 39, p776 * 105, p776 * 39, p776 * 105, p776 * 37, p776 * 85);
    v1140.closePath();
    f89(v1140, p778[8]);
    return v1139;
  }
  function f168(p779, p780, p781) {
    var v1141 = document.createElement("canvas");
    var v1142 = v1141.getContext("2d");
    var v1143 = p779 * 180;
    var v1144 = p779 * 210;
    var v1145 = (v1147 = p779 * 60) / 4;
    var v1146 = p779 * 20;
    v1141.width = v1143;
    v1141.height = v1144;
    v1142.save();
    v1142.translate(v1143 / 2 - p779 * 0, v1144 / 2 - p779 * 35 + v1146);
    v1142.rotate(Math.PI / -1.8);
    v1142.globalAlpha = 0.5;
    v1142.translate(p779 * 0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[0]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 + p779 * 10, v1144 / 2 + p779 * 15 + v1146);
    v1142.rotate(Math.PI / 2);
    v1142.globalAlpha = 0.5;
    v1142.translate(p779 * 0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[0]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 - p779 * 50, v1144 / 2 + p779 * 40 + v1146);
    v1142.rotate(Math.PI / 3);
    v1142.globalAlpha = 0.5;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[0]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 - p779 * 0, v1144 / 2 - p779 * 35);
    v1142.rotate(Math.PI / -1.8);
    v1142.globalAlpha = 1;
    v1142.translate(p779 * 0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[1]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 + p779 * 10, v1144 / 2 + p779 * 15);
    v1142.rotate(Math.PI / 2);
    v1142.globalAlpha = 1;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[1]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 - p779 * 50, v1144 / 2 + p779 * 40);
    v1142.rotate(Math.PI / 3);
    v1142.globalAlpha = 1;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[1]);
    v1142.restore();
    var v1147;
    v1145 = (v1147 = p779 * 30) / 4;
    v1142.save();
    v1142.translate(v1143 / 2 + p779 * 5, v1144 / 2 - p779 * 20);
    v1142.rotate(Math.PI / -1.8);
    v1142.globalAlpha = 1;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[2]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 + p779 * 0, v1144 / 2 + p779 * 10);
    v1142.rotate(Math.PI / 2);
    v1142.globalAlpha = 1;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[2]);
    v1142.restore();
    v1142.save();
    v1142.translate(v1143 / 2 - p779 * 45, v1144 / 2 + p779 * 35);
    v1142.rotate(Math.PI / 3);
    v1142.globalAlpha = 1;
    v1142.translate(0, p779 * -20);
    f92(v1142, 5, v1147, v1145);
    f89(v1142, p781[2]);
    v1142.restore();
    f94(v1142, v1143 / 2 - p779 * 7, v1144 / 2 + p779 * 7, 5);
    f89(v1142, p781[2]);
    return v1141;
  }
  function f169(p782, p783, p784, p785, p786) {
    var v1148 = document.createElement("canvas");
    var v1149 = v1148.getContext("2d");
    if (p785 == 0) {
      var v1150 = p782 * 270;
      var v1151 = p782 * 250;
      v1148.width = v1150;
      v1148.height = v1151;
      v1149.beginPath();
      v1149.moveTo(p782 * 140, p782 * 3);
      v1149.translate(p782 * -25, p782 * -20);
      v1149.bezierCurveTo(p782 * 218, p782 * 31, p782 * 251, p782 * 61, p782 * 265, p782 * 85);
      v1149.bezierCurveTo(p782 * 278, p782 * 108, p782 * 295, p782 * 160, p782 * 285, p782 * 195);
      v1149.bezierCurveTo(p782 * 271, p782 * 242, p782 * 213, p782 * 268, p782 * 188, p782 * 266);
      v1149.bezierCurveTo(p782 * 139, p782 * 262, p782 * 70, p782 * 244, p782 * 47, p782 * 204);
      v1149.bezierCurveTo(p782 * 20, p782 * 158, p782 * 35, p782 * 78, p782 * 59, p782 * 56);
      v1149.bezierCurveTo(p782 * 90, p782 * 28, p782 * 124, p782 * 23, p782 * 140, p782 * 23);
      v1149.closePath();
      f89(v1149, p784[0]);
    } else if (p785 == 1) {
      v1150 = p782 * 430;
      v1151 = p782 * 350;
      v1148.width = v1150;
      v1148.height = v1151;
      v1149.beginPath();
      v1149.moveTo(p782 * 180, p782 * 5);
      v1149.translate(p782 * -30, p782 * -60);
      v1149.bezierCurveTo(p782 * 283, p782 * 60, p782 * 265, p782 * 163, p782 * 335, p782 * 206);
      v1149.bezierCurveTo(p782 * 376, p782 * 231, p782 * 492, p782 * 299, p782 * 434, p782 * 357);
      v1149.bezierCurveTo(p782 * 371, p782 * 421, p782 * 289, p782 * 394, p782 * 255, p782 * 386);
      v1149.bezierCurveTo(p782 * 218, p782 * 377, p782 * 91, p782 * 359, p782 * 50, p782 * 272);
      v1149.bezierCurveTo(p782 * 12, p782 * 192, p782 * 107, p782 * 75, p782 * 178, p782 * 69);
      v1149.closePath();
      f89(v1149, p784[0]);
    } else if (p785 == 2) {
      v1150 = p782 * 400;
      v1151 = p782 * 300;
      v1148.width = v1150;
      v1148.height = v1151;
      v1149.beginPath();
      v1149.moveTo(p782 * 80, p782 * 52);
      v1149.translate(p782 * -40, p782 * -30);
      v1149.bezierCurveTo(p782 * 124, p782 * 77, p782 * 241, p782 * 22, p782 * 311, p782 * 65);
      v1149.bezierCurveTo(p782 * 352, p782 * 90, p782 * 404, p782 * 176, p782 * 346, p782 * 234);
      v1149.bezierCurveTo(p782 * 283, p782 * 298, p782 * 179, p782 * 299, p782 * 145, p782 * 291);
      v1149.bezierCurveTo(p782 * 108, p782 * 282, p782 * 100, p782 * 239, p782 * 63, p782 * 205);
      v1149.bezierCurveTo(p782 * 37, p782 * 181, p782 * 45, p782 * 131, p782 * 80, p782 * 107);
      v1149.closePath();
      f89(v1149, p784[0]);
    }
    return v1148;
  }
  function f170(p787, p788, p789) {
    var v1152 = document.createElement("canvas");
    var v1153 = v1152.getContext("2d");
    v1152.width = p787 * 220;
    v1152.height = p787 * 180;
    v1153.globalAlpha = p788 ? 0.5 : 1;
    v1153.translate(p787 * -90, p787 * -150);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 104, p787 * 237.8000030517578);
    v1153.bezierCurveTo(p787 * 110, p787 * 237.8000030517578, p787 * 110, p787 * 237.8000030517578, p787 * 116, p787 * 237.8000030517578);
    v1153.bezierCurveTo(p787 * 116, p787 * 241.8000030517578, p787 * 116, p787 * 241.8000030517578, p787 * 116, p787 * 245.8000030517578);
    v1153.bezierCurveTo(p787 * 115, p787 * 245.3000030517578, p787 * 115, p787 * 245.3000030517578, p787 * 114, p787 * 244.8000030517578);
    v1153.bezierCurveTo(p787 * 109.5, p787 * 244.8000030517578, p787 * 109.5, p787 * 244.8000030517578, p787 * 105, p787 * 244.8000030517578);
    v1153.closePath();
    f89(v1153, p789[5], p789[5], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 115, p787 * 211.20000457763672);
    v1153.bezierCurveTo(p787 * 106, p787 * 216.20000457763672, p787 * 101, p787 * 234.20000457763672, p787 * 102, p787 * 241.20000457763672);
    v1153.bezierCurveTo(p787 * 102, p787 * 260.2000045776367, p787 * 115, p787 * 269.2000045776367, p787 * 115, p787 * 269.2000045776367);
    v1153.bezierCurveTo(p787 * 116, p787 * 265.2000045776367, p787 * 115.5, p787 * 265.2000045776367, p787 * 116, p787 * 261.2000045776367);
    v1153.bezierCurveTo(p787 * 112, p787 * 264, p787 * 108, p787 * 254, p787 * 106, p787 * 242);
    v1153.bezierCurveTo(p787 * 105, p787 * 232, p787 * 110, p787 * 222, p787 * 115, p787 * 218);
    v1153.bezierCurveTo(p787 * 116, p787 * 216.75, p787 * 115.5, p787 * 217.375, p787 * 116, p787 * 216.75);
    v1153.closePath();
    f89(v1153, p789[5], p789[5], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 120, p787 * 207);
    v1153.bezierCurveTo(p787 * 115, p787 * 206, p787 * 114, p787 * 209, p787 * 114, p787 * 211);
    v1153.bezierCurveTo(p787 * 114, p787 * 268, p787 * 114, p787 * 241, p787 * 114, p787 * 271);
    v1153.bezierCurveTo(p787 * 115, p787 * 276, p787 * 118, p787 * 276, p787 * 120, p787 * 276);
    v1153.bezierCurveTo(p787 * 122, p787 * 273, p787 * 120.5, p787 * 274.5, p787 * 121, p787 * 273);
    v1153.bezierCurveTo(p787 * 121, p787 * 241, p787 * 121, p787 * 241, p787 * 121, p787 * 209);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 284, p787 * 238);
    v1153.bezierCurveTo(p787 * 289.5, p787 * 238, p787 * 289.5, p787 * 238, p787 * 295, p787 * 238);
    v1153.bezierCurveTo(p787 * 295, p787 * 241.5, p787 * 295, p787 * 241.5, p787 * 295, p787 * 245);
    v1153.bezierCurveTo(p787 * 289.5, p787 * 245, p787 * 289.5, p787 * 245, p787 * 284, p787 * 245);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 283, p787 * 211);
    v1153.bezierCurveTo(p787 * 293, p787 * 216, p787 * 297, p787 * 231, p787 * 297, p787 * 241);
    v1153.bezierCurveTo(p787 * 298, p787 * 254, p787 * 290, p787 * 265, p787 * 284, p787 * 269);
    v1153.bezierCurveTo(p787 * 283, p787 * 266, p787 * 283.5, p787 * 266, p787 * 283, p787 * 263);
    v1153.bezierCurveTo(p787 * 290, p787 * 260, p787 * 292, p787 * 251, p787 * 293, p787 * 242);
    v1153.bezierCurveTo(p787 * 292, p787 * 223, p787 * 289, p787 * 224, p787 * 284, p787 * 218);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 280, p787 * 206);
    v1153.bezierCurveTo(p787 * 284, p787 * 206, p787 * 285, p787 * 208, p787 * 285, p787 * 211);
    v1153.bezierCurveTo(p787 * 285, p787 * 241.5, p787 * 285, p787 * 241.5, p787 * 285, p787 * 272);
    v1153.bezierCurveTo(p787 * 284, p787 * 275, p787 * 284, p787 * 275, p787 * 280, p787 * 275);
    v1153.bezierCurveTo(p787 * 279, p787 * 273.5, p787 * 279, p787 * 273.5, p787 * 278, p787 * 272);
    v1153.bezierCurveTo(p787 * 278, p787 * 240.5, p787 * 278, p787 * 240.5, p787 * 278, p787 * 209);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 138, p787 * 298.40000915527344);
    v1153.bezierCurveTo(p787 * 141, p787 * 311.40000915527344, p787 * 151, p787 * 314.40000915527344, p787 * 162, p787 * 316.40000915527344);
    v1153.bezierCurveTo(p787 * 224, p787 * 316.40000915527344, p787 * 200, p787 * 315.90000915527344, p787 * 238, p787 * 315.40000915527344);
    v1153.bezierCurveTo(p787 * 254, p787 * 316.40000915527344, p787 * 261, p787 * 306.40000915527344, p787 * 264, p787 * 298.40000915527344);
    v1153.bezierCurveTo(p787 * 255, p787 * 304.40000915527344, p787 * 250, p787 * 306.40000915527344, p787 * 244, p787 * 306.40000915527344);
    v1153.bezierCurveTo(p787 * 201, p787 * 306.90000915527344, p787 * 201, p787 * 306.90000915527344, p787 * 158, p787 * 307.40000915527344);
    v1153.bezierCurveTo(p787 * 150, p787 * 306.40000915527344, p787 * 148, p787 * 306.40000915527344, p787 * 139, p787 * 300.40000915527344);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 161, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 130, p787 * 175.5999984741211, p787 * 123, p787 * 190.5999984741211, p787 * 122, p787 * 205.5999984741211);
    v1153.bezierCurveTo(p787 * 121, p787 * 277.5999984741211, p787 * 122, p787 * 242.5999984741211, p787 * 122, p787 * 279.5999984741211);
    v1153.bezierCurveTo(p787 * 128, p787 * 297.5999984741211, p787 * 137, p787 * 299.5999984741211, p787 * 143, p787 * 300.5999984741211);
    v1153.bezierCurveTo(p787 * 163, p787 * 301.0999984741211, p787 * 163, p787 * 301.0999984741211, p787 * 183, p787 * 301.5999984741211);
    v1153.bezierCurveTo(p787 * 150, p787 * 300.5999984741211, p787 * 135, p787 * 290.5999984741211, p787 * 134, p787 * 267.5999984741211);
    v1153.bezierCurveTo(p787 * 133, p787 * 245.5999984741211, p787 * 146, p787 * 235.5999984741211, p787 * 164, p787 * 235.5999984741211);
    v1153.bezierCurveTo(p787 * 206, p787 * 236.0999984741211, p787 * 206, p787 * 236.0999984741211, p787 * 248, p787 * 236.5999984741211);
    v1153.bezierCurveTo(p787 * 266, p787 * 243.5999984741211, p787 * 268, p787 * 259.5999984741211, p787 * 267, p787 * 266.5999984741211);
    v1153.bezierCurveTo(p787 * 266, p787 * 288.5999984741211, p787 * 251, p787 * 294.5999984741211, p787 * 244, p787 * 297.5999984741211);
    v1153.bezierCurveTo(p787 * 228.5, p787 * 299.5999984741211, p787 * 228.5, p787 * 299.5999984741211, p787 * 213, p787 * 301.5999984741211);
    v1153.bezierCurveTo(p787 * 236, p787 * 301.0999984741211, p787 * 236, p787 * 301.0999984741211, p787 * 259, p787 * 300.5999984741211);
    v1153.bezierCurveTo(p787 * 272, p787 * 295.5999984741211, p787 * 277, p787 * 288.5999984741211, p787 * 278, p787 * 271.5999984741211);
    v1153.bezierCurveTo(p787 * 277.5, p787 * 236.5999984741211, p787 * 277.5, p787 * 236.5999984741211, p787 * 277, p787 * 201.5999984741211);
    v1153.bezierCurveTo(p787 * 276, p787 * 186.5999984741211, p787 * 265, p787 * 178.5999984741211, p787 * 254, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 247.5, p787 * 177.5999984741211, p787 * 247.5, p787 * 177.5999984741211, p787 * 241, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 255, p787 * 202.5999984741211, p787 * 214, p787 * 217.5999984741211, p787 * 201, p787 * 215.5999984741211);
    v1153.bezierCurveTo(p787 * 170, p787 * 215.5999984741211, p787 * 152, p787 * 197.5999984741211, p787 * 161, p787 * 178.5999984741211);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 162, p787 * 175.5999984741211);
    v1153.bezierCurveTo(p787 * 153, p787 * 176.0999984741211, p787 * 153, p787 * 176.0999984741211, p787 * 144, p787 * 176.5999984741211);
    v1153.bezierCurveTo(p787 * 125, p787 * 178.5999984741211, p787 * 121, p787 * 196.5999984741211, p787 * 121, p787 * 207.5999984741211);
    v1153.bezierCurveTo(p787 * 121, p787 * 243.20000076293945, p787 * 121, p787 * 243.20000076293945, p787 * 121, p787 * 278.8000030517578);
    v1153.bezierCurveTo(p787 * 126, p787 * 298.8000030517578, p787 * 137, p787 * 300.8000030517578, p787 * 146, p787 * 302.8000030517578);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 302.8000030517578, p787 * 200.5, p787 * 302.8000030517578, p787 * 255, p787 * 302.8000030517578);
    v1153.bezierCurveTo(p787 * 271, p787 * 301.8000030517578, p787 * 279, p787 * 288.8000030517578, p787 * 279, p787 * 273.8000030517578);
    v1153.bezierCurveTo(p787 * 279, p787 * 236.8000030517578, p787 * 279, p787 * 236.8000030517578, p787 * 279, p787 * 199.8000030517578);
    v1153.bezierCurveTo(p787 * 274, p787 * 178.8000030517578, p787 * 263, p787 * 177.8000030517578, p787 * 255, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 248, p787 * 175.8000030517578, p787 * 248, p787 * 175.8000030517578, p787 * 241, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 240, p787 * 175.8000030517578, p787 * 240, p787 * 175.8000030517578, p787 * 239, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 254, p787 * 200.8000030517578, p787 * 222, p787 * 211.8000030517578, p787 * 202, p787 * 212.8000030517578);
    v1153.bezierCurveTo(p787 * 168, p787 * 213.8000030517578, p787 * 151, p787 * 190.8000030517578, p787 * 163, p787 * 176.8000030517578);
    v1153.closePath();
    f89(v1153, vVVUndefined17, p789[4], p787 * 6);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 198, p787 * 161.4000015258789);
    v1153.bezierCurveTo(p787 * 198, p787 * 186.9000015258789, p787 * 198, p787 * 186.9000015258789, p787 * 198, p787 * 212.4000015258789);
    v1153.bezierCurveTo(p787 * 201, p787 * 212.4000015258789, p787 * 201, p787 * 212.4000015258789, p787 * 204, p787 * 212.4000015258789);
    v1153.bezierCurveTo(p787 * 204, p787 * 186.9000015258789, p787 * 204, p787 * 186.9000015258789, p787 * 204, p787 * 161.4000015258789);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 161, p787 * 194);
    v1153.bezierCurveTo(p787 * 188, p787 * 169, p787 * 231, p787 * 179, p787 * 241, p787 * 194);
    v1153.bezierCurveTo(p787 * 239.5, p787 * 196, p787 * 239.5, p787 * 196, p787 * 238, p787 * 198);
    v1153.bezierCurveTo(p787 * 221, p787 * 179, p787 * 182, p787 * 182, p787 * 165, p787 * 198);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 157, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 162, p787 * 150.80000019073486, p787 * 241, p787 * 150.80000019073486, p787 * 245, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 242, p787 * 224.80000019073486, p787 * 162, p787 * 228.80000019073486, p787 * 157, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 159, p787 * 188.80000019073486, p787 * 159, p787 * 188.80000019073486, p787 * 161, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 168, p787 * 216.80000019073486, p787 * 231, p787 * 218.80000019073486, p787 * 241, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 236, p787 * 156.80000019073486, p787 * 169, p787 * 152.80000019073486, p787 * 161, p787 * 188.80000019073486);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 156, p787 * 188);
    v1153.bezierCurveTo(p787 * 160, p787 * 164, p787 * 183, p787 * 159, p787 * 201, p787 * 158);
    v1153.bezierCurveTo(p787 * 232, p787 * 159, p787 * 244, p787 * 174, p787 * 246, p787 * 188);
    v1153.bezierCurveTo(p787 * 245, p787 * 212, p787 * 213, p787 * 219, p787 * 201, p787 * 218);
    v1153.bezierCurveTo(p787 * 181, p787 * 221, p787 * 158, p787 * 207, p787 * 156, p787 * 190);
    v1153.closePath();
    f89(v1153, undefined, p789[4], p787 * 6);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 162, p787 * 189);
    v1153.bezierCurveTo(p787 * 166, p787 * 170, p787 * 185, p787 * 165, p787 * 201, p787 * 164);
    v1153.bezierCurveTo(p787 * 227, p787 * 165, p787 * 240, p787 * 178, p787 * 239, p787 * 188);
    v1153.bezierCurveTo(p787 * 239, p787 * 204, p787 * 210, p787 * 210, p787 * 201, p787 * 210);
    v1153.bezierCurveTo(p787 * 182, p787 * 211, p787 * 166, p787 * 200, p787 * 162, p787 * 190);
    v1153.closePath();
    f89(v1153, vVUndefined16, p789[4], p787 * 6);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 131, p787 * 262);
    v1153.bezierCurveTo(p787 * 136, p787 * 241, p787 * 144, p787 * 236, p787 * 158, p787 * 233);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 233, p787 * 229, p787 * 232, p787 * 243, p787 * 233);
    v1153.bezierCurveTo(p787 * 259, p787 * 235, p787 * 267, p787 * 248, p787 * 269, p787 * 260);
    v1153.bezierCurveTo(p787 * 269, p787 * 266.5, p787 * 269, p787 * 266.5, p787 * 269, p787 * 273);
    v1153.bezierCurveTo(p787 * 265, p787 * 290, p787 * 251, p787 * 297, p787 * 242, p787 * 298);
    v1153.bezierCurveTo(p787 * 202, p787 * 298, p787 * 202, p787 * 298, p787 * 162, p787 * 298);
    v1153.bezierCurveTo(p787 * 148, p787 * 298, p787 * 136, p787 * 289, p787 * 132, p787 * 273);
    v1153.bezierCurveTo(p787 * 131.5, p787 * 268, p787 * 131.5, p787 * 268, p787 * 131, p787 * 263);
    v1153.bezierCurveTo(p787 * 135, p787 * 263, p787 * 135, p787 * 263, p787 * 139, p787 * 263);
    v1153.bezierCurveTo(p787 * 139, p787 * 281, p787 * 151, p787 * 287, p787 * 160, p787 * 290);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 290, p787 * 200.5, p787 * 290, p787 * 241, p787 * 290);
    v1153.bezierCurveTo(p787 * 252, p787 * 290, p787 * 257, p787 * 281, p787 * 262, p787 * 271);
    v1153.bezierCurveTo(p787 * 261.5, p787 * 267, p787 * 261.5, p787 * 267, p787 * 261, p787 * 263);
    v1153.bezierCurveTo(p787 * 260, p787 * 249, p787 * 251, p787 * 242, p787 * 241, p787 * 241);
    v1153.bezierCurveTo(p787 * 240.5, p787 * 240.5, p787 * 240.5, p787 * 240.5, p787 * 240, p787 * 240);
    v1153.bezierCurveTo(p787 * 200, p787 * 240, p787 * 200, p787 * 240, p787 * 160, p787 * 240);
    v1153.bezierCurveTo(p787 * 145, p787 * 244, p787 * 142, p787 * 250, p787 * 139, p787 * 264);
    v1153.closePath();
    f89(v1153, p789[4], p789[4], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 130, p787 * 264);
    v1153.bezierCurveTo(p787 * 132, p787 * 244, p787 * 144, p787 * 235, p787 * 157, p787 * 232);
    v1153.bezierCurveTo(p787 * 245, p787 * 232, p787 * 201, p787 * 232, p787 * 245, p787 * 232);
    v1153.bezierCurveTo(p787 * 264, p787 * 235, p787 * 269, p787 * 251, p787 * 270, p787 * 264);
    v1153.bezierCurveTo(p787 * 272, p787 * 291, p787 * 248, p787 * 299, p787 * 242, p787 * 299);
    v1153.bezierCurveTo(p787 * 200, p787 * 299, p787 * 200, p787 * 299, p787 * 158, p787 * 299);
    v1153.bezierCurveTo(p787 * 139, p787 * 298, p787 * 130, p787 * 276, p787 * 130, p787 * 265);
    v1153.closePath();
    f89(v1153, vVUndefined14, p789[4], p787 * 6);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 140, p787 * 265.33333587646484);
    v1153.bezierCurveTo(p787 * 141, p787 * 250.33333587646484, p787 * 148, p787 * 244.33333587646484, p787 * 160, p787 * 241.33333587646484);
    v1153.bezierCurveTo(p787 * 200, p787 * 241.33333587646484, p787 * 200, p787 * 241.33333587646484, p787 * 240, p787 * 241.33333587646484);
    v1153.bezierCurveTo(p787 * 256, p787 * 243.33333587646484, p787 * 260, p787 * 255.33333587646484, p787 * 260, p787 * 265.33333587646484);
    v1153.bezierCurveTo(p787 * 261, p787 * 281.33333587646484, p787 * 247, p787 * 289.33333587646484, p787 * 240, p787 * 289.33333587646484);
    v1153.bezierCurveTo(p787 * 161, p787 * 289.33333587646484, p787 * 200.5, p787 * 289.33333587646484, p787 * 161, p787 * 289.33333587646484);
    v1153.bezierCurveTo(p787 * 149, p787 * 288.33333587646484, p787 * 142, p787 * 278.33333587646484, p787 * 140, p787 * 266.33333587646484);
    v1153.closePath();
    f89(v1153, vVVVUndefined142, p789[4], p787 * 6);
    v1153.globalAlpha = 0.5;
    v1153.scale(1, 1);
    v1153.translate(p787 * 105, p787 * 155);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 59.27557373046875, p787 * 20.406280517578125);
    v1153.bezierCurveTo(p787 * 74.27557373046875, p787 * 5.406280517578125, p787 * 90.27557373046875, p787 * 6.406280517578125, p787 * 99.27557373046875, p787 * 5.406280517578125);
    v1153.bezierCurveTo(p787 * 120.27557373046875, p787 * 5.406280517578125, p787 * 126.27557373046875, p787 * 10.406280517578125, p787 * 136.27557373046875, p787 * 20.406280517578125);
    v1153.bezierCurveTo(p787 * 157.77557373046875, p787 * 37.906280517578125, p787 * 157.77557373046875, p787 * 37.906280517578125, p787 * 179.27557373046875, p787 * 55.406280517578125);
    v1153.bezierCurveTo(p787 * 190.27557373046875, p787 * 63.406280517578125, p787 * 192.27557373046875, p787 * 77.40628051757812, p787 * 189.27557373046875, p787 * 91.40628051757812);
    v1153.bezierCurveTo(p787 * 183.27557373046875, p787 * 108.40628051757812, p787 * 176.27557373046875, p787 * 110.40628051757812, p787 * 169.27557373046875, p787 * 118.40628051757812);
    v1153.bezierCurveTo(p787 * 152.27557373046875, p787 * 133.40628051757812, p787 * 152.27557373046875, p787 * 133.40628051757812, p787 * 135.27557373046875, p787 * 148.40628051757812);
    v1153.bezierCurveTo(p787 * 87.27557373046875, p787 * 143.40628051757812, p787 * 87.27557373046875, p787 * 143.40628051757812, p787 * 39.27557373046875, p787 * 138.40628051757812);
    v1153.bezierCurveTo(p787 * 26.77557373046875, p787 * 123.40628051757812, p787 * 26.77557373046875, p787 * 123.40628051757812, p787 * 14.27557373046875, p787 * 108.40628051757812);
    v1153.bezierCurveTo(p787 * 2.27557373046875, p787 * 95.40628051757812, p787 * 2.27557373046875, p787 * 92.40628051757812, p787 * 3.27557373046875, p787 * 83.40628051757812);
    v1153.bezierCurveTo(p787 * 4.27557373046875, p787 * 63.406280517578125, p787 * 12.27557373046875, p787 * 60.406280517578125, p787 * 24.27557373046875, p787 * 40.406280517578125);
    v1153.closePath();
    f89(v1153, p789[5], p789[5], p787 * 4);
    v1153.globalAlpha = 1;
    v1153.translate(p787 * -110, p787 * -155);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 104, p787 * 237.8000030517578);
    v1153.bezierCurveTo(p787 * 110, p787 * 237.8000030517578, p787 * 110, p787 * 237.8000030517578, p787 * 116, p787 * 237.8000030517578);
    v1153.bezierCurveTo(p787 * 116, p787 * 241.8000030517578, p787 * 116, p787 * 241.8000030517578, p787 * 116, p787 * 245.8000030517578);
    v1153.bezierCurveTo(p787 * 115, p787 * 245.3000030517578, p787 * 115, p787 * 245.3000030517578, p787 * 114, p787 * 244.8000030517578);
    v1153.bezierCurveTo(p787 * 109.5, p787 * 244.8000030517578, p787 * 109.5, p787 * 244.8000030517578, p787 * 105, p787 * 244.8000030517578);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 115, p787 * 211.20000457763672);
    v1153.bezierCurveTo(p787 * 106, p787 * 216.20000457763672, p787 * 101, p787 * 234.20000457763672, p787 * 102, p787 * 241.20000457763672);
    v1153.bezierCurveTo(p787 * 102, p787 * 260.2000045776367, p787 * 115, p787 * 269.2000045776367, p787 * 115, p787 * 269.2000045776367);
    v1153.bezierCurveTo(p787 * 116, p787 * 265.2000045776367, p787 * 115.5, p787 * 265.2000045776367, p787 * 116, p787 * 261.2000045776367);
    v1153.bezierCurveTo(p787 * 112, p787 * 264, p787 * 108, p787 * 254, p787 * 106, p787 * 242);
    v1153.bezierCurveTo(p787 * 105, p787 * 232, p787 * 110, p787 * 222, p787 * 115, p787 * 218);
    v1153.bezierCurveTo(p787 * 116, p787 * 216.75, p787 * 115.5, p787 * 217.375, p787 * 116, p787 * 216.75);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 120, p787 * 207);
    v1153.bezierCurveTo(p787 * 115, p787 * 206, p787 * 114, p787 * 209, p787 * 114, p787 * 211);
    v1153.bezierCurveTo(p787 * 114, p787 * 268, p787 * 114, p787 * 241, p787 * 114, p787 * 271);
    v1153.bezierCurveTo(p787 * 115, p787 * 276, p787 * 118, p787 * 276, p787 * 120, p787 * 276);
    v1153.bezierCurveTo(p787 * 122, p787 * 273, p787 * 120.5, p787 * 274.5, p787 * 121, p787 * 273);
    v1153.bezierCurveTo(p787 * 121, p787 * 241, p787 * 121, p787 * 241, p787 * 121, p787 * 209);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 284, p787 * 238);
    v1153.bezierCurveTo(p787 * 289.5, p787 * 238, p787 * 289.5, p787 * 238, p787 * 295, p787 * 238);
    v1153.bezierCurveTo(p787 * 295, p787 * 241.5, p787 * 295, p787 * 241.5, p787 * 295, p787 * 245);
    v1153.bezierCurveTo(p787 * 289.5, p787 * 245, p787 * 289.5, p787 * 245, p787 * 284, p787 * 245);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 283, p787 * 211);
    v1153.bezierCurveTo(p787 * 293, p787 * 216, p787 * 297, p787 * 231, p787 * 297, p787 * 241);
    v1153.bezierCurveTo(p787 * 298, p787 * 254, p787 * 290, p787 * 265, p787 * 284, p787 * 269);
    v1153.bezierCurveTo(p787 * 283, p787 * 266, p787 * 283.5, p787 * 266, p787 * 283, p787 * 263);
    v1153.bezierCurveTo(p787 * 290, p787 * 260, p787 * 292, p787 * 251, p787 * 293, p787 * 242);
    v1153.bezierCurveTo(p787 * 292, p787 * 223, p787 * 289, p787 * 224, p787 * 284, p787 * 218);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 280, p787 * 206);
    v1153.bezierCurveTo(p787 * 284, p787 * 206, p787 * 285, p787 * 208, p787 * 285, p787 * 211);
    v1153.bezierCurveTo(p787 * 285, p787 * 241.5, p787 * 285, p787 * 241.5, p787 * 285, p787 * 272);
    v1153.bezierCurveTo(p787 * 284, p787 * 275, p787 * 284, p787 * 275, p787 * 280, p787 * 275);
    v1153.bezierCurveTo(p787 * 279, p787 * 273.5, p787 * 279, p787 * 273.5, p787 * 278, p787 * 272);
    v1153.bezierCurveTo(p787 * 278, p787 * 240.5, p787 * 278, p787 * 240.5, p787 * 278, p787 * 209);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 138, p787 * 298.40000915527344);
    v1153.bezierCurveTo(p787 * 141, p787 * 311.40000915527344, p787 * 151, p787 * 314.40000915527344, p787 * 162, p787 * 316.40000915527344);
    v1153.bezierCurveTo(p787 * 224, p787 * 316.40000915527344, p787 * 200, p787 * 315.90000915527344, p787 * 238, p787 * 315.40000915527344);
    v1153.bezierCurveTo(p787 * 254, p787 * 316.40000915527344, p787 * 261, p787 * 306.40000915527344, p787 * 264, p787 * 298.40000915527344);
    v1153.bezierCurveTo(p787 * 255, p787 * 304.40000915527344, p787 * 250, p787 * 306.40000915527344, p787 * 244, p787 * 306.40000915527344);
    v1153.bezierCurveTo(p787 * 201, p787 * 306.90000915527344, p787 * 201, p787 * 306.90000915527344, p787 * 158, p787 * 307.40000915527344);
    v1153.bezierCurveTo(p787 * 150, p787 * 306.40000915527344, p787 * 148, p787 * 306.40000915527344, p787 * 139, p787 * 300.40000915527344);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 161, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 130, p787 * 175.5999984741211, p787 * 123, p787 * 190.5999984741211, p787 * 122, p787 * 205.5999984741211);
    v1153.bezierCurveTo(p787 * 121, p787 * 277.5999984741211, p787 * 122, p787 * 242.5999984741211, p787 * 122, p787 * 279.5999984741211);
    v1153.bezierCurveTo(p787 * 128, p787 * 297.5999984741211, p787 * 137, p787 * 299.5999984741211, p787 * 143, p787 * 300.5999984741211);
    v1153.bezierCurveTo(p787 * 163, p787 * 301.0999984741211, p787 * 163, p787 * 301.0999984741211, p787 * 183, p787 * 301.5999984741211);
    v1153.bezierCurveTo(p787 * 150, p787 * 300.5999984741211, p787 * 135, p787 * 290.5999984741211, p787 * 134, p787 * 267.5999984741211);
    v1153.bezierCurveTo(p787 * 133, p787 * 245.5999984741211, p787 * 146, p787 * 235.5999984741211, p787 * 164, p787 * 235.5999984741211);
    v1153.bezierCurveTo(p787 * 206, p787 * 236.0999984741211, p787 * 206, p787 * 236.0999984741211, p787 * 248, p787 * 236.5999984741211);
    v1153.bezierCurveTo(p787 * 266, p787 * 243.5999984741211, p787 * 268, p787 * 259.5999984741211, p787 * 267, p787 * 266.5999984741211);
    v1153.bezierCurveTo(p787 * 266, p787 * 288.5999984741211, p787 * 251, p787 * 294.5999984741211, p787 * 244, p787 * 297.5999984741211);
    v1153.bezierCurveTo(p787 * 228.5, p787 * 299.5999984741211, p787 * 228.5, p787 * 299.5999984741211, p787 * 213, p787 * 301.5999984741211);
    v1153.bezierCurveTo(p787 * 236, p787 * 301.0999984741211, p787 * 236, p787 * 301.0999984741211, p787 * 259, p787 * 300.5999984741211);
    v1153.bezierCurveTo(p787 * 272, p787 * 295.5999984741211, p787 * 277, p787 * 288.5999984741211, p787 * 278, p787 * 271.5999984741211);
    v1153.bezierCurveTo(p787 * 277.5, p787 * 236.5999984741211, p787 * 277.5, p787 * 236.5999984741211, p787 * 277, p787 * 201.5999984741211);
    v1153.bezierCurveTo(p787 * 276, p787 * 186.5999984741211, p787 * 265, p787 * 178.5999984741211, p787 * 254, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 247.5, p787 * 177.5999984741211, p787 * 247.5, p787 * 177.5999984741211, p787 * 241, p787 * 177.5999984741211);
    v1153.bezierCurveTo(p787 * 255, p787 * 202.5999984741211, p787 * 214, p787 * 217.5999984741211, p787 * 201, p787 * 215.5999984741211);
    v1153.bezierCurveTo(p787 * 170, p787 * 215.5999984741211, p787 * 152, p787 * 197.5999984741211, p787 * 161, p787 * 178.5999984741211);
    v1153.closePath();
    f89(v1153, p789[2], p789[2], p787 * 4);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 162, p787 * 175.5999984741211);
    v1153.bezierCurveTo(p787 * 153, p787 * 176.0999984741211, p787 * 153, p787 * 176.0999984741211, p787 * 144, p787 * 176.5999984741211);
    v1153.bezierCurveTo(p787 * 125, p787 * 178.5999984741211, p787 * 121, p787 * 196.5999984741211, p787 * 121, p787 * 207.5999984741211);
    v1153.bezierCurveTo(p787 * 121, p787 * 243.20000076293945, p787 * 121, p787 * 243.20000076293945, p787 * 121, p787 * 278.8000030517578);
    v1153.bezierCurveTo(p787 * 126, p787 * 298.8000030517578, p787 * 137, p787 * 300.8000030517578, p787 * 146, p787 * 302.8000030517578);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 302.8000030517578, p787 * 200.5, p787 * 302.8000030517578, p787 * 255, p787 * 302.8000030517578);
    v1153.bezierCurveTo(p787 * 271, p787 * 301.8000030517578, p787 * 279, p787 * 288.8000030517578, p787 * 279, p787 * 273.8000030517578);
    v1153.bezierCurveTo(p787 * 279, p787 * 236.8000030517578, p787 * 279, p787 * 236.8000030517578, p787 * 279, p787 * 199.8000030517578);
    v1153.bezierCurveTo(p787 * 274, p787 * 178.8000030517578, p787 * 263, p787 * 177.8000030517578, p787 * 255, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 248, p787 * 175.8000030517578, p787 * 248, p787 * 175.8000030517578, p787 * 241, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 240, p787 * 175.8000030517578, p787 * 240, p787 * 175.8000030517578, p787 * 239, p787 * 175.8000030517578);
    v1153.bezierCurveTo(p787 * 254, p787 * 200.8000030517578, p787 * 222, p787 * 211.8000030517578, p787 * 202, p787 * 212.8000030517578);
    v1153.bezierCurveTo(p787 * 168, p787 * 213.8000030517578, p787 * 151, p787 * 190.8000030517578, p787 * 163, p787 * 176.8000030517578);
    v1153.closePath();
    f89(v1153, vVUndefined15, p789[3], p787 * 6);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 198, p787 * 161.4000015258789);
    v1153.bezierCurveTo(p787 * 198, p787 * 186.9000015258789, p787 * 198, p787 * 186.9000015258789, p787 * 198, p787 * 212.4000015258789);
    v1153.bezierCurveTo(p787 * 201, p787 * 212.4000015258789, p787 * 201, p787 * 212.4000015258789, p787 * 204, p787 * 212.4000015258789);
    v1153.bezierCurveTo(p787 * 204, p787 * 186.9000015258789, p787 * 204, p787 * 186.9000015258789, p787 * 204, p787 * 161.4000015258789);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 161, p787 * 194);
    v1153.bezierCurveTo(p787 * 188, p787 * 169, p787 * 231, p787 * 179, p787 * 241, p787 * 194);
    v1153.bezierCurveTo(p787 * 239.5, p787 * 196, p787 * 239.5, p787 * 196, p787 * 238, p787 * 198);
    v1153.bezierCurveTo(p787 * 221, p787 * 179, p787 * 182, p787 * 182, p787 * 165, p787 * 198);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 157, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 162, p787 * 150.80000019073486, p787 * 241, p787 * 150.80000019073486, p787 * 245, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 242, p787 * 224.80000019073486, p787 * 162, p787 * 228.80000019073486, p787 * 157, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 159, p787 * 188.80000019073486, p787 * 159, p787 * 188.80000019073486, p787 * 161, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 168, p787 * 216.80000019073486, p787 * 231, p787 * 218.80000019073486, p787 * 241, p787 * 188.80000019073486);
    v1153.bezierCurveTo(p787 * 236, p787 * 156.80000019073486, p787 * 169, p787 * 152.80000019073486, p787 * 161, p787 * 188.80000019073486);
    v1153.closePath();
    f89(v1153, p789[0], p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 156, p787 * 188);
    v1153.bezierCurveTo(p787 * 160, p787 * 164, p787 * 183, p787 * 159, p787 * 201, p787 * 158);
    v1153.bezierCurveTo(p787 * 232, p787 * 159, p787 * 244, p787 * 174, p787 * 246, p787 * 188);
    v1153.bezierCurveTo(p787 * 245, p787 * 212, p787 * 213, p787 * 219, p787 * 201, p787 * 218);
    v1153.bezierCurveTo(p787 * 181, p787 * 221, p787 * 158, p787 * 207, p787 * 156, p787 * 190);
    v1153.closePath();
    f89(v1153, vVUndefined6, p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 162, p787 * 189);
    v1153.bezierCurveTo(p787 * 166, p787 * 170, p787 * 185, p787 * 165, p787 * 201, p787 * 164);
    v1153.bezierCurveTo(p787 * 227, p787 * 165, p787 * 240, p787 * 178, p787 * 239, p787 * 188);
    v1153.bezierCurveTo(p787 * 239, p787 * 204, p787 * 210, p787 * 210, p787 * 201, p787 * 210);
    v1153.bezierCurveTo(p787 * 182, p787 * 211, p787 * 166, p787 * 200, p787 * 162, p787 * 190);
    v1153.closePath();
    f89(v1153, vVVUndefined18, p789[1], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 131, p787 * 262);
    v1153.bezierCurveTo(p787 * 136, p787 * 241, p787 * 144, p787 * 236, p787 * 158, p787 * 233);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 233, p787 * 229, p787 * 232, p787 * 243, p787 * 233);
    v1153.bezierCurveTo(p787 * 259, p787 * 235, p787 * 267, p787 * 248, p787 * 269, p787 * 260);
    v1153.bezierCurveTo(p787 * 269, p787 * 266.5, p787 * 269, p787 * 266.5, p787 * 269, p787 * 273);
    v1153.bezierCurveTo(p787 * 265, p787 * 290, p787 * 251, p787 * 297, p787 * 242, p787 * 298);
    v1153.bezierCurveTo(p787 * 202, p787 * 298, p787 * 202, p787 * 298, p787 * 162, p787 * 298);
    v1153.bezierCurveTo(p787 * 148, p787 * 298, p787 * 136, p787 * 289, p787 * 132, p787 * 273);
    v1153.bezierCurveTo(p787 * 131.5, p787 * 268, p787 * 131.5, p787 * 268, p787 * 131, p787 * 263);
    v1153.bezierCurveTo(p787 * 135, p787 * 263, p787 * 135, p787 * 263, p787 * 139, p787 * 263);
    v1153.bezierCurveTo(p787 * 139, p787 * 281, p787 * 151, p787 * 287, p787 * 160, p787 * 290);
    v1153.bezierCurveTo(p787 * 200.5, p787 * 290, p787 * 200.5, p787 * 290, p787 * 241, p787 * 290);
    v1153.bezierCurveTo(p787 * 252, p787 * 290, p787 * 257, p787 * 281, p787 * 262, p787 * 271);
    v1153.bezierCurveTo(p787 * 261.5, p787 * 267, p787 * 261.5, p787 * 267, p787 * 261, p787 * 263);
    v1153.bezierCurveTo(p787 * 260, p787 * 249, p787 * 251, p787 * 242, p787 * 241, p787 * 241);
    v1153.bezierCurveTo(p787 * 240.5, p787 * 240.5, p787 * 240.5, p787 * 240.5, p787 * 240, p787 * 240);
    v1153.bezierCurveTo(p787 * 200, p787 * 240, p787 * 200, p787 * 240, p787 * 160, p787 * 240);
    v1153.bezierCurveTo(p787 * 145, p787 * 244, p787 * 142, p787 * 250, p787 * 139, p787 * 264);
    v1153.closePath();
    f89(v1153, p789[0], p789[0], p787 * 2);
    v1153.beginPath();
    v1153.lineCap = "round";
    v1153.lineJoin = "round";
    v1153.moveTo(p787 * 130, p787 * 264);
    v1153.bezierCurveTo(p787 * 132, p787 * 244, p787 * 144, p787 * 235, p787 * 157, p787 * 232);
    v1153.bezierCurveTo(p787 * 245, p787 * 232, p787 * 201, p787 * 232, p787 * 245, p787 * 232);
    v1153.bezierCurveTo(p787 * 264, p787 * 235, p787 * 269, p787 * 251, p787 * 270, p787 * 264);
    v1153.bezierCurveTo(p787 * 272, p787 * 291, p787 * 248, p787 * 299, p787 * 242, p787 * 299);
    v1153.bezierCurveTo(p787 * 200, p787 * 299, p787 * 200, p787 * 299, p787 * 158, p787 * 299);
    v1153.bezierCurveTo(p787 * 139, p787 * 298, p787 * 130, p787 * 276, p787 * 130, p787 * 265);
    v1153.closePath();
    f89(v1153, vVVVVVUndefined173, p789[1], p787 * 2);
    return v1152;
  }
  function f171(p790, p791, p792) {
    var v1154 = document.createElement("canvas");
    var v1155 = v1154.getContext("2d");
    v1154.width = p790 * 400;
    v1154.height = p790 * 400;
    v1155.globalAlpha = p791 ? 0.5 : 1;
    v1155.translate(p790 * 10, p790 * 5);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 100.5, p790 * 126.34375);
    v1155.bezierCurveTo(p790 * 151.5, p790 * 104.34375, p790 * 279.5, p790 * 188.34375, p790 * 297.5, p790 * 292.34375);
    v1155.bezierCurveTo(p790 * 222.5, p790 * 307.34375, p790 * 106.5, p790 * 196.34375, p790 * 100.5, p790 * 127.34375);
    v1155.closePath();
    f89(v1155, p792[0], p792[0], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 106.5, p790 * 131.34375);
    v1155.bezierCurveTo(p790 * 140.5, p790 * 142.34375, p790 * 225.5, p790 * 184.34375, p790 * 290.5, p790 * 287.34375);
    v1155.bezierCurveTo(p790 * 270.5, p790 * 188.34375, p790 * 152.5, p790 * 118.34375, p790 * 107.5, p790 * 131.34375);
    v1155.closePath();
    f89(v1155, p792[0]);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 157.5, p790 * 137.34375);
    v1155.bezierCurveTo(p790 * 161.5, p790 * 138.34375, p790 * 164.5, p790 * 140.34375, p790 * 168.5, p790 * 142.34375);
    v1155.bezierCurveTo(p790 * 165.5, p790 * 156.34375, p790 * 141.5, p790 * 176.34375, p790 * 126.5, p790 * 179.34375);
    v1155.bezierCurveTo(p790 * 123.5, p790 * 173.34375, p790 * 120.5, p790 * 169.34375, p790 * 120.5, p790 * 169.34375);
    v1155.bezierCurveTo(p790 * 141.5, p790 * 161.34375, p790 * 156.5, p790 * 145.34375, p790 * 155.5, p790 * 136.34375);
    v1155.closePath();
    f89(v1155, p792[0]);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 196.5, p790 * 151.34375);
    v1155.bezierCurveTo(p790 * 211.5, p790 * 158.34375, p790 * 224.5, p790 * 171.34375, p790 * 229.5, p790 * 176.34375);
    v1155.bezierCurveTo(p790 * 246.5, p790 * 163.34375, p790 * 259.5, p790 * 166.34375, p790 * 272.5, p790 * 168.34375);
    v1155.bezierCurveTo(p790 * 254.5, p790 * 146.34375, p790 * 214.5, p790 * 145.34375, p790 * 198.5, p790 * 151.34375);
    v1155.closePath();
    f89(v1155, p792[0], p792[0], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 154.5, p790 * 222.34375);
    v1155.bezierCurveTo(p790 * 164.5, p790 * 234.34375, p790 * 173.5, p790 * 242.34375, p790 * 178.5, p790 * 245.34375);
    v1155.bezierCurveTo(p790 * 174.5, p790 * 265.34375, p790 * 180.5, p790 * 274.34375, p790 * 186.5, p790 * 283.34375);
    v1155.bezierCurveTo(p790 * 165.5, p790 * 277.34375, p790 * 151.5, p790 * 245.34375, p790 * 155.5, p790 * 224.34375);
    v1155.closePath();
    f89(v1155, p792[0], p792[0], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 279.5, p790 * 294.34375);
    v1155.bezierCurveTo(p790 * 286.5, p790 * 285.84375, p790 * 286.5, p790 * 285.84375, p790 * 293.5, p790 * 277.34375);
    v1155.bezierCurveTo(p790 * 315.5, p790 * 280.34375, p790 * 315.5, p790 * 280.34375, p790 * 337.5, p790 * 283.34375);
    v1155.bezierCurveTo(p790 * 340.5, p790 * 311.34375, p790 * 317.5, p790 * 326.34375, p790 * 307.5, p790 * 331.34375);
    v1155.closePath();
    f89(v1155, p792[0], p792[0], p790 * 12);
    v1155.globalAlpha = 1;
    v1155.translate(p790 * -10, p790 * -5);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 100.5, p790 * 126.34375);
    v1155.bezierCurveTo(p790 * 151.5, p790 * 104.34375, p790 * 279.5, p790 * 188.34375, p790 * 297.5, p790 * 292.34375);
    v1155.bezierCurveTo(p790 * 222.5, p790 * 307.34375, p790 * 106.5, p790 * 196.34375, p790 * 100.5, p790 * 127.34375);
    v1155.closePath();
    f89(v1155, p792[1], p792[2], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 106.5, p790 * 131.34375);
    v1155.bezierCurveTo(p790 * 140.5, p790 * 142.34375, p790 * 225.5, p790 * 184.34375, p790 * 290.5, p790 * 287.34375);
    v1155.bezierCurveTo(p790 * 270.5, p790 * 188.34375, p790 * 152.5, p790 * 118.34375, p790 * 107.5, p790 * 131.34375);
    v1155.closePath();
    f89(v1155, p792[3]);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 157.5, p790 * 137.34375);
    v1155.bezierCurveTo(p790 * 161.5, p790 * 138.34375, p790 * 164.5, p790 * 140.34375, p790 * 168.5, p790 * 142.34375);
    v1155.bezierCurveTo(p790 * 165.5, p790 * 156.34375, p790 * 141.5, p790 * 176.34375, p790 * 126.5, p790 * 179.34375);
    v1155.bezierCurveTo(p790 * 123.5, p790 * 173.34375, p790 * 120.5, p790 * 169.34375, p790 * 120.5, p790 * 169.34375);
    v1155.bezierCurveTo(p790 * 141.5, p790 * 161.34375, p790 * 156.5, p790 * 145.34375, p790 * 155.5, p790 * 136.34375);
    v1155.closePath();
    f89(v1155, p792[4]);
    f94(v1155, p790 * 125.5, p790 * 140.34375, p790 * 11.180339887498949);
    f89(v1155, p792[5]);
    f94(v1155, p790 * 122.5, p790 * 135.34375, p790 * 5.0990195135927845);
    f89(v1155, p792[6]);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 196.5, p790 * 151.34375);
    v1155.bezierCurveTo(p790 * 211.5, p790 * 158.34375, p790 * 224.5, p790 * 171.34375, p790 * 229.5, p790 * 176.34375);
    v1155.bezierCurveTo(p790 * 246.5, p790 * 163.34375, p790 * 259.5, p790 * 166.34375, p790 * 272.5, p790 * 168.34375);
    v1155.bezierCurveTo(p790 * 254.5, p790 * 146.34375, p790 * 214.5, p790 * 145.34375, p790 * 198.5, p790 * 151.34375);
    v1155.closePath();
    f89(v1155, p792[7], p792[8], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 154.5, p790 * 222.34375);
    v1155.bezierCurveTo(p790 * 164.5, p790 * 234.34375, p790 * 173.5, p790 * 242.34375, p790 * 178.5, p790 * 245.34375);
    v1155.bezierCurveTo(p790 * 174.5, p790 * 265.34375, p790 * 180.5, p790 * 274.34375, p790 * 186.5, p790 * 283.34375);
    v1155.bezierCurveTo(p790 * 165.5, p790 * 277.34375, p790 * 151.5, p790 * 245.34375, p790 * 155.5, p790 * 224.34375);
    v1155.closePath();
    f89(v1155, p792[7], p792[8], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 279.5, p790 * 294.34375);
    v1155.bezierCurveTo(p790 * 286.5, p790 * 285.84375, p790 * 286.5, p790 * 285.84375, p790 * 293.5, p790 * 277.34375);
    v1155.bezierCurveTo(p790 * 315.5, p790 * 280.34375, p790 * 315.5, p790 * 280.34375, p790 * 337.5, p790 * 283.34375);
    v1155.bezierCurveTo(p790 * 340.5, p790 * 311.34375, p790 * 317.5, p790 * 326.34375, p790 * 307.5, p790 * 331.34375);
    v1155.closePath();
    f89(v1155, p792[7], p792[8], p790 * 12);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 296.5, p790 * 287.34375);
    v1155.bezierCurveTo(p790 * 311.5, p790 * 291.34375, p790 * 311.5, p790 * 291.34375, p790 * 326.5, p790 * 295.34375);
    v1155.closePath();
    f89(v1155, undefined, p792[9], p790 * 6);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 294.5, p790 * 289.34375);
    v1155.bezierCurveTo(p790 * 308.5, p790 * 297.34375, p790 * 308.5, p790 * 297.34375, p790 * 322.5, p790 * 305.34375);
    v1155.closePath();
    f89(v1155, vVVVUndefined173, p792[9], p790 * 6);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 294.5, p790 * 291.34375);
    v1155.bezierCurveTo(p790 * 304, p790 * 303.34375, p790 * 304, p790 * 303.34375, p790 * 313.5, p790 * 315.34375);
    v1155.closePath();
    f89(v1155, vVVUndefined17, p792[9], p790 * 6);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 226.5, p790 * 161.34375);
    v1155.bezierCurveTo(p790 * 230.5, p790 * 160.34375, p790 * 236.5, p790 * 158.34375, p790 * 238.5, p790 * 161.34375);
    v1155.bezierCurveTo(p790 * 238.5, p790 * 157.34375, p790 * 228.5, p790 * 159.34375, p790 * 227.5, p790 * 161.34375);
    v1155.closePath();
    f89(v1155, undefined, p792[9], p790 * 4);
    v1155.beginPath();
    v1155.lineCap = "round";
    v1155.lineJoin = "round";
    v1155.moveTo(p790 * 167.5, p790 * 248.34375);
    v1155.bezierCurveTo(p790 * 165.5, p790 * 251.34375, p790 * 168.5, p790 * 256.34375, p790 * 168.5, p790 * 253.34375);
    v1155.bezierCurveTo(p790 * 166.5, p790 * 252.34375, p790 * 168.5, p790 * 246.34375, p790 * 166.5, p790 * 247.34375);
    v1155.closePath();
    f89(v1155, undefined, p792[9], p790 * 3);
    return v1154;
  }
  function f172(p793, p794, p795) {
    var v1156 = document.createElement("canvas");
    var v1157 = v1156.getContext("2d");
    v1156.width = p793 * 501;
    v1156.height = p793 * 309;
    v1157.translate(0, p793 * 6);
    v1157.globalAlpha = p794 ? 0.5 : 1;
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 126, p793 * 184);
    v1157.bezierCurveTo(p793 * 169, p793 * 196, p793 * 194, p793 * 198, p793 * 227, p793 * 198);
    v1157.bezierCurveTo(p793 * 235, p793 * 222, p793 * 236, p793 * 223, p793 * 241, p793 * 226);
    v1157.bezierCurveTo(p793 * 245, p793 * 228, p793 * 257, p793 * 228, p793 * 263, p793 * 226);
    v1157.bezierCurveTo(p793 * 267, p793 * 225, p793 * 270, p793 * 211, p793 * 275, p793 * 198);
    v1157.bezierCurveTo(p793 * 332, p793 * 194, p793 * 347, p793 * 192, p793 * 372, p793 * 188);
    v1157.bezierCurveTo(p793 * 366, p793 * 174.5, p793 * 366, p793 * 174.5, p793 * 360, p793 * 161);
    v1157.bezierCurveTo(p793 * 253.5, p793 * 162, p793 * 253.5, p793 * 162, p793 * 147, p793 * 163);
    v1157.closePath();
    f89(v1157, p795[0]);
    v1157.globalAlpha = 1;
    v1157.translate(0, p793 * -6);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 100, p793 * 116);
    v1157.bezierCurveTo(p793 * 90, p793 * 101, p793 * 96, p793 * 89, p793 * 106, p793 * 83);
    v1157.bezierCurveTo(p793 * 86, p793 * 79, p793 * 86, p793 * 52, p793 * 93, p793 * 38);
    v1157.bezierCurveTo(p793 * 99, p793 * 51, p793 * 107, p793 * 57, p793 * 122, p793 * 63);
    v1157.bezierCurveTo(p793 * 130, p793 * 53, p793 * 141, p793 * 46, p793 * 161, p793 * 46);
    v1157.bezierCurveTo(p793 * 157, p793 * 31, p793 * 158, p793 * 20, p793 * 169, p793 * 6);
    v1157.bezierCurveTo(p793 * 171, p793 * 24, p793 * 186, p793 * 33, p793 * 198, p793 * 45);
    v1157.bezierCurveTo(p793 * 252, p793 * 45, p793 * 252, p793 * 45, p793 * 306, p793 * 45);
    v1157.bezierCurveTo(p793 * 323, p793 * 33, p793 * 332, p793 * 21, p793 * 335, p793 * 7);
    v1157.bezierCurveTo(p793 * 349, p793 * 21, p793 * 347, p793 * 36, p793 * 345, p793 * 46);
    v1157.bezierCurveTo(p793 * 364, p793 * 46, p793 * 369, p793 * 48, p793 * 377, p793 * 63);
    v1157.bezierCurveTo(p793 * 398, p793 * 58, p793 * 403, p793 * 49, p793 * 409, p793 * 40);
    v1157.bezierCurveTo(p793 * 419, p793 * 57, p793 * 411, p793 * 79, p793 * 398, p793 * 85);
    v1157.bezierCurveTo(p793 * 405, p793 * 100, p793 * 405, p793 * 106, p793 * 401, p793 * 118);
    v1157.bezierCurveTo(p793 * 332.5, p793 * 128.5, p793 * 332.5, p793 * 128.5, p793 * 264, p793 * 139);
    v1157.closePath();
    f89(v1157, p795[1], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 122, p793 * 191);
    v1157.bezierCurveTo(p793 * 123, p793 * 237, p793 * 135, p793 * 245, p793 * 153, p793 * 259);
    v1157.bezierCurveTo(p793 * 167, p793 * 269, p793 * 158, p793 * 281, p793 * 118, p793 * 276);
    v1157.bezierCurveTo(p793 * 104, p793 * 273, p793 * 98, p793 * 268, p793 * 93, p793 * 242);
    v1157.bezierCurveTo(p793 * 89, p793 * 220, p793 * 92, p793 * 201, p793 * 102, p793 * 179);
    v1157.closePath();
    f89(v1157, p795[3], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 403, p793 * 182);
    v1157.bezierCurveTo(p793 * 414, p793 * 215, p793 * 412, p793 * 232, p793 * 403, p793 * 260);
    v1157.bezierCurveTo(p793 * 395, p793 * 274, p793 * 375, p793 * 272, p793 * 356, p793 * 270);
    v1157.bezierCurveTo(p793 * 345, p793 * 268, p793 * 339, p793 * 262, p793 * 354, p793 * 252);
    v1157.bezierCurveTo(p793 * 370, p793 * 242, p793 * 380, p793 * 225, p793 * 384, p793 * 184);
    v1157.closePath();
    f89(v1157, p795[3], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 155, p793 * 157);
    v1157.bezierCurveTo(p793 * 146, p793 * 189, p793 * 137, p793 * 198, p793 * 114, p793 * 219);
    v1157.bezierCurveTo(p793 * 104, p793 * 212, p793 * 98, p793 * 203, p793 * 89, p793 * 189);
    v1157.bezierCurveTo(p793 * 82, p793 * 178, p793 * 91, p793 * 164, p793 * 93, p793 * 136);
    v1157.closePath();
    f89(v1157, p795[4], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 347, p793 * 162);
    v1157.bezierCurveTo(p793 * 357, p793 * 195, p793 * 376, p793 * 209, p793 * 387, p793 * 217);
    v1157.bezierCurveTo(p793 * 409, p793 * 201, p793 * 420, p793 * 181, p793 * 416, p793 * 166);
    v1157.bezierCurveTo(p793 * 410, p793 * 150, p793 * 412, p793 * 149, p793 * 408, p793 * 130);
    v1157.closePath();
    f89(v1157, p795[4], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 86, p793 * 134);
    v1157.bezierCurveTo(p793 * 79, p793 * 102, p793 * 92, p793 * 84, p793 * 108, p793 * 92);
    v1157.bezierCurveTo(p793 * 149, p793 * 108, p793 * 184, p793 * 111, p793 * 242, p793 * 111);
    v1157.bezierCurveTo(p793 * 294, p793 * 108, p793 * 341, p793 * 105, p793 * 386, p793 * 98);
    v1157.bezierCurveTo(p793 * 412, p793 * 91, p793 * 417, p793 * 86, p793 * 415, p793 * 133);
    v1157.bezierCurveTo(p793 * 413, p793 * 160, p793 * 413, p793 * 160, p793 * 368, p793 * 174);
    v1157.bezierCurveTo(p793 * 308, p793 * 184, p793 * 291, p793 * 185, p793 * 270, p793 * 186);
    v1157.bezierCurveTo(p793 * 264, p793 * 206, p793 * 262, p793 * 215, p793 * 253, p793 * 215);
    v1157.bezierCurveTo(p793 * 239, p793 * 217, p793 * 239, p793 * 211, p793 * 231, p793 * 186);
    v1157.bezierCurveTo(p793 * 178, p793 * 184, p793 * 156, p793 * 179, p793 * 112, p793 * 162);
    v1157.bezierCurveTo(p793 * 87, p793 * 151, p793 * 90, p793 * 144, p793 * 87, p793 * 137);
    v1157.closePath();
    f89(v1157, p795[4], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 63, p793 * 98);
    v1157.bezierCurveTo(p793 * 84, p793 * 121, p793 * 109, p793 * 102, p793 * 124, p793 * 117);
    v1157.bezierCurveTo(p793 * 138, p793 * 136, p793 * 123, p793 * 165, p793 * 94, p793 * 150);
    v1157.bezierCurveTo(p793 * 66, p793 * 131, p793 * 64, p793 * 115, p793 * 63, p793 * 99);
    v1157.closePath();
    f89(v1157, p795[3], p795[2], p793 * 10);
    v1157.beginPath();
    v1157.lineCap = "round";
    v1157.lineJoin = "round";
    v1157.moveTo(p793 * 449, p793 * 97);
    v1157.bezierCurveTo(p793 * 446, p793 * 143, p793 * 415, p793 * 151, p793 * 402, p793 * 155);
    v1157.bezierCurveTo(p793 * 386, p793 * 157, p793 * 373, p793 * 133, p793 * 391, p793 * 116);
    v1157.bezierCurveTo(p793 * 402, p793 * 106, p793 * 432, p793 * 124, p793 * 449, p793 * 97);
    v1157.closePath();
    f89(v1157, p795[3], p795[2], p793 * 10);
    return v1156;
  }
  function f173(p796, p797, p798) {
    var v1158 = document.createElement("canvas");
    var v1159 = v1158.getContext("2d");
    v1158.width = p796 * 400;
    v1158.height = p796 * 400;
    v1159.beginPath();
    v1159.lineCap = "round";
    v1159.lineJoin = "round";
    v1159.moveTo(p796 * 96.5, p796 * 277.34375);
    v1159.bezierCurveTo(p796 * 197.5, p796 * 259.84375, p796 * 197.5, p796 * 259.84375, p796 * 298.5, p796 * 242.34375);
    v1159.bezierCurveTo(p796 * 311.5, p796 * 231.34375, p796 * 307.5, p796 * 168.34375, p796 * 298.5, p796 * 150.34375);
    v1159.bezierCurveTo(p796 * 198, p796 * 170.34375, p796 * 198, p796 * 170.34375, p796 * 97.5, p796 * 190.34375);
    v1159.closePath();
    f89(v1159, p798[1], p798[2], p796 * 12);
    v1159.beginPath();
    v1159.lineCap = "round";
    v1159.lineJoin = "round";
    v1159.moveTo(p796 * 98.5, p796 * 214.34375);
    v1159.bezierCurveTo(p796 * 199, p796 * 196.34375, p796 * 199, p796 * 196.34375, p796 * 299.5, p796 * 178.34375);
    v1159.closePath();
    f89(v1159, undefined, p798[2], p796 * 12);
    v1159.beginPath();
    v1159.lineCap = "round";
    v1159.lineJoin = "round";
    v1159.moveTo(p796 * 98.5, p796 * 247.34375);
    v1159.bezierCurveTo(p796 * 201.5, p796 * 229.34375, p796 * 201.5, p796 * 229.34375, p796 * 304.5, p796 * 211.34375);
    v1159.closePath();
    f89(v1159, vVVVVUndefined1722, p798[2], p796 * 12);
    v1159.beginPath();
    v1159.lineCap = "round";
    v1159.lineJoin = "round";
    v1159.moveTo(p796 * 97.5, p796 * 189.34375);
    v1159.bezierCurveTo(p796 * 97, p796 * 199.84375, p796 * 97, p796 * 199.84375, p796 * 96.5, p796 * 210.34375);
    v1159.bezierCurveTo(p796 * 110.5, p796 * 204.34375, p796 * 110.5, p796 * 204.34375, p796 * 124.5, p796 * 198.34375);
    v1159.bezierCurveTo(p796 * 137.5, p796 * 203.84375, p796 * 137.5, p796 * 203.84375, p796 * 150.5, p796 * 209.34375);
    v1159.bezierCurveTo(p796 * 172, p796 * 197.84375, p796 * 172, p796 * 197.84375, p796 * 193.5, p796 * 186.34375);
    v1159.bezierCurveTo(p796 * 211.5, p796 * 189.84375, p796 * 211.5, p796 * 189.84375, p796 * 229.5, p796 * 193.34375);
    v1159.bezierCurveTo(p796 * 240.5, p796 * 193.34375, p796 * 240.5, p796 * 193.34375, p796 * 251.5, p796 * 193.34375);
    v1159.bezierCurveTo(p796 * 261, p796 * 182.84375, p796 * 261, p796 * 182.84375, p796 * 270.5, p796 * 172.34375);
    v1159.bezierCurveTo(p796 * 287.5, p796 * 169.34375, p796 * 287.5, p796 * 169.34375, p796 * 304.5, p796 * 166.34375);
    v1159.bezierCurveTo(p796 * 304.5, p796 * 156.34375, p796 * 300.5, p796 * 145.34375, p796 * 298.5, p796 * 147.34375);
    v1159.closePath();
    f89(v1159, p798[3], p798[4], p796 * 12);
    v1159.beginPath();
    v1159.lineCap = "round";
    v1159.lineJoin = "round";
    v1159.moveTo(p796 * 300.5, p796 * 147.34375);
    v1159.bezierCurveTo(p796 * 293.5, p796 * 121.34375, p796 * 278.5, p796 * 106.34375, p796 * 256.5, p796 * 101.34375);
    v1159.bezierCurveTo(p796 * 176.5, p796 * 145.34375, p796 * 176.5, p796 * 145.34375, p796 * 96.5, p796 * 189.34375);
    v1159.closePath();
    f89(v1159, p798[5], p798[6], p796 * 12);
    f94(v1159, p796 * 252.5, p796 * 129.34375, p796 * 18.027756377319946);
    f89(v1159, p798[7]);
    f94(v1159, p796 * 248.5, p796 * 121.34375, p796 * 8.246211251235321);
    f89(v1159, p798[8]);
    return v1158;
  }
  function f174(p799, p800, p801) {
    var v1160 = document.createElement("canvas");
    var v1161 = v1160.getContext("2d");
    v1160.width = p799 * 43;
    v1160.height = p799 * 209;
    v1161.globalAlpha = p800 ? 0.5 : 1;
    v1161.translate(0, p799 * 10);
    v1161.translate(p799 * 5, p799 * 5);
    v1161.save();
    v1161.translate(p799 * 21, p799 * 102.5);
    f90(v1161, p799 * -4, p799 * -76.5, p799 * 8, p799 * 163, p799 * 10);
    v1161.restore();
    f89(v1161, p801[0]);
    v1161.translate(0, p799 * 10);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 20, p799 * 10);
    v1161.bezierCurveTo(p799 * 25, p799 * 25.5, p799 * 25, p799 * 25.5, p799 * 30, p799 * 41);
    v1161.bezierCurveTo(p799 * 25.5, p799 * 38.5, p799 * 25.5, p799 * 38.5, p799 * 21, p799 * 36);
    v1161.bezierCurveTo(p799 * 16, p799 * 38.5, p799 * 16, p799 * 38.5, p799 * 11, p799 * 41);
    v1161.closePath();
    f89(v1161, p801[0]);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 21, p799 * 1);
    v1161.bezierCurveTo(p799 * 28, p799 * 18, p799 * 28, p799 * 18, p799 * 35, p799 * 35);
    v1161.bezierCurveTo(p799 * 28.5, p799 * 32, p799 * 28.5, p799 * 32, p799 * 22, p799 * 29);
    v1161.bezierCurveTo(p799 * 14.5, p799 * 32.5, p799 * 14.5, p799 * 32.5, p799 * 7, p799 * 36);
    v1161.closePath();
    f89(v1161, p801[0]);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 14, p799 * 146);
    v1161.bezierCurveTo(p799 * 21, p799 * 146, p799 * 21, p799 * 146, p799 * 28, p799 * 146);
    v1161.bezierCurveTo(p799 * 27.5, p799 * 147.5, p799 * 27.5, p799 * 147.5, p799 * 27, p799 * 149);
    v1161.bezierCurveTo(p799 * 27, p799 * 160, p799 * 27, p799 * 160, p799 * 27, p799 * 171);
    v1161.bezierCurveTo(p799 * 27.5, p799 * 171.5, p799 * 27.5, p799 * 171.5, p799 * 28, p799 * 172);
    v1161.bezierCurveTo(p799 * 21, p799 * 172, p799 * 21, p799 * 172, p799 * 14, p799 * 172);
    v1161.bezierCurveTo(p799 * 14, p799 * 171.5, p799 * 14, p799 * 171.5, p799 * 14, p799 * 171);
    v1161.bezierCurveTo(p799 * 14.5, p799 * 171.5, p799 * 14.5, p799 * 171.5, p799 * 15, p799 * 172);
    v1161.bezierCurveTo(p799 * 15, p799 * 160.5, p799 * 15, p799 * 160.5, p799 * 15, p799 * 149);
    v1161.closePath();
    f89(v1161, p801[0]);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 21, p799 * 6);
    v1161.bezierCurveTo(p799 * 26.5, p799 * 18.5, p799 * 26.5, p799 * 18.5, p799 * 32, p799 * 31);
    v1161.bezierCurveTo(p799 * 27, p799 * 29, p799 * 27, p799 * 29, p799 * 22, p799 * 27);
    v1161.closePath();
    f89(v1161, p801[0]);
    v1161.translate(0, p799 * -20);
    v1161.globalAlpha = 1;
    v1161.translate(0, p799 * 10);
    v1161.translate(p799 * -5, p799 * -5);
    v1161.save();
    v1161.translate(p799 * 21, p799 * 102.5);
    f90(v1161, p799 * -4, p799 * -76.5, p799 * 8, p799 * 163, p799 * 10);
    v1161.restore();
    f89(v1161, p801[1], p801[2], p799 * 4);
    v1161.translate(0, p799 * 10);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 20, p799 * 10);
    v1161.bezierCurveTo(p799 * 25, p799 * 25.5, p799 * 25, p799 * 25.5, p799 * 30, p799 * 41);
    v1161.bezierCurveTo(p799 * 25.5, p799 * 38.5, p799 * 25.5, p799 * 38.5, p799 * 21, p799 * 36);
    v1161.bezierCurveTo(p799 * 16, p799 * 38.5, p799 * 16, p799 * 38.5, p799 * 11, p799 * 41);
    v1161.closePath();
    f89(v1161, p801[3], p801[4], p799 * 4);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 21, p799 * 1);
    v1161.bezierCurveTo(p799 * 28, p799 * 18, p799 * 28, p799 * 18, p799 * 35, p799 * 35);
    v1161.bezierCurveTo(p799 * 28.5, p799 * 32, p799 * 28.5, p799 * 32, p799 * 22, p799 * 29);
    v1161.bezierCurveTo(p799 * 14.5, p799 * 32.5, p799 * 14.5, p799 * 32.5, p799 * 7, p799 * 36);
    v1161.closePath();
    f89(v1161, p801[5], p801[6], p799 * 4);
    v1161.translate(0, p799 * 0);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 14, p799 * 146);
    v1161.bezierCurveTo(p799 * 21, p799 * 146, p799 * 21, p799 * 146, p799 * 28, p799 * 146);
    v1161.bezierCurveTo(p799 * 27.5, p799 * 147.5, p799 * 27.5, p799 * 147.5, p799 * 27, p799 * 149);
    v1161.bezierCurveTo(p799 * 27, p799 * 160, p799 * 27, p799 * 160, p799 * 27, p799 * 171);
    v1161.bezierCurveTo(p799 * 27.5, p799 * 171.5, p799 * 27.5, p799 * 171.5, p799 * 28, p799 * 172);
    v1161.bezierCurveTo(p799 * 21, p799 * 172, p799 * 21, p799 * 172, p799 * 14, p799 * 172);
    v1161.bezierCurveTo(p799 * 14, p799 * 171.5, p799 * 14, p799 * 171.5, p799 * 14, p799 * 171);
    v1161.bezierCurveTo(p799 * 14.5, p799 * 171.5, p799 * 14.5, p799 * 171.5, p799 * 15, p799 * 172);
    v1161.bezierCurveTo(p799 * 15, p799 * 160.5, p799 * 15, p799 * 160.5, p799 * 15, p799 * 149);
    v1161.closePath();
    f89(v1161, p801[1], p801[2], p799 * 4);
    v1161.beginPath();
    v1161.lineCap = "round";
    v1161.lineJoin = "round";
    v1161.moveTo(p799 * 21, p799 * 6);
    v1161.bezierCurveTo(p799 * 26.5, p799 * 18.5, p799 * 26.5, p799 * 18.5, p799 * 32, p799 * 31);
    v1161.bezierCurveTo(p799 * 27, p799 * 29, p799 * 27, p799 * 29, p799 * 22, p799 * 27);
    v1161.closePath();
    f89(v1161, p801[8]);
    return v1160;
  }
  function f175(p802, p803, p804) {
    var v1162 = document.createElement("canvas");
    var v1163 = v1162.getContext("2d");
    v1162.width = p802 * 138;
    v1162.height = p802 * 133;
    v1163.globalAlpha = p803 ? 0.3 : 1;
    v1163.translate(0, p802 * 5);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 26, p802 * 79.640625);
    v1163.bezierCurveTo(p802 * 13, p802 * 84.640625, p802 * 9, p802 * 86.640625, p802 * 7, p802 * 78.640625);
    v1163.bezierCurveTo(p802 * 6, p802 * 69.640625, p802 * 15, p802 * 67.640625, p802 * 31, p802 * 62.640625);
    v1163.bezierCurveTo(p802 * 63, p802 * 55.640625, p802 * 85, p802 * 57.640625, p802 * 104, p802 * 63.640625);
    v1163.bezierCurveTo(p802 * 131, p802 * 69.640625, p802 * 132, p802 * 71.640625, p802 * 131, p802 * 78.640625);
    v1163.bezierCurveTo(p802 * 131, p802 * 91.640625, p802 * 112, p802 * 80.640625, p802 * 91, p802 * 75.640625);
    v1163.bezierCurveTo(p802 * 51, p802 * 70.640625, p802 * 45, p802 * 74.640625, p802 * 28, p802 * 78.640625);
    v1163.closePath();
    f89(v1163, p804[0]);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 8, p802 * 82.640625);
    v1163.bezierCurveTo(p802 * 40, p802 * 107.640625, p802 * 53, p802 * 104.640625, p802 * 67, p802 * 106.640625);
    v1163.bezierCurveTo(p802 * 101, p802 * 103.640625, p802 * 117, p802 * 93.640625, p802 * 127, p802 * 84.640625);
    v1163.bezierCurveTo(p802 * 135, p802 * 95.640625, p802 * 131, p802 * 107.640625, p802 * 110, p802 * 118.640625);
    v1163.bezierCurveTo(p802 * 78, p802 * 129.640625, p802 * 67, p802 * 130.640625, p802 * 27, p802 * 119.640625);
    v1163.bezierCurveTo(p802 * 0, p802 * 105.640625, p802 * 8, p802 * 83.640625, p802 * 10, p802 * 84.640625);
    v1163.closePath();
    f89(v1163, p804[0]);
    v1163.globalAlpha = 1;
    v1163.translate(0, p802 * -5);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 8, p802 * 73.640625);
    v1163.bezierCurveTo(p802 * 7, p802 * 23.640625, p802 * 33, p802 * 19.640625, p802 * 71, p802 * 17.640625);
    v1163.bezierCurveTo(p802 * 129, p802 * 19.640625, p802 * 130, p802 * 45.640625, p802 * 130, p802 * 76.640625);
    v1163.bezierCurveTo(p802 * 90, p802 * 63.640625, p802 * 85, p802 * 63.640625, p802 * 73, p802 * 63.640625);
    v1163.bezierCurveTo(p802 * 38, p802 * 63.640625, p802 * 33, p802 * 66.640625, p802 * 8, p802 * 73.640625);
    v1163.closePath();
    f89(v1163, p804[1], p804[2], p802 * 4);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 72, p802 * 28.640625);
    v1163.bezierCurveTo(p802 * 51, p802 * 25.640625, p802 * 56, p802 * 7.640625, p802 * 70, p802 * 5.640625);
    v1163.bezierCurveTo(p802 * 94, p802 * 7.640625, p802 * 87, p802 * 29.640625, p802 * 72, p802 * 28.640625);
    v1163.closePath();
    f89(v1163, p804[3], p804[2], p802 * 4);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 51, p802 * 26.640625);
    v1163.bezierCurveTo(p802 * 42, p802 * 29.640625, p802 * 43, p802 * 31.640625, p802 * 42, p802 * 37.640625);
    f89(v1163, vVVUndefined163, p804[2], p802 * 4);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 90, p802 * 26.640625);
    v1163.bezierCurveTo(p802 * 100, p802 * 28.640625, p802 * 98, p802 * 34.640625, p802 * 99, p802 * 38.640625);
    f89(v1163, vVUndefined16, p804[2], p802 * 4);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 26, p802 * 79.640625);
    v1163.bezierCurveTo(p802 * 13, p802 * 84.640625, p802 * 9, p802 * 86.640625, p802 * 7, p802 * 78.640625);
    v1163.bezierCurveTo(p802 * 6, p802 * 69.640625, p802 * 15, p802 * 67.640625, p802 * 31, p802 * 62.640625);
    v1163.bezierCurveTo(p802 * 63, p802 * 55.640625, p802 * 85, p802 * 57.640625, p802 * 104, p802 * 63.640625);
    v1163.bezierCurveTo(p802 * 131, p802 * 69.640625, p802 * 132, p802 * 71.640625, p802 * 131, p802 * 78.640625);
    v1163.bezierCurveTo(p802 * 131, p802 * 91.640625, p802 * 112, p802 * 80.640625, p802 * 91, p802 * 75.640625);
    v1163.bezierCurveTo(p802 * 51, p802 * 70.640625, p802 * 45, p802 * 74.640625, p802 * 28, p802 * 78.640625);
    v1163.closePath();
    f89(v1163, p804[3], p804[4], p802 * 4);
    v1163.beginPath();
    v1163.lineCap = "round";
    v1163.lineJoin = "round";
    v1163.moveTo(p802 * 8, p802 * 82.640625);
    v1163.bezierCurveTo(p802 * 40, p802 * 107.640625, p802 * 53, p802 * 104.640625, p802 * 67, p802 * 106.640625);
    v1163.bezierCurveTo(p802 * 101, p802 * 103.640625, p802 * 117, p802 * 93.640625, p802 * 127, p802 * 84.640625);
    v1163.bezierCurveTo(p802 * 135, p802 * 95.640625, p802 * 131, p802 * 107.640625, p802 * 110, p802 * 118.640625);
    v1163.bezierCurveTo(p802 * 78, p802 * 129.640625, p802 * 67, p802 * 130.640625, p802 * 27, p802 * 119.640625);
    v1163.bezierCurveTo(p802 * 0, p802 * 105.640625, p802 * 8, p802 * 83.640625, p802 * 10, p802 * 84.640625);
    v1163.closePath();
    f89(v1163, p804[3], p804[4], p802 * 4);
    return v1162;
  }
  function f176(p805, p806, p807) {
    var v1164 = document.createElement("canvas");
    var v1165 = v1164.getContext("2d");
    var v1166 = p805 * 120;
    var v1167 = p805 * 150;
    var v1168 = p805 * 60;
    var v1169 = v1168 / 4;
    var v1170 = p805 * 15;
    v1164.width = v1166;
    v1164.height = v1167;
    v1165.save();
    v1165.translate(v1166 / 2 + p805 * 0, v1167 / 2 + p805 * 0 + v1170);
    v1165.rotate(Math.PI / 3);
    v1165.globalAlpha = 0.5;
    f92(v1165, 8, v1168, v1169);
    f89(v1165, p807[0]);
    v1165.restore();
    v1165.save();
    v1165.translate(v1166 / 2 - p805 * 11, v1167 / 2 + p805 * 12);
    v1165.globalAlpha = 1;
    v1165.rotate(Math.PI / 3);
    v1165.translate(0, -v1170);
    f92(v1165, 8, v1168, v1169);
    f89(v1165, p807[1]);
    v1165.restore();
    v1165.save();
    v1165.translate(v1166 / 2 - p805 * 9, v1167 / 2 - p805 * 12);
    v1165.rotate(Math.PI / 2.8);
    f92(v1165, 5, v1168 * 0.5, v1169 * 0.4);
    f89(v1165, p807[2]);
    v1165.restore();
    v1165.save();
    v1165.translate(v1166 / 2 + p805 * 19, v1167 / 2 + p805 * 5);
    v1165.rotate(Math.PI / 1);
    f92(v1165, 5, v1168 * 0.5, v1169 * 0.4);
    f89(v1165, p807[2]);
    v1165.restore();
    v1165.save();
    v1165.translate(v1166 / 2 - p805 * 8, v1167 / 2 + p805 * 20);
    v1165.rotate(Math.PI / 2.25);
    f92(v1165, 5, v1168 * 0.5, v1169 * 0.4);
    f89(v1165, p807[2]);
    v1165.restore();
    return v1164;
  }
  function f177(p808, p809, p810) {
    var v1171 = document.createElement("canvas");
    var v1172 = v1171.getContext("2d");
    v1171.width = p808 * 90;
    v1171.height = p808 * 98;
    v1172.translate(0, p808 * 4);
    if (v768 === 0) {
      v1172.globalAlpha = p809 ? 0.5 : 1;
      v1172.save();
      v1172.translate(p808 * 44, p808 * 50);
      v1172.rotate(1);
      f92(v1172, 8, p808 * 41, p808 * 10);
      f89(v1172, p810[0]);
      v1172.restore();
    }
    v1172.globalAlpha = 1;
    v1172.save();
    v1172.translate(p808 * 44, p808 * 44);
    v1172.rotate(1);
    f92(v1172, 8, p808 * 41, p808 * 10);
    f89(v1172, p810[1], p810[2], p808 * 4);
    v1172.rotate(0.56);
    f92(v1172, 8, p808 * 33, p808 * 10);
    f89(v1172, p810[3], p810[4], p808 * 4);
    v1172.rotate(0.28);
    f92(v1172, 8, p808 * 24, p808 * 8);
    f89(v1172, p810[5]);
    v1172.restore();
    v1172.save();
    v1172.translate(p808 * 45, p808 * 45);
    v1172.rotate(0);
    f90(v1172, p808 * -9, p808 * -25.5, p808 * 18, p808 * 51, p808 * 30);
    v1172.restore();
    f89(v1172, p810[4], p810[4], p808 * 2);
    v1172.save();
    v1172.translate(p808 * 45, p808 * 45);
    v1172.rotate(0);
    f90(v1172, p808 * -26, p808 * -9, p808 * 52, p808 * 18, p808 * 30);
    v1172.restore();
    f89(v1172, p810[4], p810[4], p808 * 2);
    f94(v1172, p808 * 45, p808 * 29, p808 * 7);
    f89(v1172, p810[5]);
    f94(v1172, p808 * 45, p808 * 61, p808 * 7);
    f89(v1172, p810[5]);
    f94(v1172, p808 * 28, p808 * 45, p808 * 7);
    f89(v1172, p810[5]);
    f94(v1172, p808 * 62, p808 * 45, p808 * 7);
    f89(v1172, p810[5]);
    return v1171;
  }
  function f178(p811, p812, p813) {
    var v1173 = document.createElement("canvas");
    var v1174 = v1173.getContext("2d");
    v1173.width = p811 * 151;
    v1173.height = p811 * 80;
    v1174.beginPath();
    v1174.lineCap = "round";
    v1174.lineJoin = "round";
    v1174.moveTo(p811 * 133, p811 * 54);
    v1174.bezierCurveTo(p811 * 136, p811 * 18, p811 * 129, p811 * 18, p811 * 114, p811 * 13);
    v1174.bezierCurveTo(p811 * 51, p811 * 0, p811 * 36, p811 * 16, p811 * 34, p811 * 16);
    v1174.bezierCurveTo(p811 * 8, p811 * 28, p811 * 22, p811 * 56, p811 * 21, p811 * 57);
    v1174.closePath();
    f89(v1174, p813[2], p813[3], 4);
    v1174.beginPath();
    v1174.lineCap = "round";
    v1174.lineJoin = "round";
    v1174.moveTo(p811 * 130, p811 * 40);
    v1174.bezierCurveTo(p811 * 132, p811 * 35, p811 * 132, p811 * 30, p811 * 132, p811 * 29);
    v1174.bezierCurveTo(p811 * 145, p811 * 38, p811 * 144, p811 * 43, p811 * 137, p811 * 54);
    v1174.closePath();
    f89(v1174, p813[0], p813[1], 4);
    v1174.beginPath();
    v1174.lineCap = "round";
    v1174.lineJoin = "round";
    v1174.moveTo(p811 * 20, p811 * 33);
    v1174.bezierCurveTo(p811 * 24, p811 * 44, p811 * 215, p811 * 39, p811 * 23, p811 * 44);
    v1174.bezierCurveTo(p811 * 19, p811 * 49, p811 * 19, p811 * 49, p811 * 15, p811 * 54);
    v1174.bezierCurveTo(p811 * 4, p811 * 43, p811 * 10, p811 * 35, p811 * 20, p811 * 32);
    v1174.closePath();
    f89(v1174, p813[0], p813[1], 4);
    v1174.beginPath();
    v1174.lineCap = "round";
    v1174.lineJoin = "round";
    v1174.moveTo(p811 * 18, p811 * 52);
    v1174.bezierCurveTo(p811 * 24, p811 * 31, p811 * 34, p811 * 25, p811 * 75, p811 * 23);
    v1174.bezierCurveTo(p811 * 130, p811 * 24, p811 * 129, p811 * 32, p811 * 134, p811 * 51);
    v1174.bezierCurveTo(p811 * 138, p811 * 70, p811 * 126, p811 * 72, p811 * 90, p811 * 73);
    v1174.bezierCurveTo(p811 * 18, p811 * 72, p811 * 15, p811 * 68, p811 * 18, p811 * 54);
    v1174.closePath();
    f89(v1174, p813[0], p813[1], 4);
    return v1173;
  }
  function f179(p814) {
    return vWindow.String.fromCharCode(p814);
  }
  function f180(p815, p816, p817) {
    var v1175 = document.createElement("canvas");
    var v1176 = v1175.getContext("2d");
    v1175.width = p815 * 300;
    v1175.height = p815 * 300;
    v1176.globalAlpha = p816 ? 0.5 : 1;
    v1176.save();
    v1176.translate(p815 * 150, p815 * 160);
    v1176.rotate(6.28);
    f92(v1176, 6, p815 * 146, p815 * 30);
    v1176.restore();
    f89(v1176, p817[0]);
    v1176.globalAlpha = 1;
    v1176.save();
    v1176.translate(p815 * 150, p815 * 150);
    v1176.rotate(6.28);
    f92(v1176, 6, p815 * 146, p815 * 30);
    v1176.restore();
    f89(v1176, p817[1], p817[2], p815 * 8);
    v1176.save();
    v1176.translate(p815 * 150, p815 * 150);
    v1176.rotate(0);
    f92(v1176, 6, p815 * 105, p815 * 30);
    v1176.restore();
    f89(v1176, p817[3], p817[3], p815 * 8);
    v1176.save();
    v1176.translate(p815 * 150, p815 * 150);
    v1176.rotate(0);
    f92(v1176, 6, p815 * 66, p815 * 30);
    v1176.restore();
    f89(v1176, p817[4], p817[2], p815 * 8);
    v1176.save();
    v1176.translate(p815 * 150, p815 * 150);
    v1176.rotate(0);
    f92(v1176, 6, p815 * 31, p815 * 30);
    v1176.restore();
    f89(v1176, p817[5], p817[6], p815 * 8);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p815 * 150, p815 * 207);
    v1176.bezierCurveTo(p815 * 150, p815 * 151, p815 * 150, p815 * 101, p815 * 150, p815 * 94);
    v1176.closePath();
    f89(v1176, vVVUndefined18, p817[2], p815 * 8);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p815 * 118, p815 * 100);
    v1176.bezierCurveTo(p815 * 118, p815 * 205, p815 * 118, p815 * 207, p815 * 118, p815 * 200);
    v1176.closePath();
    f89(v1176, vVUndefined, p817[2], p815 * 8);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p815 * 183, p815 * 100);
    v1176.bezierCurveTo(p815 * 183, p815 * 203, p815 * 183, p815 * 203, p815 * 183, p815 * 200);
    v1176.closePath();
    f89(v1176, undefined, p817[2], p815 * 8);
    return v1175;
  }
  function f181(p818, p819, p820) {
    var v1177 = document.createElement("canvas");
    var v1178 = v1177.getContext("2d");
    v1177.width = p818 * 130;
    v1177.height = p818 * 142;
    v1178.globalAlpha = p819 ? 0.5 : 1;
    v1178.save();
    v1178.translate(p818 * 65, p818 * 80);
    v1178.rotate(0.2);
    f92(v1178, 9, p818 * 60, p818 * 10);
    v1178.restore();
    f89(v1178, p820[0]);
    v1178.globalAlpha = 1;
    v1178.save();
    v1178.translate(p818 * 65, p818 * 71);
    v1178.rotate(0.2);
    f92(v1178, 9, p818 * 60, p818 * 10);
    f89(v1178, p820[1], p820[2], 4);
    v1178.rotate(-0.32);
    f92(v1178, 9, p818 * 38, p818 * 10);
    f89(v1178, p820[3], p820[4], 4);
    v1178.rotate(0.68);
    f92(v1178, 9, p818 * 20, p818 * 8);
    f89(v1178, p820[5], p820[6], 6);
    v1178.restore();
    return v1177;
  }
  (function () {
    const v1179 = {
      ΔⵠⵠⲆⲆⵠᐃ: 9913894,
      ⵠⵠΔΔⲆᐃᐃ: 2158153,
      ᐃΔⵠⲆⲆⵠΔᐃⵠ: 14440195,
      ΔΔⵠⲆᐃⵠⵠΔⵠ: 12722757
    };
  })();
  function f182(p821) {
    if (p821 > 0) {
      return p821 * p821;
    } else {
      return p821;
    }
  }
  function f183(p822) {
    return vWindow.String.fromCharCode(p822);
  }
  function f184(p823, p824, p825) {
    var v1180 = document.createElement("canvas");
    var v1181 = v1180.getContext("2d");
    v1180.width = p823 * 125;
    v1180.height = p823 * 139;
    v1181.globalAlpha = p824 ? 0.5 : 1;
    v1181.save();
    v1181.translate(p823 * 63, p823 * 79);
    v1181.rotate(1);
    f92(v1181, 8, p823 * 60, p823 * 10);
    f89(v1181, p825[0]);
    v1181.restore();
    v1181.globalAlpha = 1;
    v1181.save();
    v1181.translate(p823 * 63, p823 * 69);
    v1181.rotate(1);
    f92(v1181, 8, p823 * 60, p823 * 10);
    f89(v1181, p825[1], p825[2], 4);
    v1181.rotate(0.56);
    f92(v1181, 8, p823 * 40, p823 * 10);
    f89(v1181, p825[3], p825[4], 4);
    v1181.rotate(0.28);
    f92(v1181, 8, p823 * 28, p823 * 8);
    f89(v1181, p825[5]);
    v1181.restore();
    return v1180;
  }
  function f194(p826, p827) {
    var v1182 = document.createElement("canvas");
    var v1183 = v1182.getContext("2d");
    v1182.width = p826 * 234;
    v1182.height = p826 * 183;
    v1183.beginPath();
    v1183.lineCap = "round";
    v1183.lineJoin = "round";
    v1183.moveTo(p826 * 76, p826 * 25);
    v1183.bezierCurveTo(p826 * 150, p826 * 3, p826 * 181, p826 * 22, p826 * 203, p826 * 41);
    v1183.bezierCurveTo(p826 * 225, p826 * 63, p826 * 225, p826 * 105, p826 * 198, p826 * 133);
    v1183.bezierCurveTo(p826 * 179, p826 * 157, p826 * 134, p826 * 178, p826 * 81, p826 * 164);
    v1183.bezierCurveTo(p826 * 19, p826 * 148, p826 * 6, p826 * 95, p826 * 21, p826 * 66);
    v1183.bezierCurveTo(p826 * 34, p826 * 39, p826 * 52, p826 * 33, p826 * 75, p826 * 25);
    v1183.closePath();
    f89(v1183, p827[0], p827[0], p826 * 4);
    return v1182;
  }
  function f186(p828, p829, p830) {
    var v1184 = document.createElement("canvas");
    var v1185 = v1184.getContext("2d");
    v1184.width = p828 * 175;
    v1184.height = p828 * 169;
    v1185.globalAlpha = 0.5;
    v1185.translate(0, p828 * 3);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 19, p828 * 139);
    v1185.bezierCurveTo(p828 * 18, p828 * 163, p828 * 22, p828 * 156, p828 * 53, p828 * 157);
    v1185.bezierCurveTo(p828 * 97.5, p828 * 157, p828 * 97.5, p828 * 157, p828 * 142, p828 * 157);
    v1185.bezierCurveTo(p828 * 150, p828 * 157, p828 * 153, p828 * 156, p828 * 154, p828 * 142);
    v1185.closePath();
    f89(v1185, p830[0]);
    v1185.globalAlpha = 1;
    v1185.translate(0, p828 * -3);
    v1185.save();
    v1185.translate(p828 * 86.5, p828 * 81.5);
    f90(v1185, p828 * -66.5, p828 * -65.5, p828 * 133, p828 * 131, p828 * 10);
    v1185.restore();
    f89(v1185, p830[1], p830[2], p828 * 5);
    v1185.save();
    v1185.translate(p828 * 84.5, p828 * 79);
    f90(v1185, p828 * -50.5, p828 * -49, p828 * 101, p828 * 98, p828 * 10);
    v1185.restore();
    f89(v1185, p830[3], p830[2], p828 * 5);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 42, p828 * 54);
    v1185.bezierCurveTo(p828 * 37, p828 * 48, p828 * 39, p828 * 44, p828 * 38, p828 * 41);
    v1185.bezierCurveTo(p828 * 42, p828 * 40, p828 * 45, p828 * 40, p828 * 50, p828 * 41);
    v1185.bezierCurveTo(p828 * 85, p828 * 36, p828 * 98, p828 * 37, p828 * 116, p828 * 42);
    v1185.bezierCurveTo(p828 * 132, p828 * 39, p828 * 132, p828 * 39, p828 * 133, p828 * 56);
    v1185.bezierCurveTo(p828 * 136, p828 * 73, p828 * 136, p828 * 84, p828 * 132, p828 * 106);
    v1185.bezierCurveTo(p828 * 47, p828 * 113, p828 * 85.5, p828 * 106, p828 * 39, p828 * 106);
    v1185.bezierCurveTo(p828 * 32, p828 * 81, p828 * 38, p828 * 60, p828 * 42, p828 * 55);
    v1185.closePath();
    f89(v1185, p830[4], p830[5], p828 * 5);
    v1185.save();
    v1185.translate(p828 * 28, p828 * 24);
    v1185.rotate(0);
    f90(v1185, p828 * -14, p828 * -14, p828 * 28, p828 * 28, p828 * 4);
    v1185.restore();
    f89(v1185, p830[1], p830[2], p828 * 5);
    v1185.save();
    v1185.translate(p828 * 143, p828 * 23);
    v1185.rotate(0);
    f90(v1185, p828 * -14, p828 * -14, p828 * 28, p828 * 28, p828 * 4);
    v1185.restore();
    f89(v1185, p830[1], p830[2], p828 * 5);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 55, p828 * 80);
    v1185.bezierCurveTo(p828 * 73, p828 * 78, p828 * 84, p828 * 74, p828 * 100, p828 * 64);
    v1185.bezierCurveTo(p828 * 111, p828 * 57, p828 * 125, p828 * 67, p828 * 108, p828 * 84);
    v1185.bezierCurveTo(p828 * 96, p828 * 95, p828 * 86, p828 * 96, p828 * 70, p828 * 88);
    v1185.bezierCurveTo(p828 * 62.5, p828 * 84, p828 * 62.5, p828 * 84, p828 * 55, p828 * 80);
    v1185.closePath();
    f89(v1185, p830[5]);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 17, p828 * 112);
    v1185.bezierCurveTo(p828 * 14, p828 * 146, p828 * 27, p828 * 152, p828 * 37, p828 * 149);
    v1185.bezierCurveTo(p828 * 78, p828 * 155, p828 * 128, p828 * 150, p828 * 146, p828 * 150);
    v1185.bezierCurveTo(p828 * 158, p828 * 144, p828 * 158, p828 * 121, p828 * 153, p828 * 114);
    v1185.closePath();
    f89(v1185, p830[8], p830[9], p828 * 5);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 127, p828 * 111);
    v1185.bezierCurveTo(p828 * 133, p828 * 136, p828 * 115, p828 * 149, p828 * 88, p828 * 150);
    v1185.bezierCurveTo(p828 * 119.5, p828 * 151, p828 * 119.5, p828 * 151, p828 * 151, p828 * 152);
    v1185.bezierCurveTo(p828 * 159, p828 * 136, p828 * 155, p828 * 126, p828 * 154, p828 * 113);
    v1185.closePath();
    f89(v1185, p830[9]);
    v1185.globalAlpha = 0.5;
    v1185.translate(0, p828 * 3);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 15, p828 * 117);
    v1185.bezierCurveTo(p828 * 34, p828 * 109, p828 * 61, p828 * 106, p828 * 94, p828 * 109);
    v1185.bezierCurveTo(p828 * 126, p828 * 110, p828 * 142, p828 * 113, p828 * 154, p828 * 119);
    v1185.bezierCurveTo(p828 * 154, p828 * 123, p828 * 154, p828 * 123, p828 * 154, p828 * 127);
    v1185.bezierCurveTo(p828 * 127, p828 * 118, p828 * 15, p828 * 122, p828 * 18, p828 * 129);
    v1185.closePath();
    f89(v1185, p830[0]);
    v1185.globalAlpha = 1;
    v1185.translate(0, p828 * -3);
    v1185.beginPath();
    v1185.lineCap = "round";
    v1185.lineJoin = "round";
    v1185.moveTo(p828 * 14, p828 * 127);
    v1185.bezierCurveTo(p828 * 13, p828 * 117, p828 * 12, p828 * 109, p828 * 15, p828 * 103);
    v1185.bezierCurveTo(p828 * 16, p828 * 95, p828 * 21, p828 * 92, p828 * 60, p828 * 93);
    v1185.bezierCurveTo(p828 * 91, p828 * 93, p828 * 118, p828 * 93, p828 * 143, p828 * 96);
    v1185.bezierCurveTo(p828 * 151, p828 * 96, p828 * 155, p828 * 99, p828 * 156, p828 * 112);
    v1185.bezierCurveTo(p828 * 157, p828 * 124, p828 * 157, p828 * 127, p828 * 156, p828 * 128);
    v1185.bezierCurveTo(p828 * 138, p828 * 112, p828 * 100, p828 * 118, p828 * 84, p828 * 118);
    v1185.bezierCurveTo(p828 * 28, p828 * 118, p828 * 20, p828 * 120, p828 * 16, p828 * 127);
    v1185.closePath();
    f89(v1185, p830[4], p830[5], p828 * 5);
    v1185.save();
    v1185.translate(p828 * 27.5, p828 * 138.5);
    f90(v1185, p828 * -13.5, p828 * -14.5, p828 * 27, p828 * 29, p828 * 4);
    v1185.restore();
    f89(v1185, p830[1], p830[2], p828 * 5);
    v1185.save();
    v1185.translate(p828 * 143.5, p828 * 137);
    f90(v1185, p828 * -13.5, p828 * -14, p828 * 27, p828 * 28, p828 * 4);
    v1185.restore();
    f89(v1185, p830[1], p830[2], p828 * 5);
    return v1184;
  }
  function f187(p831, p832, p833) {
    var v1186 = document.createElement("canvas");
    var v1187 = v1186.getContext("2d");
    v1186.width = p831 * 248;
    v1186.height = p831 * 128;
    v1187.beginPath();
    v1187.lineCap = "round";
    v1187.lineJoin = "round";
    v1187.moveTo(p831 * 137, p831 * 7);
    v1187.bezierCurveTo(p831 * 169, p831 * 14, p831 * 212, p831 * 9, p831 * 241, p831 * 5);
    v1187.bezierCurveTo(p831 * 211, p831 * 63, p831 * 158, p831 * 92, p831 * 103, p831 * 109);
    v1187.bezierCurveTo(p831 * 73, p831 * 126, p831 * 54, p831 * 124, p831 * 6, p831 * 99);
    v1187.bezierCurveTo(p831 * 82, p831 * 63, p831 * 113, p831 * 35, p831 * 137, p831 * 8);
    v1187.closePath();
    f89(v1187, p833[0], p833[1], p831 * 14);
    v1187.beginPath();
    v1187.lineCap = "round";
    v1187.lineJoin = "round";
    v1187.moveTo(p831 * 73, p831 * 124);
    v1187.bezierCurveTo(p831 * 111, p831 * 126, p831 * 162, p831 * 97, p831 * 203, p831 * 61);
    v1187.bezierCurveTo(p831 * 156, p831 * 98, p831 * 131, p831 * 106, p831 * 105, p831 * 109);
    v1187.bezierCurveTo(p831 * 99, p831 * 121, p831 * 87, p831 * 124, p831 * 72, p831 * 124);
    v1187.closePath();
    f89(v1187, p833[2], p833[3], p831 * 1);
    return v1186;
  }
  function f188(p834, p835, p836) {
    var v1188 = document.createElement("canvas");
    var v1189 = v1188.getContext("2d");
    v1188.width = p834 * 90;
    v1188.height = p834 * 98;
    v1189.translate(0, p834 * 4);
    if (v768 === 0) {
      v1189.globalAlpha = p835 ? 0.5 : 1;
      v1189.save();
      v1189.translate(p834 * 44, p834 * 50);
      v1189.rotate(1.4);
      f92(v1189, 7, p834 * 41, p834 * 10);
      v1189.restore();
      f89(v1189, p836[0]);
    }
    v1189.globalAlpha = 1;
    v1189.save();
    v1189.translate(p834 * 44, p834 * 44);
    v1189.rotate(1.4);
    f92(v1189, 7, p834 * 41, p834 * 10);
    f89(v1189, p836[1], p836[2], p834 * 4);
    f92(v1189, 7, p834 * 35, p834 * 10);
    f89(v1189, p836[3], p836[4], p834 * 4);
    f92(v1189, 7, p834 * 23, p834 * 5);
    v1189.restore();
    f89(v1189, p836[5]);
    v1189.save();
    v1189.translate(p834 * 45, p834 * 45);
    v1189.rotate(0);
    f90(v1189, p834 * -9, p834 * -25.5, p834 * 18, p834 * 51, p834 * 30);
    v1189.restore();
    f89(v1189, p836[4], p836[4], p834 * 2);
    v1189.save();
    v1189.translate(p834 * 45, p834 * 45);
    v1189.rotate(0);
    f90(v1189, p834 * -26, p834 * -9, p834 * 52, p834 * 18, p834 * 30);
    v1189.restore();
    f89(v1189, p836[4], p836[4], p834 * 2);
    f94(v1189, p834 * 45, p834 * 29, p834 * 7);
    f89(v1189, p836[5]);
    f94(v1189, p834 * 45, p834 * 61, p834 * 7);
    f89(v1189, p836[5]);
    f94(v1189, p834 * 28, p834 * 45, p834 * 7);
    f89(v1189, p836[5]);
    f94(v1189, p834 * 62, p834 * 45, p834 * 7);
    f89(v1189, p836[5]);
    return v1188;
  }
  function f189(p837, p838, p839) {
    var v1190 = document.createElement("canvas");
    var v1191 = v1190.getContext("2d");
    v1190.width = p837 * 90;
    v1190.height = p837 * 98;
    v1191.translate(0, p837 * 4);
    if (v768 === 0) {
      v1191.globalAlpha = p838 ? 0.5 : 1;
      v1191.save();
      v1191.translate(p837 * 44, p837 * 50);
      v1191.rotate(0.2);
      f92(v1191, 9, p837 * 41, p837 * 10);
      v1191.restore();
      f89(v1191, p839[0]);
    }
    v1191.globalAlpha = 1;
    v1191.save();
    v1191.translate(p837 * 44, p837 * 44);
    v1191.rotate(0.2);
    f92(v1191, 9, p837 * 41, p837 * 10);
    f89(v1191, p839[1], p839[2], p837 * 4);
    v1191.rotate(-0.32);
    f92(v1191, 9, p837 * 32, p837 * 10);
    f89(v1191, p839[3], p839[4], p837 * 4);
    v1191.rotate(0.68);
    f92(v1191, 9, p837 * 23, p837 * 8);
    f89(v1191, p839[5], p839[6], p837 * 6);
    v1191.restore();
    v1191.save();
    v1191.translate(p837 * 45, p837 * 45);
    v1191.rotate(0);
    f90(v1191, p837 * -9, p837 * -25.5, p837 * 18, p837 * 51, p837 * 30);
    v1191.restore();
    f89(v1191, p839[4], p839[4], p837 * 2);
    v1191.save();
    v1191.translate(p837 * 45, p837 * 45);
    v1191.rotate(0);
    f90(v1191, p837 * -26, p837 * -9, p837 * 52, p837 * 18, p837 * 30);
    v1191.restore();
    f89(v1191, p839[4], p839[4], p837 * 2);
    f94(v1191, p837 * 45, p837 * 29, p837 * 7);
    f89(v1191, p839[5]);
    f94(v1191, p837 * 45, p837 * 61, p837 * 7);
    f89(v1191, p839[5]);
    f94(v1191, p837 * 28, p837 * 45, p837 * 7);
    f89(v1191, p839[5]);
    f94(v1191, p837 * 62, p837 * 45, p837 * 7);
    f89(v1191, p839[5]);
    return v1190;
  }
  function f190(p840, p841, p842) {
    var v1192 = document.createElement("canvas");
    var v1193 = v1192.getContext("2d");
    v1192.width = p840 * 175;
    v1192.height = p840 * 169;
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p840 * 17, p840 * 112);
    v1193.bezierCurveTo(p840 * 14, p840 * 146, p840 * 27, p840 * 152, p840 * 37, p840 * 149);
    v1193.bezierCurveTo(p840 * 78, p840 * 155, p840 * 128, p840 * 150, p840 * 146, p840 * 150);
    v1193.bezierCurveTo(p840 * 158, p840 * 144, p840 * 158, p840 * 121, p840 * 153, p840 * 114);
    v1193.closePath();
    f89(v1193, p842[8], p842[9], p840 * 5);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p840 * 127, p840 * 111);
    v1193.bezierCurveTo(p840 * 133, p840 * 136, p840 * 115, p840 * 149, p840 * 88, p840 * 150);
    v1193.bezierCurveTo(p840 * 119.5, p840 * 151, p840 * 119.5, p840 * 151, p840 * 151, p840 * 152);
    v1193.bezierCurveTo(p840 * 159, p840 * 136, p840 * 155, p840 * 126, p840 * 154, p840 * 113);
    v1193.closePath();
    f89(v1193, p842[9]);
    v1193.globalAlpha = 0.5;
    v1193.translate(0, p840 * 3);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p840 * 15, p840 * 117);
    v1193.bezierCurveTo(p840 * 34, p840 * 109, p840 * 61, p840 * 106, p840 * 94, p840 * 109);
    v1193.bezierCurveTo(p840 * 126, p840 * 110, p840 * 142, p840 * 113, p840 * 154, p840 * 119);
    v1193.bezierCurveTo(p840 * 154, p840 * 123, p840 * 154, p840 * 123, p840 * 154, p840 * 127);
    v1193.bezierCurveTo(p840 * 127, p840 * 118, p840 * 15, p840 * 122, p840 * 18, p840 * 129);
    v1193.closePath();
    f89(v1193, p842[0]);
    v1193.globalAlpha = 1;
    v1193.translate(0, p840 * -3);
    v1193.beginPath();
    v1193.lineCap = "round";
    v1193.lineJoin = "round";
    v1193.moveTo(p840 * 14, p840 * 127);
    v1193.bezierCurveTo(p840 * 13, p840 * 117, p840 * 12, p840 * 109, p840 * 15, p840 * 103);
    v1193.bezierCurveTo(p840 * 16, p840 * 95, p840 * 21, p840 * 92, p840 * 60, p840 * 93);
    v1193.bezierCurveTo(p840 * 91, p840 * 93, p840 * 118, p840 * 93, p840 * 143, p840 * 96);
    v1193.bezierCurveTo(p840 * 151, p840 * 96, p840 * 155, p840 * 99, p840 * 156, p840 * 112);
    v1193.bezierCurveTo(p840 * 157, p840 * 124, p840 * 157, p840 * 127, p840 * 156, p840 * 128);
    v1193.bezierCurveTo(p840 * 138, p840 * 112, p840 * 100, p840 * 118, p840 * 84, p840 * 118);
    v1193.bezierCurveTo(p840 * 28, p840 * 118, p840 * 20, p840 * 120, p840 * 16, p840 * 127);
    v1193.closePath();
    f89(v1193, p842[4], p842[5], p840 * 5);
    v1193.save();
    v1193.translate(p840 * 27.5, p840 * 138.5);
    f90(v1193, p840 * -13.5, p840 * -14.5, p840 * 27, p840 * 29, p840 * 4);
    v1193.restore();
    f89(v1193, p842[1], p842[2], p840 * 5);
    v1193.save();
    v1193.translate(p840 * 143.5, p840 * 137);
    f90(v1193, p840 * -13.5, p840 * -14, p840 * 27, p840 * 28, p840 * 4);
    v1193.restore();
    f89(v1193, p842[1], p842[2], p840 * 5);
    return v1192;
  }
  function f191(p843, p844, p845) {
    var v1194 = document.createElement("canvas");
    var v1195 = v1194.getContext("2d");
    v1194.width = p843 * 88;
    v1194.height = p843 * 647;
    v1195.translate(p843 * 20, p843 * 20);
    v1195.globalAlpha = p844 ? 0.5 : 1;
    v1195.save();
    v1195.translate(p843 * 45, p843 * 384.5);
    f90(v1195, p843 * -15, p843 * -216.5, p843 * 30, p843 * 433, p843 * 10);
    v1195.restore();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 27, p843 * 572);
    v1195.bezierCurveTo(p843 * 44, p843 * 580, p843 * 55, p843 * 576, p843 * 62, p843 * 572);
    v1195.bezierCurveTo(p843 * 65, p843 * 585.5, p843 * 65, p843 * 585.5, p843 * 68, p843 * 599);
    v1195.bezierCurveTo(p843 * 71, p843 * 612, p843 * 68, p843 * 618, p843 * 34, p843 * 616);
    v1195.bezierCurveTo(p843 * 14, p843 * 615, p843 * 19, p843 * 607, p843 * 27, p843 * 573);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 32, p843 * 587);
    v1195.bezierCurveTo(p843 * 39, p843 * 590, p843 * 48, p843 * 588, p843 * 54, p843 * 587);
    v1195.bezierCurveTo(p843 * 57, p843 * 604, p843 * 59, p843 * 609, p843 * 46, p843 * 609);
    v1195.bezierCurveTo(p843 * 27, p843 * 609, p843 * 28, p843 * 605, p843 * 33, p843 * 588);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 31, p843 * 113);
    v1195.bezierCurveTo(p843 * 27, p843 * 139, p843 * 27, p843 * 139, p843 * 23, p843 * 165);
    v1195.bezierCurveTo(p843 * 18, p843 * 187, p843 * 39, p843 * 195, p843 * 57, p843 * 186);
    v1195.bezierCurveTo(p843 * 68, p843 * 180, p843 * 65, p843 * 171, p843 * 62, p843 * 153);
    v1195.bezierCurveTo(p843 * 58.5, p843 * 131, p843 * 58.5, p843 * 131, p843 * 55, p843 * 109);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 39, p843 * 139);
    v1195.bezierCurveTo(p843 * 43, p843 * 139, p843 * 43, p843 * 139, p843 * 47, p843 * 139);
    v1195.bezierCurveTo(p843 * 51, p843 * 158, p843 * 56, p843 * 176, p843 * 44, p843 * 175);
    v1195.bezierCurveTo(p843 * 33, p843 * 177, p843 * 34, p843 * 167, p843 * 39, p843 * 140);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 44, p843 * 29);
    v1195.bezierCurveTo(p843 * 57, p843 * 63, p843 * 57, p843 * 63, p843 * 70, p843 * 97);
    v1195.bezierCurveTo(p843 * 60, p843 * 111, p843 * 60, p843 * 111, p843 * 50, p843 * 125);
    v1195.bezierCurveTo(p843 * 45, p843 * 128, p843 * 41, p843 * 128, p843 * 35, p843 * 124);
    v1195.bezierCurveTo(p843 * 26.5, p843 * 110, p843 * 26.5, p843 * 110, p843 * 18, p843 * 96);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 44, p843 * 54);
    v1195.bezierCurveTo(p843 * 50, p843 * 72, p843 * 50, p843 * 72, p843 * 56, p843 * 90);
    v1195.bezierCurveTo(p843 * 58, p843 * 94, p843 * 59, p843 * 98, p843 * 53, p843 * 105);
    v1195.bezierCurveTo(p843 * 47, p843 * 113, p843 * 43, p843 * 113, p843 * 36, p843 * 103);
    v1195.bezierCurveTo(p843 * 29, p843 * 96, p843 * 31, p843 * 94, p843 * 35, p843 * 83);
    v1195.closePath();
    f89(v1195, p845[0]);
    v1195.translate(p843 * -20, p843 * -20);
    v1195.globalAlpha = 1;
    v1195.save();
    v1195.translate(p843 * 45, p843 * 384.5);
    f90(v1195, p843 * -15, p843 * -216.5, p843 * 30, p843 * 433, p843 * 10);
    v1195.restore();
    f89(v1195, p845[1], p845[2], p843 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 27, p843 * 572);
    v1195.bezierCurveTo(p843 * 44, p843 * 580, p843 * 55, p843 * 576, p843 * 62, p843 * 572);
    v1195.bezierCurveTo(p843 * 65, p843 * 585.5, p843 * 65, p843 * 585.5, p843 * 68, p843 * 599);
    v1195.bezierCurveTo(p843 * 71, p843 * 612, p843 * 68, p843 * 618, p843 * 34, p843 * 616);
    v1195.bezierCurveTo(p843 * 14, p843 * 615, p843 * 19, p843 * 607, p843 * 27, p843 * 573);
    v1195.closePath();
    f89(v1195, p845[3], p845[4], p843 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 32, p843 * 587);
    v1195.bezierCurveTo(p843 * 39, p843 * 590, p843 * 48, p843 * 588, p843 * 54, p843 * 587);
    v1195.bezierCurveTo(p843 * 57, p843 * 604, p843 * 59, p843 * 609, p843 * 46, p843 * 609);
    v1195.bezierCurveTo(p843 * 27, p843 * 609, p843 * 28, p843 * 605, p843 * 33, p843 * 588);
    v1195.closePath();
    f89(v1195, p845[5]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 31, p843 * 113);
    v1195.bezierCurveTo(p843 * 27, p843 * 139, p843 * 27, p843 * 139, p843 * 23, p843 * 165);
    v1195.bezierCurveTo(p843 * 18, p843 * 187, p843 * 39, p843 * 195, p843 * 57, p843 * 186);
    v1195.bezierCurveTo(p843 * 68, p843 * 180, p843 * 65, p843 * 171, p843 * 62, p843 * 153);
    v1195.bezierCurveTo(p843 * 58.5, p843 * 131, p843 * 58.5, p843 * 131, p843 * 55, p843 * 109);
    v1195.closePath();
    f89(v1195, p845[3], p845[4], p843 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 39, p843 * 139);
    v1195.bezierCurveTo(p843 * 43, p843 * 139, p843 * 43, p843 * 139, p843 * 47, p843 * 139);
    v1195.bezierCurveTo(p843 * 51, p843 * 158, p843 * 56, p843 * 176, p843 * 44, p843 * 175);
    v1195.bezierCurveTo(p843 * 33, p843 * 177, p843 * 34, p843 * 167, p843 * 39, p843 * 140);
    v1195.closePath();
    f89(v1195, p845[5]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 44, p843 * 29);
    v1195.bezierCurveTo(p843 * 57, p843 * 63, p843 * 57, p843 * 63, p843 * 70, p843 * 97);
    v1195.bezierCurveTo(p843 * 60, p843 * 111, p843 * 60, p843 * 111, p843 * 50, p843 * 125);
    v1195.bezierCurveTo(p843 * 45, p843 * 128, p843 * 41, p843 * 128, p843 * 35, p843 * 124);
    v1195.bezierCurveTo(p843 * 26.5, p843 * 110, p843 * 26.5, p843 * 110, p843 * 18, p843 * 96);
    v1195.closePath();
    f89(v1195, p845[6], p845[7], p843 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p843 * 44, p843 * 54);
    v1195.bezierCurveTo(p843 * 50, p843 * 72, p843 * 50, p843 * 72, p843 * 56, p843 * 90);
    v1195.bezierCurveTo(p843 * 58, p843 * 94, p843 * 59, p843 * 98, p843 * 53, p843 * 105);
    v1195.bezierCurveTo(p843 * 47, p843 * 113, p843 * 43, p843 * 113, p843 * 36, p843 * 103);
    v1195.bezierCurveTo(p843 * 29, p843 * 96, p843 * 31, p843 * 94, p843 * 35, p843 * 83);
    v1195.closePath();
    f89(v1195, p845[8]);
    return v1194;
  }
  function f192(p846, p847, p848) {
    var v1196 = document.createElement("canvas");
    var v1197 = v1196.getContext("2d");
    v1196.width = p846 * 106;
    v1196.height = p846 * 681;
    v1197.translate(p846 * 20, p846 * 20);
    v1197.globalAlpha = p847 ? 0.5 : 1;
    v1197.save();
    v1197.translate(p846 * 52.5, p846 * 395);
    v1197.rotate(0);
    f90(v1197, p846 * -11.5, p846 * -226, p846 * 23, p846 * 452, p846 * 10);
    v1197.restore();
    f89(v1197, p848[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 35, p846 * 588);
    v1197.bezierCurveTo(p846 * 47, p846 * 596, p846 * 61, p846 * 594, p846 * 69, p846 * 588);
    v1197.bezierCurveTo(p846 * 79, p846 * 615, p846 * 78, p846 * 632, p846 * 59, p846 * 643);
    v1197.bezierCurveTo(p846 * 41, p846 * 650, p846 * 27, p846 * 632, p846 * 30, p846 * 610);
    v1197.closePath();
    f89(v1197, p848[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 135);
    v1197.bezierCurveTo(p846 * 61.5, p846 * 142, p846 * 61.5, p846 * 142, p846 * 71, p846 * 149);
    v1197.bezierCurveTo(p846 * 69.5, p846 * 166, p846 * 69.5, p846 * 166, p846 * 68, p846 * 183);
    v1197.bezierCurveTo(p846 * 60.5, p846 * 187.5, p846 * 60.5, p846 * 187.5, p846 * 53, p846 * 192);
    v1197.bezierCurveTo(p846 * 45, p846 * 187.5, p846 * 45, p846 * 187.5, p846 * 37, p846 * 183);
    v1197.bezierCurveTo(p846 * 35.5, p846 * 167, p846 * 35.5, p846 * 167, p846 * 34, p846 * 151);
    v1197.closePath();
    f89(v1197, p848[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 64, p846 * 150);
    v1197.bezierCurveTo(p846 * 63, p846 * 164, p846 * 63, p846 * 164, p846 * 62, p846 * 178);
    v1197.bezierCurveTo(p846 * 58, p846 * 181, p846 * 58, p846 * 181, p846 * 54, p846 * 184);
    v1197.bezierCurveTo(p846 * 48.5, p846 * 181.5, p846 * 48.5, p846 * 181.5, p846 * 43, p846 * 179);
    v1197.bezierCurveTo(p846 * 42, p846 * 164.5, p846 * 42, p846 * 164.5, p846 * 41, p846 * 150);
    v1197.bezierCurveTo(p846 * 46, p846 * 152.5, p846 * 46, p846 * 152.5, p846 * 51, p846 * 155);
    v1197.closePath();
    f89(v1197, p848[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 39);
    v1197.bezierCurveTo(p846 * 65.5, p846 * 82, p846 * 65.5, p846 * 82, p846 * 79, p846 * 125);
    v1197.bezierCurveTo(p846 * 66, p846 * 137.5, p846 * 66, p846 * 137.5, p846 * 53, p846 * 150);
    v1197.bezierCurveTo(p846 * 39, p846 * 138, p846 * 39, p846 * 138, p846 * 25, p846 * 126);
    v1197.closePath();
    f89(v1197, p848[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 64);
    v1197.bezierCurveTo(p846 * 60, p846 * 92.5, p846 * 60, p846 * 92.5, p846 * 68, p846 * 121);
    v1197.bezierCurveTo(p846 * 61, p846 * 127.5, p846 * 61, p846 * 127.5, p846 * 54, p846 * 134);
    v1197.bezierCurveTo(p846 * 46.5, p846 * 127.5, p846 * 46.5, p846 * 127.5, p846 * 39, p846 * 121);
    v1197.closePath();
    f89(v1197, p848[0]);
    v1197.translate(p846 * -20, p846 * -20);
    v1197.globalAlpha = 1;
    v1197.save();
    v1197.translate(p846 * 52.5, p846 * 395);
    v1197.rotate(0);
    f90(v1197, p846 * -11.5, p846 * -226, p846 * 23, p846 * 452, p846 * 10);
    v1197.restore();
    f89(v1197, p848[1], p848[2], p846 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 35, p846 * 588);
    v1197.bezierCurveTo(p846 * 47, p846 * 596, p846 * 61, p846 * 594, p846 * 69, p846 * 588);
    v1197.bezierCurveTo(p846 * 79, p846 * 615, p846 * 78, p846 * 632, p846 * 59, p846 * 643);
    v1197.bezierCurveTo(p846 * 41, p846 * 650, p846 * 27, p846 * 632, p846 * 30, p846 * 610);
    v1197.closePath();
    f89(v1197, p848[3], p848[4], p846 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 135);
    v1197.bezierCurveTo(p846 * 61.5, p846 * 142, p846 * 61.5, p846 * 142, p846 * 71, p846 * 149);
    v1197.bezierCurveTo(p846 * 69.5, p846 * 166, p846 * 69.5, p846 * 166, p846 * 68, p846 * 183);
    v1197.bezierCurveTo(p846 * 60.5, p846 * 187.5, p846 * 60.5, p846 * 187.5, p846 * 53, p846 * 192);
    v1197.bezierCurveTo(p846 * 45, p846 * 187.5, p846 * 45, p846 * 187.5, p846 * 37, p846 * 183);
    v1197.bezierCurveTo(p846 * 35.5, p846 * 167, p846 * 35.5, p846 * 167, p846 * 34, p846 * 151);
    v1197.closePath();
    f89(v1197, p848[3], p848[4], p846 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 64, p846 * 150);
    v1197.bezierCurveTo(p846 * 63, p846 * 164, p846 * 63, p846 * 164, p846 * 62, p846 * 178);
    v1197.bezierCurveTo(p846 * 58, p846 * 181, p846 * 58, p846 * 181, p846 * 54, p846 * 184);
    v1197.bezierCurveTo(p846 * 48.5, p846 * 181.5, p846 * 48.5, p846 * 181.5, p846 * 43, p846 * 179);
    v1197.bezierCurveTo(p846 * 42, p846 * 164.5, p846 * 42, p846 * 164.5, p846 * 41, p846 * 150);
    v1197.bezierCurveTo(p846 * 46, p846 * 152.5, p846 * 46, p846 * 152.5, p846 * 51, p846 * 155);
    v1197.closePath();
    f89(v1197, p848[5]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 39);
    v1197.bezierCurveTo(p846 * 65.5, p846 * 82, p846 * 65.5, p846 * 82, p846 * 79, p846 * 125);
    v1197.bezierCurveTo(p846 * 66, p846 * 137.5, p846 * 66, p846 * 137.5, p846 * 53, p846 * 150);
    v1197.bezierCurveTo(p846 * 39, p846 * 138, p846 * 39, p846 * 138, p846 * 25, p846 * 126);
    v1197.closePath();
    f89(v1197, p848[6], p848[7], p846 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p846 * 52, p846 * 64);
    v1197.bezierCurveTo(p846 * 60, p846 * 92.5, p846 * 60, p846 * 92.5, p846 * 68, p846 * 121);
    v1197.bezierCurveTo(p846 * 61, p846 * 127.5, p846 * 61, p846 * 127.5, p846 * 54, p846 * 134);
    v1197.bezierCurveTo(p846 * 46.5, p846 * 127.5, p846 * 46.5, p846 * 127.5, p846 * 39, p846 * 121);
    v1197.closePath();
    f89(v1197, p848[8]);
    return v1196;
  }
  function f193(p849, p850, p851) {
    var v1198 = document.createElement("canvas");
    var v1199 = v1198.getContext("2d");
    v1198.width = p849 * 115;
    v1198.height = p849 * 585;
    v1199.scale(-1, 1);
    v1199.translate(p849 * -110, 0);
    v1199.translate(p849 * 10, p849 * 10);
    v1199.globalAlpha = p850 ? 0.5 : 1;
    v1199.save();
    v1199.translate(p849 * 51.5, p849 * 342);
    f90(v1199, p849 * -14.5, p849 * -225, p849 * 29, p849 * 450, p849 * 20);
    v1199.restore();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 54, p849 * 83);
    v1199.bezierCurveTo(p849 * 70, p849 * 69, p849 * 78, p849 * 62, p849 * 82, p849 * 40);
    v1199.bezierCurveTo(p849 * 93, p849 * 48, p849 * 103, p849 * 64, p849 * 95, p849 * 102);
    v1199.bezierCurveTo(p849 * 60, p849 * 114, p849 * 53, p849 * 103, p849 * 54, p849 * 85);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 95, p849 * 97);
    v1199.bezierCurveTo(p849 * 56, p849 * 102, p849 * 43, p849 * 77, p849 * 71, p849 * 6);
    v1199.bezierCurveTo(p849 * 34, p849 * 10, p849 * 6, p849 * 43, p849 * 5, p849 * 76);
    v1199.bezierCurveTo(p849 * 4, p849 * 98, p849 * 15, p849 * 130, p849 * 64, p849 * 130);
    v1199.bezierCurveTo(p849 * 76, p849 * 129, p849 * 95, p849 * 113, p849 * 97, p849 * 97);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 55, p849 * 176);
    v1199.bezierCurveTo(p849 * 74, p849 * 175, p849 * 82, p849 * 169, p849 * 96, p849 * 155);
    v1199.bezierCurveTo(p849 * 103, p849 * 183, p849 * 95, p849 * 214, p849 * 54, p849 * 219);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 50, p849 * 176);
    v1199.bezierCurveTo(p849 * 25, p849 * 177, p849 * 16, p849 * 164, p849 * 7, p849 * 156);
    v1199.bezierCurveTo(p849 * 0, p849 * 186, p849 * 10, p849 * 201, p849 * 43, p849 * 220);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 403);
    v1199.bezierCurveTo(p849 * 47, p849 * 412, p849 * 58, p849 * 412, p849 * 67, p849 * 403);
    v1199.bezierCurveTo(p849 * 66.5, p849 * 434, p849 * 66.5, p849 * 434, p849 * 66, p849 * 465);
    v1199.bezierCurveTo(p849 * 56, p849 * 480, p849 * 40, p849 * 472, p849 * 36, p849 * 465);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 59, p849 * 67);
    v1199.bezierCurveTo(p849 * 47, p849 * 97, p849 * 18, p849 * 117, p849 * 11, p849 * 110);
    v1199.bezierCurveTo(p849 * 11, p849 * 115, p849 * 15, p849 * 122, p849 * 23, p849 * 124);
    v1199.bezierCurveTo(p849 * 46, p849 * 118, p849 * 52, p849 * 113, p849 * 62, p849 * 86);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 30, p849 * 125);
    v1199.bezierCurveTo(p849 * 47, p849 * 136, p849 * 57, p849 * 134, p849 * 77, p849 * 127);
    v1199.bezierCurveTo(p849 * 71, p849 * 158, p849 * 71, p849 * 159, p849 * 66, p849 * 159);
    v1199.bezierCurveTo(p849 * 50.5, p849 * 156.5, p849 * 50.5, p849 * 156.5, p849 * 35, p849 * 154);
    v1199.bezierCurveTo(p849 * 31, p849 * 145, p849 * 31, p849 * 136, p849 * 31, p849 * 125);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 171);
    v1199.bezierCurveTo(p849 * 32, p849 * 221, p849 * 43, p849 * 233, p849 * 70, p849 * 247);
    v1199.bezierCurveTo(p849 * 75, p849 * 234, p849 * 75, p849 * 230, p849 * 72, p849 * 221);
    v1199.bezierCurveTo(p849 * 48, p849 * 206, p849 * 54, p849 * 188, p849 * 50, p849 * 176);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 60, p849 * 68);
    v1199.bezierCurveTo(p849 * 63, p849 * 69, p849 * 65, p849 * 71, p849 * 67, p849 * 77);
    v1199.bezierCurveTo(p849 * 61, p849 * 123, p849 * 52, p849 * 137, p849 * 42, p849 * 150);
    v1199.bezierCurveTo(p849 * 38, p849 * 151, p849 * 38, p849 * 151, p849 * 34, p849 * 152);
    v1199.bezierCurveTo(p849 * 33, p849 * 146.5, p849 * 33, p849 * 146.5, p849 * 32, p849 * 141);
    v1199.bezierCurveTo(p849 * 49, p849 * 118, p849 * 63, p849 * 87, p849 * 59, p849 * 68);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 71, p849 * 172);
    v1199.bezierCurveTo(p849 * 56, p849 * 222, p849 * 49, p849 * 234, p849 * 35, p849 * 248);
    v1199.bezierCurveTo(p849 * 30, p849 * 236, p849 * 30, p849 * 230, p849 * 31, p849 * 217);
    v1199.bezierCurveTo(p849 * 44, p849 * 202, p849 * 49, p849 * 191, p849 * 52, p849 * 172);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 151);
    v1199.bezierCurveTo(p849 * 27, p849 * 165, p849 * 31, p849 * 173, p849 * 36, p849 * 178);
    v1199.bezierCurveTo(p849 * 56, p849 * 185, p849 * 73, p849 * 184, p849 * 71, p849 * 170);
    v1199.bezierCurveTo(p849 * 72, p849 * 154, p849 * 71, p849 * 154, p849 * 63, p849 * 155);
    v1199.closePath();
    f89(v1199, p851[0]);
    v1199.translate(p849 * -10, p849 * -10);
    v1199.globalAlpha = 1;
    v1199.save();
    v1199.translate(p849 * 51.5, p849 * 342);
    f90(v1199, p849 * -14.5, p849 * -225, p849 * 29, p849 * 450, p849 * 20);
    v1199.restore();
    f89(v1199, p851[1], p851[2], p849 * 5);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 54, p849 * 83);
    v1199.bezierCurveTo(p849 * 70, p849 * 69, p849 * 78, p849 * 62, p849 * 82, p849 * 40);
    v1199.bezierCurveTo(p849 * 93, p849 * 48, p849 * 103, p849 * 64, p849 * 95, p849 * 102);
    v1199.bezierCurveTo(p849 * 60, p849 * 114, p849 * 53, p849 * 103, p849 * 54, p849 * 85);
    v1199.closePath();
    f89(v1199, p851[3], p851[4], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 95, p849 * 97);
    v1199.bezierCurveTo(p849 * 56, p849 * 102, p849 * 43, p849 * 77, p849 * 71, p849 * 6);
    v1199.bezierCurveTo(p849 * 34, p849 * 10, p849 * 6, p849 * 43, p849 * 5, p849 * 76);
    v1199.bezierCurveTo(p849 * 4, p849 * 98, p849 * 15, p849 * 130, p849 * 64, p849 * 130);
    v1199.bezierCurveTo(p849 * 76, p849 * 129, p849 * 95, p849 * 113, p849 * 97, p849 * 97);
    v1199.closePath();
    f89(v1199, p851[5], p851[6], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 403);
    v1199.bezierCurveTo(p849 * 47, p849 * 412, p849 * 58, p849 * 412, p849 * 67, p849 * 403);
    v1199.bezierCurveTo(p849 * 66.5, p849 * 434, p849 * 66.5, p849 * 434, p849 * 66, p849 * 465);
    v1199.bezierCurveTo(p849 * 56, p849 * 480, p849 * 40, p849 * 472, p849 * 36, p849 * 465);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 37, p849 * 427);
    v1199.bezierCurveTo(p849 * 47, p849 * 435, p849 * 55, p849 * 435, p849 * 67, p849 * 427);
    f89(v1199, vVVVUndefined17, p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 36, p849 * 448);
    v1199.bezierCurveTo(p849 * 46, p849 * 454, p849 * 54, p849 * 457, p849 * 65, p849 * 449);
    f89(v1199, undefined, p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 55, p849 * 176);
    v1199.bezierCurveTo(p849 * 74, p849 * 175, p849 * 82, p849 * 169, p849 * 96, p849 * 155);
    v1199.bezierCurveTo(p849 * 103, p849 * 183, p849 * 95, p849 * 214, p849 * 54, p849 * 219);
    v1199.closePath();
    f89(v1199, p851[3], p851[4], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 50, p849 * 176);
    v1199.bezierCurveTo(p849 * 25, p849 * 177, p849 * 16, p849 * 164, p849 * 7, p849 * 156);
    v1199.bezierCurveTo(p849 * 0, p849 * 186, p849 * 10, p849 * 201, p849 * 43, p849 * 220);
    v1199.closePath();
    f89(v1199, p851[3], p851[4], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 59, p849 * 67);
    v1199.bezierCurveTo(p849 * 47, p849 * 97, p849 * 18, p849 * 117, p849 * 11, p849 * 110);
    v1199.bezierCurveTo(p849 * 11, p849 * 115, p849 * 15, p849 * 122, p849 * 23, p849 * 124);
    v1199.bezierCurveTo(p849 * 46, p849 * 118, p849 * 52, p849 * 113, p849 * 62, p849 * 86);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 30, p849 * 125);
    v1199.bezierCurveTo(p849 * 47, p849 * 136, p849 * 57, p849 * 134, p849 * 77, p849 * 127);
    v1199.bezierCurveTo(p849 * 71, p849 * 158, p849 * 71, p849 * 159, p849 * 66, p849 * 159);
    v1199.bezierCurveTo(p849 * 50.5, p849 * 156.5, p849 * 50.5, p849 * 156.5, p849 * 35, p849 * 154);
    v1199.bezierCurveTo(p849 * 31, p849 * 145, p849 * 31, p849 * 136, p849 * 31, p849 * 125);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 171);
    v1199.bezierCurveTo(p849 * 32, p849 * 221, p849 * 43, p849 * 233, p849 * 70, p849 * 247);
    v1199.bezierCurveTo(p849 * 75, p849 * 234, p849 * 75, p849 * 230, p849 * 72, p849 * 221);
    v1199.bezierCurveTo(p849 * 48, p849 * 206, p849 * 54, p849 * 188, p849 * 50, p849 * 176);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 60, p849 * 68);
    v1199.bezierCurveTo(p849 * 63, p849 * 69, p849 * 65, p849 * 71, p849 * 67, p849 * 77);
    v1199.bezierCurveTo(p849 * 61, p849 * 123, p849 * 52, p849 * 137, p849 * 42, p849 * 150);
    v1199.bezierCurveTo(p849 * 38, p849 * 151, p849 * 38, p849 * 151, p849 * 34, p849 * 152);
    v1199.bezierCurveTo(p849 * 33, p849 * 146.5, p849 * 33, p849 * 146.5, p849 * 32, p849 * 141);
    v1199.bezierCurveTo(p849 * 49, p849 * 118, p849 * 63, p849 * 87, p849 * 59, p849 * 68);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 71, p849 * 172);
    v1199.bezierCurveTo(p849 * 56, p849 * 222, p849 * 49, p849 * 234, p849 * 35, p849 * 248);
    v1199.bezierCurveTo(p849 * 30, p849 * 236, p849 * 30, p849 * 230, p849 * 31, p849 * 217);
    v1199.bezierCurveTo(p849 * 44, p849 * 202, p849 * 49, p849 * 191, p849 * 52, p849 * 172);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 35, p849 * 151);
    v1199.bezierCurveTo(p849 * 27, p849 * 165, p849 * 31, p849 * 173, p849 * 36, p849 * 178);
    v1199.bezierCurveTo(p849 * 56, p849 * 185, p849 * 73, p849 * 184, p849 * 71, p849 * 170);
    v1199.bezierCurveTo(p849 * 72, p849 * 154, p849 * 71, p849 * 154, p849 * 63, p849 * 155);
    v1199.closePath();
    f89(v1199, p851[7], p851[8], p849 * 6);
    v1199.beginPath();
    v1199.lineCap = "round";
    v1199.lineJoin = "round";
    v1199.moveTo(p849 * 53, p849 * 113);
    v1199.bezierCurveTo(p849 * 65, p849 * 140, p849 * 75, p849 * 166, p849 * 52, p849 * 169);
    v1199.bezierCurveTo(p849 * 29, p849 * 168, p849 * 41, p849 * 143, p849 * 53, p849 * 112);
    v1199.closePath();
    f89(v1199, p851[3], p851[4], p849 * 6);
    return v1198;
  }
  function f194(p852, p853) {
    var v1200 = document.createElement("canvas");
    var v1201 = v1200.getContext("2d");
    v1200.width = p852 * 80;
    v1200.height = p852 * 100;
    v1201.scale(0.5, 0.5);
    v1201.translate(10, 15);
    v1201.globalAlpha = 0.5;
    v1201.beginPath();
    v1201.lineCap = "round";
    v1201.lineJoin = "round";
    v1201.moveTo(p852 * 47, p852 * 5);
    v1201.bezierCurveTo(p852 * 19, p852 * 30, p852 * 12, p852 * 42, p852 * 10, p852 * 55);
    v1201.bezierCurveTo(p852 * 11, p852 * 75, p852 * 27, p852 * 76, p852 * 36, p852 * 72);
    v1201.bezierCurveTo(p852 * 52, p852 * 60, p852 * 53, p852 * 46, p852 * 54, p852 * 31);
    v1201.bezierCurveTo(p852 * 53, p852 * 14, p852 * 50, p852 * 9, p852 * 48, p852 * 6);
    v1201.closePath();
    f89(v1201, p853[0]);
    v1201.beginPath();
    v1201.lineCap = "round";
    v1201.lineJoin = "round";
    v1201.moveTo(p852 * 17, p852 * 70);
    v1201.bezierCurveTo(p852 * 18, p852 * 77, p852 * 10, p852 * 83, p852 * 4, p852 * 87);
    f89(v1201, undefined, p853[0], p852 * 10);
    v1201.translate(0, -10);
    v1201.globalAlpha = 1;
    v1201.beginPath();
    v1201.lineCap = "round";
    v1201.lineJoin = "round";
    v1201.moveTo(p852 * 47, p852 * 5);
    v1201.bezierCurveTo(p852 * 19, p852 * 30, p852 * 12, p852 * 42, p852 * 10, p852 * 55);
    v1201.bezierCurveTo(p852 * 11, p852 * 75, p852 * 27, p852 * 76, p852 * 36, p852 * 72);
    v1201.bezierCurveTo(p852 * 52, p852 * 60, p852 * 53, p852 * 46, p852 * 54, p852 * 31);
    v1201.bezierCurveTo(p852 * 53, p852 * 14, p852 * 50, p852 * 9, p852 * 48, p852 * 6);
    v1201.closePath();
    f89(v1201, p853[1], p853[2], p852 * 8);
    v1201.beginPath();
    v1201.lineCap = "round";
    v1201.lineJoin = "round";
    v1201.moveTo(p852 * 17, p852 * 70);
    v1201.bezierCurveTo(p852 * 18, p852 * 77, p852 * 10, p852 * 83, p852 * 4, p852 * 87);
    f89(v1201, vVVVUndefined17, p853[2], p852 * 8);
    v1201.globalAlpha = 0.5;
    v1201.beginPath();
    v1201.lineCap = "round";
    v1201.lineJoin = "round";
    v1201.moveTo(p852 * 17, p852 * 70);
    v1201.bezierCurveTo(p852 * 33, p852 * 52, p852 * 39, p852 * 33, p852 * 48, p852 * 7);
    f89(v1201, vVVVVUndefined173, p853[2], p852 * 8);
    return v1200;
  }
  function f195(p854, p855, p856) {
    var v1202 = document.createElement("canvas");
    var v1203 = v1202.getContext("2d");
    v1202.width = p854 * 135;
    v1202.height = p854 * 120;
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p854 * 3.5, p854 * 55.25);
    v1203.bezierCurveTo(p854 * 3.5, p854 * 114.25, p854 * 2.5, p854 * 109.25, p854 * 3.5, p854 * 112.25);
    v1203.bezierCurveTo(p854 * 5.5, p854 * 119.25, p854 * 8.5, p854 * 119.25, p854 * 11.5, p854 * 119.25);
    v1203.bezierCurveTo(p854 * 15.5, p854 * 114.25, p854 * 13.5, p854 * 95.25, p854 * 14.5, p854 * 82.25);
    v1203.closePath();
    f89(v1203, p856[0], p856[1], p854 * 7);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p854 * 6.5, p854 * 43.25);
    v1203.bezierCurveTo(p854 * 3.5, p854 * 27.25, p854 * 7.5, p854 * 20.25, p854 * 25.5, p854 * 11.25);
    v1203.bezierCurveTo(p854 * 45.5, p854 * -0.75, p854 * 73.5, p854 * 1.25, p854 * 107.5, p854 * 10.25);
    v1203.bezierCurveTo(p854 * 131.5, p854 * 21.25, p854 * 125.5, p854 * 34.25, p854 * 125.5, p854 * 36.25);
    v1203.closePath();
    f89(v1203, p856[0], p856[1], p854 * 7);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p854 * 120.5, p854 * 62.25);
    v1203.bezierCurveTo(p854 * 121.5, p854 * 95.25, p854 * 120.5, p854 * 80.25, p854 * 120.5, p854 * 100.25);
    v1203.bezierCurveTo(p854 * 118.5, p854 * 119.25, p854 * 123.5, p854 * 118.25, p854 * 129.5, p854 * 113.25);
    v1203.bezierCurveTo(p854 * 133.5, p854 * 107.25, p854 * 130.5, p854 * 97.25, p854 * 130.5, p854 * 87.25);
    v1203.bezierCurveTo(p854 * 129.5, p854 * 56.25, p854 * 130, p854 * 70.75, p854 * 129.5, p854 * 54.25);
    v1203.closePath();
    f89(v1203, p856[0], p856[1], p854 * 7);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p854 * 17.5, p854 * 27);
    v1203.bezierCurveTo(p854 * 48.5, p854 * 5, p854 * 93.5, p854 * 14, p854 * 118.5, p854 * 26);
    v1203.bezierCurveTo(p854 * 132.5, p854 * 35, p854 * 133.5, p854 * 52, p854 * 132.5, p854 * 68);
    v1203.bezierCurveTo(p854 * 125.5, p854 * 87, p854 * 116.5, p854 * 84, p854 * 96.5, p854 * 75);
    v1203.bezierCurveTo(p854 * 60.5, p854 * 66, p854 * 52.5, p854 * 74, p854 * 37.5, p854 * 78);
    v1203.bezierCurveTo(p854 * 2.5, p854 * 86, p854 * 3.5, p854 * 78, p854 * 1.5, p854 * 61);
    v1203.bezierCurveTo(p854 * 1.5, p854 * 37, p854 * 9.5, p854 * 32, p854 * 15.5, p854 * 28);
    v1203.closePath();
    f89(v1203, p856[2], p856[3], p854 * 7);
    return v1202;
  }
  function f196(p857, p858, p859) {
    var v1204 = document.createElement("canvas");
    var v1205 = v1204.getContext("2d");
    v1204.width = p857 * 81;
    v1204.height = p857 * 626;
    v1205.translate(p857 * 20, p857 * 20);
    v1205.globalAlpha = p858 ? 0.5 : 1;
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 55, p857 * 565);
    v1205.bezierCurveTo(p857 * 56, p857 * 586, p857 * 53, p857 * 591, p857 * 40, p857 * 592);
    v1205.bezierCurveTo(p857 * 28, p857 * 591, p857 * 27, p857 * 583, p857 * 28, p857 * 557);
    v1205.bezierCurveTo(p857 * 27.5, p857 * 346, p857 * 27.5, p857 * 346, p857 * 27, p857 * 135);
    v1205.bezierCurveTo(p857 * 26, p857 * 74, p857 * 36, p857 * 26, p857 * 41, p857 * 15);
    v1205.bezierCurveTo(p857 * 54, p857 * 51, p857 * 54, p857 * 81, p857 * 55, p857 * 128);
    v1205.closePath();
    f89(v1205, p859[0]);
    v1205.translate(p857 * -20, p857 * -20);
    v1205.globalAlpha = 1;
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 55, p857 * 565);
    v1205.bezierCurveTo(p857 * 56, p857 * 586, p857 * 53, p857 * 591, p857 * 40, p857 * 592);
    v1205.bezierCurveTo(p857 * 28, p857 * 591, p857 * 27, p857 * 583, p857 * 28, p857 * 557);
    v1205.bezierCurveTo(p857 * 27.5, p857 * 346, p857 * 27.5, p857 * 346, p857 * 27, p857 * 135);
    v1205.bezierCurveTo(p857 * 26, p857 * 74, p857 * 36, p857 * 26, p857 * 41, p857 * 15);
    v1205.bezierCurveTo(p857 * 54, p857 * 51, p857 * 54, p857 * 81, p857 * 55, p857 * 128);
    v1205.closePath();
    f89(v1205, p859[1], p859[2], p857 * 8);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 27, p857 * 129);
    v1205.bezierCurveTo(p857 * 32, p857 * 135, p857 * 48, p857 * 136, p857 * 53, p857 * 129);
    v1205.bezierCurveTo(p857 * 56, p857 * 97, p857 * 53, p857 * 82, p857 * 52, p857 * 64);
    v1205.bezierCurveTo(p857 * 49, p857 * 33, p857 * 44, p857 * 27, p857 * 41, p857 * 21);
    v1205.bezierCurveTo(p857 * 31, p857 * 40, p857 * 28, p857 * 84, p857 * 27, p857 * 127);
    v1205.closePath();
    f89(v1205, p859[3]);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 55, p857 * 565);
    v1205.bezierCurveTo(p857 * 56, p857 * 586, p857 * 53, p857 * 591, p857 * 40, p857 * 592);
    v1205.bezierCurveTo(p857 * 28, p857 * 591, p857 * 27, p857 * 583, p857 * 28, p857 * 557);
    v1205.bezierCurveTo(p857 * 27.5, p857 * 346, p857 * 27.5, p857 * 346, p857 * 27, p857 * 135);
    v1205.bezierCurveTo(p857 * 26, p857 * 74, p857 * 36, p857 * 26, p857 * 41, p857 * 15);
    v1205.bezierCurveTo(p857 * 54, p857 * 51, p857 * 54, p857 * 81, p857 * 55, p857 * 128);
    v1205.closePath();
    f89(v1205, undefined, p859[2], p857 * 8);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 28, p857 * 475);
    v1205.bezierCurveTo(p857 * 38, p857 * 482, p857 * 48, p857 * 480, p857 * 54, p857 * 474);
    v1205.bezierCurveTo(p857 * 54, p857 * 509.5, p857 * 54, p857 * 509.5, p857 * 54, p857 * 545);
    v1205.bezierCurveTo(p857 * 46, p857 * 554, p857 * 36, p857 * 552, p857 * 28, p857 * 545);
    v1205.closePath();
    f89(v1205, p859[4], p859[5], p857 * 8);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 28, p857 * 496);
    v1205.bezierCurveTo(p857 * 39, p857 * 506, p857 * 49, p857 * 503, p857 * 54, p857 * 496);
    f89(v1205, vVVVUndefined17, p859[5], p857 * 8);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p857 * 28, p857 * 521);
    v1205.bezierCurveTo(p857 * 41, p857 * 529, p857 * 49, p857 * 524, p857 * 54, p857 * 520);
    f89(v1205, vVVVVUndefined1722, p859[5], p857 * 8);
    return v1204;
  }
  function f197(p860, p861, p862) {
    var v1206 = document.createElement("canvas");
    var v1207 = v1206.getContext("2d");
    v1206.width = p860 * 90;
    v1206.height = p860 * 101;
    v1207.translate(p860 * 0, p860 * 5);
    if (v768 === 0) {
      v1207.globalAlpha = p861 ? 0.5 : 1;
      f94(v1207, p860 * 44, p860 * 55, p860 * 41);
      f89(v1207, p862[0]);
    }
    v1207.globalAlpha = 1;
    f94(v1207, p860 * 44, p860 * 45, p860 * 41);
    f89(v1207, p862[1], p862[2], p860 * 4);
    f94(v1207, p860 * 44, p860 * 45, p860 * 31);
    f89(v1207, p862[3]);
    v1207.save();
    v1207.translate(p860 * 45, p860 * 45);
    f90(v1207, p860 * -9, p860 * -25.5, p860 * 18, p860 * 51, p860 * 30);
    v1207.restore();
    f89(v1207, p862[4], p862[4], p860 * 2);
    v1207.save();
    v1207.translate(p860 * 45, p860 * 45);
    f90(v1207, p860 * -26, p860 * -9, p860 * 52, p860 * 18, p860 * 30);
    v1207.restore();
    f89(v1207, p862[4], p862[4], p860 * 2);
    f94(v1207, p860 * 45, p860 * 29, p860 * 7);
    f89(v1207, p862[5]);
    f94(v1207, p860 * 45, p860 * 61, p860 * 7);
    f89(v1207, p862[5]);
    f94(v1207, p860 * 28, p860 * 45, p860 * 7);
    f89(v1207, p862[5]);
    f94(v1207, p860 * 62, p860 * 45, p860 * 7);
    f89(v1207, p862[5]);
    return v1206;
  }
  function f198(p863, p864, p865) {
    var v1208 = document.createElement("canvas");
    var v1209 = v1208.getContext("2d");
    v1208.width = p863 * 309;
    v1208.height = p863 * 287;
    v1209.globalAlpha = p864 ? 0.5 : 1;
    v1209.translate(p863 * 10, p863 * 5);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 34.5, p863 * 38.53125);
    v1209.bezierCurveTo(p863 * 91.5, p863 * 30.53125, p863 * 138.5, p863 * 68.53125, p863 * 169.5, p863 * 93.53125);
    v1209.bezierCurveTo(p863 * 208.5, p863 * 128.53125, p863 * 226.5, p863 * 157.53125, p863 * 233.5, p863 * 209.53125);
    v1209.bezierCurveTo(p863 * 195.5, p863 * 218.53125, p863 * 138.5, p863 * 191.53125, p863 * 105.5, p863 * 157.53125);
    v1209.bezierCurveTo(p863 * 54.5, p863 * 112.53125, p863 * 41.5, p863 * 80.53125, p863 * 33.5, p863 * 38.53125);
    v1209.closePath();
    f89(v1209, p865[0], p865[0], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 143.5, p863 * 74.53125);
    v1209.bezierCurveTo(p863 * 164.5, p863 * 73.53125, p863 * 159, p863 * 74.53125, p863 * 174.5, p863 * 74.53125);
    v1209.bezierCurveTo(p863 * 186, p863 * 86.53125, p863 * 186, p863 * 86.53125, p863 * 197.5, p863 * 98.53125);
    v1209.bezierCurveTo(p863 * 186, p863 * 97.03125, p863 * 186, p863 * 97.03125, p863 * 174.5, p863 * 95.53125);
    v1209.closePath();
    f89(v1209, p865[0], p865[0], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 87.5, p863 * 142.53125);
    v1209.bezierCurveTo(p863 * 92, p863 * 160.03125, p863 * 92, p863 * 160.03125, p863 * 96.5, p863 * 177.53125);
    v1209.bezierCurveTo(p863 * 108, p863 * 181.53125, p863 * 108, p863 * 181.53125, p863 * 119.5, p863 * 185.53125);
    v1209.bezierCurveTo(p863 * 116.5, p863 * 175.53125, p863 * 116.5, p863 * 175.53125, p863 * 113.5, p863 * 165.53125);
    v1209.closePath();
    f89(v1209, p865[0], p865[0], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 236.5, p863 * 189.53125);
    v1209.bezierCurveTo(p863 * 274.5, p863 * 197.53125, p863 * 255.5, p863 * 194.03125, p863 * 274.5, p863 * 198.53125);
    v1209.bezierCurveTo(p863 * 272.5, p863 * 236.53125, p863 * 261.5, p863 * 237.53125, p863 * 242.5, p863 * 248.53125);
    v1209.bezierCurveTo(p863 * 230.5, p863 * 231.03125, p863 * 230.5, p863 * 231.03125, p863 * 218.5, p863 * 213.53125);
    v1209.closePath();
    f89(v1209, p865[0], p865[0], p863 * 10);
    v1209.globalAlpha = 1;
    v1209.translate(p863 * -10, p863 * -5);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 34.5, p863 * 38.53125);
    v1209.bezierCurveTo(p863 * 91.5, p863 * 30.53125, p863 * 138.5, p863 * 68.53125, p863 * 169.5, p863 * 93.53125);
    v1209.bezierCurveTo(p863 * 208.5, p863 * 128.53125, p863 * 226.5, p863 * 157.53125, p863 * 233.5, p863 * 209.53125);
    v1209.bezierCurveTo(p863 * 195.5, p863 * 218.53125, p863 * 138.5, p863 * 191.53125, p863 * 105.5, p863 * 157.53125);
    v1209.bezierCurveTo(p863 * 54.5, p863 * 112.53125, p863 * 41.5, p863 * 80.53125, p863 * 33.5, p863 * 38.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 143.5, p863 * 74.53125);
    v1209.bezierCurveTo(p863 * 164.5, p863 * 73.53125, p863 * 159, p863 * 74.53125, p863 * 174.5, p863 * 74.53125);
    v1209.bezierCurveTo(p863 * 186, p863 * 86.53125, p863 * 186, p863 * 86.53125, p863 * 197.5, p863 * 98.53125);
    v1209.bezierCurveTo(p863 * 186, p863 * 97.03125, p863 * 186, p863 * 97.03125, p863 * 174.5, p863 * 95.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 87.5, p863 * 142.53125);
    v1209.bezierCurveTo(p863 * 92, p863 * 160.03125, p863 * 92, p863 * 160.03125, p863 * 96.5, p863 * 177.53125);
    v1209.bezierCurveTo(p863 * 108, p863 * 181.53125, p863 * 108, p863 * 181.53125, p863 * 119.5, p863 * 185.53125);
    v1209.bezierCurveTo(p863 * 116.5, p863 * 175.53125, p863 * 116.5, p863 * 175.53125, p863 * 113.5, p863 * 165.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 236.5, p863 * 189.53125);
    v1209.bezierCurveTo(p863 * 274.5, p863 * 197.53125, p863 * 255.5, p863 * 194.03125, p863 * 274.5, p863 * 198.53125);
    v1209.bezierCurveTo(p863 * 272.5, p863 * 236.53125, p863 * 261.5, p863 * 237.53125, p863 * 242.5, p863 * 248.53125);
    v1209.bezierCurveTo(p863 * 230.5, p863 * 231.03125, p863 * 230.5, p863 * 231.03125, p863 * 218.5, p863 * 213.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 10);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 109.5, p863 * 51.53125);
    v1209.bezierCurveTo(p863 * 107.5, p863 * 92.53125, p863 * 91.5, p863 * 95.53125, p863 * 59.5, p863 * 101.53125);
    f89(v1209, p865[1], p865[2], p863 * 7);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 72.5, p863 * 51.53125);
    v1209.bezierCurveTo(p863 * 71, p863 * 64.53125, p863 * 69.5, p863 * 76.53125, p863 * 69.5, p863 * 77.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 7);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 84.5, p863 * 63.53125);
    v1209.bezierCurveTo(p863 * 70.5, p863 * 65.03125, p863 * 70.5, p863 * 65.03125, p863 * 56.5, p863 * 66.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 7);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 125.5, p863 * 84.53125);
    v1209.bezierCurveTo(p863 * 125.5, p863 * 110.03125, p863 * 125.5, p863 * 110.03125, p863 * 125.5, p863 * 135.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 7);
    v1209.beginPath();
    v1209.lineCap = "round";
    v1209.lineJoin = "round";
    v1209.moveTo(p863 * 149.5, p863 * 108.53125);
    v1209.bezierCurveTo(p863 * 150, p863 * 137.03125, p863 * 150, p863 * 137.03125, p863 * 150.5, p863 * 165.53125);
    v1209.closePath();
    f89(v1209, p865[1], p865[2], p863 * 7);
    return v1208;
  }
  function f199(p866, p867, p868) {
    var v1210 = document.createElement("canvas");
    var v1211 = v1210.getContext("2d");
    v1210.width = p866 * 100;
    v1210.height = p866 * 648;
    v1211.translate(p866 * 20, p866 * 20);
    v1211.globalAlpha = p867 ? 0.5 : 1;
    v1211.save();
    v1211.translate(p866 * 50.5, p866 * 349.5);
    f90(v1211, p866 * -13.5, p866 * -249.5, p866 * 27, p866 * 499, p866 * 10);
    v1211.restore();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 36, p866 * 538);
    v1211.bezierCurveTo(p866 * 49.5, p866 * 538, p866 * 49.5, p866 * 538, p866 * 63, p866 * 538);
    v1211.bezierCurveTo(p866 * 63.5, p866 * 568, p866 * 63.5, p866 * 568, p866 * 64, p866 * 598);
    v1211.bezierCurveTo(p866 * 50, p866 * 598, p866 * 50, p866 * 598, p866 * 36, p866 * 598);
    v1211.bezierCurveTo(p866 * 36, p866 * 568.5, p866 * 36, p866 * 568.5, p866 * 36, p866 * 539);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 36, p866 * 554);
    v1211.bezierCurveTo(p866 * 45, p866 * 561, p866 * 56, p866 * 558, p866 * 63, p866 * 554);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 32, p866 * 569);
    v1211.bezierCurveTo(p866 * 44, p866 * 576, p866 * 58, p866 * 574, p866 * 68, p866 * 569);
    v1211.bezierCurveTo(p866 * 68, p866 * 584, p866 * 68, p866 * 584, p866 * 68, p866 * 599);
    v1211.bezierCurveTo(p866 * 68, p866 * 608, p866 * 65, p866 * 618, p866 * 49, p866 * 617);
    v1211.bezierCurveTo(p866 * 34, p866 * 617, p866 * 32, p866 * 610, p866 * 32, p866 * 598);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 41, p866 * 581);
    v1211.bezierCurveTo(p866 * 48, p866 * 584, p866 * 55, p866 * 583, p866 * 60, p866 * 581);
    v1211.bezierCurveTo(p866 * 60, p866 * 589.5, p866 * 60, p866 * 589.5, p866 * 60, p866 * 598);
    v1211.bezierCurveTo(p866 * 60, p866 * 604, p866 * 59, p866 * 609, p866 * 48, p866 * 608);
    v1211.bezierCurveTo(p866 * 40, p866 * 607, p866 * 40, p866 * 606, p866 * 41, p866 * 581);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 31, p866 * 106);
    v1211.bezierCurveTo(p866 * 31, p866 * 124.5, p866 * 31, p866 * 124.5, p866 * 31, p866 * 143);
    v1211.bezierCurveTo(p866 * 31, p866 * 163, p866 * 38, p866 * 169, p866 * 48, p866 * 168);
    v1211.bezierCurveTo(p866 * 57, p866 * 168, p866 * 67, p866 * 165, p866 * 67, p866 * 148);
    v1211.bezierCurveTo(p866 * 67, p866 * 123.5, p866 * 67, p866 * 123.5, p866 * 67, p866 * 99);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 49, p866 * 27);
    v1211.bezierCurveTo(p866 * 64, p866 * 62.5, p866 * 64, p866 * 62.5, p866 * 79, p866 * 98);
    v1211.bezierCurveTo(p866 * 74, p866 * 113, p866 * 63, p866 * 121, p866 * 50, p866 * 122);
    v1211.bezierCurveTo(p866 * 35, p866 * 123, p866 * 22, p866 * 109, p866 * 20, p866 * 98);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 49, p866 * 43);
    v1211.bezierCurveTo(p866 * 61, p866 * 70, p866 * 61, p866 * 70, p866 * 73, p866 * 97);
    v1211.bezierCurveTo(p866 * 66, p866 * 116, p866 * 43, p866 * 122, p866 * 26, p866 * 99);
    v1211.closePath();
    f89(v1211, p868[0]);
    v1211.translate(p866 * -20, p866 * -20);
    v1211.globalAlpha = 1;
    v1211.save();
    v1211.translate(p866 * 50.5, p866 * 349.5);
    f90(v1211, p866 * -13.5, p866 * -249.5, p866 * 27, p866 * 499, p866 * 10);
    v1211.restore();
    f89(v1211, p868[1], p868[2], p866 * 8);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 36, p866 * 538);
    v1211.bezierCurveTo(p866 * 49.5, p866 * 538, p866 * 49.5, p866 * 538, p866 * 63, p866 * 538);
    v1211.bezierCurveTo(p866 * 63.5, p866 * 568, p866 * 63.5, p866 * 568, p866 * 64, p866 * 598);
    v1211.bezierCurveTo(p866 * 50, p866 * 598, p866 * 50, p866 * 598, p866 * 36, p866 * 598);
    v1211.bezierCurveTo(p866 * 36, p866 * 568.5, p866 * 36, p866 * 568.5, p866 * 36, p866 * 539);
    v1211.closePath();
    f89(v1211, p868[3], p868[4], p866 * 8);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 36, p866 * 554);
    v1211.bezierCurveTo(p866 * 45, p866 * 561, p866 * 56, p866 * 558, p866 * 63, p866 * 554);
    v1211.closePath();
    f89(v1211, undefined, p868[4], p866 * 8);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 32, p866 * 569);
    v1211.bezierCurveTo(p866 * 44, p866 * 576, p866 * 58, p866 * 574, p866 * 68, p866 * 569);
    v1211.bezierCurveTo(p866 * 68, p866 * 584, p866 * 68, p866 * 584, p866 * 68, p866 * 599);
    v1211.bezierCurveTo(p866 * 68, p866 * 608, p866 * 65, p866 * 618, p866 * 49, p866 * 617);
    v1211.bezierCurveTo(p866 * 34, p866 * 617, p866 * 32, p866 * 610, p866 * 32, p866 * 598);
    v1211.closePath();
    f89(v1211, p868[5], p868[6], p866 * 8);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 41, p866 * 581);
    v1211.bezierCurveTo(p866 * 48, p866 * 584, p866 * 55, p866 * 583, p866 * 60, p866 * 581);
    v1211.bezierCurveTo(p866 * 60, p866 * 589.5, p866 * 60, p866 * 589.5, p866 * 60, p866 * 598);
    v1211.bezierCurveTo(p866 * 60, p866 * 604, p866 * 59, p866 * 609, p866 * 48, p866 * 608);
    v1211.bezierCurveTo(p866 * 40, p866 * 607, p866 * 40, p866 * 606, p866 * 41, p866 * 581);
    v1211.closePath();
    f89(v1211, p868[7]);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 31, p866 * 106);
    v1211.bezierCurveTo(p866 * 31, p866 * 124.5, p866 * 31, p866 * 124.5, p866 * 31, p866 * 143);
    v1211.bezierCurveTo(p866 * 31, p866 * 163, p866 * 38, p866 * 169, p866 * 48, p866 * 168);
    v1211.bezierCurveTo(p866 * 57, p866 * 168, p866 * 67, p866 * 165, p866 * 67, p866 * 148);
    v1211.bezierCurveTo(p866 * 67, p866 * 123.5, p866 * 67, p866 * 123.5, p866 * 67, p866 * 99);
    v1211.closePath();
    f89(v1211, p868[5], p868[6], p866 * 8);
    v1211.save();
    v1211.translate(p866 * -46, p866 * -50);
    v1211.scale(2, 2);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 51, p866 * 80);
    v1211.bezierCurveTo(p866 * 51, p866 * 89.5, p866 * 51, p866 * 89.5, p866 * 51, p866 * 99);
    v1211.bezierCurveTo(p866 * 49, p866 * 103, p866 * 46, p866 * 105, p866 * 44, p866 * 99);
    v1211.bezierCurveTo(p866 * 44, p866 * 88.5, p866 * 44, p866 * 88.5, p866 * 44, p866 * 78);
    v1211.closePath();
    f89(v1211, p868[8]);
    v1211.restore();
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 49, p866 * 27);
    v1211.bezierCurveTo(p866 * 64, p866 * 62.5, p866 * 64, p866 * 62.5, p866 * 79, p866 * 98);
    v1211.bezierCurveTo(p866 * 74, p866 * 113, p866 * 63, p866 * 121, p866 * 50, p866 * 122);
    v1211.bezierCurveTo(p866 * 35, p866 * 123, p866 * 22, p866 * 109, p866 * 20, p866 * 98);
    v1211.closePath();
    f89(v1211, p868[8], p868[9], p866 * 8);
    v1211.scale(2, 2);
    v1211.translate(p866 * -23, p866 * -20);
    v1211.beginPath();
    v1211.lineCap = "round";
    v1211.lineJoin = "round";
    v1211.moveTo(p866 * 57, p866 * 69);
    v1211.bezierCurveTo(p866 * 50, p866 * 76, p866 * 43, p866 * 75, p866 * 38, p866 * 69);
    v1211.bezierCurveTo(p866 * 43, p866 * 57, p866 * 43, p866 * 57, p866 * 48, p866 * 45);
    v1211.closePath();
    f89(v1211, p868[10]);
    return v1210;
  }
  function f200(p869, p870, p871) {
    var v1212 = document.createElement("canvas");
    var v1213 = v1212.getContext("2d");
    v1212.width = p869 * 200;
    v1212.height = p869 * 200;
    v1213.save();
    v1213.translate(p869 * 112, p869 * 158);
    f90(v1213, p869 * -86.5, p869 * -86, p869 * 150, p869 * 35, p869 * 20);
    v1213.restore();
    f89(v1213, p871[0]);
    v1213.save();
    v1213.translate(p869 * 170, p869 * 100);
    f90(v1213, p869 * -86.5, p869 * -86, p869 * 35, p869 * 150, p869 * 20);
    v1213.restore();
    f89(v1213, p871[0]);
    return v1212;
  }
  function f201(p872, p873, p874) {
    var v1214 = document.createElement("canvas");
    var v1215 = v1214.getContext("2d");
    var v1216 = p872 * 18;
    var v1217 = p872 * 18;
    v1214.width = v1216;
    v1214.height = v1217;
    var v1218 = p872 * 9;
    var v1219 = p872 * 9;
    var v1220 = p872 * 8;
    v1215.save();
    v1215.translate(v1218, v1219);
    v1215.globalAlpha = 1;
    f94(v1215, 0, 0, v1220);
    f89(v1215, p874[0]);
    v1220 = p872 * 3;
    v1218 = 0;
    v1219 = p872 * -3;
    v1215.translate(v1218, v1219);
    v1215.globalAlpha = 1;
    f94(v1215, 0, 0, v1220);
    f89(v1215, p874[1]);
    v1215.restore();
    return v1214;
  }
  function f202(p875, p876, p877) {
    var v1221 = document.createElement("canvas");
    var v1222 = v1221.getContext("2d");
    v1221.width = p875 * 304;
    v1221.height = p875 * 278;
    v1222.translate(p875 * 10, p875 * 25);
    v1222.globalAlpha = p876 ? 0.5 : 1;
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p875 * 128, p875 * 137);
    v1222.bezierCurveTo(p875 * 155, p875 * 144, p875 * 223, p875 * 143, p875 * 256, p875 * 122);
    v1222.bezierCurveTo(p875 * 249, p875 * 180, p875 * 210, p875 * 227, p875 * 164, p875 * 242);
    v1222.bezierCurveTo(p875 * 74, p875 * 213, p875 * 99, p875 * 166, p875 * 127, p875 * 138);
    v1222.closePath();
    f89(v1222, p877[0]);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p875 * 284, p875 * 52);
    v1222.bezierCurveTo(p875 * 126, p875 * 112, p875 * 89, p875 * 177, p875 * 170, p875 * 241);
    v1222.bezierCurveTo(p875 * 103, p875 * 275, p875 * 20, p875 * 239, p875 * 12, p875 * 159);
    v1222.bezierCurveTo(p875 * 5, p875 * 76, p875 * 75, p875 * 4, p875 * 165, p875 * 13);
    v1222.bezierCurveTo(p875 * 233, p875 * 15, p875 * 260, p875 * 33, p875 * 284, p875 * 52);
    v1222.closePath();
    f89(v1222, p877[0]);
    v1222.translate(p875 * -10, p875 * -25);
    v1222.globalAlpha = 1;
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p875 * 128, p875 * 137);
    v1222.bezierCurveTo(p875 * 155, p875 * 144, p875 * 223, p875 * 143, p875 * 256, p875 * 122);
    v1222.bezierCurveTo(p875 * 249, p875 * 180, p875 * 210, p875 * 227, p875 * 164, p875 * 242);
    v1222.bezierCurveTo(p875 * 74, p875 * 213, p875 * 99, p875 * 166, p875 * 127, p875 * 138);
    v1222.closePath();
    f89(v1222, p877[1], p877[2], p875 * 15);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p875 * 284, p875 * 52);
    v1222.bezierCurveTo(p875 * 126, p875 * 112, p875 * 89, p875 * 177, p875 * 170, p875 * 241);
    v1222.bezierCurveTo(p875 * 103, p875 * 275, p875 * 20, p875 * 239, p875 * 12, p875 * 159);
    v1222.bezierCurveTo(p875 * 5, p875 * 76, p875 * 75, p875 * 4, p875 * 165, p875 * 13);
    v1222.bezierCurveTo(p875 * 233, p875 * 15, p875 * 260, p875 * 33, p875 * 284, p875 * 52);
    v1222.closePath();
    f89(v1222, p877[3], p877[4], p875 * 15);
    return v1221;
  }
  function f203(p878, p879, p880) {
    var v1223 = document.createElement("canvas");
    var v1224 = v1223.getContext("2d");
    v1223.width = p878 * 165;
    v1223.height = p878 * 123;
    v1224.save();
    v1224.translate(p878 * 81, p878 * 65);
    f90(v1224, p878 * -78, p878 * -54.5, p878 * 156, p878 * 109, p878 * 20);
    v1224.restore();
    f89(v1224, p880[0]);
    v1224.save();
    v1224.translate(p878 * 81, p878 * 58);
    f90(v1224, p878 * -78, p878 * -54.5, p878 * 156, p878 * 109, p878 * 20);
    v1224.restore();
    f89(v1224, p880[1], p880[2], 4);
    v1224.save();
    v1224.translate(p878 * 81, p878 * 58);
    f90(v1224, p878 * -69, p878 * -47, p878 * 138, p878 * 93, p878 * 15);
    v1224.restore();
    f89(v1224, p880[3], p880[4], 4);
    v1224.save();
    v1224.translate(p878 * 79, p878 * 54);
    f90(v1224, p878 * -34, p878 * -40, p878 * 68, p878 * 88, p878 * 13);
    v1224.restore();
    f89(v1224, undefined, p880[5], 4);
    v1224.beginPath();
    v1224.lineCap = "round";
    v1224.lineJoin = "round";
    v1224.moveTo(p878 * 44, p878 * 13);
    v1224.bezierCurveTo(p878 * 43.5, p878 * 55, p878 * 43.5, p878 * 55, p878 * 43, p878 * 101);
    v1224.closePath();
    f89(v1224, vVVUndefined18, p880[6], 4);
    v1224.beginPath();
    v1224.lineCap = "round";
    v1224.lineJoin = "round";
    v1224.moveTo(p878 * 115, p878 * 13);
    v1224.bezierCurveTo(p878 * 115, p878 * 56, p878 * 115, p878 * 56, p878 * 115, p878 * 101);
    v1224.closePath();
    f89(v1224, vVVUndefined18, p880[6], 4);
    v1224.beginPath();
    v1224.lineCap = "round";
    v1224.lineJoin = "round";
    v1224.moveTo(p878 * 35, p878 * 6);
    v1224.bezierCurveTo(p878 * 35, p878 * 56, p878 * 36, p878 * 109, p878 * 35, p878 * 110);
    v1224.closePath();
    f89(v1224, undefined, p880[7], 4);
    v1224.beginPath();
    v1224.lineCap = "round";
    v1224.lineJoin = "round";
    v1224.moveTo(p878 * 123, p878 * 6);
    v1224.bezierCurveTo(p878 * 123, p878 * 56, p878 * 123, p878 * 56, p878 * 123, p878 * 110);
    v1224.closePath();
    f89(v1224, undefined, p880[7], 4);
    v1224.save();
    v1224.translate(p878 * 79, p878 * 113);
    f90(v1224, p878 * -18, p878 * -2, p878 * 36, p878 * 4, p878 * 20);
    v1224.restore();
    f89(v1224, undefined, p880[8], 4);
    v1224.save();
    v1224.translate(p878 * 75, p878 * 118);
    f90(v1224, p878 * -6, p878 * -2.5, p878 * 20, p878 * 5, p878 * 20);
    v1224.restore();
    f89(v1224, p880[8]);
    return v1223;
  }
  function f204(p881, p882, p883) {
    var v1225 = document.createElement("canvas");
    var v1226 = v1225.getContext("2d");
    var v1227 = p881 * 130;
    var v1228 = p881 * 142;
    var v1229 = v1227 / 2;
    var v1230 = v1228 / 2;
    v1225.width = v1227;
    v1225.height = v1228;
    v1226.translate(v1229, v1230 + p881 * 7);
    v1226.globalAlpha = p882 ? 0.5 : 1;
    f94(v1226, 0, 0, p881 * 60);
    f89(v1226, p883[0]);
    v1226.translate(0, p881 * -7);
    v1226.globalAlpha = 1;
    f94(v1226, 0, 0, p881 * 60);
    f89(v1226, p883[1], p883[2], p881 * 4);
    f94(v1226, 0, 0, p881 * 40);
    f89(v1226, p883[3]);
    f94(v1226, 0, 0, p881 * 25);
    f89(v1226, p883[4], p883[5], p881 * 8);
    return v1225;
  }
  function f205(p884, p885, p886) {
    var v1231 = document.createElement("canvas");
    var v1232 = v1231.getContext("2d");
    v1231.width = p884 * 130;
    v1231.height = p884 * 148;
    v1232.globalAlpha = p885 ? 0.5 : 1;
    v1232.save();
    v1232.translate(p884 * 65, p884 * 85);
    v1232.rotate(1.4);
    f92(v1232, 7, p884 * 60, p884 * 10);
    v1232.restore();
    f89(v1232, p886[0]);
    v1232.globalAlpha = 1;
    v1232.save();
    v1232.translate(p884 * 65, p884 * 74);
    v1232.rotate(1.4);
    f92(v1232, 7, p884 * 60, p884 * 10);
    f89(v1232, p886[1], p886[2], 4);
    v1232.rotate(0.64);
    f92(v1232, 7, p884 * 40, p884 * 10);
    f89(v1232, p886[3], p886[4], 4);
    v1232.rotate(0.12);
    f92(v1232, 7, p884 * 23, p884 * 5);
    v1232.restore();
    f89(v1232, p886[5]);
    return v1231;
  }
  function f206(p887, p888, p889) {
    var v1233 = document.createElement("canvas");
    var v1234 = v1233.getContext("2d");
    v1233.width = p887 * 300;
    v1233.height = p887 * 300;
    v1234.globalAlpha = p888 ? 0.5 : 1;
    v1234.save();
    v1234.translate(p887 * 150, p887 * 160);
    v1234.rotate(6.28);
    f92(v1234, 6, p887 * 146, p887 * 30);
    v1234.restore();
    f89(v1234, p889[0]);
    v1234.globalAlpha = 1;
    v1234.save();
    v1234.translate(p887 * 150, p887 * 150);
    v1234.rotate(6.28);
    f92(v1234, 6, p887 * 146, p887 * 30);
    v1234.restore();
    f89(v1234, p889[1], p889[2], p887 * 8);
    v1234.save();
    v1234.translate(p887 * 150, p887 * 150);
    v1234.rotate(0);
    f92(v1234, 6, p887 * 105, p887 * 30);
    v1234.restore();
    f89(v1234, p889[3], p889[3], p887 * 8);
    v1234.save();
    v1234.translate(p887 * 150, p887 * 150);
    v1234.rotate(0);
    f92(v1234, 6, p887 * 66, p887 * 30);
    v1234.restore();
    f89(v1234, p889[4], p889[2], p887 * 8);
    v1234.save();
    v1234.translate(p887 * 131, p887 * 116);
    f92(v1234, 7, p887 * 17, p887 * 8);
    v1234.restore();
    f89(v1234, p889[6]);
    v1234.save();
    v1234.translate(p887 * 163, p887 * 168);
    f92(v1234, 7, p887 * 25, p887 * 8);
    v1234.restore();
    f89(v1234, p889[6]);
    v1234.save();
    v1234.translate(p887 * 117, p887 * 151);
    f92(v1234, 7, p887 * 11, p887 * 8);
    v1234.restore();
    f89(v1234, p889[6]);
    v1234.save();
    v1234.translate(p887 * 167, p887 * 122);
    f92(v1234, 7, p887 * 12, p887 * 8);
    v1234.restore();
    f89(v1234, p889[6]);
    v1234.beginPath();
    v1234.lineCap = "round";
    v1234.lineJoin = "round";
    v1234.moveTo(p887 * 150, p887 * 207);
    v1234.bezierCurveTo(p887 * 150, p887 * 151, p887 * 150, p887 * 101, p887 * 150, p887 * 94);
    v1234.closePath();
    f89(v1234, undefined, p889[2], p887 * 8);
    v1234.beginPath();
    v1234.lineCap = "round";
    v1234.lineJoin = "round";
    v1234.moveTo(p887 * 118, p887 * 100);
    v1234.bezierCurveTo(p887 * 118, p887 * 205, p887 * 118, p887 * 207, p887 * 118, p887 * 200);
    v1234.closePath();
    f89(v1234, vVVUndefined17, p889[2], p887 * 8);
    v1234.beginPath();
    v1234.lineCap = "round";
    v1234.lineJoin = "round";
    v1234.moveTo(p887 * 183, p887 * 100);
    v1234.bezierCurveTo(p887 * 183, p887 * 203, p887 * 183, p887 * 203, p887 * 183, p887 * 200);
    v1234.closePath();
    f89(v1234, undefined, p889[2], p887 * 8);
    return v1233;
  }
  function f207(p890, p891) {
    var v1235 = document.createElement("canvas");
    var v1236 = v1235.getContext("2d");
    v1235.width = p890 * 253;
    v1235.height = p890 * 260;
    v1236.globalAlpha = 0.5;
    f94(v1236, p890 * 126.5, p890 * 134, p890 * 119);
    f89(v1236, p891[0]);
    v1236.globalAlpha = 1;
    f94(v1236, p890 * 126.5, p890 * 124, p890 * 119);
    f89(v1236, p891[1], p891[2], p890 * 4);
    f94(v1236, p890 * 126.5, p890 * 127, p890 * 100);
    f89(v1236, p891[3]);
    v1236.globalAlpha = 0.5;
    f94(v1236, p890 * 126.5, p890 * 135, p890 * 81);
    f89(v1236, p891[0]);
    v1236.globalAlpha = 1;
    f94(v1236, p890 * 126.5, p890 * 125, p890 * 84);
    f89(v1236, p891[4], p891[5], p890 * 4);
    f94(v1236, p890 * 126.5, p890 * 125, p890 * 61);
    f89(v1236, p891[6], p891[7], p890 * 4);
    v1236.globalAlpha = 0.5;
    f94(v1236, p890 * 126.5, p890 * 134, p890 * 40);
    f89(v1236, p891[8]);
    v1236.globalAlpha = 1;
    f94(v1236, p890 * 126.5, p890 * 125, p890 * 40);
    f89(v1236, p891[9]);
    return v1235;
  }
  function f208(p892, p893, p894) {
    var v1237 = document.createElement("canvas");
    var v1238 = v1237.getContext("2d");
    v1237.width = p892 * 139;
    v1237.height = p892 * 135;
    v1238.translate(0, p892 * 10);
    v1238.globalAlpha = p893 ? 0.5 : 1;
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 32, p892 * 77);
    v1238.bezierCurveTo(p892 * 6, p892 * 41, p892 * 6, p892 * 33, p892 * 12, p892 * 27);
    v1238.bezierCurveTo(p892 * 27, p892 * 6, p892 * 28, p892 * 6, p892 * 37, p892 * 6);
    v1238.bezierCurveTo(p892 * 62, p892 * 3, p892 * 64, p892 * 5, p892 * 67, p892 * 13);
    v1238.bezierCurveTo(p892 * 80, p892 * 36, p892 * 73.5, p892 * 25, p892 * 80, p892 * 37);
    v1238.bezierCurveTo(p892 * 73.5, p892 * 54, p892 * 65, p892 * 74, p892 * 67, p892 * 71);
    v1238.closePath();
    f89(v1238, p894[0]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 65, p892 * 37);
    v1238.bezierCurveTo(p892 * 105, p892 * 40, p892 * 113, p892 * 39, p892 * 117, p892 * 48);
    v1238.bezierCurveTo(p892 * 126, p892 * 70, p892 * 128, p892 * 72, p892 * 124, p892 * 80);
    v1238.bezierCurveTo(p892 * 112, p892 * 101, p892 * 110, p892 * 104, p892 * 99, p892 * 104);
    v1238.bezierCurveTo(p892 * 59, p892 * 100, p892 * 55, p892 * 99, p892 * 56, p892 * 99);
    v1238.bezierCurveTo(p892 * 47.5, p892 * 79, p892 * 45, p892 * 66, p892 * 39, p892 * 59);
    v1238.closePath();
    f89(v1238, p894[0]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 30, p892 * 63);
    v1238.bezierCurveTo(p892 * 5, p892 * 99, p892 * 5, p892 * 101, p892 * 8, p892 * 103);
    v1238.bezierCurveTo(p892 * 19, p892 * 123, p892 * 22, p892 * 125, p892 * 28, p892 * 126);
    v1238.bezierCurveTo(p892 * 57, p892 * 127, p892 * 55, p892 * 127, p892 * 58, p892 * 120);
    v1238.bezierCurveTo(p892 * 82, p892 * 86, p892 * 83, p892 * 78, p892 * 82, p892 * 87);
    v1238.closePath();
    f89(v1238, p894[0]);
    v1238.translate(0, p892 * -10);
    v1238.globalAlpha = 1;
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 32, p892 * 77);
    v1238.bezierCurveTo(p892 * 6, p892 * 41, p892 * 6, p892 * 33, p892 * 12, p892 * 27);
    v1238.bezierCurveTo(p892 * 27, p892 * 6, p892 * 28, p892 * 6, p892 * 37, p892 * 6);
    v1238.bezierCurveTo(p892 * 62, p892 * 3, p892 * 64, p892 * 5, p892 * 67, p892 * 13);
    v1238.bezierCurveTo(p892 * 80, p892 * 36, p892 * 73.5, p892 * 25, p892 * 80, p892 * 37);
    v1238.bezierCurveTo(p892 * 73.5, p892 * 54, p892 * 65, p892 * 74, p892 * 67, p892 * 71);
    v1238.closePath();
    f89(v1238, p894[1]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 65, p892 * 37);
    v1238.bezierCurveTo(p892 * 105, p892 * 40, p892 * 113, p892 * 39, p892 * 117, p892 * 48);
    v1238.bezierCurveTo(p892 * 126, p892 * 70, p892 * 128, p892 * 72, p892 * 124, p892 * 80);
    v1238.bezierCurveTo(p892 * 112, p892 * 101, p892 * 110, p892 * 104, p892 * 99, p892 * 104);
    v1238.bezierCurveTo(p892 * 59, p892 * 100, p892 * 55, p892 * 99, p892 * 56, p892 * 99);
    v1238.bezierCurveTo(p892 * 47.5, p892 * 79, p892 * 45, p892 * 66, p892 * 39, p892 * 59);
    v1238.closePath();
    f89(v1238, p894[1]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 30, p892 * 63);
    v1238.bezierCurveTo(p892 * 5, p892 * 99, p892 * 5, p892 * 101, p892 * 8, p892 * 103);
    v1238.bezierCurveTo(p892 * 19, p892 * 123, p892 * 22, p892 * 125, p892 * 28, p892 * 126);
    v1238.bezierCurveTo(p892 * 57, p892 * 127, p892 * 55, p892 * 127, p892 * 58, p892 * 120);
    v1238.bezierCurveTo(p892 * 82, p892 * 86, p892 * 83, p892 * 78, p892 * 82, p892 * 87);
    v1238.closePath();
    f89(v1238, p894[1]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 80, p892 * 38);
    v1238.bezierCurveTo(p892 * 72.5, p892 * 52, p892 * 72.5, p892 * 52, p892 * 65, p892 * 66);
    v1238.bezierCurveTo(p892 * 47.5, p892 * 37, p892 * 47.5, p892 * 37, p892 * 30, p892 * 7);
    v1238.bezierCurveTo(p892 * 48, p892 * 4, p892 * 57, p892 * 4, p892 * 64, p892 * 10);
    v1238.closePath();
    f89(v1238, p894[2]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 65, p892 * 65);
    v1238.bezierCurveTo(p892 * 125, p892 * 73, p892 * 95.5, p892 * 69, p892 * 126, p892 * 73);
    v1238.bezierCurveTo(p892 * 119, p892 * 98, p892 * 106, p892 * 104, p892 * 98, p892 * 103);
    v1238.bezierCurveTo(p892 * 84.5, p892 * 102, p892 * 84.5, p892 * 102, p892 * 71, p892 * 101);
    v1238.bezierCurveTo(p892 * 64, p892 * 86, p892 * 64, p892 * 86, p892 * 57, p892 * 70);
    v1238.closePath();
    f89(v1238, p894[2]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 27, p892 * 69);
    v1238.bezierCurveTo(p892 * 64, p892 * 65, p892 * 46, p892 * 67, p892 * 65, p892 * 65);
    v1238.bezierCurveTo(p892 * 43.5, p892 * 94, p892 * 43.5, p892 * 94, p892 * 22, p892 * 123);
    v1238.bezierCurveTo(p892 * 8, p892 * 103, p892 * 8, p892 * 103, p892 * 9, p892 * 103);
    v1238.bezierCurveTo(p892 * 5, p892 * 98, p892 * 11, p892 * 89, p892 * 26, p892 * 70);
    v1238.closePath();
    f89(v1238, p894[2]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 26, p892 * 69);
    v1238.bezierCurveTo(p892 * 65, p892 * 60, p892 * 45, p892 * 65, p892 * 64, p892 * 60);
    v1238.bezierCurveTo(p892 * 63, p892 * 65, p892 * 63, p892 * 65, p892 * 62, p892 * 70);
    v1238.closePath();
    f89(v1238, p894[2]);
    v1238.beginPath();
    v1238.lineCap = "round";
    v1238.lineJoin = "round";
    v1238.moveTo(p892 * 80, p892 * 38);
    v1238.bezierCurveTo(p892 * 68, p892 * 70, p892 * 75, p892 * 53, p892 * 70, p892 * 68);
    v1238.bezierCurveTo(p892 * 65, p892 * 67, p892 * 65, p892 * 67, p892 * 60, p892 * 65);
    v1238.closePath();
    f89(v1238, p894[2]);
    return v1237;
  }
  function f209(p895, p896) {
    var v1239 = document.createElement("canvas");
    var v1240 = v1239.getContext("2d");
    v1239.width = p895 * 173;
    v1239.height = p895 * 178;
    v1240.globalAlpha = 0.5;
    f94(v1240, p895 * 86.5, p895 * 98, p895 * 80);
    f89(v1240, p896[0]);
    v1240.globalAlpha = 1;
    f94(v1240, p895 * 86.5, p895 * 89, p895 * 81);
    f89(v1240, p896[1], p896[2], p895 * 4);
    f94(v1240, p895 * 86.5, p895 * 86, p895 * 59);
    f89(v1240, p896[3], p896[4], p895 * 4);
    v1240.globalAlpha = 0.5;
    f94(v1240, p895 * 86.5, p895 * 95, p895 * 34);
    f89(v1240, p896[0]);
    v1240.globalAlpha = 1;
    f94(v1240, p895 * 86.5, p895 * 89, p895 * 34);
    f89(v1240, p896[5]);
    return v1239;
  }
  function f210(p897, p898, p899) {
    var v1241 = document.createElement("canvas");
    var v1242 = v1241.getContext("2d");
    v1241.width = p897 * 170;
    v1241.height = p897 * 170;
    v1242.translate(0, p897 * 3);
    v1242.globalAlpha = p898 ? 0.5 : 1;
    v1242.save();
    v1242.translate(p897 * 85, p897 * 95);
    v1242.rotate(1.4);
    f92(v1242, 7, p897 * 60, p897 * 10);
    v1242.restore();
    f89(v1242, p899[0]);
    v1242.globalAlpha = 1;
    v1242.translate(p897 * 85, p897 * 82);
    for (var v1243 = 0; v1243 < 10; v1243++) {
      v1242.rotate(Math.PI / 5);
      v1242.save();
      v1242.translate(p897 * 65, 0);
      f92(v1242, 3, p897 * 21, p897 * 4);
      f89(v1242, p899[1], p899[2], p897 * 4);
      v1242.restore();
    }
    v1242.save();
    v1242.translate(p897 * 0, p897 * 0);
    v1242.rotate(0.2);
    f92(v1242, 9, p897 * 60, p897 * 10);
    f89(v1242, p899[3], p899[4], p897 * 4);
    v1242.rotate(-0.32);
    f92(v1242, 9, p897 * 38, p897 * 10);
    f89(v1242, p899[5], p899[6], p897 * 4);
    v1242.rotate(0.68);
    f92(v1242, 9, p897 * 20, p897 * 8);
    f89(v1242, p899[7], p899[8], p897 * 6);
    v1242.restore();
    return v1241;
  }
  function f211(p900, p901, p902) {
    var v1244 = document.createElement("canvas");
    var v1245 = v1244.getContext("2d");
    v1244.width = p900 * 170;
    v1244.height = p900 * 170;
    v1245.globalAlpha = p901 ? 0.5 : 1;
    v1245.translate(0, p900 * 3);
    v1245.save();
    v1245.translate(p900 * 85, p900 * 95);
    v1245.rotate(1.4);
    f92(v1245, 7, p900 * 60, p900 * 10);
    v1245.restore();
    f89(v1245, p902[0]);
    v1245.globalAlpha = 1;
    v1245.translate(p900 * 85, p900 * 82);
    for (var v1246 = 0; v1246 < 10; v1246++) {
      v1245.rotate(Math.PI / 5);
      v1245.save();
      v1245.translate(p900 * 65, 0);
      f92(v1245, 3, p900 * 21, p900 * 4);
      f89(v1245, p902[1], p902[2], p900 * 4);
      v1245.restore();
    }
    v1245.save();
    v1245.translate(p900 * 0, p900 * 0);
    v1245.rotate(1);
    f92(v1245, 8, p900 * 60, p900 * 10);
    f89(v1245, p902[3], p902[4], p900 * 4);
    v1245.rotate(0.56);
    f92(v1245, 8, p900 * 40, p900 * 10);
    f89(v1245, p902[5], p902[6], p900 * 4);
    v1245.rotate(0.28);
    f92(v1245, 8, p900 * 28, p900 * 8);
    f89(v1245, p902[7]);
    v1245.restore();
    return v1244;
  }
  function f212(p903, p904, p905) {
    var v1247 = document.createElement("canvas");
    var v1248 = v1247.getContext("2d");
    v1247.width = p903 * 345;
    v1247.height = p903 * 250;
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 105, p903 * 58);
    v1248.bezierCurveTo(p903 * 100.5, p903 * 43, p903 * 100.5, p903 * 43, p903 * 96, p903 * 28);
    v1248.bezierCurveTo(p903 * 119.5, p903 * 33.5, p903 * 119.5, p903 * 33.5, p903 * 143, p903 * 39);
    v1248.bezierCurveTo(p903 * 170, p903 * 37, p903 * 177, p903 * 37, p903 * 188, p903 * 40);
    v1248.bezierCurveTo(p903 * 213, p903 * 33.5, p903 * 213, p903 * 33.5, p903 * 238, p903 * 27);
    v1248.bezierCurveTo(p903 * 231, p903 * 52, p903 * 234, p903 * 42.5, p903 * 230, p903 * 58);
    v1248.closePath();
    f89(v1248, p905[1], p905[2], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 108, p903 * 51);
    v1248.bezierCurveTo(p903 * 91, p903 * 55, p903 * 85, p903 * 44, p903 * 86, p903 * 29);
    v1248.bezierCurveTo(p903 * 62, p903 * 50, p903 * 78, p903 * 69, p903 * 92, p903 * 75);
    v1248.closePath();
    f89(v1248, p905[3], p905[4], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 249, p903 * 27);
    v1248.bezierCurveTo(p903 * 273, p903 * 49, p903 * 262, p903 * 68, p903 * 246, p903 * 77);
    v1248.bezierCurveTo(p903 * 231, p903 * 59, p903 * 236, p903 * 66.5, p903 * 226, p903 * 56);
    v1248.bezierCurveTo(p903 * 243, p903 * 53, p903 * 252, p903 * 43, p903 * 249, p903 * 28);
    v1248.closePath();
    f89(v1248, p905[3], p905[4], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 87, p903 * 78);
    v1248.bezierCurveTo(p903 * 87, p903 * 59, p903 * 98, p903 * 46, p903 * 127, p903 * 48);
    v1248.bezierCurveTo(p903 * 176, p903 * 48.5, p903 * 176, p903 * 48.5, p903 * 225, p903 * 49);
    v1248.bezierCurveTo(p903 * 243, p903 * 49, p903 * 253, p903 * 59, p903 * 253, p903 * 76);
    v1248.bezierCurveTo(p903 * 211, p903 * 85.5, p903 * 211, p903 * 85.5, p903 * 169, p903 * 95);
    v1248.closePath();
    f89(v1248, p905[5], p905[6], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 56, p903 * 105);
    v1248.bezierCurveTo(p903 * 56, p903 * 92, p903 * 59, p903 * 86, p903 * 65, p903 * 73);
    v1248.bezierCurveTo(p903 * 62.5, p903 * 61.5, p903 * 62.5, p903 * 61.5, p903 * 60, p903 * 50);
    v1248.bezierCurveTo(p903 * 99.5, p903 * 64.5, p903 * 99.5, p903 * 64.5, p903 * 139, p903 * 79);
    v1248.bezierCurveTo(p903 * 164, p903 * 77, p903 * 177, p903 * 76, p903 * 203, p903 * 78);
    v1248.bezierCurveTo(p903 * 242, p903 * 63.5, p903 * 242, p903 * 63.5, p903 * 281, p903 * 49);
    v1248.bezierCurveTo(p903 * 279, p903 * 60.5, p903 * 279, p903 * 60.5, p903 * 277, p903 * 72);
    v1248.bezierCurveTo(p903 * 286, p903 * 88, p903 * 286, p903 * 96, p903 * 287, p903 * 104);
    v1248.bezierCurveTo(p903 * 228.5, p903 * 127, p903 * 228.5, p903 * 127, p903 * 170, p903 * 150);
    v1248.closePath();
    f89(v1248, p905[1], p905[2], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 48, p903 * 130);
    v1248.bezierCurveTo(p903 * 61, p903 * 155, p903 * 63, p903 * 165, p903 * 56, p903 * 171);
    v1248.bezierCurveTo(p903 * 48, p903 * 177, p903 * 40, p903 * 171, p903 * 38, p903 * 178);
    v1248.bezierCurveTo(p903 * 33, p903 * 180, p903 * 37, p903 * 188, p903 * 47, p903 * 208);
    v1248.bezierCurveTo(p903 * 52, p903 * 221, p903 * 55, p903 * 222, p903 * 75, p903 * 229);
    v1248.bezierCurveTo(p903 * 91, p903 * 213, p903 * 98, p903 * 212, p903 * 112, p903 * 219);
    v1248.bezierCurveTo(p903 * 167, p903 * 225, p903 * 187, p903 * 224, p903 * 222, p903 * 220);
    v1248.bezierCurveTo(p903 * 244, p903 * 214, p903 * 247, p903 * 213, p903 * 263, p903 * 229);
    v1248.bezierCurveTo(p903 * 295, p903 * 220, p903 * 291, p903 * 215, p903 * 301, p903 * 194);
    v1248.bezierCurveTo(p903 * 308, p903 * 178, p903 * 309, p903 * 176, p903 * 302, p903 * 173);
    v1248.bezierCurveTo(p903 * 290, p903 * 177, p903 * 289, p903 * 177, p903 * 283, p903 * 169);
    v1248.bezierCurveTo(p903 * 279, p903 * 163, p903 * 279, p903 * 161, p903 * 290, p903 * 130);
    v1248.bezierCurveTo(p903 * 270, p903 * 127, p903 * 270, p903 * 127, p903 * 250, p903 * 124);
    v1248.bezierCurveTo(p903 * 209, p903 * 137.5, p903 * 209, p903 * 137.5, p903 * 168, p903 * 151);
    v1248.bezierCurveTo(p903 * 121, p903 * 135, p903 * 121, p903 * 135, p903 * 74, p903 * 119);
    v1248.closePath();
    f89(v1248, p905[1], p905[2], p903 * 8);
    v1248.globalCompositeOperation = "destination-out";
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 133, p903 * 158);
    v1248.bezierCurveTo(p903 * 152, p903 * 193, p903 * 158, p903 * 205, p903 * 140, p903 * 203);
    v1248.bezierCurveTo(p903 * 99, p903 * 195, p903 * 96, p903 * 189, p903 * 86, p903 * 173);
    v1248.bezierCurveTo(p903 * 80, p903 * 159, p903 * 88, p903 * 145, p903 * 104, p903 * 141);
    v1248.closePath();
    f89(v1248, p905[7], p905[8], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 215, p903 * 146);
    v1248.bezierCurveTo(p903 * 204, p903 * 167, p903 * 204, p903 * 167, p903 * 193, p903 * 188);
    v1248.bezierCurveTo(p903 * 187, p903 * 201, p903 * 191, p903 * 209, p903 * 213, p903 * 201);
    v1248.bezierCurveTo(p903 * 247, p903 * 192, p903 * 253, p903 * 181, p903 * 257, p903 * 169);
    v1248.bezierCurveTo(p903 * 260, p903 * 157, p903 * 254, p903 * 149, p903 * 243, p903 * 141);
    v1248.closePath();
    f89(v1248, p905[7], p905[8], p903 * 8);
    v1248.globalCompositeOperation = "source-over";
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 133, p903 * 158);
    v1248.bezierCurveTo(p903 * 152, p903 * 193, p903 * 158, p903 * 205, p903 * 140, p903 * 203);
    v1248.bezierCurveTo(p903 * 99, p903 * 195, p903 * 96, p903 * 189, p903 * 86, p903 * 173);
    v1248.bezierCurveTo(p903 * 80, p903 * 159, p903 * 88, p903 * 145, p903 * 104, p903 * 141);
    v1248.closePath();
    f89(v1248, vVUndefined16, p905[8], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 215, p903 * 146);
    v1248.bezierCurveTo(p903 * 204, p903 * 167, p903 * 204, p903 * 167, p903 * 193, p903 * 188);
    v1248.bezierCurveTo(p903 * 187, p903 * 201, p903 * 191, p903 * 209, p903 * 213, p903 * 201);
    v1248.bezierCurveTo(p903 * 247, p903 * 192, p903 * 253, p903 * 181, p903 * 257, p903 * 169);
    v1248.bezierCurveTo(p903 * 260, p903 * 157, p903 * 254, p903 * 149, p903 * 243, p903 * 141);
    v1248.closePath();
    f89(v1248, undefined, p905[8], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 39, p903 * 66);
    v1248.bezierCurveTo(p903 * 57, p903 * 107, p903 * 63, p903 * 96, p903 * 120, p903 * 106);
    v1248.bezierCurveTo(p903 * 154, p903 * 112, p903 * 163, p903 * 116, p903 * 174, p903 * 135);
    v1248.bezierCurveTo(p903 * 180, p903 * 109, p903 * 191, p903 * 113, p903 * 237, p903 * 103);
    v1248.bezierCurveTo(p903 * 276, p903 * 100, p903 * 289, p903 * 94, p903 * 301, p903 * 67);
    v1248.bezierCurveTo(p903 * 317, p903 * 112, p903 * 301, p903 * 141, p903 * 274, p903 * 139);
    v1248.bezierCurveTo(p903 * 204, p903 * 166, p903 * 197, p903 * 169, p903 * 173, p903 * 183);
    v1248.bezierCurveTo(p903 * 170, p903 * 183, p903 * 170, p903 * 183, p903 * 167, p903 * 183);
    v1248.bezierCurveTo(p903 * 132, p903 * 160, p903 * 112, p903 * 156, p903 * 73, p903 * 141);
    v1248.bezierCurveTo(p903 * 43, p903 * 146, p903 * 27, p903 * 120, p903 * 39, p903 * 66);
    v1248.closePath();
    f89(v1248, p905[7], p905[8], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 115, p903 * 185);
    v1248.bezierCurveTo(p903 * 115, p903 * 200, p903 * 118, p903 * 206, p903 * 124, p903 * 212);
    v1248.bezierCurveTo(p903 * 133, p903 * 223, p903 * 132, p903 * 231, p903 * 121, p903 * 230);
    v1248.bezierCurveTo(p903 * 108, p903 * 226, p903 * 108, p903 * 215, p903 * 107, p903 * 209);
    v1248.bezierCurveTo(p903 * 106, p903 * 201, p903 * 110, p903 * 196, p903 * 114, p903 * 185);
    v1248.closePath();
    f89(v1248, p905[3], p905[4], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 226, p903 * 186);
    v1248.bezierCurveTo(p903 * 234, p903 * 201, p903 * 238, p903 * 209, p903 * 228, p903 * 225);
    v1248.bezierCurveTo(p903 * 223, p903 * 233, p903 * 213, p903 * 233, p903 * 211, p903 * 226);
    v1248.bezierCurveTo(p903 * 206, p903 * 219, p903 * 217, p903 * 216, p903 * 221, p903 * 207);
    v1248.bezierCurveTo(p903 * 225, p903 * 196, p903 * 225, p903 * 191, p903 * 226, p903 * 186);
    v1248.closePath();
    f89(v1248, p905[3], p905[4], p903 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p903 * 172, p903 * 110);
    v1248.bezierCurveTo(p903 * 189, p903 * 153, p903 * 192, p903 * 160, p903 * 188, p903 * 175);
    v1248.bezierCurveTo(p903 * 183, p903 * 190, p903 * 176, p903 * 197, p903 * 165, p903 * 191);
    v1248.bezierCurveTo(p903 * 153, p903 * 181, p903 * 152, p903 * 166, p903 * 157, p903 * 151);
    v1248.bezierCurveTo(p903 * 164.5, p903 * 131, p903 * 164.5, p903 * 131, p903 * 172, p903 * 111);
    v1248.closePath();
    f89(v1248, p905[3], p905[4], p903 * 8);
    return v1247;
  }
  function f213(p906, p907) {
    var v1249 = document.createElement("canvas");
    var v1250 = v1249.getContext("2d");
    v1249.width = p906 * 100;
    v1249.height = p906 * 100;
    v1250.globalAlpha = 0.5;
    v1250.fillStyle = p907[0];
    v1250.fillRect(0, 0, v1249.width, v1249.height);
    return v1249;
  }
  function f214(p908, p909, p910) {
    var v1251 = document.createElement("canvas");
    var v1252 = v1251.getContext("2d");
    var v1253 = p908 * 170;
    var v1254 = p908 * 172;
    var v1255 = v1253 / 2;
    var v1256 = v1254 / 2;
    v1251.width = v1253;
    v1251.height = v1254;
    v1252.translate(v1255, v1256 + p908 * 7);
    v1252.globalAlpha = p909 ? 0.5 : 0;
    f94(v1252, 0, 0, p908 * 60);
    f89(v1252, p910[0]);
    v1252.globalAlpha = 1;
    v1252.translate(0, p908 * -7);
    v1252.save();
    for (var v1257 = 0; v1257 < 10; v1257++) {
      v1252.rotate(Math.PI / 5);
      v1252.save();
      v1252.translate(p908 * 65, 0);
      f92(v1252, 3, p908 * 20, p908 * 4);
      f89(v1252, p910[1], p910[2], p908 * 4);
      v1252.restore();
    }
    v1252.restore();
    f94(v1252, 0, 0, p908 * 60);
    f89(v1252, p910[3], p910[4], p908 * 4);
    f94(v1252, 0, 0, p908 * 40);
    f89(v1252, p910[5]);
    f94(v1252, 0, 0, p908 * 25);
    f89(v1252, p910[6], p910[7], p908 * 8);
    return v1251;
  }
  function f215(p911, p912, p913, p914) {
    var v1258 = document.createElement("canvas");
    var v1259 = v1258.getContext("2d");
    v1258.width = p911 * 450;
    v1258.height = p911 * 260;
    var vPm = f219(p911 * 1, true, p913);
    v1259.drawImage(vPm, p911 * 0, p911 * 0);
    if (p914 == 1) {
      v1259.translate(p911 * 100, p911 * 0);
      f94(v1259, p911 * 113, p911 * 120, p911 * 66);
      f89(v1259, vUndefined, p913[4], p911 * 13);
      vPm = f146(p911 * 0.65, vVV12, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]);
      v1259.rotate(0.7);
      v1259.drawImage(vPm, p911 * 133, p911 * -64);
      v1259.rotate(-0.7);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 70, p911 * 70);
      v1259.bezierCurveTo(p911 * 113, p911 * 120.5, p911 * 113, p911 * 120.5, p911 * 156, p911 * 171);
      v1259.closePath();
      f89(v1259, vUndefined, p913[4], p911 * 13);
    } else if (p914 == 2) {
      v1259.translate(p911 * 100, p911 * 0);
      f94(v1259, p911 * 113, p911 * 120, p911 * 66);
      f89(v1259, undefined, p913[4], p911 * 13);
      v1259.translate(p911 * 30, p911 * 40);
      v1259.save();
      v1259.translate(p911 * 83.5, p911 * 66.5);
      f90(v1259, p911 * -40.5, p911 * -29.5, p911 * 81, p911 * 59, p911 * 15);
      v1259.restore();
      f89(v1259, "#dff2f7", "#187484", p911 * 7);
      f94(v1259, p911 * 22, p911 * 82, p911 * 12);
      f89(v1259, "#dff2f7", "#187484", p911 * 7);
      f94(v1259, p911 * 145, p911 * 82, p911 * 12);
      f89(v1259, "#dff2f7", "#187484", p911 * 7);
      vPm = f163(p911 * 0.5, vVVVVV12232, ["#80500b", "#7c4908"]);
      v1259.drawImage(vPm, p911 * 10, p911 * 85);
      vPm = f163(p911 * 0.5, true, ["#80500b", "#7c4908"]);
      v1259.drawImage(vPm, p911 * 50, p911 * 85);
      vPm = f163(p911 * 0.5, vVVV12222, ["#80500b", "#7c4908"]);
      v1259.drawImage(vPm, p911 * 90, p911 * 85);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 90, p911 * 105);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 90, p911 * 105);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 30, p911 * 125);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 50, p911 * 115);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 30, p911 * 100);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 80, p911 * 120);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 110, p911 * 125);
      vPm = f201(p911 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1259.drawImage(vPm, p911 * 120, p911 * 105);
    } else if (p914 == 3) {
      v1259.translate(p911 * 100, p911 * 0);
      f94(v1259, p911 * 113, p911 * 120, p911 * 66);
      f89(v1259, vVVVUndefined172, p913[4], p911 * 13);
      v1259.translate(p911 * 40, p911 * 50);
      v1259.save();
      v1259.translate(p911 * 71, p911 * 69);
      f90(v1259, p911 * -30, p911 * -42, p911 * 60, p911 * 84, p911 * 10);
      v1259.restore();
      f89(v1259, undefined, p913[5], p911 * 4);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 42, p911 * 28);
      v1259.bezierCurveTo(p911 * 60, p911 * 31, p911 * 60, p911 * 31, p911 * 78, p911 * 34);
      v1259.bezierCurveTo(p911 * 82, p911 * 34, p911 * 84, p911 * 37, p911 * 83, p911 * 45);
      v1259.bezierCurveTo(p911 * 83, p911 * 80, p911 * 83, p911 * 80, p911 * 83, p911 * 115);
      v1259.bezierCurveTo(p911 * 83, p911 * 120, p911 * 80, p911 * 122, p911 * 73, p911 * 120);
      v1259.bezierCurveTo(p911 * 42, p911 * 111, p911 * 43, p911 * 109, p911 * 41, p911 * 102);
      v1259.bezierCurveTo(p911 * 41, p911 * 71, p911 * 41, p911 * 71, p911 * 41, p911 * 40);
      v1259.closePath();
      f89(v1259, p913[5], p913[5], p911 * 4);
      v1259.translate(p911 * -40, p911 * -50);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 70, p911 * 70);
      v1259.bezierCurveTo(p911 * 113, p911 * 120.5, p911 * 113, p911 * 120.5, p911 * 156, p911 * 171);
      v1259.closePath();
      f89(v1259, undefined, p913[4], p911 * 13);
    } else if (p914 == 4) {
      v1259.scale(1, 1);
      v1259.translate(p911 * 70, p911 * 50);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 23, p911 * 6);
      v1259.bezierCurveTo(p911 * 25.5, p911 * 56, p911 * 25.5, p911 * 56, p911 * 28, p911 * 106);
      f89(v1259, vVUndefined14, p913[5], p911 * 14);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 59, p911 * 10);
      v1259.bezierCurveTo(p911 * 61, p911 * 51.5, p911 * 61, p911 * 51.5, p911 * 63, p911 * 93);
      f89(v1259, vVVVUndefined1422, p913[5], p911 * 14);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 7, p911 * 55);
      v1259.bezierCurveTo(p911 * 33.5, p911 * 55, p911 * 33.5, p911 * 55, p911 * 60, p911 * 55);
      f89(v1259, undefined, p913[5], p911 * 14);
      v1259.translate(p911 * 10, p911 * 0);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 123, p911 * 16);
      v1259.bezierCurveTo(p911 * 103, p911 * 16.5, p911 * 103, p911 * 16.5, p911 * 83, p911 * 17);
      v1259.bezierCurveTo(p911 * 83.5, p911 * 61, p911 * 83.5, p911 * 61, p911 * 84, p911 * 105);
      v1259.bezierCurveTo(p911 * 106, p911 * 105, p911 * 106, p911 * 105, p911 * 128, p911 * 105);
      f89(v1259, undefined, p913[5], p911 * 14);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 72, p911 * 63);
      v1259.bezierCurveTo(p911 * 88.5, p911 * 62.5, p911 * 88.5, p911 * 62.5, p911 * 105, p911 * 62);
      f89(v1259, vVVUndefined142, p913[5], p911 * 14);
      v1259.translate(p911 * 10, p911 * 10);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 141, p911 * 8);
      v1259.bezierCurveTo(p911 * 143, p911 * 50, p911 * 143, p911 * 50, p911 * 145, p911 * 92);
      v1259.bezierCurveTo(p911 * 169, p911 * 88.5, p911 * 169, p911 * 88.5, p911 * 193, p911 * 85);
      f89(v1259, vVVVVVUndefined173, p913[5], p911 * 14);
      v1259.translate(p911 * 10, p911 * -10);
      v1259.beginPath();
      v1259.lineCap = "round";
      v1259.lineJoin = "round";
      v1259.moveTo(p911 * 205, p911 * 124);
      v1259.bezierCurveTo(p911 * 205, p911 * 69, p911 * 205, p911 * 69, p911 * 205, p911 * 14);
      v1259.bezierCurveTo(p911 * 239, p911 * 15, p911 * 250, p911 * 37, p911 * 249, p911 * 49);
      v1259.bezierCurveTo(p911 * 251, p911 * 65, p911 * 242, p911 * 76, p911 * 206, p911 * 75);
      f89(v1259, undefined, p913[5], p911 * 14);
    }
    return v1258;
  }
  function f216(p915, p916) {
    var v1260 = document.createElement("canvas");
    var v1261 = v1260.getContext("2d");
    v1260.width = p915 * 120;
    v1260.height = p915 * 300;
    v1261.translate(p915 * -80, -20);
    v1261.beginPath();
    v1261.lineCap = "round";
    v1261.lineJoin = "round";
    v1261.moveTo(p915 * 200.5, p915 * 14.953125);
    v1261.bezierCurveTo(p915 * 203, p915 * 171.953125, p915 * 203, p915 * 171.953125, p915 * 205.5, p915 * 328.953125);
    v1261.bezierCurveTo(p915 * 188.5, p915 * 257.953125, p915 * 164.5, p915 * 216.953125, p915 * 166.5, p915 * 176.953125);
    v1261.bezierCurveTo(p915 * 168.5, p915 * 133.953125, p915 * 198.5, p915 * 98.953125, p915 * 200.5, p915 * 14.953125);
    v1261.closePath();
    f89(v1261, p916[0]);
    return v1260;
  }
  function f217(p917, p918) {
    var v1262 = document.createElement("canvas");
    var v1263 = v1262.getContext("2d");
    v1262.width = p917 * 149;
    v1262.height = p917 * 153;
    v1263.globalAlpha = 0.5;
    f94(v1263, p917 * 74.5, p917 * 85, p917 * 66);
    f89(v1263, p918[0]);
    v1263.globalAlpha = 1;
    f94(v1263, p917 * 75.5, p917 * 72.5, p917 * 67);
    f89(v1263, p918[1], p918[2], p917 * 4);
    f94(v1263, p917 * 75.5, p917 * 73.5, p917 * 54);
    f89(v1263, p918[3]);
    v1263.globalAlpha = 0.5;
    f94(v1263, p917 * 74.5, p917 * 80.5, p917 * 39);
    f89(v1263, p918[4]);
    v1263.globalAlpha = 1;
    f94(v1263, p917 * 74.5, p917 * 74.5, p917 * 37);
    f89(v1263, p918[5]);
    return v1262;
  }
  function f218(p919, p920, p921) {
    var v1264 = document.createElement("canvas");
    var v1265 = v1264.getContext("2d");
    v1264.width = p919 * 69;
    v1264.height = p919 * 120;
    v1265.globalAlpha = p920 ? 0.5 : 1;
    v1265.save();
    v1265.translate(p919 * 30, p919 * 84);
    f90(v1265, p919 * -6, p919 * -66.5, p919 * 8, p919 * 100, p919 * 10);
    v1265.restore();
    f89(v1265, p921[0]);
    v1265.save();
    v1265.translate(p919 * 30, p919 * 45);
    f90(v1265, p919 * -9.5, p919 * -6.5, p919 * 16, p919 * 13, p919 * 10);
    v1265.restore();
    f89(v1265, p921[0]);
    v1265.save();
    v1265.translate(p919 * 30, p919 * 17);
    f90(v1265, p919 * -7.5, p919 * -5.5, p919 * 12, p919 * 11, p919 * 10);
    v1265.restore();
    f89(v1265, p921[0]);
    v1265.save();
    v1265.translate(p919 * 30, p919 * 31);
    f90(v1265, p919 * -26, p919 * -14.5, p919 * 52, p919 * 29, p919 * 5);
    v1265.restore();
    f89(v1265, p921[0]);
    v1265.globalAlpha = 1;
    v1265.save();
    v1265.translate(p919 * 36, p919 * 79.140625);
    f90(v1265, p919 * -6, p919 * -66.5, p919 * 8, p919 * 100, p919 * 10);
    v1265.restore();
    f89(v1265, p921[1], p921[2], p919 * 3);
    v1265.save();
    v1265.translate(p919 * 35, p919 * 40.140625);
    f90(v1265, p919 * -9.5, p919 * -6.5, p919 * 16, p919 * 13, p919 * 10);
    v1265.restore();
    f89(v1265, p921[3], p921[4], p919 * 3);
    v1265.save();
    v1265.translate(p919 * 35, p919 * 12.140625);
    f90(v1265, p919 * -7.5, p919 * -5.5, p919 * 12, p919 * 11, p919 * 10);
    v1265.restore();
    f89(v1265, p921[3], p921[4], p919 * 3);
    v1265.save();
    v1265.translate(p919 * 34.5, p919 * 26.140625);
    f90(v1265, p919 * -26, p919 * -14.5, p919 * 52, p919 * 29, p919 * 5);
    v1265.restore();
    f89(v1265, p921[3], p921[4], p919 * 3);
    return v1264;
  }
  function f219(p922, p923, p924) {
    var v1266 = document.createElement("canvas");
    var v1267 = v1266.getContext("2d");
    v1266.width = p922 * 450;
    v1266.height = p922 * 260;
    v1267.translate(p922 * 10, p922 * 10);
    v1267.globalAlpha = p923 ? 0.5 : 1;
    v1267.translate(p922 * 20, p922 * 20);
    f90(v1267, 0, 0, p922 * 400, p922 * 220, p922 * 30);
    f89(v1267, p924[0]);
    v1267.globalAlpha = 1;
    v1267.translate(p922 * -20, p922 * -20);
    v1267.beginPath();
    v1267.lineCap = "round";
    v1267.lineJoin = "round";
    v1267.moveTo(p922 * 9, p922 * 5);
    v1267.bezierCurveTo(p922 * 381, p922 * 2, p922 * 197, p922 * 4.5, p922 * 385, p922 * 4);
    v1267.bezierCurveTo(p922 * 397, p922 * 4, p922 * 401, p922 * 4, p922 * 399, p922 * 23);
    v1267.bezierCurveTo(p922 * 367, p922 * 27, p922 * 367, p922 * 27, p922 * 335, p922 * 31);
    v1267.bezierCurveTo(p922 * 366.5, p922 * 33.5, p922 * 366.5, p922 * 33.5, p922 * 398, p922 * 36);
    v1267.bezierCurveTo(p922 * 398, p922 * 41.5, p922 * 398, p922 * 41.5, p922 * 398, p922 * 47);
    v1267.bezierCurveTo(p922 * 398, p922 * 56, p922 * 399, p922 * 56, p922 * 386, p922 * 56);
    v1267.bezierCurveTo(p922 * 200.5, p922 * 56.5, p922 * 200.5, p922 * 56.5, p922 * 15, p922 * 57);
    v1267.bezierCurveTo(p922 * 2, p922 * 55, p922 * 4, p922 * 52, p922 * 4, p922 * 43);
    v1267.bezierCurveTo(p922 * 4, p922 * 30.5, p922 * 4, p922 * 30.5, p922 * 4, p922 * 18);
    v1267.bezierCurveTo(p922 * 16, p922 * 18.5, p922 * 16, p922 * 18.5, p922 * 28, p922 * 19);
    v1267.bezierCurveTo(p922 * 18.5, p922 * 12, p922 * 18.5, p922 * 12, p922 * 9, p922 * 5);
    v1267.closePath();
    f89(v1267, p924[2], p924[1], p922 * 12);
    v1267.beginPath();
    v1267.lineCap = "round";
    v1267.lineJoin = "round";
    v1267.moveTo(p922 * 5, p922 * 70);
    v1267.bezierCurveTo(p922 * 5, p922 * 58, p922 * 5, p922 * 55, p922 * 17, p922 * 57);
    v1267.bezierCurveTo(p922 * 203, p922 * 57, p922 * 203, p922 * 57, p922 * 389, p922 * 57);
    v1267.bezierCurveTo(p922 * 400, p922 * 57, p922 * 400, p922 * 59, p922 * 400, p922 * 69);
    v1267.bezierCurveTo(p922 * 400.5, p922 * 83.5, p922 * 400.5, p922 * 83.5, p922 * 401, p922 * 98);
    v1267.bezierCurveTo(p922 * 402, p922 * 108, p922 * 401, p922 * 108, p922 * 388, p922 * 108);
    v1267.bezierCurveTo(p922 * 201.5, p922 * 108, p922 * 201.5, p922 * 108, p922 * 15, p922 * 108);
    v1267.bezierCurveTo(p922 * 1, p922 * 106, p922 * 5, p922 * 106, p922 * 5, p922 * 87);
    v1267.bezierCurveTo(p922 * 33, p922 * 84.5, p922 * 33, p922 * 84.5, p922 * 61, p922 * 82);
    v1267.bezierCurveTo(p922 * 33.5, p922 * 76.5, p922 * 33.5, p922 * 76.5, p922 * 6, p922 * 71);
    v1267.closePath();
    f89(v1267, p924[3], p924[1], p922 * 12);
    v1267.beginPath();
    v1267.lineCap = "round";
    v1267.lineJoin = "round";
    v1267.moveTo(p922 * 19, p922 * 158);
    v1267.bezierCurveTo(p922 * 2, p922 * 159, p922 * 4, p922 * 156, p922 * 5, p922 * 118);
    v1267.bezierCurveTo(p922 * 4, p922 * 110, p922 * 6, p922 * 107, p922 * 26, p922 * 109);
    v1267.bezierCurveTo(p922 * 206.5, p922 * 109, p922 * 206.5, p922 * 109, p922 * 387, p922 * 109);
    v1267.bezierCurveTo(p922 * 400, p922 * 108, p922 * 400, p922 * 108, p922 * 398, p922 * 127);
    v1267.bezierCurveTo(p922 * 384.5, p922 * 130, p922 * 384.5, p922 * 130, p922 * 371, p922 * 133);
    v1267.bezierCurveTo(p922 * 385.5, p922 * 138, p922 * 385.5, p922 * 138, p922 * 400, p922 * 143);
    v1267.bezierCurveTo(p922 * 402, p922 * 156, p922 * 402, p922 * 162, p922 * 385, p922 * 160);
    v1267.closePath();
    f89(v1267, p924[2], p924[1], p922 * 12);
    v1267.beginPath();
    v1267.lineCap = "round";
    v1267.lineJoin = "round";
    v1267.moveTo(p922 * 4, p922 * 183);
    v1267.bezierCurveTo(p922 * 1, p922 * 163, p922 * 4, p922 * 158, p922 * 28, p922 * 161);
    v1267.bezierCurveTo(p922 * 207.5, p922 * 161, p922 * 207.5, p922 * 161, p922 * 387, p922 * 161);
    v1267.bezierCurveTo(p922 * 401, p922 * 159, p922 * 400, p922 * 164, p922 * 400, p922 * 177);
    v1267.bezierCurveTo(p922 * 364.5, p922 * 184, p922 * 364.5, p922 * 184, p922 * 329, p922 * 191);
    v1267.bezierCurveTo(p922 * 364.5, p922 * 192.5, p922 * 364.5, p922 * 192.5, p922 * 400, p922 * 194);
    v1267.bezierCurveTo(p922 * 403, p922 * 209, p922 * 401, p922 * 214, p922 * 385, p922 * 213);
    v1267.bezierCurveTo(p922 * 201.5, p922 * 213, p922 * 201.5, p922 * 213, p922 * 18, p922 * 213);
    v1267.bezierCurveTo(p922 * 3, p922 * 213, p922 * 2, p922 * 213, p922 * 4, p922 * 198);
    v1267.bezierCurveTo(p922 * 12.5, p922 * 193, p922 * 12.5, p922 * 193, p922 * 21, p922 * 188);
    v1267.closePath();
    f89(v1267, p924[3], p924[1], p922 * 12);
    f94(v1267, p922 * 41, p922 * 30, p922 * 14.7648230602334);
    f89(v1267, p924[3], p924[1], p922 * 12);
    f94(v1267, p922 * 369, p922 * 30, p922 * 15.556349186104045);
    f89(v1267, p924[3], p924[1], p922 * 12);
    f94(v1267, p922 * 364, p922 * 190, p922 * 15.620499351813308);
    f89(v1267, p924[3], p924[1], p922 * 12);
    f94(v1267, p922 * 41, p922 * 186, p922 * 15.556349186104045);
    f89(v1267, p924[3], p924[1], p922 * 12);
    return v1266;
  }
  function f220(p925, p926, p927) {
    var v1268 = document.createElement("canvas");
    var v1269 = v1268.getContext("2d");
    v1268.width = p925 * 170;
    v1268.height = p925 * 170;
    v1269.globalAlpha = p926 ? 0.5 : 1;
    v1269.translate(0, p925 * 5);
    v1269.save();
    v1269.translate(p925 * 85, p925 * 88);
    v1269.rotate(1.4);
    f92(v1269, 7, p925 * 60, p925 * 10);
    v1269.restore();
    f89(v1269, p927[0]);
    v1269.globalAlpha = 1;
    v1269.translate(p925 * 85, p925 * 80);
    for (var v1270 = 0; v1270 < 10; v1270++) {
      v1269.rotate(Math.PI / 5);
      v1269.save();
      v1269.translate(p925 * 65, 0);
      f92(v1269, 3, p925 * 21, p925 * 4);
      f89(v1269, p927[1], p927[2], p925 * 4);
      v1269.restore();
    }
    v1269.save();
    v1269.translate(p925 * 0, p925 * 0);
    v1269.rotate(1.4);
    f92(v1269, 7, p925 * 60, p925 * 10);
    f89(v1269, p927[3], p927[4], p925 * 4);
    v1269.rotate(0.64);
    f92(v1269, 7, p925 * 40, p925 * 10);
    f89(v1269, p927[5], p927[6], p925 * 4);
    v1269.rotate(0.12);
    f92(v1269, 7, p925 * 23, p925 * 5);
    v1269.restore();
    f89(v1269, p927[7]);
    return v1268;
  }
  function f221(p928, p929, p930) {
    var v1271 = document.createElement("canvas");
    var v1272 = v1271.getContext("2d");
    v1271.width = p928 * 450;
    v1271.height = p928 * 260;
    v1272.translate(p928 * 10, p928 * 10);
    if (p930 == 1) {
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 9, p928 * 5);
      v1272.bezierCurveTo(p928 * 381, p928 * 2, p928 * 197, p928 * 4.5, p928 * 385, p928 * 4);
      v1272.bezierCurveTo(p928 * 397, p928 * 4, p928 * 401, p928 * 4, p928 * 399, p928 * 23);
      v1272.bezierCurveTo(p928 * 367, p928 * 27, p928 * 367, p928 * 27, p928 * 335, p928 * 31);
      v1272.bezierCurveTo(p928 * 366.5, p928 * 33.5, p928 * 366.5, p928 * 33.5, p928 * 398, p928 * 36);
      v1272.bezierCurveTo(p928 * 398, p928 * 41.5, p928 * 398, p928 * 41.5, p928 * 398, p928 * 47);
      v1272.bezierCurveTo(p928 * 398, p928 * 56, p928 * 399, p928 * 56, p928 * 386, p928 * 56);
      v1272.bezierCurveTo(p928 * 200.5, p928 * 56.5, p928 * 200.5, p928 * 56.5, p928 * 15, p928 * 57);
      v1272.bezierCurveTo(p928 * 2, p928 * 55, p928 * 4, p928 * 52, p928 * 4, p928 * 43);
      v1272.bezierCurveTo(p928 * 4, p928 * 30.5, p928 * 4, p928 * 30.5, p928 * 4, p928 * 18);
      v1272.bezierCurveTo(p928 * 16, p928 * 18.5, p928 * 16, p928 * 18.5, p928 * 28, p928 * 19);
      v1272.bezierCurveTo(p928 * 18.5, p928 * 12, p928 * 18.5, p928 * 12, p928 * 9, p928 * 5);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 5, p928 * 70);
      v1272.bezierCurveTo(p928 * 5, p928 * 58, p928 * 5, p928 * 55, p928 * 17, p928 * 57);
      v1272.bezierCurveTo(p928 * 203, p928 * 57, p928 * 203, p928 * 57, p928 * 389, p928 * 57);
      v1272.bezierCurveTo(p928 * 400, p928 * 57, p928 * 400, p928 * 59, p928 * 400, p928 * 69);
      v1272.bezierCurveTo(p928 * 400.5, p928 * 83.5, p928 * 400.5, p928 * 83.5, p928 * 401, p928 * 98);
      v1272.bezierCurveTo(p928 * 402, p928 * 108, p928 * 401, p928 * 108, p928 * 388, p928 * 108);
      v1272.bezierCurveTo(p928 * 201.5, p928 * 108, p928 * 201.5, p928 * 108, p928 * 15, p928 * 108);
      v1272.bezierCurveTo(p928 * 1, p928 * 106, p928 * 5, p928 * 106, p928 * 5, p928 * 87);
      v1272.bezierCurveTo(p928 * 33, p928 * 84.5, p928 * 33, p928 * 84.5, p928 * 61, p928 * 82);
      v1272.bezierCurveTo(p928 * 33.5, p928 * 76.5, p928 * 33.5, p928 * 76.5, p928 * 6, p928 * 71);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 19, p928 * 158);
      v1272.bezierCurveTo(p928 * 2, p928 * 159, p928 * 4, p928 * 156, p928 * 5, p928 * 118);
      v1272.bezierCurveTo(p928 * 4, p928 * 110, p928 * 6, p928 * 107, p928 * 26, p928 * 109);
      v1272.bezierCurveTo(p928 * 206.5, p928 * 109, p928 * 206.5, p928 * 109, p928 * 387, p928 * 109);
      v1272.bezierCurveTo(p928 * 400, p928 * 108, p928 * 400, p928 * 108, p928 * 398, p928 * 127);
      v1272.bezierCurveTo(p928 * 384.5, p928 * 130, p928 * 384.5, p928 * 130, p928 * 371, p928 * 133);
      v1272.bezierCurveTo(p928 * 385.5, p928 * 138, p928 * 385.5, p928 * 138, p928 * 400, p928 * 143);
      v1272.bezierCurveTo(p928 * 402, p928 * 156, p928 * 402, p928 * 162, p928 * 385, p928 * 160);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 4, p928 * 183);
      v1272.bezierCurveTo(p928 * 1, p928 * 163, p928 * 4, p928 * 158, p928 * 28, p928 * 161);
      v1272.bezierCurveTo(p928 * 207.5, p928 * 161, p928 * 207.5, p928 * 161, p928 * 387, p928 * 161);
      v1272.bezierCurveTo(p928 * 401, p928 * 159, p928 * 400, p928 * 164, p928 * 400, p928 * 177);
      v1272.bezierCurveTo(p928 * 364.5, p928 * 184, p928 * 364.5, p928 * 184, p928 * 329, p928 * 191);
      v1272.bezierCurveTo(p928 * 364.5, p928 * 192.5, p928 * 364.5, p928 * 192.5, p928 * 400, p928 * 194);
      v1272.bezierCurveTo(p928 * 403, p928 * 209, p928 * 401, p928 * 214, p928 * 385, p928 * 213);
      v1272.bezierCurveTo(p928 * 201.5, p928 * 213, p928 * 201.5, p928 * 213, p928 * 18, p928 * 213);
      v1272.bezierCurveTo(p928 * 3, p928 * 213, p928 * 2, p928 * 213, p928 * 4, p928 * 198);
      v1272.bezierCurveTo(p928 * 12.5, p928 * 193, p928 * 12.5, p928 * 193, p928 * 21, p928 * 188);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 41, p928 * 30, p928 * 14.7648230602334);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 369, p928 * 30, p928 * 15.556349186104045);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 364, p928 * 190, p928 * 15.620499351813308);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 41, p928 * 186, p928 * 15.556349186104045);
      f89(v1272, p929[3], p929[3], p928 * 32);
    } else if (p930 == 2) {
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 9, p928 * 5);
      v1272.bezierCurveTo(p928 * 381, p928 * 2, p928 * 197, p928 * 4.5, p928 * 385, p928 * 4);
      v1272.bezierCurveTo(p928 * 397, p928 * 4, p928 * 401, p928 * 4, p928 * 399, p928 * 23);
      v1272.bezierCurveTo(p928 * 367, p928 * 27, p928 * 367, p928 * 27, p928 * 335, p928 * 31);
      v1272.bezierCurveTo(p928 * 366.5, p928 * 33.5, p928 * 366.5, p928 * 33.5, p928 * 398, p928 * 36);
      v1272.bezierCurveTo(p928 * 398, p928 * 41.5, p928 * 398, p928 * 41.5, p928 * 398, p928 * 47);
      v1272.bezierCurveTo(p928 * 398, p928 * 56, p928 * 399, p928 * 56, p928 * 386, p928 * 56);
      v1272.bezierCurveTo(p928 * 200.5, p928 * 56.5, p928 * 200.5, p928 * 56.5, p928 * 15, p928 * 57);
      v1272.bezierCurveTo(p928 * 2, p928 * 55, p928 * 4, p928 * 52, p928 * 4, p928 * 43);
      v1272.bezierCurveTo(p928 * 4, p928 * 30.5, p928 * 4, p928 * 30.5, p928 * 4, p928 * 18);
      v1272.bezierCurveTo(p928 * 16, p928 * 18.5, p928 * 16, p928 * 18.5, p928 * 28, p928 * 19);
      v1272.bezierCurveTo(p928 * 18.5, p928 * 12, p928 * 18.5, p928 * 12, p928 * 9, p928 * 5);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 5, p928 * 70);
      v1272.bezierCurveTo(p928 * 5, p928 * 58, p928 * 5, p928 * 55, p928 * 17, p928 * 57);
      v1272.bezierCurveTo(p928 * 203, p928 * 57, p928 * 203, p928 * 57, p928 * 389, p928 * 57);
      v1272.bezierCurveTo(p928 * 400, p928 * 57, p928 * 400, p928 * 59, p928 * 400, p928 * 69);
      v1272.bezierCurveTo(p928 * 400.5, p928 * 83.5, p928 * 400.5, p928 * 83.5, p928 * 401, p928 * 98);
      v1272.bezierCurveTo(p928 * 402, p928 * 108, p928 * 401, p928 * 108, p928 * 388, p928 * 108);
      v1272.bezierCurveTo(p928 * 201.5, p928 * 108, p928 * 201.5, p928 * 108, p928 * 15, p928 * 108);
      v1272.bezierCurveTo(p928 * 1, p928 * 106, p928 * 5, p928 * 106, p928 * 5, p928 * 87);
      v1272.bezierCurveTo(p928 * 33, p928 * 84.5, p928 * 33, p928 * 84.5, p928 * 61, p928 * 82);
      v1272.bezierCurveTo(p928 * 33.5, p928 * 76.5, p928 * 33.5, p928 * 76.5, p928 * 6, p928 * 71);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 19, p928 * 158);
      v1272.bezierCurveTo(p928 * 2, p928 * 159, p928 * 4, p928 * 156, p928 * 5, p928 * 118);
      v1272.bezierCurveTo(p928 * 4, p928 * 110, p928 * 6, p928 * 107, p928 * 26, p928 * 109);
      v1272.bezierCurveTo(p928 * 206.5, p928 * 109, p928 * 206.5, p928 * 109, p928 * 387, p928 * 109);
      v1272.bezierCurveTo(p928 * 400, p928 * 108, p928 * 400, p928 * 108, p928 * 398, p928 * 127);
      v1272.bezierCurveTo(p928 * 384.5, p928 * 130, p928 * 384.5, p928 * 130, p928 * 371, p928 * 133);
      v1272.bezierCurveTo(p928 * 385.5, p928 * 138, p928 * 385.5, p928 * 138, p928 * 400, p928 * 143);
      v1272.bezierCurveTo(p928 * 402, p928 * 156, p928 * 402, p928 * 162, p928 * 385, p928 * 160);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      v1272.beginPath();
      v1272.lineCap = "round";
      v1272.lineJoin = "round";
      v1272.moveTo(p928 * 4, p928 * 183);
      v1272.bezierCurveTo(p928 * 1, p928 * 163, p928 * 4, p928 * 158, p928 * 28, p928 * 161);
      v1272.bezierCurveTo(p928 * 207.5, p928 * 161, p928 * 207.5, p928 * 161, p928 * 387, p928 * 161);
      v1272.bezierCurveTo(p928 * 401, p928 * 159, p928 * 400, p928 * 164, p928 * 400, p928 * 177);
      v1272.bezierCurveTo(p928 * 364.5, p928 * 184, p928 * 364.5, p928 * 184, p928 * 329, p928 * 191);
      v1272.bezierCurveTo(p928 * 364.5, p928 * 192.5, p928 * 364.5, p928 * 192.5, p928 * 400, p928 * 194);
      v1272.bezierCurveTo(p928 * 403, p928 * 209, p928 * 401, p928 * 214, p928 * 385, p928 * 213);
      v1272.bezierCurveTo(p928 * 201.5, p928 * 213, p928 * 201.5, p928 * 213, p928 * 18, p928 * 213);
      v1272.bezierCurveTo(p928 * 3, p928 * 213, p928 * 2, p928 * 213, p928 * 4, p928 * 198);
      v1272.bezierCurveTo(p928 * 12.5, p928 * 193, p928 * 12.5, p928 * 193, p928 * 21, p928 * 188);
      v1272.closePath();
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 41, p928 * 30, p928 * 14.7648230602334);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 369, p928 * 30, p928 * 15.556349186104045);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 364, p928 * 190, p928 * 15.620499351813308);
      f89(v1272, p929[3], p929[3], p928 * 32);
      f94(v1272, p928 * 41, p928 * 186, p928 * 15.556349186104045);
      f89(v1272, p929[3], p929[3], p928 * 32);
    }
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p928 * 9, p928 * 5);
    v1272.bezierCurveTo(p928 * 381, p928 * 2, p928 * 197, p928 * 4.5, p928 * 385, p928 * 4);
    v1272.bezierCurveTo(p928 * 397, p928 * 4, p928 * 401, p928 * 4, p928 * 399, p928 * 23);
    v1272.bezierCurveTo(p928 * 367, p928 * 27, p928 * 367, p928 * 27, p928 * 335, p928 * 31);
    v1272.bezierCurveTo(p928 * 366.5, p928 * 33.5, p928 * 366.5, p928 * 33.5, p928 * 398, p928 * 36);
    v1272.bezierCurveTo(p928 * 398, p928 * 41.5, p928 * 398, p928 * 41.5, p928 * 398, p928 * 47);
    v1272.bezierCurveTo(p928 * 398, p928 * 56, p928 * 399, p928 * 56, p928 * 386, p928 * 56);
    v1272.bezierCurveTo(p928 * 200.5, p928 * 56.5, p928 * 200.5, p928 * 56.5, p928 * 15, p928 * 57);
    v1272.bezierCurveTo(p928 * 2, p928 * 55, p928 * 4, p928 * 52, p928 * 4, p928 * 43);
    v1272.bezierCurveTo(p928 * 4, p928 * 30.5, p928 * 4, p928 * 30.5, p928 * 4, p928 * 18);
    v1272.bezierCurveTo(p928 * 16, p928 * 18.5, p928 * 16, p928 * 18.5, p928 * 28, p928 * 19);
    v1272.bezierCurveTo(p928 * 18.5, p928 * 12, p928 * 18.5, p928 * 12, p928 * 9, p928 * 5);
    v1272.closePath();
    f89(v1272, p929[1], p929[0], p928 * 12);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p928 * 5, p928 * 70);
    v1272.bezierCurveTo(p928 * 5, p928 * 58, p928 * 5, p928 * 55, p928 * 17, p928 * 57);
    v1272.bezierCurveTo(p928 * 203, p928 * 57, p928 * 203, p928 * 57, p928 * 389, p928 * 57);
    v1272.bezierCurveTo(p928 * 400, p928 * 57, p928 * 400, p928 * 59, p928 * 400, p928 * 69);
    v1272.bezierCurveTo(p928 * 400.5, p928 * 83.5, p928 * 400.5, p928 * 83.5, p928 * 401, p928 * 98);
    v1272.bezierCurveTo(p928 * 402, p928 * 108, p928 * 401, p928 * 108, p928 * 388, p928 * 108);
    v1272.bezierCurveTo(p928 * 201.5, p928 * 108, p928 * 201.5, p928 * 108, p928 * 15, p928 * 108);
    v1272.bezierCurveTo(p928 * 1, p928 * 106, p928 * 5, p928 * 106, p928 * 5, p928 * 87);
    v1272.bezierCurveTo(p928 * 33, p928 * 84.5, p928 * 33, p928 * 84.5, p928 * 61, p928 * 82);
    v1272.bezierCurveTo(p928 * 33.5, p928 * 76.5, p928 * 33.5, p928 * 76.5, p928 * 6, p928 * 71);
    v1272.closePath();
    f89(v1272, p929[2], p929[0], p928 * 12);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p928 * 19, p928 * 158);
    v1272.bezierCurveTo(p928 * 2, p928 * 159, p928 * 4, p928 * 156, p928 * 5, p928 * 118);
    v1272.bezierCurveTo(p928 * 4, p928 * 110, p928 * 6, p928 * 107, p928 * 26, p928 * 109);
    v1272.bezierCurveTo(p928 * 206.5, p928 * 109, p928 * 206.5, p928 * 109, p928 * 387, p928 * 109);
    v1272.bezierCurveTo(p928 * 400, p928 * 108, p928 * 400, p928 * 108, p928 * 398, p928 * 127);
    v1272.bezierCurveTo(p928 * 384.5, p928 * 130, p928 * 384.5, p928 * 130, p928 * 371, p928 * 133);
    v1272.bezierCurveTo(p928 * 385.5, p928 * 138, p928 * 385.5, p928 * 138, p928 * 400, p928 * 143);
    v1272.bezierCurveTo(p928 * 402, p928 * 156, p928 * 402, p928 * 162, p928 * 385, p928 * 160);
    v1272.closePath();
    f89(v1272, p929[1], p929[0], p928 * 12);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p928 * 4, p928 * 183);
    v1272.bezierCurveTo(p928 * 1, p928 * 163, p928 * 4, p928 * 158, p928 * 28, p928 * 161);
    v1272.bezierCurveTo(p928 * 207.5, p928 * 161, p928 * 207.5, p928 * 161, p928 * 387, p928 * 161);
    v1272.bezierCurveTo(p928 * 401, p928 * 159, p928 * 400, p928 * 164, p928 * 400, p928 * 177);
    v1272.bezierCurveTo(p928 * 364.5, p928 * 184, p928 * 364.5, p928 * 184, p928 * 329, p928 * 191);
    v1272.bezierCurveTo(p928 * 364.5, p928 * 192.5, p928 * 364.5, p928 * 192.5, p928 * 400, p928 * 194);
    v1272.bezierCurveTo(p928 * 403, p928 * 209, p928 * 401, p928 * 214, p928 * 385, p928 * 213);
    v1272.bezierCurveTo(p928 * 201.5, p928 * 213, p928 * 201.5, p928 * 213, p928 * 18, p928 * 213);
    v1272.bezierCurveTo(p928 * 3, p928 * 213, p928 * 2, p928 * 213, p928 * 4, p928 * 198);
    v1272.bezierCurveTo(p928 * 12.5, p928 * 193, p928 * 12.5, p928 * 193, p928 * 21, p928 * 188);
    v1272.closePath();
    f89(v1272, p929[2], p929[0], p928 * 12);
    f94(v1272, p928 * 41, p928 * 30, p928 * 14.7648230602334);
    f89(v1272, p929[2], p929[0], p928 * 12);
    f94(v1272, p928 * 369, p928 * 30, p928 * 15.556349186104045);
    f89(v1272, p929[2], p929[0], p928 * 12);
    f94(v1272, p928 * 364, p928 * 190, p928 * 15.620499351813308);
    f89(v1272, p929[2], p929[0], p928 * 12);
    f94(v1272, p928 * 41, p928 * 186, p928 * 15.556349186104045);
    f89(v1272, p929[2], p929[0], p928 * 12);
    return v1271;
  }
  function f222(p931, p932, p933) {
    var v1273 = (v1274 = document.createElement("canvas")).getContext("2d");
    if (p933 == 0) {
      v1274.width = p931 * 566;
      v1274.height = p931 * 429;
      v1273.beginPath();
      v1273.lineCap = "round";
      v1273.lineJoin = "round";
      v1273.moveTo(p931 * 312.625, p931 * 39.046875);
      v1273.bezierCurveTo(p931 * 456.625, p931 * 60.046875, p931 * 521.625, p931 * 134.046875, p931 * 528.625, p931 * 199.046875);
      v1273.bezierCurveTo(p931 * 540.625, p931 * 298.046875, p931 * 491.625, p931 * 364.046875, p931 * 405.625, p931 * 394.046875);
      v1273.bezierCurveTo(p931 * 270.625, p931 * 429.046875, p931 * 182.625, p931 * 395.046875, p931 * 100.625, p931 * 344.046875);
      v1273.bezierCurveTo(p931 * 15.625, p931 * 283.046875, p931 * 20.625, p931 * 195.046875, p931 * 33.625, p931 * 158.046875);
      v1273.bezierCurveTo(p931 * 56.625, p931 * 80.046875, p931 * 102.625, p931 * 46.046875, p931 * 183.625, p931 * 33.046875);
      v1273.bezierCurveTo(p931 * 225.625, p931 * 25.046875, p931 * 270.625, p931 * 30.046875, p931 * 312.625, p931 * 39.046875);
      v1273.closePath();
      f89(v1273, p932[0]);
    } else if (p933 == 1) {
      v1273 = (v1274 = document.createElement("canvas")).getContext("2d");
      v1274.width = p931 * 511;
      v1274.height = p931 * 408;
      v1273.beginPath();
      v1273.lineCap = "round";
      v1273.lineJoin = "round";
      v1273.moveTo(p931 * 141.625, p931 * 49.296875);
      v1273.bezierCurveTo(p931 * 225.625, p931 * 10.296875, p931 * 320.625, p931 * 16.296875, p931 * 390.625, p931 * 39.296875);
      v1273.bezierCurveTo(p931 * 476.625, p931 * 71.296875, p931 * 483.625, p931 * 142.296875, p931 * 486.625, p931 * 197.296875);
      v1273.bezierCurveTo(p931 * 491.625, p931 * 289.296875, p931 * 462.625, p931 * 317.296875, p931 * 417.625, p931 * 351.296875);
      v1273.bezierCurveTo(p931 * 367.625, p931 * 385.296875, p931 * 313.625, p931 * 404.296875, p931 * 218.625, p931 * 395.296875);
      v1273.bezierCurveTo(p931 * 108.625, p931 * 381.296875, p931 * 81.625, p931 * 350.296875, p931 * 52.625, p931 * 305.296875);
      v1273.bezierCurveTo(p931 * 16.625, p931 * 244.296875, p931 * 23.625, p931 * 171.296875, p931 * 37.625, p931 * 145.296875);
      v1273.bezierCurveTo(p931 * 65.625, p931 * 84.296875, p931 * 97.625, p931 * 74.296875, p931 * 141.625, p931 * 49.296875);
      v1273.closePath();
      f89(v1273, p932[0]);
    } else if (p933 == 2) {
      var v1274;
      v1273 = (v1274 = document.createElement("canvas")).getContext("2d");
      v1274.width = p931 * 504;
      v1274.height = p931 * 408;
      v1273.beginPath();
      v1273.lineCap = "round";
      v1273.lineJoin = "round";
      v1273.moveTo(p931 * 153.625, p931 * 46.296875);
      v1273.bezierCurveTo(p931 * 271.625, p931 * 17.296875, p931 * 345.625, p931 * 35.296875, p931 * 410.625, p931 * 71.296875);
      v1273.bezierCurveTo(p931 * 473.625, p931 * 109.296875, p931 * 478.625, p931 * 167.296875, p931 * 473.625, p931 * 205.296875);
      v1273.bezierCurveTo(p931 * 462.625, p931 * 295.296875, p931 * 438.625, p931 * 316.296875, p931 * 388.625, p931 * 345.296875);
      v1273.bezierCurveTo(p931 * 331.625, p931 * 374.296875, p931 * 273.625, p931 * 392.296875, p931 * 180.625, p931 * 387.296875);
      v1273.bezierCurveTo(p931 * 111.625, p931 * 380.296875, p931 * 86.625, p931 * 360.296875, p931 * 51.625, p931 * 309.296875);
      v1273.bezierCurveTo(p931 * 23.625, p931 * 267.296875, p931 * 25.625, p931 * 226.296875, p931 * 27.625, p931 * 175.296875);
      v1273.bezierCurveTo(p931 * 37.625, p931 * 99.296875, p931 * 88.625, p931 * 57.296875, p931 * 153.625, p931 * 46.296875);
      v1273.closePath();
      f89(v1273, p932[0]);
    }
    return v1274;
  }
  function f223(p934) {
    if (p934 > 0) {
      return p934 * p934;
    } else {
      return p934;
    }
  }
  function f224(p935) {
    return vWindow.String.fromCharCode(p935);
  }
  function f225(p936, p937, p938) {
    var v1275 = document.createElement("canvas");
    var v1276 = v1275.getContext("2d");
    v1275.width = p936 * 81;
    v1275.height = p936 * 77;
    v1276.translate(0, p936 * 10);
    v1276.scale(0.2, 0.2);
    v1276.translate(0, p936 * -30);
    if (p938 == 1) {
      v1276.beginPath();
      v1276.lineCap = "round";
      v1276.lineJoin = "round";
      v1276.moveTo(p936 * 36.5, p936 * 278.0625);
      v1276.bezierCurveTo(p936 * 67.5, p936 * 316.0625, p936 * 134.5, p936 * 334.0625, p936 * 199.5, p936 * 319.0625);
      v1276.bezierCurveTo(p936 * 254.5, p936 * 304.0625, p936 * 346.5, p936 * 270.0625, p936 * 348.5, p936 * 237.0625);
      v1276.bezierCurveTo(p936 * 359.5, p936 * 206.0625, p936 * 318.5, p936 * 129.0625, p936 * 262.5, p936 * 122.0625);
      v1276.bezierCurveTo(p936 * 213.5, p936 * 115.0625, p936 * 166.5, p936 * 133.0625, p936 * 104.5, p936 * 166.0625);
      v1276.bezierCurveTo(p936 * 54.5, p936 * 194.0625, p936 * 23.5, p936 * 241.0625, p936 * 36.5, p936 * 277.0625);
      v1276.closePath();
      f89(v1276, p937[0], p937[3], p936 * 50);
    }
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 36.5, p936 * 278.0625);
    v1276.bezierCurveTo(p936 * 67.5, p936 * 316.0625, p936 * 134.5, p936 * 334.0625, p936 * 199.5, p936 * 319.0625);
    v1276.bezierCurveTo(p936 * 254.5, p936 * 304.0625, p936 * 346.5, p936 * 270.0625, p936 * 348.5, p936 * 237.0625);
    v1276.bezierCurveTo(p936 * 359.5, p936 * 206.0625, p936 * 318.5, p936 * 129.0625, p936 * 262.5, p936 * 122.0625);
    v1276.bezierCurveTo(p936 * 213.5, p936 * 115.0625, p936 * 166.5, p936 * 133.0625, p936 * 104.5, p936 * 166.0625);
    v1276.bezierCurveTo(p936 * 54.5, p936 * 194.0625, p936 * 23.5, p936 * 241.0625, p936 * 36.5, p936 * 277.0625);
    v1276.closePath();
    f89(v1276, p937[0], p937[1], p936 * 19);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 214.5, p936 * 124.0625);
    v1276.bezierCurveTo(p936 * 242.5, p936 * 125.0625, p936 * 272.5, p936 * 159.0625, p936 * 283.5, p936 * 184.0625);
    v1276.bezierCurveTo(p936 * 277.5, p936 * 161.0625, p936 * 233.5, p936 * 128.0625, p936 * 219.5, p936 * 122.0625);
    v1276.closePath();
    f89(v1276, p937[0], p937[1], p936 * 19);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 157.5, p936 * 145.0625);
    v1276.bezierCurveTo(p936 * 176.5, p936 * 148.0625, p936 * 205.5, p936 * 176.0625, p936 * 212.5, p936 * 197.0625);
    v1276.bezierCurveTo(p936 * 205.5, p936 * 178.0625, p936 * 177.5, p936 * 152.0625, p936 * 156.5, p936 * 142.0625);
    v1276.closePath();
    f89(v1276, p937[0], p937[1], p936 * 19);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 103.5, p936 * 169.0625);
    v1276.bezierCurveTo(p936 * 160.5, p936 * 166.0625, p936 * 228.5, p936 * 312.0625, p936 * 162.5, p936 * 323.0625);
    v1276.bezierCurveTo(p936 * 128.5, p936 * 330.0625, p936 * 45.5, p936 * 312.0625, p936 * 34.5, p936 * 268.0625);
    v1276.bezierCurveTo(p936 * 30.5, p936 * 238.0625, p936 * 44.5, p936 * 222.0625, p936 * 52.5, p936 * 211.0625);
    v1276.bezierCurveTo(p936 * 82.5, p936 * 174.0625, p936 * 104.5, p936 * 166.0625, p936 * 119.5, p936 * 172.0625);
    v1276.closePath();
    f89(v1276, p937[2], p937[1], p936 * 19);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 194.5, p936 * 313.0625);
    v1276.bezierCurveTo(p936 * 222.5, p936 * 306.0625, p936 * 319.5, p936 * 271.0625, p936 * 337.5, p936 * 241.0625);
    v1276.bezierCurveTo(p936 * 274.5, p936 * 270.0625, p936 * 216.5, p936 * 288.0625, p936 * 199.5, p936 * 287.0625);
    v1276.bezierCurveTo(p936 * 198.5, p936 * 302.0625, p936 * 195.5, p936 * 311.0625, p936 * 193.5, p936 * 312.0625);
    v1276.closePath();
    f89(v1276, p937[1]);
    v1276.scale(3, 3);
    v1276.translate(15, p936 * 10);
    if (p938 == 1) {
      v1276.beginPath();
      v1276.lineCap = "round";
      v1276.lineJoin = "round";
      v1276.moveTo(p936 * 4, p936 * 32);
      v1276.bezierCurveTo(p936 * 19, p936 * 25, p936 * 19, p936 * 25, p936 * 34, p936 * 18);
      v1276.bezierCurveTo(p936 * 41.5, p936 * 23.5, p936 * 41.5, p936 * 23.5, p936 * 49, p936 * 29);
      v1276.bezierCurveTo(p936 * 59.5, p936 * 20, p936 * 59.5, p936 * 20, p936 * 70, p936 * 11);
      f89(v1276, vVVVVVUndefined173, p937[3], p936 * 28);
      v1276.beginPath();
      v1276.lineCap = "round";
      v1276.lineJoin = "round";
      v1276.moveTo(p936 * 56, p936 * 6);
      v1276.bezierCurveTo(p936 * 63.5, p936 * 13.5, p936 * 63.5, p936 * 13.5, p936 * 71, p936 * 21);
      v1276.bezierCurveTo(p936 * 74.5, p936 * 11.5, p936 * 74.5, p936 * 11.5, p936 * 78, p936 * 2);
      v1276.closePath();
      f89(v1276, p937[3], p937[3], p936 * 28);
    }
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 4, p936 * 32);
    v1276.bezierCurveTo(p936 * 19, p936 * 25, p936 * 19, p936 * 25, p936 * 34, p936 * 18);
    v1276.bezierCurveTo(p936 * 41.5, p936 * 23.5, p936 * 41.5, p936 * 23.5, p936 * 49, p936 * 29);
    v1276.bezierCurveTo(p936 * 59.5, p936 * 20, p936 * 59.5, p936 * 20, p936 * 70, p936 * 11);
    f89(v1276, vVVVUndefined1422, p937[1], p936 * 17);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 56, p936 * 6);
    v1276.bezierCurveTo(p936 * 63.5, p936 * 13.5, p936 * 63.5, p936 * 13.5, p936 * 71, p936 * 21);
    v1276.bezierCurveTo(p936 * 74.5, p936 * 11.5, p936 * 74.5, p936 * 11.5, p936 * 78, p936 * 2);
    v1276.closePath();
    f89(v1276, p937[1], p937[1], p936 * 17);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 4, p936 * 32);
    v1276.bezierCurveTo(p936 * 19, p936 * 25, p936 * 19, p936 * 25, p936 * 34, p936 * 18);
    v1276.bezierCurveTo(p936 * 41.5, p936 * 23.5, p936 * 41.5, p936 * 23.5, p936 * 49, p936 * 29);
    v1276.bezierCurveTo(p936 * 59.5, p936 * 20, p936 * 59.5, p936 * 20, p936 * 70, p936 * 11);
    f89(v1276, vVUndefined14, p937[2], p936 * 10);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p936 * 56, p936 * 6);
    v1276.bezierCurveTo(p936 * 63.5, p936 * 13.5, p936 * 63.5, p936 * 13.5, p936 * 71, p936 * 21);
    v1276.bezierCurveTo(p936 * 74.5, p936 * 11.5, p936 * 74.5, p936 * 11.5, p936 * 78, p936 * 2);
    v1276.closePath();
    f89(v1276, p937[2], p937[2], p936 * 10);
    return v1275;
  }
  function f226(p939, p940) {
    var v1277 = document.createElement("canvas");
    var v1278 = v1277.getContext("2d");
    v1277.width = p939 * 253;
    v1277.height = p939 * 192;
    v1278.globalAlpha = 0.5;
    v1278.save();
    v1278.translate(p939 * 42, p939 * 99);
    v1278.globalAlpha = 0.5;
    f90(v1278, p939 * -7, p939 * -20, p939 * 14, p939 * 39, p939 * 20);
    v1278.restore();
    f89(v1278, p940[0]);
    v1278.globalAlpha = 1;
    v1278.save();
    v1278.translate(p939 * 37, p939 * 94);
    f90(v1278, p939 * -7, p939 * -20, p939 * 14, p939 * 37, p939 * 20);
    v1278.restore();
    f89(v1278, p940[2]);
    v1278.globalAlpha = 0.5;
    v1278.save();
    v1278.translate(p939 * 136, p939 * 99);
    v1278.globalAlpha = 0.5;
    f90(v1278, p939 * -84, p939 * -67, p939 * 168, p939 * 134, p939 * 20);
    v1278.restore();
    f89(v1278, p940[0], p940[0], p939 * 13);
    v1278.globalAlpha = 1;
    v1278.save();
    v1278.translate(p939 * 131, p939 * 94);
    f90(v1278, p939 * -84, p939 * -67, p939 * 168, p939 * 134, p939 * 20);
    v1278.restore();
    f89(v1278, p940[2], p940[2], p939 * 13);
    v1278.save();
    v1278.translate(p939 * 131, p939 * 94);
    f90(v1278, p939 * -76, p939 * -61, p939 * 152, p939 * 122, p939 * 20);
    v1278.restore();
    f89(v1278, p940[3], p940[1], p939 * 8);
    v1278.save();
    v1278.translate(p939 * 168.5, p939 * 93.5);
    f90(v1278, p939 * -30.5, p939 * -58.5, p939 * 61, p939 * 117, p939 * 20);
    v1278.restore();
    f89(v1278, p940[3], p940[4], p939 * 6);
    v1278.save();
    v1278.translate(p939 * 93.5, p939 * 95.5);
    f90(v1278, p939 * -32, p939 * -59.5, p939 * 59, p939 * 119, p939 * 20);
    v1278.restore();
    f89(v1278, p940[3], p940[4], p939 * 6);
    v1278.save();
    v1278.translate(p939 * 130.5, p939 * 94);
    f90(v1278, p939 * -36, p939 * -67, p939 * 73, p939 * 134, p939 * 20);
    v1278.restore();
    f89(v1278, p940[3], p940[2], p939 * 8);
    v1278.globalAlpha = 0.5;
    v1278.save();
    v1278.translate(p939 * 133, p939 * 97);
    f90(v1278, p939 * -83, p939 * -12, p939 * 160, p939 * 24, p939 * 0);
    v1278.restore();
    f89(v1278, p940[0]);
    v1278.globalAlpha = 1;
    v1278.save();
    v1278.translate(p939 * 133, p939 * 92);
    f90(v1278, p939 * -83, p939 * -12, p939 * 160, p939 * 24, p939 * 0);
    v1278.restore();
    f89(v1278, p940[2]);
    v1278.globalAlpha = 0.5;
    v1278.save();
    v1278.translate(p939 * 228, p939 * 99.5);
    v1278.globalAlpha = 0.5;
    f90(v1278, p939 * -5, p939 * -18.5, p939 * 10, p939 * 37, p939 * 20);
    v1278.restore();
    f89(v1278, p940[0]);
    v1278.globalAlpha = 1;
    v1278.save();
    v1278.translate(p939 * 223, p939 * 94.5);
    f90(v1278, p939 * -5, p939 * -18.5, p939 * 10, p939 * 37, p939 * 20);
    v1278.restore();
    f89(v1278, p940[2]);
    v1278.save();
    v1278.translate(p939 * 133.5, p939 * 175.5);
    v1278.globalAlpha = 0.5;
    f90(v1278, p939 * -22.5, p939 * -6.5, p939 * 45, p939 * 13, p939 * 20);
    v1278.restore();
    f89(v1278, p940[0]);
    v1278.globalAlpha = 1;
    v1278.save();
    v1278.translate(p939 * 128.5, p939 * 170.5);
    f90(v1278, p939 * -22.5, p939 * -6.5, p939 * 45, p939 * 13, p939 * 20);
    v1278.restore();
    f89(v1278, p940[2]);
    return v1277;
  }
  function f227(p941, p942) {
    var v1279 = document.createElement("canvas");
    var v1280 = v1279.getContext("2d");
    v1279.width = p941 * 120;
    v1279.height = p941 * 320;
    v1280.translate(p941 * -60, p941 * -15);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p941 * 188.5, p941 * 3.953125);
    v1280.bezierCurveTo(p941 * 188.5, p941 * 171.453125, p941 * 188.5, p941 * 171.453125, p941 * 188.5, p941 * 338.953125);
    v1280.bezierCurveTo(p941 * 162.5, p941 * 268.953125, p941 * 145.5, p941 * 265.953125, p941 * 116.5, p941 * 244.953125);
    v1280.bezierCurveTo(p941 * 67.5, p941 * 204.953125, p941 * 87.5, p941 * 160.953125, p941 * 113.5, p941 * 125.953125);
    v1280.bezierCurveTo(p941 * 141.5, p941 * 90.953125, p941 * 176.5, p941 * 56.953125, p941 * 188.5, p941 * 3.953125);
    v1280.closePath();
    f89(v1280, p942[0]);
    return v1279;
  }
  function f228(p943) {
    var v1281 = document.createElement("canvas");
    var v1282 = v1281.getContext("2d");
    var v1283 = p943 * 600;
    var v1284 = p943 * 22;
    var v1285 = p943 * 4;
    var v1286 = p943 * 4;
    v1281.width = v1283;
    v1281.height = v1284;
    f90(v1282, p943 * 5, p943 * 5, v1283 - p943 * 10, v1284 - p943 * 10, v1285);
    f89(v1282, null, "#BBE8EF", v1286);
    return v1281;
  }
  function f229(p944, p945, p946) {
    var v1287 = document.createElement("canvas");
    var v1288 = v1287.getContext("2d");
    v1287.width = p944 * 175;
    v1287.height = p944 * 106;
    v1288.globalAlpha = p945 ? 0.5 : 1;
    v1288.translate(0, p944 * 8);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 28, p944 * 67);
    v1288.bezierCurveTo(p944 * 55, p944 * 80, p944 * 126, p944 * 74, p944 * 144, p944 * 68);
    v1288.bezierCurveTo(p944 * 144.5, p944 * 75, p944 * 144.5, p944 * 75, p944 * 145, p944 * 82);
    v1288.bezierCurveTo(p944 * 114, p944 * 94, p944 * 47, p944 * 91, p944 * 28, p944 * 82);
    v1288.closePath();
    f89(v1288, p946[0]);
    v1288.globalAlpha = 1;
    v1288.translate(0, p944 * -8);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 145, p944 * 75);
    v1288.bezierCurveTo(p944 * 143, p944 * 51, p944 * 133, p944 * 29, p944 * 100, p944 * 27);
    v1288.bezierCurveTo(p944 * 52, p944 * 21, p944 * 37, p944 * 37, p944 * 31, p944 * 54);
    v1288.bezierCurveTo(p944 * 23, p944 * 78, p944 * 28, p944 * 77, p944 * 36, p944 * 79);
    v1288.bezierCurveTo(p944 * 80, p944 * 87, p944 * 120, p944 * 81, p944 * 145, p944 * 76);
    v1288.closePath();
    f89(v1288, p946[1]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 38, p944 * 46);
    v1288.bezierCurveTo(p944 * 52, p944 * 37, p944 * 69, p944 * 36, p944 * 85, p944 * 36);
    v1288.bezierCurveTo(p944 * 118, p944 * 38, p944 * 129, p944 * 42, p944 * 137, p944 * 48);
    v1288.bezierCurveTo(p944 * 135, p944 * 45, p944 * 135, p944 * 45, p944 * 133, p944 * 42);
    v1288.bezierCurveTo(p944 * 124, p944 * 32, p944 * 116, p944 * 28, p944 * 88, p944 * 25);
    v1288.bezierCurveTo(p944 * 47, p944 * 28, p944 * 40, p944 * 32, p944 * 36, p944 * 44);
    v1288.closePath();
    f89(v1288, p946[5]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 145, p944 * 75);
    v1288.bezierCurveTo(p944 * 143, p944 * 51, p944 * 133, p944 * 29, p944 * 100, p944 * 27);
    v1288.bezierCurveTo(p944 * 52, p944 * 21, p944 * 37, p944 * 37, p944 * 31, p944 * 54);
    v1288.bezierCurveTo(p944 * 23, p944 * 78, p944 * 28, p944 * 77, p944 * 36, p944 * 79);
    v1288.bezierCurveTo(p944 * 80, p944 * 87, p944 * 120, p944 * 81, p944 * 145, p944 * 76);
    v1288.closePath();
    f89(v1288, vVUndefined16, p946[2], p944 * 4);
    v1288.translate(0, p944 * -3);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 28, p944 * 67);
    v1288.bezierCurveTo(p944 * 55, p944 * 80, p944 * 126, p944 * 74, p944 * 144, p944 * 68);
    v1288.bezierCurveTo(p944 * 144.5, p944 * 75, p944 * 144.5, p944 * 75, p944 * 145, p944 * 82);
    v1288.bezierCurveTo(p944 * 114, p944 * 94, p944 * 47, p944 * 91, p944 * 28, p944 * 82);
    v1288.closePath();
    f89(v1288, p946[10], p946[10], p944 * 4);
    v1288.translate(0, p944 * 3);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 131, p944 * 43);
    v1288.bezierCurveTo(p944 * 145, p944 * 40, p944 * 148, p944 * 32, p944 * 147, p944 * 17);
    v1288.bezierCurveTo(p944 * 166, p944 * 39, p944 * 155, p944 * 62, p944 * 140, p944 * 67);
    v1288.bezierCurveTo(p944 * 128, p944 * 65, p944 * 128, p944 * 52, p944 * 131, p944 * 45);
    v1288.closePath();
    f89(v1288, p946[3]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 41, p944 * 43);
    v1288.bezierCurveTo(p944 * 30, p944 * 42, p944 * 24, p944 * 33, p944 * 25, p944 * 17);
    v1288.bezierCurveTo(p944 * 7, p944 * 34, p944 * 17, p944 * 63, p944 * 33, p944 * 66);
    v1288.bezierCurveTo(p944 * 45, p944 * 59, p944 * 44, p944 * 53, p944 * 42, p944 * 44);
    v1288.closePath();
    f89(v1288, p946[3]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 24, p944 * 19);
    v1288.bezierCurveTo(p944 * 24, p944 * 35, p944 * 35, p944 * 42, p944 * 42, p944 * 44);
    v1288.bezierCurveTo(p944 * 43, p944 * 51, p944 * 43, p944 * 48, p944 * 43, p944 * 56);
    v1288.bezierCurveTo(p944 * 25, p944 * 47, p944 * 17, p944 * 36, p944 * 23, p944 * 20);
    v1288.closePath();
    f89(v1288, p946[6]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 148, p944 * 18);
    v1288.bezierCurveTo(p944 * 159, p944 * 44, p944 * 139, p944 * 52, p944 * 130, p944 * 55);
    v1288.bezierCurveTo(p944 * 129, p944 * 48, p944 * 129, p944 * 46, p944 * 131, p944 * 43);
    v1288.bezierCurveTo(p944 * 144, p944 * 37, p944 * 148, p944 * 35, p944 * 147, p944 * 18);
    v1288.closePath();
    f89(v1288, p946[6]);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 131, p944 * 43);
    v1288.bezierCurveTo(p944 * 145, p944 * 40, p944 * 148, p944 * 32, p944 * 147, p944 * 17);
    v1288.bezierCurveTo(p944 * 166, p944 * 39, p944 * 155, p944 * 62, p944 * 140, p944 * 67);
    v1288.bezierCurveTo(p944 * 128, p944 * 65, p944 * 128, p944 * 52, p944 * 131, p944 * 45);
    v1288.closePath();
    f89(v1288, vVUndefined14, p946[4], p944 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 41, p944 * 43);
    v1288.bezierCurveTo(p944 * 30, p944 * 42, p944 * 24, p944 * 33, p944 * 25, p944 * 17);
    v1288.bezierCurveTo(p944 * 7, p944 * 34, p944 * 17, p944 * 63, p944 * 33, p944 * 66);
    v1288.bezierCurveTo(p944 * 45, p944 * 59, p944 * 44, p944 * 53, p944 * 42, p944 * 44);
    v1288.closePath();
    f89(v1288, vVUndefined15, p946[4], p944 * 4);
    v1288.save();
    v1288.translate(p944 * 87, p944 * 34.5);
    v1288.rotate(0);
    f90(v1288, p944 * -8, p944 * -10.5, p944 * 16, p944 * 21, p944 * 10);
    v1288.restore();
    f89(v1288, p946[7], p946[2], p944 * 4);
    v1288.save();
    v1288.translate(p944 * 87, p944 * 57);
    v1288.rotate(0);
    f90(v1288, p944 * -8, p944 * -23, p944 * 16, p944 * 46, p944 * 10);
    v1288.restore();
    f89(v1288, p946[8], p946[2], p944 * 4);
    f94(v1288, p944 * 87, p944 * 39, p944 * 4.123105625617661);
    f89(v1288, p946[9], p946[2], p944 * 4);
    f94(v1288, p944 * 87, p944 * 60, p944 * 4.242640687119285);
    f89(v1288, p946[9], p946[2], p944 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 28, p944 * 67);
    v1288.bezierCurveTo(p944 * 55, p944 * 80, p944 * 126, p944 * 74, p944 * 144, p944 * 68);
    v1288.bezierCurveTo(p944 * 144.5, p944 * 75, p944 * 144.5, p944 * 75, p944 * 145, p944 * 82);
    v1288.bezierCurveTo(p944 * 114, p944 * 94, p944 * 47, p944 * 91, p944 * 28, p944 * 82);
    v1288.closePath();
    f89(v1288, p946[8], p946[2], p944 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 27, p944 * 69);
    v1288.bezierCurveTo(p944 * 13, p944 * 77, p944 * 16, p944 * 74, p944 * 27, p944 * 80);
    v1288.closePath();
    f89(v1288, p946[9], p946[2], p944 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p944 * 145, p944 * 70);
    v1288.bezierCurveTo(p944 * 149.5, p944 * 72, p944 * 149.5, p944 * 72, p944 * 154, p944 * 74);
    v1288.bezierCurveTo(p944 * 150, p944 * 77, p944 * 150, p944 * 77, p944 * 146, p944 * 80);
    v1288.closePath();
    f89(v1288, p946[9], p946[2], p944 * 4);
    f94(v1288, p944 * 50, p944 * 80, p944 * 5);
    f89(v1288, p946[9], p946[2], p944 * 4);
    f94(v1288, p944 * 86.01141357421875, p944 * 81.76705932617188, p944 * 5);
    f89(v1288, p946[9], p946[2], p944 * 4);
    f94(v1288, p944 * 119.01141357421875, p944 * 80.13069152832031, p944 * 5);
    f89(v1288, p946[9], p946[2], p944 * 4);
    return v1287;
  }
  function f230(p947, p948, p949) {
    var v1289 = document.createElement("canvas");
    var v1290 = v1289.getContext("2d");
    v1289.width = p947 * 202;
    v1289.height = p947 * 202;
    v1290.translate(p947 * 2, p947 * 1);
    v1290.globalAlpha = 0.3;
    f94(v1290, p947 * 98, p947 * 99, p947 * 100);
    f89(v1290, p949[0]);
    v1290.globalAlpha = 0.5;
    f94(v1290, p947 * 98, p947 * 99, p947 * 90);
    f89(v1290, p949[1]);
    return v1289;
  }
  function f231(p950, p951, p952) {
    var v1291 = document.createElement("canvas");
    var v1292 = v1291.getContext("2d");
    v1291.width = p950 * 316;
    v1291.height = p950 * 365;
    v1292.save();
    v1292.translate(p950 * 156.07142639160156, p950 * 51.81248474121094);
    v1292.rotate(0);
    f90(v1292, p950 * -21.5, p950 * -34, p950 * 43, p950 * 68, p950 * 8);
    v1292.restore();
    f89(v1292, p952[1], p952[2], p950 * 15);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p950 * 110.57142639160156, p950 * 197.09820556640625);
    v1292.bezierCurveTo(p950 * 158.07142639160156, p950 * 179.09820556640625, p950 * 158.07142639160156, p950 * 179.09820556640625, p950 * 205.57142639160156, p950 * 161.09820556640625);
    v1292.bezierCurveTo(p950 * 205.57142639160156, p950 * 235.45535278320312, p950 * 205.57142639160156, p950 * 235.45535278320312, p950 * 205.57142639160156, p950 * 309.8125);
    v1292.bezierCurveTo(p950 * 205.57142639160156, p950 * 323.8125, p950 * 200.57142639160156, p950 * 325.8125, p950 * 187.57142639160156, p950 * 326.8125);
    v1292.bezierCurveTo(p950 * 155.57142639160156, p950 * 326.3125, p950 * 155.57142639160156, p950 * 326.3125, p950 * 123.57142639160156, p950 * 325.8125);
    v1292.bezierCurveTo(p950 * 111.57142639160156, p950 * 326.8125, p950 * 109.57142639160156, p950 * 321.8125, p950 * 110.57142639160156, p950 * 312.8125);
    v1292.closePath();
    f89(v1292, p952[3], p952[4], p950 * 15);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p950 * 126.57142639160156, p950 * 67.38392639160156);
    v1292.bezierCurveTo(p950 * 126.57142639160156, p950 * 57.38392639160156, p950 * 132.57142639160156, p950 * 54.38392639160156, p950 * 140.57142639160156, p950 * 54.38392639160156);
    v1292.bezierCurveTo(p950 * 177.57142639160156, p950 * 55.38392639160156, p950 * 158.07142639160156, p950 * 54.38392639160156, p950 * 175.57142639160156, p950 * 54.38392639160156);
    v1292.bezierCurveTo(p950 * 185.57142639160156, p950 * 56.38392639160156, p950 * 185.57142639160156, p950 * 57.38392639160156, p950 * 184.57142639160156, p950 * 66.38392639160156);
    v1292.bezierCurveTo(p950 * 184.57142639160156, p950 * 78.38392639160156, p950 * 184.57142639160156, p950 * 89.38392639160156, p950 * 184.57142639160156, p950 * 90.38392639160156);
    v1292.bezierCurveTo(p950 * 177.57142639160156, p950 * 107.38392639160156, p950 * 180.57142639160156, p950 * 112.38392639160156, p950 * 189.57142639160156, p950 * 116.38392639160156);
    v1292.bezierCurveTo(p950 * 212.57142639160156, p950 * 127.38392639160156, p950 * 212.57142639160156, p950 * 132.38392639160156, p950 * 211.57142639160156, p950 * 150.38392639160156);
    v1292.bezierCurveTo(p950 * 211.57142639160156, p950 * 227.59821128845215, p950 * 211.57142639160156, p950 * 227.59821128845215, p950 * 211.57142639160156, p950 * 304.81249618530273);
    v1292.bezierCurveTo(p950 * 212.57142639160156, p950 * 328.81249618530273, p950 * 209.57142639160156, p950 * 330.81249618530273, p950 * 188.57142639160156, p950 * 333.81249618530273);
    v1292.bezierCurveTo(p950 * 155.07142639160156, p950 * 333.31249618530273, p950 * 155.07142639160156, p950 * 333.31249618530273, p950 * 121.57142639160156, p950 * 332.81249618530273);
    v1292.bezierCurveTo(p950 * 104.57142639160156, p950 * 327.81249618530273, p950 * 105.57142639160156, p950 * 328.81249618530273, p950 * 104.57142639160156, p950 * 312.81249618530273);
    v1292.bezierCurveTo(p950 * 104.57142639160156, p950 * 228.16963958740234, p950 * 104.57142639160156, p950 * 228.16963958740234, p950 * 104.57142639160156, p950 * 143.52678298950195);
    v1292.bezierCurveTo(p950 * 106.57142639160156, p950 * 124.52678298950195, p950 * 110.57142639160156, p950 * 123.52678298950195, p950 * 123.57142639160156, p950 * 116.52678298950195);
    v1292.bezierCurveTo(p950 * 136.57142639160156, p950 * 110.52678298950195, p950 * 130.57142639160156, p950 * 106.52678298950195, p950 * 126.57142639160156, p950 * 98.52678298950195);
    v1292.closePath();
    f89(v1292, vUndefined, p952[5], p950 * 15);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p950 * 125.57142639160156, p950 * 156.66963958740234);
    v1292.bezierCurveTo(p950 * 125.57142639160156, p950 * 182.66963958740234, p950 * 125.57142639160156, p950 * 182.66963958740234, p950 * 125.57142639160156, p950 * 208.66963958740234);
    v1292.closePath();
    f89(v1292, vVUndefined16, p952[6], p950 * 15);
    return v1291;
  }
  function f232(p953, p954) {
    var v1293 = document.createElement("canvas");
    var v1294 = v1293.getContext("2d");
    v1293.width = p953 * 85;
    v1293.height = p953 * 145;
    v1294.translate(p953 * -20, p953 * -95);
    v1294.beginPath();
    v1294.lineCap = "round";
    v1294.lineJoin = "round";
    v1294.moveTo(p953 * 50, p953 * 105);
    v1294.bezierCurveTo(p953 * 52, p953 * 119, p953 * 64, p953 * 137, p953 * 71, p953 * 146);
    v1294.bezierCurveTo(p953 * 71, p953 * 161, p953 * 74, p953 * 169, p953 * 79, p953 * 179);
    v1294.bezierCurveTo(p953 * 68, p953 * 192, p953 * 70, p953 * 204, p953 * 69, p953 * 216);
    v1294.bezierCurveTo(p953 * 50, p953 * 189.5, p953 * 50, p953 * 189.5, p953 * 31, p953 * 163);
    v1294.closePath();
    f89(v1294, p954[1]);
    v1294.beginPath();
    v1294.lineCap = "round";
    v1294.lineJoin = "round";
    v1294.moveTo(p953 * 44, p953 * 106);
    v1294.bezierCurveTo(p953 * 49, p953 * 90, p953 * 58, p953 * 104, p953 * 51, p953 * 121);
    v1294.bezierCurveTo(p953 * 45, p953 * 143, p953 * 41, p953 * 151, p953 * 37, p953 * 162);
    v1294.bezierCurveTo(p953 * 48, p953 * 180, p953 * 58, p953 * 188, p953 * 76, p953 * 205);
    v1294.bezierCurveTo(p953 * 104, p953 * 209, p953 * 105, p953 * 229, p953 * 92, p953 * 235);
    v1294.bezierCurveTo(p953 * 76, p953 * 239, p953 * 75, p953 * 232, p953 * 56, p953 * 213);
    v1294.bezierCurveTo(p953 * 31, p953 * 187, p953 * 28, p953 * 176, p953 * 23, p953 * 162);
    v1294.bezierCurveTo(p953 * 38, p953 * 131, p953 * 40, p953 * 120, p953 * 44, p953 * 106);
    v1294.closePath();
    f89(v1294, p954[2], p954[3], p953 * 4);
    v1294.beginPath();
    v1294.lineCap = "round";
    v1294.lineJoin = "round";
    v1294.moveTo(p953 * 30, p953 * 159);
    v1294.bezierCurveTo(p953 * 46, p953 * 157, p953 * 59, p953 * 152, p953 * 68, p953 * 148);
    v1294.bezierCurveTo(p953 * 63, p953 * 155, p953 * 52, p953 * 160, p953 * 44, p953 * 164);
    v1294.bezierCurveTo(p953 * 59, p953 * 169, p953 * 66, p953 * 174, p953 * 75, p953 * 178);
    v1294.bezierCurveTo(p953 * 58, p953 * 178, p953 * 49, p953 * 175, p953 * 37, p953 * 174);
    v1294.closePath();
    f89(v1294, p954[2]);
    return v1293;
  }
  function f233() {
    new Date().getTime();
    function e(p955) {
      var v1295 = 0;
      for (var v1296 = 0, v1297 = 0; p955.length > v1296; v1296++) {
        var v1298 = p955.charAt(v1296);
        if (v1298 !== "_" && v1296 !== 5) {
          if (v1298 === "1") {
            v1295 += Math.pow(2, v1297);
          }
          v1297++;
        }
      }
      return v1295;
    }
    ⵠΔⲆΔΔΔⵠⵠΔ();
    ⵠΔ[1334] = [ᐃΔ.ΔⲆⵠΔⵠⲆⵠ, ᐃΔ.ⵠⵠΔᐃⲆΔⵠ];
    ⵠΔ[1333] = [];
    ⵠΔ[1333][v594.ΔⲆᐃ] = [];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_010_000")] = [ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_010_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("000_010_000")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_011_000")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("000_010_000")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_011_010")] = [ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_011_011")] = [ᐃΔ.Δⵠᐃᐃᐃᐃⵠ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_110_000")] = [ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⲆⲆⲆᐃΔ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_110_010")] = [ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ⲆᐃᐃⲆᐃⲆⲆ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_110_110")] = [ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ᐃⲆΔᐃⲆΔᐃᐃⵠ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ⲆᐃᐃⲆᐃⲆⲆ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_111_000")] = [ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_111_111")] = [ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.Δⵠᐃᐃᐃᐃⵠ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_010_000")] = [ᐃΔ.ⲆⲆⲆᐃΔ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_010_010")] = [ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_011_000")] = [ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ᐃΔΔΔᐃ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_000")] = [ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")] = [ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_011_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_011_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_111_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_111_000")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_111_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_111_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_111_110")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("010_111_111")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_111_110")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("000_111_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("010_110_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_011_000")] = [ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ᐃΔΔΔᐃ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_011_010")] = [ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_011_011")] = [ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.Δⵠᐃᐃᐃᐃⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_000")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("011_011_010")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_010")] = [ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_010")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_110")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_010")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("011_111_111")] = [ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.Δⵠᐃᐃᐃᐃⵠ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_110_000")] = [ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⲆᐃΔᐃⵠᐃᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_110_010")] = [ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_110_110")] = [ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_000")] = [ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⲆᐃΔᐃⵠᐃᐃ, ᐃΔ.ᐃⲆⵠⲆⵠⵠⵠ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_110")] = [ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃⲆⵠⲆⵠⵠⵠ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_111")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("110_111_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_110")] = [ᐃΔ.ᐃⲆⲆΔⵠ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ᐃⲆⵠⲆⵠⵠⵠ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_011")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_110")];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_000")] = [ᐃΔ.ⲆᐃΔᐃⵠᐃᐃ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⲆⵠⲆⵠⵠⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_111")] = [ᐃΔ.ⲆⵠⲆⲆⲆⵠᐃ, ᐃΔ.ᐃⵠΔⵠⵠ, ᐃΔ.ⲆⲆᐃⵠᐃ, ᐃΔ.Δⵠᐃᐃᐃᐃⵠ, ᐃΔ.ⵠⲆⲆⲆⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠⲆᐃ, ᐃΔ.ⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃΔ.ⵠᐃⲆⲆᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆΔ, ᐃΔ.ⵠⵠⵠᐃⲆᐃΔ, ᐃΔ.ᐃᐃⵠᐃᐃΔⲆ, ᐃΔ.ΔⵠⲆⲆⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃ, ᐃΔ.ⵠⲆᐃᐃⵠⵠⲆ, ᐃΔ.ΔΔᐃΔⲆΔⵠ, ᐃΔ.ⲆⲆⲆᐃΔ, ᐃΔ.ⵠⲆⲆΔⵠ, ᐃΔ.ⲆᐃᐃⵠᐃΔⵠ, ᐃΔ.ᐃⵠⵠᐃⲆⲆⵠ, ᐃΔ.ΔⲆⲆⵠΔⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔ, ᐃΔ.ᐃΔΔΔᐃ, ᐃΔ.ᐃⲆⲆΔⵠ];
    ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_010")] = ⵠΔ[1333][v594.ΔⲆᐃ][e("111_111_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_010_000")] = [ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_010_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_010_000")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_011_000")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_010_000")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_011_010")] = [ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_011_011")] = [ᐃΔ.ΔⵠΔⵠᐃⵠᐃ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_110_000")] = [ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_110_010")] = [ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ⵠΔⲆⵠⵠᐃⵠ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_110_110")] = [ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ΔΔⲆᐃᐃᐃⲆⵠᐃ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ⵠΔⲆⵠⵠᐃⵠ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_111_000")] = [ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_111_111")] = [ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔⵠΔⵠᐃⵠᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_010_000")] = [ᐃΔ.ᐃᐃⵠⲆⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_010_010")] = [ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_011_000")] = [ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃᐃΔⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_000")] = [ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")] = [ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_011_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_011_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_111_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_111_000")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_111_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_111_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_111_110")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_111_111")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_111_110")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("000_111_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("010_110_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_011_000")] = [ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃᐃΔⲆ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_011_010")] = [ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_011_011")] = [ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔⵠΔⵠᐃⵠᐃ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_000")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_011_010")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_010")] = [ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_010")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_110")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_010")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("011_111_111")] = [ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ΔⵠΔⵠᐃⵠᐃ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_110_000")] = [ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⵠⲆⵠⵠᐃⵠΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_110_010")] = [ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_110_110")] = [ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_000")] = [ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⵠⲆⵠⵠᐃⵠΔ, ᐃΔ.ΔᐃΔΔᐃᐃⵠ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_110")] = [ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ΔᐃΔΔᐃᐃⵠ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_111")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("110_111_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_110")] = [ᐃΔ.ΔⲆⲆᐃᐃ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ΔᐃΔΔᐃᐃⵠ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_011")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_110")];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_000")] = [ᐃΔ.ⵠⲆⵠⵠᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ΔᐃΔΔᐃᐃⵠ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_111")] = [ᐃΔ.ⲆⲆΔⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠ, ᐃΔ.ΔⵠΔⵠᐃⵠᐃ, ᐃΔ.ΔᐃⲆᐃΔΔΔ, ᐃΔ.ΔᐃⵠⵠⲆᐃΔ, ᐃΔ.ⲆΔⲆⲆⵠ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆ, ᐃΔ.ⲆⵠΔⲆᐃⵠΔ, ᐃΔ.ⲆⵠⲆΔᐃ, ᐃΔ.ᐃΔⲆΔⵠⲆⲆ, ᐃΔ.ⵠᐃⵠⵠⲆΔᐃ, ᐃΔ.ⵠᐃⵠⲆΔᐃΔ, ᐃΔ.ᐃΔᐃΔᐃ, ᐃΔ.ⵠⵠⵠΔΔΔΔ, ᐃΔ.ⲆⲆΔⲆᐃⵠᐃ, ᐃΔ.ᐃᐃⵠⲆⲆ, ᐃΔ.ⲆᐃᐃⵠⲆ, ᐃΔ.ΔᐃΔΔⲆᐃᐃ, ᐃΔ.ᐃᐃΔⵠⵠΔΔ, ᐃΔ.ⲆⲆⲆΔⵠⲆⲆ, ᐃΔ.ΔⲆΔⲆⵠ, ᐃΔ.ΔᐃᐃΔⲆ, ᐃΔ.ΔⲆⲆᐃᐃ];
    ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_010")] = ⵠΔ[1333][v594.ᐃᐃⵠ][e("111_111_110")];
    ⵠΔ[1332] = [];
    ⵠΔ[1332][v594.ΔⲆᐃ] = [];
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_010_000")] = ᐃΔ.ΔⲆⲆᐃⲆΔⲆⵠⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_010_010")] = ᐃΔ.ⲆⵠᐃΔⲆᐃⲆΔᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_011_000")] = ᐃΔ.ⲆΔⵠⵠⲆΔΔⲆΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_011_010")] = ᐃΔ.ᐃⵠⲆΔⵠᐃⵠᐃΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_011_011")] = ᐃΔ.ⲆⵠⵠᐃⵠⲆⲆᐃΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_110_000")] = ᐃΔ.ᐃΔⲆΔΔⵠᐃⵠΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_110_010")] = ᐃΔ.ⲆΔⵠᐃⲆΔΔᐃⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_110_110")] = ᐃΔ.ⲆⲆᐃⵠⵠⵠᐃᐃΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_111_000")] = ᐃΔ.ⵠᐃⵠᐃᐃᐃⲆⵠᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_111_010")] = ᐃΔ.ⲆΔⵠΔⲆᐃⲆⵠᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_111_011")] = ᐃΔ.ᐃⵠᐃΔⲆⲆᐃⵠⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_111_110")] = ᐃΔ.ᐃΔⵠᐃⲆΔΔΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("000_111_111")] = ᐃΔ.ⲆⲆⵠⲆᐃΔⵠⵠⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_010_000")] = ᐃΔ.ⵠΔⲆΔΔⵠⵠⲆΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_010_010")] = ᐃΔ.ⵠⵠⵠⵠⵠⲆⵠᐃΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_011_000")] = ᐃΔ.ᐃⵠΔⵠᐃᐃΔⵠⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_011_010")] = ᐃΔ.ΔⲆᐃⲆⵠΔⵠΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_011_011")] = ᐃΔ.ⵠᐃᐃᐃⵠⲆΔΔⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_110_000")] = ᐃΔ.ⵠΔΔⲆΔⵠⲆᐃⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_110_010")] = ᐃΔ.ⵠⵠᐃΔⵠⵠᐃⵠⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_110_110")] = ᐃΔ.ᐃⵠᐃᐃΔⵠΔΔᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_111_000")] = ᐃΔ.ᐃⵠΔΔᐃΔᐃⲆⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_111_010")] = ᐃΔ.ΔⵠΔⲆⵠⲆⵠᐃᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_111_011")] = ᐃΔ.ⲆᐃᐃⲆΔᐃΔⵠΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_111_110")] = ᐃΔ.ᐃΔⲆⵠΔᐃⵠᐃΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("010_111_111")] = ᐃΔ.ΔΔᐃΔⲆᐃⲆΔⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_011_000")] = ᐃΔ.ⵠⵠΔⵠⲆⵠΔⲆⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_011_010")] = ᐃΔ.ᐃⵠⲆⲆΔⵠⵠⵠⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_011_011")] = ᐃΔ.ΔⵠΔⲆⵠⵠⲆΔᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_111_000")] = ᐃΔ.ⵠᐃΔⲆⵠⲆᐃΔⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_111_010")] = ᐃΔ.ⵠⲆᐃⲆᐃⲆⵠⵠⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_111_011")] = ᐃΔ.ᐃᐃⲆΔⵠΔⵠⵠΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_111_110")] = ᐃΔ.ΔᐃΔⵠⲆⲆΔⲆⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("011_111_111")] = ᐃΔ.ⲆᐃⵠΔⲆⲆᐃΔΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_110_000")] = ᐃΔ.ᐃᐃᐃΔⵠⲆⵠΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_110_010")] = ᐃΔ.ⵠΔᐃⲆᐃⵠⲆΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_110_110")] = ᐃΔ.ⲆΔᐃΔⵠΔⵠΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_111_000")] = ᐃΔ.ⲆᐃⵠΔΔᐃⲆᐃⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_111_010")] = ᐃΔ.ⲆⵠᐃᐃⵠⲆΔΔΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_111_011")] = ᐃΔ.ᐃⵠᐃⵠⲆΔⲆΔⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_111_110")] = ᐃΔ.ᐃᐃΔⲆᐃᐃⵠΔΔ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("110_111_111")] = ᐃΔ.ⲆᐃΔⲆᐃᐃΔⵠⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_011")] = ᐃΔ.ⲆᐃᐃᐃⲆΔᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_110")] = ᐃΔ.ΔⲆᐃⲆⵠΔᐃⵠⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_011")] = ᐃΔ.ⲆᐃᐃᐃⲆΔᐃ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_000")] = ᐃΔ.ΔⵠⲆⵠᐃⲆᐃΔⲆ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_111")] = ᐃΔ.ⲆⲆΔⲆᐃⵠΔⲆⵠ;
    ⵠΔ[1332][v594.ΔⲆᐃ][e("111_111_010")] = ᐃΔ.ᐃΔΔⲆⲆᐃⵠⲆᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_010_000")] = ᐃΔ.ΔᐃⲆⵠⲆᐃᐃⵠⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_010_010")] = ᐃΔ.ΔⲆⲆΔⲆΔⵠⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_011_000")] = ᐃΔ.ⵠⵠⲆⵠⲆᐃⲆΔⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_011_010")] = ᐃΔ.ⵠⲆᐃΔⵠᐃΔΔᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_011_011")] = ᐃΔ.ᐃⲆⵠᐃⲆⲆΔᐃᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_110_000")] = ᐃΔ.ⵠᐃⵠⵠⲆΔᐃᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_110_010")] = ᐃΔ.ⲆᐃᐃⵠⵠΔⵠⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_110_110")] = ᐃΔ.ⵠⵠⲆⲆⵠᐃΔⲆᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_111_000")] = ᐃΔ.ⲆⵠᐃΔΔⵠΔΔⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_111_010")] = ᐃΔ.ⵠⲆΔⵠΔⵠᐃⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_111_011")] = ᐃΔ.ⵠⲆᐃᐃⲆⲆΔΔᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_111_110")] = ᐃΔ.ΔⵠⲆⵠⲆⲆΔΔⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("000_111_111")] = ᐃΔ.ΔΔΔᐃⵠΔΔΔᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_010_000")] = ᐃΔ.ⲆⵠⵠⵠⵠΔΔⲆⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_010_010")] = ᐃΔ.ⲆⵠΔΔⵠⵠΔΔⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_011_000")] = ᐃΔ.ΔⲆⲆⵠⵠⵠΔΔⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_011_010")] = ᐃΔ.ᐃᐃᐃⲆᐃⲆΔⵠⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_011_011")] = ᐃΔ.ⲆⵠᐃⵠⲆΔΔⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_110_000")] = ᐃΔ.ⲆⵠⲆⵠⲆΔⵠᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_110_010")] = ᐃΔ.ᐃᐃⲆᐃⲆⵠⵠΔᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_110_110")] = ᐃΔ.ᐃᐃⲆᐃᐃᐃΔᐃⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_111_000")] = ᐃΔ.ᐃᐃⲆⵠΔⵠⲆⵠⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_111_010")] = ᐃΔ.ⵠⲆⵠⲆⵠⵠᐃⲆΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_111_011")] = ᐃΔ.ⲆΔⵠⲆᐃⲆΔΔᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_111_110")] = ᐃΔ.ⲆΔΔΔΔⵠΔΔⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("010_111_111")] = ᐃΔ.ᐃⵠᐃⵠⲆⲆⲆⲆⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_011_000")] = ᐃΔ.ΔⲆᐃᐃⵠΔᐃΔⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_011_010")] = ᐃΔ.ΔⵠᐃᐃΔΔⵠᐃⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_011_011")] = ᐃΔ.ᐃᐃⵠⵠΔⲆΔΔⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_111_000")] = ᐃΔ.ⵠⵠᐃⲆⵠⲆᐃᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_111_010")] = ᐃΔ.ⵠᐃΔⵠⵠⵠⲆⲆᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_111_011")] = ᐃΔ.ᐃⲆᐃᐃΔΔΔΔⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_111_110")] = ᐃΔ.ⲆⲆⵠⲆⲆΔΔⲆΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("011_111_111")] = ᐃΔ.ⵠⲆⲆⲆᐃⵠΔⵠⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_110_000")] = ᐃΔ.ⵠⲆᐃΔⲆᐃᐃⲆΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_110_010")] = ᐃΔ.ⲆᐃΔΔΔⵠΔⵠⲆ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_110_110")] = ᐃΔ.ⵠⵠΔⵠⵠᐃᐃⵠⵠ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_111_000")] = ᐃΔ.ΔᐃⲆⲆⵠᐃⵠᐃᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_111_010")] = ᐃΔ.ⲆᐃΔⲆΔΔⵠⲆᐃ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_111_011")] = ᐃΔ.ᐃⲆⲆᐃᐃᐃΔᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_111_110")] = ᐃΔ.ΔᐃⵠⲆⵠⲆⲆᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("110_111_111")] = ᐃΔ.ⲆᐃΔⲆⵠΔΔᐃΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_011")] = ᐃΔ.ⵠᐃΔΔⵠΔΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_110")] = ᐃΔ.ΔΔᐃΔᐃⵠᐃⲆΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_011")] = ᐃΔ.ⵠᐃΔΔⵠΔΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_000")] = ᐃΔ.ΔⲆⵠᐃⵠⲆᐃⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_111")] = ᐃΔ.ΔΔΔᐃⵠΔᐃⵠΔ;
    ⵠΔ[1332][v594.ᐃᐃⵠ][e("111_111_010")] = ᐃΔ.ᐃⵠᐃⵠⲆⲆⲆⵠⲆ;
    ⵠΔ[315] = [];
    ⵠΔ[315][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⲆⵠᐃⵠⵠ;
    ⵠΔ[315][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠᐃⵠⵠΔⲆ;
    ⵠΔ[1233] = [];
    ⵠΔ[1233][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔᐃⵠⵠᐃⲆ;
    ⵠΔ[1233][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃΔⲆΔⲆᐃ;
    ⵠΔ[317] = [];
    ⵠΔ[317][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔⲆⵠᐃΔ;
    ⵠΔ[317][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠΔⲆⵠᐃ;
    ⵠΔ[1230] = [];
    ⵠΔ[1230][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆΔΔⵠΔ;
    ⵠΔ[1230][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆᐃᐃᐃⲆ;
    ⵠΔ[1746] = [];
    ⵠΔ[1746][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⵠⵠᐃⵠ;
    ⵠΔ[1746][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆᐃⲆⵠᐃ;
    ⵠΔ[1234] = [];
    ⵠΔ[1234][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆΔΔⵠΔⲆ;
    ⵠΔ[1234][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠᐃΔΔᐃ;
    ⵠΔ[319] = [];
    ⵠΔ[319][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆΔΔΔᐃⵠ;
    ⵠΔ[319][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆⲆⲆᐃᐃ;
    ⵠΔ[1247] = [];
    ⵠΔ[1247][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔⲆⲆΔΔ;
    ⵠΔ[1247][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔⵠⵠⲆⲆ;
    ⵠΔ[321] = [];
    ⵠΔ[321][v594.ΔⲆᐃ] = ᐃΔ.ΔΔᐃⲆⵠᐃⲆ;
    ⵠΔ[321][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⲆⲆΔⲆⵠ;
    ⵠΔ[1262] = [];
    ⵠΔ[1262][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⵠΔⲆⵠ;
    ⵠΔ[1262][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃᐃⲆⲆⵠⵠ;
    ⵠΔ[1265] = [];
    ⵠΔ[1265][v594.ΔⲆᐃ] = [ᐃΔ.ΔᐃⵠᐃⵠⲆᐃ];
    ⵠΔ[1265][v594.ᐃᐃⵠ] = [ᐃΔ.ⵠⲆΔΔΔΔⵠ];
    ⵠΔ[327] = [];
    ⵠΔ[327][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⵠⲆΔᐃⵠ;
    ⵠΔ[327][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠΔⵠⲆΔⲆ;
    ⵠΔ[329] = [];
    ⵠΔ[329][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠᐃᐃⵠΔᐃ;
    ⵠΔ[329][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠᐃⵠⲆⲆⲆ;
    ⵠΔ[328] = [];
    ⵠΔ[328][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠΔᐃᐃⵠⲆ;
    ⵠΔ[328][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃΔⵠⲆⵠ;
    ⵠΔ[322] = [];
    ⵠΔ[322][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃᐃᐃⲆᐃⲆ;
    ⵠΔ[322][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⵠᐃᐃⵠⲆ;
    ⵠΔ[323] = [];
    ⵠΔ[323][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⲆᐃΔⵠΔ;
    ⵠΔ[323][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⲆᐃⵠⲆⵠ;
    ⵠΔ[324] = [];
    ⵠΔ[324][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠΔⲆᐃⲆ;
    ⵠΔ[324][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⵠⵠⲆⲆΔ;
    ⵠΔ[325] = [];
    ⵠΔ[325][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆᐃⲆΔⲆ;
    ⵠΔ[325][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃΔᐃᐃⵠΔ;
    ⵠΔ[326] = [];
    ⵠΔ[326][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔⲆⵠΔᐃ;
    ⵠΔ[326][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⵠⵠⲆⲆΔ;
    ⵠΔ[330] = [];
    ⵠΔ[330][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⵠⵠᐃᐃᐃ;
    ⵠΔ[330][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃⲆⲆⵠΔ;
    ⵠΔ[1323] = [];
    ⵠΔ[1323][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔⵠΔΔⲆ;
    ⵠΔ[1323][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔⲆΔᐃⵠⲆ;
    ⵠΔ[1324] = [];
    ⵠΔ[1324][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆΔⵠⲆ;
    ⵠΔ[1324][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⵠⲆⲆⵠᐃ;
    ⵠΔ[1325] = ᐃΔ.ᐃⲆΔᐃⲆΔⲆ;
    ⵠΔ[1326] = ᐃΔ.ΔΔⲆⵠⲆⵠⵠ;
    ⵠΔ[1327] = [];
    ⵠΔ[1327][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⵠᐃᐃⲆᐃ;
    ⵠΔ[1327][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆᐃⲆⲆⲆ;
    ⵠΔ[1331] = [];
    ⵠΔ[1331][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⵠΔΔΔ;
    ⵠΔ[1331][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆΔⲆⲆⲆ;
    ⵠΔ[1349] = [];
    ⵠΔ[1349][v594.ΔⲆᐃ] = [];
    ⵠΔ[1349][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1349][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠⲆΔⵠⲆΔ);
    ⵠΔ[1349][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔᐃᐃΔᐃᐃ);
    ⵠΔ[1349][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠᐃⵠⵠᐃΔ);
    ⵠΔ[1349][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔⲆᐃΔΔⵠ);
    ⵠΔ[1349][v594.ᐃᐃⵠ].push(ᐃΔ.Δⵠⵠⵠᐃⵠᐃ);
    ⵠΔ[1349][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠⵠⲆⵠΔⵠ);
    ⵠΔ[354] = [];
    ⵠΔ[354][v594.ΔⲆᐃ] = [];
    ⵠΔ[354][v594.ᐃᐃⵠ] = [];
    ⵠΔ[354][v594.ΔⲆᐃ].push(ᐃΔ.ΔᐃᐃΔᐃⵠⲆ);
    ⵠΔ[354][v594.ΔⲆᐃ].push(ᐃΔ.ⲆΔⵠⲆΔΔΔ);
    ⵠΔ[354][v594.ΔⲆᐃ].push(ᐃΔ.ⵠΔⵠᐃⲆᐃᐃ);
    ⵠΔ[354][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆᐃΔΔᐃΔ);
    ⵠΔ[354][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔⲆⵠⲆΔᐃ);
    ⵠΔ[354][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠⲆᐃᐃⲆⵠ);
    ⵠΔ[1360] = [];
    ⵠΔ[1360][v594.ΔⲆᐃ] = [];
    ⵠΔ[1360][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1360][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆΔⲆᐃΔΔ);
    ⵠΔ[1360][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⵠⲆⵠᐃᐃⲆ);
    ⵠΔ[1360][v594.ΔⲆᐃ].push(ᐃΔ.ⵠᐃⲆΔⵠⵠΔ);
    ⵠΔ[1360][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔᐃⲆⲆⲆᐃ);
    ⵠΔ[1360][v594.ΔⲆᐃ].push(ᐃΔ.ΔᐃΔⲆᐃΔΔ);
    ⵠΔ[1360][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆⵠᐃⵠⲆⵠ);
    ⵠΔ[1360][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃᐃᐃⲆⲆΔⵠ);
    ⵠΔ[1360][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆⵠᐃⵠⲆΔ);
    ⵠΔ[1360][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠΔΔΔᐃΔ);
    ⵠΔ[1360][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆⵠⵠⵠⵠᐃ);
    ⵠΔ[588] = [];
    ⵠΔ[588][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠᐃⲆⵠᐃⲆ;
    ⵠΔ[588][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆᐃΔⵠⵠ;
    ⵠΔ[591] = [];
    ⵠΔ[591][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆΔⲆⵠⵠ;
    ⵠΔ[591][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠᐃΔΔⵠⲆ;
    ⵠΔ[592] = [];
    ⵠΔ[592][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠᐃᐃⲆᐃ;
    ⵠΔ[592][v594.ᐃᐃⵠ] = ᐃΔ.Ⲇⵠⵠⵠⵠᐃⵠ;
    ⵠΔ[602] = ᐃΔ.ΔᐃⵠⵠΔⵠΔ;
    ⵠΔ[606] = ᐃΔ.ΔᐃⵠΔΔΔⵠ;
    ⵠΔ[607] = ᐃΔ.ΔᐃᐃΔⲆⲆᐃ;
    ⵠΔ[29] = [];
    ⵠΔ[29][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃΔⲆⲆⲆⵠ;
    ⵠΔ[29][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃⵠⵠΔⲆ;
    ⵠΔ[1196] = [];
    ⵠΔ[1196][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔⵠΔⲆΔ;
    ⵠΔ[1196][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⵠᐃᐃΔᐃ;
    ⵠΔ[30] = [];
    ⵠΔ[30][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆᐃᐃΔⲆ;
    ⵠΔ[30][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆⲆΔΔⲆ;
    ⵠΔ[1200] = [];
    ⵠΔ[1200][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔⵠΔⲆΔ;
    ⵠΔ[1200][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⵠᐃᐃΔᐃ;
    ⵠΔ[71] = [];
    ⵠΔ[71][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠᐃⵠⵠⵠ;
    ⵠΔ[71][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⲆᐃΔⲆⵠ;
    ⵠΔ[106] = [];
    ⵠΔ[106][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⵠⵠᐃᐃⲆ;
    ⵠΔ[106][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔᐃⵠⵠⲆⲆ;
    ⵠΔ[306] = [];
    ⵠΔ[306][v594.ΔⲆᐃ] = [];
    ⵠΔ[306][v594.ᐃᐃⵠ] = [];
    ⵠΔ[306][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆᐃⵠⵠᐃⲆ);
    ⵠΔ[306][v594.ΔⲆᐃ].push(ᐃΔ.ⵠᐃⲆΔⲆΔΔ);
    ⵠΔ[306][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃⵠⲆΔᐃΔ);
    ⵠΔ[306][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆΔⵠΔⵠⵠ);
    ⵠΔ[306][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆᐃΔΔΔΔᐃ);
    ⵠΔ[306][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔΔⵠᐃⵠΔ);
    ⵠΔ[307] = [];
    ⵠΔ[307][v594.ΔⲆᐃ] = [];
    ⵠΔ[307][v594.ᐃᐃⵠ] = [];
    ⵠΔ[307][v594.ΔⲆᐃ].push(ᐃΔ.ΔΔᐃᐃᐃⲆⵠ);
    ⵠΔ[307][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆΔⵠΔᐃΔ);
    ⵠΔ[307][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠΔᐃΔⲆⵠ);
    ⵠΔ[307][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆⵠΔⵠΔⵠ);
    ⵠΔ[307][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃΔⲆᐃᐃⵠⵠ);
    ⵠΔ[307][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃⵠΔⲆⵠᐃⵠ);
    ⵠΔ[308] = [];
    ⵠΔ[308][v594.ΔⲆᐃ] = [];
    ⵠΔ[308][v594.ᐃᐃⵠ] = [];
    ⵠΔ[308][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃᐃⵠΔΔΔ);
    ⵠΔ[308][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠΔΔⵠΔⵠ);
    ⵠΔ[308][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠⲆᐃⵠᐃⵠ);
    ⵠΔ[308][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆⵠΔⲆⲆΔ);
    ⵠΔ[308][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⵠᐃⵠΔᐃ);
    ⵠΔ[308][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃΔⵠΔⵠⲆⲆ);
    ⵠΔ[309] = [];
    ⵠΔ[309][v594.ΔⲆᐃ] = [];
    ⵠΔ[309][v594.ᐃᐃⵠ] = [];
    ⵠΔ[309][v594.ΔⲆᐃ].push(ᐃΔ.ΔΔⵠⲆᐃᐃᐃ);
    ⵠΔ[309][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆΔⲆΔⲆΔ);
    ⵠΔ[309][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠⵠⵠᐃⵠΔ);
    ⵠΔ[309][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔⵠⵠᐃⲆⲆ);
    ⵠΔ[309][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃΔΔⵠⵠⵠ);
    ⵠΔ[309][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆΔⲆᐃⵠⵠ);
    ⵠΔ[310] = [];
    ⵠΔ[310][v594.ΔⲆᐃ] = [];
    ⵠΔ[310][v594.ᐃᐃⵠ] = [];
    ⵠΔ[310][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆᐃⵠΔⵠⵠ);
    ⵠΔ[310][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠᐃᐃⲆⲆΔ);
    ⵠΔ[310][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⲆᐃΔΔⵠᐃ);
    ⵠΔ[310][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃⵠᐃΔⵠⲆ);
    ⵠΔ[310][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃᐃⵠⲆᐃⵠΔ);
    ⵠΔ[310][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃᐃΔᐃⵠⵠ);
    ⵠΔ[311] = [];
    ⵠΔ[311][v594.ΔⲆᐃ] = [];
    ⵠΔ[311][v594.ᐃᐃⵠ] = [];
    ⵠΔ[311][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃΔⲆᐃᐃⵠ);
    ⵠΔ[311][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔⵠⲆᐃΔⵠ);
    ⵠΔ[311][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠΔᐃⵠⲆΔ);
    ⵠΔ[311][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃⲆΔⵠΔⲆⵠ);
    ⵠΔ[311][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆΔⵠΔΔᐃ);
    ⵠΔ[311][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⵠⵠⲆⵠⵠⵠ);
    ⵠΔ[313] = [];
    ⵠΔ[313][v594.ΔⲆᐃ] = [];
    ⵠΔ[313][v594.ᐃᐃⵠ] = [];
    ⵠΔ[313][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃⵠΔᐃⲆΔ);
    ⵠΔ[313][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆⲆⲆΔᐃᐃ);
    ⵠΔ[313][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃΔᐃⵠⵠΔ);
    ⵠΔ[313][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠⵠΔⲆᐃⲆ);
    ⵠΔ[313][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔΔⲆΔⵠⲆ);
    ⵠΔ[313][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔⲆⵠᐃᐃΔ);
    ⵠΔ[312] = [];
    ⵠΔ[312][v594.ΔⲆᐃ] = [];
    ⵠΔ[312][v594.ᐃᐃⵠ] = [];
    ⵠΔ[312][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆⵠⵠⲆᐃⵠ);
    ⵠΔ[312][v594.ΔⲆᐃ].push(ᐃΔ.ΔΔⲆΔΔⲆⲆ);
    ⵠΔ[312][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃΔΔᐃⲆⵠ);
    ⵠΔ[312][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔⵠⲆΔΔⲆ);
    ⵠΔ[312][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆⲆⵠⵠᐃⵠ);
    ⵠΔ[312][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔΔΔⵠⲆⲆ);
    ⵠΔ[1739] = [];
    ⵠΔ[1739][v594.ΔⲆᐃ] = [ᐃΔ.ⵠⵠΔᐃᐃΔⲆ];
    ⵠΔ[1739][v594.ᐃᐃⵠ] = [ᐃΔ.ⲆᐃᐃⲆᐃⵠⲆ];
    ⵠΔ[1759] = [];
    ⵠΔ[1759][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠᐃΔΔⲆⲆ;
    ⵠΔ[1759][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠΔⲆᐃⵠᐃ;
    ⵠΔ[37] = [];
    ⵠΔ[37][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔᐃΔΔΔ;
    ⵠΔ[37][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠⲆⲆΔⲆ;
    ⵠΔ[38] = [];
    ⵠΔ[38][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⵠᐃⲆⵠΔ;
    ⵠΔ[38][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⲆᐃⵠⵠΔ;
    ⵠΔ[39] = [];
    ⵠΔ[39][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆᐃⵠΔⵠᐃ;
    ⵠΔ[39][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃᐃᐃΔⵠ;
    ⵠΔ[40] = [];
    ⵠΔ[40][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔΔⵠⲆΔᐃ;
    ⵠΔ[40][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃΔⵠΔΔ;
    ⵠΔ[41] = [];
    ⵠΔ[41][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆⵠᐃⲆⵠ;
    ⵠΔ[41][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔᐃΔΔᐃ;
    ⵠΔ[42] = [];
    ⵠΔ[42][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⵠⲆΔⲆΔ;
    ⵠΔ[42][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⲆΔᐃΔⲆ;
    ⵠΔ[43] = [];
    ⵠΔ[43][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠᐃⵠΔΔ;
    ⵠΔ[43][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆᐃⲆⲆⲆΔ;
    ⵠΔ[44] = [];
    ⵠΔ[44][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔⵠᐃᐃᐃ;
    ⵠΔ[44][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔΔⲆⵠΔᐃ;
    ⵠΔ[45] = [];
    ⵠΔ[45][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⲆⵠΔⲆΔ;
    ⵠΔ[45][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠᐃΔⵠⲆΔ;
    ⵠΔ[50] = [];
    ⵠΔ[50][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⲆⵠⵠᐃΔ;
    ⵠΔ[50][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠᐃⲆⵠΔ;
    ⵠΔ[52] = [];
    ⵠΔ[52][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔⵠΔⲆᐃ;
    ⵠΔ[52][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆΔⵠΔⵠ;
    ⵠΔ[53] = [];
    ⵠΔ[53][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆᐃⵠⵠⲆΔ;
    ⵠΔ[53][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠΔᐃⲆⲆΔ;
    ⵠΔ[54] = [];
    ⵠΔ[54][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔᐃⲆⵠⲆ;
    ⵠΔ[54][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆⵠΔᐃᐃ;
    ⵠΔ[55] = [];
    ⵠΔ[55][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔΔⲆⲆΔ;
    ⵠΔ[55][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃⲆΔᐃⲆ;
    ⵠΔ[56] = [];
    ⵠΔ[56][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔᐃΔⵠⵠⵠ;
    ⵠΔ[56][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆΔᐃⵠΔⲆ;
    ⵠΔ[57] = [];
    ⵠΔ[57][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⲆΔⲆⲆⲆ;
    ⵠΔ[57][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃᐃΔᐃᐃ;
    ⵠΔ[51] = [];
    ⵠΔ[51][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔⵠΔⵠᐃ;
    ⵠΔ[51][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠⵠᐃⵠⵠ;
    ⵠΔ[58] = [];
    ⵠΔ[58][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠΔⲆⵠⲆ;
    ⵠΔ[58][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠΔᐃⵠΔ;
    ⵠΔ[59] = [];
    ⵠΔ[59][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆⵠᐃⲆⲆ;
    ⵠΔ[59][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃΔⲆᐃΔⲆ;
    ⵠΔ[66] = [];
    ⵠΔ[66][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠΔⵠΔᐃᐃ;
    ⵠΔ[66][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⵠᐃⵠⵠΔ;
    ⵠΔ[75] = [];
    ⵠΔ[75][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔΔΔᐃⵠᐃ;
    ⵠΔ[75][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔΔΔᐃΔᐃ;
    ⵠΔ[74] = [];
    ⵠΔ[74][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆΔⲆⵠ;
    ⵠΔ[74][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆΔⵠⵠⵠᐃ;
    ⵠΔ[76] = [];
    ⵠΔ[76][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⵠᐃᐃΔⵠ;
    ⵠΔ[76][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃΔⲆΔⵠ;
    ⵠΔ[77] = [];
    ⵠΔ[77][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⵠⲆΔΔ;
    ⵠΔ[77][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆᐃⵠⵠⵠᐃ;
    ⵠΔ[78] = [];
    ⵠΔ[78][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃᐃⲆⲆᐃ;
    ⵠΔ[78][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃᐃΔΔⵠ;
    ⵠΔ[79] = [];
    ⵠΔ[79][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃΔⵠⲆΔⲆ;
    ⵠΔ[79][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆᐃΔᐃΔ;
    ⵠΔ[73] = [];
    ⵠΔ[73][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔᐃᐃᐃᐃ;
    ⵠΔ[73][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔΔⵠᐃⲆ;
    ⵠΔ[80] = [];
    ⵠΔ[80][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔΔⲆᐃⲆⲆ;
    ⵠΔ[80][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔᐃⵠΔΔ;
    ⵠΔ[81] = [];
    ⵠΔ[81][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃⲆⲆΔⲆⵠ;
    ⵠΔ[81][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔΔⵠⵠⵠⵠ;
    ⵠΔ[89] = [];
    ⵠΔ[89][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆΔⵠⵠⲆⲆ;
    ⵠΔ[89][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆᐃᐃΔΔ;
    ⵠΔ[92] = [];
    ⵠΔ[92][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆᐃᐃⲆᐃ;
    ⵠΔ[92][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆᐃᐃᐃΔ;
    ⵠΔ[91] = [];
    ⵠΔ[91][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆⲆΔⲆⵠ;
    ⵠΔ[91][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆᐃⲆᐃⲆ;
    ⵠΔ[93] = [];
    ⵠΔ[93][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃΔᐃΔⵠΔ;
    ⵠΔ[93][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⲆⲆΔᐃΔ;
    ⵠΔ[94] = [];
    ⵠΔ[94][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃᐃⲆⲆⵠⲆ;
    ⵠΔ[94][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆⵠΔⲆⲆ;
    ⵠΔ[95] = [];
    ⵠΔ[95][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⲆᐃᐃⲆⲆ;
    ⵠΔ[95][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⲆⵠΔΔⵠ;
    ⵠΔ[96] = [];
    ⵠΔ[96][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃᐃΔΔⵠ;
    ⵠΔ[96][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⲆⲆⲆΔⵠ;
    ⵠΔ[90] = [];
    ⵠΔ[90][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⵠᐃΔⲆᐃ;
    ⵠΔ[90][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⲆΔᐃΔⵠ;
    ⵠΔ[89] = [];
    ⵠΔ[89][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆΔⵠⵠⲆⲆ;
    ⵠΔ[89][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆᐃᐃΔΔ;
    ⵠΔ[97] = [];
    ⵠΔ[97][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔΔⵠⵠΔ;
    ⵠΔ[97][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⲆⲆⵠⲆⲆ;
    ⵠΔ[98] = [];
    ⵠΔ[98][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔⵠᐃⵠⲆ;
    ⵠΔ[98][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠΔΔΔΔ;
    ⵠΔ[28] = [];
    ⵠΔ[28][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⲆΔᐃⵠⵠ;
    ⵠΔ[28][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⵠΔⲆΔΔ;
    ⵠΔ[109] = [];
    ⵠΔ[109][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠᐃΔᐃⲆⵠ;
    ⵠΔ[109][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆᐃᐃᐃᐃⵠ;
    ⵠΔ[111] = [];
    ⵠΔ[111][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⵠΔΔΔᐃ;
    ⵠΔ[111][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⵠᐃⵠΔⲆ;
    ⵠΔ[112] = [];
    ⵠΔ[112][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆⵠᐃᐃⵠ;
    ⵠΔ[112][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆⵠⲆΔᐃ;
    ⵠΔ[113] = [];
    ⵠΔ[113][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆᐃᐃΔΔ;
    ⵠΔ[113][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃⲆⵠᐃⵠ;
    ⵠΔ[114] = [];
    ⵠΔ[114][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔΔΔΔⵠ;
    ⵠΔ[114][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆᐃⵠⵠⵠ;
    ⵠΔ[115] = [];
    ⵠΔ[115][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔΔⲆᐃⲆ;
    ⵠΔ[115][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆΔⲆⵠΔᐃ;
    ⵠΔ[116] = [];
    ⵠΔ[116][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆᐃΔᐃⵠⵠ;
    ⵠΔ[116][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠⵠⲆⵠⲆ;
    ⵠΔ[110] = [];
    ⵠΔ[110][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠΔΔΔⲆᐃ;
    ⵠΔ[110][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⵠᐃᐃΔⵠ;
    ⵠΔ[117] = [];
    ⵠΔ[117][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆᐃⲆⲆⵠΔ;
    ⵠΔ[117][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⲆᐃᐃⵠΔ;
    ⵠΔ[118] = [];
    ⵠΔ[118][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔⲆΔΔⲆ;
    ⵠΔ[118][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⵠΔᐃⵠᐃ;
    ⵠΔ[61] = [];
    ⵠΔ[61][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠΔⲆΔΔⵠ;
    ⵠΔ[61][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃΔΔΔⲆ;
    ⵠΔ[17] = [];
    ⵠΔ[17][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⵠⵠⲆⵠⲆ;
    ⵠΔ[17][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃΔⲆΔΔⲆ;
    ⵠΔ[20] = [];
    ⵠΔ[20][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆᐃΔⲆ;
    ⵠΔ[20][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆⵠⵠᐃⲆ;
    ⵠΔ[21] = [];
    ⵠΔ[21][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃΔⵠⲆⲆⵠ;
    ⵠΔ[21][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃⵠⲆⵠΔ;
    ⵠΔ[22] = [];
    ⵠΔ[22][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆⵠⵠⲆᐃ;
    ⵠΔ[22][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠᐃΔⲆᐃ;
    ⵠΔ[23] = [];
    ⵠΔ[23][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆⲆᐃⲆⵠ;
    ⵠΔ[23][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠΔⲆᐃⵠ;
    ⵠΔ[24] = [];
    ⵠΔ[24][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠΔΔᐃᐃᐃ;
    ⵠΔ[24][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔΔΔᐃⵠⲆ;
    ⵠΔ[25] = [];
    ⵠΔ[25][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔᐃⲆⵠᐃΔ;
    ⵠΔ[25][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⲆⲆⵠΔⲆ;
    ⵠΔ[19] = [];
    ⵠΔ[19][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆΔⲆⵠΔⵠ;
    ⵠΔ[19][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆᐃᐃⵠⵠ;
    ⵠΔ[27] = [];
    ⵠΔ[27][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⵠⲆΔⵠᐃ;
    ⵠΔ[27][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆᐃᐃⵠⵠ;
    ⵠΔ[26] = [];
    ⵠΔ[26][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃⵠⵠⵠⲆ;
    ⵠΔ[26][v594.ᐃᐃⵠ] = ᐃΔ.Δᐃⵠᐃᐃⵠⵠ;
    ⵠΔ[167] = [];
    ⵠΔ[167][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆⵠⲆΔⲆΔⵠ;
    ⵠΔ[167][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆⵠⵠⲆⵠⵠΔ;
    ⵠΔ[168] = [];
    ⵠΔ[168][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆᐃᐃΔᐃⲆⵠΔ;
    ⵠΔ[168][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆΔⲆᐃᐃⵠⲆ;
    ⵠΔ[169] = [];
    ⵠΔ[169][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⲆᐃⵠᐃᐃΔⵠ;
    ⵠΔ[169][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃⵠᐃΔᐃⲆᐃ;
    ⵠΔ[170] = [];
    ⵠΔ[170][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⲆⲆᐃⵠⵠⵠ;
    ⵠΔ[170][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆⲆⲆΔΔΔⵠ;
    ⵠΔ[171] = [];
    ⵠΔ[171][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆΔᐃⲆᐃΔᐃᐃ;
    ⵠΔ[171][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠᐃΔᐃΔΔᐃⲆ;
    ⵠΔ[172] = [];
    ⵠΔ[172][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔⵠⵠⲆⲆΔΔᐃ;
    ⵠΔ[172][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⲆΔᐃⲆᐃΔΔ;
    ⵠΔ[173] = [];
    ⵠΔ[173][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔᐃⲆᐃΔΔΔΔ;
    ⵠΔ[173][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃⵠⲆⲆᐃⲆⵠ;
    ⵠΔ[174] = [];
    ⵠΔ[174][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔΔⲆⲆΔⵠᐃ;
    ⵠΔ[174][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃᐃᐃᐃΔⵠⵠⵠ;
    ⵠΔ[175] = [];
    ⵠΔ[175][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆᐃⵠᐃⵠᐃᐃ;
    ⵠΔ[175][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆⵠⲆⲆΔⲆⲆ;
    ⵠΔ[176] = [];
    ⵠΔ[176][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠᐃⲆⲆΔⵠⵠ;
    ⵠΔ[176][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔⵠⵠⲆᐃᐃΔ;
    ⵠΔ[177] = [];
    ⵠΔ[177][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔⲆΔΔΔⲆΔ;
    ⵠΔ[177][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃᐃⵠΔⵠⲆΔ;
    ⵠΔ[178] = [];
    ⵠΔ[178][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⵠΔⲆᐃⵠⲆΔ;
    ⵠΔ[178][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃⵠᐃⲆΔⵠⲆ;
    ⵠΔ[179] = [];
    ⵠΔ[179][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆᐃΔⲆᐃⲆᐃ;
    ⵠΔ[179][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆᐃⲆⲆⵠⵠΔⲆ;
    ⵠΔ[180] = [];
    ⵠΔ[180][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆΔⵠᐃⲆⲆⵠⵠ;
    ⵠΔ[180][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔᐃᐃᐃᐃⲆⵠΔ;
    ⵠΔ[181] = [];
    ⵠΔ[181][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠᐃⵠⵠΔΔΔⵠ;
    ⵠΔ[181][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠⵠⲆΔⵠᐃᐃ;
    ⵠΔ[163] = [];
    ⵠΔ[163][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔΔᐃᐃᐃ;
    ⵠΔ[163][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⵠⵠⲆⵠΔ;
    ⵠΔ[164] = [];
    ⵠΔ[164][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆⲆⲆΔⲆ;
    ⵠΔ[164][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⵠⵠⵠᐃⲆ;
    ⵠΔ[135] = [];
    ⵠΔ[135][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆⵠⵠⲆⵠΔⵠ;
    ⵠΔ[135][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆᐃᐃᐃΔΔⲆᐃ;
    ⵠΔ[136] = [];
    ⵠΔ[136][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃⵠⲆᐃⵠⵠⵠᐃ;
    ⵠΔ[136][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔⲆΔΔᐃΔΔⲆ;
    ⵠΔ[137] = [];
    ⵠΔ[137][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔⲆΔⲆΔΔΔ;
    ⵠΔ[137][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃⲆⵠⲆⲆⲆᐃ;
    ⵠΔ[138] = [];
    ⵠΔ[138][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⵠⲆΔᐃᐃΔ;
    ⵠΔ[138][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⵠΔⵠⲆⲆⲆⵠ;
    ⵠΔ[139] = [];
    ⵠΔ[139][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆΔⲆΔᐃⲆⵠ;
    ⵠΔ[139][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃΔⵠΔⵠⵠΔΔ;
    ⵠΔ[140] = [];
    ⵠΔ[140][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠΔⵠΔⲆΔᐃᐃ;
    ⵠΔ[140][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆⵠᐃⵠᐃⲆⲆ;
    ⵠΔ[148] = [];
    ⵠΔ[148][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠΔΔⲆⲆᐃⵠ;
    ⵠΔ[148][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃΔΔΔᐃᐃΔΔ;
    ⵠΔ[149] = [];
    ⵠΔ[149][v594.ΔⲆᐃ] = ᐃΔ.ΔΔⲆΔⵠΔⵠⵠΔ;
    ⵠΔ[149][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆⵠΔⲆⲆⲆΔ;
    ⵠΔ[183] = [];
    ⵠΔ[183][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆᐃⲆⲆΔ;
    ⵠΔ[183][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠⵠⵠΔⵠ;
    ⵠΔ[119] = [];
    ⵠΔ[119][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠᐃⲆᐃΔⲆⵠ;
    ⵠΔ[119][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃⵠΔΔΔⲆΔ;
    ⵠΔ[184] = [];
    ⵠΔ[184][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆΔᐃΔᐃⲆ;
    ⵠΔ[184][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⲆⲆⵠΔΔ;
    ⵠΔ[120] = [];
    ⵠΔ[120][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃᐃᐃⲆⲆᐃⲆ;
    ⵠΔ[120][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃᐃᐃⵠΔΔΔ;
    ⵠΔ[185] = [];
    ⵠΔ[185][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃΔΔⲆⵠ;
    ⵠΔ[185][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃΔΔΔΔΔ;
    ⵠΔ[121] = [];
    ⵠΔ[121][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆΔᐃᐃⵠᐃᐃⲆ;
    ⵠΔ[121][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃᐃⲆⲆⲆΔΔⵠ;
    ⵠΔ[186] = [];
    ⵠΔ[186][v594.ΔⲆᐃ] = ᐃΔ.ΔΔᐃΔⵠΔⲆ;
    ⵠΔ[186][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆⵠᐃⲆⵠ;
    ⵠΔ[122] = [];
    ⵠΔ[122][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃΔⲆⲆⵠΔⵠⵠ;
    ⵠΔ[122][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃΔᐃᐃᐃⲆⲆ;
    ⵠΔ[187] = [];
    ⵠΔ[187][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃⵠⲆⲆᐃ;
    ⵠΔ[187][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃᐃⵠΔΔ;
    ⵠΔ[123] = [];
    ⵠΔ[123][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆⲆⵠΔΔⲆΔ;
    ⵠΔ[123][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔᐃⵠⵠᐃᐃⲆᐃ;
    ⵠΔ[188] = [];
    ⵠΔ[188][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔᐃⲆΔⲆ;
    ⵠΔ[188][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠᐃΔⲆΔⵠⵠⲆ;
    ⵠΔ[124] = [];
    ⵠΔ[124][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆⲆⲆᐃᐃΔᐃ;
    ⵠΔ[124][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠᐃΔᐃⲆΔᐃⲆ;
    ⵠΔ[189] = [];
    ⵠΔ[189][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔᐃⲆⵠⵠ;
    ⵠΔ[189][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⵠᐃⵠⲆⵠ;
    ⵠΔ[125] = [];
    ⵠΔ[125][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆᐃᐃⵠⲆΔⵠⲆ;
    ⵠΔ[125][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠΔⲆⲆᐃⲆⲆ;
    ⵠΔ[191] = [];
    ⵠΔ[191][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⵠⲆᐃᐃᐃ;
    ⵠΔ[191][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆⲆⲆⲆᐃ;
    ⵠΔ[127] = [];
    ⵠΔ[127][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠΔΔΔᐃ;
    ⵠΔ[127][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆᐃᐃΔΔⵠ;
    ⵠΔ[192] = [];
    ⵠΔ[192][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆΔⲆⲆⲆⵠ;
    ⵠΔ[192][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃΔΔΔⵠⵠ;
    ⵠΔ[128] = [];
    ⵠΔ[128][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⵠⲆᐃᐃⵠ;
    ⵠΔ[128][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃΔⲆΔⲆ;
    ⵠΔ[193] = [];
    ⵠΔ[193][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⲆᐃᐃΔⲆ;
    ⵠΔ[193][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆⲆⲆⲆⲆ;
    ⵠΔ[129] = [];
    ⵠΔ[129][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠΔᐃⲆΔ;
    ⵠΔ[129][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠΔⵠΔΔ;
    ⵠΔ[194] = [];
    ⵠΔ[194][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆΔΔᐃᐃ;
    ⵠΔ[194][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆⲆΔⲆΔ;
    ⵠΔ[130] = [];
    ⵠΔ[130][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆΔΔᐃⲆ;
    ⵠΔ[130][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⵠⲆⲆᐃΔ;
    ⵠΔ[196] = [];
    ⵠΔ[196][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆᐃⲆΔΔ;
    ⵠΔ[196][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃΔᐃᐃⵠ;
    ⵠΔ[132] = [];
    ⵠΔ[132][v594.ΔⲆᐃ] = ᐃΔ.ΔΔⲆΔᐃᐃⵠ;
    ⵠΔ[132][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔᐃΔᐃⵠⵠ;
    ⵠΔ[195] = [];
    ⵠΔ[195][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⵠⵠΔⲆΔ;
    ⵠΔ[195][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⵠⲆΔⲆⵠ;
    ⵠΔ[131] = [];
    ⵠΔ[131][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔⲆⲆⵠΔ;
    ⵠΔ[131][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃⲆⵠΔᐃ;
    ⵠΔ[190] = [];
    ⵠΔ[190][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆΔⵠᐃ;
    ⵠΔ[190][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆΔΔΔⲆ;
    ⵠΔ[126] = [];
    ⵠΔ[126][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⲆⲆΔΔᐃ;
    ⵠΔ[126][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⵠⲆΔⲆⵠ;
    ⵠΔ[198] = [];
    ⵠΔ[198][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔⲆᐃΔⵠ;
    ⵠΔ[198][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⲆΔΔᐃΔ;
    ⵠΔ[134] = [];
    ⵠΔ[134][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔⵠΔⵠⵠ;
    ⵠΔ[134][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆᐃⲆⲆΔⲆ;
    ⵠΔ[197] = [];
    ⵠΔ[197][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃΔⲆᐃᐃΔ;
    ⵠΔ[197][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃΔᐃⵠᐃΔ;
    ⵠΔ[133] = [];
    ⵠΔ[133][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔⵠᐃᐃᐃ;
    ⵠΔ[133][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆΔᐃᐃᐃ;
    ⵠΔ[153] = [];
    ⵠΔ[153][v594.ΔⲆᐃ] = ᐃΔ.ΔΔⵠⲆⵠⲆᐃ;
    ⵠΔ[153][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⵠΔΔΔᐃ;
    ⵠΔ[154] = [];
    ⵠΔ[154][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔⲆᐃΔⲆ;
    ⵠΔ[154][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠΔᐃᐃᐃ;
    ⵠΔ[31] = [];
    ⵠΔ[31][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠᐃᐃᐃΔ;
    ⵠΔ[31][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠΔⲆⵠⵠ;
    ⵠΔ[1204] = [];
    ⵠΔ[1204][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆΔⲆⲆⲆ;
    ⵠΔ[1204][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆᐃΔΔᐃ;
    ⵠΔ[1211] = [];
    ⵠΔ[1211][v594.ΔⲆᐃ] = [];
    ⵠΔ[1211][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1211][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⵠᐃΔᐃᐃᐃΔᐃ);
    ⵠΔ[1211][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⲆΔⵠΔⵠΔⲆⲆ);
    ⵠΔ[1211][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆΔⵠΔⵠΔⲆⲆ);
    ⵠΔ[1211][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⵠⲆⲆⵠⲆⵠⵠⵠ);
    ⵠΔ[1217] = [];
    ⵠΔ[1217][v594.ΔⲆᐃ] = [];
    ⵠΔ[1217][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1217][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔⲆᐃΔⵠᐃ);
    ⵠΔ[1217][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⵠΔⵠⵠⲆⲆ);
    ⵠΔ[1217][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃⵠΔⲆᐃᐃ);
    ⵠΔ[1217][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔᐃᐃΔΔΔ);
    ⵠΔ[1217][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔⲆΔⵠⲆⵠ);
    ⵠΔ[1217][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⵠᐃⵠᐃΔⲆ);
    ⵠΔ[99] = [];
    ⵠΔ[99][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔΔⵠᐃᐃ;
    ⵠΔ[99][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆᐃΔᐃΔᐃ;
    ⵠΔ[100] = [];
    ⵠΔ[100][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃΔΔⵠΔ;
    ⵠΔ[100][v594.ᐃᐃⵠ] = ᐃΔ.Ⲇⵠⵠᐃᐃⵠⵠ;
    ⵠΔ[351] = [];
    ⵠΔ[351][v594.ΔⲆᐃ] = [];
    ⵠΔ[351][v594.ᐃᐃⵠ] = [];
    ⵠΔ[351][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⲆΔⵠⲆⵠⲆ);
    ⵠΔ[351][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃⵠΔⵠⲆⲆ);
    ⵠΔ[351][v594.ΔⲆᐃ].push(ᐃΔ.ΔΔⵠΔⲆΔⵠ);
    ⵠΔ[351][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔΔᐃΔⵠⵠ);
    ⵠΔ[351][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔΔΔΔᐃⵠ);
    ⵠΔ[351][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃᐃⲆΔΔⲆ);
    ⵠΔ[304] = [];
    ⵠΔ[304][v594.ΔⲆᐃ] = [];
    ⵠΔ[304][v594.ᐃᐃⵠ] = [];
    ⵠΔ[304][v594.ΔⲆᐃ].push(ᐃΔ.ⵠΔⵠΔΔⵠΔ);
    ⵠΔ[304][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃᐃΔᐃⲆᐃ);
    ⵠΔ[304][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔᐃΔⲆᐃᐃ);
    ⵠΔ[304][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆⵠᐃⵠⵠΔ);
    ⵠΔ[304][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃⲆᐃᐃᐃⵠ);
    ⵠΔ[304][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠᐃⵠᐃΔⵠΔ);
    ⵠΔ[305] = [];
    ⵠΔ[305][v594.ΔⲆᐃ] = [];
    ⵠΔ[305][v594.ᐃᐃⵠ] = [];
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃᐃΔᐃᐃⵠ);
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔⲆΔΔⲆᐃ);
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠᐃⲆᐃΔᐃ);
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ⲆΔΔᐃΔⲆⵠ);
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔΔⵠⵠᐃⲆ);
    ⵠΔ[305][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠⵠΔⲆᐃΔ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆᐃΔⵠΔⲆ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔΔΔⲆΔᐃ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⲆⲆⲆᐃⲆ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆΔⵠⲆⵠⲆ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃⵠⲆΔᐃᐃΔ);
    ⵠΔ[305][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠᐃⵠⲆᐃᐃⵠ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ] = [];
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ] = [];
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ] = [];
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⵠⵠⵠᐃⲆⲆ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃⲆΔⲆⲆᐃ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⵠᐃΔⵠⲆⲆⵠ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃⲆⲆⲆⲆⲆ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆⵠⲆⵠᐃΔ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⵠⲆΔᐃⵠⵠ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠᐃⵠΔΔΔΔ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃⵠᐃⵠⲆⵠⵠ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔᐃⵠᐃⲆⲆ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⵠᐃⵠΔΔᐃ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠΔⵠΔᐃᐃ);
    ⵠΔ[v594.ⵠⵠⲆᐃΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆᐃᐃΔⵠⲆ);
    ⵠΔ[1194] = [];
    ⵠΔ[1194][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔᐃΔᐃᐃ;
    ⵠΔ[1194][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⵠⲆᐃⲆⵠ;
    ⵠΔ[1195] = ᐃΔ.ΔⵠⲆⵠⲆΔⲆ;
    ⵠΔ[102] = [];
    ⵠΔ[102][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠΔᐃᐃᐃⵠⲆ;
    ⵠΔ[102][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠΔᐃⲆΔⲆⲆⵠ;
    ⵠΔ[333] = [];
    ⵠΔ[333][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⲆᐃᐃΔⲆ;
    ⵠΔ[333][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠΔΔⲆⵠ;
    ⵠΔ[334] = [];
    ⵠΔ[334][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠᐃᐃΔⵠΔ;
    ⵠΔ[334][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆΔΔΔΔ;
    ⵠΔ[346] = [];
    ⵠΔ[346][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆⵠΔΔ;
    ⵠΔ[346][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠΔᐃⲆⵠⵠ;
    ⵠΔ[1341] = [];
    ⵠΔ[1341][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔᐃⵠⲆΔⵠ;
    ⵠΔ[1341][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠᐃᐃᐃᐃⲆ;
    ⵠΔ[1342] = ᐃΔ.ΔⵠⵠᐃᐃΔᐃ;
    ⵠΔ[1751] = [];
    ⵠΔ[1751][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠΔⲆΔΔᐃ;
    ⵠΔ[1751][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⵠⵠⲆᐃⲆ;
    ⵠΔ[1752] = ᐃΔ.ΔⲆᐃᐃⵠⲆᐃ;
    ⵠΔ[1747] = [];
    ⵠΔ[1747][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆⵠΔⲆⵠ;
    ⵠΔ[1747][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔᐃᐃⵠⲆⲆ;
    ⵠΔ[1748] = ᐃΔ.ⵠΔᐃⲆᐃΔⲆ;
    ⵠΔ[1478] = [];
    ⵠΔ[1478][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆⲆⵠⵠⵠ;
    ⵠΔ[1478][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆⵠΔΔⵠ;
    ⵠΔ[1480] = [];
    ⵠΔ[1480][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔΔᐃⲆΔΔ;
    ⵠΔ[1480][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆᐃⲆΔⲆ;
    ⵠΔ[1477] = ᐃΔ.ⲆᐃⲆⵠⵠⵠᐃ;
    ⵠΔ[1479] = ᐃΔ.ΔⵠⵠⵠᐃⲆᐃ;
    ⵠΔ[1481] = ᐃΔ.ᐃᐃⵠΔᐃΔᐃ;
    ⵠΔ[1471] = [];
    ⵠΔ[1471][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔⵠᐃⵠⵠ;
    ⵠΔ[1471][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆⲆᐃⲆΔ;
    ⵠΔ[1473] = [];
    ⵠΔ[1473][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆⵠΔᐃΔ;
    ⵠΔ[1473][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠⵠⲆᐃᐃ;
    ⵠΔ[1474] = [];
    ⵠΔ[1474][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃᐃᐃΔⵠΔ;
    ⵠΔ[1474][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆⵠᐃᐃⵠ;
    ⵠΔ[1472] = ᐃΔ.ᐃⵠᐃΔᐃⵠᐃ;
    ⵠΔ[1476] = ᐃΔ.ⲆⲆⲆⲆⵠᐃⵠ;
    ⵠΔ[1475] = ᐃΔ.ΔᐃⲆⵠⲆΔⵠ;
    ⵠΔ[1361] = [];
    ⵠΔ[1361][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⲆΔΔⲆᐃ;
    ⵠΔ[1361][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆⵠΔⲆᐃ;
    ⵠΔ[1363] = [];
    ⵠΔ[1363][v594.ΔⲆᐃ] = ᐃΔ.Ⲇⵠᐃᐃᐃᐃⵠ;
    ⵠΔ[1363][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⲆΔΔⵠᐃ;
    ⵠΔ[341] = [];
    ⵠΔ[341][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆᐃⵠᐃⵠ;
    ⵠΔ[341][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⲆⵠΔΔᐃ;
    ⵠΔ[1368] = [];
    ⵠΔ[1368][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃΔⲆⵠΔⵠ;
    ⵠΔ[1368][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠΔⵠᐃΔ;
    ⵠΔ[1371] = [];
    ⵠΔ[1371][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔⲆᐃᐃⲆ;
    ⵠΔ[1371][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆΔⵠᐃΔⵠ;
    ⵠΔ[1367] = [];
    ⵠΔ[1367][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⵠⲆⲆⲆⵠ;
    ⵠΔ[1367][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠⵠⵠⲆⲆ;
    ⵠΔ[1370] = [];
    ⵠΔ[1370][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⲆⵠᐃΔᐃ;
    ⵠΔ[1370][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠⲆⲆⲆΔ;
    ⵠΔ[1364] = ᐃΔ.ΔⵠⲆᐃᐃⲆΔ;
    ⵠΔ[1365] = ᐃΔ.ΔΔᐃΔⲆⵠⵠ;
    ⵠΔ[1366] = ᐃΔ.ⵠΔⲆᐃᐃΔⵠ;
    ⵠΔ[1373] = ᐃΔ.ΔⲆⲆΔᐃⲆΔ;
    ⵠΔ[1374] = ᐃΔ.ᐃΔΔⲆᐃⲆⵠ;
    ⵠΔ[1375] = ᐃΔ.ᐃΔⲆᐃᐃⲆⵠ;
    ⵠΔ[1613] = [];
    ⵠΔ[1613][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆΔΔⲆⵠⲆⲆ;
    ⵠΔ[1613][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⵠᐃⲆⲆⲆᐃᐃ;
    ⵠΔ[358] = [];
    ⵠΔ[358][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⵠᐃⲆΔⵠΔⵠ;
    ⵠΔ[358][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆᐃⵠⵠⲆᐃⵠⵠ;
    ⵠΔ[1609] = [];
    ⵠΔ[1609][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⵠⲆΔⵠᐃΔΔ;
    ⵠΔ[1609][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⵠⲆᐃΔΔⵠΔ;
    ⵠΔ[1612] = [];
    ⵠΔ[1612][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⲆⵠⲆⵠΔⵠⲆ;
    ⵠΔ[1612][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆᐃⲆⵠⵠΔᐃ;
    ⵠΔ[1614] = ᐃΔ.ᐃⵠΔⲆⵠⵠⲆ;
    ⵠΔ[1610] = ᐃΔ.ⲆᐃΔΔⲆⲆⲆ;
    ⵠΔ[1376] = [];
    ⵠΔ[1376][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⵠⵠΔⲆⵠ;
    ⵠΔ[1376][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⵠΔⲆⲆⵠ;
    ⵠΔ[342] = [];
    ⵠΔ[342][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔΔⲆⵠᐃ;
    ⵠΔ[342][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠᐃⲆⵠⲆ;
    ⵠΔ[1378] = [];
    ⵠΔ[1378][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔᐃⵠᐃⲆⵠ;
    ⵠΔ[1378][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆᐃᐃⲆᐃ;
    ⵠΔ[1380] = [];
    ⵠΔ[1380][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠⵠⵠⲆⵠ;
    ⵠΔ[1380][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠΔⲆⵠⲆ;
    ⵠΔ[1383] = [];
    ⵠΔ[1383][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆᐃΔᐃᐃⵠ;
    ⵠΔ[1383][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⲆⲆⲆᐃⲆ;
    ⵠΔ[1379] = [];
    ⵠΔ[1379][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔΔΔⲆᐃ;
    ⵠΔ[1379][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠΔⵠⵠⵠᐃ;
    ⵠΔ[1382] = [];
    ⵠΔ[1382][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⲆⲆΔⲆⲆ;
    ⵠΔ[1382][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⲆΔΔΔΔ;
    ⵠΔ[1381] = [];
    ⵠΔ[1381][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔΔⵠⲆⵠ;
    ⵠΔ[1381][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔⵠⵠΔⲆΔ;
    ⵠΔ[1384] = [];
    ⵠΔ[1384][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠΔΔᐃᐃⵠ;
    ⵠΔ[1384][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⵠⵠⲆⲆᐃ;
    ⵠΔ[1385] = ᐃΔ.ⵠⵠᐃΔⲆⲆⵠ;
    ⵠΔ[1386] = ᐃΔ.ⲆΔⵠΔΔᐃᐃ;
    ⵠΔ[1387] = ᐃΔ.ᐃⲆⵠⲆⵠⵠᐃ;
    ⵠΔ[1391] = [];
    ⵠΔ[1391][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⲆΔᐃⵠⲆ;
    ⵠΔ[1391][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔᐃⵠⲆᐃΔ;
    ⵠΔ[343] = [];
    ⵠΔ[343][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠᐃΔᐃⲆ;
    ⵠΔ[343][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⵠⲆⲆᐃΔ;
    ⵠΔ[1393] = [];
    ⵠΔ[1393][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⲆⵠΔΔⲆ;
    ⵠΔ[1393][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃⲆᐃᐃⵠ;
    ⵠΔ[1395] = [];
    ⵠΔ[1395][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔⵠᐃᐃΔ;
    ⵠΔ[1395][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⵠⲆᐃⵠᐃ;
    ⵠΔ[1398] = [];
    ⵠΔ[1398][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⲆⵠΔⲆⵠ;
    ⵠΔ[1398][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃᐃΔⲆⲆ;
    ⵠΔ[1394] = [];
    ⵠΔ[1394][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔΔᐃᐃΔ;
    ⵠΔ[1394][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆᐃᐃΔⵠ;
    ⵠΔ[1397] = [];
    ⵠΔ[1397][v594.ΔⲆᐃ] = ᐃΔ.Ⲇⵠⵠⵠᐃᐃⵠ;
    ⵠΔ[1397][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃⵠⲆⵠᐃ;
    ⵠΔ[1396] = [];
    ⵠΔ[1396][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔⲆⲆⲆⵠ;
    ⵠΔ[1396][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃΔᐃᐃⲆ;
    ⵠΔ[1399] = [];
    ⵠΔ[1399][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⲆᐃΔᐃΔ;
    ⵠΔ[1399][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔᐃᐃΔΔΔ;
    ⵠΔ[1400] = ᐃΔ.ᐃΔⵠΔᐃΔⵠ;
    ⵠΔ[1401] = ᐃΔ.ⲆᐃᐃᐃⲆⲆⲆ;
    ⵠΔ[1402] = ᐃΔ.ⲆΔᐃᐃⵠⲆⵠ;
    ⵠΔ[1406] = [];
    ⵠΔ[1406][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⲆᐃⵠΔᐃ;
    ⵠΔ[1406][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃⵠⲆᐃⲆ;
    ⵠΔ[345] = [];
    ⵠΔ[345][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆΔⵠᐃⲆ;
    ⵠΔ[345][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⲆΔΔᐃᐃ;
    ⵠΔ[1423] = ᐃΔ.ⲆΔⲆⵠᐃⲆⲆ;
    ⵠΔ[1421] = [];
    ⵠΔ[1421][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔΔΔΔⵠ;
    ⵠΔ[1421][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃᐃⵠᐃⲆ;
    ⵠΔ[1422] = [];
    ⵠΔ[1422][v594.ΔⲆᐃ] = ᐃΔ.ΔΔⲆΔⵠⲆΔ;
    ⵠΔ[1422][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠΔᐃⵠⲆⵠ;
    ⵠΔ[1408] = [];
    ⵠΔ[1408][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔⵠⵠᐃᐃ;
    ⵠΔ[1408][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃⵠⲆΔᐃ;
    ⵠΔ[1410] = [];
    ⵠΔ[1410][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠΔΔⵠⲆᐃ;
    ⵠΔ[1410][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠΔⲆΔⲆⵠ;
    ⵠΔ[1413] = [];
    ⵠΔ[1413][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔΔᐃⵠᐃⲆ;
    ⵠΔ[1413][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃⵠⵠᐃΔ;
    ⵠΔ[1409] = [];
    ⵠΔ[1409][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔᐃᐃⵠⲆ;
    ⵠΔ[1409][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆΔΔΔⵠⲆ;
    ⵠΔ[1412] = [];
    ⵠΔ[1412][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆᐃⲆΔᐃⵠ;
    ⵠΔ[1412][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃΔᐃⲆⵠⲆ;
    ⵠΔ[1411] = [];
    ⵠΔ[1411][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃⲆⲆᐃΔⲆ;
    ⵠΔ[1411][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⵠⵠΔᐃⲆ;
    ⵠΔ[1414] = [];
    ⵠΔ[1414][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔΔⲆΔΔ;
    ⵠΔ[1414][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⲆΔⵠⵠΔ;
    ⵠΔ[1415] = ᐃΔ.ᐃΔⵠᐃᐃⵠⵠ;
    ⵠΔ[1416] = ᐃΔ.ΔⵠⲆᐃΔΔⲆ;
    ⵠΔ[1417] = ᐃΔ.ΔᐃⲆᐃᐃⵠⵠ;
    ⵠΔ[1427] = [];
    ⵠΔ[1427][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆⲆΔᐃⲆ;
    ⵠΔ[1427][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔΔⵠⲆⵠⲆ;
    ⵠΔ[348] = [];
    ⵠΔ[348][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃⲆⵠⵠᐃ;
    ⵠΔ[348][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⵠⲆΔⵠⲆ;
    ⵠΔ[1444] = ᐃΔ.ᐃⵠΔⲆⵠᐃᐃ;
    ⵠΔ[1442] = [];
    ⵠΔ[1442][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆⲆΔⲆⲆ;
    ⵠΔ[1442][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆᐃΔⲆⵠⵠ;
    ⵠΔ[1443] = [];
    ⵠΔ[1443][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔⵠΔⵠΔ;
    ⵠΔ[1443][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃⵠᐃΔᐃ;
    ⵠΔ[1429] = [];
    ⵠΔ[1429][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⲆⵠⲆⲆⵠ;
    ⵠΔ[1429][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆⲆΔᐃⲆ;
    ⵠΔ[1431] = [];
    ⵠΔ[1431][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆΔᐃΔⵠⵠ;
    ⵠΔ[1431][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃΔⲆᐃⲆᐃ;
    ⵠΔ[1434] = [];
    ⵠΔ[1434][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔΔΔΔΔ;
    ⵠΔ[1434][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆⲆᐃᐃⲆ;
    ⵠΔ[1430] = [];
    ⵠΔ[1430][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆⵠⵠΔⲆ;
    ⵠΔ[1430][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⵠᐃᐃⲆᐃ;
    ⵠΔ[1433] = [];
    ⵠΔ[1433][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔⵠⲆⲆᐃ;
    ⵠΔ[1433][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆⵠⲆⵠⲆ;
    ⵠΔ[1432] = [];
    ⵠΔ[1432][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⲆⵠᐃⵠᐃ;
    ⵠΔ[1432][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃΔΔΔⲆᐃ;
    ⵠΔ[1435] = [];
    ⵠΔ[1435][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃⲆⲆⵠᐃ;
    ⵠΔ[1435][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃᐃⵠⵠⲆⵠ;
    ⵠΔ[1436] = ᐃΔ.ⲆⲆᐃⵠᐃⵠⲆ;
    ⵠΔ[1437] = ᐃΔ.ᐃᐃᐃᐃΔᐃᐃ;
    ⵠΔ[1438] = ᐃΔ.ⲆⲆⲆⲆⲆᐃΔ;
    ⵠΔ[1445] = [];
    ⵠΔ[1445][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆΔᐃⲆⲆⵠ;
    ⵠΔ[1445][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔᐃⲆᐃΔⵠ;
    ⵠΔ[1446] = [];
    ⵠΔ[1446][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆⲆⲆΔΔⲆ;
    ⵠΔ[1446][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠⵠΔⵠⵠⵠ;
    ⵠΔ[1462] = ᐃΔ.ΔᐃΔᐃⵠⲆΔ;
    ⵠΔ[1460] = [];
    ⵠΔ[1460][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⵠᐃΔΔΔ;
    ⵠΔ[1460][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⵠᐃᐃΔΔ;
    ⵠΔ[1461] = [];
    ⵠΔ[1461][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⵠⲆⵠᐃᐃ;
    ⵠΔ[1461][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃΔᐃⲆᐃⲆ;
    ⵠΔ[1447] = [];
    ⵠΔ[1447][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔⵠⲆᐃⲆ;
    ⵠΔ[1447][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆᐃᐃⵠⲆ;
    ⵠΔ[1449] = [];
    ⵠΔ[1449][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔⵠΔⲆᐃⲆ;
    ⵠΔ[1449][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆᐃΔΔⵠ;
    ⵠΔ[1452] = [];
    ⵠΔ[1452][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⲆΔⲆⵠΔ;
    ⵠΔ[1452][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃΔⲆΔᐃΔ;
    ⵠΔ[1448] = [];
    ⵠΔ[1448][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃΔⵠΔΔᐃ;
    ⵠΔ[1448][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔΔΔᐃⵠᐃ;
    ⵠΔ[1451] = [];
    ⵠΔ[1451][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠΔⲆⵠΔᐃ;
    ⵠΔ[1451][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆⲆΔᐃⲆⵠ;
    ⵠΔ[1450] = [];
    ⵠΔ[1450][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆᐃⲆⲆⲆᐃ;
    ⵠΔ[1450][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃⵠⲆⵠΔΔ;
    ⵠΔ[1453] = [];
    ⵠΔ[1453][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃⲆΔⲆᐃ;
    ⵠΔ[1453][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⵠΔᐃⲆⵠ;
    ⵠΔ[1454] = ᐃΔ.ⵠⵠⲆⵠΔΔΔ;
    ⵠΔ[1455] = ᐃΔ.ⲆᐃⲆΔᐃⵠᐃ;
    ⵠΔ[1456] = ᐃΔ.ⵠⲆⵠⵠⵠⲆⲆ;
    ⵠΔ[1350] = [];
    ⵠΔ[1350][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆᐃᐃΔⵠ;
    ⵠΔ[1350][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠⵠⲆΔᐃ;
    ⵠΔ[1351] = [];
    ⵠΔ[1351][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔⵠΔⲆⵠᐃ;
    ⵠΔ[1351][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔⲆᐃᐃΔΔ;
    ⵠΔ[1352] = [];
    ⵠΔ[1352][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⲆᐃᐃᐃΔ;
    ⵠΔ[1352][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃᐃⲆΔⲆ;
    ⵠΔ[338] = [];
    ⵠΔ[338][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠᐃΔΔᐃⲆ;
    ⵠΔ[338][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⵠᐃΔΔᐃⲆ;
    ⵠΔ[344] = [];
    ⵠΔ[344][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆᐃᐃⲆᐃ;
    ⵠΔ[344][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔⲆᐃᐃⲆᐃ;
    ⵠΔ[359] = [];
    ⵠΔ[359][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆⵠΔᐃⲆⲆ;
    ⵠΔ[359][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⵠΔᐃⲆⲆ;
    ⵠΔ[1353] = ᐃΔ.ⵠᐃⵠⵠⵠᐃⵠ;
    ⵠΔ[162] = [];
    ⵠΔ[162][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆΔⲆⲆⲆ;
    ⵠΔ[162][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆΔⲆΔⵠⵠ;
    ⵠΔ[165] = [];
    ⵠΔ[165][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔᐃⵠⵠⵠⵠ;
    ⵠΔ[165][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆᐃⲆᐃⲆⵠ;
    ⵠΔ[357] = [];
    ⵠΔ[357][v594.ΔⲆᐃ] = [ᐃΔ.ΔᐃΔΔΔⲆᐃ, ᐃΔ.ᐃⲆⵠΔΔΔΔ, ᐃΔ.ⲆⵠⲆᐃⲆⲆΔ, ᐃΔ.ⲆⲆΔᐃΔᐃⲆ, ᐃΔ.ᐃΔᐃΔΔⲆⵠ, ᐃΔ.ΔΔᐃΔⵠΔⲆ, ᐃΔ.ⲆᐃᐃⵠⲆⲆᐃ, ᐃΔ.ⲆᐃΔᐃⲆΔⲆ, ᐃΔ.ᐃⲆΔᐃⲆⵠⵠ, ᐃΔ.ⵠⵠⵠⲆΔⵠᐃ, ᐃΔ.ΔⵠⵠⲆᐃᐃᐃ, ᐃΔ.ΔⲆΔⲆⲆⲆⵠ, ᐃΔ.ᐃᐃⲆᐃᐃΔⲆ, ᐃΔ.ᐃΔⲆΔΔᐃᐃ, ᐃΔ.ᐃᐃⵠⵠΔⲆΔ, ᐃΔ.ᐃΔⲆᐃⲆΔΔ, ᐃΔ.ᐃᐃΔⲆᐃᐃΔ, ᐃΔ.ⵠᐃΔⲆᐃΔⵠ];
    ⵠΔ[357][v594.ᐃᐃⵠ] = [ᐃΔ.ⲆⵠⲆΔΔⲆΔ, ᐃΔ.ⲆⲆΔⵠΔΔⲆ, ᐃΔ.ⵠΔⵠⵠⵠΔⵠ, ᐃΔ.ⵠⵠⲆⲆⵠΔΔ, ᐃΔ.ⲆᐃΔΔΔΔΔ, ᐃΔ.ⲆᐃⲆⵠᐃⲆⵠ, ᐃΔ.ᐃⲆᐃᐃⵠΔΔ, ᐃΔ.ⲆᐃΔᐃⲆΔⲆ, ᐃΔ.ᐃⵠⵠᐃⵠⲆⵠ, ᐃΔ.ⲆᐃⲆΔΔΔⲆ, ᐃΔ.ᐃⲆⲆⲆⲆⲆᐃ, ᐃΔ.ⵠᐃΔΔΔⵠⵠ, ᐃΔ.ᐃⵠⲆⲆⲆⲆⲆ, ᐃΔ.ᐃⲆⲆⲆΔⲆΔ, ᐃΔ.ΔⲆⵠⲆΔⲆⵠ, ᐃΔ.ⵠᐃᐃΔᐃᐃⵠ, ᐃΔ.ᐃᐃΔᐃⵠᐃΔ, ᐃΔ.ΔᐃⲆΔΔᐃΔ];
    ⵠΔ[166] = [];
    ⵠΔ[166][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔⲆᐃⲆᐃΔ;
    ⵠΔ[166][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔⵠᐃⵠᐃᐃ;
    ⵠΔ[335] = [];
    ⵠΔ[335][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⲆⲆⲆᐃⲆ;
    ⵠΔ[335][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃⲆⲆΔΔ;
    ⵠΔ[336] = [];
    ⵠΔ[336][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃᐃΔΔⲆⲆ;
    ⵠΔ[336][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆⵠᐃⵠⵠ;
    ⵠΔ[33] = [];
    ⵠΔ[33][v594.ΔⲆᐃ] = ᐃΔ.ᐃᐃⵠΔΔᐃᐃ;
    ⵠΔ[33][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆⵠᐃᐃΔ;
    ⵠΔ[161] = [];
    ⵠΔ[161][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔᐃⲆⵠⲆⵠΔ;
    ⵠΔ[161][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆΔᐃΔΔΔΔΔ;
    ⵠΔ[160] = [];
    ⵠΔ[160][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠᐃⲆⵠᐃΔᐃᐃ;
    ⵠΔ[160][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆⵠΔΔⲆⲆΔ;
    ⵠΔ[155] = [];
    ⵠΔ[155][v594.ΔⲆᐃ] = ᐃΔ.ΔΔⵠⲆΔⲆΔ;
    ⵠΔ[155][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔΔᐃⵠᐃⵠ;
    ⵠΔ[840] = [];
    ⵠΔ[840][v594.ΔⲆᐃ] = [];
    ⵠΔ[840][v594.ᐃᐃⵠ] = [];
    ⵠΔ[840][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆΔⵠⲆΔⵠΔᐃ);
    ⵠΔ[840][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔΔΔΔⲆⲆΔⵠ);
    ⵠΔ[840][v594.ΔⲆᐃ].push(ᐃΔ.ⲆΔⲆΔΔⵠⲆΔⲆ);
    ⵠΔ[840][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃⵠⵠⲆⲆΔⵠᐃΔ);
    ⵠΔ[840][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆᐃⲆΔΔᐃΔᐃⲆ);
    ⵠΔ[840][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃΔΔⵠⵠⲆᐃᐃΔ);
    ⵠΔ[838] = [];
    ⵠΔ[838][v594.ΔⲆᐃ] = [];
    ⵠΔ[838][v594.ᐃᐃⵠ] = [];
    ⵠΔ[838][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆⲆᐃᐃⵠᐃᐃΔ);
    ⵠΔ[838][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃⲆⲆΔΔⲆⲆᐃ);
    ⵠΔ[838][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆⲆⵠᐃⲆΔΔΔ);
    ⵠΔ[838][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔⵠⵠΔⲆΔᐃᐃ);
    ⵠΔ[838][v594.ᐃᐃⵠ].push(ᐃΔ.ᐃᐃⲆⲆⲆΔΔⲆⲆ);
    ⵠΔ[838][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⵠΔⲆⵠⲆⵠⲆ);
    ⵠΔ[839] = [];
    ⵠΔ[839][v594.ΔⲆᐃ] = [];
    ⵠΔ[839][v594.ᐃᐃⵠ] = [];
    ⵠΔ[839][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⲆΔᐃⲆᐃⲆΔᐃ);
    ⵠΔ[839][v594.ΔⲆᐃ].push(ᐃΔ.ⵠΔⵠΔᐃⲆᐃⲆΔ);
    ⵠΔ[839][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃΔᐃᐃΔΔⲆⲆ);
    ⵠΔ[839][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔΔᐃᐃΔⵠΔΔ);
    ⵠΔ[839][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆΔΔⲆⲆⲆᐃⵠ);
    ⵠΔ[839][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠΔⲆᐃΔΔᐃᐃ);
    ⲆⲆⲆⵠ.cop = [];
    ⲆⲆⲆⵠ.cop[0] = [ᐃΔ.ⵠΔΔᐃⵠΔᐃ, ᐃΔ.ᐃᐃⵠᐃⲆᐃⲆ];
    ⲆⲆⲆⵠ.cop[1] = ⲆⲆⲆⵠ.cop[0];
    ⲆⲆⲆⵠ.cop[2] = [ᐃΔ.ⲆⲆᐃⵠᐃΔⲆ, ᐃΔ.ⵠⲆⵠᐃⲆⵠⵠ];
    ⲆⲆⲆⵠ.iro = [];
    ⲆⲆⲆⵠ.iro[0] = [ᐃΔ.ᐃⵠΔⲆⲆⲆᐃ, ᐃΔ.ⵠᐃᐃᐃⲆᐃᐃ];
    ⲆⲆⲆⵠ.iro[1] = ⲆⲆⲆⵠ.iro[0];
    ⲆⲆⲆⵠ.iro[2] = [ᐃΔ.ⲆᐃΔΔΔⵠⵠ, ᐃΔ.ᐃΔΔᐃΔⲆⵠ];
    ⲆⲆⲆⵠ.top = [];
    ⲆⲆⲆⵠ.top[0] = [ᐃΔ.ᐃΔⵠⵠᐃⲆᐃ, ᐃΔ.ᐃΔᐃᐃⲆⲆⲆ];
    ⲆⲆⲆⵠ.top[1] = ⲆⲆⲆⵠ.top[0];
    ⲆⲆⲆⵠ.top[2] = [ᐃΔ.ΔᐃⲆᐃⲆⵠⲆ, ᐃΔ.ᐃᐃΔΔᐃⵠᐃ];
    ⲆⲆⲆⵠ.sap = [];
    ⲆⲆⲆⵠ.sap[0] = [ᐃΔ.ΔⵠⲆⲆⲆⵠⲆ, ᐃΔ.ⵠΔᐃᐃΔⲆⲆ];
    ⲆⲆⲆⵠ.sap[1] = ⲆⲆⲆⵠ.sap[0];
    ⲆⲆⲆⵠ.sap[2] = [ᐃΔ.ⲆΔⲆᐃᐃⲆᐃ, ᐃΔ.ⲆⵠᐃⵠⲆᐃᐃ];
    ⲆⲆⲆⵠ.jad = [];
    ⲆⲆⲆⵠ.jad[0] = [ᐃΔ.ⲆᐃᐃᐃᐃᐃΔ, ᐃΔ.ΔⵠΔⵠΔⵠⲆ];
    ⲆⲆⲆⵠ.jad[1] = ⲆⲆⲆⵠ.jad[0];
    ⲆⲆⲆⵠ.jad[2] = [ᐃΔ.ⵠᐃⵠⵠⲆΔⵠ, ᐃΔ.ᐃΔᐃΔⲆⲆᐃ];
    ⲆⲆⲆⵠ.rub = [];
    ⲆⲆⲆⵠ.rub[0] = [ᐃΔ.ΔᐃΔⵠΔᐃⲆ, ᐃΔ.ΔΔⲆΔⵠᐃⵠ];
    ⲆⲆⲆⵠ.rub[1] = ⲆⲆⲆⵠ.rub[0];
    ⲆⲆⲆⵠ.rub[2] = [ᐃΔ.ⵠᐃᐃΔⲆᐃⲆ, ᐃΔ.ᐃᐃⲆⵠᐃⲆᐃ];
    ⲆⲆⲆⵠ.aqu = [];
    ⲆⲆⲆⵠ.aqu[0] = [ᐃΔ.ΔΔⲆⲆΔᐃᐃ, ᐃΔ.ΔΔⲆⵠⵠΔⵠ];
    ⲆⲆⲆⵠ.aqu[1] = ⲆⲆⲆⵠ.aqu[0];
    ⲆⲆⲆⵠ.aqu[2] = [ᐃΔ.ⲆⲆΔⲆⲆᐃⵠ, ᐃΔ.ΔᐃΔⲆΔΔⲆ];
    ⲆⲆⲆⵠ.coa = [];
    ⲆⲆⲆⵠ.coa[0] = [ᐃΔ.ΔⲆⵠⵠΔᐃⵠ, ᐃΔ.ⵠⵠⲆⵠᐃᐃⵠ];
    ⲆⲆⲆⵠ.coa[1] = ⲆⲆⲆⵠ.coa[0];
    ⲆⲆⲆⵠ.coa[2] = [ᐃΔ.ΔⲆⵠⲆΔⵠΔ, ᐃΔ.ΔᐃᐃΔⲆΔᐃ];
    ⲆⲆⲆⵠ.jut = [];
    ⲆⲆⲆⵠ.jut[0] = [ᐃΔ.ⵠΔᐃᐃⵠᐃⵠ, ᐃΔ.ΔⵠⵠᐃΔΔⵠ];
    ⲆⲆⲆⵠ.jut[1] = ⲆⲆⲆⵠ.jut[0];
    ⲆⲆⲆⵠ.jut[2] = ⲆⲆⲆⵠ.jut[0];
    ⲆⲆⲆⵠ.jus = [];
    ⲆⲆⲆⵠ.jus[0] = [ᐃΔ.ᐃⵠᐃⵠΔⵠⵠ, ᐃΔ.ⵠⵠᐃⵠΔᐃΔ];
    ⲆⲆⲆⵠ.jus[1] = ⲆⲆⲆⵠ.jus[0];
    ⲆⲆⲆⵠ.jus[2] = [ᐃΔ.ⵠⲆⵠᐃⵠᐃΔ, ᐃΔ.ⵠⵠⵠᐃᐃⵠΔ];
    ⲆⲆⲆⵠ.jub = [];
    ⲆⲆⲆⵠ.jub[0] = [ᐃΔ.ⲆᐃⵠΔⵠᐃⵠ, ᐃΔ.ⵠΔΔΔⵠⲆᐃ];
    ⲆⲆⲆⵠ.jub[1] = ⲆⲆⲆⵠ.jub[0];
    ⲆⲆⲆⵠ.bap = [];
    ⲆⲆⲆⵠ.bap[0] = [ᐃΔ.ᐃΔⵠⲆⲆᐃⲆ, ᐃΔ.ᐃⲆⲆΔⲆⵠⲆ];
    ⲆⲆⲆⵠ.g = [];
    ⲆⲆⲆⵠ.g[0] = [ᐃΔ.ΔᐃⵠⲆⲆⲆⲆ, ᐃΔ.ΔⲆΔᐃⵠᐃⲆ];
    ⲆⲆⲆⵠ.g[1] = ⲆⲆⲆⵠ.g[0];
    ⲆⲆⲆⵠ.g[2] = [ᐃΔ.ⲆᐃⵠⲆΔΔⵠ, ᐃΔ.ⲆΔⲆⵠⲆⵠᐃ];
    ⲆⲆⲆⵠ.m = [];
    ⲆⲆⲆⵠ.m[0] = [ᐃΔ.ⲆΔᐃⲆⲆΔΔ, ᐃΔ.ΔⵠΔᐃⵠⵠⲆ];
    ⲆⲆⲆⵠ.m[1] = ⲆⲆⲆⵠ.m[0];
    ⲆⲆⲆⵠ.m[2] = [ᐃΔ.ᐃⵠⲆⲆΔⵠⲆ, ᐃΔ.ᐃⲆΔᐃⲆⵠΔ];
    ⲆⲆⲆⵠ.la = [];
    ⲆⲆⲆⵠ.la[0] = [ᐃΔ.ⲆⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃΔⲆⲆᐃⵠᐃ];
    ⲆⲆⲆⵠ.la[1] = ⲆⲆⲆⵠ.la[0];
    ⲆⲆⲆⵠ.la[2] = ⲆⲆⲆⵠ.la[0];
    ⲆⲆⲆⵠ.la[3] = ⲆⲆⲆⵠ.la[0];
    ⲆⲆⲆⵠ.la[4] = ⲆⲆⲆⵠ.la[0];
    ⲆⲆⲆⵠ.la[5] = ⲆⲆⲆⵠ.la[0];
    ⲆⲆⲆⵠ.s = [];
    ⲆⲆⲆⵠ.s[0] = [ᐃΔ.ᐃᐃΔⵠⵠⵠᐃ, ᐃΔ.ΔⵠⵠΔⲆⲆⵠ];
    ⲆⲆⲆⵠ.s[1] = ⲆⲆⲆⵠ.s[0];
    ⲆⲆⲆⵠ.s[2] = [ᐃΔ.ΔⵠⲆⲆᐃΔⵠ, ᐃΔ.ⵠⵠⲆⲆⲆΔᐃ];
    ⲆⲆⲆⵠ.p = [];
    ⲆⲆⲆⵠ.p[0] = [ᐃΔ.ΔⵠᐃⲆⵠⵠᐃ, ᐃΔ.ΔⵠᐃⲆⵠⵠᐃ];
    ⲆⲆⲆⵠ.a = [];
    ⲆⲆⲆⵠ.a[0] = [ᐃΔ.ᐃᐃᐃΔΔⵠⲆ, ᐃΔ.ⲆΔΔⵠᐃⵠⲆ];
    ⲆⲆⲆⵠ.a[1] = ⲆⲆⲆⵠ.a[0];
    ⲆⲆⲆⵠ.a[2] = ⲆⲆⲆⵠ.a[0];
    ⲆⲆⲆⵠ.d = [];
    ⲆⲆⲆⵠ.d[0] = [ᐃΔ.ⲆΔⲆᐃⲆΔⲆ, ᐃΔ.ⲆⵠⵠΔᐃⲆⲆ];
    ⲆⲆⲆⵠ.d[1] = ⲆⲆⲆⵠ.d[0];
    ⲆⲆⲆⵠ.d[2] = ⲆⲆⲆⵠ.d[0];
    ⲆⲆⲆⵠ.re = [];
    ⲆⲆⲆⵠ.re[0] = [ᐃΔ.ᐃᐃᐃΔᐃΔⵠ, ᐃΔ.ⲆᐃⲆΔⵠᐃΔ];
    ⲆⲆⲆⵠ.re[1] = ⲆⲆⲆⵠ.re[0];
    ⲆⲆⲆⵠ.re[2] = ⲆⲆⲆⵠ.re[0];
    ⲆⲆⲆⵠ.f = [];
    ⲆⲆⲆⵠ.f[0] = [ᐃΔ.ⵠᐃΔⲆⵠⵠⲆ, ᐃΔ.ΔᐃΔⲆⵠΔⲆ];
    ⲆⲆⲆⵠ.f[1] = ⲆⲆⲆⵠ.f[0];
    ⲆⲆⲆⵠ.f[2] = ⲆⲆⲆⵠ.f[0];
    ⲆⲆⲆⵠ.isl = [];
    ⲆⲆⲆⵠ.isl[0] = [ᐃΔ.ⵠᐃⵠΔⵠᐃⵠ, ᐃΔ.ⵠΔΔΔᐃⵠⵠ];
    ⲆⲆⲆⵠ.isl[1] = ⲆⲆⲆⵠ.isl[0];
    ⲆⲆⲆⵠ.isl[2] = ⲆⲆⲆⵠ.isl[0];
    ⲆⲆⲆⵠ.c = [];
    ⲆⲆⲆⵠ.c[0] = [ᐃΔ.ᐃⲆⲆⲆⵠΔⲆ, ᐃΔ.ⵠⵠⵠΔⲆΔᐃ];
    ⲆⲆⲆⵠ.c[1] = ⲆⲆⲆⵠ.c[0];
    ⲆⲆⲆⵠ.c[2] = ⲆⲆⲆⵠ.c[0];
    ⲆⲆⲆⵠ.wtb = [];
    ⲆⲆⲆⵠ.wtb[0] = [ᐃΔ.ᐃΔⵠΔⲆⵠΔ, ᐃΔ.ⵠⲆⵠΔⲆⲆⵠ];
    ⲆⲆⲆⵠ.PIRANHA = [ᐃΔ.ᐃᐃⲆⵠΔᐃΔ, ᐃΔ.ΔᐃⲆᐃᐃⲆⲆ];
    ⲆⲆⲆⵠ.KRAKEN = [ᐃΔ.ⵠⵠⵠΔᐃⲆⲆ, ᐃΔ.ΔᐃⲆΔⵠⵠⲆ];
    ⲆⲆⲆⵠ.FOX = [ᐃΔ.ΔΔⲆΔⵠΔΔ, ᐃΔ.ΔᐃⵠⵠΔΔⲆ];
    ⲆⲆⲆⵠ.WOLF = [ᐃΔ.ⲆΔΔⲆⵠⵠⵠ, ᐃΔ.ΔⵠΔᐃⲆΔΔ];
    ⲆⲆⲆⵠ.SPIDER = [ᐃΔ.ⵠΔΔⲆⲆⵠΔ, ᐃΔ.ᐃⲆⲆⲆΔᐃⵠ];
    ⲆⲆⲆⵠ.BEAR = [ᐃΔ.ΔᐃᐃⲆΔΔⵠ, ᐃΔ.ⵠᐃᐃΔΔⲆᐃ];
    ⲆⲆⲆⵠ.CAVE = [ᐃΔ.ⲆΔΔΔΔⲆΔ, ᐃΔ.ᐃΔΔⲆⵠᐃⲆ];
    ⲆⲆⲆⵠ.MAP = [ᐃΔ.ᐃⲆΔⲆⲆΔⵠ, ᐃΔ.ⵠⲆΔⵠⵠⲆⵠ];
    ⲆⲆⲆⵠ.FOREST = [ᐃΔ.ⲆⲆⲆⲆΔⵠΔ, ᐃΔ.ⵠⵠⵠⲆⵠⵠᐃ];
    ⲆⲆⲆⵠ.JUNGLE = [ᐃΔ.ⵠΔⲆⵠΔᐃⵠ, ᐃΔ.ᐃΔⲆΔⲆΔᐃ];
    ⲆⲆⲆⵠ.WINTER = [ᐃΔ.ΔΔᐃⵠΔⵠΔ, ᐃΔ.ⲆΔΔΔⲆⵠΔ];
    ⲆⲆⲆⵠ.DESERT = [ᐃΔ.ΔΔᐃⲆΔⲆΔ, ᐃΔ.ⲆⲆᐃⲆⲆᐃΔ];
    ⲆⲆⲆⵠ.LAVA = [ᐃΔ.ᐃΔⵠⵠᐃΔᐃ, ᐃΔ.ⲆᐃᐃⲆΔᐃⲆ];
    for (var v1299 in ⲆⲆⲆⵠ) {
      for (var v1300 = ⲆⲆⲆⵠ[v1299], v1301 = 0; v1301 < v1300.length; v1301++) {
        var v1302 = v1300[v1301];
        if (v1302.ⵠΔⲆᐃΔᐃΔ !== undefined) {
          v1302.ⵠΔⲆᐃΔᐃΔ();
        } else if (v1302.length > 0) {
          for (var v1303 = 0; v1303 < v1302.length; v1303++) {
            if (v1302[v1303].ⵠΔⲆᐃΔᐃΔ !== undefined) {
              v1302[v1303].ⵠΔⲆᐃΔᐃΔ();
            }
          }
        }
      }
    }
    console.log(vUndefined, undefined);
  }
  function f235(p956, p957, p958) {
    var v1304 = document.createElement("canvas");
    var v1305 = v1304.getContext("2d");
    v1304.width = p956 * 168;
    v1304.height = p956 * 100;
    v1305.globalAlpha = p957 ? 0.5 : 1;
    v1305.translate(p956 * 10, p956 * 5);
    v1305.save();
    v1305.translate(p956 * 24.5, p956 * 44.30000305175781);
    f90(v1305, p956 * -19.5, p956 * -8.5, p956 * 39, p956 * 17, p956 * 10);
    v1305.restore();
    f89(v1305, p958[0]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p956 * 115, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 142, p956 * 37.80000305175781, p956 * 140, p956 * 37.80000305175781, p956 * 141, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 147, p956 * 28.800003051757812, p956 * 149, p956 * 26.800003051757812, p956 * 153, p956 * 32.80000305175781);
    v1305.bezierCurveTo(p956 * 160, p956 * 42.80000305175781, p956 * 157, p956 * 50.80000305175781, p956 * 153, p956 * 58.80000305175781);
    v1305.bezierCurveTo(p956 * 148, p956 * 62.80000305175781, p956 * 147, p956 * 59.80000305175781, p956 * 143, p956 * 52.80000305175781);
    v1305.bezierCurveTo(p956 * 129, p956 * 52.80000305175781, p956 * 129, p956 * 52.80000305175781, p956 * 115, p956 * 52.80000305175781);
    v1305.closePath();
    f89(v1305, p958[0]);
    f94(v1305, p956 * 78, p956 * 44.80000305175781, p956 * 39.44616584663204);
    f89(v1305, p958[0]);
    v1305.globalAlpha = 1;
    v1305.translate(p956 * -10, p956 * -5);
    v1305.save();
    v1305.translate(p956 * 24.5, p956 * 44.30000305175781);
    f90(v1305, p956 * -19.5, p956 * -8.5, p956 * 39, p956 * 17, p956 * 10);
    v1305.restore();
    f89(v1305, undefined, p958[3], p956 * 6);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p956 * 115, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 142, p956 * 37.80000305175781, p956 * 140, p956 * 37.80000305175781, p956 * 141, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 147, p956 * 28.800003051757812, p956 * 149, p956 * 26.800003051757812, p956 * 153, p956 * 32.80000305175781);
    v1305.bezierCurveTo(p956 * 160, p956 * 42.80000305175781, p956 * 157, p956 * 50.80000305175781, p956 * 153, p956 * 58.80000305175781);
    v1305.bezierCurveTo(p956 * 148, p956 * 62.80000305175781, p956 * 147, p956 * 59.80000305175781, p956 * 143, p956 * 52.80000305175781);
    v1305.bezierCurveTo(p956 * 129, p956 * 52.80000305175781, p956 * 129, p956 * 52.80000305175781, p956 * 115, p956 * 52.80000305175781);
    v1305.closePath();
    f89(v1305, undefined, p958[3], p956 * 6);
    f94(v1305, p956 * 78, p956 * 44.80000305175781, p956 * 42.44616584663204);
    f89(v1305, vVUndefined, p958[3], p956 * 6);
    v1305.save();
    v1305.translate(p956 * 24.5, p956 * 44.30000305175781);
    f90(v1305, p956 * -19.5, p956 * -8.5, p956 * 39, p956 * 17, p956 * 10);
    v1305.restore();
    f89(v1305, p958[1]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p956 * 115, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 142, p956 * 37.80000305175781, p956 * 140, p956 * 37.80000305175781, p956 * 141, p956 * 37.80000305175781);
    v1305.bezierCurveTo(p956 * 147, p956 * 28.800003051757812, p956 * 149, p956 * 26.800003051757812, p956 * 153, p956 * 32.80000305175781);
    v1305.bezierCurveTo(p956 * 160, p956 * 42.80000305175781, p956 * 157, p956 * 50.80000305175781, p956 * 153, p956 * 58.80000305175781);
    v1305.bezierCurveTo(p956 * 148, p956 * 62.80000305175781, p956 * 147, p956 * 59.80000305175781, p956 * 143, p956 * 52.80000305175781);
    v1305.bezierCurveTo(p956 * 129, p956 * 52.80000305175781, p956 * 129, p956 * 52.80000305175781, p956 * 115, p956 * 52.80000305175781);
    v1305.closePath();
    f89(v1305, p958[1]);
    f94(v1305, p956 * 78, p956 * 44.80000305175781, p956 * 39.44616584663204);
    f89(v1305, p958[2], p958[1], p956 * 4);
    f94(v1305, p956 * 78, p956 * 44.80000305175781, p956 * 29.68164415931166);
    f89(v1305, p958[3], p958[1], p956 * 4);
    f94(v1305, p956 * 78, p956 * 44, p956 * 20);
    f89(v1305, p958[4]);
    return v1304;
  }
  function f236(p959, p960, p961) {
    var v1306 = document.createElement("canvas");
    var v1307 = v1306.getContext("2d");
    v1306.width = p959 * 142;
    v1306.height = p959 * 118;
    v1307.save();
    v1307.translate(p959 * 70.16665649414062, p959 * 38.20831298828125);
    f90(v1307, p959 * -58.5, p959 * -27.5, p959 * 117, p959 * 55, p959 * 20);
    v1307.restore();
    f89(v1307, p961[0], p961[1], p959 * 4);
    v1307.save();
    v1307.translate(p959 * 70, p959 * 42.70831298828125);
    f90(v1307, p959 * -61, p959 * -20, p959 * 122, p959 * 40, p959 * 20);
    v1307.restore();
    f89(v1307, p961[2], p961[1], p959 * 4);
    v1307.beginPath();
    v1307.lineCap = "round";
    v1307.lineJoin = "round";
    v1307.moveTo(p959 * 123, p959 * 70.375);
    v1307.bezierCurveTo(p959 * 115, p959 * 99.375, p959 * 119, p959 * 85.375, p959 * 115, p959 * 100.375);
    v1307.bezierCurveTo(p959 * 112, p959 * 116.375, p959 * 117, p959 * 109.375, p959 * 131, p959 * 100.375);
    v1307.bezierCurveTo(p959 * 131, p959 * 83.375, p959 * 131, p959 * 83.375, p959 * 131, p959 * 66.375);
    v1307.closePath();
    f89(v1307, p961[2], p961[1], p959 * 4);
    v1307.beginPath();
    v1307.lineCap = "round";
    v1307.lineJoin = "round";
    v1307.moveTo(p959 * 11, p959 * 68.375);
    v1307.bezierCurveTo(p959 * 11.166656494140625, p959 * 84.375, p959 * 9, p959 * 99.375, p959 * 10, p959 * 100.375);
    v1307.bezierCurveTo(p959 * 35, p959 * 113.375, p959 * 27, p959 * 110.375, p959 * 25, p959 * 95.375);
    v1307.bezierCurveTo(p959 * 16, p959 * 68.375, p959 * 17, p959 * 69.375, p959 * 17, p959 * 68.375);
    v1307.closePath();
    f89(v1307, p961[2], p961[1], p959 * 4);
    v1307.beginPath();
    v1307.lineCap = "round";
    v1307.lineJoin = "round";
    v1307.moveTo(p959 * 46, p959 * 32.375);
    v1307.bezierCurveTo(p959 * 43, p959 * 8.375, p959 * 45, p959 * 7.375, p959 * 56, p959 * 6.375);
    v1307.bezierCurveTo(p959 * 105, p959 * 4.375, p959 * 102, p959 * 6.375, p959 * 97, p959 * 32.375);
    v1307.bezierCurveTo(p959 * 138, p959 * 43.375, p959 * 133, p959 * 45.375, p959 * 133, p959 * 58.375);
    v1307.bezierCurveTo(p959 * 133, p959 * 85.375, p959 * 125, p959 * 74.375, p959 * 111, p959 * 70.375);
    v1307.bezierCurveTo(p959 * 70, p959 * 69.875, p959 * 29, p959 * 69.375, p959 * 29, p959 * 69.375);
    v1307.bezierCurveTo(p959 * 7, p959 * 84.375, p959 * 7, p959 * 70.375, p959 * 7, p959 * 59.375);
    v1307.bezierCurveTo(p959 * 6, p959 * 28.375, p959 * 32, p959 * 39.375, p959 * 44, p959 * 32.375);
    v1307.closePath();
    f89(v1307, p961[2], p961[1], p959 * 4);
    f94(v1307, p959 * 71, p959 * 44.375, p959 * 16.55294535724685);
    f89(v1307, p961[2], p961[1], p959 * 4);
    f94(v1307, p959 * 71, p959 * 43.70831298828125, p959 * 8.94427190999916);
    f89(v1307, p961[2], p961[1], p959 * 4);
    return v1306;
  }
  function f237(p962, p963, p964) {
    var v1308 = document.createElement("canvas");
    var v1309 = v1308.getContext("2d");
    v1308.width = p962 * 89;
    v1308.height = p962 * 89;
    v1309.save();
    v1309.translate(p962 * 44.5, p962 * 44.5);
    f92(v1309, 6, p962 * 40, p962 * 10);
    v1309.restore();
    f89(v1309, p964[0], p964[1], p962 * 5);
    v1309.save();
    v1309.translate(p962 * 44.5, p962 * 44.5);
    f92(v1309, 6, p962 * 25.11521001172521, p962 * 10);
    v1309.restore();
    f89(v1309, p964[2], p964[3], p962 * 5);
    return v1308;
  }
  function f238() {
    var v1310 = 1;
    new Date().getTime();
    f233();
    (function () {
      ⵠΔ[1063] = f123(1, [{
        f: f276,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1064] = ⵠΔ[1063];
      ⵠΔ[1231] = [];
      ⵠΔ[1231][0] = ᐃΔ.ⵠⲆΔⵠᐃⲆΔ;
      ⵠΔ[1231][1] = ᐃΔ.ΔᐃᐃΔΔⵠΔ;
      ⵠΔ[1231][2] = ᐃΔ.ⵠⵠΔⵠⲆⵠΔ;
      ⵠΔ[1232] = ⵠΔ[1231];
      ⵠΔ[1248] = [];
      ⵠΔ[1248][0] = ᐃΔ.ΔⲆΔⵠΔΔⲆ;
      ⵠΔ[1248][1] = ᐃΔ.ΔⵠΔΔⵠᐃⵠ;
      ⵠΔ[1248][2] = ᐃΔ.ᐃⵠᐃᐃⲆⲆⵠ;
      ⵠΔ[1249] = ⵠΔ[1248];
      ⵠΔ[1263] = [];
      ⵠΔ[1263][0] = ᐃΔ.ⵠᐃⲆᐃⵠⲆⲆ;
      ⵠΔ[1263][1] = ᐃΔ.ⲆⲆⵠΔⵠᐃΔ;
      ⵠΔ[1263][2] = ᐃΔ.ⲆⵠᐃⵠΔᐃⵠ;
      ⵠΔ[1264] = ⵠΔ[1263];
      ⵠΔ[1482] = [];
      ⵠΔ[1482][0] = ᐃΔ.ⲆⲆⲆΔᐃⵠⲆ;
      ⵠΔ[1482][1] = ᐃΔ.ⵠⲆΔⵠᐃΔⲆ;
      ⵠΔ[1482][2] = ᐃΔ.ⲆᐃᐃᐃⵠΔᐃ;
      ⵠΔ[1483] = ⵠΔ[1482];
      ⵠΔ[1241] = [];
      ⵠΔ[1241][0] = ᐃΔ.ᐃΔᐃΔⵠⵠⵠ;
      ⵠΔ[1241][1] = ᐃΔ.ΔⵠᐃᐃᐃⲆᐃ;
      ⵠΔ[1241][2] = ᐃΔ.ⲆΔᐃⵠⵠⵠⲆ;
      ⵠΔ[1250] = ⵠΔ[1241];
      ⵠΔ[1336] = [];
      ⵠΔ[1336][0] = ᐃΔ.ΔⲆⲆⲆⵠΔⲆ;
      ⵠΔ[1336][1] = ᐃΔ.ᐃⲆΔᐃⲆᐃⵠ;
      ⵠΔ[1336][2] = ᐃΔ.ⵠⵠᐃⵠΔⲆⲆ;
      ⵠΔ[1337] = ⵠΔ[1336];
      ⵠΔ[1335] = ⵠΔ[1336];
      ⵠΔ[961] = [];
      ⵠΔ[961][0] = ᐃΔ.ᐃⵠᐃⲆⲆⵠᐃᐃⲆ;
      ⵠΔ[961][1] = ᐃΔ.ΔⵠⲆΔⲆⵠᐃΔⲆ;
      ⵠΔ[961][2] = ᐃΔ.ΔΔΔⲆⲆⵠΔΔⲆ;
      ⵠΔ[962] = ⵠΔ[961];
      ⵠΔ[963] = ⵠΔ[961];
      ⵠΔ[1339] = [];
      ⵠΔ[1339][0] = ᐃΔ.ⲆⲆⲆΔΔⲆᐃ;
      ⵠΔ[1339][1] = ᐃΔ.ᐃⲆΔⵠⲆⵠⵠ;
      ⵠΔ[1339][2] = ᐃΔ.ᐃΔΔⵠⵠⲆⵠ;
      ⵠΔ[1340] = ⵠΔ[1339];
      ⵠΔ[1338] = ⵠΔ[1339];
      ⵠΔ[534] = [];
      ⵠΔ[534][0] = ᐃΔ.ᐃⲆⲆΔΔΔⵠ;
      ⵠΔ[534][1] = ᐃΔ.ⲆⵠⲆⲆᐃᐃᐃ;
      ⵠΔ[534][2] = ᐃΔ.ⵠⲆⲆⵠᐃᐃᐃ;
      ⵠΔ[536] = ⵠΔ[534];
      ⵠΔ[535] = ⵠΔ[534];
      ⵠΔ[1624] = [];
      ⵠΔ[1624][0] = ᐃΔ.ΔⲆᐃⵠΔⲆᐃΔᐃ;
      ⵠΔ[1624][1] = ᐃΔ.ⵠΔᐃⵠᐃⲆΔᐃᐃ;
      ⵠΔ[1624][2] = ᐃΔ.ᐃⲆΔⲆΔΔΔᐃᐃ;
      ⵠΔ[1625] = ⵠΔ[1624];
      ⵠΔ[1754] = [];
      ⵠΔ[1754][0] = ᐃΔ.ⵠⵠᐃᐃⵠ;
      ⵠΔ[1754][1] = ᐃΔ.ⵠⵠᐃᐃⵠ;
      ⵠΔ[1754][2] = ᐃΔ.ⵠⵠᐃᐃⵠ;
      ⵠΔ[1753] = ⵠΔ[1754];
      ⵠΔ[1750] = [];
      ⵠΔ[1750][0] = ᐃΔ.ᐃΔⲆⵠⵠ;
      ⵠΔ[1750][1] = ᐃΔ.ᐃΔⲆⵠⵠ;
      ⵠΔ[1750][2] = ᐃΔ.ᐃΔⲆⵠⵠ;
      ⵠΔ[1749] = ⵠΔ[1750];
      ⵠΔ[1621] = [];
      ⵠΔ[1621][0] = ᐃΔ.ΔⲆⵠᐃⵠⲆᐃΔᐃ;
      ⵠΔ[1621][1] = ᐃΔ.ΔⵠΔΔᐃᐃᐃᐃⲆ;
      ⵠΔ[1621][2] = ᐃΔ.ᐃⲆⵠᐃⵠⵠⵠΔᐃ;
      ⵠΔ[1623] = ⵠΔ[1621];
      ⵠΔ[1622] = ⵠΔ[1621];
      ⵠΔ[761] = [];
      ⵠΔ[761][0] = ᐃΔ.ᐃΔⵠᐃⵠᐃⵠⲆⵠ;
      ⵠΔ[761][1] = ᐃΔ.ⵠⵠⲆΔⵠⵠᐃᐃⲆ;
      ⵠΔ[761][2] = ᐃΔ.ⲆᐃᐃⵠⲆᐃᐃⵠⵠ;
      ⵠΔ[763] = ⵠΔ[761];
      ⵠΔ[762] = ⵠΔ[761];
      ⵠΔ[1494] = [];
      ⵠΔ[1494][0] = ᐃΔ.ⵠΔⵠΔᐃᐃⵠΔᐃ;
      ⵠΔ[1494][1] = ᐃΔ.ⲆⲆΔᐃΔΔᐃΔⵠ;
      ⵠΔ[1494][2] = ᐃΔ.ⵠᐃⲆⵠΔᐃΔΔⲆ;
      ⵠΔ[1495] = ⵠΔ[1494];
      ⵠΔ[1496] = ⵠΔ[1494];
      ⵠΔ[764] = [];
      ⵠΔ[764][0] = ᐃΔ.ᐃᐃⲆΔᐃᐃΔⲆⵠ;
      ⵠΔ[764][1] = ᐃΔ.ⵠΔⵠⵠΔΔⲆⲆⵠ;
      ⵠΔ[764][2] = ᐃΔ.ᐃᐃⲆᐃⲆᐃᐃⵠⲆ;
      ⵠΔ[766] = ⵠΔ[764];
      ⵠΔ[765] = ⵠΔ[764];
      ⵠΔ[1497] = [];
      ⵠΔ[1497][0] = ᐃΔ.ⲆⵠΔᐃⲆⵠᐃⵠⲆ;
      ⵠΔ[1497][1] = ᐃΔ.ⲆⵠⲆᐃᐃⵠᐃᐃᐃ;
      ⵠΔ[1497][2] = ᐃΔ.ⲆⵠⵠᐃᐃΔᐃΔΔ;
      ⵠΔ[1498] = ⵠΔ[1497];
      ⵠΔ[1499] = ⵠΔ[1497];
      ⵠΔ[767] = [];
      ⵠΔ[767][0] = ᐃΔ.ᐃΔⲆᐃᐃᐃΔᐃΔ;
      ⵠΔ[767][1] = ᐃΔ.ΔⲆᐃⲆΔᐃⵠⲆⵠ;
      ⵠΔ[767][2] = ᐃΔ.ⲆⵠⲆᐃΔΔⲆᐃᐃ;
      ⵠΔ[769] = ⵠΔ[767];
      ⵠΔ[768] = ⵠΔ[767];
      ⵠΔ[1500] = [];
      ⵠΔ[1500][0] = ᐃΔ.ⵠⲆⲆᐃᐃⵠᐃⵠΔ;
      ⵠΔ[1500][1] = ᐃΔ.ⵠⵠᐃᐃΔΔⵠᐃΔ;
      ⵠΔ[1500][2] = ᐃΔ.ΔᐃΔⵠᐃⲆⵠΔΔ;
      ⵠΔ[1501] = ⵠΔ[1500];
      ⵠΔ[1502] = ⵠΔ[1500];
      ⵠΔ[770] = [];
      ⵠΔ[770][0] = ᐃΔ.ⵠⵠΔΔⵠᐃⵠⲆᐃ;
      ⵠΔ[770][1] = ᐃΔ.ΔⵠᐃⵠᐃᐃⲆᐃⵠ;
      ⵠΔ[770][2] = ᐃΔ.ⵠⵠᐃᐃⵠⲆⵠᐃᐃ;
      ⵠΔ[772] = ⵠΔ[770];
      ⵠΔ[771] = ⵠΔ[770];
      ⵠΔ[1503] = [];
      ⵠΔ[1503][0] = ᐃΔ.ᐃⲆⵠⵠⲆΔᐃⵠΔ;
      ⵠΔ[1503][1] = ᐃΔ.ⲆⲆΔⲆⵠΔⲆΔΔ;
      ⵠΔ[1503][2] = ᐃΔ.ᐃΔⲆⵠΔᐃⵠⵠⵠ;
      ⵠΔ[1504] = ⵠΔ[1503];
      ⵠΔ[1505] = ⵠΔ[1503];
      ⵠΔ[773] = [];
      ⵠΔ[773][0] = ᐃΔ.ᐃⲆⲆⲆᐃⵠΔΔᐃ;
      ⵠΔ[773][1] = ᐃΔ.ΔΔΔᐃΔⵠⲆΔᐃ;
      ⵠΔ[773][2] = ᐃΔ.ΔΔⲆⲆΔΔΔᐃᐃ;
      ⵠΔ[775] = ⵠΔ[773];
      ⵠΔ[774] = ⵠΔ[773];
      ⵠΔ[1506] = [];
      ⵠΔ[1506][0] = ᐃΔ.ᐃⵠⵠⵠΔⵠᐃⵠⲆ;
      ⵠΔ[1506][1] = ᐃΔ.ΔᐃⲆⲆᐃⵠⵠⲆΔ;
      ⵠΔ[1506][2] = ᐃΔ.ⲆᐃᐃΔⲆⲆⵠᐃⲆ;
      ⵠΔ[1507] = ⵠΔ[1506];
      ⵠΔ[1508] = ⵠΔ[1506];
      ⵠΔ[776] = [];
      ⵠΔ[776][0] = ᐃΔ.ΔⵠᐃⵠᐃΔΔⲆⲆ;
      ⵠΔ[776][1] = ᐃΔ.ΔΔⲆΔⲆᐃⵠⲆΔ;
      ⵠΔ[776][2] = ᐃΔ.ᐃᐃᐃᐃⲆⵠᐃᐃᐃ;
      ⵠΔ[778] = ⵠΔ[776];
      ⵠΔ[777] = ⵠΔ[776];
      ⵠΔ[1509] = [];
      ⵠΔ[1509][0] = ᐃΔ.ᐃᐃΔⵠΔᐃⲆΔⲆ;
      ⵠΔ[1509][1] = ᐃΔ.ΔⵠⵠᐃⵠⵠⵠⵠΔ;
      ⵠΔ[1509][2] = ᐃΔ.ⲆⲆⵠᐃᐃΔⲆᐃⲆ;
      ⵠΔ[1510] = ⵠΔ[1509];
      ⵠΔ[1511] = ⵠΔ[1509];
      ⵠΔ[779] = [];
      ⵠΔ[779][0] = ᐃΔ.ᐃⲆΔᐃⵠⲆᐃᐃⲆ;
      ⵠΔ[779][1] = ᐃΔ.ΔΔᐃΔᐃⲆⲆΔⲆ;
      ⵠΔ[779][2] = ᐃΔ.ⵠⵠᐃⲆΔᐃᐃᐃᐃ;
      ⵠΔ[781] = ⵠΔ[779];
      ⵠΔ[780] = ⵠΔ[779];
      ⵠΔ[1512] = [];
      ⵠΔ[1512][0] = ᐃΔ.ᐃⲆΔΔⵠⵠΔⵠᐃ;
      ⵠΔ[1512][1] = ᐃΔ.ⵠᐃᐃⲆΔΔⲆᐃⲆ;
      ⵠΔ[1512][2] = ᐃΔ.ᐃⲆⲆΔΔᐃΔΔⲆ;
      ⵠΔ[1513] = ⵠΔ[1512];
      ⵠΔ[1514] = ⵠΔ[1512];
      ⵠΔ[1675] = [];
      ⵠΔ[1675][0] = ᐃΔ.ⵠᐃᐃⲆⵠΔⵠⲆᐃ;
      ⵠΔ[1675][1] = ᐃΔ.ⵠⵠΔⵠᐃⲆᐃᐃᐃ;
      ⵠΔ[1675][2] = ᐃΔ.ᐃⲆⲆⲆⲆⵠΔⲆⲆ;
      ⵠΔ[1676] = ⵠΔ[1675];
      ⵠΔ[1674] = ⵠΔ[1675];
      ⵠΔ[1678] = [];
      ⵠΔ[1678][0] = ᐃΔ.ᐃⵠⲆⲆⵠΔᐃᐃᐃ;
      ⵠΔ[1678][1] = ᐃΔ.ⵠᐃᐃᐃⵠΔΔᐃΔ;
      ⵠΔ[1678][2] = ᐃΔ.ΔⲆᐃᐃⵠⲆⵠᐃⵠ;
      ⵠΔ[1679] = ⵠΔ[1678];
      ⵠΔ[1677] = ⵠΔ[1678];
      ⵠΔ[1681] = [];
      ⵠΔ[1681][0] = ᐃΔ.ⲆΔⲆᐃⵠΔⲆΔΔ;
      ⵠΔ[1681][1] = ᐃΔ.ⲆⵠᐃᐃⵠΔⵠΔΔ;
      ⵠΔ[1681][2] = ᐃΔ.ⲆΔⵠᐃⵠᐃᐃⵠⲆ;
      ⵠΔ[1682] = ⵠΔ[1681];
      ⵠΔ[1680] = ⵠΔ[1681];
      ⵠΔ[1684] = [];
      ⵠΔ[1684][0] = ᐃΔ.ΔΔΔᐃⲆΔⵠⵠΔ;
      ⵠΔ[1684][1] = ᐃΔ.ΔⲆⵠᐃⲆⵠΔⵠⵠ;
      ⵠΔ[1684][2] = ᐃΔ.ΔⲆⵠΔΔⲆΔΔⲆ;
      ⵠΔ[1685] = ⵠΔ[1684];
      ⵠΔ[1683] = ⵠΔ[1684];
      ⵠΔ[1687] = [];
      ⵠΔ[1687][0] = ᐃΔ.ᐃΔⲆⲆΔⲆΔΔⲆ;
      ⵠΔ[1687][1] = ᐃΔ.ⲆⵠⵠᐃΔΔᐃⵠⲆ;
      ⵠΔ[1687][2] = ᐃΔ.ΔⲆΔⲆⲆᐃⲆⵠΔ;
      ⵠΔ[1688] = ⵠΔ[1687];
      ⵠΔ[1686] = ⵠΔ[1687];
      ⵠΔ[1690] = [];
      ⵠΔ[1690][0] = ᐃΔ.ΔᐃⲆⵠⵠⲆΔᐃⲆ;
      ⵠΔ[1690][1] = ᐃΔ.ⲆⵠᐃⵠⵠᐃᐃⵠⲆ;
      ⵠΔ[1690][2] = ᐃΔ.ΔⵠⵠᐃⵠⵠᐃⵠⲆ;
      ⵠΔ[1691] = ⵠΔ[1690];
      ⵠΔ[1689] = ⵠΔ[1690];
      ⵠΔ[1693] = [];
      ⵠΔ[1693][0] = ᐃΔ.ⲆⵠΔⲆⲆⵠⵠⲆΔ;
      ⵠΔ[1693][1] = ᐃΔ.ᐃⵠΔᐃΔⲆⲆᐃⵠ;
      ⵠΔ[1693][2] = ᐃΔ.ΔⲆⲆⵠᐃᐃᐃᐃᐃ;
      ⵠΔ[1694] = ⵠΔ[1693];
      ⵠΔ[1692] = ⵠΔ[1693];
      ⵠΔ[1696] = [];
      ⵠΔ[1696][0] = ᐃΔ.ΔΔⲆΔⵠⵠᐃΔᐃ;
      ⵠΔ[1696][1] = ᐃΔ.ΔⵠᐃⲆⵠⲆⲆΔⵠ;
      ⵠΔ[1696][2] = ᐃΔ.ⵠΔΔⲆⵠΔΔⵠᐃ;
      ⵠΔ[1697] = ⵠΔ[1696];
      ⵠΔ[1695] = ⵠΔ[1696];
      ⵠΔ[1699] = [];
      ⵠΔ[1699][0] = ᐃΔ.ΔΔᐃⵠⲆᐃⲆⵠΔ;
      ⵠΔ[1699][1] = ᐃΔ.ⲆⲆⲆΔᐃΔⵠᐃⵠ;
      ⵠΔ[1699][2] = ᐃΔ.ᐃΔΔᐃᐃᐃΔᐃΔ;
      ⵠΔ[1700] = ⵠΔ[1699];
      ⵠΔ[1698] = ⵠΔ[1699];
      ⵠΔ[1702] = [];
      ⵠΔ[1702][0] = ᐃΔ.ⲆΔⵠⲆΔΔⵠⲆΔ;
      ⵠΔ[1702][1] = ᐃΔ.ⲆΔⵠᐃⵠⵠᐃⵠⵠ;
      ⵠΔ[1702][2] = ᐃΔ.ⲆⲆⵠᐃⵠⲆⲆⵠᐃ;
      ⵠΔ[1703] = ⵠΔ[1702];
      ⵠΔ[1701] = ⵠΔ[1702];
      ⵠΔ[1705] = [];
      ⵠΔ[1705][0] = ᐃΔ.ΔᐃⲆⲆⵠΔⵠⲆⵠ;
      ⵠΔ[1705][1] = ᐃΔ.ΔᐃΔⲆΔᐃⲆⵠⵠ;
      ⵠΔ[1705][2] = ᐃΔ.ⲆⲆⵠⲆⵠⲆⲆᐃᐃ;
      ⵠΔ[1706] = ⵠΔ[1705];
      ⵠΔ[1704] = ⵠΔ[1705];
      ⵠΔ[1708] = [];
      ⵠΔ[1708][0] = ᐃΔ.ΔᐃᐃⲆⵠᐃᐃⵠΔ;
      ⵠΔ[1708][1] = ᐃΔ.ⵠΔᐃᐃⵠⵠΔΔⵠ;
      ⵠΔ[1708][2] = ᐃΔ.ᐃⵠⵠⵠᐃⵠΔⲆⲆ;
      ⵠΔ[1709] = ⵠΔ[1708];
      ⵠΔ[1707] = ⵠΔ[1708];
      ⵠΔ[1711] = [];
      ⵠΔ[1711][0] = ᐃΔ.ΔⵠΔᐃⲆᐃᐃᐃᐃ;
      ⵠΔ[1711][1] = ᐃΔ.ᐃΔΔΔⲆΔΔⲆⵠ;
      ⵠΔ[1711][2] = ᐃΔ.ᐃⲆⲆΔΔⲆⵠⲆΔ;
      ⵠΔ[1712] = ⵠΔ[1711];
      ⵠΔ[1710] = ⵠΔ[1711];
      ⵠΔ[1714] = [];
      ⵠΔ[1714][0] = ᐃΔ.ⲆⵠⲆⲆΔⵠᐃⲆⲆ;
      ⵠΔ[1714][1] = ᐃΔ.ΔⵠⵠᐃⵠⵠⵠΔⵠ;
      ⵠΔ[1714][2] = ᐃΔ.ⲆⲆΔⲆⲆΔΔⵠⲆ;
      ⵠΔ[1715] = ⵠΔ[1714];
      ⵠΔ[1713] = ⵠΔ[1714];
      ⵠΔ[1717] = [];
      ⵠΔ[1717][0] = ᐃΔ.ⵠΔⲆⵠⲆⲆΔΔⵠ;
      ⵠΔ[1717][1] = ᐃΔ.ᐃᐃⵠⵠΔΔᐃⵠⲆ;
      ⵠΔ[1717][2] = ᐃΔ.ΔⵠᐃⲆᐃᐃΔᐃⲆ;
      ⵠΔ[1718] = ⵠΔ[1717];
      ⵠΔ[1716] = ⵠΔ[1717];
      ⵠΔ[1630] = [];
      ⵠΔ[1630][0] = ᐃΔ.ⵠⲆᐃΔΔΔⵠⵠⲆ;
      ⵠΔ[1630][1] = ᐃΔ.ⲆᐃⲆᐃⲆΔⲆᐃΔ;
      ⵠΔ[1630][2] = ᐃΔ.ⲆΔᐃᐃᐃᐃᐃⲆⲆ;
      ⵠΔ[1631] = ⵠΔ[1630];
      ⵠΔ[1629] = ⵠΔ[1630];
      ⵠΔ[1633] = [];
      ⵠΔ[1633][0] = ᐃΔ.ᐃΔᐃⲆⲆᐃΔⵠⵠ;
      ⵠΔ[1633][1] = ᐃΔ.ᐃⵠᐃΔᐃᐃΔⵠΔ;
      ⵠΔ[1633][2] = ᐃΔ.ΔᐃᐃΔⲆⲆᐃⲆᐃ;
      ⵠΔ[1634] = ⵠΔ[1633];
      ⵠΔ[1632] = ⵠΔ[1633];
      ⵠΔ[1636] = [];
      ⵠΔ[1636][0] = ᐃΔ.ⵠᐃⲆᐃΔⵠΔΔⲆ;
      ⵠΔ[1636][1] = ᐃΔ.ⵠⲆⲆᐃΔΔⲆᐃΔ;
      ⵠΔ[1636][2] = ᐃΔ.ⵠⵠⲆΔⵠΔᐃΔⵠ;
      ⵠΔ[1637] = ⵠΔ[1636];
      ⵠΔ[1635] = ⵠΔ[1636];
      ⵠΔ[1639] = [];
      ⵠΔ[1639][0] = ᐃΔ.ⵠⵠᐃⲆΔⵠⲆⲆᐃ;
      ⵠΔ[1639][1] = ᐃΔ.ⵠΔⵠⲆΔΔᐃΔⲆ;
      ⵠΔ[1639][2] = ᐃΔ.ⵠⵠᐃᐃⲆⵠᐃⵠΔ;
      ⵠΔ[1640] = ⵠΔ[1639];
      ⵠΔ[1638] = ⵠΔ[1639];
      ⵠΔ[1642] = [];
      ⵠΔ[1642][0] = ᐃΔ.ᐃᐃⵠΔΔⲆⲆΔΔ;
      ⵠΔ[1642][1] = ᐃΔ.ᐃΔⵠΔⲆΔⲆⵠᐃ;
      ⵠΔ[1642][2] = ᐃΔ.ΔⲆΔⲆΔⵠΔᐃⵠ;
      ⵠΔ[1643] = ⵠΔ[1642];
      ⵠΔ[1641] = ⵠΔ[1642];
      ⵠΔ[1645] = [];
      ⵠΔ[1645][0] = ᐃΔ.ⵠΔΔᐃⵠⲆⵠⲆᐃ;
      ⵠΔ[1645][1] = ᐃΔ.ᐃⵠᐃⵠⵠⵠᐃΔᐃ;
      ⵠΔ[1645][2] = ᐃΔ.ⵠᐃⲆⲆⲆᐃⵠᐃⲆ;
      ⵠΔ[1646] = ⵠΔ[1645];
      ⵠΔ[1644] = ⵠΔ[1645];
      ⵠΔ[1618] = [];
      ⵠΔ[1618][0] = ᐃΔ.ⲆΔΔᐃⲆᐃΔΔᐃ;
      ⵠΔ[1618][1] = ᐃΔ.ⵠΔΔⲆⵠΔⵠΔⲆ;
      ⵠΔ[1618][2] = ᐃΔ.ΔⵠΔⵠᐃΔᐃΔⵠ;
      ⵠΔ[1620] = ⵠΔ[1618];
      ⵠΔ[1619] = ⵠΔ[1618];
      ⵠΔ[1542] = [];
      ⵠΔ[1542][0] = ᐃΔ.ΔᐃⵠᐃΔⲆΔ;
      ⵠΔ[1542][1] = ᐃΔ.ⲆᐃⵠⵠⲆᐃⵠ;
      ⵠΔ[1542][2] = ᐃΔ.ⵠⵠⵠᐃⵠΔⵠ;
      ⵠΔ[1543] = ⵠΔ[1542];
      ⵠΔ[v594.ⵠⲆⵠᐃⲆⲆΔⲆⲆ] = ⵠΔ[1542];
      ⵠΔ[1089] = f123(1, [{
        f: f97,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
      }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1090] = ⵠΔ[1089];
      ⵠΔ[1099] = f123(1, [{
        f: f257,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1100] = ⵠΔ[1099];
      ⵠΔ[863] = f123(1, [{
        f: f121,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }, {
        f: f119,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }, {
        f: f126,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[862] = ⵠΔ[863];
      ⵠΔ[858] = f123(1, [{
        f: f125,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#A89F67", "#9E8456"]
      }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1049] = f123(1, [{
        f: f219,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
      }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1048] = ⵠΔ[1049];
      ⵠΔ[850] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#A89F67", "#9E8456"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[851] = ⵠΔ[850];
      ⵠΔ[422] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#493d36", "#332b28"]
      }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[394] = ⵠΔ[422];
      ⵠΔ[1057] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c67933", "#b17238"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1058] = ⵠΔ[1057];
      ⵠΔ[1083] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e8e8e8", "#bbbbbb"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1084] = ⵠΔ[1083];
      ⵠΔ[1094] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#328a56", "#449573"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1095] = ⵠΔ[1094];
      ⵠΔ[1225] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c98e2f", "#a36b11"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1226] = ⵠΔ[1225];
      ⵠΔ[1227] = ⵠΔ[1225];
      ⵠΔ[1242] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#13a56d", "#098a58"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1243] = ⵠΔ[1242];
      ⵠΔ[1244] = ⵠΔ[1242];
      ⵠΔ[1257] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3a8214", "#4a9c1e"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1258] = ⵠΔ[1257];
      ⵠΔ[1259] = ⵠΔ[1257];
      ⵠΔ[1235] = f123(1, [{
        f: f153,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#b22419", "#99110e"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1236] = ⵠΔ[1235];
      ⵠΔ[1237] = ⵠΔ[1235];
      ⵠΔ[420] = f123(1, [{
        f: f133,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 7,
        c: ["#4d2d14", "#432516"]
      }, {
        f: f124,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 7,
        c: ["#efd435", "#ec8d35", "#e96132"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[413] = ⵠΔ[420];
      ⵠΔ[439] = f123(1, [{
        f: f120,
        x: -2,
        y: -1,
        a: 1,
        r: -Math.PI / 7,
        c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
      }, {
        f: f124,
        x: -2,
        y: -1,
        a: 1,
        r: -Math.PI / 7,
        c: ["#efd435", "#ec8d35", "#e96132"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[438] = ⵠΔ[439];
      ⵠΔ[1109] = f123(1, [{
        f: f138,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
      }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1114] = f123(1, [{
        f: f155,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1078] = f123(1, [{
        f: f141,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[371] = f123(1, [{
        f: f140,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[402] = f123(1, [{
        f: f150,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[403] = f123(1, [{
        f: f154,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[593] = f123(1, [{
        f: f148,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[424] = f123(1, [{
        f: f143,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[423] = f123(1, [{
        f: f143,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[368] = f123(1, [{
        f: f143,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[407] = f123(1, [{
        f: f143,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[596] = f123(1, [{
        f: f143,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1293] = [];
      ⵠΔ[1293][0] = ᐃΔ.ᐃⵠⵠΔⲆⵠᐃ;
      ⵠΔ[1293][1] = ᐃΔ.ⵠⲆΔⵠⵠΔᐃ;
      ⵠΔ[1293][2] = ᐃΔ.ⵠⲆΔⵠᐃⲆⲆ;
      ⵠΔ[1295] = ⵠΔ[1293];
      ⵠΔ[1294] = ⵠΔ[1293];
      ⵠΔ[426] = f123(1, [{
        f: f161,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#252B28", "#58645F", "#75827D"]
      }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[408] = f123(1, [{
        f: f176,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#282823", "#877c2d", "#c4bc51"]
      }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[409] = f123(1, [{
        f: f168,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#232828", "#3fc9c9", "#74ede6"]
      }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[427] = f123(1, [{
        f: f133,
        x: 0,
        y: -5,
        a: 1,
        r: Math.PI / 2.5,
        c: ["#4d2d14", "#432516"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[1079] = ⵠΔ[1078];
      ⵠΔ[364] = ⵠΔ[371];
      ⵠΔ[400] = ⵠΔ[402];
      ⵠΔ[401] = ⵠΔ[403];
      ⵠΔ[594] = ⵠΔ[593];
      ⵠΔ[425] = ⵠΔ[424];
      ⵠΔ[366] = ⵠΔ[423];
      ⵠΔ[406] = ⵠΔ[368];
      ⵠΔ[367] = ⵠΔ[407];
      ⵠΔ[598] = ⵠΔ[596];
      ⵠΔ[387] = f123(1, [{
        f: f115,
        x: 0,
        y: 0,
        a: 1,
        r: 0
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[421] = f123(1, [{
        f: f104,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
      }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[372] = ⵠΔ[421];
      ⵠΔ[440] = f123(1, [{
        f: f205,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[373] = ⵠΔ[440];
      ⵠΔ[442] = f123(1, [{
        f: f181,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[443] = ⵠΔ[442];
      ⵠΔ[630] = f123(1, [{
        f: f205,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[631] = ⵠΔ[630];
      ⵠΔ[441] = f123(1, [{
        f: f184,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[375] = ⵠΔ[441];
      ⵠΔ[428] = f123(1, [{
        f: f204,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
      }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[429] = ⵠΔ[428];
      ⵠΔ[430] = f123(1, [{
        f: f214,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[431] = ⵠΔ[430];
      ⵠΔ[473] = f123(1, [{
        f: f211,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[474] = ⵠΔ[473];
      ⵠΔ[475] = f123(1, [{
        f: f211,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[476] = ⵠΔ[475];
      ⵠΔ[472] = f123(1, [{
        f: f220,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[471] = ⵠΔ[472];
      ⵠΔ[633] = f123(1, [{
        f: f220,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[634] = ⵠΔ[633];
      ⵠΔ[446] = f123(1, [{
        f: f197,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[378] = ⵠΔ[446];
      ⵠΔ[483] = f123(1, [{
        f: f188,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[482] = ⵠΔ[483];
      ⵠΔ[637] = f123(1, [{
        f: f188,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[636] = ⵠΔ[637];
      ⵠΔ[486] = f123(1, [{
        f: f177,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[485] = ⵠΔ[486];
      ⵠΔ[489] = f123(1, [{
        f: f189,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[488] = ⵠΔ[489];
      ⵠΔ[448] = f123(1, [{
        f: f203,
        x: 0,
        y: 2,
        a: 1,
        r: 0,
        c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[449] = ⵠΔ[448];
      ⵠΔ[411] = f123(1, [{
        f: f117,
        x: 0,
        y: -3,
        a: 1,
        r: 0,
        c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
      }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[434] = f123(1, [{
        f: f117,
        x: 0,
        y: -3,
        a: 1,
        r: 0,
        c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
      }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[436] = ⵠΔ[434];
      ⵠΔ[416] = f123(1, [{
        f: f127,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#cec0c4", "#ffffff", "#6d6768"]
      }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[651] = f123(1, [{
        f: f127,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#d4e9ec", "#37b1d7", "#506c71"]
      }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[653] = ⵠΔ[651];
      ⵠΔ[479] = f123(1, [{
        f: f165,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#ef96be", "#ffffff"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[1490] = f123(1, [{
        f: f165,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#55423e", "#ffffff"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[280] = f123(1, [{
        f: f187,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[281] = f123(1, [{
        f: f187,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[843] = f123(1, [{
        f: f165,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#201851", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[504] = f123(1, [{
        f: f165,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#231f20", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[643] = f123(1, [{
        f: f165,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#ffffff", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[480] = f123(1, [{
        f: f178,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[481] = ⵠΔ[480];
      ⵠΔ[492] = f123(1, [{
        f: f195,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[491] = ⵠΔ[492];
      ⵠΔ[640] = f123(1, [{
        f: f175,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[641] = ⵠΔ[640];
      ⵠΔ[1156] = f123(1, [{
        f: f129,
        x: 0,
        y: 5,
        a: 1,
        r: 0,
        c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1157] = ⵠΔ[1156];
      ⵠΔ[1158] = f123(1, [{
        f: f135,
        x: 0,
        y: 5,
        a: 1,
        r: 0,
        c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1159] = ⵠΔ[1158];
      ⵠΔ[414] = f123(1, [{
        f: f128,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#ffffff", "#cec0c4"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[415] = ⵠΔ[414];
      ⵠΔ[503] = [];
      ⵠΔ[503][0] = ᐃΔ.ⵠᐃᐃⵠΔΔⵠ;
      ⵠΔ[503][1] = ᐃΔ.ΔᐃⲆⲆΔⵠΔ;
      ⵠΔ[503][2] = ᐃΔ.ᐃᐃⲆΔᐃⲆᐃ;
      ⵠΔ[478] = ⵠΔ[503];
      ⵠΔ[1251] = [];
      ⵠΔ[1251][0] = ᐃΔ.ΔᐃⵠᐃⵠΔΔ;
      ⵠΔ[1251][1] = ᐃΔ.ⲆΔᐃⲆⵠⲆΔ;
      ⵠΔ[1251][2] = ᐃΔ.ΔⵠⲆᐃᐃΔᐃ;
      ⵠΔ[1253] = ⵠΔ[1251];
      ⵠΔ[1252] = ⵠΔ[1251];
      ⵠΔ[1254] = [];
      ⵠΔ[1254][0] = ᐃΔ.ⵠⵠᐃᐃΔᐃᐃ;
      ⵠΔ[1254][1] = ᐃΔ.ᐃⵠᐃⲆᐃⲆΔ;
      ⵠΔ[1254][2] = ᐃΔ.ⵠⵠᐃⵠⵠⲆⵠ;
      ⵠΔ[1256] = ⵠΔ[1254];
      ⵠΔ[1255] = ⵠΔ[1254];
      ⵠΔ[1486] = [];
      ⵠΔ[1486][0] = ᐃΔ.ᐃⵠⲆⲆⲆΔⲆ;
      ⵠΔ[1486][1] = ᐃΔ.ᐃⵠⲆⲆⲆΔⲆ;
      ⵠΔ[1486][2] = ᐃΔ.ᐃⵠⲆⲆⲆΔⲆ;
      ⵠΔ[1487] = ⵠΔ[1486];
      ⵠΔ[537] = [];
      ⵠΔ[537][0] = ᐃΔ.ΔⲆⵠΔᐃΔΔ;
      ⵠΔ[537][1] = ᐃΔ.ⵠⲆⵠΔΔⲆᐃ;
      ⵠΔ[537][2] = ᐃΔ.ⵠⵠᐃⵠⲆⲆⵠ;
      ⵠΔ[538] = ⵠΔ[537];
      ⵠΔ[539] = ⵠΔ[537];
      ⵠΔ[1488] = [];
      ⵠΔ[1488][0] = ᐃΔ.ⲆᐃⵠⵠⵠⵠⲆ;
      ⵠΔ[1488][1] = ᐃΔ.ⲆᐃⵠⵠⵠⵠⲆ;
      ⵠΔ[1488][2] = ᐃΔ.ⲆᐃⵠⵠⵠⵠⲆ;
      ⵠΔ[1489] = ⵠΔ[1488];
      ⵠΔ[1627] = [];
      ⵠΔ[1627][0] = ᐃΔ.ⵠⵠⲆᐃⲆⲆΔᐃΔ;
      ⵠΔ[1627][1] = ᐃΔ.ⲆΔⲆⵠΔΔᐃᐃΔ;
      ⵠΔ[1627][2] = ᐃΔ.ⲆⵠⲆΔⵠΔΔⵠⲆ;
      ⵠΔ[1626] = ⵠΔ[1627];
      ⵠΔ[1628] = ⵠΔ[1627];
      ⵠΔ[1267] = [];
      ⵠΔ[1267][0] = ᐃΔ.ᐃΔⵠⲆⲆⵠΔ;
      ⵠΔ[1267][1] = ᐃΔ.ΔΔⵠⲆⲆⵠⵠ;
      ⵠΔ[1267][2] = ᐃΔ.ᐃⲆΔᐃⲆⲆⵠ;
      ⵠΔ[1266] = ⵠΔ[1267];
      ⵠΔ[1268] = ⵠΔ[1267];
      ⵠΔ[1270] = [];
      ⵠΔ[1270][0] = ᐃΔ.ᐃΔⵠΔⵠΔⵠ;
      ⵠΔ[1270][1] = ᐃΔ.ⲆⲆΔΔΔⵠΔ;
      ⵠΔ[1270][2] = ᐃΔ.ᐃⲆΔⲆⲆⵠⵠ;
      ⵠΔ[1269] = ⵠΔ[1270];
      ⵠΔ[1271] = ⵠΔ[1270];
      ⵠΔ[1273] = [];
      ⵠΔ[1273][0] = ᐃΔ.ⵠⵠⲆΔᐃΔⲆ;
      ⵠΔ[1273][1] = ᐃΔ.ⵠⲆⵠᐃΔΔΔ;
      ⵠΔ[1273][2] = ᐃΔ.ᐃⵠΔⲆⲆⲆⲆ;
      ⵠΔ[1272] = ⵠΔ[1273];
      ⵠΔ[1274] = ⵠΔ[1273];
      ⵠΔ[1276] = [];
      ⵠΔ[1276][0] = ᐃΔ.ᐃⲆⲆᐃΔⵠⲆ;
      ⵠΔ[1276][1] = ᐃΔ.ᐃΔⵠⵠⵠᐃⵠ;
      ⵠΔ[1276][2] = ᐃΔ.ⵠⵠⲆⲆΔᐃⲆ;
      ⵠΔ[1275] = ⵠΔ[1276];
      ⵠΔ[1277] = ⵠΔ[1276];
      ⵠΔ[1279] = [];
      ⵠΔ[1279][0] = ᐃΔ.ⲆⲆᐃΔⲆⲆⵠ;
      ⵠΔ[1279][1] = ᐃΔ.ᐃⲆΔⵠⲆⲆΔ;
      ⵠΔ[1279][2] = ᐃΔ.ⵠᐃΔΔⲆⵠΔ;
      ⵠΔ[1278] = ⵠΔ[1279];
      ⵠΔ[1280] = ⵠΔ[1279];
      ⵠΔ[1282] = [];
      ⵠΔ[1282][0] = ᐃΔ.ᐃΔⵠΔⲆΔΔ;
      ⵠΔ[1282][1] = ᐃΔ.ⲆⲆⲆΔⲆⵠᐃ;
      ⵠΔ[1282][2] = ᐃΔ.ᐃⲆΔⲆᐃⲆᐃ;
      ⵠΔ[1281] = ⵠΔ[1282];
      ⵠΔ[1283] = ⵠΔ[1282];
      ⵠΔ[1285] = [];
      ⵠΔ[1285][0] = ᐃΔ.ⵠᐃᐃⲆᐃⲆΔ;
      ⵠΔ[1285][1] = ᐃΔ.ⵠΔⵠⵠΔⲆⲆ;
      ⵠΔ[1285][2] = ᐃΔ.ⵠᐃⲆⵠᐃⲆⵠ;
      ⵠΔ[1284] = ⵠΔ[1285];
      ⵠΔ[1286] = ⵠΔ[1285];
      ⵠΔ[1288] = [];
      ⵠΔ[1288][0] = ᐃΔ.ⵠⲆⲆⲆΔᐃⲆ;
      ⵠΔ[1288][1] = ᐃΔ.ⵠᐃⵠᐃⵠᐃⵠ;
      ⵠΔ[1288][2] = ᐃΔ.ⲆΔⵠᐃⵠΔᐃ;
      ⵠΔ[1287] = ⵠΔ[1288];
      ⵠΔ[1289] = ⵠΔ[1288];
      ⵠΔ[1291] = [];
      ⵠΔ[1291][0] = ᐃΔ.ⲆⵠΔⵠⵠΔⲆ;
      ⵠΔ[1291][1] = ᐃΔ.ⵠⲆΔᐃⵠᐃᐃ;
      ⵠΔ[1291][2] = ᐃΔ.ⵠⲆⵠΔΔᐃΔ;
      ⵠΔ[1290] = ⵠΔ[1291];
      ⵠΔ[1292] = ⵠΔ[1291];
      ⵠΔ[1343] = [];
      ⵠΔ[1343][0] = ᐃΔ.ΔΔⲆⲆⵠ;
      ⵠΔ[1343][1] = ᐃΔ.ΔΔⲆⲆⵠ;
      ⵠΔ[1343][2] = ᐃΔ.ΔΔⲆⲆⵠ;
      ⵠΔ[v594.ᐃⲆΔΔⵠΔΔᐃⵠ] = ⵠΔ[1343];
      ⵠΔ[1344] = ⵠΔ[1343];
      ⵠΔ[1345] = [];
      ⵠΔ[1345][0] = ᐃΔ.ⲆᐃᐃΔΔ;
      ⵠΔ[1345][1] = ᐃΔ.ⲆᐃᐃΔΔ;
      ⵠΔ[1345][2] = ᐃΔ.ⲆᐃᐃΔΔ;
      ⵠΔ[v594.ⵠᐃⲆᐃⵠᐃⵠΔⵠ] = ⵠΔ[1345];
      ⵠΔ[1346] = ⵠΔ[1345];
      ⵠΔ[1347] = [];
      ⵠΔ[1347][0] = ᐃΔ.ΔᐃⲆⲆⲆ;
      ⵠΔ[1347][1] = ᐃΔ.ΔᐃⲆⲆⲆ;
      ⵠΔ[1347][2] = ᐃΔ.ΔᐃⲆⲆⲆ;
      ⵠΔ[v594.ⵠⵠΔⵠⵠᐃᐃΔΔ] = ⵠΔ[1347];
      ⵠΔ[1348] = ⵠΔ[1347];
      ⵠΔ[1463] = [];
      ⵠΔ[1463][0] = ᐃΔ.ⲆⵠΔⲆⲆ;
      ⵠΔ[1463][1] = ᐃΔ.ⲆⵠΔⲆⲆ;
      ⵠΔ[1463][2] = ᐃΔ.ⲆⵠΔⲆⲆ;
      ⵠΔ[v594.ⲆⵠⵠⵠⵠΔⵠᐃⲆ] = ⵠΔ[1463];
      ⵠΔ[1464] = ⵠΔ[1463];
      ⵠΔ[1484] = [];
      ⵠΔ[1484][0] = ᐃΔ.ⲆⵠᐃᐃⲆ;
      ⵠΔ[1484][1] = ᐃΔ.ⲆⵠᐃᐃⲆ;
      ⵠΔ[1484][2] = ᐃΔ.ⲆⵠᐃᐃⲆ;
      ⵠΔ[1485] = ⵠΔ[1484];
      ⵠΔ[1354] = [];
      ⵠΔ[1354][0] = ᐃΔ.ΔⲆⲆΔᐃᐃⲆ;
      ⵠΔ[1354][1] = ᐃΔ.ΔⵠⲆⲆΔⵠⵠ;
      ⵠΔ[1354][2] = ᐃΔ.ⵠΔⵠⲆΔᐃⵠ;
      ⵠΔ[1356] = ⵠΔ[1354];
      ⵠΔ[1355] = ⵠΔ[1354];
      ⵠΔ[993] = [];
      ⵠΔ[993][0] = ᐃΔ.ⵠⵠⲆΔⵠΔⵠ;
      ⵠΔ[993][1] = ᐃΔ.ΔΔᐃᐃⲆΔⲆ;
      ⵠΔ[993][2] = ᐃΔ.ᐃⲆᐃΔⵠᐃᐃ;
      ⵠΔ[995] = ⵠΔ[993];
      ⵠΔ[994] = ⵠΔ[993];
      ⵠΔ[996] = [];
      ⵠΔ[996][0] = ᐃΔ.ⵠΔᐃⵠⲆⵠⵠ;
      ⵠΔ[996][1] = ᐃΔ.ⲆⲆⲆⲆⲆΔᐃ;
      ⵠΔ[996][2] = ᐃΔ.ⲆΔⲆΔⲆⲆⲆ;
      ⵠΔ[998] = ⵠΔ[996];
      ⵠΔ[997] = ⵠΔ[996];
      ⵠΔ[1357] = [];
      ⵠΔ[1357][0] = ᐃΔ.ΔⲆⲆⵠΔⲆⲆ;
      ⵠΔ[1357][1] = ᐃΔ.ΔΔⵠΔᐃᐃᐃ;
      ⵠΔ[1357][2] = ᐃΔ.ᐃⲆΔΔΔⲆΔ;
      ⵠΔ[1359] = ⵠΔ[1357];
      ⵠΔ[1358] = ⵠΔ[1357];
      ⵠΔ[1328] = [];
      ⵠΔ[1328][0] = ᐃΔ.ΔⵠᐃΔᐃΔΔ;
      ⵠΔ[1328][1] = ᐃΔ.ⵠᐃΔᐃΔΔⲆ;
      ⵠΔ[1328][2] = ᐃΔ.ⲆⲆⲆᐃᐃⵠᐃ;
      ⵠΔ[1330] = ⵠΔ[1328];
      ⵠΔ[1329] = ⵠΔ[1328];
      ⵠΔ[1544] = [];
      ⵠΔ[1544][0] = ᐃΔ.ⵠΔᐃΔΔᐃⵠ;
      ⵠΔ[1544][1] = ᐃΔ.ΔⲆⲆⲆΔⲆⵠ;
      ⵠΔ[1544][2] = ᐃΔ.ᐃᐃΔⲆᐃⲆⲆ;
      ⵠΔ[1546] = ⵠΔ[1544];
      ⵠΔ[1545] = ⵠΔ[1544];
      ⵠΔ[1418] = [];
      ⵠΔ[1418][0] = ᐃΔ.ⵠᐃΔⲆΔᐃⵠ;
      ⵠΔ[1418][1] = ᐃΔ.ᐃΔⵠᐃⵠⵠΔ;
      ⵠΔ[1418][2] = ᐃΔ.ⵠΔΔⵠΔⲆᐃ;
      ⵠΔ[1420] = ⵠΔ[1418];
      ⵠΔ[1419] = ⵠΔ[1418];
      ⵠΔ[1439] = [];
      ⵠΔ[1439][0] = ᐃΔ.ⲆΔᐃᐃΔⲆΔ;
      ⵠΔ[1439][1] = ᐃΔ.ⲆⵠΔⲆΔᐃⵠ;
      ⵠΔ[1439][2] = ᐃΔ.ΔⲆᐃΔΔᐃᐃ;
      ⵠΔ[1441] = ⵠΔ[1439];
      ⵠΔ[1440] = ⵠΔ[1439];
      ⵠΔ[1457] = [];
      ⵠΔ[1457][0] = ᐃΔ.ⲆΔΔᐃᐃᐃΔ;
      ⵠΔ[1457][1] = ᐃΔ.ⵠᐃᐃⲆΔΔⲆ;
      ⵠΔ[1457][2] = ᐃΔ.ΔⲆⲆᐃΔⲆⵠ;
      ⵠΔ[1459] = ⵠΔ[1457];
      ⵠΔ[1458] = ⵠΔ[1457];
      ⵠΔ[1465] = [];
      ⵠΔ[1465][0] = ᐃΔ.ⵠΔⲆᐃⲆᐃⲆ;
      ⵠΔ[1465][1] = ᐃΔ.ΔⵠⲆᐃⲆⲆⲆ;
      ⵠΔ[1465][2] = ᐃΔ.ΔᐃⵠⵠᐃΔⵠ;
      ⵠΔ[1466] = ⵠΔ[1465];
      ⵠΔ[1467] = ⵠΔ[1465];
      ⵠΔ[1468] = [];
      ⵠΔ[1468][0] = ᐃΔ.ᐃⵠⵠⲆᐃⵠΔ;
      ⵠΔ[1468][1] = ᐃΔ.ΔΔⲆⵠΔⲆⲆ;
      ⵠΔ[1468][2] = ᐃΔ.ⲆΔΔⲆⵠᐃΔ;
      ⵠΔ[1469] = ⵠΔ[1468];
      ⵠΔ[1470] = ⵠΔ[1468];
      ⵠΔ[1425] = [];
      ⵠΔ[1425][0] = ᐃΔ.ᐃΔⲆΔᐃΔΔ;
      ⵠΔ[1425][1] = ᐃΔ.ᐃᐃᐃΔΔⵠΔ;
      ⵠΔ[1425][2] = ᐃΔ.ⵠⵠⵠᐃᐃᐃⲆ;
      ⵠΔ[1424] = ⵠΔ[1425];
      ⵠΔ[1426] = ⵠΔ[1425];
      ⵠΔ[1388] = [];
      ⵠΔ[1388][0] = ᐃΔ.ΔΔΔⲆⵠⲆⲆ;
      ⵠΔ[1388][1] = ᐃΔ.ΔᐃΔΔᐃΔⲆ;
      ⵠΔ[1388][2] = ᐃΔ.ⵠᐃᐃⵠⵠΔΔ;
      ⵠΔ[1390] = ⵠΔ[1388];
      ⵠΔ[1389] = ⵠΔ[1388];
      ⵠΔ[1615] = [];
      ⵠΔ[1615][0] = ᐃΔ.ᐃΔΔᐃⲆΔΔᐃΔ;
      ⵠΔ[1615][1] = ᐃΔ.ⲆᐃΔⵠᐃⲆⵠⲆⲆ;
      ⵠΔ[1615][2] = ᐃΔ.ΔⲆⲆⲆᐃⵠⵠⲆⵠ;
      ⵠΔ[1617] = ⵠΔ[1615];
      ⵠΔ[1616] = ⵠΔ[1615];
      ⵠΔ[1403] = [];
      ⵠΔ[1403][0] = ᐃΔ.ΔΔΔⵠᐃⲆΔ;
      ⵠΔ[1403][1] = ᐃΔ.ⲆΔΔΔⵠⵠΔ;
      ⵠΔ[1403][2] = ᐃΔ.ⵠΔⲆΔΔᐃᐃ;
      ⵠΔ[1405] = ⵠΔ[1403];
      ⵠΔ[1404] = ⵠΔ[1403];
      ⵠΔ[966] = f123(1, [{
        f: f284,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
      }, {
        f: f248,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e4c027"]
      }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[967] = ⵠΔ[966];
      ⵠΔ[519] = f123(1, [{
        f: f180,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
      }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[520] = ⵠΔ[519];
      ⵠΔ[1183] = f123(1, [{
        f: f186,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
      }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1185] = ⵠΔ[1183];
      ⵠΔ[1184] = ⵠΔ[1183];
      ⵠΔ[299] = f123(1, [{
        f: f202,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
      }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1182] = ⵠΔ[299];
      ⵠΔ[1177] = f123(1, [{
        f: f193,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1176] = ⵠΔ[1177];
      ⵠΔ[1175] = ⵠΔ[1177];
      ⵠΔ[512] = f123(1, [{
        f: f196,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[513] = ⵠΔ[512];
      ⵠΔ[506] = f123(1, [{
        f: f199,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[507] = ⵠΔ[506];
      ⵠΔ[509] = f123(1, [{
        f: f191,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[510] = ⵠΔ[509];
      ⵠΔ[515] = f123(1, [{
        f: f192,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[516] = ⵠΔ[515];
      ⵠΔ[610] = f123(1, [{
        f: f167,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[611] = ⵠΔ[610];
      ⵠΔ[1123] = f123(1, [{
        f: f174,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
      }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1125] = ⵠΔ[1123];
      ⵠΔ[1124] = ⵠΔ[1123];
      ⵠΔ[615] = f123(1, [{
        f: f218,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[616] = ⵠΔ[615];
      ⵠΔ[958] = f123(1, [{
        f: f287,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#939393", "#5f6061"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[960] = ⵠΔ[958];
      ⵠΔ[688] = f123(1, [{
        f: f274,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[689] = ⵠΔ[688];
      ⵠΔ[618] = f123(1, [{
        f: f218,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[619] = ⵠΔ[618];
      ⵠΔ[621] = f123(1, [{
        f: f218,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[622] = ⵠΔ[621];
      ⵠΔ[624] = f123(1, [{
        f: f218,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[625] = ⵠΔ[624];
      ⵠΔ[627] = [];
      ⵠΔ[627][0] = ᐃΔ.ⵠΔⲆⵠⵠⵠⵠ;
      ⵠΔ[627][1] = ᐃΔ.ⵠΔⵠⲆᐃᐃⵠ;
      ⵠΔ[627][2] = ᐃΔ.ⵠⵠⲆΔΔᐃⲆ;
      ⵠΔ[629] = ⵠΔ[627];
      ⵠΔ[628] = ⵠΔ[627];
      ⵠΔ[1550] = [];
      ⵠΔ[1550][0] = ᐃΔ.ⲆⲆᐃΔⵠᐃᐃ;
      ⵠΔ[1550][1] = ᐃΔ.ⵠᐃᐃᐃΔᐃᐃ;
      ⵠΔ[1550][2] = ᐃΔ.ⵠΔⲆΔⲆΔⵠ;
      ⵠΔ[1552] = ⵠΔ[1550];
      ⵠΔ[1551] = ⵠΔ[1550];
      ⵠΔ[1554] = [];
      ⵠΔ[1554][0] = ᐃΔ.ⵠᐃᐃΔᐃⵠᐃ;
      ⵠΔ[1554][1] = ᐃΔ.ΔᐃⲆⲆΔᐃΔ;
      ⵠΔ[1554][2] = ᐃΔ.ⵠⲆᐃᐃⲆⲆⲆ;
      ⵠΔ[1556] = ⵠΔ[1554];
      ⵠΔ[1555] = ⵠΔ[1554];
      ⵠΔ[1558] = [];
      ⵠΔ[1558][0] = ᐃΔ.ᐃⵠⲆΔⵠΔᐃ;
      ⵠΔ[1558][1] = ᐃΔ.ᐃΔⵠᐃΔᐃⵠ;
      ⵠΔ[1558][2] = ᐃΔ.ⲆⵠᐃⵠᐃⲆΔ;
      ⵠΔ[1560] = ⵠΔ[1558];
      ⵠΔ[1559] = ⵠΔ[1558];
      ⵠΔ[1562] = [];
      ⵠΔ[1562][0] = ᐃΔ.ⵠⲆⲆᐃΔΔᐃ;
      ⵠΔ[1562][1] = ᐃΔ.ⵠⲆⵠⲆᐃΔᐃ;
      ⵠΔ[1562][2] = ᐃΔ.ⵠᐃᐃΔΔΔΔ;
      ⵠΔ[1564] = ⵠΔ[1562];
      ⵠΔ[1563] = ⵠΔ[1562];
      ⵠΔ[1566] = [];
      ⵠΔ[1566][0] = ᐃΔ.ⲆⲆⲆΔᐃᐃⵠ;
      ⵠΔ[1566][1] = ᐃΔ.ΔⵠⲆᐃΔΔΔ;
      ⵠΔ[1566][2] = ᐃΔ.ΔⵠⵠⵠΔⵠΔ;
      ⵠΔ[1568] = ⵠΔ[1566];
      ⵠΔ[1567] = ⵠΔ[1566];
      ⵠΔ[1570] = [];
      ⵠΔ[1570][0] = ᐃΔ.ᐃΔⵠⲆⵠⵠⵠ;
      ⵠΔ[1570][1] = ᐃΔ.ᐃΔⲆⵠⲆΔⵠ;
      ⵠΔ[1570][2] = ᐃΔ.ⲆᐃⵠᐃⵠⲆⵠ;
      ⵠΔ[1572] = ⵠΔ[1570];
      ⵠΔ[1571] = ⵠΔ[1570];
      ⵠΔ[1574] = [];
      ⵠΔ[1574][0] = ᐃΔ.ⲆΔΔΔⵠᐃⲆ;
      ⵠΔ[1574][1] = ᐃΔ.ⲆΔᐃᐃᐃⵠᐃ;
      ⵠΔ[1574][2] = ᐃΔ.ⵠⲆΔΔⵠΔΔ;
      ⵠΔ[1576] = ⵠΔ[1574];
      ⵠΔ[1575] = ⵠΔ[1574];
      ⵠΔ[1578] = [];
      ⵠΔ[1578][0] = ᐃΔ.ᐃⵠⲆⲆᐃΔⲆ;
      ⵠΔ[1578][1] = ᐃΔ.ᐃⲆⲆⲆⲆⲆⵠ;
      ⵠΔ[1578][2] = ᐃΔ.ᐃⲆⵠΔⵠΔΔ;
      ⵠΔ[1580] = ⵠΔ[1578];
      ⵠΔ[1579] = ⵠΔ[1578];
      ⵠΔ[1582] = [];
      ⵠΔ[1582][0] = ᐃΔ.ⵠⵠᐃΔⵠΔⲆ;
      ⵠΔ[1582][1] = ᐃΔ.ᐃΔⵠⲆⵠᐃⵠ;
      ⵠΔ[1582][2] = ᐃΔ.ΔⲆΔⲆⲆⲆᐃ;
      ⵠΔ[1584] = ⵠΔ[1582];
      ⵠΔ[1583] = ⵠΔ[1582];
      ⵠΔ[1586] = [];
      ⵠΔ[1586][0] = ᐃΔ.ᐃΔⵠⵠᐃᐃⵠ;
      ⵠΔ[1586][1] = ᐃΔ.ⵠᐃⵠⲆⲆΔⲆ;
      ⵠΔ[1586][2] = ᐃΔ.ΔⵠⵠⵠⲆⲆⵠ;
      ⵠΔ[1588] = ⵠΔ[1586];
      ⵠΔ[1587] = ⵠΔ[1586];
      ⵠΔ[1590] = [];
      ⵠΔ[1590][0] = ᐃΔ.ΔⵠᐃⵠⲆⲆΔ;
      ⵠΔ[1590][1] = ᐃΔ.ⲆⵠⵠⵠⵠΔⲆ;
      ⵠΔ[1590][2] = ᐃΔ.ⲆᐃⲆᐃⲆⵠᐃ;
      ⵠΔ[1592] = ⵠΔ[1590];
      ⵠΔ[1591] = ⵠΔ[1590];
      ⵠΔ[1594] = [];
      ⵠΔ[1594][0] = ᐃΔ.ⵠᐃΔⵠⲆΔⲆ;
      ⵠΔ[1594][1] = ᐃΔ.ΔΔΔⲆⲆⵠΔ;
      ⵠΔ[1594][2] = ᐃΔ.ᐃᐃⵠΔΔᐃΔ;
      ⵠΔ[1596] = ⵠΔ[1594];
      ⵠΔ[1595] = ⵠΔ[1594];
      ⵠΔ[1598] = [];
      ⵠΔ[1598][0] = ᐃΔ.ᐃᐃᐃᐃᐃΔΔ;
      ⵠΔ[1598][1] = ᐃΔ.ΔⲆᐃᐃᐃⵠᐃ;
      ⵠΔ[1598][2] = ᐃΔ.ⲆᐃΔⵠⲆΔⵠ;
      ⵠΔ[1600] = ⵠΔ[1598];
      ⵠΔ[1599] = ⵠΔ[1598];
      ⵠΔ[1602] = [];
      ⵠΔ[1602][0] = ᐃΔ.ᐃⵠⵠⵠⵠΔᐃ;
      ⵠΔ[1602][1] = ᐃΔ.ΔᐃᐃⲆⲆⵠⵠ;
      ⵠΔ[1602][2] = ᐃΔ.ᐃⵠⲆΔⲆⵠᐃ;
      ⵠΔ[1604] = ⵠΔ[1602];
      ⵠΔ[1603] = ⵠΔ[1602];
      ⵠΔ[1606] = [];
      ⵠΔ[1606][0] = ᐃΔ.ᐃⲆⵠᐃᐃΔⵠ;
      ⵠΔ[1606][1] = ᐃΔ.ΔⵠΔⲆⵠⵠᐃ;
      ⵠΔ[1606][2] = ᐃΔ.ⵠⵠΔⵠⲆⲆⵠ;
      ⵠΔ[1608] = ⵠΔ[1606];
      ⵠΔ[1607] = ⵠΔ[1606];
      ⵠΔ[656] = f123(1, [{
        f: f242,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
      }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[657] = ⵠΔ[656];
      ⵠΔ[670] = f123(1, [{
        f: f251,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 5,
        c: ["#141414", "#c4a23a", "#816511"]
      }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[671] = ⵠΔ[670];
      ⵠΔ[659] = f123(1, [{
        f: f296,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#141414", "#178a99", "#0a6372", "#03282e"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
      ⵠΔ[661] = f123(1, [{
        f: f296,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#120202", "#991616", "#750a0a", "#120202"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
      ⵠΔ[667] = f123(1, [{
        f: f230,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#347f93", "#54a4ba"]
      }, {
        f: f256,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
      }, {
        f: f255,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#a9e4ed", "#86d4e0"]
      }, {
        f: f237,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[668] = ⵠΔ[667];
      ⵠΔ[718] = f123(1, [{
        f: f253,
        x: 45,
        y: 70,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[720] = ⵠΔ[718];
      ⵠΔ[679] = f123(1, [{
        f: f269,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[680] = ⵠΔ[679];
      ⵠΔ[1028] = f123(1, [{
        f: f254,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1029] = ⵠΔ[1028];
      ⵠΔ[1016] = f123(1, [{
        f: f278,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#2a2938", "#242330", "#313041"]
      }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1017] = ⵠΔ[1016];
      ⵠΔ[1025] = f123(1, [{
        f: f281,
        x: 0,
        y: 3,
        a: 1,
        r: 0,
        c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
      }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1026] = ⵠΔ[1025];
      ⵠΔ[1020] = f123(1, [{
        f: f281,
        x: 0,
        y: 3,
        a: 1,
        r: 0,
        c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
      }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1021] = ⵠΔ[1020];
      ⵠΔ[1005] = f123(1, [{
        f: f263,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1007] = ⵠΔ[1005];
      ⵠΔ[1009] = f123(1, [{
        f: f263,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1011] = ⵠΔ[1009];
      ⵠΔ[1013] = f123(1, [{
        f: f263,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1019] = ⵠΔ[1013];
      ⵠΔ[1186] = f123(1, [{
        f: f172,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1188] = ⵠΔ[1186];
      ⵠΔ[1187] = ⵠΔ[1186];
      ⵠΔ[981] = f123(1, [{
        f: f212,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
      }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[983] = ⵠΔ[981];
      ⵠΔ[728] = f123(1, [{
        f: f273,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
      }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[729] = ⵠΔ[728];
      ⵠΔ[1000] = f123(1, [{
        f: f293,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[362] = f123(1, [{
        f: f261,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[1002] = f123(1, [{
        f: f293,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[363] = f123(1, [{
        f: f261,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[278] = f123(1, [{
        f: f292,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[279] = f123(1, [{
        f: f292,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[277] = f123(1, [{
        f: f292,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[835] = f123(1, [{
        f: f295,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[837] = ⵠΔ[835];
      ⵠΔ[918] = f123(1, [{
        f: f295,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[919] = ⵠΔ[918];
      ⵠΔ[921] = f123(1, [{
        f: f295,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[923] = ⵠΔ[921];
      ⵠΔ[924] = f123(1, [{
        f: f295,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[925] = ⵠΔ[924];
      ⵠΔ[531] = f123(1, [{
        f: f245,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[532] = ⵠΔ[531];
      ⵠΔ[1075] = f123(1, [{
        f: f266,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#252525", "#73583e", "#493425", "#7d6144"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[1076] = ⵠΔ[1075];
      ⵠΔ[540] = f123(1, [{
        f: f229,
        x: 0,
        y: -2,
        a: 1,
        r: 0,
        c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[541] = ⵠΔ[540];
      ⵠΔ[543] = f123(1, [{
        f: f236,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#dbce71", "#b29c32", "#c4bc51"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[544] = ⵠΔ[543];
      ⵠΔ[546] = f123(1, [{
        f: f289,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[547] = ⵠΔ[546];
      ⵠΔ[576] = f123(1, [{
        f: f297,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[577] = ⵠΔ[576];
      ⵠΔ[579] = f123(1, [{
        f: f244,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#221e1b", "#ffffff", "#f6f0e7"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[580] = ⵠΔ[579];
      ⵠΔ[529] = f123(1, [{
        f: f208,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#1d051e", "#c27add", "#cd98e5"]
      }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[828] = f123(1, [{
        f: f241,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#D7C393", "#a48c6c"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[235] = f123(1, [{
        f: f250,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#93CBCE", "#E9F6F6"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[233] = f123(1, [{
        f: f241,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#866432", "#6b4f25"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[282] = f123(1, [{
        f: f260,
        x: 3,
        y: 2,
        a: 1,
        r: 0,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[283] = f123(1, [{
        f: f259,
        x: 3,
        y: 2,
        a: 1,
        r: 0,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[1033] = ⵠΔ[282];
      ⵠΔ[1034] = ⵠΔ[283];
      ⵠΔ[1038] = f123(1, [{
        f: f264,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
      }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1040] = ⵠΔ[1038];
      ⵠΔ[832] = f123(1, [{
        f: f231,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
      }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[831] = f123(1, [{
        f: f290,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
      }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[964] = ⵠΔ[832];
      ⵠΔ[830] = ⵠΔ[831];
      ⵠΔ[853] = f123(1, [{
        f: f158,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[854] = ⵠΔ[853];
      ⵠΔ[302] = f123(1, [{
        f: f149,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1115] = f123(1, [{
        f: f152,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[236] = f123(1, [{
        f: f285,
        x: 0,
        y: -2,
        a: 1,
        r: 0,
        c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
      }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[909] = ⵠΔ[236];
      ⵠΔ[881] = f123(1, [{
        f: f171,
        x: -3,
        y: -5,
        a: 1,
        r: 0,
        c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
      }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[883] = f123(1, [{
        f: f198,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1d051e", "#42261A", "#281818"]
      }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[885] = ⵠΔ[883];
      ⵠΔ[868] = f123(1, [{
        f: f162,
        x: -3,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
      }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[869] = ⵠΔ[868];
      ⵠΔ[893] = f123(1, [{
        f: f118,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
      }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[865] = f123(1, [{
        f: f170,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⵠΔ[866] = ⵠΔ[865];
      ⵠΔ[904] = f123(1, [{
        f: f240,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[903] = ⵠΔ[904];
      ⵠΔ[1119] = f123(1, [{
        f: f98,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#e2d63b", "#ee71a9", "#42b672"]
      }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1120] = ⵠΔ[1119];
      ⵠΔ[824] = f123(1, [{
        f: f239,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
      }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[823] = ⵠΔ[824];
      ⵠΔ[1091] = f123(1, [{
        f: f101,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1092] = ⵠΔ[1091];
      ⵠΔ[871] = f123(1, [{
        f: f235,
        x: -1,
        y: 0,
        a: 1,
        r: -Math.PI / 5,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
      ⵠΔ[873] = ⵠΔ[871];
      ⵠΔ[845] = f123(1, [{
        f: f235,
        x: -1,
        y: 0,
        a: 1,
        r: -Math.PI / 5,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
      }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[846] = ⵠΔ[845];
      ⵠΔ[848] = f123(1, [{
        f: f280,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⵠΔ[298] = f123(1, [{
        f: f157,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[1174] = ⵠΔ[298];
      ⵠΔ[878] = f123(1, [{
        f: f173,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
      }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[879] = ⵠΔ[878];
      ⵠΔ[238] = f123(1, [{
        f: f122,
        x: -2,
        y: -8,
        a: 1,
        r: 0,
        c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
      }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⵠΔ[979] = ⵠΔ[238];
      ⵠΔ[731] = [];
      ⵠΔ[731][0] = ᐃΔ.ⵠΔᐃΔⲆΔᐃ;
      ⵠΔ[731][1] = ᐃΔ.ⲆᐃⲆⵠⵠΔⲆ;
      ⵠΔ[731][2] = ᐃΔ.ᐃⵠΔⵠⵠΔᐃ;
      ⵠΔ[732] = ⵠΔ[731];
      ⵠΔ[733] = ⵠΔ[731];
      ⵠΔ[1126] = [];
      ⵠΔ[1126][0] = ᐃΔ.ⲆⵠⲆⵠⲆⲆΔ;
      ⵠΔ[1126][1] = ᐃΔ.ΔⲆΔΔΔᐃΔ;
      ⵠΔ[1126][2] = ᐃΔ.Δⵠⵠᐃⵠⵠⵠ;
      ⵠΔ[1128] = ⵠΔ[1126];
      ⵠΔ[1127] = ⵠΔ[1126];
      ⵠΔ[1209] = ⵠΔ[1208];
      ⵠΔ[1210] = ⵠΔ[1208];
      ⵠΔ[1208] = [];
      ⵠΔ[1208][0] = ᐃΔ.ΔΔⲆⲆⲆᐃⵠ;
      ⵠΔ[1208][1] = ᐃΔ.ᐃⲆⵠᐃⵠⵠᐃ;
      ⵠΔ[1208][2] = ᐃΔ.ΔΔΔⵠⲆΔⲆ;
      ⵠΔ[1209] = ⵠΔ[1208];
      ⵠΔ[1210] = ⵠΔ[1208];
      ⵠΔ[1219] = [];
      ⵠΔ[1219][0] = ᐃΔ.ΔⵠⵠⵠᐃⲆⲆ;
      ⵠΔ[1219][1] = ᐃΔ.ⵠᐃᐃΔⵠⵠᐃ;
      ⵠΔ[1219][2] = ᐃΔ.ΔⵠⲆⲆᐃⲆΔ;
      ⵠΔ[1220] = ⵠΔ[1219];
      ⵠΔ[1221] = ⵠΔ[1219];
      ⵠΔ[1197] = [];
      ⵠΔ[1197][0] = ᐃΔ.ⲆⲆⲆⲆⲆⵠⲆ;
      ⵠΔ[1197][1] = ᐃΔ.ΔⵠⵠᐃᐃΔⲆ;
      ⵠΔ[1197][2] = ᐃΔ.ⵠⲆⲆⲆⲆΔᐃ;
      ⵠΔ[1198] = ⵠΔ[1197];
      ⵠΔ[1199] = ⵠΔ[1197];
      ⵠΔ[1201] = [];
      ⵠΔ[1201][0] = ᐃΔ.ⲆⲆΔⵠᐃᐃᐃ;
      ⵠΔ[1201][1] = ᐃΔ.ⲆⲆᐃⲆⵠᐃᐃ;
      ⵠΔ[1201][2] = ᐃΔ.ᐃⲆⵠᐃΔᐃᐃ;
      ⵠΔ[1202] = ⵠΔ[1201];
      ⵠΔ[1203] = ⵠΔ[1201];
      ⵠΔ[1205] = [];
      ⵠΔ[1205][0] = ᐃΔ.ΔⵠᐃᐃᐃΔΔ;
      ⵠΔ[1205][1] = ᐃΔ.ΔΔⵠⵠⲆᐃᐃ;
      ⵠΔ[1205][2] = ᐃΔ.ᐃᐃΔⲆⲆᐃⲆ;
      ⵠΔ[1206] = ⵠΔ[1205];
      ⵠΔ[1207] = ⵠΔ[1205];
      ⵠΔ[1222] = [];
      ⵠΔ[1222][0] = ᐃΔ.ᐃⵠⵠⵠᐃᐃⲆ;
      ⵠΔ[1222][1] = ᐃΔ.ΔᐃᐃⲆⵠᐃᐃ;
      ⵠΔ[1222][2] = ᐃΔ.ⲆᐃΔᐃΔΔΔ;
      ⵠΔ[1223] = ⵠΔ[1222];
      ⵠΔ[1224] = ⵠΔ[1222];
      ⵠΔ[984] = [];
      ⵠΔ[984][0] = ᐃΔ.ΔΔᐃΔᐃᐃΔ;
      ⵠΔ[984][1] = ᐃΔ.ΔᐃⵠᐃⵠΔᐃ;
      ⵠΔ[984][2] = ᐃΔ.ⲆΔᐃⵠⵠΔⵠ;
      ⵠΔ[986] = ⵠΔ[984];
      ⵠΔ[985] = ⵠΔ[984];
      ⵠΔ[1492] = [];
      ⵠΔ[1492][0] = ᐃΔ.ⵠᐃΔⲆⲆΔⵠ;
      ⵠΔ[1492][1] = ᐃΔ.ΔⲆⲆⵠᐃᐃΔ;
      ⵠΔ[1492][2] = ᐃΔ.ⲆΔⲆΔᐃⲆⵠ;
      ⵠΔ[v594.ᐃⵠᐃΔᐃΔⵠⲆΔ] = ⵠΔ[1492];
      ⵠΔ[1493] = ⵠΔ[1492];
      ⵠΔ[987] = [];
      ⵠΔ[987][0] = ᐃΔ.ΔⵠΔⲆΔΔⵠ;
      ⵠΔ[987][1] = ᐃΔ.ⵠΔⵠⲆΔⲆⵠ;
      ⵠΔ[987][2] = ᐃΔ.ⲆⲆⵠⵠⵠᐃᐃ;
      ⵠΔ[989] = ⵠΔ[987];
      ⵠΔ[988] = ⵠΔ[987];
      ⵠΔ[990] = [];
      ⵠΔ[990][0] = ᐃΔ.ⵠⲆΔⲆᐃⲆᐃ;
      ⵠΔ[990][1] = ᐃΔ.ⲆΔⲆᐃᐃᐃⲆ;
      ⵠΔ[990][2] = ᐃΔ.ΔⲆᐃⲆᐃⵠⲆ;
      ⵠΔ[992] = ⵠΔ[990];
      ⵠΔ[991] = ⵠΔ[990];
      ⵠΔ[1214] = [];
      ⵠΔ[1214][0] = ᐃΔ.ΔΔⲆᐃΔΔⵠ;
      ⵠΔ[1214][1] = ᐃΔ.ⲆⵠⵠᐃⵠⲆΔ;
      ⵠΔ[1214][2] = ᐃΔ.ⵠΔⵠⲆᐃᐃⲆ;
      ⵠΔ[1215] = ⵠΔ[1214];
      ⵠΔ[1212] = [];
      ⵠΔ[1212][0] = ᐃΔ.ᐃΔΔΔΔⲆΔ;
      ⵠΔ[1212][1] = ᐃΔ.ⲆᐃΔⲆⵠᐃⲆ;
      ⵠΔ[1212][2] = ᐃΔ.ⲆΔΔᐃΔⲆΔ;
      ⵠΔ[1213] = ⵠΔ[1212];
      ⵠΔ[836] = ⵠΔ[835];
      ⵠΔ[920] = ⵠΔ[918];
      ⵠΔ[922] = ⵠΔ[921];
      ⵠΔ[926] = ⵠΔ[924];
      ⵠΔ[459] = ⵠΔ[422];
      ⵠΔ[852] = ⵠΔ[850];
      ⵠΔ[864] = ⵠΔ[863];
      ⵠΔ[859] = ⵠΔ[858];
      ⵠΔ[383] = ⵠΔ[420];
      ⵠΔ[809] = ⵠΔ[362];
      ⵠΔ[1001] = ⵠΔ[1000];
      ⵠΔ[810] = ⵠΔ[363];
      ⵠΔ[1003] = ⵠΔ[1002];
      ⵠΔ[386] = ⵠΔ[439];
      ⵠΔ[1112] = ⵠΔ[1114];
      ⵠΔ[1111] = ⵠΔ[1109];
      ⵠΔ[1080] = ⵠΔ[1078];
      ⵠΔ[451] = ⵠΔ[371];
      ⵠΔ[815] = ⵠΔ[813];
      ⵠΔ[456] = ⵠΔ[402];
      ⵠΔ[457] = ⵠΔ[403];
      ⵠΔ[595] = ⵠΔ[593];
      ⵠΔ[384] = ⵠΔ[424];
      ⵠΔ[452] = ⵠΔ[423];
      ⵠΔ[382] = ⵠΔ[368];
      ⵠΔ[455] = ⵠΔ[407];
      ⵠΔ[597] = ⵠΔ[596];
      ⵠΔ[453] = ⵠΔ[426];
      ⵠΔ[380] = ⵠΔ[408];
      ⵠΔ[381] = ⵠΔ[409];
      ⵠΔ[454] = ⵠΔ[427];
      ⵠΔ[379] = ⵠΔ[387];
      ⵠΔ[469] = ⵠΔ[421];
      ⵠΔ[465] = ⵠΔ[440];
      ⵠΔ[467] = ⵠΔ[442];
      ⵠΔ[466] = ⵠΔ[441];
      ⵠΔ[632] = ⵠΔ[630];
      ⵠΔ[460] = ⵠΔ[428];
      ⵠΔ[461] = ⵠΔ[430];
      ⵠΔ[385] = ⵠΔ[411];
      ⵠΔ[462] = ⵠΔ[434];
      ⵠΔ[464] = ⵠΔ[416];
      ⵠΔ[652] = ⵠΔ[651];
      ⵠΔ[463] = ⵠΔ[414];
      ⵠΔ[658] = ⵠΔ[656];
      ⵠΔ[672] = ⵠΔ[670];
      ⵠΔ[669] = ⵠΔ[667];
      ⵠΔ[660] = ⵠΔ[659];
      ⵠΔ[662] = ⵠΔ[661];
      ⵠΔ[730] = ⵠΔ[728];
      ⵠΔ[719] = ⵠΔ[718];
      ⵠΔ[468] = ⵠΔ[446];
      ⵠΔ[470] = ⵠΔ[448];
      ⵠΔ[450] = f50(function (p965, p966, p967) {
        var v1311 = document.createElement("canvas");
        var v1312 = v1311.getContext("2d");
        v1311.width = p965 * 118;
        v1311.height = p965 * 129;
        v1312.save();
        v1312.translate(p965 * 90, p965 * 90);
        f90(v1312, p965 * -86.5, p965 * -86, p965 * 110, p965 * 110, p965 * 15);
        v1312.restore();
        f89(v1312, p967[0], p967[1], 4);
        v1312.save();
        f90(v1312, p965 * 30, p965 * 115, p965 * 60, p965 * 5, p965 * 15);
        v1312.restore();
        f89(v1312, p967[2], p967[3], 4);
        v1312.save();
        f90(v1312, p965 * 50, p965 * 117, p965 * 20, p965 * 10, p965 * 15);
        v1312.restore();
        f89(v1312, p967[2]);
        return v1311;
      }(0.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
      ⵠΔ[477] = f123(0.5, [{
        f: f200,
        x: 0,
        y: 2,
        a: 1,
        r: 0,
        c: ["#ffffff"]
      }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
      ⵠΔ[493] = ⵠΔ[472];
      ⵠΔ[494] = ⵠΔ[473];
      ⵠΔ[495] = ⵠΔ[475];
      ⵠΔ[635] = ⵠΔ[633];
      ⵠΔ[496] = ⵠΔ[503];
      ⵠΔ[1023] = ⵠΔ[280];
      ⵠΔ[1024] = ⵠΔ[281];
      ⵠΔ[497] = ⵠΔ[479];
      ⵠΔ[844] = ⵠΔ[843];
      ⵠΔ[505] = ⵠΔ[504];
      ⵠΔ[1491] = ⵠΔ[1490];
      ⵠΔ[644] = ⵠΔ[643];
      ⵠΔ[498] = ⵠΔ[480];
      ⵠΔ[642] = ⵠΔ[640];
      ⵠΔ[499] = ⵠΔ[483];
      ⵠΔ[500] = ⵠΔ[486];
      ⵠΔ[501] = ⵠΔ[489];
      ⵠΔ[639] = ⵠΔ[637];
      ⵠΔ[502] = ⵠΔ[492];
      ⵠΔ[514] = ⵠΔ[512];
      ⵠΔ[508] = ⵠΔ[506];
      ⵠΔ[511] = ⵠΔ[509];
      ⵠΔ[517] = ⵠΔ[515];
      ⵠΔ[612] = ⵠΔ[610];
      ⵠΔ[1124] = ⵠΔ[1123];
      ⵠΔ[690] = ⵠΔ[688];
      ⵠΔ[959] = ⵠΔ[958];
      ⵠΔ[617] = ⵠΔ[615];
      ⵠΔ[620] = ⵠΔ[618];
      ⵠΔ[623] = ⵠΔ[621];
      ⵠΔ[626] = ⵠΔ[624];
      ⵠΔ[521] = ⵠΔ[519];
      ⵠΔ[968] = ⵠΔ[966];
      ⵠΔ[533] = ⵠΔ[531];
      ⵠΔ[542] = ⵠΔ[540];
      ⵠΔ[545] = ⵠΔ[543];
      ⵠΔ[548] = ⵠΔ[546];
      ⵠΔ[681] = ⵠΔ[679];
      ⵠΔ[982] = ⵠΔ[981];
      ⵠΔ[578] = ⵠΔ[576];
      ⵠΔ[581] = ⵠΔ[579];
      ⵠΔ[584] = ⵠΔ[529];
      ⵠΔ[825] = ⵠΔ[824];
      ⵠΔ[1093] = ⵠΔ[1091];
      ⵠΔ[902] = ⵠΔ[904];
      ⵠΔ[829] = ⵠΔ[828];
      ⵠΔ[908] = ⵠΔ[236];
      ⵠΔ[905] = ⵠΔ[235];
      ⵠΔ[901] = ⵠΔ[233];
      ⵠΔ[834] = ⵠΔ[832];
      ⵠΔ[833] = ⵠΔ[831];
      ⵠΔ[847] = ⵠΔ[845];
      ⵠΔ[849] = ⵠΔ[848];
      ⵠΔ[855] = ⵠΔ[853];
      ⵠΔ[1117] = ⵠΔ[302];
      ⵠΔ[1116] = ⵠΔ[1115];
      ⵠΔ[867] = ⵠΔ[865];
      ⵠΔ[870] = ⵠΔ[868];
      ⵠΔ[872] = ⵠΔ[871];
      ⵠΔ[880] = ⵠΔ[878];
      ⵠΔ[1174] = ⵠΔ[298];
      ⵠΔ[882] = ⵠΔ[881];
      ⵠΔ[884] = ⵠΔ[883];
      ⵠΔ[894] = ⵠΔ[893];
      ⵠΔ[980] = ⵠΔ[238];
      ⵠΔ[1006] = ⵠΔ[1005];
      ⵠΔ[1008] = ⵠΔ[278];
      ⵠΔ[1010] = ⵠΔ[1009];
      ⵠΔ[1012] = ⵠΔ[279];
      ⵠΔ[1014] = ⵠΔ[1013];
      ⵠΔ[1015] = ⵠΔ[277];
      ⵠΔ[1018] = ⵠΔ[1016];
      ⵠΔ[1022] = ⵠΔ[1020];
      ⵠΔ[1027] = ⵠΔ[1025];
      ⵠΔ[1030] = ⵠΔ[1028];
      ⵠΔ[1036] = ⵠΔ[283];
      ⵠΔ[1035] = ⵠΔ[282];
      ⵠΔ[1039] = ⵠΔ[1038];
      ⵠΔ[1050] = ⵠΔ[1049];
      ⵠΔ[1059] = ⵠΔ[1057];
      ⵠΔ[1085] = ⵠΔ[1083];
      ⵠΔ[1096] = ⵠΔ[1094];
      ⵠΔ[1077] = ⵠΔ[1075];
      ⵠΔ[1722] = [];
      ⵠΔ[1722][0] = ᐃΔ.ⵠⵠᐃⵠⲆ;
      ⵠΔ[1722][1] = ᐃΔ.ⵠⵠᐃⵠⲆ;
      ⵠΔ[1722][2] = ᐃΔ.ⵠⵠᐃⵠⲆ;
      ⵠΔ[1721] = ⵠΔ[1722];
      ⵠΔ[1724] = [];
      ⵠΔ[1724][0] = ᐃΔ.ⵠΔⲆᐃᐃ;
      ⵠΔ[1724][1] = ᐃΔ.ⵠΔⲆᐃᐃ;
      ⵠΔ[1724][2] = ᐃΔ.ⵠΔⲆᐃᐃ;
      ⵠΔ[1723] = ⵠΔ[1724];
      ⵠΔ[1726] = [];
      ⵠΔ[1726][0] = ᐃΔ.ⵠⵠΔΔᐃ;
      ⵠΔ[1726][1] = ᐃΔ.ⵠⵠΔΔᐃ;
      ⵠΔ[1726][2] = ᐃΔ.ⵠⵠΔΔᐃ;
      ⵠΔ[1725] = ⵠΔ[1726];
      ⵠΔ[1728] = [];
      ⵠΔ[1728][0] = ᐃΔ.ΔᐃΔΔⲆ;
      ⵠΔ[1728][1] = ᐃΔ.ΔᐃΔΔⲆ;
      ⵠΔ[1728][2] = ᐃΔ.ΔᐃΔΔⲆ;
      ⵠΔ[1727] = ⵠΔ[1728];
      ⵠΔ[1730] = [];
      ⵠΔ[1730][0] = ᐃΔ.ⲆΔⵠⵠⵠ;
      ⵠΔ[1730][1] = ᐃΔ.ⲆΔⵠⵠⵠ;
      ⵠΔ[1730][2] = ᐃΔ.ⲆΔⵠⵠⵠ;
      ⵠΔ[1729] = ⵠΔ[1730];
      ⵠΔ[1732] = [];
      ⵠΔ[1732][0] = ᐃΔ.ⲆᐃΔᐃᐃ;
      ⵠΔ[1732][1] = ᐃΔ.ⲆᐃΔᐃᐃ;
      ⵠΔ[1732][2] = ᐃΔ.ⲆᐃΔᐃᐃ;
      ⵠΔ[1731] = ⵠΔ[1732];
      ⵠΔ[1736] = [];
      ⵠΔ[1736][0] = ᐃΔ.ⲆΔΔᐃᐃ;
      ⵠΔ[1736][1] = ᐃΔ.ⲆΔΔᐃᐃ;
      ⵠΔ[1736][2] = ᐃΔ.ⲆΔΔᐃᐃ;
      ⵠΔ[1735] = ⵠΔ[1736];
      ⵠΔ[1734] = [];
      ⵠΔ[1734][0] = ᐃΔ.ΔΔΔⵠⲆ;
      ⵠΔ[1734][1] = ᐃΔ.ΔΔΔⵠⲆ;
      ⵠΔ[1734][2] = ᐃΔ.ΔΔΔⵠⲆ;
      ⵠΔ[1733] = ⵠΔ[1734];
      ⵠΔ[1738] = [];
      ⵠΔ[1738][0] = ᐃΔ.ⵠⵠⲆᐃᐃⵠᐃ;
      ⵠΔ[1738][1] = ᐃΔ.ⲆΔⵠⲆᐃⲆⵠ;
      ⵠΔ[1738][2] = ᐃΔ.ΔᐃⲆⲆⲆᐃⲆ;
      ⵠΔ[1737] = ⵠΔ[1738];
      ⵠΔ[549] = [];
      ⵠΔ[549][0] = ᐃΔ.ΔⵠᐃⲆᐃⲆⲆ;
      ⵠΔ[549][1] = ᐃΔ.ᐃᐃⲆΔⵠⲆⲆ;
      ⵠΔ[549][2] = ᐃΔ.ⲆΔΔΔⵠⲆΔ;
      ⵠΔ[550] = ⵠΔ[549];
      ⵠΔ[551] = ⵠΔ[549];
      ⵠΔ[552] = [];
      ⵠΔ[552][0] = ᐃΔ.ΔⲆⵠⲆΔᐃⵠ;
      ⵠΔ[552][1] = ᐃΔ.ᐃΔᐃⲆⵠΔᐃ;
      ⵠΔ[552][2] = ᐃΔ.ΔⲆⵠⵠᐃΔᐃ;
      ⵠΔ[553] = ⵠΔ[552];
      ⵠΔ[554] = ⵠΔ[552];
      ⵠΔ[555] = [];
      ⵠΔ[555][0] = ᐃΔ.ΔΔⵠⲆⲆᐃΔ;
      ⵠΔ[555][1] = ᐃΔ.ΔᐃΔⲆᐃⵠᐃ;
      ⵠΔ[555][2] = ᐃΔ.ⵠⵠⲆⵠᐃⲆⲆ;
      ⵠΔ[556] = ⵠΔ[555];
      ⵠΔ[557] = ⵠΔ[555];
      ⵠΔ[558] = [];
      ⵠΔ[558][0] = ᐃΔ.ᐃᐃΔᐃᐃᐃⲆ;
      ⵠΔ[558][1] = ᐃΔ.ⲆΔΔⵠᐃᐃⵠ;
      ⵠΔ[558][2] = ᐃΔ.ᐃⵠⵠⵠΔΔᐃ;
      ⵠΔ[559] = ⵠΔ[558];
      ⵠΔ[560] = ⵠΔ[558];
      ⵠΔ[561] = [];
      ⵠΔ[561][0] = ᐃΔ.ᐃⵠⲆⲆⲆΔⵠ;
      ⵠΔ[561][1] = ᐃΔ.ⵠⵠⵠⵠⵠⲆⵠ;
      ⵠΔ[561][2] = ᐃΔ.ᐃᐃⵠⵠⲆᐃᐃ;
      ⵠΔ[562] = ⵠΔ[561];
      ⵠΔ[563] = ⵠΔ[561];
      ⵠΔ[564] = [];
      ⵠΔ[564][0] = ᐃΔ.ⲆᐃΔⵠⵠⵠⵠ;
      ⵠΔ[564][1] = ᐃΔ.ⵠⲆⲆⵠᐃᐃΔ;
      ⵠΔ[564][2] = ᐃΔ.ΔⲆΔⲆⵠⲆᐃ;
      ⵠΔ[565] = ⵠΔ[564];
      ⵠΔ[566] = ⵠΔ[564];
      ⵠΔ[567] = [];
      ⵠΔ[567][0] = ᐃΔ.ᐃᐃᐃᐃᐃⵠⲆ;
      ⵠΔ[567][1] = ᐃΔ.ⲆⲆᐃⲆΔΔⲆ;
      ⵠΔ[567][2] = ᐃΔ.ΔΔΔⵠⵠΔⵠ;
      ⵠΔ[568] = ⵠΔ[567];
      ⵠΔ[569] = ⵠΔ[567];
      ⵠΔ[570] = [];
      ⵠΔ[570][0] = ᐃΔ.ᐃⵠᐃᐃⲆⲆᐃ;
      ⵠΔ[570][1] = ᐃΔ.ᐃΔᐃᐃΔⵠᐃ;
      ⵠΔ[570][2] = ᐃΔ.ΔⲆⲆᐃᐃΔΔ;
      ⵠΔ[571] = ⵠΔ[570];
      ⵠΔ[572] = ⵠΔ[570];
      ⵠΔ[573] = [];
      ⵠΔ[573][0] = ᐃΔ.ΔⵠΔᐃⲆⲆⵠ;
      ⵠΔ[573][1] = ᐃΔ.ⵠⵠΔᐃⲆᐃΔ;
      ⵠΔ[573][2] = ᐃΔ.ⵠⵠⵠᐃⵠᐃᐃ;
      ⵠΔ[574] = ⵠΔ[573];
      ⵠΔ[575] = ⵠΔ[573];
      ⵠΔ[1296] = [];
      ⵠΔ[1296][0] = ᐃΔ.ⲆᐃΔⵠⲆᐃⵠ;
      ⵠΔ[1296][1] = ᐃΔ.ⲆΔᐃⵠᐃⵠᐃ;
      ⵠΔ[1296][2] = ᐃΔ.ᐃⲆΔⵠⵠⵠΔ;
      ⵠΔ[1298] = ⵠΔ[1296];
      ⵠΔ[1297] = ⵠΔ[1296];
      ⵠΔ[1299] = [];
      ⵠΔ[1299][0] = ᐃΔ.ⲆⵠᐃⲆⲆⵠΔ;
      ⵠΔ[1299][1] = ᐃΔ.ⲆⵠⲆⵠΔⲆΔ;
      ⵠΔ[1299][2] = ᐃΔ.ΔΔⵠᐃΔᐃⲆ;
      ⵠΔ[1301] = ⵠΔ[1299];
      ⵠΔ[1300] = ⵠΔ[1299];
      ⵠΔ[1302] = [];
      ⵠΔ[1302][0] = ᐃΔ.ᐃᐃⲆΔᐃΔⲆ;
      ⵠΔ[1302][1] = ᐃΔ.ⵠⲆᐃᐃᐃᐃⵠ;
      ⵠΔ[1302][2] = ᐃΔ.ᐃⵠⲆᐃΔᐃΔ;
      ⵠΔ[1304] = ⵠΔ[1302];
      ⵠΔ[1303] = ⵠΔ[1302];
      ⵠΔ[1305] = [];
      ⵠΔ[1305][0] = ᐃΔ.ⲆΔΔⲆⲆⵠⵠ;
      ⵠΔ[1305][1] = ᐃΔ.ΔⲆⲆⵠⲆⲆⵠ;
      ⵠΔ[1305][2] = ᐃΔ.ΔᐃᐃⵠΔᐃᐃ;
      ⵠΔ[1307] = ⵠΔ[1305];
      ⵠΔ[1306] = ⵠΔ[1305];
      ⵠΔ[1308] = [];
      ⵠΔ[1308][0] = ᐃΔ.ⵠᐃΔΔⲆⵠⲆ;
      ⵠΔ[1308][1] = ᐃΔ.ΔᐃᐃⲆⲆⲆⲆ;
      ⵠΔ[1308][2] = ᐃΔ.ⲆⵠⲆⲆΔᐃⵠ;
      ⵠΔ[1310] = ⵠΔ[1308];
      ⵠΔ[1309] = ⵠΔ[1308];
      ⵠΔ[1311] = [];
      ⵠΔ[1311][0] = ᐃΔ.ⲆᐃⲆΔᐃΔᐃ;
      ⵠΔ[1311][1] = ᐃΔ.ᐃᐃᐃᐃᐃΔⵠ;
      ⵠΔ[1311][2] = ᐃΔ.ΔⲆΔⲆᐃⲆⲆ;
      ⵠΔ[1313] = ⵠΔ[1311];
      ⵠΔ[1312] = ⵠΔ[1311];
      ⵠΔ[1314] = [];
      ⵠΔ[1314][0] = ᐃΔ.ⵠᐃᐃⵠⵠᐃⲆ;
      ⵠΔ[1314][1] = ᐃΔ.ⲆⲆⲆᐃⵠᐃΔ;
      ⵠΔ[1314][2] = ᐃΔ.ⲆᐃΔΔⲆᐃᐃ;
      ⵠΔ[1316] = ⵠΔ[1314];
      ⵠΔ[1315] = ⵠΔ[1314];
      ⵠΔ[1317] = [];
      ⵠΔ[1317][0] = ᐃΔ.ⲆⵠᐃⲆΔⲆΔ;
      ⵠΔ[1317][1] = ᐃΔ.ⵠᐃᐃⵠⲆᐃⲆ;
      ⵠΔ[1317][2] = ᐃΔ.ⵠⲆⲆΔⲆᐃΔ;
      ⵠΔ[1319] = ⵠΔ[1317];
      ⵠΔ[1318] = ⵠΔ[1317];
      ⵠΔ[1320] = [];
      ⵠΔ[1320][0] = ᐃΔ.ᐃⲆⵠΔᐃⲆⵠ;
      ⵠΔ[1320][1] = ᐃΔ.ᐃⲆΔΔᐃΔⵠ;
      ⵠΔ[1320][2] = ᐃΔ.ΔⲆΔⵠᐃΔΔ;
      ⵠΔ[1322] = ⵠΔ[1320];
      ⵠΔ[1321] = ⵠΔ[1320];
      ⵠΔ[691] = [];
      ⵠΔ[691][0] = ᐃΔ.ⵠᐃᐃΔΔⵠⲆ;
      ⵠΔ[691][1] = ᐃΔ.ΔΔⵠⵠⵠΔⲆ;
      ⵠΔ[691][2] = ᐃΔ.ⲆⵠⵠⲆⲆⲆⲆ;
      ⵠΔ[692] = ⵠΔ[691];
      ⵠΔ[693] = ⵠΔ[691];
      ⵠΔ[694] = [];
      ⵠΔ[694][0] = ᐃΔ.ᐃΔΔⲆᐃΔⲆ;
      ⵠΔ[694][1] = ᐃΔ.ΔⵠⵠᐃΔⵠⲆ;
      ⵠΔ[694][2] = ᐃΔ.ΔΔⲆᐃᐃᐃⲆ;
      ⵠΔ[695] = ⵠΔ[694];
      ⵠΔ[696] = ⵠΔ[694];
      ⵠΔ[697] = [];
      ⵠΔ[697][0] = ᐃΔ.ⲆᐃᐃⵠΔΔᐃ;
      ⵠΔ[697][1] = ᐃΔ.ⵠΔΔᐃⵠᐃⵠ;
      ⵠΔ[697][2] = ᐃΔ.ⲆΔⵠᐃⵠΔⲆ;
      ⵠΔ[698] = ⵠΔ[697];
      ⵠΔ[699] = ⵠΔ[697];
      ⵠΔ[700] = [];
      ⵠΔ[700][0] = ᐃΔ.ᐃⵠᐃⵠᐃⵠⲆ;
      ⵠΔ[700][1] = ᐃΔ.ⲆⲆⵠⲆᐃΔⲆ;
      ⵠΔ[700][2] = ᐃΔ.ᐃΔΔᐃⵠΔⵠ;
      ⵠΔ[701] = ⵠΔ[700];
      ⵠΔ[702] = ⵠΔ[700];
      ⵠΔ[703] = [];
      ⵠΔ[703][0] = ᐃΔ.ΔⵠᐃⵠⵠⲆΔ;
      ⵠΔ[703][1] = ᐃΔ.ⵠᐃⲆⵠⵠᐃᐃ;
      ⵠΔ[703][2] = ᐃΔ.ⲆⲆⵠⵠᐃⵠᐃ;
      ⵠΔ[704] = ⵠΔ[703];
      ⵠΔ[705] = ⵠΔ[703];
      ⵠΔ[706] = [];
      ⵠΔ[706][0] = ᐃΔ.ⵠⵠⲆᐃᐃⲆⵠ;
      ⵠΔ[706][1] = ᐃΔ.ΔΔΔᐃⲆΔᐃ;
      ⵠΔ[706][2] = ᐃΔ.ⵠⲆΔⲆΔᐃⲆ;
      ⵠΔ[707] = ⵠΔ[706];
      ⵠΔ[708] = ⵠΔ[706];
      ⵠΔ[709] = [];
      ⵠΔ[709][0] = ᐃΔ.ⵠᐃⲆΔΔⲆᐃ;
      ⵠΔ[709][1] = ᐃΔ.ⲆⲆⲆᐃⵠᐃⲆ;
      ⵠΔ[709][2] = ᐃΔ.ⵠⵠᐃⵠΔᐃᐃ;
      ⵠΔ[710] = ⵠΔ[709];
      ⵠΔ[711] = ⵠΔ[709];
      ⵠΔ[712] = [];
      ⵠΔ[712][0] = ᐃΔ.ⲆⵠⲆΔⵠⲆⵠ;
      ⵠΔ[712][1] = ᐃΔ.ⲆΔⲆⲆⵠᐃᐃ;
      ⵠΔ[712][2] = ᐃΔ.ⲆᐃΔΔⵠⵠᐃ;
      ⵠΔ[713] = ⵠΔ[712];
      ⵠΔ[714] = ⵠΔ[712];
      ⵠΔ[715] = [];
      ⵠΔ[715][0] = ᐃΔ.ΔᐃᐃⵠᐃᐃⲆ;
      ⵠΔ[715][1] = ᐃΔ.ΔΔⵠΔⵠⲆΔ;
      ⵠΔ[715][2] = ᐃΔ.ⲆⵠⵠΔΔᐃⵠ;
      ⵠΔ[716] = ⵠΔ[715];
      ⵠΔ[717] = ⵠΔ[715];
      ⵠΔ[954] = [];
      ⵠΔ[954][0] = ᐃΔ.ΔⲆᐃᐃΔⵠᐃ;
      ⵠΔ[954][1] = ᐃΔ.ⵠᐃⵠⵠⲆⵠΔ;
      ⵠΔ[954][2] = ᐃΔ.ⵠᐃⲆΔΔⲆΔ;
      ⵠΔ[955] = ⵠΔ[954];
      ⵠΔ[956] = ⵠΔ[954];
      ⵠΔ[927] = [];
      ⵠΔ[927][0] = ᐃΔ.ΔΔΔⵠΔⲆⵠ;
      ⵠΔ[927][1] = ᐃΔ.ΔⲆΔΔⵠⵠⵠ;
      ⵠΔ[927][2] = ᐃΔ.ⵠᐃΔΔⲆᐃⲆ;
      ⵠΔ[928] = ⵠΔ[927];
      ⵠΔ[929] = ⵠΔ[927];
      ⵠΔ[930] = [];
      ⵠΔ[930][0] = ᐃΔ.ⵠΔⲆⲆⵠⵠᐃ;
      ⵠΔ[930][1] = ᐃΔ.ⵠΔΔᐃᐃᐃΔ;
      ⵠΔ[930][2] = ᐃΔ.ⲆᐃᐃᐃⵠⲆΔ;
      ⵠΔ[931] = ⵠΔ[930];
      ⵠΔ[932] = ⵠΔ[930];
      ⵠΔ[933] = [];
      ⵠΔ[933][0] = ᐃΔ.ΔⵠΔⲆⵠⵠⲆ;
      ⵠΔ[933][1] = ᐃΔ.ⵠⲆΔΔΔᐃᐃ;
      ⵠΔ[933][2] = ᐃΔ.ⵠᐃΔᐃⵠⵠⲆ;
      ⵠΔ[934] = ⵠΔ[933];
      ⵠΔ[935] = ⵠΔ[933];
      ⵠΔ[936] = [];
      ⵠΔ[936][0] = ᐃΔ.ΔⵠⲆᐃⵠⵠⵠ;
      ⵠΔ[936][1] = ᐃΔ.ⲆⲆΔⵠᐃⲆⵠ;
      ⵠΔ[936][2] = ᐃΔ.ΔΔⲆⵠᐃΔᐃ;
      ⵠΔ[937] = ⵠΔ[936];
      ⵠΔ[938] = ⵠΔ[936];
      ⵠΔ[939] = [];
      ⵠΔ[939][0] = ᐃΔ.ⵠⲆⲆΔⵠᐃⵠ;
      ⵠΔ[939][1] = ᐃΔ.ⲆᐃᐃⲆⵠⲆΔ;
      ⵠΔ[939][2] = ᐃΔ.ⵠⲆᐃΔᐃⲆᐃ;
      ⵠΔ[940] = ⵠΔ[939];
      ⵠΔ[941] = ⵠΔ[939];
      ⵠΔ[942] = [];
      ⵠΔ[942][0] = ᐃΔ.ⵠⵠⵠⵠΔᐃᐃ;
      ⵠΔ[942][1] = ᐃΔ.ΔⵠⵠᐃΔⲆᐃ;
      ⵠΔ[942][2] = ᐃΔ.ⲆⵠᐃᐃⲆⵠᐃ;
      ⵠΔ[943] = ⵠΔ[942];
      ⵠΔ[944] = ⵠΔ[942];
      ⵠΔ[945] = [];
      ⵠΔ[945][0] = ᐃΔ.ᐃΔⲆᐃⵠⲆᐃ;
      ⵠΔ[945][1] = ᐃΔ.ΔⲆⵠᐃⲆᐃᐃ;
      ⵠΔ[945][2] = ᐃΔ.ᐃΔⲆᐃᐃΔⲆ;
      ⵠΔ[946] = ⵠΔ[945];
      ⵠΔ[947] = ⵠΔ[945];
      ⵠΔ[948] = [];
      ⵠΔ[948][0] = ᐃΔ.ⲆⵠⵠⵠⵠᐃⲆ;
      ⵠΔ[948][1] = ᐃΔ.ᐃⲆᐃⵠᐃⲆⲆ;
      ⵠΔ[948][2] = ᐃΔ.ⵠⲆⲆⲆᐃΔᐃ;
      ⵠΔ[949] = ⵠΔ[948];
      ⵠΔ[950] = ⵠΔ[948];
      ⵠΔ[951] = [];
      ⵠΔ[951][0] = ᐃΔ.ⵠⵠΔΔΔⵠΔ;
      ⵠΔ[951][1] = ᐃΔ.ⲆⵠⵠΔⲆᐃⵠ;
      ⵠΔ[951][2] = ᐃΔ.ⵠⵠⵠΔΔⲆΔ;
      ⵠΔ[952] = ⵠΔ[951];
      ⵠΔ[953] = ⵠΔ[951];
      ⵠΔ[734] = [];
      ⵠΔ[734][0] = ᐃΔ.ⲆⲆᐃᐃΔⲆⲆ;
      ⵠΔ[734][1] = ᐃΔ.ⲆⵠⲆΔᐃⲆᐃ;
      ⵠΔ[734][2] = ᐃΔ.ΔΔⵠⵠᐃⲆⵠ;
      ⵠΔ[735] = ⵠΔ[734];
      ⵠΔ[736] = ⵠΔ[734];
      ⵠΔ[737] = [];
      ⵠΔ[737][0] = ᐃΔ.ΔⵠΔⲆΔⵠⵠ;
      ⵠΔ[737][1] = ᐃΔ.ⵠⵠⵠᐃᐃⲆᐃ;
      ⵠΔ[737][2] = ᐃΔ.ΔΔⲆⵠΔⲆᐃ;
      ⵠΔ[738] = ⵠΔ[737];
      ⵠΔ[739] = ⵠΔ[737];
      ⵠΔ[740] = [];
      ⵠΔ[740][0] = ᐃΔ.ᐃᐃᐃΔⲆᐃⲆ;
      ⵠΔ[740][1] = ᐃΔ.ΔΔᐃΔᐃΔᐃ;
      ⵠΔ[740][2] = ᐃΔ.ΔᐃΔΔᐃⵠⵠ;
      ⵠΔ[741] = ⵠΔ[740];
      ⵠΔ[742] = ⵠΔ[740];
      ⵠΔ[743] = [];
      ⵠΔ[743][0] = ᐃΔ.ΔⵠᐃᐃΔⵠᐃ;
      ⵠΔ[743][1] = ᐃΔ.ⲆⵠΔᐃΔᐃⲆ;
      ⵠΔ[743][2] = ᐃΔ.ᐃᐃⲆΔⵠᐃⵠ;
      ⵠΔ[744] = ⵠΔ[743];
      ⵠΔ[745] = ⵠΔ[743];
      ⵠΔ[746] = [];
      ⵠΔ[746][0] = ᐃΔ.ⲆΔⲆΔΔⵠⵠ;
      ⵠΔ[746][1] = ᐃΔ.ΔΔⲆᐃⵠⵠⲆ;
      ⵠΔ[746][2] = ᐃΔ.ΔⲆⵠΔΔᐃⵠ;
      ⵠΔ[747] = ⵠΔ[746];
      ⵠΔ[748] = ⵠΔ[746];
      ⵠΔ[749] = [];
      ⵠΔ[749][0] = ᐃΔ.ᐃⲆΔΔⵠⵠΔ;
      ⵠΔ[749][1] = ᐃΔ.ⲆΔᐃᐃⵠⵠⲆ;
      ⵠΔ[749][2] = ᐃΔ.ΔⲆⵠᐃⵠΔΔ;
      ⵠΔ[750] = ⵠΔ[749];
      ⵠΔ[751] = ⵠΔ[749];
      ⵠΔ[752] = [];
      ⵠΔ[752][0] = ᐃΔ.ⲆⵠⵠⲆⲆΔⵠ;
      ⵠΔ[752][1] = ᐃΔ.ΔⲆᐃᐃⵠΔⵠ;
      ⵠΔ[752][2] = ᐃΔ.ⲆΔⵠᐃΔΔᐃ;
      ⵠΔ[753] = ⵠΔ[752];
      ⵠΔ[754] = ⵠΔ[752];
      ⵠΔ[755] = [];
      ⵠΔ[755][0] = ᐃΔ.ⲆᐃΔᐃᐃⵠΔ;
      ⵠΔ[755][1] = ᐃΔ.ⲆⵠⵠᐃⵠⵠⲆ;
      ⵠΔ[755][2] = ᐃΔ.ⵠΔⵠⲆⲆᐃᐃ;
      ⵠΔ[756] = ⵠΔ[755];
      ⵠΔ[757] = ⵠΔ[755];
      ⵠΔ[758] = [];
      ⵠΔ[758][0] = ᐃΔ.ᐃⵠΔᐃᐃⲆᐃ;
      ⵠΔ[758][1] = ᐃΔ.ⵠᐃᐃⵠΔⲆᐃ;
      ⵠΔ[758][2] = ᐃΔ.ⲆᐃᐃⵠⲆᐃⲆ;
      ⵠΔ[759] = ⵠΔ[758];
      ⵠΔ[760] = ⵠΔ[758];
      ⵠΔ[1129] = [];
      ⵠΔ[1129][0] = ᐃΔ.ⲆΔⲆΔᐃΔⵠ;
      ⵠΔ[1129][1] = ᐃΔ.ⲆⵠⲆΔⲆΔⲆ;
      ⵠΔ[1129][2] = ᐃΔ.ΔⵠΔⵠⵠⵠⲆ;
      ⵠΔ[1131] = ⵠΔ[1129];
      ⵠΔ[1130] = ⵠΔ[1129];
      ⵠΔ[1132] = [];
      ⵠΔ[1132][0] = ᐃΔ.ᐃⲆΔᐃᐃΔΔ;
      ⵠΔ[1132][1] = ᐃΔ.ⵠⲆΔΔΔᐃⲆ;
      ⵠΔ[1132][2] = ᐃΔ.ⲆΔΔᐃΔⵠⲆ;
      ⵠΔ[1134] = ⵠΔ[1132];
      ⵠΔ[1133] = ⵠΔ[1132];
      ⵠΔ[1135] = [];
      ⵠΔ[1135][0] = ᐃΔ.ⵠⵠᐃΔⵠΔⵠ;
      ⵠΔ[1135][1] = ᐃΔ.ΔᐃⲆⵠΔⲆΔ;
      ⵠΔ[1135][2] = ᐃΔ.ⲆᐃΔⲆⲆΔⲆ;
      ⵠΔ[1137] = ⵠΔ[1135];
      ⵠΔ[1136] = ⵠΔ[1135];
      ⵠΔ[1138] = [];
      ⵠΔ[1138][0] = ᐃΔ.ΔΔᐃᐃⵠᐃΔ;
      ⵠΔ[1138][1] = ᐃΔ.ΔⲆⵠⵠᐃᐃΔ;
      ⵠΔ[1138][2] = ᐃΔ.ᐃᐃⵠⲆⵠⵠⲆ;
      ⵠΔ[1140] = ⵠΔ[1138];
      ⵠΔ[1139] = ⵠΔ[1138];
      ⵠΔ[1141] = [];
      ⵠΔ[1141][0] = ᐃΔ.ᐃΔⵠⲆᐃᐃᐃ;
      ⵠΔ[1141][1] = ᐃΔ.ΔΔᐃⵠᐃᐃⲆ;
      ⵠΔ[1141][2] = ᐃΔ.Δⵠᐃⵠᐃᐃᐃ;
      ⵠΔ[1143] = ⵠΔ[1141];
      ⵠΔ[1142] = ⵠΔ[1141];
      ⵠΔ[1144] = [];
      ⵠΔ[1144][0] = ᐃΔ.ⵠΔᐃΔᐃΔΔ;
      ⵠΔ[1144][1] = ᐃΔ.ⵠΔᐃᐃᐃⲆⲆ;
      ⵠΔ[1144][2] = ᐃΔ.ᐃⵠⲆⵠᐃⲆⵠ;
      ⵠΔ[1146] = ⵠΔ[1144];
      ⵠΔ[1145] = ⵠΔ[1144];
      ⵠΔ[1147] = [];
      ⵠΔ[1147][0] = ᐃΔ.ⲆΔⲆⵠᐃⵠΔ;
      ⵠΔ[1147][1] = ᐃΔ.ⲆⲆⵠⲆⲆᐃΔ;
      ⵠΔ[1147][2] = ᐃΔ.ⲆΔⵠⵠΔᐃⵠ;
      ⵠΔ[1149] = ⵠΔ[1147];
      ⵠΔ[1148] = ⵠΔ[1147];
      ⵠΔ[1150] = [];
      ⵠΔ[1150][0] = ᐃΔ.ΔᐃΔΔΔⲆⲆ;
      ⵠΔ[1150][1] = ᐃΔ.ΔⵠΔᐃⲆΔⲆ;
      ⵠΔ[1150][2] = ᐃΔ.ΔⲆⵠᐃⲆΔⲆ;
      ⵠΔ[1152] = ⵠΔ[1150];
      ⵠΔ[1151] = ⵠΔ[1150];
      ⵠΔ[1153] = [];
      ⵠΔ[1153][0] = ᐃΔ.ⵠΔⵠⲆⵠᐃΔ;
      ⵠΔ[1153][1] = ᐃΔ.ΔᐃᐃΔΔᐃΔ;
      ⵠΔ[1153][2] = ᐃΔ.ΔᐃⲆⲆⲆⲆΔ;
      ⵠΔ[1155] = ⵠΔ[1153];
      ⵠΔ[1154] = ⵠΔ[1153];
      ⵠΔ[782] = [];
      ⵠΔ[782][0] = ᐃΔ.ⵠⲆⵠⵠⲆΔᐃ;
      ⵠΔ[782][1] = ᐃΔ.ᐃⲆΔᐃᐃⵠᐃ;
      ⵠΔ[782][2] = ᐃΔ.ᐃⵠᐃⵠᐃⵠᐃ;
      ⵠΔ[783] = ⵠΔ[782];
      ⵠΔ[784] = ⵠΔ[782];
      ⵠΔ[785] = [];
      ⵠΔ[785][0] = ᐃΔ.ΔΔᐃⵠⲆΔⵠ;
      ⵠΔ[785][1] = ᐃΔ.ⲆᐃΔⵠⵠᐃΔ;
      ⵠΔ[785][2] = ᐃΔ.ᐃᐃⵠⵠᐃⵠΔ;
      ⵠΔ[786] = ⵠΔ[785];
      ⵠΔ[787] = ⵠΔ[785];
      ⵠΔ[788] = [];
      ⵠΔ[788][0] = ᐃΔ.ⵠᐃⲆⵠⵠⵠⲆ;
      ⵠΔ[788][1] = ᐃΔ.ᐃᐃΔΔᐃⵠⵠ;
      ⵠΔ[788][2] = ᐃΔ.ⲆᐃⲆⵠⵠᐃᐃ;
      ⵠΔ[789] = ⵠΔ[788];
      ⵠΔ[790] = ⵠΔ[788];
      ⵠΔ[791] = [];
      ⵠΔ[791][0] = ᐃΔ.ⵠⲆⲆᐃΔⵠᐃ;
      ⵠΔ[791][1] = ᐃΔ.ⵠⲆΔΔⵠᐃΔ;
      ⵠΔ[791][2] = ᐃΔ.ΔⵠⲆⵠᐃΔⵠ;
      ⵠΔ[792] = ⵠΔ[791];
      ⵠΔ[793] = ⵠΔ[791];
      ⵠΔ[794] = [];
      ⵠΔ[794][0] = ᐃΔ.ⲆΔᐃΔⲆᐃᐃ;
      ⵠΔ[794][1] = ᐃΔ.ΔᐃⵠⲆᐃΔⵠ;
      ⵠΔ[794][2] = ᐃΔ.ΔⲆᐃΔᐃΔⲆ;
      ⵠΔ[795] = ⵠΔ[794];
      ⵠΔ[796] = ⵠΔ[794];
      ⵠΔ[797] = [];
      ⵠΔ[797][0] = ᐃΔ.ⵠᐃⲆᐃΔΔⲆ;
      ⵠΔ[797][1] = ᐃΔ.ΔⵠΔΔᐃⲆᐃ;
      ⵠΔ[797][2] = ᐃΔ.ⲆΔⲆΔⲆⵠⵠ;
      ⵠΔ[798] = ⵠΔ[797];
      ⵠΔ[799] = ⵠΔ[797];
      ⵠΔ[800] = [];
      ⵠΔ[800][0] = ᐃΔ.ⵠᐃΔⵠΔᐃΔ;
      ⵠΔ[800][1] = ᐃΔ.ⵠⲆⲆΔⲆᐃⵠ;
      ⵠΔ[800][2] = ᐃΔ.ᐃⵠᐃⲆΔⵠΔ;
      ⵠΔ[801] = ⵠΔ[800];
      ⵠΔ[802] = ⵠΔ[800];
      ⵠΔ[803] = [];
      ⵠΔ[803][0] = ᐃΔ.ⲆⲆⲆⲆⲆᐃⵠ;
      ⵠΔ[803][1] = ᐃΔ.ⲆᐃⲆⵠΔΔΔ;
      ⵠΔ[803][2] = ᐃΔ.ΔⲆⲆΔⲆⲆⲆ;
      ⵠΔ[804] = ⵠΔ[803];
      ⵠΔ[805] = ⵠΔ[803];
      ⵠΔ[806] = [];
      ⵠΔ[806][0] = ᐃΔ.ⵠⵠⵠΔⲆⵠᐃ;
      ⵠΔ[806][1] = ᐃΔ.ⲆⵠⵠᐃⵠᐃΔ;
      ⵠΔ[806][2] = ᐃΔ.ᐃⵠᐃⵠⵠⵠⵠ;
      ⵠΔ[807] = ⵠΔ[806];
      ⵠΔ[808] = ⵠΔ[806];
      ⵠΔ[1515] = [];
      ⵠΔ[1515][0] = ᐃΔ.ΔᐃᐃⲆᐃⲆⵠ;
      ⵠΔ[1515][1] = ᐃΔ.ᐃΔΔⵠᐃΔᐃ;
      ⵠΔ[1515][2] = ᐃΔ.ⵠⵠⲆⵠⲆᐃⲆ;
      ⵠΔ[1517] = ⵠΔ[1515];
      ⵠΔ[1516] = ⵠΔ[1515];
      ⵠΔ[1518] = [];
      ⵠΔ[1518][0] = ᐃΔ.ΔⲆⵠΔⵠⲆⲆ;
      ⵠΔ[1518][1] = ᐃΔ.ⲆⵠⵠⵠⵠⵠΔ;
      ⵠΔ[1518][2] = ᐃΔ.ΔΔⵠⲆⵠⵠⲆ;
      ⵠΔ[1520] = ⵠΔ[1518];
      ⵠΔ[1519] = ⵠΔ[1518];
      ⵠΔ[1521] = [];
      ⵠΔ[1521][0] = ᐃΔ.ⲆⲆⵠⵠᐃᐃᐃ;
      ⵠΔ[1521][1] = ᐃΔ.ΔΔⵠⵠΔΔⲆ;
      ⵠΔ[1521][2] = ᐃΔ.ΔᐃⲆᐃⲆⵠΔ;
      ⵠΔ[1523] = ⵠΔ[1521];
      ⵠΔ[1522] = ⵠΔ[1521];
      ⵠΔ[1524] = [];
      ⵠΔ[1524][0] = ᐃΔ.ⵠᐃⵠΔⵠⲆⵠ;
      ⵠΔ[1524][1] = ᐃΔ.ΔᐃᐃⲆᐃᐃⲆ;
      ⵠΔ[1524][2] = ᐃΔ.ᐃⵠΔⵠⵠⵠⵠ;
      ⵠΔ[1526] = ⵠΔ[1524];
      ⵠΔ[1525] = ⵠΔ[1524];
      ⵠΔ[1527] = [];
      ⵠΔ[1527][0] = ᐃΔ.ᐃⵠᐃⲆⲆᐃⲆ;
      ⵠΔ[1527][1] = ᐃΔ.ⲆΔᐃⵠΔΔⲆ;
      ⵠΔ[1527][2] = ᐃΔ.ⵠΔᐃΔⵠᐃⵠ;
      ⵠΔ[1529] = ⵠΔ[1527];
      ⵠΔ[1528] = ⵠΔ[1527];
      ⵠΔ[1530] = [];
      ⵠΔ[1530][0] = ᐃΔ.ΔⵠᐃΔΔⲆᐃ;
      ⵠΔ[1530][1] = ᐃΔ.ⲆⲆᐃΔᐃΔⵠ;
      ⵠΔ[1530][2] = ᐃΔ.ⵠⲆⲆⲆᐃⲆⲆ;
      ⵠΔ[1532] = ⵠΔ[1530];
      ⵠΔ[1531] = ⵠΔ[1530];
      ⵠΔ[1533] = [];
      ⵠΔ[1533][0] = ᐃΔ.ⲆⵠⲆⲆⵠΔⲆ;
      ⵠΔ[1533][1] = ᐃΔ.ⲆᐃⲆⵠΔᐃⵠ;
      ⵠΔ[1533][2] = ᐃΔ.ⲆⲆⵠⲆᐃᐃⲆ;
      ⵠΔ[1535] = ⵠΔ[1533];
      ⵠΔ[1534] = ⵠΔ[1533];
      ⵠΔ[1536] = [];
      ⵠΔ[1536][0] = ᐃΔ.ᐃᐃᐃᐃΔΔΔ;
      ⵠΔ[1536][1] = ᐃΔ.ⲆΔΔⵠᐃΔⲆ;
      ⵠΔ[1536][2] = ᐃΔ.ⲆⵠᐃΔᐃΔᐃ;
      ⵠΔ[1538] = ⵠΔ[1536];
      ⵠΔ[1537] = ⵠΔ[1536];
      ⵠΔ[1539] = [];
      ⵠΔ[1539][0] = ᐃΔ.ⵠᐃᐃᐃᐃⵠᐃ;
      ⵠΔ[1539][1] = ᐃΔ.ⲆⲆᐃⲆᐃᐃⵠ;
      ⵠΔ[1539][2] = ᐃΔ.ⵠᐃΔᐃⲆΔⵠ;
      ⵠΔ[1541] = ⵠΔ[1539];
      ⵠΔ[1540] = ⵠΔ[1539];
      ⵠΔ[1648] = [];
      ⵠΔ[1648][0] = ᐃΔ.ⲆⲆⵠᐃΔⲆⲆⵠΔ;
      ⵠΔ[1648][1] = ᐃΔ.ΔΔⵠΔΔⲆᐃᐃΔ;
      ⵠΔ[1648][2] = ᐃΔ.ΔΔΔⲆⲆⲆⲆᐃᐃ;
      ⵠΔ[1647] = ⵠΔ[1648];
      ⵠΔ[1649] = ⵠΔ[1648];
      ⵠΔ[1651] = [];
      ⵠΔ[1651][0] = ᐃΔ.ⲆⲆᐃᐃⵠΔΔⵠⲆ;
      ⵠΔ[1651][1] = ᐃΔ.ⲆⵠⲆⵠⲆⲆᐃⵠΔ;
      ⵠΔ[1651][2] = ᐃΔ.ⲆⲆΔⵠᐃΔⲆⵠᐃ;
      ⵠΔ[1650] = ⵠΔ[1651];
      ⵠΔ[1652] = ⵠΔ[1651];
      ⵠΔ[1654] = [];
      ⵠΔ[1654][0] = ᐃΔ.ⵠΔᐃⲆⵠΔⲆⲆᐃ;
      ⵠΔ[1654][1] = ᐃΔ.ⵠⲆⲆⲆⲆⲆⵠΔᐃ;
      ⵠΔ[1654][2] = ᐃΔ.ᐃⵠⵠᐃⵠⵠⵠᐃᐃ;
      ⵠΔ[1653] = ⵠΔ[1654];
      ⵠΔ[1655] = ⵠΔ[1654];
      ⵠΔ[1657] = [];
      ⵠΔ[1657][0] = ᐃΔ.ⵠᐃⵠⲆΔⵠΔΔᐃ;
      ⵠΔ[1657][1] = ᐃΔ.ΔⵠᐃᐃⲆⲆⵠⵠᐃ;
      ⵠΔ[1657][2] = ᐃΔ.ⵠⲆΔⵠⲆⲆⲆⵠᐃ;
      ⵠΔ[1656] = ⵠΔ[1657];
      ⵠΔ[1658] = ⵠΔ[1657];
      ⵠΔ[1660] = [];
      ⵠΔ[1660][0] = ᐃΔ.ᐃⵠⵠΔᐃᐃᐃΔᐃ;
      ⵠΔ[1660][1] = ᐃΔ.ⵠᐃⲆⵠᐃΔᐃᐃΔ;
      ⵠΔ[1660][2] = ᐃΔ.ⵠΔⲆⲆΔⵠᐃⲆⲆ;
      ⵠΔ[1659] = ⵠΔ[1660];
      ⵠΔ[1661] = ⵠΔ[1660];
      ⵠΔ[1663] = [];
      ⵠΔ[1663][0] = ᐃΔ.ᐃᐃⵠᐃΔⲆΔΔᐃ;
      ⵠΔ[1663][1] = ᐃΔ.ᐃⵠⲆⵠΔΔⵠⵠⲆ;
      ⵠΔ[1663][2] = ᐃΔ.ᐃⵠⲆᐃⲆⲆᐃⵠⲆ;
      ⵠΔ[1662] = ⵠΔ[1663];
      ⵠΔ[1664] = ⵠΔ[1663];
      ⵠΔ[1666] = [];
      ⵠΔ[1666][0] = ᐃΔ.ⵠΔⵠΔΔⲆⵠΔⵠ;
      ⵠΔ[1666][1] = ᐃΔ.ᐃⲆⵠΔᐃⲆⵠΔᐃ;
      ⵠΔ[1666][2] = ᐃΔ.ⲆⵠΔⵠᐃΔⵠΔᐃ;
      ⵠΔ[1665] = ⵠΔ[1666];
      ⵠΔ[1667] = ⵠΔ[1666];
      ⵠΔ[1669] = [];
      ⵠΔ[1669][0] = ᐃΔ.ΔⲆΔᐃᐃⵠⵠⲆⵠ;
      ⵠΔ[1669][1] = ᐃΔ.ᐃΔⵠᐃⵠⵠΔⵠⲆ;
      ⵠΔ[1669][2] = ᐃΔ.ᐃⲆⵠΔⵠᐃⵠᐃⵠ;
      ⵠΔ[1668] = ⵠΔ[1669];
      ⵠΔ[1670] = ⵠΔ[1669];
      ⵠΔ[1672] = [];
      ⵠΔ[1672][0] = ᐃΔ.ⵠⲆⵠᐃΔΔⵠΔⵠ;
      ⵠΔ[1672][1] = ᐃΔ.ᐃᐃⵠⲆᐃᐃᐃᐃΔ;
      ⵠΔ[1672][2] = ᐃΔ.ⵠΔΔᐃⵠⵠΔΔΔ;
      ⵠΔ[1671] = ⵠΔ[1672];
      ⵠΔ[1673] = ⵠΔ[1672];
    })();
    ⵠΔ[678] = [];
    ⵠΔ[678][v594.ΔⲆᐃ] = [];
    ⵠΔ[678][v594.ᐃᐃⵠ] = [];
    for (var v1313 = 0; v1313 < v594.ⵠⵠΔⵠⲆⲆⲆ; v1313++) {
      ⵠΔ[678][v594.ΔⲆᐃ].push(f50(f164(v1310, 4 + v1313, "#59B8CE")));
      ⵠΔ[678][v594.ᐃᐃⵠ].push(f50(f164(v1310, 4 + v1313, "#90DDD9")));
    }
    ⵠΔ[608] = [];
    ⵠΔ[608][v594.ΔⲆᐃ] = [];
    ⵠΔ[608][v594.ᐃᐃⵠ] = [];
    for (v1313 = 0; v1313 < v594.ΔⵠⵠⵠΔⵠⵠ; v1313++) {
      ⵠΔ[608][v594.ΔⲆᐃ].push(f50(f164(v1310, 4 + v1313, "#fff")));
      ⵠΔ[608][v594.ᐃᐃⵠ].push(f50(f164(v1310, 4 + v1313, "#fff")));
    }
    ⵠΔ[609] = [];
    ⵠΔ[609][v594.ΔⲆᐃ] = [];
    ⵠΔ[609][v594.ᐃᐃⵠ] = [];
    for (v1313 = 0; v1313 < v594.ΔⵠⵠⵠΔⵠⵠ; v1313++) {
      ⵠΔ[609][v594.ΔⲆᐃ].push(f50(f164(v1310, 6 + v1313, "#DDCD8A")));
      ⵠΔ[609][v594.ᐃᐃⵠ].push(f50(f164(v1310, 6 + v1313, "#155E57")));
    }
    ⵠΔ[1218] = [];
    ⵠΔ[1218][v594.ΔⲆᐃ] = [];
    ⵠΔ[1218][v594.ᐃᐃⵠ] = [];
    for (v1313 = 0; v594.ᐃΔΔⵠᐃⲆⲆ > v1313; v1313++) {
      ⵠΔ[1218][v594.ΔⲆᐃ].push(f50(f164(v1310, 4 + v1313, "#353326")));
      ⵠΔ[1218][v594.ᐃᐃⵠ].push(f50(f164(v1310, 4 + v1313, "#1D2526")));
    }
    ⵠΔ[303] = [];
    ⵠΔ[303][v594.ΔⲆᐃ] = f50(f99(v1310 * 1.5, 0, ["#ee71a9"]));
    ⵠΔ[303][v594.ᐃᐃⵠ] = f50(f99(v1310 * 1.5, 0, ["#ee71a9"]));
    ⵠΔ[1121] = [ⵠΔ[303]];
    ⵠΔ[1121][1] = [];
    ⵠΔ[1121][2] = [];
    ⵠΔ[1121][3] = [];
    ⵠΔ[1121][4] = [];
    ⵠΔ[1121][1][v594.ΔⲆᐃ] = f50(f99(v1310 * 1.5, 0, ["#e2d63b"]));
    ⵠΔ[1121][1][v594.ᐃᐃⵠ] = f50(f99(v1310 * 1.5, 0, ["#e2d63b"]));
    ⵠΔ[1121][2][v594.ΔⲆᐃ] = f50(f99(v1310 * 1.5, 0, ["#309cbd"]));
    ⵠΔ[1121][2][v594.ᐃᐃⵠ] = f50(f99(v1310 * 1.5, 0, ["#309cbd"]));
    ⵠΔ[1121][3][v594.ΔⲆᐃ] = f50(f99(v1310 * 1.5, 0, ["#cd232d"]));
    ⵠΔ[1121][3][v594.ᐃᐃⵠ] = f50(f99(v1310 * 1.5, 0, ["#cd232d"]));
    ⵠΔ[1121][4][v594.ΔⲆᐃ] = f50(f99(v1310 * 1.5, 0, ["#42b672"]));
    ⵠΔ[1121][4][v594.ᐃᐃⵠ] = f50(f99(v1310 * 1.5, 0, ["#42b672"]));
    if (ⵠⵠΔ.ⲆᐃᐃΔⲆⲆⲆ("cti", vWindow.location.href)) {
      document.getElementById("version").innerHTML += "[CTI]";
    } else {
      f50 = function (p968) {
        p968.loaded = 1;
        return p968;
      };
    }
    ⵠΔ[1046] = f50(function () {
      var v1314 = document.createElement("canvas");
      var v1315 = v1314.getContext("2d");
      v1314.width = 460;
      v1314.height = 220;
      v1315.fillStyle = "#3a2a0d";
      v1315.fillRect(0, 0, v1314.width, v1314.height);
      v1315.lineWidth = 4;
      v1315.beginPath();
      v1315.strokeStyle = "#513810";
      for (var v1316 = 20; v1316 < 220; v1316 += 20) {
        v1315.moveTo(0, v1316);
        v1315.lineTo(460, v1316);
        v1315.closePath();
        v1315.stroke();
      }
      return v1314;
    }());
    ⵠΔ[199] = [];
    ⵠΔ[199][v594.ΔⲆᐃ] = [];
    ⵠΔ[199][v594.ᐃᐃⵠ] = [];
    ⵠΔ[199][v594.ΔⲆᐃ].push(f50(f161(v1310 * 1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[199][v594.ΔⲆᐃ].push(f50(f161(v1310 * 0.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[199][v594.ΔⲆᐃ].push(f50(f161(v1310 * 0.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[199][v594.ᐃᐃⵠ].push(f50(f161(v1310 * 1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[199][v594.ᐃᐃⵠ].push(f50(f161(v1310 * 0.9, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[199][v594.ᐃᐃⵠ].push(f50(f161(v1310 * 0.6, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[202] = [];
    ⵠΔ[202][v594.ΔⲆᐃ] = [];
    ⵠΔ[202][v594.ᐃᐃⵠ] = [];
    ⵠΔ[202][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[202][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[202][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[202][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.5, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[202][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.3, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[202][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.1, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[203] = [];
    ⵠΔ[203][v594.ΔⲆᐃ] = [];
    ⵠΔ[203][v594.ᐃᐃⵠ] = [];
    ⵠΔ[203][v594.ΔⲆᐃ].push(f50(f168(v1310 * 1.1, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[203][v594.ΔⲆᐃ].push(f50(f168(v1310 * 0.9, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[203][v594.ΔⲆᐃ].push(f50(f168(v1310 * 0.7, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[203][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 1.1, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[203][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 0.9, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[203][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 0.7, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[349] = [];
    ⵠΔ[349][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔⲆΔⵠⲆⲆ;
    ⵠΔ[349][v594.ᐃᐃⵠ] = ᐃΔ.ⵠᐃᐃⲆⲆⲆⲆ;
    ⵠΔ[396] = [];
    ⵠΔ[396][v594.ΔⲆᐃ] = f50(f132(v1310 * 0.6, ["#0d1b1c"]));
    ⵠΔ[396][v594.ᐃᐃⵠ] = f50(f132(v1310 * 0.6, ["#030d14"]));
    ⵠΔ[1042] = [];
    ⵠΔ[1042][v594.ΔⲆᐃ] = f50(f130(v1310 * 0.6, ["#2a2938", "#242330"]));
    ⵠΔ[1042][v594.ᐃᐃⵠ] = f50(f130(v1310 * 0.6, ["#1b1e30", "#161921"]));
    ⵠΔ[1069] = [];
    ⵠΔ[1069][v594.ΔⲆᐃ] = f50(f116(v1310 * 0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
    ⵠΔ[1069][v594.ᐃᐃⵠ] = f50(f116(v1310 * 0.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
    ⵠΔ[1070] = [];
    ⵠΔ[1070][v594.ΔⲆᐃ] = f50(f103(v1310 * 0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"]));
    ⵠΔ[1070][v594.ᐃᐃⵠ] = f50(f103(v1310 * 0.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"]));
    ⵠΔ[1071] = [];
    ⵠΔ[1071][v594.ΔⲆᐃ] = f50(f136(v1310 * 0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
    ⵠΔ[1071][v594.ᐃᐃⵠ] = f50(f136(v1310 * 0.4, ["#030d14", "#11635e", "#02373e"]));
    ⵠΔ[1072] = f50(f112(v1310 * 0.6, ["#BB0000"]));
    ⵠΔ[1073] = f50(f112(v1310 * 0.6, ["#DBE71C"]));
    ⵠΔ[1074] = f50(f112(v1310 * 0.6, ["#00BB00"]));
    ⵠΔ[200] = [];
    ⵠΔ[200][v594.ΔⲆᐃ] = [];
    ⵠΔ[200][v594.ᐃᐃⵠ] = [];
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], false, 0));
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], true, 0));
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 0.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], vVVVV1623, 0));
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 0.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], true, 0));
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], vVVV1622, 0));
    ⵠΔ[200][v594.ΔⲆᐃ].push(f137(v1310 * 0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], true, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], vV163, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], vVVV12, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 0.9, ["#030d14", "#0b3534", "#144443", "#174240"], false, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 0.9, ["#030d14", "#0b3534", "#144443", "#174240"], true, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], vVV163, 0));
    ⵠΔ[200][v594.ᐃᐃⵠ].push(f137(v1310 * 0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], vVV1222, 0));
    ⵠΔ[418] = [];
    ⵠΔ[418][v594.ΔⲆᐃ] = [];
    ⵠΔ[418][v594.ᐃᐃⵠ] = [];
    ⵠΔ[418][v594.ΔⲆᐃ].push(f50(f145(f144(v1310 * 1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], false), ⵠΔ[200][v594.ΔⲆᐃ][0])));
    ⵠΔ[418][v594.ΔⲆᐃ].push(f50(f145(f144(v1310 * 1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], vVVV1223), ⵠΔ[200][v594.ΔⲆᐃ][1])));
    ⵠΔ[418][v594.ᐃᐃⵠ].push(f50(f145(f144(v1310 * 1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], false), ⵠΔ[200][v594.ᐃᐃⵠ][0])));
    ⵠΔ[418][v594.ᐃᐃⵠ].push(f50(f145(f144(v1310 * 1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], true), ⵠΔ[200][v594.ᐃᐃⵠ][1])));
    ⵠΔ[418][v594.ΔⲆᐃ].push(f50(f145(f144(v1310 * 0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], false), ⵠΔ[200][v594.ΔⲆᐃ][2])));
    ⵠΔ[418][v594.ΔⲆᐃ].push(f50(f145(f144(v1310 * 0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], true), ⵠΔ[200][v594.ΔⲆᐃ][2])));
    ⵠΔ[418][v594.ᐃᐃⵠ].push(f50(f145(f144(v1310 * 0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], false), ⵠΔ[200][v594.ᐃᐃⵠ][2])));
    ⵠΔ[418][v594.ᐃᐃⵠ].push(f50(f145(f144(v1310 * 0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], vVVV12222), ⵠΔ[200][v594.ᐃᐃⵠ][3])));
    ⵠΔ[200][v594.ΔⲆᐃ][5] = f50(ⵠΔ[200][v594.ΔⲆᐃ][5]);
    ⵠΔ[200][v594.ΔⲆᐃ][4] = f50(ⵠΔ[200][v594.ΔⲆᐃ][4]);
    ⵠΔ[200][v594.ΔⲆᐃ][3] = f50(ⵠΔ[200][v594.ΔⲆᐃ][3]);
    ⵠΔ[200][v594.ΔⲆᐃ][2] = f50(ⵠΔ[200][v594.ΔⲆᐃ][2]);
    ⵠΔ[200][v594.ΔⲆᐃ][1] = f50(ⵠΔ[200][v594.ΔⲆᐃ][1]);
    ⵠΔ[200][v594.ΔⲆᐃ][0] = f50(ⵠΔ[200][v594.ΔⲆᐃ][0]);
    ⵠΔ[200][v594.ᐃᐃⵠ][5] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][5]);
    ⵠΔ[200][v594.ᐃᐃⵠ][4] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][4]);
    ⵠΔ[200][v594.ᐃᐃⵠ][3] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][3]);
    ⵠΔ[200][v594.ᐃᐃⵠ][2] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][2]);
    ⵠΔ[200][v594.ᐃᐃⵠ][1] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][1]);
    ⵠΔ[200][v594.ᐃᐃⵠ][0] = f50(ⵠΔ[200][v594.ᐃᐃⵠ][0]);
    ⵠΔ[8] = [];
    ⵠΔ[8][v594.ΔⲆᐃ] = f50(f95(4, f143(v1310 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"])));
    ⵠΔ[8][v594.ᐃᐃⵠ] = f50(f95(4, f143(v1310 * 0.75, true, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"])));
    ⵠΔ[1] = [];
    ⵠΔ[1][v594.ΔⲆᐃ] = f50(f95(4, f143(v1310 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⵠΔ[1][v594.ᐃᐃⵠ] = f50(f95(4, f143(v1310 * 0.75, vV124, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"])));
    ⵠΔ[3] = [];
    ⵠΔ[3][v594.ΔⲆᐃ] = f50(f95(4, f143(v1310 * 0.75, vV12, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⵠΔ[3][v594.ᐃᐃⵠ] = f50(f95(4, f143(v1310 * 0.75, vVVVV12232, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"])));
    ⵠΔ[4] = [];
    ⵠΔ[4][v594.ΔⲆᐃ] = f50(f95(4, f143(v1310 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⵠΔ[4][v594.ᐃᐃⵠ] = f50(f95(4, f143(v1310 * 0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⵠΔ[49] = [];
    ⵠΔ[49][v594.ΔⲆᐃ] = f50(f95(4, f143(v1310 * 0.75, vVVVVV1222, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⵠΔ[49][v594.ᐃᐃⵠ] = f50(f95(4, f143(v1310 * 0.75, vVVVVV1222, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⵠΔ[9] = [];
    ⵠΔ[9][v594.ΔⲆᐃ] = f50(f95(3, f138(v1310 * 0.17, vVVVV1222, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"])));
    ⵠΔ[9][v594.ᐃᐃⵠ] = f50(f95(3, f138(v1310 * 0.17, vV124, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
    ⵠΔ[301] = [];
    ⵠΔ[301][v594.ΔⲆᐃ] = f50(f95(3, f155(v1310 * 0.32, vVVVV1223, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"])));
    ⵠΔ[301][v594.ᐃᐃⵠ] = f50(f95(3, f155(v1310 * 0.42, true, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
    ⵠΔ[103] = [];
    ⵠΔ[103][v594.ΔⲆᐃ] = f50(f95(3, f141(v1310 * 0.4, true, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"])));
    ⵠΔ[103][v594.ᐃᐃⵠ] = f50(f95(3, f141(v1310 * 0.4, true, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"])));
    ⵠΔ[0] = [];
    ⵠΔ[0][v594.ΔⲆᐃ] = f50(f95(3, f140(v1310 * 0.4, true, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"])));
    ⵠΔ[0][v594.ᐃᐃⵠ] = f50(f95(3, f140(v1310 * 0.4, vVVVV12232, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"])));
    ⵠΔ[5] = [];
    ⵠΔ[5][v594.ΔⲆᐃ] = f50(f95(3, f150(v1310 * 0.4, true, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"])));
    ⵠΔ[5][v594.ᐃᐃⵠ] = f50(f95(3, f150(v1310 * 0.4, v12, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"])));
    ⵠΔ[6] = [];
    ⵠΔ[6][v594.ΔⲆᐃ] = f50(f95(3, f154(v1310 * 0.4, vVVV12, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"])));
    ⵠΔ[6][v594.ᐃᐃⵠ] = f50(f95(3, f154(v1310 * 0.4, true, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"])));
    ⵠΔ[48] = [];
    ⵠΔ[48][v594.ΔⲆᐃ] = f50(f95(3, f148(v1310 * 0.4, vVVVV12232, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"])));
    ⵠΔ[48][v594.ᐃᐃⵠ] = f50(f95(3, f148(v1310 * 0.4, true, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"])));
    ⵠΔ[395] = [];
    ⵠΔ[395][v594.ΔⲆᐃ] = [];
    ⵠΔ[395][v594.ᐃᐃⵠ] = [];
    ⵠΔ[395][v594.ΔⲆᐃ].push(f50(f169(v1310 * 0.9, 0, ["#0d4f35"], 0)));
    ⵠΔ[395][v594.ΔⲆᐃ].push(f50(f169(v1310 * 0.9, 0, ["#0d4f35"], 1)));
    ⵠΔ[395][v594.ΔⲆᐃ].push(f50(f169(v1310 * 0.9, 0, ["#0d4f35"], 2)));
    ⵠΔ[395][v594.ᐃᐃⵠ].push(f50(f169(v1310 * 0.9, 0, ["#053339"], 0)));
    ⵠΔ[395][v594.ᐃᐃⵠ].push(f50(f169(v1310 * 0.9, 0, ["#053339"], 1)));
    ⵠΔ[395][v594.ᐃᐃⵠ].push(f50(f169(v1310 * 0.9, 0, ["#053339"], 2)));
    ⵠΔ[395][v594.ΔⲆᐃ].push(f50(f194(v1310 * 0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
    ⵠΔ[395][v594.ΔⲆᐃ].push(f50(f194(v1310 * 0.8, ["#292002", "#ba930e", "#6d5704"])));
    ⵠΔ[395][v594.ᐃᐃⵠ].push(f50(f194(v1310 * 0.9, ["#052919", "#0a4738", "#06321f"])));
    ⵠΔ[395][v594.ᐃᐃⵠ].push(f50(f194(v1310 * 0.8, ["#052918", "#08491c", "#063417"])));
    ⵠΔ[285] = [];
    ⵠΔ[285][v594.ΔⲆᐃ] = f50(f95(Math.PI / 2, f219(v1310 * 0.25, vVV123, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
    ⵠΔ[285][v594.ᐃᐃⵠ] = f50(f95(Math.PI / 2, f219(v1310 * 0.25, vV123, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
    ⵠΔ[1052] = [];
    ⵠΔ[1052].push(f50(f221(v1310 * 0.25, ["#44301b", "#57442a", "#523e26"], 0)));
    ⵠΔ[1052].push(f50(f221(v1310 * 0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
    ⵠΔ[1052].push(f50(f221(v1310 * 0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
    ⵠΔ[1051] = [];
    ⵠΔ[1051][v594.ΔⲆᐃ] = [];
    ⵠΔ[1051][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1051][v594.ΔⲆᐃ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
    ⵠΔ[1051][v594.ᐃᐃⵠ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
    ⵠΔ[1051][v594.ΔⲆᐃ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
    ⵠΔ[1051][v594.ᐃᐃⵠ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
    ⵠΔ[1051][v594.ΔⲆᐃ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3))));
    ⵠΔ[1051][v594.ᐃᐃⵠ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3))));
    ⵠΔ[1051][v594.ΔⲆᐃ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4))));
    ⵠΔ[1051][v594.ᐃᐃⵠ].push(f50(f95(Math.PI / 2, f215(v1310 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4))));
    ⵠΔ[201] = [];
    ⵠΔ[201][v594.ΔⲆᐃ] = [f50(f163(v1310 * 1.2, true, ["#0e3022", "#0b8052", "#077b49"]))];
    ⵠΔ[201][v594.ᐃᐃⵠ] = [f50(f163(v1310 * 1.2, vV124, ["#030d14", "#084442", "#0a4049"]))];
    ⵠΔ[842] = [];
    ⵠΔ[842][v594.ΔⲆᐃ] = f50(f163(v1310 * 0.8, true, ["#0e3022", "#68622D", "#665329"]));
    ⵠΔ[842][v594.ᐃᐃⵠ] = f50(f163(v1310 * 0.8, true, ["#030d14", "#0F3A24", "#083326"]));
    ⵠΔ[291] = [];
    ⵠΔ[291][v594.ΔⲆᐃ] = f50(f276(v1310 * 0.5, true, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
    ⵠΔ[291][v594.ᐃᐃⵠ] = f50(f276(v1310 * 0.5, true, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"]));
    ⵠΔ[294] = [];
    ⵠΔ[294][v594.ΔⲆᐃ] = f50(f97(v1310 * 0.5, true, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
    ⵠΔ[294][v594.ᐃᐃⵠ] = f50(f97(v1310 * 0.5, vVVVV1223, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
    ⵠΔ[296] = [];
    ⵠΔ[296][v594.ΔⲆᐃ] = f50(f257(v1310 * 0.5, true, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]));
    ⵠΔ[296][v594.ᐃᐃⵠ] = f50(f257(v1310 * 0.5, true, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
    ⵠΔ[397] = [];
    ⵠΔ[397][v594.ΔⲆᐃ] = f50(f163(v1310 * 0.8, true, ["#1b170c", "#0b8052", "#077b49"]));
    ⵠΔ[397][v594.ᐃᐃⵠ] = f50(f163(v1310 * 0.8, vVV123, ["#030d14", "#084442", "#0a4049"]));
    ⵠΔ[1062] = [];
    ⵠΔ[1062][v594.ΔⲆᐃ] = f50(f276(v1310 * 0.5, true, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"]));
    ⵠΔ[1062][v594.ᐃᐃⵠ] = f50(f276(v1310 * 0.5, vVV1222, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"]));
    ⵠΔ[1088] = [];
    ⵠΔ[1088][v594.ΔⲆᐃ] = f50(f97(v1310 * 0.5, true, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
    ⵠΔ[1088][v594.ᐃᐃⵠ] = f50(f97(v1310 * 0.5, vVVV12, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
    ⵠΔ[1118] = [];
    ⵠΔ[1118][v594.ΔⲆᐃ] = f50(f257(v1310 * 0.5, true, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
    ⵠΔ[1118][v594.ᐃᐃⵠ] = f50(f257(v1310 * 0.5, vVVV12222, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
    ⵠΔ[1103] = [];
    ⵠΔ[1103][v594.ΔⲆᐃ] = f50(f291(v1310 * 0.45, vVV1222, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
    ⵠΔ[1103][v594.ᐃᐃⵠ] = f50(f291(v1310 * 0.45, v12, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
    ⵠΔ[1108] = f50(f291(v1310 * 0.65, vVV122, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
    ⵠΔ[404] = [];
    ⵠΔ[404][v594.ΔⲆᐃ] = f50(f201(v1310 * 1.4, 0, ["#ac222a", "#e6636a"]));
    ⵠΔ[404][v594.ᐃᐃⵠ] = f50(f201(v1310 * 1.4, 0, ["#46195e", "#744188"]));
    ⵠΔ[405] = [];
    ⵠΔ[405][v594.ΔⲆᐃ] = f50(f201(v1310 * 1.25, 0, ["#cea52c", "#f2c85f"]));
    ⵠΔ[405][v594.ᐃᐃⵠ] = f50(f201(v1310 * 1.25, 0, ["#239b73", "#42c193"]));
    ⵠΔ[398] = [];
    ⵠΔ[398][v594.ΔⲆᐃ] = f50(f124(v1310 * 0.9, 0, ["#efd435", "#ec8d35", "#e96132"]));
    ⵠΔ[398][v594.ᐃᐃⵠ] = f50(f124(v1310 * 0.9, 0, ["#efdb7b", "#efe854", "#e8ef62"]));
    ⵠΔ[209] = [];
    ⵠΔ[209][v594.ΔⲆᐃ] = f50(f120(v1310 * 0.9, 0, ["#4d2d14", "#432516"]));
    ⵠΔ[209][v594.ᐃᐃⵠ] = f50(f120(v1310 * 0.9, 0, ["#282404", "#0a0a01"]));
    ⵠΔ[204] = [];
    ⵠΔ[204][v594.ΔⲆᐃ] = f50(f133(v1310 * 0.9, 0, ["#4d2d14", "#432516"]));
    ⵠΔ[204][v594.ᐃᐃⵠ] = f50(f133(v1310 * 0.9, 0, ["#282404", "#0a0a01"]));
    ⵠΔ[399] = [];
    ⵠΔ[399][v594.ΔⲆᐃ] = f50(f131(v1310 * 0.9, 0, ["#efd435"]));
    ⵠΔ[399][v594.ᐃᐃⵠ] = f50(f131(v1310 * 0.9, 0, ["#fffabb"]));
    ⵠΔ[392] = [];
    ⵠΔ[392][v594.ΔⲆᐃ] = f50(f134(v1310 * 0.9, 0, ["#efd435"]));
    ⵠΔ[392][v594.ᐃᐃⵠ] = f50(f134(v1310 * 0.9, 0, ["#fffabb"]));
    ⵠΔ[1065] = [];
    ⵠΔ[1065][v594.ΔⲆᐃ] = f50(f131(v1310 * 0.9, 0, ["#efd435"]));
    ⵠΔ[1065][v594.ᐃᐃⵠ] = f50(f131(v1310 * 0.9, 0, ["rgba(255, 84, 0, 1)"]));
    ⵠΔ[1066] = [];
    ⵠΔ[1066][v594.ΔⲆᐃ] = f50(f134(v1310 * 0.9, 0, ["#efd435"]));
    ⵠΔ[1066][v594.ᐃᐃⵠ] = f50(f134(v1310 * 0.9, 0, ["#ff5704"]));
    ⵠΔ[435] = f50(f111(v1310, "#ffffff"));
    ⵠΔ[412] = f50(f111(v1310 * 1.5, "#ffffff"));
    ⵠΔ[417] = f50(f156(v1310, "Your score:", v1310 * 15, "#FFF"));
    ⵠΔ[874] = f50(function (p969, p970) {
      var v1317 = document.createElement("canvas");
      var v1318 = v1317.getContext("2d");
      v1317.width = p969 * 243;
      v1317.height = p969 * 172;
      f94(v1318, p969 * 119.5, p969 * 140.125, p969 * 19);
      f89(v1318, undefined, p970[1], p969 * 5);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p969 * 36.5, p969 * 20.125);
      v1318.bezierCurveTo(p969 * 119.5, p969 * 20.625, p969 * 119.5, p969 * 20.625, p969 * 202.5, p969 * 21.125);
      v1318.bezierCurveTo(p969 * 214.5, p969 * 22.125, p969 * 216.5, p969 * 26.125, p969 * 217.5, p969 * 35.125);
      v1318.bezierCurveTo(p969 * 221, p969 * 76.125, p969 * 221, p969 * 76.125, p969 * 224.5, p969 * 117.125);
      v1318.bezierCurveTo(p969 * 225.5, p969 * 127.125, p969 * 221.5, p969 * 131.125, p969 * 210.5, p969 * 132.125);
      v1318.bezierCurveTo(p969 * 117.5, p969 * 132.125, p969 * 117.5, p969 * 132.125, p969 * 24.5, p969 * 132.125);
      v1318.bezierCurveTo(p969 * 14.5, p969 * 131.125, p969 * 13.5, p969 * 126.125, p969 * 16.5, p969 * 111.125);
      v1318.bezierCurveTo(p969 * 19.5, p969 * 73.125, p969 * 19.5, p969 * 73.125, p969 * 22.5, p969 * 35.125);
      v1318.bezierCurveTo(p969 * 23.5, p969 * 23.125, p969 * 29.5, p969 * 21.125, p969 * 36.5, p969 * 20.125);
      v1318.closePath();
      f89(v1318, p970[0], p970[1], p969 * 4);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p969 * 15.5, p969 * 138.625);
      v1318.bezierCurveTo(p969 * 120, p969 * 138.625, p969 * 120, p969 * 138.625, p969 * 224.5, p969 * 138.625);
      v1318.closePath();
      f89(v1318, undefined, p970[2], p969 * 10);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p969 * 13.5, p969 * 131.625);
      v1318.bezierCurveTo(p969 * 119.5, p969 * 131.625, p969 * 119.5, p969 * 131.625, p969 * 225.5, p969 * 131.625);
      v1318.closePath();
      f89(v1318, vVVVUndefined17, p970[3], p969 * 10);
      f94(v1318, p969 * 119.5, p969 * 140.125, p969 * 14.866068747318506);
      f89(v1318, p970[4], p970[5], p969 * 4);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p969 * 106.5, p969 * 146.625);
      v1318.bezierCurveTo(p969 * 116.5, p969 * 137.625, p969 * 118.5, p969 * 136.625, p969 * 123.5, p969 * 138.625);
      v1318.bezierCurveTo(p969 * 131.5, p969 * 145.625, p969 * 133.5, p969 * 148.625, p969 * 127.5, p969 * 152.625);
      v1318.bezierCurveTo(p969 * 115.5, p969 * 158.625, p969 * 111.5, p969 * 153.625, p969 * 106.5, p969 * 147.625);
      v1318.closePath();
      f89(v1318, p970[6], p970[7], p969 * 2);
      v1318.beginPath();
      v1318.lineCap = "round";
      v1318.lineJoin = "round";
      v1318.moveTo(p969 * 105.5, p969 * 146.625);
      v1318.bezierCurveTo(p969 * 116.5, p969 * 159.625, p969 * 124.5, p969 * 156.625, p969 * 132.5, p969 * 146.625);
      f89(v1318, undefined, p970[8], p969 * 5);
      v1318.save();
      v1318.translate(p969 * 75.5, p969 * 80.125);
      f90(v1318, p969 * -39, p969 * -40, p969 * 78, p969 * 78, p969 * 10);
      v1318.restore();
      f89(v1318, p970[9]);
      v1318.save();
      v1318.translate(p969 * 167, p969 * 80.125);
      f90(v1318, p969 * -38.5, p969 * -39, p969 * 78, p969 * 78, p969 * 10);
      v1318.restore();
      f89(v1318, p970[9]);
      return v1317;
    }(v1310 * 0.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
    ⵠΔ[875] = ᐃΔ.ΔΔᐃᐃⲆΔΔ;
    ⵠΔ[228] = [];
    ⵠΔ[228][v594.ΔⲆᐃ] = f50(f121(v1310 * 1.5, vVV123, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[228][v594.ᐃᐃⵠ] = f50(f121(v1310 * 1.5, vVVVV12222, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[860] = [];
    ⵠΔ[860][v594.ΔⲆᐃ] = f50(f119(v1310 * 2, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[860][v594.ᐃᐃⵠ] = f50(f119(v1310 * 2, vVVVV1222, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[861] = [];
    ⵠΔ[861][v594.ΔⲆᐃ] = f50(f126(v1310 * 1.5, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[861][v594.ᐃᐃⵠ] = f50(f126(v1310 * 1.5, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[227] = [];
    ⵠΔ[227][v594.ΔⲆᐃ] = f50(f125(v1310 * 2.2, 0, ["#A89F67", "#9E8456"]));
    ⵠΔ[227][v594.ᐃᐃⵠ] = f50(f125(v1310 * 2.2, 0, ["#0B4049", "#08383D"]));
    ⵠΔ[857] = [];
    ⵠΔ[857][v594.ΔⲆᐃ] = f50(f125(v1310 * 2.2, 0, ["#68622D", "#665329"]));
    ⵠΔ[857][v594.ᐃᐃⵠ] = f50(f125(v1310 * 2.2, 0, ["#0F3A24", "#083326"]));
    ⵠΔ[432] = [];
    ⵠΔ[432][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#A89F67", "#9E8456"]));
    ⵠΔ[432][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#15514F", "#0F3F3D"]));
    ⵠΔ[1060] = [];
    ⵠΔ[1060][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#c67933", "#b17238"]));
    ⵠΔ[1060][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[1260] = [];
    ⵠΔ[1260][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#3a8214", "#4a9c1e"]));
    ⵠΔ[1260][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#032d29", "#044640"]));
    ⵠΔ[1086] = [];
    ⵠΔ[1086][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#e8e8e8", "#bbbbbb"]));
    ⵠΔ[1086][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#1c6161", "#07413f"]));
    ⵠΔ[1097] = [];
    ⵠΔ[1097][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#328a56", "#449573"]));
    ⵠΔ[1097][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[1228] = [];
    ⵠΔ[1228][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#c98e2f", "#a36b11"]));
    ⵠΔ[1228][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[1238] = [];
    ⵠΔ[1238][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#b22419", "#99110e"]));
    ⵠΔ[1238][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#04323c", "#03222b"]));
    ⵠΔ[1743] = [];
    ⵠΔ[1743][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#c98e2f", "#a36b11"]));
    ⵠΔ[1743][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[1245] = [];
    ⵠΔ[1245][v594.ΔⲆᐃ] = f50(f153(v1310 * 0.8, 0, ["#13a56d", "#098a58"]));
    ⵠΔ[1245][v594.ᐃᐃⵠ] = f50(f153(v1310 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[876] = f123(1, [{
      f: f125,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[972] = f123(1, [{
      f: f133,
      x: 0,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[973] = f123(1, [{
      f: f285,
      x: 0,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[445] = f123(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[206] = [];
    ⵠΔ[206][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#7d613e", "#9e7e5a"]));
    ⵠΔ[206][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#084442", "#125e5a"]));
    ⵠΔ[225] = [];
    ⵠΔ[225][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#9E8456", "#A89F67"]));
    ⵠΔ[225][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#1b6f6a", "#0d4e4c"]));
    ⵠΔ[887] = [];
    ⵠΔ[887][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#665329", "#68622D"]));
    ⵠΔ[887][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#083326", "#0F3A24"]));
    ⵠΔ[290] = [];
    ⵠΔ[290][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#c67933", "#ec952d"]));
    ⵠΔ[290][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[320] = [];
    ⵠΔ[320][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#375809", "#4b770e"]));
    ⵠΔ[320][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#09542d", "#0d5d2f"]));
    ⵠΔ[1261] = [];
    ⵠΔ[1261][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#585809", "#72770e"]));
    ⵠΔ[1261][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#295209", "#305d0d"]));
    ⵠΔ[293] = [];
    ⵠΔ[293][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#b9b094", "#e2d2c0"]));
    ⵠΔ[293][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#126366", "#0d484b"]));
    ⵠΔ[295] = [];
    ⵠΔ[295][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#3f8662", "#30915d"]));
    ⵠΔ[295][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[1061] = [];
    ⵠΔ[1061][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#c79153", "#dfa868"]));
    ⵠΔ[1061][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#073927", "#075040"]));
    ⵠΔ[1087] = [];
    ⵠΔ[1087][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#768b5b", "#819984"]));
    ⵠΔ[1087][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#0c4540", "#0e5153"]));
    ⵠΔ[1098] = [];
    ⵠΔ[1098][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#567465", "#627c6e"]));
    ⵠΔ[1098][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#073927", "#075040"]));
    ⵠΔ[314] = [];
    ⵠΔ[314][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#996b3a", "#bf956b"]));
    ⵠΔ[314][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[1229] = [];
    ⵠΔ[1229][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#7a634a", "#a68f77"]));
    ⵠΔ[1229][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#1e4d43", "#113c32"]));
    ⵠΔ[1744] = [];
    ⵠΔ[1744][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#996b3a", "#bf956b"]));
    ⵠΔ[1744][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[1745] = [];
    ⵠΔ[1745][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#7a634a", "#a68f77"]));
    ⵠΔ[1745][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#1e4d43", "#113c32"]));
    ⵠΔ[316] = [];
    ⵠΔ[316][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#99403c", "#bc796c"]));
    ⵠΔ[316][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#1e434d", "#11303c"]));
    ⵠΔ[1239] = [];
    ⵠΔ[1239][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#88504e", "#b3857c"]));
    ⵠΔ[1239][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#253b41", "#162930"]));
    ⵠΔ[318] = [];
    ⵠΔ[318][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#0f8870", "#23af93"]));
    ⵠΔ[318][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#032829", "#083233"]));
    ⵠΔ[1246] = [];
    ⵠΔ[1246][v594.ΔⲆᐃ] = f50(f106(v1310 * 0.9, 0, ["#618a20", "#84a74e"]));
    ⵠΔ[1246][v594.ᐃᐃⵠ] = f50(f106(v1310 * 0.9, 0, ["#1f4632", "#335d47"]));
    ⵠΔ[205] = [];
    ⵠΔ[205][v594.ΔⲆᐃ] = f50(f104(v1310 * 1.2, vVV12, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]));
    ⵠΔ[205][v594.ᐃᐃⵠ] = f50(f104(v1310 * 1.2, vVVVV12222, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"]));
    ⵠΔ[264] = [];
    ⵠΔ[264][v594.ΔⲆᐃ] = f50(f204(v1310 * 1, true, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⵠΔ[264][v594.ᐃᐃⵠ] = f50(f204(v1310 * 1, vV124, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[267] = [];
    ⵠΔ[267][v594.ΔⲆᐃ] = f50(f181(v1310 * 1, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[267][v594.ᐃᐃⵠ] = f50(f181(v1310 * 1, vVVV12, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[213] = [];
    ⵠΔ[213][v594.ΔⲆᐃ] = f50(f205(v1310 * 1, vVVVVV1222, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[213][v594.ᐃᐃⵠ] = f50(f205(v1310 * 1, true, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[265] = [];
    ⵠΔ[265][v594.ΔⲆᐃ] = f50(f205(v1310 * 1, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⵠΔ[265][v594.ᐃᐃⵠ] = f50(f205(v1310 * 1, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⵠΔ[266] = [];
    ⵠΔ[266][v594.ΔⲆᐃ] = f50(f184(v1310 * 1, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⵠΔ[266][v594.ᐃᐃⵠ] = f50(f184(v1310 * 1, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⵠΔ[262] = [];
    ⵠΔ[262][v594.ΔⲆᐃ] = f50(f214(v1310 * 0.8, true, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⵠΔ[262][v594.ᐃᐃⵠ] = f50(f214(v1310 * 0.8, true, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[271] = [];
    ⵠΔ[271][v594.ΔⲆᐃ] = f50(f211(v1310 * 0.8, true, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⵠΔ[271][v594.ᐃᐃⵠ] = f50(f211(v1310 * 0.8, vVVVVV12232, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⵠΔ[272] = [];
    ⵠΔ[272][v594.ΔⲆᐃ] = f50(f210(v1310 * 0.8, true, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[272][v594.ᐃᐃⵠ] = f50(f210(v1310 * 0.8, v12, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[270] = [];
    ⵠΔ[270][v594.ΔⲆᐃ] = f50(f220(v1310 * 0.8, vV124, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⵠΔ[270][v594.ᐃᐃⵠ] = f50(f220(v1310 * 0.8, vV124, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⵠΔ[214] = [];
    ⵠΔ[214][v594.ΔⲆᐃ] = f50(f220(v1310 * 0.8, vVVV12, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[214][v594.ᐃᐃⵠ] = f50(f220(v1310 * 0.8, vVVV1222, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[268] = [];
    ⵠΔ[268][v594.ΔⲆᐃ] = f50(f197(v1310 * 1.5, true, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
    ⵠΔ[268][v594.ᐃᐃⵠ] = f50(f197(v1310 * 1.5, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[447] = [];
    ⵠΔ[447][v594.ΔⲆᐃ] = f50(f197(v1310 * 1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[447][v594.ᐃᐃⵠ] = f50(f197(v1310 * 1, false, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"]));
    ⵠΔ[273] = [];
    ⵠΔ[273][v594.ΔⲆᐃ] = f50(f188(v1310 * 1.5, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]));
    ⵠΔ[273][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1.5, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"]));
    ⵠΔ[484] = [];
    ⵠΔ[484][v594.ΔⲆᐃ] = f50(f188(v1310 * 1, vVVV163, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[484][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[215] = [];
    ⵠΔ[215][v594.ΔⲆᐃ] = f50(f188(v1310 * 1.5, vVVVV1222, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[215][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1.5, vVVVV1223, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[638] = [];
    ⵠΔ[638][v594.ΔⲆᐃ] = f50(f188(v1310 * 1, vVV163, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[638][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1, vVVV16222, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[274] = [];
    ⵠΔ[274][v594.ΔⲆᐃ] = f50(f177(v1310 * 1.5, vVVVV12222, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]));
    ⵠΔ[274][v594.ᐃᐃⵠ] = f50(f177(v1310 * 1.5, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
    ⵠΔ[487] = [];
    ⵠΔ[487][v594.ΔⲆᐃ] = f50(f177(v1310 * 1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[487][v594.ᐃᐃⵠ] = f50(f177(v1310 * 1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[275] = [];
    ⵠΔ[275][v594.ΔⲆᐃ] = f50(f189(v1310 * 1.5, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[275][v594.ᐃᐃⵠ] = f50(f189(v1310 * 1.5, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[490] = [];
    ⵠΔ[490][v594.ΔⲆᐃ] = f50(f189(v1310 * 1, vV162, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[490][v594.ᐃᐃⵠ] = f50(f189(v1310 * 1, vVV165, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[269] = [];
    ⵠΔ[269][v594.ΔⲆᐃ] = f50(f203(v1310 * 0.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ⵠΔ[269][v594.ᐃᐃⵠ] = f50(f203(v1310 * 0.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"]));
    ⵠΔ[910] = [];
    ⵠΔ[910][v594.ΔⲆᐃ] = f50(f226(v1310 * 0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
    ⵠΔ[910][v594.ᐃᐃⵠ] = f50(f226(v1310 * 0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
    ⵠΔ[374] = [];
    ⵠΔ[374][v594.ΔⲆᐃ] = f50(f114(v1310 * 0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
    ⵠΔ[374][v594.ᐃᐃⵠ] = f50(f114(v1310 * 0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
    ⵠΔ[370] = [];
    ⵠΔ[370][v594.ΔⲆᐃ] = f50(f95(Math.PI, f109(v1310 * 0.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"])));
    ⵠΔ[370][v594.ᐃᐃⵠ] = f50(f95(Math.PI, f109(v1310 * 0.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"])));
    ⵠΔ[376] = f50(function (p971, p972) {
      var v1319 = document.createElement("canvas");
      var v1320 = v1319.getContext("2d");
      v1319.width = p971 * 450;
      v1319.height = p971 * 470;
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 226.5, p971 * 91.546875);
      v1320.bezierCurveTo(p971 * 254.5, p971 * 115.546875, p971 * 261.5, p971 * 115.546875, p971 * 294.5, p971 * 109.546875);
      v1320.bezierCurveTo(p971 * 299.5, p971 * 141.546875, p971 * 315.5, p971 * 151.546875, p971 * 344.5, p971 * 158.546875);
      v1320.bezierCurveTo(p971 * 330.5, p971 * 195.546875, p971 * 341.5, p971 * 207.546875, p971 * 361.5, p971 * 226.546875);
      v1320.bezierCurveTo(p971 * 331.5, p971 * 251.546875, p971 * 335.5, p971 * 270.546875, p971 * 342.5, p971 * 295.546875);
      v1320.bezierCurveTo(p971 * 300.5, p971 * 296.546875, p971 * 293.5, p971 * 325.546875, p971 * 292.5, p971 * 344.546875);
      v1320.bezierCurveTo(p971 * 257.5, p971 * 326.546875, p971 * 242.5, p971 * 338.546875, p971 * 224.5, p971 * 361.546875);
      v1320.bezierCurveTo(p971 * 200.5, p971 * 329.546875, p971 * 180.5, p971 * 334.546875, p971 * 155.5, p971 * 341.546875);
      v1320.bezierCurveTo(p971 * 146.5, p971 * 307.546875, p971 * 140.5, p971 * 302.546875, p971 * 107.5, p971 * 292.546875);
      v1320.bezierCurveTo(p971 * 117.5, p971 * 253.546875, p971 * 109.5, p971 * 244.546875, p971 * 89.5, p971 * 224.546875);
      v1320.bezierCurveTo(p971 * 118.5, p971 * 191.546875, p971 * 114.5, p971 * 182.546875, p971 * 108.5, p971 * 156.546875);
      v1320.bezierCurveTo(p971 * 143.5, p971 * 149.546875, p971 * 150.5, p971 * 136.546875, p971 * 157.5, p971 * 106.546875);
      v1320.bezierCurveTo(p971 * 202.5, p971 * 120.546875, p971 * 211.5, p971 * 103.546875, p971 * 228.5, p971 * 91.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 224.5, p971 * 129.546875);
      v1320.bezierCurveTo(p971 * 247.5, p971 * 147.546875, p971 * 252.5, p971 * 143.546875, p971 * 274.5, p971 * 141.546875);
      v1320.bezierCurveTo(p971 * 279.5, p971 * 163.546875, p971 * 289.5, p971 * 168.546875, p971 * 311.5, p971 * 178.546875);
      v1320.bezierCurveTo(p971 * 301.5, p971 * 199.546875, p971 * 307.5, p971 * 213.546875, p971 * 323.5, p971 * 226.546875);
      v1320.bezierCurveTo(p971 * 303.5, p971 * 240.546875, p971 * 303.5, p971 * 255.546875, p971 * 312.5, p971 * 275.546875);
      v1320.bezierCurveTo(p971 * 281.5, p971 * 278.546875, p971 * 276.5, p971 * 291.546875, p971 * 272.5, p971 * 313.546875);
      v1320.bezierCurveTo(p971 * 248.5, p971 * 301.546875, p971 * 239.5, p971 * 310.546875, p971 * 224.5, p971 * 324.546875);
      v1320.bezierCurveTo(p971 * 211.5, p971 * 304.546875, p971 * 199.5, p971 * 301.546875, p971 * 176.5, p971 * 309.546875);
      v1320.bezierCurveTo(p971 * 165.5, p971 * 276.546875, p971 * 159.5, p971 * 275.546875, p971 * 138.5, p971 * 274.546875);
      v1320.bezierCurveTo(p971 * 148.5, p971 * 248.546875, p971 * 140.5, p971 * 237.546875, p971 * 125.5, p971 * 225.546875);
      v1320.bezierCurveTo(p971 * 145.5, p971 * 205.546875, p971 * 146.5, p971 * 195.546875, p971 * 142.5, p971 * 176.546875);
      v1320.bezierCurveTo(p971 * 173.5, p971 * 164.546875, p971 * 173.5, p971 * 155.546875, p971 * 178.5, p971 * 140.546875);
      v1320.bezierCurveTo(p971 * 214.5, p971 * 143.546875, p971 * 214.5, p971 * 135.546875, p971 * 226.5, p971 * 129.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 224.5, p971 * 160.546875);
      v1320.bezierCurveTo(p971 * 236.5, p971 * 168.546875, p971 * 239.5, p971 * 168.546875, p971 * 258.5, p971 * 168.546875);
      v1320.bezierCurveTo(p971 * 261.5, p971 * 185.546875, p971 * 268.5, p971 * 187.546875, p971 * 282.5, p971 * 192.546875);
      v1320.bezierCurveTo(p971 * 277.5, p971 * 208.546875, p971 * 283.5, p971 * 216.546875, p971 * 289.5, p971 * 228.546875);
      v1320.bezierCurveTo(p971 * 277.5, p971 * 243.546875, p971 * 280.5, p971 * 253.546875, p971 * 281.5, p971 * 260.546875);
      v1320.bezierCurveTo(p971 * 264.5, p971 * 260.546875, p971 * 259.5, p971 * 269.546875, p971 * 256.5, p971 * 283.546875);
      v1320.bezierCurveTo(p971 * 244.5, p971 * 276.546875, p971 * 232.5, p971 * 283.546875, p971 * 223.5, p971 * 291.546875);
      v1320.bezierCurveTo(p971 * 213.5, p971 * 276.546875, p971 * 205.5, p971 * 278.546875, p971 * 190.5, p971 * 281.546875);
      v1320.bezierCurveTo(p971 * 181.5, p971 * 262.546875, p971 * 173.5, p971 * 259.546875, p971 * 165.5, p971 * 258.546875);
      v1320.bezierCurveTo(p971 * 169.5, p971 * 239.546875, p971 * 167.5, p971 * 233.546875, p971 * 157.5, p971 * 225.546875);
      v1320.bezierCurveTo(p971 * 169.5, p971 * 208.546875, p971 * 170.5, p971 * 203.546875, p971 * 168.5, p971 * 192.546875);
      v1320.bezierCurveTo(p971 * 181.5, p971 * 187.546875, p971 * 188.5, p971 * 179.546875, p971 * 192.5, p971 * 168.546875);
      v1320.bezierCurveTo(p971 * 216.5, p971 * 170.546875, p971 * 218.5, p971 * 163.546875, p971 * 225.5, p971 * 160.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 205.5, p971 * 194.546875);
      v1320.bezierCurveTo(p971 * 216.5, p971 * 192.546875, p971 * 219.5, p971 * 191.546875, p971 * 225.5, p971 * 185.546875);
      v1320.bezierCurveTo(p971 * 232.5, p971 * 193.546875, p971 * 237.5, p971 * 191.546875, p971 * 246.5, p971 * 192.546875);
      v1320.bezierCurveTo(p971 * 249.5, p971 * 202.546875, p971 * 253.5, p971 * 205.546875, p971 * 258.5, p971 * 207.546875);
      v1320.bezierCurveTo(p971 * 259.5, p971 * 222.546875, p971 * 256.5, p971 * 223.546875, p971 * 265.5, p971 * 226.546875);
      v1320.bezierCurveTo(p971 * 256.5, p971 * 231.546875, p971 * 255.5, p971 * 241.546875, p971 * 259.5, p971 * 248.546875);
      v1320.bezierCurveTo(p971 * 250.5, p971 * 245.546875, p971 * 245.5, p971 * 252.546875, p971 * 243.5, p971 * 260.546875);
      v1320.bezierCurveTo(p971 * 234.5, p971 * 256.546875, p971 * 229.5, p971 * 258.546875, p971 * 223.5, p971 * 265.546875);
      v1320.bezierCurveTo(p971 * 218.5, p971 * 255.546875, p971 * 213.5, p971 * 257.546875, p971 * 204.5, p971 * 261.546875);
      v1320.bezierCurveTo(p971 * 203.5, p971 * 251.546875, p971 * 198.5, p971 * 248.546875, p971 * 189.5, p971 * 244.546875);
      v1320.bezierCurveTo(p971 * 194.5, p971 * 237.546875, p971 * 192.5, p971 * 231.546875, p971 * 184.5, p971 * 225.546875);
      v1320.bezierCurveTo(p971 * 191.5, p971 * 211.546875, p971 * 192.5, p971 * 209.546875, p971 * 190.5, p971 * 204.546875);
      v1320.bezierCurveTo(p971 * 200.5, p971 * 204.546875, p971 * 204.5, p971 * 198.546875, p971 * 207.5, p971 * 194.546875);
      v1320.closePath();
      f89(v1320, vVVVVUndefined173, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 149.5, p971 * 93.546875);
      v1320.bezierCurveTo(p971 * 287.5, p971 * 332.546875, p971 * 226, p971 * 225.546875, p971 * 302.5, p971 * 357.546875);
      v1320.closePath();
      f89(v1320, vUndefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 224.5, p971 * 66.546875);
      v1320.bezierCurveTo(p971 * 224.5, p971 * 223.546875, p971 * 224.5, p971 * 223.546875, p971 * 224.5, p971 * 380.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 302.5, p971 * 88.546875);
      v1320.bezierCurveTo(p971 * 222.5, p971 * 227.546875, p971 * 222.5, p971 * 227.546875, p971 * 142.5, p971 * 366.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 361.5, p971 * 147.546875);
      v1320.bezierCurveTo(p971 * 223, p971 * 226.546875, p971 * 223, p971 * 226.546875, p971 * 84.5, p971 * 305.546875);
      v1320.closePath();
      f89(v1320, vVVUndefined142, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 379.5, p971 * 225.546875);
      v1320.bezierCurveTo(p971 * 221, p971 * 225.546875, p971 * 221, p971 * 225.546875, p971 * 62.5, p971 * 225.546875);
      v1320.closePath();
      f89(v1320, undefined, p972[0], 4);
      v1320.beginPath();
      v1320.lineCap = "round";
      v1320.lineJoin = "round";
      v1320.moveTo(p971 * 90.5, p971 * 147.546875);
      v1320.bezierCurveTo(p971 * 226.5, p971 * 226.546875, p971 * 226.5, p971 * 226.546875, p971 * 362.5, p971 * 305.546875);
      v1320.closePath();
      f89(v1320, vVVUndefined163, p972[0], 4);
      return v1319;
    }(v1310 * 0.6, ["#FFFFFF"]));
    ⵠΔ[410] = [];
    ⵠΔ[410][v594.ΔⲆᐃ] = f50(f108(v1310 * 1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
    ⵠΔ[410][v594.ᐃᐃⵠ] = f50(f108(v1310 * 1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
    ⵠΔ[10] = [];
    ⵠΔ[10][v594.ΔⲆᐃ] = f50(f178(v1310 * 0.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
    ⵠΔ[10][v594.ᐃᐃⵠ] = f50(f178(v1310 * 0.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
    ⵠΔ[11] = [];
    ⵠΔ[11][v594.ΔⲆᐃ] = f50(f195(v1310 * 0.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
    ⵠΔ[11][v594.ᐃᐃⵠ] = f50(f195(v1310 * 0.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
    ⵠΔ[67] = [];
    ⵠΔ[67][v594.ΔⲆᐃ] = f50(f175(v1310 * 0.63, vVVV1222, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
    ⵠΔ[67][v594.ᐃᐃⵠ] = f50(f175(v1310 * 0.63, vVV122, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
    ⵠΔ[68] = [];
    ⵠΔ[68][v594.ΔⲆᐃ] = f50(f129(v1310 * 0.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]));
    ⵠΔ[68][v594.ᐃᐃⵠ] = f50(f129(v1310 * 0.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
    ⵠΔ[69] = [];
    ⵠΔ[69][v594.ΔⲆᐃ] = f50(f135(v1310 * 0.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]));
    ⵠΔ[69][v594.ᐃᐃⵠ] = f50(f135(v1310 * 0.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"]));
    ⵠΔ[965] = [];
    ⵠΔ[965][v594.ΔⲆᐃ] = f50(f284(v1310 * 0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
    ⵠΔ[965][v594.ᐃᐃⵠ] = f50(f284(v1310 * 0.42, vVV1222, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
    ⵠΔ[969] = [];
    ⵠΔ[969][v594.ΔⲆᐃ] = f50(f248(v1310 * 0.9, ["#e4c027"]));
    ⵠΔ[969][v594.ᐃᐃⵠ] = f50(f248(v1310 * 0.9, ["#D8E57F"]));
    ⵠΔ[237] = [];
    ⵠΔ[237][v594.ΔⲆᐃ] = f50(f288(v1310 * 0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
    ⵠΔ[237][v594.ᐃᐃⵠ] = f50(f288(v1310 * 0.42, vVVVV12232, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
    ⵠΔ[971] = f50(function (p973, p974) {
      var v1321 = document.createElement("canvas");
      var v1322 = v1321.getContext("2d");
      v1321.width = p973 * 149;
      v1321.height = p973 * 356;
      v1322.save();
      v1322.translate(p973 * 74.5, p973 * 177.5);
      f90(v1322, p973 * -57.5, p973 * -161.5, p973 * 100, p973 * 323, p973 * 10);
      v1322.restore();
      f89(v1322, p974[0], p974[1], p973 * 4);
      v1322.save();
      v1322.translate(p973 * 74.5, p973 * 177.5);
      f90(v1322, p973 * -57.5, p973 * 50.5, p973 * 100, p973 * 105, p973 * 10);
      v1322.restore();
      f89(v1322, p974[6], p974[1], p973 * 4);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 125);
      v1322.bezierCurveTo(p973 * 74.5, p973 * 125, p973 * 118, p973 * 125, p973 * 118, p973 * 125);
      v1322.closePath();
      f89(v1322, p974[2], p974[2], p973 * 10);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 120);
      v1322.bezierCurveTo(p973 * 74.5, p973 * 120, p973 * 74.5, p973 * 120, p973 * 118, p973 * 120);
      v1322.closePath();
      f89(v1322, p974[3], p974[3], p973 * 10);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 228);
      v1322.bezierCurveTo(p973 * 75, p973 * 228.5, p973 * 118, p973 * 228.5, p973 * 118, p973 * 229);
      v1322.closePath();
      f89(v1322, p974[2], p974[2], p973 * 10);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 224);
      v1322.bezierCurveTo(p973 * 75, p973 * 224, p973 * 118, p973 * 224, p973 * 118, p973 * 224);
      v1322.closePath();
      f89(v1322, p974[3], p974[3], p973 * 10);
      v1322.save();
      v1322.translate(p973 * 72, p973 * 68.5);
      f90(v1322, p973 * -41.5, p973 * -36.5, p973 * 73, p973 * 73, p973 * 13);
      v1322.restore();
      f89(v1322, p974[4]);
      v1322.save();
      v1322.translate(p973 * 72, p973 * 175.5);
      f90(v1322, p973 * -41.5, p973 * -38.5, p973 * 73, p973 * 73, p973 * 13);
      v1322.restore();
      f89(v1322, p974[4]);
      v1322.save();
      v1322.translate(p973 * 72, p973 * 279.5);
      f90(v1322, p973 * -41.5, p973 * -40.5, p973 * 73, p973 * 73, p973 * 13);
      v1322.restore();
      f89(v1322, p974[4]);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 338);
      v1322.bezierCurveTo(p973 * 75, p973 * 338, p973 * 118, p973 * 338, p973 * 118, p973 * 338);
      v1322.closePath();
      f89(v1322, p974[2], p974[2], p973 * 10);
      v1322.beginPath();
      v1322.lineCap = "round";
      v1322.lineJoin = "round";
      v1322.moveTo(p973 * 16, p973 * 333);
      v1322.bezierCurveTo(p973 * 75, p973 * 333, p973 * 118, p973 * 333, p973 * 118, p973 * 333);
      v1322.closePath();
      f89(v1322, p974[3], p974[3], p973 * 10);
      return v1321;
    }(v1310 * 1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
    ⵠΔ[518] = [];
    ⵠΔ[518][v594.ΔⲆᐃ] = f50(f180(v1310 * 0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
    ⵠΔ[518][v594.ᐃᐃⵠ] = f50(f180(v1310 * 0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
    ⵠΔ[210] = [];
    ⵠΔ[210][v594.ΔⲆᐃ] = f50(f206(v1310 * 0.5, vV122, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"]));
    ⵠΔ[210][v594.ᐃᐃⵠ] = f50(f206(v1310 * 0.5, vV124, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"]));
    ⵠΔ[522] = f50(function (p975, p976, p977) {
      var v1323 = document.createElement("canvas");
      var v1324 = v1323.getContext("2d");
      v1323.width = p975 * 118;
      v1323.height = p975 * 129;
      v1324.save();
      v1324.translate(p975 * 90, p975 * 90);
      f90(v1324, p975 * -86.5, p975 * -86, p975 * 110, p975 * 110, p975 * 15);
      v1324.restore();
      f89(v1324, p977[0], p977[1], 4);
      return v1323;
    }(v1310 * 0.8, 0, ["#5f6061", "#939393"]));
    ⵠΔ[523] = f123(1, [{
      f: f133,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
    ⵠΔ[300] = [];
    ⵠΔ[300][v594.ΔⲆᐃ] = f50(f186(v1310 * 1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⵠΔ[300][v594.ᐃᐃⵠ] = f50(f186(v1310 * 1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⵠΔ[1189] = [];
    ⵠΔ[1189][v594.ΔⲆᐃ] = f50(f190(v1310 * 1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⵠΔ[1189][v594.ᐃᐃⵠ] = f50(f190(v1310 * 1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⵠΔ[18] = [];
    ⵠΔ[18][v594.ΔⲆᐃ] = f50(f95(3, f193(v1310 * 0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"])));
    ⵠΔ[18][v594.ᐃᐃⵠ] = f50(f95(3, f193(v1310 * 0.7, true, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
    ⵠΔ[12] = [];
    ⵠΔ[12][v594.ΔⲆᐃ] = f50(f95(3, f196(v1310 * 0.7, v12, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"])));
    ⵠΔ[12][v594.ᐃᐃⵠ] = f50(f95(3, f196(v1310 * 0.7, true, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"])));
    ⵠΔ[13] = [];
    ⵠΔ[13][v594.ΔⲆᐃ] = f50(f95(3, f199(v1310 * 0.65, vVVVVV1222, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"])));
    ⵠΔ[13][v594.ᐃᐃⵠ] = f50(f95(3, f199(v1310 * 0.65, vVVV1222, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"])));
    ⵠΔ[14] = [];
    ⵠΔ[14][v594.ΔⲆᐃ] = f50(f95(3, f191(v1310 * 0.67, true, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"])));
    ⵠΔ[14][v594.ᐃᐃⵠ] = f50(f95(3, f191(v1310 * 0.67, vV122, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"])));
    ⵠΔ[15] = [];
    ⵠΔ[15][v594.ΔⲆᐃ] = f50(f95(3, f192(v1310 * 0.67, true, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"])));
    ⵠΔ[15][v594.ᐃᐃⵠ] = f50(f95(3, f192(v1310 * 0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"])));
    ⵠΔ[60] = [];
    ⵠΔ[60][v594.ΔⲆᐃ] = f50(f95(3, f167(v1310 * 0.67, true, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"])));
    ⵠΔ[60][v594.ᐃᐃⵠ] = f50(f95(3, f167(v1310 * 0.67, vV12, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"])));
    ⵠΔ[16] = [];
    ⵠΔ[16][v594.ΔⲆᐃ] = f50(f95(3, f174(v1310 * 1, true, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
    ⵠΔ[16][v594.ᐃᐃⵠ] = f50(f95(3, f174(v1310 * 1, vV124, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"])));
    ⵠΔ[62] = [];
    ⵠΔ[62][v594.ΔⲆᐃ] = f50(f95(3, f218(v1310 * 1, vVVVV12222, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⵠΔ[62][v594.ᐃᐃⵠ] = f50(f95(3, f218(v1310 * 1, vVVVVV12232, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
    ⵠΔ[101] = [];
    ⵠΔ[101][v594.ΔⲆᐃ] = f50(f95(3, f287(v1310 * 0.5, vVV1222, ["#0d1b1c", "#939393", "#5f6061"])));
    ⵠΔ[101][v594.ᐃᐃⵠ] = f50(f95(3, f287(v1310 * 0.5, true, ["#030d14", "#485e66", "#1f343f"])));
    ⵠΔ[72] = [];
    ⵠΔ[72][v594.ΔⲆᐃ] = f50(f95(3, f274(v1310 * 1, vVVVV12232, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
    ⵠΔ[72][v594.ᐃᐃⵠ] = f50(f95(3, f274(v1310 * 1, true, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
    ⵠΔ[63] = [];
    ⵠΔ[63][v594.ΔⲆᐃ] = f50(f95(3, f218(v1310 * 1, vV123, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⵠΔ[63][v594.ᐃᐃⵠ] = f50(f95(3, f218(v1310 * 1, vVVV12, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
    ⵠΔ[64] = [];
    ⵠΔ[64][v594.ΔⲆᐃ] = f50(f95(3, f218(v1310 * 1, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⵠΔ[64][v594.ᐃᐃⵠ] = f50(f95(3, f218(v1310 * 1, vVVVV12232, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⵠΔ[65] = [];
    ⵠΔ[65][v594.ΔⲆᐃ] = f50(f95(3, f218(v1310 * 1, true, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⵠΔ[65][v594.ᐃᐃⵠ] = f50(f95(3, f218(v1310 * 1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⵠΔ[241] = [];
    ⵠΔ[241][v594.ΔⲆᐃ] = f50(f242(v1310 * 0.55, vV163, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
    ⵠΔ[241][v594.ᐃᐃⵠ] = f50(f242(v1310 * 0.55, vVV1622, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
    ⵠΔ[674] = [];
    ⵠΔ[674].push(f50(f242(v1310 * 0.8, false, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
    ⵠΔ[674].push(f50(f242(v1310 * 0.8, vVV1623, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
    ⵠΔ[674].push(f50(f242(v1310 * 0.8, vVV162, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
    ⵠΔ[676] = [];
    ⵠΔ[676].push(ⵠΔ[674][0]);
    ⵠΔ[676].push(ⵠΔ[674][0]);
    ⵠΔ[676].push(ⵠΔ[674][0]);
    ⵠΔ[260] = [];
    ⵠΔ[260][v594.ΔⲆᐃ] = f50(f251(v1310 * 0.06, false, ["#141414", "#c4a23a", "#816511"]));
    ⵠΔ[260][v594.ᐃᐃⵠ] = f50(f251(v1310 * 0.06, false, ["#030d14", "#2b6664", "#133d3c"]));
    ⵠΔ[673] = [];
    ⵠΔ[673].push(f50(f251(v1310 * 0.08, vVV165, ["#141414", "#c4a23a", "#816511"])));
    ⵠΔ[673].push(f50(f251(v1310 * 0.08, vVV164, ["#141414", "#e2bd4e", "#a38018"])));
    ⵠΔ[673].push(f50(f251(v1310 * 0.08, vVV165, ["#141414", "#b0902e", "#634d09"])));
    ⵠΔ[242] = f123(1.5, [{
      f: f296,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⵠΔ[664] = [];
    ⵠΔ[664][v594.ΔⲆᐃ] = f50(f230(v1310 * 0.8, 0, ["#347f93", "#54a4ba"]));
    ⵠΔ[664][v594.ᐃᐃⵠ] = f50(f230(v1310 * 0.8, 0, ["#98ede3", "#94f2e7"]));
    ⵠΔ[665] = [];
    ⵠΔ[665][v594.ΔⲆᐃ] = f50(f237(v1310 * 0.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
    ⵠΔ[665][v594.ᐃᐃⵠ] = f50(f237(v1310 * 0.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
    ⵠΔ[666] = [];
    ⵠΔ[666][v594.ΔⲆᐃ] = f50(f255(v1310 * 0.8, vVVVV1223, ["#a9e4ed", "#86d4e0"]));
    ⵠΔ[666][v594.ᐃᐃⵠ] = f50(f255(v1310 * 0.8, vVVVV12222, ["#83ddd4", "#485e66"]));
    ⵠΔ[244] = [];
    ⵠΔ[244][v594.ΔⲆᐃ] = f50(f256(v1310 * 0.8, vVV12, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"]));
    ⵠΔ[244][v594.ᐃᐃⵠ] = f50(f256(v1310 * 0.8, vVVVVV12232, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"]));
    ⵠΔ[1547] = [];
    ⵠΔ[1547][v594.ΔⲆᐃ] = ᐃΔ.ΔΔᐃᐃⵠⵠⵠ;
    ⵠΔ[1547][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆΔᐃΔⵠᐃ;
    ⵠΔ[1548] = [];
    ⵠΔ[1548][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠΔΔⵠⵠΔ;
    ⵠΔ[1548][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃΔΔᐃᐃ;
    ⵠΔ[1549] = [];
    ⵠΔ[1549][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆⲆⵠⲆⲆ;
    ⵠΔ[1549][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆᐃΔⲆᐃΔ;
    ⵠΔ[245] = [];
    ⵠΔ[245][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⵠⲆⵠⲆⵠ;
    ⵠΔ[245][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠΔᐃᐃⲆᐃ;
    ⵠΔ[1553] = [];
    ⵠΔ[1553][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔΔⲆⲆΔ;
    ⵠΔ[1553][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⵠΔⲆⵠΔ;
    ⵠΔ[246] = [];
    ⵠΔ[246][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃΔᐃΔⲆΔ;
    ⵠΔ[246][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃᐃΔΔⵠᐃ;
    ⵠΔ[1557] = [];
    ⵠΔ[1557][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔⵠᐃΔⲆ;
    ⵠΔ[1557][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠⲆⵠΔᐃⵠ;
    ⵠΔ[247] = [];
    ⵠΔ[247][v594.ΔⲆᐃ] = ᐃΔ.ΔΔᐃⵠⵠΔᐃ;
    ⵠΔ[247][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆⲆᐃᐃⵠ;
    ⵠΔ[1561] = [];
    ⵠΔ[1561][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃΔᐃΔⲆᐃ;
    ⵠΔ[1561][v594.ᐃᐃⵠ] = ᐃΔ.ⲆᐃⵠⲆⲆⲆⵠ;
    ⵠΔ[248] = [];
    ⵠΔ[248][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⲆⲆⵠⵠᐃ;
    ⵠΔ[248][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠΔⵠΔΔᐃ;
    ⵠΔ[1565] = [];
    ⵠΔ[1565][v594.ΔⲆᐃ] = ᐃΔ.Δⵠᐃᐃⵠⵠⵠ;
    ⵠΔ[1565][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔᐃⵠᐃⵠⲆ;
    ⵠΔ[249] = [];
    ⵠΔ[249][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆⲆΔΔⵠ;
    ⵠΔ[249][v594.ᐃᐃⵠ] = ᐃΔ.ΔΔⲆⲆΔⵠⲆ;
    ⵠΔ[1569] = [];
    ⵠΔ[1569][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⵠⵠΔΔΔ;
    ⵠΔ[1569][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⵠⲆΔⲆⵠ;
    ⵠΔ[250] = [];
    ⵠΔ[250][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃⲆᐃΔΔΔ;
    ⵠΔ[250][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔᐃΔⲆⵠ;
    ⵠΔ[1573] = [];
    ⵠΔ[1573][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⲆⲆⲆⵠᐃ;
    ⵠΔ[1573][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⵠΔᐃⵠⲆ;
    ⵠΔ[251] = [];
    ⵠΔ[251][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠᐃⵠⲆⵠⵠ;
    ⵠΔ[251][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⲆΔⵠⵠᐃ;
    ⵠΔ[1577] = [];
    ⵠΔ[1577][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃⲆᐃⲆΔΔ;
    ⵠΔ[1577][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆᐃᐃᐃⲆ;
    ⵠΔ[252] = [];
    ⵠΔ[252][v594.ΔⲆᐃ] = ᐃΔ.ΔᐃΔⲆⵠᐃᐃ;
    ⵠΔ[252][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⵠⲆⲆΔᐃᐃ;
    ⵠΔ[1581] = [];
    ⵠΔ[1581][v594.ΔⲆᐃ] = ᐃΔ.ᐃⵠⵠΔᐃΔΔ;
    ⵠΔ[1581][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⲆᐃΔᐃⵠ;
    ⵠΔ[253] = [];
    ⵠΔ[253][v594.ΔⲆᐃ] = ᐃΔ.ΔⲆᐃⲆΔⵠⲆ;
    ⵠΔ[253][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆΔΔᐃⲆⵠ;
    ⵠΔ[1585] = [];
    ⵠΔ[1585][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠⵠᐃΔᐃⲆ;
    ⵠΔ[1585][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠΔΔΔΔΔ;
    ⵠΔ[254] = [];
    ⵠΔ[254][v594.ΔⲆᐃ] = ᐃΔ.ⲆⲆΔⵠⲆⵠⲆ;
    ⵠΔ[254][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃⲆᐃⲆΔⵠ;
    ⵠΔ[1589] = [];
    ⵠΔ[1589][v594.ΔⲆᐃ] = ᐃΔ.ⲆⵠᐃⵠⲆⲆⵠ;
    ⵠΔ[1589][v594.ᐃᐃⵠ] = ᐃΔ.ΔⲆᐃⵠⵠᐃΔ;
    ⵠΔ[255] = [];
    ⵠΔ[255][v594.ΔⲆᐃ] = ᐃΔ.ᐃΔⵠᐃⲆⵠⵠ;
    ⵠΔ[255][v594.ᐃᐃⵠ] = ᐃΔ.ⲆⲆⵠⵠⵠᐃΔ;
    ⵠΔ[1593] = [];
    ⵠΔ[1593][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠⲆᐃΔᐃᐃ;
    ⵠΔ[1593][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⲆⲆⵠⲆⵠ;
    ⵠΔ[256] = [];
    ⵠΔ[256][v594.ΔⲆᐃ] = ᐃΔ.ᐃⲆⲆΔᐃⵠΔ;
    ⵠΔ[256][v594.ᐃᐃⵠ] = ᐃΔ.ᐃᐃΔⵠΔᐃⵠ;
    ⵠΔ[1597] = [];
    ⵠΔ[1597][v594.ΔⲆᐃ] = ᐃΔ.ΔΔΔⵠᐃΔΔ;
    ⵠΔ[1597][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⵠᐃⲆᐃⲆⲆ;
    ⵠΔ[257] = [];
    ⵠΔ[257][v594.ΔⲆᐃ] = ᐃΔ.ⵠᐃⵠΔⲆᐃᐃ;
    ⵠΔ[257][v594.ᐃᐃⵠ] = ᐃΔ.ᐃΔᐃⲆⲆⲆⲆ;
    ⵠΔ[1601] = [];
    ⵠΔ[1601][v594.ΔⲆᐃ] = ᐃΔ.ⵠⲆⵠᐃΔΔⵠ;
    ⵠΔ[1601][v594.ᐃᐃⵠ] = ᐃΔ.ΔᐃⵠΔΔⲆᐃ;
    ⵠΔ[258] = [];
    ⵠΔ[258][v594.ΔⲆᐃ] = ᐃΔ.ⲆΔⵠⲆΔⲆⵠ;
    ⵠΔ[258][v594.ᐃᐃⵠ] = ᐃΔ.ᐃⲆⲆᐃⲆⵠᐃ;
    ⵠΔ[1605] = [];
    ⵠΔ[1605][v594.ΔⲆᐃ] = ᐃΔ.ΔⵠᐃⲆᐃᐃᐃ;
    ⵠΔ[1605][v594.ᐃᐃⵠ] = ᐃΔ.ⲆΔΔⵠᐃⵠᐃ;
    ⵠΔ[259] = [];
    ⵠΔ[259][v594.ΔⲆᐃ] = ᐃΔ.ⵠⵠⲆⲆⵠΔⵠ;
    ⵠΔ[259][v594.ᐃᐃⵠ] = ᐃΔ.ⵠΔΔᐃΔⲆᐃ;
    ⵠΔ[355] = [];
    ⵠΔ[355][v594.ΔⲆᐃ] = ᐃΔ.ⲆᐃᐃⲆᐃΔΔ;
    ⵠΔ[355][v594.ᐃᐃⵠ] = ᐃΔ.ⵠⲆⲆΔΔⵠΔ;
    ⵠΔ[356] = ᐃΔ.ⵠΔᐃⲆᐃⲆⲆ;
    ⵠΔ[1755] = [];
    ⵠΔ[1755][v594.ΔⲆᐃ] = [];
    ⵠΔ[1755][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1755][v594.ΔⲆᐃ].push(ᐃΔ.ᐃᐃᐃᐃΔⲆᐃ);
    ⵠΔ[1755][v594.ΔⲆᐃ].push(ᐃΔ.ΔΔⵠⲆᐃⲆΔ);
    ⵠΔ[1755][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠΔΔⵠᐃⲆ);
    ⵠΔ[1755][v594.ΔⲆᐃ].push(ᐃΔ.ΔⵠⲆⲆΔⵠⲆ);
    ⵠΔ[1755][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⵠΔⵠΔΔΔ);
    ⵠΔ[1755][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆΔᐃⵠⵠΔ);
    ⵠΔ[1755][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆᐃⲆᐃΔⵠⵠ);
    ⵠΔ[1755][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆΔⵠΔⲆⵠⲆ);
    ⵠΔ[1755][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔⵠⲆⵠⲆⲆ);
    ⵠΔ[1755][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⲆⲆⲆⲆΔⵠ);
    ⵠΔ[1757] = [];
    ⵠΔ[1757][v594.ΔⲆᐃ] = [];
    ⵠΔ[1757][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1757][v594.ΔⲆᐃ].push(ᐃΔ.ⲆΔⲆΔᐃΔᐃ);
    ⵠΔ[1757][v594.ΔⲆᐃ].push(ᐃΔ.ⵠᐃⲆⵠⲆᐃⵠ);
    ⵠΔ[1757][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃΔΔᐃΔᐃ);
    ⵠΔ[1757][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆΔᐃⵠⲆΔ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ] = [];
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ΔⲆᐃ] = [];
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ᐃᐃⵠ] = [];
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⵠⲆᐃⲆⵠΔ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ΔⲆᐃ].push(ᐃΔ.ᐃΔᐃⲆⵠⵠᐃ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠΔΔᐃⵠΔ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆⵠΔⵠΔΔ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⵠᐃΔΔᐃ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔᐃⵠⵠΔⲆ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ΔⵠᐃⲆᐃΔᐃ);
    ⵠΔ[v594.ⲆⲆΔΔⵠⲆΔ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠΔΔΔⵠᐃⲆ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ] = [];
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ] = [];
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ] = [];
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⵠⲆⲆᐃⵠΔ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ⲆΔⵠΔΔᐃⲆ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⲆᐃⵠΔΔΔ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ⵠⲆⲆⲆᐃⵠᐃ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ΔⲆΔΔⲆΔⲆ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ΔⲆᐃ].push(ᐃΔ.ᐃⵠΔᐃΔⲆⲆ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠⵠⲆⲆΔΔ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⵠΔᐃⵠᐃΔ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⵠΔⵠⵠᐃ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.Ⲇᐃᐃⵠᐃⵠᐃ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.ΔᐃᐃⵠΔⲆⵠ);
    ⵠΔ[v594.ΔⲆⵠⵠᐃ][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⵠⲆⵠⲆᐃᐃ);
    ⵠΔ[1756] = [];
    ⵠΔ[1756][v594.ΔⲆᐃ] = [];
    ⵠΔ[1756][v594.ᐃᐃⵠ] = [];
    ⵠΔ[1756][v594.ΔⲆᐃ].push(ᐃΔ.ⲆᐃΔΔΔΔⲆ);
    ⵠΔ[1756][v594.ΔⲆᐃ].push(ᐃΔ.ⵠᐃⲆⵠⲆΔᐃ);
    ⵠΔ[1756][v594.ΔⲆᐃ].push(ᐃΔ.ⲆⵠΔⲆⲆᐃΔ);
    ⵠΔ[1756][v594.ᐃᐃⵠ].push(ᐃΔ.ⵠⲆΔᐃΔⵠΔ);
    ⵠΔ[1756][v594.ᐃᐃⵠ].push(ᐃΔ.ⲆⲆΔⲆⵠΔⵠ);
    ⵠΔ[1756][v594.ᐃᐃⵠ].push(ᐃΔ.ΔΔᐃᐃᐃⵠⲆ);
    ⵠΔ[261] = [];
    ⵠΔ[261][v594.ΔⲆᐃ] = f50(f249(v1310 * 0.75, vVVVV12222, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
    ⵠΔ[261][v594.ᐃᐃⵠ] = f50(f249(v1310 * 0.75, vVVVVV1222, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
    ⵠΔ[723] = f50(f275(v1310 * 0.3, ["#092813", "#1f773d"], 0));
    ⵠΔ[724] = f50(f275(v1310 * 0.3, ["#092813", "#1f773d"], 1));
    ⵠΔ[1161] = f50(function (p978, p979) {
      var v1325 = document.createElement("canvas");
      var v1326 = v1325.getContext("2d");
      v1325.width = p978 * 60;
      v1325.height = p978 * 60;
      v1326.translate(p978 * -25, p978 * -25);
      v1326.translate(0, p978 * 5);
      v1326.beginPath();
      v1326.lineCap = "round";
      v1326.lineJoin = "round";
      v1326.moveTo(p978 * 24, p978 * 50);
      v1326.bezierCurveTo(p978 * 32.5, p978 * 54.5, p978 * 32.5, p978 * 54.5, p978 * 41, p978 * 59);
      v1326.bezierCurveTo(p978 * 57, p978 * 47, p978 * 57, p978 * 47, p978 * 73, p978 * 35);
      v1326.bezierCurveTo(p978 * 57, p978 * 53, p978 * 57, p978 * 53, p978 * 41, p978 * 71);
      v1326.closePath();
      f89(v1326, p979[0]);
      v1326.translate(0, p978 * -5);
      v1326.beginPath();
      v1326.lineCap = "round";
      v1326.lineJoin = "round";
      v1326.moveTo(p978 * 24, p978 * 50);
      v1326.bezierCurveTo(p978 * 32.5, p978 * 54.5, p978 * 32.5, p978 * 54.5, p978 * 41, p978 * 59);
      v1326.bezierCurveTo(p978 * 57, p978 * 47, p978 * 57, p978 * 47, p978 * 73, p978 * 35);
      v1326.bezierCurveTo(p978 * 57, p978 * 53, p978 * 57, p978 * 53, p978 * 41, p978 * 71);
      v1326.closePath();
      f89(v1326, p979[1]);
      return v1325;
    }(v1310 * 0.6, ["#092813", "#1f773d"]));
    ⵠΔ[721] = [];
    ⵠΔ[721].push(f50(f270(v1310 * 0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
    ⵠΔ[721].push(f50(f270(v1310 * 0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
    ⵠΔ[721].push(f50(f270(v1310 * 0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
    ⵠΔ[725] = [];
    var vF50 = f50(f270(v1310 * 0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
    ⵠΔ[725].push(vF50);
    ⵠΔ[725].push(vF50);
    ⵠΔ[725].push(vF50);
    ⵠΔ[722] = [];
    ⵠΔ[722].push(f50(f270(v1310 * 0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
    ⵠΔ[722].push(f50(f270(v1310 * 0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
    ⵠΔ[722].push(f50(f270(v1310 * 0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
    ⵠΔ[900] = f50(function (p980, p981) {
      var v1327 = document.createElement("canvas");
      var v1328 = v1327.getContext("2d");
      var v1329 = p980 * 170;
      var v1330 = p980 * 172;
      var v1331 = v1329 / 2;
      var v1332 = v1330 / 2;
      v1327.width = v1329;
      v1327.height = v1330;
      v1328.translate(v1331, v1332);
      v1328.save();
      for (var v1333 = 0; v1333 < 10; v1333++) {
        v1328.rotate(Math.PI / 5);
        v1328.save();
        v1328.translate(p980 * 65, 0);
        f92(v1328, 3, p980 * 18, p980 * 4);
        f89(v1328, p981[0]);
        v1328.restore();
      }
      v1328.restore();
      f94(v1328, 0, 0, p980 * 40);
      f89(v1328, vVVUndefined152, p981[0], p980 * 6);
      f94(v1328, 0, 0, p980 * 20);
      f89(v1328, p981[0]);
      return v1327;
    }(v1310 * 0.3, ["#FFFFFF"]));
    ⵠΔ[1043] = f50(function (p982, p983) {
      var v1334 = document.createElement("canvas");
      var v1335 = v1334.getContext("2d");
      var v1336 = p982 * 130;
      var v1337 = p982 * 142;
      var v1338 = v1336 / 2;
      var v1339 = v1337 / 2;
      v1334.width = v1336;
      v1334.height = v1337;
      f94(v1335, v1338, v1339, p982 * 40);
      f89(v1335, undefined, p983[0], p982 * 7);
      f94(v1335, v1338, v1339, p982 * 30);
      f89(v1335, undefined, p983[0], p982 * 7);
      f94(v1335, v1338, v1339, p982 * 20);
      f89(v1335, p983[0]);
      return v1334;
    }(v1310 * 0.3, ["#FFFFFF"]));
    ⵠΔ[727] = f50(f275(v1310 * 0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
    ⵠΔ[886] = f50(f95(Math.PI / 5, function (p984, p985) {
      var v1340 = document.createElement("canvas");
      var v1341 = v1340.getContext("2d");
      v1340.width = p984 * 316;
      v1340.height = p984 * 365;
      v1341.save();
      v1341.translate(p984 * 156.07142639160156, p984 * 51.81248474121094);
      v1341.rotate(0);
      f90(v1341, p984 * -21.5, p984 * -34, p984 * 43, p984 * 68, p984 * 8);
      v1341.restore();
      f89(v1341, p985[0], p985[0], p984 * 15);
      v1341.beginPath();
      v1341.lineCap = "round";
      v1341.lineJoin = "round";
      v1341.moveTo(p984 * 126.57142639160156, p984 * 67.38392639160156);
      v1341.bezierCurveTo(p984 * 126.57142639160156, p984 * 57.38392639160156, p984 * 132.57142639160156, p984 * 54.38392639160156, p984 * 140.57142639160156, p984 * 54.38392639160156);
      v1341.bezierCurveTo(p984 * 177.57142639160156, p984 * 55.38392639160156, p984 * 158.07142639160156, p984 * 54.38392639160156, p984 * 175.57142639160156, p984 * 54.38392639160156);
      v1341.bezierCurveTo(p984 * 185.57142639160156, p984 * 56.38392639160156, p984 * 185.57142639160156, p984 * 57.38392639160156, p984 * 184.57142639160156, p984 * 66.38392639160156);
      v1341.bezierCurveTo(p984 * 184.57142639160156, p984 * 78.38392639160156, p984 * 184.57142639160156, p984 * 89.38392639160156, p984 * 184.57142639160156, p984 * 90.38392639160156);
      v1341.bezierCurveTo(p984 * 177.57142639160156, p984 * 107.38392639160156, p984 * 180.57142639160156, p984 * 112.38392639160156, p984 * 189.57142639160156, p984 * 116.38392639160156);
      v1341.bezierCurveTo(p984 * 212.57142639160156, p984 * 127.38392639160156, p984 * 212.57142639160156, p984 * 132.38392639160156, p984 * 211.57142639160156, p984 * 150.38392639160156);
      v1341.bezierCurveTo(p984 * 211.57142639160156, p984 * 227.59821128845215, p984 * 211.57142639160156, p984 * 227.59821128845215, p984 * 211.57142639160156, p984 * 304.81249618530273);
      v1341.bezierCurveTo(p984 * 212.57142639160156, p984 * 328.81249618530273, p984 * 209.57142639160156, p984 * 330.81249618530273, p984 * 188.57142639160156, p984 * 333.81249618530273);
      v1341.bezierCurveTo(p984 * 155.07142639160156, p984 * 333.31249618530273, p984 * 155.07142639160156, p984 * 333.31249618530273, p984 * 121.57142639160156, p984 * 332.81249618530273);
      v1341.bezierCurveTo(p984 * 104.57142639160156, p984 * 327.81249618530273, p984 * 105.57142639160156, p984 * 328.81249618530273, p984 * 104.57142639160156, p984 * 312.81249618530273);
      v1341.bezierCurveTo(p984 * 104.57142639160156, p984 * 228.16963958740234, p984 * 104.57142639160156, p984 * 228.16963958740234, p984 * 104.57142639160156, p984 * 143.52678298950195);
      v1341.bezierCurveTo(p984 * 106.57142639160156, p984 * 124.52678298950195, p984 * 110.57142639160156, p984 * 123.52678298950195, p984 * 123.57142639160156, p984 * 116.52678298950195);
      v1341.bezierCurveTo(p984 * 136.57142639160156, p984 * 110.52678298950195, p984 * 130.57142639160156, p984 * 106.52678298950195, p984 * 126.57142639160156, p984 * 98.52678298950195);
      v1341.closePath();
      f89(v1341, p985[0], p985[0], p984 * 15);
      v1341.beginPath();
      v1341.lineCap = "round";
      v1341.lineJoin = "round";
      v1341.moveTo(p984 * 125.57142639160156, p984 * 156.66963958740234);
      v1341.bezierCurveTo(p984 * 125.57142639160156, p984 * 182.66963958740234, p984 * 125.57142639160156, p984 * 182.66963958740234, p984 * 125.57142639160156, p984 * 208.66963958740234);
      v1341.closePath();
      f89(v1341, p985[0], p985[0], p984 * 15);
      return v1340;
    }(v1310 * 0.2, ["#FFFFFF"])));
    ⵠΔ[70] = [];
    ⵠΔ[70][v594.ΔⲆᐃ] = f50(f269(v1310 * 0.85, vVVVV1223, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
    ⵠΔ[70][v594.ᐃᐃⵠ] = f50(f269(v1310 * 0.85, vVVV1223, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"]));
    ⵠΔ[726] = [];
    ⵠΔ[726].push(f50(f270(v1310 * 0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
    ⵠΔ[726].push(f50(f270(v1310 * 0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
    ⵠΔ[726].push(f50(f270(v1310 * 0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
    ⵠΔ[156] = [];
    ⵠΔ[156][v594.ΔⲆᐃ] = f50(f278(v1310 * 0.37, vV12, ["#2a2938", "#242330", "#313041"]));
    ⵠΔ[156][v594.ᐃᐃⵠ] = f50(f278(v1310 * 0.37, vVVV12, ["#1b1e30", "#161921", "#252f3e"]));
    ⵠΔ[158] = [];
    ⵠΔ[158][v594.ΔⲆᐃ] = f50(f254(v1310 * 0.17, vV124, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
    ⵠΔ[158][v594.ᐃᐃⵠ] = f50(f254(v1310 * 0.17, true, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
    ⵠΔ[159] = [];
    ⵠΔ[159][v594.ΔⲆᐃ] = f50(f281(v1310 * 0.55, true, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
    ⵠΔ[159][v594.ᐃᐃⵠ] = f50(f281(v1310 * 0.55, vV12, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
    ⵠΔ[157] = [];
    ⵠΔ[157][v594.ΔⲆᐃ] = f50(f281(v1310 * 0.55, true, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0));
    ⵠΔ[157][v594.ᐃᐃⵠ] = f50(f281(v1310 * 0.55, true, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
    ⵠΔ[150] = [];
    ⵠΔ[150][v594.ΔⲆᐃ] = f50(f263(v1310 * 0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]));
    ⵠΔ[150][v594.ᐃᐃⵠ] = f50(f263(v1310 * 0.2, vVVV12222, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"]));
    ⵠΔ[151] = [];
    ⵠΔ[151][v594.ΔⲆᐃ] = f50(f263(v1310 * 0.2, vVV12, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]));
    ⵠΔ[151][v594.ᐃᐃⵠ] = f50(f263(v1310 * 0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"]));
    ⵠΔ[152] = [];
    ⵠΔ[152][v594.ΔⲆᐃ] = f50(f263(v1310 * 0.2, vVV122, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]));
    ⵠΔ[152][v594.ᐃᐃⵠ] = f50(f263(v1310 * 0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"]));
    ⵠΔ[107] = [];
    ⵠΔ[107][v594.ΔⲆᐃ] = f50(f172(v1310 * 0.24, vVVVV1223, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
    ⵠΔ[107][v594.ᐃᐃⵠ] = f50(f172(v1310 * 0.24, vV124, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
    ⵠΔ[105] = [];
    ⵠΔ[105][v594.ΔⲆᐃ] = f50(f212(v1310 * 0.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
    ⵠΔ[105][v594.ᐃᐃⵠ] = f50(f212(v1310 * 0.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
    ⵠΔ[108] = [];
    ⵠΔ[108][v594.ΔⲆᐃ] = f50(f95(3, f273(v1310 * 0.9, true, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
    ⵠΔ[108][v594.ᐃᐃⵠ] = f50(f95(3, f273(v1310 * 0.9, vVV1222, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
    ⵠΔ[999] = [];
    ⵠΔ[999][v594.ΔⲆᐃ] = f50(f95(3, f273(v1310 * 1, true, [undefined, undefined, vVUndefined15, "#c8efef", "#c8efef"])));
    ⵠΔ[999][v594.ᐃᐃⵠ] = f50(f95(3, f273(v1310 * 1, true, [vVUndefined, vVVVUndefined17, vVVUndefined18, "#87d2e6", "#87d2e6"])));
    ⵠΔ[1004] = [];
    ⵠΔ[1004].push(f50(f265(v1310 * 0.3, true, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0)));
    ⵠΔ[1004].push(f50(f265(v1310 * 0.3, vVV122, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1)));
    ⵠΔ[1004].push(f50(f265(v1310 * 0.3, true, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1)));
    ⵠΔ[1044] = [];
    ⵠΔ[1044].push(f50(f225(v1310 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
    ⵠΔ[1044].push(f50(f225(v1310 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⵠΔ[1044].push(f50(f225(v1310 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⵠΔ[1031] = [];
    ⵠΔ[1031].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
    ⵠΔ[1031].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
    ⵠΔ[1031].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
    ⵠΔ[1032] = [];
    ⵠΔ[1032].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
    ⵠΔ[1032].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
    ⵠΔ[1032].push(f50(f139(v1310 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
    ⵠΔ[82] = [];
    ⵠΔ[82][v594.ΔⲆᐃ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"])));
    ⵠΔ[82][v594.ᐃᐃⵠ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"])));
    ⵠΔ[86] = [];
    ⵠΔ[86][v594.ΔⲆᐃ] = f50(f95(3, f295(v1310 * 0.7, vVV12, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"])));
    ⵠΔ[86][v594.ᐃᐃⵠ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"])));
    ⵠΔ[87] = [];
    ⵠΔ[87][v594.ΔⲆᐃ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"])));
    ⵠΔ[87][v594.ᐃᐃⵠ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"])));
    ⵠΔ[88] = [];
    ⵠΔ[88][v594.ΔⲆᐃ] = f50(f95(3, f295(v1310 * 0.7, vVV122, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"])));
    ⵠΔ[88][v594.ᐃᐃⵠ] = f50(f95(3, f295(v1310 * 0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"])));
    ⵠΔ[811] = [];
    ⵠΔ[811].push(f50(f271(v1310 * 0.7, ["#3b330d", "#b5a118", "#c8ac16"])));
    ⵠΔ[811].push(f50(f271(v1310 * 0.7, ["#524712", "#c7b11c", "#d9ba18"])));
    ⵠΔ[811].push(f50(f271(v1310 * 0.7, ["#2a2409", "#9f8e14", "#ad9511"])));
    ⵠΔ[437] = f50(function (p986, p987) {
      var v1342 = document.createElement("canvas");
      var v1343 = v1342.getContext("2d");
      v1342.width = p986 * 188;
      v1342.height = p986 * 190;
      v1343.beginPath();
      v1343.lineCap = "round";
      v1343.lineJoin = "round";
      v1343.moveTo(p986 * 33.00567626953125, p986 * 95.44320678710938);
      v1343.bezierCurveTo(p986 * 42.00567626953125, p986 * 87.44320678710938, p986 * 48.00567626953125, p986 * 51.443206787109375, p986 * 74.00567626953125, p986 * 47.443206787109375);
      v1343.bezierCurveTo(p986 * 100.00567626953125, p986 * 42.443206787109375, p986 * 118.00567626953125, p986 * 49.443206787109375, p986 * 131.00567626953125, p986 * 55.443206787109375);
      v1343.bezierCurveTo(p986 * 140.00567626953125, p986 * 70.44320678710938, p986 * 145.00567626953125, p986 * 87.44320678710938, p986 * 152.00567626953125, p986 * 94.44320678710938);
      v1343.bezierCurveTo(p986 * 149.00567626953125, p986 * 99.44320678710938, p986 * 147.00567626953125, p986 * 98.44320678710938, p986 * 141.00567626953125, p986 * 101.44320678710938);
      v1343.bezierCurveTo(p986 * 147.00567626953125, p986 * 108.44320678710938, p986 * 147.00567626953125, p986 * 111.44320678710938, p986 * 147.00567626953125, p986 * 112.44320678710938);
      v1343.bezierCurveTo(p986 * 143.00567626953125, p986 * 112.44320678710938, p986 * 141.00567626953125, p986 * 112.44320678710938, p986 * 137.00567626953125, p986 * 111.44320678710938);
      v1343.bezierCurveTo(p986 * 138.00567626953125, p986 * 117.44320678710938, p986 * 138.00567626953125, p986 * 120.44320678710938, p986 * 138.00567626953125, p986 * 124.44320678710938);
      v1343.bezierCurveTo(p986 * 125.00567626953125, p986 * 107.44320678710938, p986 * 121.00567626953125, p986 * 124.44320678710938, p986 * 110.00567626953125, p986 * 141.44320678710938);
      v1343.bezierCurveTo(p986 * 102.00567626953125, p986 * 158.44320678710938, p986 * 89.00567626953125, p986 * 158.44320678710938, p986 * 80.00567626953125, p986 * 144.44320678710938);
      v1343.bezierCurveTo(p986 * 61.00567626953125, p986 * 111.44320678710938, p986 * 56.00567626953125, p986 * 117.44320678710938, p986 * 48.00567626953125, p986 * 120.44320678710938);
      v1343.bezierCurveTo(p986 * 46.00567626953125, p986 * 118.44320678710938, p986 * 47.00567626953125, p986 * 112.44320678710938, p986 * 48.00567626953125, p986 * 107.44320678710938);
      v1343.bezierCurveTo(p986 * 43.00567626953125, p986 * 111.44320678710938, p986 * 40.00567626953125, p986 * 111.44320678710938, p986 * 37.00567626953125, p986 * 110.44320678710938);
      v1343.bezierCurveTo(p986 * 39.50567626953125, p986 * 104.94320678710938, p986 * 39.50567626953125, p986 * 104.94320678710938, p986 * 42.00567626953125, p986 * 99.44320678710938);
      v1343.bezierCurveTo(p986 * 33.00567626953125, p986 * 99.44320678710938, p986 * 33.00567626953125, p986 * 98.44320678710938, p986 * 33.00567626953125, p986 * 96.44320678710938);
      v1343.closePath();
      f89(v1343, p987[0], p987[0], p986 * 4);
      v1343.beginPath();
      v1343.lineCap = "round";
      v1343.lineJoin = "round";
      v1343.moveTo(p986 * 51.00567626953125, p986 * 72.53409576416016);
      v1343.bezierCurveTo(p986 * 48.00567626953125, p986 * 56.534095764160156, p986 * 48.00567626953125, p986 * 49.534095764160156, p986 * 54.00567626953125, p986 * 35.534095764160156);
      v1343.bezierCurveTo(p986 * 58.00567626953125, p986 * 26.534095764160156, p986 * 65.00567626953125, p986 * 27.534095764160156, p986 * 73.00567626953125, p986 * 40.534095764160156);
      v1343.bezierCurveTo(p986 * 81.00567626953125, p986 * 49.534095764160156, p986 * 82.00567626953125, p986 * 50.534095764160156, p986 * 83.00567626953125, p986 * 51.534095764160156);
      v1343.bezierCurveTo(p986 * 77.00567626953125, p986 * 71.53409576416016, p986 * 64.00567626953125, p986 * 75.53409576416016, p986 * 51.00567626953125, p986 * 72.53409576416016);
      v1343.closePath();
      f89(v1343, p987[0], p987[0], p986 * 2);
      v1343.beginPath();
      v1343.lineCap = "round";
      v1343.lineJoin = "round";
      v1343.moveTo(p986 * 105.00567626953125, p986 * 50.53410339355469);
      v1343.bezierCurveTo(p986 * 112.00567626953125, p986 * 48.53410339355469, p986 * 125.00567626953125, p986 * 21.534103393554688, p986 * 132.00567626953125, p986 * 33.53410339355469);
      v1343.bezierCurveTo(p986 * 138.00567626953125, p986 * 42.53410339355469, p986 * 140.00567626953125, p986 * 64.53410339355469, p986 * 136.00567626953125, p986 * 75.53410339355469);
      v1343.closePath();
      f89(v1343, p987[0], p987[0], p986 * 2);
      return v1342;
    }(v1310 * 1.1, ["#BB0000"]));
    ⵠΔ[444] = f50(f95(Math.PI, function (p988, p989) {
      var v1344 = document.createElement("canvas");
      var v1345 = v1344.getContext("2d");
      v1344.width = p988 * 238;
      v1344.height = p988 * 230;
      v1345.translate(p988 * -93, p988 * -110);
      f94(v1345, p988 * 213.5, p988 * 256.75, p988 * 75);
      f89(v1345, p989);
      f94(v1345, p988 * 213.5, p988 * 175.75, p988 * 25);
      f89(v1345, p989);
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 156.5, p988 * 137.75);
      v1345.bezierCurveTo(p988 * 170.5, p988 * 173.75, p988 * 195.5, p988 * 177.75, p988 * 209.5, p988 * 177.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 217.5, p988 * 178.75);
      v1345.bezierCurveTo(p988 * 251.5, p988 * 177.75, p988 * 263.5, p988 * 153.75, p988 * 270.5, p988 * 140.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 130.5, p988 * 124.75);
      v1345.bezierCurveTo(p988 * 153.5, p988 * 185.75, p988 * 198.5, p988 * 185.75, p988 * 213.5, p988 * 185.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 214.5, p988 * 183.75);
      v1345.bezierCurveTo(p988 * 265.5, p988 * 192.75, p988 * 293.5, p988 * 141.75, p988 * 297.5, p988 * 124.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 107.5, p988 * 213.75);
      v1345.bezierCurveTo(p988 * 151.5, p988 * 190.75, p988 * 198.5, p988 * 184.75, p988 * 210.5, p988 * 184.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 212.5, p988 * 187.75);
      v1345.bezierCurveTo(p988 * 258.5, p988 * 182.75, p988 * 286.5, p988 * 194.75, p988 * 314.5, p988 * 206.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 102.5, p988 * 258.75);
      v1345.bezierCurveTo(p988 * 142.5, p988 * 200.75, p988 * 193.5, p988 * 194.75, p988 * 211.5, p988 * 185.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 214.5, p988 * 192.75);
      v1345.bezierCurveTo(p988 * 276.5, p988 * 194.75, p988 * 306.5, p988 * 233.75, p988 * 316.5, p988 * 246.75);
      v1345.lineWidth = p988 * 17;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 219.5, p988 * 158.75);
      v1345.bezierCurveTo(p988 * 226.5, p988 * 159.75, p988 * 227.5, p988 * 147.75, p988 * 219.5, p988 * 145.75);
      v1345.closePath();
      v1345.lineWidth = p988 * 10;
      v1345.strokeStyle = p989;
      v1345.stroke();
      v1345.beginPath();
      v1345.lineCap = "round";
      v1345.lineJoin = "round";
      v1345.moveTo(p988 * 210.5, p988 * 160.75);
      v1345.bezierCurveTo(p988 * 203.5, p988 * 159.75, p988 * 199.5, p988 * 146.75, p988 * 210.5, p988 * 145.75);
      v1345.closePath();
      v1345.lineWidth = p988 * 10;
      v1345.strokeStyle = p989;
      v1345.stroke();
      return v1344;
    }(v1310 * 0.9, "#BB0000")));
    ⵠΔ[32] = [];
    ⵠΔ[32][v594.ΔⲆᐃ] = f50(f245(v1310 * 0.55, true, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
    ⵠΔ[32][v594.ᐃᐃⵠ] = f50(f245(v1310 * 0.55, vV123, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"]));
    ⵠΔ[104] = [];
    ⵠΔ[104][v594.ΔⲆᐃ] = f50(f266(v1310 * 0.55, true, ["#252525", "#73583e", "#573f29", "#7d6144"]));
    ⵠΔ[104][v594.ᐃᐃⵠ] = f50(f266(v1310 * 0.55, vV122, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
    ⵠΔ[34] = [];
    ⵠΔ[34][v594.ΔⲆᐃ] = f50(f229(v1310 * 0.6, true, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]));
    ⵠΔ[34][v594.ᐃᐃⵠ] = f50(f229(v1310 * 0.6, vVVV12222, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"]));
    ⵠΔ[35] = [];
    ⵠΔ[35][v594.ΔⲆᐃ] = f50(f236(v1310 * 0.58, 0, ["#dbce71", "#b29c32", "#c4bc51"]));
    ⵠΔ[35][v594.ᐃᐃⵠ] = f50(f236(v1310 * 0.58, 0, ["#2b7c57", "#15543c", "#1a7961"]));
    ⵠΔ[36] = [];
    ⵠΔ[36][v594.ΔⲆᐃ] = f50(f289(v1310 * 0.69, true, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
    ⵠΔ[36][v594.ᐃᐃⵠ] = f50(f289(v1310 * 0.69, true, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"]));
    ⵠΔ[524] = [];
    ⵠΔ[524][v594.ΔⲆᐃ] = [];
    ⵠΔ[524][v594.ᐃᐃⵠ] = [];
    ⵠΔ[524][v594.ΔⲆᐃ].push(f50(f207(v1310 * 1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"])));
    ⵠΔ[524][v594.ΔⲆᐃ].push(f50(f209(v1310 * 1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"])));
    ⵠΔ[524][v594.ΔⲆᐃ].push(f50(f217(v1310 * 1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
    ⵠΔ[524][v594.ᐃᐃⵠ].push(f50(f207(v1310 * 1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"])));
    ⵠΔ[524][v594.ᐃᐃⵠ].push(f50(f209(v1310 * 1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"])));
    ⵠΔ[524][v594.ᐃᐃⵠ].push(f50(f217(v1310 * 1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"])));
    ⵠΔ[587] = [];
    ⵠΔ[587][v594.ΔⲆᐃ] = f50(f279(v1310 * 1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"]));
    ⵠΔ[587][v594.ᐃᐃⵠ] = f50(f279(v1310 * 1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"]));
    ⵠΔ[589] = [];
    ⵠΔ[589][v594.ΔⲆᐃ] = f50(f232(v1310 * 1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⵠΔ[589][v594.ᐃᐃⵠ] = f50(f232(v1310 * 1, ["#050505", "#327570", "#021724", "#200333"]));
    ⵠΔ[590] = [];
    ⵠΔ[590][v594.ΔⲆᐃ] = f50(f294(v1310 * 1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⵠΔ[590][v594.ᐃᐃⵠ] = f50(f294(v1310 * 1, ["#050505", "#327570", "#021724", "#200333"]));
    ⵠΔ[353] = [];
    ⵠΔ[353][v594.ΔⲆᐃ] = [];
    ⵠΔ[353][v594.ᐃᐃⵠ] = [];
    ⵠΔ[353][v594.ΔⲆᐃ] = [ᐃΔ.ⵠᐃⲆᐃΔⵠⲆΔΔ, ᐃΔ.ΔⵠᐃⲆⵠⲆᐃⲆᐃ, ᐃΔ.ⵠᐃᐃΔᐃᐃΔᐃⵠ, ᐃΔ.ⲆⵠⵠᐃΔΔᐃΔⲆ, ᐃΔ.ⲆⲆⵠΔΔΔⵠΔⲆ, ᐃΔ.ⲆⲆᐃΔᐃΔⵠⵠⲆ, ᐃΔ.ΔΔⲆⲆⲆᐃⵠΔⲆ, ᐃΔ.ⲆΔⵠⲆⲆⲆᐃΔᐃ, ᐃΔ.ⵠⲆⵠΔᐃⲆⲆᐃⲆ, ᐃΔ.ⵠⲆⵠⲆⵠΔΔⲆⲆ, ᐃΔ.ᐃⲆⲆΔⵠᐃᐃᐃⲆ, ᐃΔ.ⲆⵠᐃⵠⲆΔΔᐃᐃ, ᐃΔ.ᐃⲆⵠΔᐃᐃⲆΔⲆ, ᐃΔ.ⲆⲆⲆⵠᐃΔΔⲆΔ, ᐃΔ.ΔⲆⲆᐃΔΔⲆⲆⲆ, ᐃΔ.ΔᐃΔᐃⲆⲆᐃᐃⵠ, ᐃΔ.ⲆᐃΔΔⲆΔᐃᐃᐃ, ᐃΔ.ⵠⵠⲆⵠⵠΔⵠᐃΔ, ᐃΔ.ΔᐃᐃΔΔⲆᐃⵠᐃ, ᐃΔ.ⲆⵠΔΔⲆᐃΔⵠⵠ, ᐃΔ.ⵠⵠΔᐃⵠⵠⵠΔΔ, ᐃΔ.ΔⲆⵠΔⲆⵠᐃⵠⲆ, ᐃΔ.ᐃᐃⵠⵠΔΔⵠⵠᐃ, ᐃΔ.ΔᐃⲆᐃᐃᐃᐃᐃᐃ, ᐃΔ.ⲆⵠᐃⲆΔⵠΔΔᐃ, ᐃΔ.ΔΔᐃⲆᐃⲆⲆⲆⲆ, ᐃΔ.ⲆΔⵠᐃⲆᐃⲆⲆᐃ, ᐃΔ.ⵠᐃᐃⲆᐃΔⵠⵠᐃ, ᐃΔ.ᐃᐃᐃΔΔⲆᐃⵠⲆ, ᐃΔ.ⵠⲆⵠⵠⵠⲆᐃᐃⵠ, ᐃΔ.ΔΔᐃΔⲆⵠⵠΔⲆ, ᐃΔ.ΔΔⵠΔΔⵠΔᐃⲆ, ᐃΔ.ⵠⲆⲆᐃⲆᐃᐃΔⲆ, ᐃΔ.ΔᐃᐃΔΔΔⵠⵠΔ, ᐃΔ.ⲆᐃΔⵠᐃⲆᐃᐃⲆ, ᐃΔ.ΔⲆᐃⵠΔΔⵠᐃᐃ, ᐃΔ.ⲆᐃⲆⵠᐃΔᐃⲆΔ, ᐃΔ.ⲆⲆⵠⲆΔⲆⵠΔⵠ, ᐃΔ.ᐃΔⵠᐃⲆΔⲆⲆΔ, ᐃΔ.ⵠⵠⵠⵠⵠΔᐃⲆᐃ, ᐃΔ.ⵠᐃⵠⲆⲆⵠⲆⲆᐃ, ᐃΔ.ΔⵠᐃⲆΔⲆᐃⵠΔ, ᐃΔ.ᐃΔᐃᐃΔⲆⲆᐃⲆ, ᐃΔ.ⲆⵠⵠΔΔⵠⵠⲆΔ, ᐃΔ.ᐃⵠᐃⲆΔᐃⲆⲆᐃ, ᐃΔ.ᐃᐃⵠᐃΔⵠΔⲆᐃ, ᐃΔ.ΔΔΔⲆⲆⲆⵠⲆⲆ, ᐃΔ.ΔᐃⵠΔⵠΔΔΔⲆ, ᐃΔ.ᐃⵠⵠΔᐃΔⲆⲆᐃ, ᐃΔ.ⲆⲆⵠᐃΔⲆᐃⵠΔ, ᐃΔ.ⲆᐃⲆⵠⲆⵠⲆΔᐃ, ᐃΔ.ⵠⲆᐃᐃⲆⵠᐃᐃⵠ, ᐃΔ.ⵠΔᐃΔⵠⵠⲆⲆΔ, ᐃΔ.ⲆⲆᐃΔᐃⵠᐃΔΔ, ᐃΔ.ⲆⲆᐃᐃⲆⵠⲆⵠⵠ, ᐃΔ.ΔⵠⵠⲆᐃᐃⲆⵠⵠ, ᐃΔ.ⵠⲆΔᐃⲆⵠⵠΔᐃ, ᐃΔ.ΔⲆⲆⲆΔⲆΔᐃⲆ, ᐃΔ.ᐃⲆⵠⵠΔⵠⵠⲆⲆ, ᐃΔ.ᐃⲆⲆΔⵠΔᐃⲆᐃ, ᐃΔ.ⲆⵠⲆⵠᐃⵠⲆⲆΔ, ᐃΔ.ᐃᐃᐃⲆΔᐃⲆΔΔ, ᐃΔ.ⵠᐃⵠⵠΔᐃᐃⵠᐃ, ᐃΔ.ᐃⲆᐃⵠΔΔΔΔⵠ, ᐃΔ.ⵠΔᐃⵠΔΔⵠⵠΔ, ᐃΔ.ᐃᐃⵠΔⲆⲆⲆⵠⵠ];
    ⵠΔ[353][v594.ᐃᐃⵠ] = [ᐃΔ.ⲆᐃⵠⵠⲆΔⲆΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠᐃᐃΔ, ᐃΔ.ΔⲆⵠΔᐃⲆⵠⲆⵠ, ᐃΔ.ΔⵠΔⵠᐃⵠΔⵠⲆ, ᐃΔ.ᐃᐃᐃⵠᐃᐃⲆᐃⵠ, ᐃΔ.ᐃⲆⵠΔⲆΔⵠᐃᐃ, ᐃΔ.ᐃΔⲆΔΔᐃⲆΔΔ, ᐃΔ.ᐃᐃᐃΔΔⵠᐃⲆᐃ, ᐃΔ.ΔⵠⲆⲆⵠⵠⲆⵠᐃ, ᐃΔ.ΔⲆΔᐃΔⵠⵠⵠΔ, ᐃΔ.ⲆⲆⲆᐃⵠΔΔⵠΔ, ᐃΔ.ΔΔⲆΔⲆᐃⵠⲆⵠ, ᐃΔ.ᐃⲆⲆΔΔΔᐃⵠΔ, ᐃΔ.ⲆΔⲆⵠⲆΔΔⵠΔ, ᐃΔ.ⲆⵠⲆⲆᐃⲆΔᐃᐃ, ᐃΔ.ⵠᐃⵠΔΔⲆΔⵠΔ, ᐃΔ.ΔⵠⲆⲆΔⲆΔᐃᐃ, ᐃΔ.ⲆΔᐃΔΔΔⲆΔΔ, ᐃΔ.ΔⵠᐃⲆⵠⲆᐃᐃΔ, ᐃΔ.ᐃᐃⲆⵠⵠΔΔΔⲆ, ᐃΔ.ΔⲆᐃⵠⵠΔⲆⲆⵠ, ᐃΔ.ⵠΔᐃⲆⲆⵠΔᐃΔ, ᐃΔ.ᐃⲆⵠᐃⵠⲆᐃΔᐃ, ᐃΔ.ΔᐃᐃΔⲆⲆᐃΔᐃ, ᐃΔ.ΔᐃⵠΔᐃⲆΔⲆᐃ, ᐃΔ.ⲆΔΔΔⵠΔᐃᐃᐃ, ᐃΔ.ⲆⲆΔⲆᐃⲆⲆⵠⵠ, ᐃΔ.ⲆⲆⵠⲆⵠⵠⲆⲆᐃ, ᐃΔ.ⲆΔΔΔΔΔⵠᐃⲆ, ᐃΔ.ⲆⲆⵠⵠⵠⲆⵠⲆᐃ, ᐃΔ.ΔⲆⵠᐃⵠⵠᐃΔᐃ, ᐃΔ.ⵠⵠⲆΔᐃΔⵠᐃⲆ, ᐃΔ.ⵠⵠΔⵠⲆᐃⵠᐃⵠ, ᐃΔ.ΔΔⵠΔⲆⲆΔⵠⵠ, ᐃΔ.ⲆᐃⵠⵠⲆⲆᐃᐃᐃ, ᐃΔ.ⲆΔⵠᐃⲆⲆⲆⵠⵠ, ᐃΔ.ⲆΔᐃⲆⲆΔⵠΔᐃ, ᐃΔ.ⲆⵠⵠⵠᐃΔΔⲆⲆ, ᐃΔ.ⵠⲆⵠᐃⲆΔⵠⲆᐃ, ᐃΔ.ΔΔΔⲆΔⵠⵠⲆᐃ, ᐃΔ.ⵠΔΔᐃⵠⵠᐃΔᐃ, ᐃΔ.ΔΔΔⲆⲆⲆΔⲆⲆ, ᐃΔ.ΔⲆᐃᐃᐃⲆⲆΔΔ, ᐃΔ.ΔⵠⵠΔⲆᐃᐃⲆⵠ, ᐃΔ.ΔΔᐃⲆⲆⲆⲆⵠᐃ, ᐃΔ.ⲆΔⲆᐃⵠⲆᐃⲆⲆ, ᐃΔ.ᐃᐃⲆΔᐃⵠⲆⲆⵠ, ᐃΔ.ᐃΔⲆⲆᐃⵠᐃⲆΔ, ᐃΔ.ᐃⵠⲆΔⵠΔⵠⲆⵠ, ᐃΔ.ⵠΔΔΔⲆⵠⲆΔⵠ, ᐃΔ.ΔᐃᐃⵠΔⲆᐃᐃⲆ, ᐃΔ.ΔΔⲆΔΔⵠΔⵠᐃ, ᐃΔ.ᐃⵠⲆⲆΔⲆΔΔⵠ, ᐃΔ.ⵠⵠⲆᐃᐃᐃΔⲆΔ, ᐃΔ.ᐃⵠⵠⵠᐃΔⲆⲆᐃ, ᐃΔ.ΔᐃΔΔᐃᐃⵠΔⲆ, ᐃΔ.ᐃΔᐃⲆⲆΔᐃΔΔ, ᐃΔ.ᐃΔⲆᐃΔΔᐃᐃⵠ, ᐃΔ.ΔⵠⵠⵠΔⲆΔᐃΔ, ᐃΔ.ⲆⵠⵠΔᐃⲆⵠᐃΔ, ᐃΔ.ⵠⵠΔⵠᐃΔⲆⵠᐃ, ᐃΔ.ⲆⲆᐃⲆΔΔⵠⲆΔ, ᐃΔ.ⲆⵠⲆⵠⲆⵠΔⲆᐃ, ᐃΔ.ᐃᐃⵠⲆΔᐃⵠⵠⲆ, ᐃΔ.ⵠΔᐃΔᐃⲆⵠⵠΔ, ᐃΔ.ᐃᐃⵠᐃⵠⵠΔᐃⲆ];
    ⵠΔ[895] = [];
    ⵠΔ[895][v594.ΔⲆᐃ] = [];
    ⵠΔ[895][v594.ᐃᐃⵠ] = [];
    ⵠΔ[895][v594.ΔⲆᐃ].push(f50(f160(v1310 * 1.1, vVVV1622, ["#252B28", "#747471", "#83827e"], 0)));
    ⵠΔ[895][v594.ΔⲆᐃ].push(f50(f160(v1310 * 0.9, false, ["#252B28", "#747471", "#83827e"], 1)));
    ⵠΔ[895][v594.ΔⲆᐃ].push(f50(f160(v1310 * 1, false, ["#252B28", "#747471", "#83827e"], 2)));
    ⵠΔ[895][v594.ΔⲆᐃ].push(f50(f160(v1310 * 0.9, vVV16, ["#252B28", "#747471", "#83827e"], 2)));
    ⵠΔ[895][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 1.1, false, ["#030d14", "#123335", "#183f3f"], 0)));
    ⵠΔ[895][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 0.9, false, ["#030d14", "#123335", "#183f3f"], 1)));
    ⵠΔ[895][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 1, false, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[895][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 0.9, vVV16, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[898] = [];
    ⵠΔ[898][v594.ΔⲆᐃ] = [];
    ⵠΔ[898][v594.ᐃᐃⵠ] = [];
    ⵠΔ[898][v594.ΔⲆᐃ].push(f50(f160(v1310 * 1.1, vVV12, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[898][v594.ΔⲆᐃ].push(f50(f160(v1310 * 0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[898][v594.ΔⲆᐃ].push(f50(f160(v1310 * 1, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[898][v594.ΔⲆᐃ].push(f50(f160(v1310 * 0.9, vVV123, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[898][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 1.1, v12, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[898][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 0.9, vVVVVV12232, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[898][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 1, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[898][v594.ᐃᐃⵠ].push(f50(f160(v1310 * 0.9, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[526] = [];
    ⵠΔ[526][v594.ΔⲆᐃ] = [];
    ⵠΔ[526][v594.ᐃᐃⵠ] = [];
    ⵠΔ[526][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[526][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[526][v594.ΔⲆᐃ].push(f50(f176(v1310 * 1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[526][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.5, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[526][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.3, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[526][v594.ᐃᐃⵠ].push(f50(f176(v1310 * 1.1, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[527] = [];
    ⵠΔ[527][v594.ΔⲆᐃ] = [];
    ⵠΔ[527][v594.ᐃᐃⵠ] = [];
    ⵠΔ[527][v594.ΔⲆᐃ].push(f50(f168(v1310 * 1.1, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[527][v594.ΔⲆᐃ].push(f50(f168(v1310 * 0.9, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[527][v594.ΔⲆᐃ].push(f50(f168(v1310 * 0.7, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[527][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[527][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 0.9, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[527][v594.ᐃᐃⵠ].push(f50(f168(v1310 * 0.7, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[212] = [];
    ⵠΔ[212][v594.ΔⲆᐃ] = [];
    ⵠΔ[212][v594.ᐃᐃⵠ] = [];
    ⵠΔ[212][v594.ΔⲆᐃ].push(f50(f208(v1310 * 1.7, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[212][v594.ΔⲆᐃ].push(f50(f208(v1310 * 1.5, vVVVV12222, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[212][v594.ΔⲆᐃ].push(f50(f208(v1310 * 1.3, vVVVVV12232, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[212][v594.ᐃᐃⵠ].push(f50(f208(v1310 * 1.7, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[212][v594.ᐃᐃⵠ].push(f50(f208(v1310 * 1.5, vVVV1223, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[212][v594.ᐃᐃⵠ].push(f50(f208(v1310 * 1.3, vVVVV12232, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[897] = [];
    ⵠΔ[897][v594.ΔⲆᐃ] = [];
    ⵠΔ[897][v594.ᐃᐃⵠ] = [];
    ⵠΔ[897][v594.ΔⲆᐃ].push(f50(f213(v1310, ["#2d53c4"])));
    ⵠΔ[897][v594.ᐃᐃⵠ].push(f50(f213(v1310, ["#2d53c4"])));
    ⵠΔ[915] = [];
    ⵠΔ[915][v594.ΔⲆᐃ] = [];
    ⵠΔ[915][v594.ᐃᐃⵠ] = [];
    ⵠΔ[915][v594.ΔⲆᐃ].push(f50(f213(v1310, ["#c4912d"])));
    ⵠΔ[915][v594.ᐃᐃⵠ].push(f50(f213(v1310, ["#c4912d"])));
    ⵠΔ[899] = [];
    ⵠΔ[899][v594.ΔⲆᐃ] = f50(f283(v1310, ["#414040"]));
    ⵠΔ[899][v594.ᐃᐃⵠ] = f50(f283(v1310, ["#153635"]));
    ⵠΔ[646] = [];
    ⵠΔ[646][v594.ΔⲆᐃ] = f50(f197(v1310 * 1, vVV1622, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[646][v594.ᐃᐃⵠ] = f50(f197(v1310 * 1, vVV164, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[647] = [];
    ⵠΔ[647][v594.ΔⲆᐃ] = f50(f188(v1310 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[647][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[650] = [];
    ⵠΔ[650][v594.ΔⲆᐃ] = f50(f188(v1310 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[650][v594.ᐃᐃⵠ] = f50(f188(v1310 * 1, vVV16, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[649] = [];
    ⵠΔ[649][v594.ΔⲆᐃ] = f50(f189(v1310 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[649][v594.ᐃᐃⵠ] = f50(f189(v1310 * 1, vVV1623, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[648] = [];
    ⵠΔ[648][v594.ΔⲆᐃ] = f50(f177(v1310 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[648][v594.ᐃᐃⵠ] = f50(f177(v1310 * 1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[530] = [];
    ⵠΔ[530][v594.ΔⲆᐃ] = f50(f246(v1310 * 0.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
    ⵠΔ[530][v594.ᐃᐃⵠ] = f50(f246(v1310 * 0.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"]));
    ⵠΔ[583] = [];
    ⵠΔ[583][v594.ΔⲆᐃ] = f50(f272(v1310 * 0.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"]));
    ⵠΔ[583][v594.ᐃᐃⵠ] = f50(f272(v1310 * 0.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"]));
    ⵠΔ[369] = [];
    ⵠΔ[1067] = [];
    ⵠΔ[654] = [];
    ⵠΔ[1068] = [];
    for (v1313 = 0; v1313 < 2; v1313++) {
      ⵠΔ[369][v1313] = document.createElement("canvas");
      ⵠΔ[369][v1313].width = 193;
      ⵠΔ[369][v1313].height = 193;
      ⵠΔ[1067][v1313] = ⵠΔ[369][v1313].getContext("2d");
      ⵠΔ[654][v1313] = document.createElement("canvas");
      ⵠΔ[654][v1313].width = 600;
      ⵠΔ[654][v1313].height = 600;
      ⵠΔ[1068][v1313] = ⵠΔ[654][v1313].getContext("2d");
    }
    ⵠΔ[613] = [];
    ⵠΔ[613][v594.ΔⲆᐃ] = f50(f283(v1310, ["#c8e0de"]));
    ⵠΔ[613][v594.ᐃᐃⵠ] = f50(f283(v1310, ["#147071"]));
    ⵠΔ[614] = [];
    ⵠΔ[614][v594.ΔⲆᐃ] = f50(f283(v1310, ["#231912"]));
    ⵠΔ[614][v594.ᐃᐃⵠ] = f50(f283(v1310, ["#021719"]));
    ⵠΔ[916] = f50(function (p990, p991) {
      var v1346 = document.createElement("canvas");
      var v1347 = v1346.getContext("2d");
      v1346.width = p990 * 253;
      v1346.height = p990 * 192;
      v1347.save();
      v1347.translate(p990 * 37, p990 * 94);
      f90(v1347, p990 * -7, p990 * -20, p990 * 14, p990 * 37, p990 * 20);
      v1347.restore();
      f89(v1347, p991[0]);
      v1347.save();
      v1347.translate(p990 * 131, p990 * 94);
      f90(v1347, p990 * -84, p990 * -67, p990 * 168, p990 * 134, p990 * 20);
      v1347.restore();
      f89(v1347, p991[0], p991[0], p990 * 13);
      v1347.save();
      v1347.translate(p990 * 223, p990 * 94.5);
      f90(v1347, p990 * -5, p990 * -18.5, p990 * 10, p990 * 37, p990 * 20);
      v1347.restore();
      f89(v1347, p991[0]);
      v1347.save();
      v1347.translate(p990 * 128.5, p990 * 170.5);
      f90(v1347, p990 * -22.5, p990 * -6.5, p990 * 45, p990 * 13, p990 * 20);
      v1347.restore();
      f89(v1347, p991[0]);
      return v1346;
    }(v1310 * 0.5, ["#BB0000"]));
    ⵠΔ[599] = f50(function (p992, p993) {
      var v1348 = document.createElement("canvas");
      var v1349 = v1348.getContext("2d");
      v1348.width = p992 * 161;
      v1348.height = p992 * 190;
      v1349.beginPath();
      v1349.lineCap = "round";
      v1349.lineJoin = "round";
      v1349.moveTo(p992 * 9, p992 * 93);
      v1349.bezierCurveTo(p992 * 17, p992 * 95, p992 * 19, p992 * 95, p992 * 21, p992 * 95);
      v1349.bezierCurveTo(p992 * 9, p992 * 83, p992 * 17, p992 * 93, p992 * 4, p992 * 76);
      v1349.bezierCurveTo(p992 * 11, p992 * 75, p992 * 11, p992 * 75, p992 * 18, p992 * 75);
      v1349.bezierCurveTo(p992 * 13, p992 * 67, p992 * 13, p992 * 67, p992 * 7, p992 * 59);
      v1349.bezierCurveTo(p992 * 14, p992 * 59, p992 * 14, p992 * 59, p992 * 21, p992 * 59);
      v1349.bezierCurveTo(p992 * 46, p992 * 35, p992 * 35, p992 * 45, p992 * 49, p992 * 31);
      v1349.bezierCurveTo(p992 * 53, p992 * 24, p992 * 51, p992 * 21, p992 * 51, p992 * 16);
      v1349.bezierCurveTo(p992 * 63, p992 * 23, p992 * 63, p992 * 24, p992 * 69, p992 * 29);
      v1349.bezierCurveTo(p992 * 76, p992 * 7, p992 * 75, p992 * 11, p992 * 76, p992 * 6);
      v1349.bezierCurveTo(p992 * 81, p992 * 12, p992 * 84, p992 * 18, p992 * 89, p992 * 27);
      v1349.bezierCurveTo(p992 * 95, p992 * 25, p992 * 100, p992 * 16, p992 * 105, p992 * 14);
      v1349.bezierCurveTo(p992 * 103, p992 * 25, p992 * 111, p992 * 33, p992 * 110, p992 * 34);
      v1349.bezierCurveTo(p992 * 123, p992 * 48, p992 * 123, p992 * 48, p992 * 136, p992 * 62);
      v1349.bezierCurveTo(p992 * 142, p992 * 60, p992 * 147, p992 * 59, p992 * 155, p992 * 58);
      v1349.bezierCurveTo(p992 * 147, p992 * 65, p992 * 147, p992 * 65, p992 * 139, p992 * 73);
      v1349.bezierCurveTo(p992 * 145, p992 * 73, p992 * 145, p992 * 73, p992 * 151, p992 * 73);
      v1349.bezierCurveTo(p992 * 145, p992 * 80, p992 * 145, p992 * 80, p992 * 138, p992 * 87);
      v1349.bezierCurveTo(p992 * 144, p992 * 88, p992 * 144, p992 * 88, p992 * 150, p992 * 89);
      v1349.bezierCurveTo(p992 * 125, p992 * 103, p992 * 125, p992 * 125, p992 * 113, p992 * 141);
      v1349.bezierCurveTo(p992 * 92, p992 * 178, p992 * 85, p992 * 177, p992 * 76, p992 * 178);
      v1349.bezierCurveTo(p992 * 64, p992 * 179, p992 * 51, p992 * 164, p992 * 35, p992 * 131);
      v1349.bezierCurveTo(p992 * 18, p992 * 95, p992 * 13, p992 * 99, p992 * 8, p992 * 93);
      v1349.closePath();
      f89(v1349, p993, p993, p992 * 4);
      v1349.beginPath();
      v1349.lineCap = "round";
      v1349.lineJoin = "round";
      v1349.moveTo(p992 * 25, p992 * 63);
      v1349.bezierCurveTo(p992 * 16, p992 * 58, p992 * 17, p992 * 51, p992 * 17, p992 * 33);
      v1349.bezierCurveTo(p992 * 19, p992 * 12, p992 * 21, p992 * 12, p992 * 32, p992 * 17);
      v1349.bezierCurveTo(p992 * 63, p992 * 31, p992 * 66, p992 * 45, p992 * 66, p992 * 54);
      f89(v1349, p993, p993, p992 * 4);
      v1349.beginPath();
      v1349.lineCap = "round";
      v1349.lineJoin = "round";
      v1349.moveTo(p992 * 91, p992 * 53);
      v1349.bezierCurveTo(p992 * 91, p992 * 40, p992 * 98, p992 * 33, p992 * 121, p992 * 20);
      v1349.bezierCurveTo(p992 * 137, p992 * 12, p992 * 137, p992 * 16, p992 * 139, p992 * 27);
      v1349.bezierCurveTo(p992 * 141, p992 * 49, p992 * 140, p992 * 57, p992 * 134, p992 * 64);
      f89(v1349, p993, p993, p992 * 4);
      return v1348;
    }(v1310 * 0.9, "#BB0000"));
    ⵠΔ[600] = f50(function (p994, p995) {
      var v1350 = document.createElement("canvas");
      var v1351 = v1350.getContext("2d");
      v1350.width = p994 * 147;
      v1350.height = p994 * 172;
      v1351.beginPath();
      v1351.lineCap = "round";
      v1351.lineJoin = "round";
      v1351.moveTo(p994 * 8, p994 * 50);
      v1351.bezierCurveTo(p994 * 15, p994 * 16, p994 * 49, p994 * 6, p994 * 67, p994 * 6);
      v1351.bezierCurveTo(p994 * 121, p994 * 3, p994 * 128, p994 * 32, p994 * 135, p994 * 48);
      v1351.bezierCurveTo(p994 * 146, p994 * 96, p994 * 124, p994 * 131, p994 * 96, p994 * 135);
      v1351.bezierCurveTo(p994 * 96, p994 * 158, p994 * 79, p994 * 156, p994 * 75, p994 * 156);
      v1351.bezierCurveTo(p994 * 50, p994 * 154, p994 * 53, p994 * 150, p994 * 52, p994 * 135);
      v1351.bezierCurveTo(p994 * 2, p994 * 127, p994 * 3, p994 * 87, p994 * 8, p994 * 50);
      v1351.closePath();
      f89(v1351, p995, p995, p994 * 4);
      v1351.beginPath();
      v1351.lineCap = "round";
      v1351.lineJoin = "round";
      v1351.moveTo(p994 * 14, p994 * 57);
      v1351.bezierCurveTo(p994 * 2, p994 * 50, p994 * 5, p994 * 22, p994 * 24, p994 * 22);
      v1351.bezierCurveTo(p994 * 41, p994 * 21, p994 * 54, p994 * 32, p994 * 55, p994 * 48);
      f89(v1351, p995, p995, p994 * 4);
      v1351.beginPath();
      v1351.lineCap = "round";
      v1351.lineJoin = "round";
      v1351.moveTo(p994 * 93, p994 * 47);
      v1351.bezierCurveTo(p994 * 94, p994 * 24, p994 * 116, p994 * 21, p994 * 120, p994 * 20);
      v1351.bezierCurveTo(p994 * 144, p994 * 17, p994 * 146, p994 * 52, p994 * 133, p994 * 58);
      f89(v1351, p995, p995, p994 * 4);
      return v1350;
    }(v1310 * 0.9, "#BB0000"));
    ⵠΔ[601] = f50(function (p996, p997) {
      var v1352 = document.createElement("canvas");
      var v1353 = v1352.getContext("2d");
      v1352.width = p996 * 271;
      v1352.height = p996 * 366;
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 133, p996 * 99);
      v1353.bezierCurveTo(p996 * 186, p996 * 123, p996 * 199, p996 * 152, p996 * 209, p996 * 169);
      v1353.bezierCurveTo(p996 * 228, p996 * 205, p996 * 224, p996 * 245, p996 * 190, p996 * 276);
      v1353.bezierCurveTo(p996 * 161, p996 * 296, p996 * 99, p996 * 292, p996 * 79, p996 * 274);
      v1353.bezierCurveTo(p996 * 49, p996 * 253, p996 * 47, p996 * 214, p996 * 50, p996 * 197);
      v1353.bezierCurveTo(p996 * 61, p996 * 143, p996 * 102, p996 * 113, p996 * 131, p996 * 99);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 73, p996 * 270);
      v1353.bezierCurveTo(p996 * 79, p996 * 280, p996 * 77, p996 * 280, p996 * 78, p996 * 287);
      v1353.bezierCurveTo(p996 * 78, p996 * 290, p996 * 83, p996 * 291, p996 * 82, p996 * 299);
      v1353.bezierCurveTo(p996 * 81, p996 * 301, p996 * 87, p996 * 301, p996 * 92, p996 * 314);
      v1353.bezierCurveTo(p996 * 94, p996 * 319, p996 * 100, p996 * 321, p996 * 107, p996 * 320);
      v1353.bezierCurveTo(p996 * 111, p996 * 323, p996 * 114, p996 * 324, p996 * 119, p996 * 320);
      v1353.bezierCurveTo(p996 * 137, p996 * 321, p996 * 146, p996 * 323, p996 * 139, p996 * 320);
      v1353.bezierCurveTo(p996 * 141, p996 * 324, p996 * 150, p996 * 324, p996 * 153, p996 * 320);
      v1353.bezierCurveTo(p996 * 168, p996 * 319, p996 * 171, p996 * 316, p996 * 173, p996 * 307);
      v1353.bezierCurveTo(p996 * 180, p996 * 305, p996 * 180, p996 * 301, p996 * 178, p996 * 296);
      v1353.bezierCurveTo(p996 * 183, p996 * 296, p996 * 185, p996 * 289, p996 * 188, p996 * 279);
      v1353.bezierCurveTo(p996 * 171, p996 * 286, p996 * 149, p996 * 290, p996 * 132, p996 * 289);
      v1353.bezierCurveTo(p996 * 101, p996 * 290, p996 * 86, p996 * 280, p996 * 74, p996 * 271);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 76, p996 * 252);
      v1353.bezierCurveTo(p996 * 85, p996 * 294, p996 * 96, p996 * 314, p996 * 103, p996 * 314);
      v1353.bezierCurveTo(p996 * 106, p996 * 316, p996 * 151, p996 * 314, p996 * 156, p996 * 314);
      v1353.bezierCurveTo(p996 * 169, p996 * 317, p996 * 182, p996 * 285, p996 * 191, p996 * 256);
      v1353.bezierCurveTo(p996 * 134.5, p996 * 254, p996 * 134.5, p996 * 254, p996 * 78, p996 * 252);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 84, p996 * 257);
      v1353.bezierCurveTo(p996 * 122, p996 * 273, p996 * 146, p996 * 268, p996 * 179, p996 * 261);
      v1353.bezierCurveTo(p996 * 190, p996 * 258, p996 * 187, p996 * 266, p996 * 178, p996 * 272);
      v1353.bezierCurveTo(p996 * 160, p996 * 284, p996 * 123, p996 * 282, p996 * 100, p996 * 277);
      v1353.bezierCurveTo(p996 * 73, p996 * 260, p996 * 79, p996 * 257, p996 * 84, p996 * 257);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 125, p996 * 65);
      v1353.bezierCurveTo(p996 * 133, p996 * 45, p996 * 136, p996 * 42, p996 * 141, p996 * 55);
      v1353.bezierCurveTo(p996 * 151, p996 * 96, p996 * 164, p996 * 117, p996 * 175, p996 * 134);
      v1353.bezierCurveTo(p996 * 203, p996 * 181, p996 * 207, p996 * 182, p996 * 208, p996 * 215);
      v1353.bezierCurveTo(p996 * 206, p996 * 240, p996 * 205, p996 * 246, p996 * 184, p996 * 258);
      v1353.bezierCurveTo(p996 * 161, p996 * 267, p996 * 131, p996 * 272, p996 * 86, p996 * 258);
      v1353.bezierCurveTo(p996 * 67, p996 * 252, p996 * 68, p996 * 239, p996 * 64, p996 * 216);
      v1353.bezierCurveTo(p996 * 62, p996 * 194, p996 * 72, p996 * 169, p996 * 92, p996 * 142);
      v1353.bezierCurveTo(p996 * 106, p996 * 121, p996 * 114, p996 * 101, p996 * 125, p996 * 65);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 115, p996 * 37);
      v1353.bezierCurveTo(p996 * 116, p996 * 28, p996 * 119, p996 * 27, p996 * 126, p996 * 37);
      v1353.bezierCurveTo(p996 * 134, p996 * 48, p996 * 134, p996 * 49, p996 * 132, p996 * 59);
      v1353.bezierCurveTo(p996 * 131, p996 * 67, p996 * 127, p996 * 65, p996 * 120, p996 * 56);
      v1353.bezierCurveTo(p996 * 114, p996 * 49, p996 * 113, p996 * 43, p996 * 115, p996 * 38);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 146, p996 * 34);
      v1353.bezierCurveTo(p996 * 152, p996 * 28, p996 * 155, p996 * 27, p996 * 157, p996 * 39);
      v1353.bezierCurveTo(p996 * 157, p996 * 45, p996 * 157, p996 * 49, p996 * 150, p996 * 56);
      v1353.bezierCurveTo(p996 * 141, p996 * 66, p996 * 138, p996 * 66, p996 * 138, p996 * 57);
      v1353.bezierCurveTo(p996 * 137, p996 * 50, p996 * 137, p996 * 47, p996 * 141, p996 * 42);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 143, p996 * 69);
      v1353.bezierCurveTo(p996 * 148, p996 * 56, p996 * 156, p996 * 50, p996 * 158, p996 * 58);
      v1353.bezierCurveTo(p996 * 159, p996 * 64, p996 * 160, p996 * 67, p996 * 153, p996 * 77);
      v1353.bezierCurveTo(p996 * 148, p996 * 83, p996 * 145, p996 * 84, p996 * 143, p996 * 77);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 149, p996 * 92);
      v1353.bezierCurveTo(p996 * 149, p996 * 89, p996 * 151, p996 * 84, p996 * 156, p996 * 79);
      v1353.bezierCurveTo(p996 * 161, p996 * 73, p996 * 163, p996 * 78, p996 * 162, p996 * 86);
      v1353.bezierCurveTo(p996 * 161, p996 * 91, p996 * 155, p996 * 99, p996 * 152, p996 * 98);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 111, p996 * 61);
      v1353.bezierCurveTo(p996 * 114, p996 * 51, p996 * 117, p996 * 51, p996 * 124, p996 * 64);
      v1353.bezierCurveTo(p996 * 128, p996 * 68, p996 * 128, p996 * 76, p996 * 126, p996 * 79);
      v1353.bezierCurveTo(p996 * 123, p996 * 84, p996 * 122, p996 * 82, p996 * 115, p996 * 74);
      v1353.bezierCurveTo(p996 * 112, p996 * 67, p996 * 115, p996 * 74, p996 * 115, p996 * 74);
      v1353.bezierCurveTo(p996 * 111, p996 * 68, p996 * 111, p996 * 66, p996 * 111, p996 * 62);
      v1353.closePath();
      f89(v1353, p997[0]);
      v1353.beginPath();
      v1353.lineCap = "round";
      v1353.lineJoin = "round";
      v1353.moveTo(p996 * 107, p996 * 81);
      v1353.bezierCurveTo(p996 * 108, p996 * 74, p996 * 112, p996 * 73, p996 * 118, p996 * 84);
      v1353.bezierCurveTo(p996 * 122, p996 * 88, p996 * 122, p996 * 93, p996 * 121, p996 * 98);
      v1353.bezierCurveTo(p996 * 114, p996 * 98, p996 * 113, p996 * 98, p996 * 109, p996 * 90);
      v1353.bezierCurveTo(p996 * 107, p996 * 87, p996 * 106, p996 * 85, p996 * 107, p996 * 82);
      v1353.closePath();
      f89(v1353, p997[0]);
      return v1352;
    }(v1310 * 1, ["#BB0000"]));
    ⵠΔ[604] = f50(function (p998, p999) {
      var v1354 = document.createElement("canvas");
      var v1355 = v1354.getContext("2d");
      v1354.width = p998 * 85;
      v1354.height = p998 * 145;
      v1355.translate(p998 * -20, p998 * -95);
      v1355.beginPath();
      v1355.lineCap = "round";
      v1355.lineJoin = "round";
      v1355.moveTo(p998 * 50, p998 * 105);
      v1355.bezierCurveTo(p998 * 52, p998 * 119, p998 * 64, p998 * 137, p998 * 71, p998 * 146);
      v1355.bezierCurveTo(p998 * 71, p998 * 161, p998 * 74, p998 * 169, p998 * 79, p998 * 179);
      v1355.bezierCurveTo(p998 * 68, p998 * 192, p998 * 70, p998 * 204, p998 * 69, p998 * 216);
      v1355.bezierCurveTo(p998 * 50, p998 * 189.5, p998 * 50, p998 * 189.5, p998 * 31, p998 * 163);
      v1355.closePath();
      f89(v1355, p999);
      v1355.beginPath();
      v1355.lineCap = "round";
      v1355.lineJoin = "round";
      v1355.moveTo(p998 * 44, p998 * 106);
      v1355.bezierCurveTo(p998 * 49, p998 * 90, p998 * 58, p998 * 104, p998 * 51, p998 * 121);
      v1355.bezierCurveTo(p998 * 45, p998 * 143, p998 * 41, p998 * 151, p998 * 37, p998 * 162);
      v1355.bezierCurveTo(p998 * 48, p998 * 180, p998 * 58, p998 * 188, p998 * 76, p998 * 205);
      v1355.bezierCurveTo(p998 * 104, p998 * 209, p998 * 105, p998 * 229, p998 * 92, p998 * 235);
      v1355.bezierCurveTo(p998 * 76, p998 * 239, p998 * 75, p998 * 232, p998 * 56, p998 * 213);
      v1355.bezierCurveTo(p998 * 31, p998 * 187, p998 * 28, p998 * 176, p998 * 23, p998 * 162);
      v1355.bezierCurveTo(p998 * 38, p998 * 131, p998 * 40, p998 * 120, p998 * 44, p998 * 106);
      v1355.closePath();
      f89(v1355, p999, p999, p998 * 4);
      v1355.beginPath();
      v1355.lineCap = "round";
      v1355.lineJoin = "round";
      v1355.moveTo(p998 * 30, p998 * 159);
      v1355.bezierCurveTo(p998 * 46, p998 * 157, p998 * 59, p998 * 152, p998 * 68, p998 * 148);
      v1355.bezierCurveTo(p998 * 63, p998 * 155, p998 * 52, p998 * 160, p998 * 44, p998 * 164);
      v1355.bezierCurveTo(p998 * 59, p998 * 169, p998 * 66, p998 * 174, p998 * 75, p998 * 178);
      v1355.bezierCurveTo(p998 * 58, p998 * 178, p998 * 49, p998 * 175, p998 * 37, p998 * 174);
      v1355.closePath();
      f89(v1355, p999);
      return v1354;
    }(v1310 * 0.8, "#BB0000"));
    ⵠΔ[605] = f50(function (p1000, p1001) {
      var v1356 = document.createElement("canvas");
      var v1357 = v1356.getContext("2d");
      v1356.width = p1000 * 85;
      v1356.height = p1000 * 145;
      v1357.translate(p1000 * -165, p1000 * -95);
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1000 * 217, p1000 * 103);
      v1357.bezierCurveTo(p1000 * 209, p1000 * 129, p1000 * 203, p1000 * 137, p1000 * 195, p1000 * 146);
      v1357.bezierCurveTo(p1000 * 195, p1000 * 159, p1000 * 194, p1000 * 167, p1000 * 189, p1000 * 178);
      v1357.bezierCurveTo(p1000 * 193, p1000 * 186, p1000 * 196, p1000 * 195, p1000 * 198, p1000 * 216);
      v1357.bezierCurveTo(p1000 * 217.5, p1000 * 189.5, p1000 * 217.5, p1000 * 189.5, p1000 * 237, p1000 * 163);
      v1357.closePath();
      f89(v1357, p1001);
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1000 * 231, p1000 * 163);
      v1357.bezierCurveTo(p1000 * 221, p1000 * 139, p1000 * 218, p1000 * 128, p1000 * 215, p1000 * 114);
      v1357.bezierCurveTo(p1000 * 213, p1000 * 102, p1000 * 220, p1000 * 92, p1000 * 222, p1000 * 107);
      v1357.bezierCurveTo(p1000 * 224, p1000 * 118, p1000 * 233, p1000 * 138, p1000 * 244, p1000 * 161);
      v1357.bezierCurveTo(p1000 * 235, p1000 * 188, p1000 * 224, p1000 * 198, p1000 * 204, p1000 * 221);
      v1357.bezierCurveTo(p1000 * 190, p1000 * 233, p1000 * 190, p1000 * 235, p1000 * 180, p1000 * 235);
      v1357.bezierCurveTo(p1000 * 167, p1000 * 235, p1000 * 164, p1000 * 216, p1000 * 175, p1000 * 211);
      v1357.bezierCurveTo(p1000 * 176, p1000 * 208, p1000 * 181, p1000 * 207, p1000 * 191, p1000 * 205);
      v1357.bezierCurveTo(p1000 * 213, p1000 * 186, p1000 * 218, p1000 * 180, p1000 * 230, p1000 * 163);
      v1357.closePath();
      f89(v1357, p1001, p1001, p1000 * 4);
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1000 * 234, p1000 * 154);
      v1357.bezierCurveTo(p1000 * 227, p1000 * 156, p1000 * 222, p1000 * 156, p1000 * 199, p1000 * 148);
      v1357.bezierCurveTo(p1000 * 201, p1000 * 151, p1000 * 216, p1000 * 159, p1000 * 224, p1000 * 162);
      v1357.bezierCurveTo(p1000 * 209, p1000 * 169.5, p1000 * 209, p1000 * 169.5, p1000 * 194, p1000 * 177);
      v1357.bezierCurveTo(p1000 * 213.5, p1000 * 175, p1000 * 213.5, p1000 * 175, p1000 * 233, p1000 * 173);
      v1357.closePath();
      f89(v1357, p1001);
      return v1356;
    }(v1310 * 0.8, "#BB0000"));
    ⵠΔ[433] = f50(function (p1002, p1003) {
      var v1358 = document.createElement("canvas");
      var v1359 = v1358.getContext("2d");
      var v1360 = p1002 * 85;
      var v1361 = p1002 * 115;
      var v1362 = p1002 * 4;
      v1358.width = v1360;
      v1358.height = v1361;
      v1359.translate(p1002 * -130, p1002 * -60);
      v1359.globalAlpha = 1;
      v1359.beginPath();
      v1359.bezierCurveTo(p1002 * 190, p1002 * 87, p1002 * 201, p1002 * 59, p1002 * 208, p1002 * 64);
      v1359.bezierCurveTo(p1002 * 213, p1002 * 68, p1002 * 204, p1002 * 93, p1002 * 195, p1002 * 109);
      v1359.bezierCurveTo(p1002 * 195, p1002 * 109, p1002 * 202, p1002 * 124, p1002 * 191, p1002 * 141);
      v1359.bezierCurveTo(p1002 * 182, p1002 * 151, p1002 * 164, p1002 * 155, p1002 * 148, p1002 * 144);
      v1359.bezierCurveTo(p1002 * 136, p1002 * 135, p1002 * 138, p1002 * 111, p1002 * 145, p1002 * 104);
      v1359.bezierCurveTo(p1002 * 140, p1002 * 92, p1002 * 131, p1002 * 67, p1002 * 138, p1002 * 63);
      v1359.bezierCurveTo(p1002 * 145, p1002 * 61, p1002 * 153, p1002 * 82, p1002 * 155, p1002 * 96);
      v1359.bezierCurveTo(p1002 * 167, p1002 * 91, p1002 * 178, p1002 * 92, p1002 * 187, p1002 * 98);
      v1359.closePath();
      f89(v1359, p1003, p1003, v1362);
      return v1358;
    }(v1310 * 0.9, "#BB0000"));
    ⵠΔ[389] = f50(f96(v1310 * 0.6, "#BB0000"));
    ⵠΔ[390] = f50(f96(v1310 * 0.6, "#1CE7E0"));
    ⵠΔ[391] = f50(f96(v1310 * 0.6, "#DBE71C"));
    ⵠΔ[419] = f50(f96(v1310 * 0.6, "#00BB00"));
    ⵠΔ[821] = [];
    ⵠΔ[821][v594.ΔⲆᐃ] = f50(f283(v1310, ["#dac291"]));
    ⵠΔ[821][v594.ᐃᐃⵠ] = f50(f283(v1310, ["#0D423D"]));
    ⵠΔ[917] = [];
    ⵠΔ[917][v594.ΔⲆᐃ] = f50(f283(v1310, ["#dac291"]));
    ⵠΔ[917][v594.ᐃᐃⵠ] = f50(f283(v1310, ["#0D423D"]));
    ⵠΔ[1037] = [];
    ⵠΔ[1037][v594.ΔⲆᐃ] = f50(f264(v1310 * 0.3, vVVVV1222, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
    ⵠΔ[1037][v594.ᐃᐃⵠ] = f50(f264(v1310 * 0.3, true, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"]));
    ⵠΔ[284] = [];
    ⵠΔ[284][v594.ΔⲆᐃ] = f50(f264(v1310 * 0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]));
    ⵠΔ[284][v594.ᐃᐃⵠ] = f50(f264(v1310 * 0.3, vVV12, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"]));
    ⵠΔ[218] = [f50(f231(v1310, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⵠΔ[221] = [f50(f231(v1310, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⵠΔ[822] = [];
    ⵠΔ[822][v594.ΔⲆᐃ] = [];
    ⵠΔ[822][v594.ᐃᐃⵠ] = [];
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f216(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f286(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f227(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f243(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f282(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f252(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ΔⲆᐃ].push(f50(f262(v1310 * 1, ["#0B6A84"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f216(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f286(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f227(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f243(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f282(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f252(v1310 * 1, ["#09373F"])));
    ⵠΔ[822][v594.ᐃᐃⵠ].push(f50(f262(v1310 * 1, ["#09373F"])));
    ⵠΔ[911] = [];
    ⵠΔ[911][v594.ΔⲆᐃ] = [];
    ⵠΔ[911][v594.ᐃᐃⵠ] = [];
    ⵠΔ[911][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.7, ["#FBEFBC"], 0)));
    ⵠΔ[911][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.9, ["#FBEFBC"], 1)));
    ⵠΔ[911][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.7, ["#FBEFBC"], 2)));
    ⵠΔ[911][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.7, ["#0F4C48"], 0)));
    ⵠΔ[911][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.9, ["#0F4C48"], 1)));
    ⵠΔ[911][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.7, ["#0F4C48"], 2)));
    ⵠΔ[913] = [];
    ⵠΔ[913][v594.ΔⲆᐃ] = [];
    ⵠΔ[913][v594.ᐃᐃⵠ] = [];
    ⵠΔ[913][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.8, ["#A9D6D3"], 0)));
    ⵠΔ[913][v594.ΔⲆᐃ].push(f50(f222(v1310 * 2, ["#A9D6D3"], 1)));
    ⵠΔ[913][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.8, ["#A9D6D3"], 2)));
    ⵠΔ[913][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.8, ["#115E60"], 0)));
    ⵠΔ[913][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 2, ["#115E60"], 1)));
    ⵠΔ[913][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.8, ["#115E60"], 2)));
    ⵠΔ[914] = [];
    ⵠΔ[914][v594.ΔⲆᐃ] = [];
    ⵠΔ[914][v594.ᐃᐃⵠ] = [];
    ⵠΔ[914][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.9, ["#2A8B9B"], 0)));
    ⵠΔ[914][v594.ΔⲆᐃ].push(f50(f222(v1310 * 2.1, ["#2A8B9B"], 1)));
    ⵠΔ[914][v594.ΔⲆᐃ].push(f50(f222(v1310 * 1.9, ["#2A8B9B"], 2)));
    ⵠΔ[914][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.9, ["#0F464C"], 0)));
    ⵠΔ[914][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 2.1, ["#0F464C"], 1)));
    ⵠΔ[914][v594.ᐃᐃⵠ].push(f50(f222(v1310 * 1.9, ["#0F464C"], 2)));
    ⵠΔ[912] = [];
    ⵠΔ[912][v594.ΔⲆᐃ] = [];
    ⵠΔ[912][v594.ᐃᐃⵠ] = [];
    ⵠΔ[912][v594.ΔⲆᐃ].push(f50(f166(v1310 * 0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[912][v594.ΔⲆᐃ].push(f50(f166(v1310 * 1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[912][v594.ΔⲆᐃ].push(f50(f166(v1310 * 1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[912][v594.ᐃᐃⵠ].push(f50(f166(v1310 * 0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[912][v594.ᐃᐃⵠ].push(f50(f166(v1310 * 1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[912][v594.ᐃᐃⵠ].push(f50(f166(v1310 * 1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[856] = [];
    ⵠΔ[856][v594.ΔⲆᐃ] = f50(f268(v1310 * 0.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"]));
    ⵠΔ[856][v594.ᐃᐃⵠ] = f50(f268(v1310 * 0.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"]));
    ⵠΔ[906] = f50(function (p1004, p1005) {
      var v1363 = document.createElement("canvas");
      var v1364 = v1363.getContext("2d");
      v1363.width = p1004 * 376;
      v1363.height = p1004 * 371;
      v1364.globalAlpha = 1;
      v1364.beginPath();
      v1364.lineCap = "round";
      v1364.lineJoin = "round";
      v1364.moveTo(p1004 * 191.633544921875, p1004 * 123.98580932617188);
      v1364.bezierCurveTo(p1004 * 215.633544921875, p1004 * 85.98580932617188, p1004 * 187.633544921875, p1004 * 71.98580932617188, p1004 * 202.633544921875, p1004 * 19.985809326171875);
      v1364.bezierCurveTo(p1004 * 231.633544921875, p1004 * 68.98580932617188, p1004 * 253.633544921875, p1004 * 71.98580932617188, p1004 * 256.633544921875, p1004 * 93.98580932617188);
      v1364.bezierCurveTo(p1004 * 306.633544921875, p1004 * 64.98580932617188, p1004 * 319.633544921875, p1004 * 61.985809326171875, p1004 * 350.633544921875, p1004 * 58.985809326171875);
      v1364.bezierCurveTo(p1004 * 280.633544921875, p1004 * 86.98580932617188, p1004 * 281.633544921875, p1004 * 106.98580932617188, p1004 * 268.633544921875, p1004 * 130.98580932617188);
      v1364.bezierCurveTo(p1004 * 295.633544921875, p1004 * 158.98580932617188, p1004 * 328.633544921875, p1004 * 155.98580932617188, p1004 * 353.633544921875, p1004 * 90.98580932617188);
      v1364.bezierCurveTo(p1004 * 371.633544921875, p1004 * 158.98580932617188, p1004 * 337.633544921875, p1004 * 210.98580932617188, p1004 * 286.633544921875, p1004 * 209.98580932617188);
      v1364.bezierCurveTo(p1004 * 323.633544921875, p1004 * 230.98580932617188, p1004 * 317.633544921875, p1004 * 274.9858093261719, p1004 * 356.633544921875, p1004 * 305.9858093261719);
      v1364.bezierCurveTo(p1004 * 288.633544921875, p1004 * 297.9858093261719, p1004 * 288.633544921875, p1004 * 265.9858093261719, p1004 * 275.633544921875, p1004 * 266.9858093261719);
      v1364.bezierCurveTo(p1004 * 280.633544921875, p1004 * 294.9858093261719, p1004 * 315.633544921875, p1004 * 306.9858093261719, p1004 * 336.633544921875, p1004 * 316.9858093261719);
      v1364.bezierCurveTo(p1004 * 295.633544921875, p1004 * 318.9858093261719, p1004 * 264.633544921875, p1004 * 302.9858093261719, p1004 * 254.633544921875, p1004 * 289.9858093261719);
      v1364.bezierCurveTo(p1004 * 252.633544921875, p1004 * 301.9858093261719, p1004 * 224.633544921875, p1004 * 315.9858093261719, p1004 * 201.633544921875, p1004 * 356.9858093261719);
      v1364.bezierCurveTo(p1004 * 195.633544921875, p1004 * 313.9858093261719, p1004 * 195.633544921875, p1004 * 308.9858093261719, p1004 * 196.633544921875, p1004 * 307.9858093261719);
      v1364.bezierCurveTo(p1004 * 197.633544921875, p1004 * 289.9858093261719, p1004 * 207.633544921875, p1004 * 283.9858093261719, p1004 * 195.633544921875, p1004 * 258.9858093261719);
      v1364.bezierCurveTo(p1004 * 182.633544921875, p1004 * 282.9858093261719, p1004 * 190.633544921875, p1004 * 287.9858093261719, p1004 * 193.633544921875, p1004 * 297.9858093261719);
      v1364.bezierCurveTo(p1004 * 195.633544921875, p1004 * 306.9858093261719, p1004 * 191.633544921875, p1004 * 334.9858093261719, p1004 * 187.633544921875, p1004 * 354.9858093261719);
      v1364.bezierCurveTo(p1004 * 165.633544921875, p1004 * 320.9858093261719, p1004 * 138.633544921875, p1004 * 307.9858093261719, p1004 * 135.633544921875, p1004 * 288.9858093261719);
      v1364.bezierCurveTo(p1004 * 110.633544921875, p1004 * 318.9858093261719, p1004 * 68.633544921875, p1004 * 323.9858093261719, p1004 * 49.633544921875, p1004 * 320.9858093261719);
      v1364.bezierCurveTo(p1004 * 88.633544921875, p1004 * 308.9858093261719, p1004 * 108.633544921875, p1004 * 284.9858093261719, p1004 * 118.633544921875, p1004 * 258.9858093261719);
      v1364.bezierCurveTo(p1004 * 86.633544921875, p1004 * 264.9858093261719, p1004 * 75.633544921875, p1004 * 310.9858093261719, p1004 * 19.633544921875, p1004 * 304.9858093261719);
      v1364.bezierCurveTo(p1004 * 54.633544921875, p1004 * 276.9858093261719, p1004 * 59.633544921875, p1004 * 214.98580932617188, p1004 * 105.633544921875, p1004 * 205.98580932617188);
      v1364.bezierCurveTo(p1004 * 14.633544921875, p1004 * 201.98580932617188, p1004 * 24.633544921875, p1004 * 141.98580932617188, p1004 * 25.633544921875, p1004 * 82.98580932617188);
      v1364.bezierCurveTo(p1004 * 49.633544921875, p1004 * 168.98580932617188, p1004 * 87.633544921875, p1004 * 141.98580932617188, p1004 * 112.633544921875, p1004 * 123.98580932617188);
      v1364.bezierCurveTo(p1004 * 95.633544921875, p1004 * 75.98580932617188, p1004 * 70.633544921875, p1004 * 68.98580932617188, p1004 * 35.633544921875, p1004 * 50.985809326171875);
      v1364.bezierCurveTo(p1004 * 70.633544921875, p1004 * 53.985809326171875, p1004 * 102.633544921875, p1004 * 65.98580932617188, p1004 * 125.633544921875, p1004 * 84.98580932617188);
      v1364.bezierCurveTo(p1004 * 133.633544921875, p1004 * 69.98580932617188, p1004 * 166.633544921875, p1004 * 42.985809326171875, p1004 * 176.633544921875, p1004 * 21.985809326171875);
      v1364.bezierCurveTo(p1004 * 185.633544921875, p1004 * 49.985809326171875, p1004 * 168.633544921875, p1004 * 95.98580932617188, p1004 * 191.633544921875, p1004 * 121.98580932617188);
      v1364.closePath();
      f89(v1364, p1005[0], p1005[0], p1004 * 12);
      return v1363;
    }(v1310 * 0.8, ["#B6222A"]));
    ⵠΔ[892] = [];
    ⵠΔ[892][v594.ΔⲆᐃ] = f50(f258(v1310 * 0.8, true, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
    ⵠΔ[892][v594.ᐃᐃⵠ] = f50(f258(v1310 * 0.8, vVVV12222, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"]));
    ⵠΔ[907] = f50(function (p1006, p1007) {
      var v1365 = document.createElement("canvas");
      var v1366 = v1365.getContext("2d");
      v1365.width = p1006 * 158;
      v1365.height = p1006 * 201;
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 96.5, p1006 * 76.421875);
      v1366.bezierCurveTo(p1006 * 100.5, p1006 * 64.421875, p1006 * 103.5, p1006 * 62.421875, p1006 * 110.5, p1006 * 65.421875);
      v1366.bezierCurveTo(p1006 * 116.5, p1006 * 66.421875, p1006 * 117.5, p1006 * 67.421875, p1006 * 112.5, p1006 * 73.421875);
      v1366.bezierCurveTo(p1006 * 107, p1006 * 79.921875, p1006 * 107, p1006 * 79.921875, p1006 * 101.5, p1006 * 86.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 61.5, p1006 * 78.421875);
      v1366.bezierCurveTo(p1006 * 57.5, p1006 * 73.421875, p1006 * 51.5, p1006 * 66.421875, p1006 * 45.5, p1006 * 68.421875);
      v1366.bezierCurveTo(p1006 * 32.5, p1006 * 73.421875, p1006 * 38.5, p1006 * 75.421875, p1006 * 46.5, p1006 * 81.421875);
      v1366.bezierCurveTo(p1006 * 51.5, p1006 * 84.921875, p1006 * 51.5, p1006 * 84.921875, p1006 * 56.5, p1006 * 88.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 116.5, p1006 * 127.421875);
      v1366.bezierCurveTo(p1006 * 124.5, p1006 * 108.421875, p1006 * 129.5, p1006 * 104.421875, p1006 * 141.5, p1006 * 107.421875);
      v1366.bezierCurveTo(p1006 * 156.5, p1006 * 112.421875, p1006 * 153.5, p1006 * 113.421875, p1006 * 132.5, p1006 * 134.421875);
      v1366.bezierCurveTo(p1006 * 123.5, p1006 * 141.921875, p1006 * 123.5, p1006 * 141.921875, p1006 * 114.5, p1006 * 149.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 41.5, p1006 * 134.421875);
      v1366.bezierCurveTo(p1006 * 30.5, p1006 * 119.421875, p1006 * 25.5, p1006 * 111.421875, p1006 * 12.5, p1006 * 115.421875);
      v1366.bezierCurveTo(p1006 * 4.5, p1006 * 120.421875, p1006 * 4.5, p1006 * 121.421875, p1006 * 26.5, p1006 * 142.421875);
      v1366.bezierCurveTo(p1006 * 35, p1006 * 149.921875, p1006 * 35, p1006 * 149.921875, p1006 * 43.5, p1006 * 157.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 78.5, p1006 * 51.921875);
      v1366.bezierCurveTo(p1006 * 99.5, p1006 * 75.921875, p1006 * 110.5, p1006 * 96.921875, p1006 * 118.5, p1006 * 120.921875);
      v1366.bezierCurveTo(p1006 * 121.5, p1006 * 140.921875, p1006 * 107.5, p1006 * 179.921875, p1006 * 75.5, p1006 * 183.921875);
      v1366.bezierCurveTo(p1006 * 30.5, p1006 * 169.921875, p1006 * 37.5, p1006 * 131.921875, p1006 * 34.5, p1006 * 120.921875);
      v1366.bezierCurveTo(p1006 * 41.5, p1006 * 89.921875, p1006 * 61.5, p1006 * 67.921875, p1006 * 78.5, p1006 * 51.921875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 72.5, p1006 * 72.421875);
      v1366.bezierCurveTo(p1006 * 76.5, p1006 * 79.421875, p1006 * 79.5, p1006 * 80.421875, p1006 * 83.5, p1006 * 73.421875);
      v1366.bezierCurveTo(p1006 * 80.5, p1006 * 96.921875, p1006 * 79.5, p1006 * 114.421875, p1006 * 77.5, p1006 * 120.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 42.5, p1006 * 163.421875);
      v1366.bezierCurveTo(p1006 * 62.5, p1006 * 185.421875, p1006 * 86.5, p1006 * 186.421875, p1006 * 111.5, p1006 * 165.421875);
      v1366.bezierCurveTo(p1006 * 107.5, p1006 * 176.421875, p1006 * 95.5, p1006 * 187.421875, p1006 * 75.5, p1006 * 188.421875);
      v1366.bezierCurveTo(p1006 * 53.5, p1006 * 188.421875, p1006 * 43.5, p1006 * 171.421875, p1006 * 42.5, p1006 * 164.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 79.5, p1006 * 61.421875);
      v1366.bezierCurveTo(p1006 * 88.5, p1006 * 31.421875, p1006 * 81.5, p1006 * 16.421875, p1006 * 75.5, p1006 * 7.421875);
      v1366.bezierCurveTo(p1006 * 77.5, p1006 * 28.421875, p1006 * 77.5, p1006 * 37.421875, p1006 * 68.5, p1006 * 42.421875);
      v1366.bezierCurveTo(p1006 * 79.5, p1006 * 57.421875, p1006 * 79.5, p1006 * 58.421875, p1006 * 80.5, p1006 * 61.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      v1366.beginPath();
      v1366.lineCap = "round";
      v1366.lineJoin = "round";
      v1366.moveTo(p1006 * 72.5, p1006 * 72.421875);
      v1366.bezierCurveTo(p1006 * 76.5, p1006 * 79.421875, p1006 * 79.5, p1006 * 80.421875, p1006 * 83.5, p1006 * 73.421875);
      v1366.bezierCurveTo(p1006 * 80.5, p1006 * 96.921875, p1006 * 79.5, p1006 * 114.421875, p1006 * 77.5, p1006 * 120.421875);
      v1366.closePath();
      f89(v1366, p1007[0], p1007[0], p1006 * 10);
      return v1365;
    }(v1310 * 0.8, ["#B6222A"]));
    ⵠΔ[1178] = [];
    ⵠΔ[1178][v594.ΔⲆᐃ] = f50(f105(v1310 * 0.4, 0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
    ⵠΔ[1178][v594.ᐃᐃⵠ] = f50(f105(v1310 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⵠΔ[1179] = [];
    ⵠΔ[1179][v594.ΔⲆᐃ] = f50(f105(v1310 * 0.4, 0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
    ⵠΔ[1179][v594.ᐃᐃⵠ] = f50(f105(v1310 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
    ⵠΔ[v594.ⲆᐃΔᐃΔΔⵠ] = [];
    ⵠΔ[v594.ⲆᐃΔᐃΔΔⵠ][v594.ΔⲆᐃ] = f50(f105(v1310 * 0.4, 0, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0));
    ⵠΔ[v594.ⲆᐃΔᐃΔΔⵠ][v594.ᐃᐃⵠ] = f50(f105(v1310 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⵠΔ[1180] = f50(f107(v1310 * 0.4, ["#B6222A"]));
    ⵠΔ[1181] = f50(f107(v1310 * 0.4, ["#B6222A"]));
    ⵠΔ[v594.ΔⲆⲆⵠΔⲆⵠᐃⵠ] = f50(f107(v1310 * 0.4, ["#B6222A"]));
    ⵠΔ[340] = f50(f202(v1310 * 0.35, true, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]));
    ⵠΔ[339] = f50(f157(v1310 * 0.35, vVV1222, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]));
    ⵠΔ[1162] = [];
    ⵠΔ[1162][v594.ΔⲆᐃ] = f50(f142(v1310 * 0.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
    ⵠΔ[1162][v594.ᐃᐃⵠ] = f50(f142(v1310 * 0.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
    ⵠΔ[1163] = [];
    ⵠΔ[1163][v594.ΔⲆᐃ] = f50(f142(v1310 * 0.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
    ⵠΔ[1163][v594.ᐃᐃⵠ] = f50(f142(v1310 * 0.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
    ⵠΔ[1170] = [];
    ⵠΔ[1170][v594.ΔⲆᐃ] = f50(f147(v1310 * 0.35, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⵠΔ[1170][v594.ᐃᐃⵠ] = f50(f147(v1310 * 0.35, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⵠΔ[1171] = [];
    ⵠΔ[1171][v594.ΔⲆᐃ] = f50(f159(v1310 * 0.42, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⵠΔ[1171][v594.ᐃᐃⵠ] = f50(f159(v1310 * 0.42, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⵠΔ[1172] = [];
    ⵠΔ[1172][v594.ΔⲆᐃ] = f50(f147(v1310 * 0.35, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⵠΔ[1172][v594.ᐃᐃⵠ] = f50(f147(v1310 * 0.35, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⵠΔ[1173] = [];
    ⵠΔ[1173][v594.ΔⲆᐃ] = f50(f159(v1310 * 0.42, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⵠΔ[1173][v594.ᐃᐃⵠ] = f50(f159(v1310 * 0.42, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⵠΔ[1164] = f50(f151(v1310 * 0.35, ["#B6222A"]));
    ⵠΔ[1165] = f50(f147(v1310 * 0.35, 0, [undefined, "#B6222A"]));
    ⵠΔ[1166] = f50(f159(v1310 * 0.35, 0, [vVVUndefined142, "#B6222A"]));
    ⵠΔ[1167] = f50(f151(v1310 * 0.35, ["#22E066"]));
    ⵠΔ[1168] = f50(f147(v1310 * 0.35, 0, [vVUndefined, "#22E066"]));
    ⵠΔ[1169] = f50(f159(v1310 * 0.35, 0, [vVVVVUndefined173, "#22E066"]));
    ⵠΔ[84] = [];
    ⵠΔ[84][v594.ΔⲆᐃ] = f50(f162(v1310 * 0.3, vVV1222, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]));
    ⵠΔ[84][v594.ᐃᐃⵠ] = f50(f162(v1310 * 0.3, vV12, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
    ⵠΔ[83] = [];
    ⵠΔ[83][v594.ΔⲆᐃ] = f50(f170(v1310 * 0.45, true, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"]));
    ⵠΔ[83][v594.ᐃᐃⵠ] = f50(f170(v1310 * 0.45, vVV12, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"]));
    ⵠΔ[234] = [];
    ⵠΔ[234][v594.ΔⲆᐃ] = f50(f240(v1310 * 0.63, vVVVV12222, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
    ⵠΔ[234][v594.ᐃᐃⵠ] = f50(f240(v1310 * 0.63, vVV1222, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⵠΔ[216] = [];
    ⵠΔ[216][v594.ΔⲆᐃ] = f50(f239(v1310, vVVV122, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
    ⵠΔ[216][v594.ᐃᐃⵠ] = f50(f239(v1310, true, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⵠΔ[331] = [];
    ⵠΔ[331][v594.ΔⲆᐃ] = ᐃΔ.ⵠΔΔⵠΔⲆⲆⵠⵠ;
    ⵠΔ[331][v594.ᐃᐃⵠ] = ᐃΔ.ΔⵠⵠΔⵠᐃⲆΔΔ;
    ⵠΔ[292] = [];
    ⵠΔ[292][v594.ΔⲆᐃ] = f50(f101(v1310 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[292][v594.ᐃᐃⵠ] = f50(f101(v1310 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[1102] = [ⵠΔ[292]];
    ⵠΔ[1102][1] = [];
    ⵠΔ[1102][2] = [];
    ⵠΔ[1102][1][v594.ΔⲆᐃ] = f50(f102(v1310 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[1102][1][v594.ᐃᐃⵠ] = f50(f102(v1310 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[1102][2][v594.ΔⲆᐃ] = f50(f100(v1310 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[1102][2][v594.ᐃᐃⵠ] = f50(f100(v1310 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[85] = [];
    ⵠΔ[85][v594.ΔⲆᐃ] = f50(f95(3 - Math.PI / 2, f235(v1310 * 0.6, vVVV1222, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
    ⵠΔ[85][v594.ᐃᐃⵠ] = f50(f95(3 - Math.PI / 2, f235(v1310 * 0.6, vV123, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
    ⵠΔ[977] = [];
    ⵠΔ[977][v594.ΔⲆᐃ] = f50(f110(v1310 * 0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
    ⵠΔ[977][v594.ᐃᐃⵠ] = f50(f110(v1310 * 0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
    ⵠΔ[1047] = f50(function (p1008, p1009) {
      var v1367 = document.createElement("canvas");
      var v1368 = v1367.getContext("2d");
      v1367.width = p1008 * 650;
      v1367.height = p1008 * 650;
      v1368.scale(1.9, 1.9);
      v1368.save();
      v1368.translate(p1008 * 202.5, p1008 * 147.5);
      f90(v1368, p1008 * -96.5, p1008 * -21.5, p1008 * 193, p1008 * 193, p1008 * 0);
      v1368.restore();
      f89(v1368, p1009[4], p1009[1], p1008 * 12);
      v1368.save();
      v1368.translate(p1008 * 203.5, p1008 * 121.5);
      f90(v1368, p1008 * -115.5, p1008 * -20.5, p1008 * 231, p1008 * 41, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[1], p1008 * 12);
      v1368.save();
      v1368.translate(p1008 * 203.5, p1008 * 299);
      f90(v1368, p1008 * -115.5, p1008 * -20, p1008 * 231, p1008 * 40, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[1], p1008 * 12);
      v1368.save();
      v1368.translate(p1008 * 298.5, p1008 * 210);
      f90(v1368, p1008 * -20.5, p1008 * -109, p1008 * 41, p1008 * 218, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[1], p1008 * 12);
      v1368.save();
      v1368.translate(p1008 * 108.5, p1008 * 210);
      f90(v1368, p1008 * -20.5, p1008 * -109, p1008 * 41, p1008 * 218, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[1], p1008 * 12);
      v1368.save();
      v1368.translate(p1008 * 204, p1008 * 121.5);
      f90(v1368, p1008 * -92, p1008 * -9.5, p1008 * 184, p1008 * 19, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[3], p1008 * 10);
      v1368.save();
      v1368.translate(p1008 * 197, p1008 * 299);
      f90(v1368, p1008 * 85, p1008 * -9, p1008 * -170, p1008 * 18, p1008 * 10);
      v1368.restore();
      f89(v1368, p1009[3], p1009[3], p1008 * 10);
      v1368.beginPath();
      v1368.lineCap = "round";
      v1368.lineJoin = "round";
      v1368.moveTo(p1008 * 94, p1008 * 317);
      v1368.bezierCurveTo(p1008 * 110.5, p1008 * 299.5, p1008 * 110.5, p1008 * 299.5, p1008 * 127, p1008 * 282);
      v1368.closePath();
      f89(v1368, undefined, p1009[1], p1008 * 12);
      v1368.beginPath();
      v1368.lineCap = "round";
      v1368.lineJoin = "round";
      v1368.moveTo(p1008 * 279, p1008 * 142);
      v1368.bezierCurveTo(p1008 * 296.5, p1008 * 125.5, p1008 * 296.5, p1008 * 125.5, p1008 * 314, p1008 * 109);
      v1368.closePath();
      f89(v1368, undefined, p1009[1], p1008 * 12);
      v1368.beginPath();
      v1368.lineCap = "round";
      v1368.lineJoin = "round";
      v1368.moveTo(p1008 * 93, p1008 * 106);
      v1368.bezierCurveTo(p1008 * 110.5, p1008 * 124, p1008 * 110.5, p1008 * 124, p1008 * 128, p1008 * 142);
      v1368.closePath();
      f89(v1368, undefined, p1009[1], p1008 * 12);
      v1368.beginPath();
      v1368.lineCap = "round";
      v1368.lineJoin = "round";
      v1368.moveTo(p1008 * 281, p1008 * 282);
      v1368.bezierCurveTo(p1008 * 296, p1008 * 297.5, p1008 * 296, p1008 * 297.5, p1008 * 311, p1008 * 313);
      v1368.closePath();
      f89(v1368, undefined, p1009[1], p1008 * 12);
      return v1367;
    }(v1310 * 0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
    ⵠΔ[978] = f50(function (p1010, p1011) {
      var v1369 = document.createElement("canvas");
      var v1370 = v1369.getContext("2d");
      v1369.width = p1010 * 400;
      v1369.height = p1010 * 400;
      v1370.save();
      v1370.translate(p1010 * 202.5, p1010 * 147.5);
      f90(v1370, p1010 * -96.5, p1010 * -21.5, p1010 * 193, p1010 * 43, p1010 * 0);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 202.5, p1010 * 190.5);
      f90(v1370, p1010 * 96.5, p1010 * -21.5, p1010 * -193, p1010 * 43, p1010 * 0);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 202.5, p1010 * 233.5);
      f90(v1370, p1010 * -96.5, p1010 * -20.5, p1010 * 193, p1010 * 41, p1010 * 0);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 202.5, p1010 * 275);
      f90(v1370, p1010 * 96.5, p1010 * -21, p1010 * -193, p1010 * 42, p1010 * 0);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 203.5, p1010 * 121.5);
      f90(v1370, p1010 * -115.5, p1010 * -20.5, p1010 * 231, p1010 * 41, p1010 * 10);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 203.5, p1010 * 299);
      f90(v1370, p1010 * -115.5, p1010 * -20, p1010 * 231, p1010 * 40, p1010 * 10);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 298.5, p1010 * 210);
      f90(v1370, p1010 * -20.5, p1010 * -109, p1010 * 41, p1010 * 218, p1010 * 10);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      v1370.save();
      v1370.translate(p1010 * 108.5, p1010 * 210);
      f90(v1370, p1010 * -20.5, p1010 * -109, p1010 * 41, p1010 * 218, p1010 * 10);
      v1370.restore();
      f89(v1370, p1011[0], p1011[0], p1010 * 12);
      return v1369;
    }(v1310 * 0.3, ["#BB0000"]));
    ⵠΔ[877] = f123(1, [{
      f: f280,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[243] = f123(1.5, [{
      f: f296,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#120202", "#750a0a", "#991616", "#120202"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⵠΔ[888] = f247(v1310 * 0.35, ["#072428", "#67A242", "#67A242"], 0);
    ⵠΔ[889] = f247(v1310 * 0.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1);
    ⵠΔ[890] = f247(v1310 * 0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
    ⵠΔ[891] = f247(v1310 * 0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
    if (ᐃⵠΔⲆⲆΔⲆ) {
      ⵠΔ[388] = f50(function (p1012) {
        var v1371 = document.createElement("canvas");
        var v1372 = v1371.getContext("2d");
        var v1373 = p1012 * 200;
        var v1374 = p1012 * 180;
        var v1375 = p1012 * 8;
        v1371.width = v1373;
        v1371.height = v1374;
        v1372.beginPath();
        f90(v1372, 0, 0, v1373, v1374 - v1375, v1375);
        v1372.globalAlpha = 0.8;
        f89(v1372, "#1D6055");
        v1372.globalAlpha = 1;
        var vF156 = f156(p1012, "Leaderboard", 25, "#FFF");
        v1372.drawImage(vF156, (v1373 - vF156.width) / 2, p1012 * 5);
        return v1371;
      }(v1310));
    } else {
      ⵠΔ[388] = f50(function (p1013) {
        var v1376 = document.createElement("canvas");
        var v1377 = v1376.getContext("2d");
        var v1378 = p1013 * 200;
        var v1379 = p1013 * 270;
        var v1380 = p1013 * 8;
        v1376.width = v1378;
        v1376.height = v1379 + 20;
        v1377.beginPath();
        f90(v1377, 0, 0, v1378, v1379 - v1380, v1380);
        v1377.globalAlpha = 0.5;
        f89(v1377, "#1D6055");
        v1377.globalAlpha = 1;
        var vF1562 = f156(p1013, "Leaderboard", 25, "#FFF");
        v1377.drawImage(vF1562, (v1378 - vF1562.width) / 2, p1013 * 5);
        return v1376;
      }(v1310));
    }
    if (ᐃⵠΔⲆⲆΔⲆ) {
      ⵠΔ[377] = f50(function (p1014) {
        var v1381 = document.createElement("canvas");
        var v1382 = v1381.getContext("2d");
        var v1383 = p1014 * 335;
        var v1384 = p1014 * 250;
        var v1385 = p1014 * 120;
        var v1386 = p1014 * 20;
        var v1387 = p1014 * 35;
        var v1388 = p1014 * 65;
        var v1389 = p1014 * 2;
        var v1390 = p1014 * 4;
        v1381.width = v1383;
        v1381.height = v1385;
        v1382.beginPath();
        v1382.translate(0, p1014 * 15);
        f90(v1382, v1388, 0, v1384, v1386, v1389);
        f89(v1382, null, "#69A148", v1390);
        v1382.translate(0, v1387);
        f90(v1382, v1388, 0, v1384, v1386, v1389);
        f89(v1382, null, "#AF352A", v1390);
        v1382.translate(0, v1387);
        f90(v1382, v1388, 0, v1384, v1386, v1389);
        f89(v1382, null, "#669BB1", v1390);
        return v1381;
      }(0.75));
    } else {
      ⵠΔ[377] = f50(function (p1015) {
        var v1391 = document.createElement("canvas");
        var v1392 = v1391.getContext("2d");
        var v1393 = p1015 * 950;
        var v1394 = p1015 * 180;
        var v1395 = p1015 * 50;
        var v1396 = p1015 * 20;
        var v1397 = p1015 * 240;
        var v1398 = p1015 * 35;
        var v1399 = p1015 * 1;
        var v1400 = p1015 * 4;
        var v1401 = p1015 * 4;
        v1391.width = v1393;
        v1391.height = v1395;
        v1392.translate(0, p1015 * 15);
        f90(v1392, v1398, v1399, v1394, v1396, v1400);
        f89(v1392, null, "#69A148", v1401);
        var v1402 = ⵠΔ[888];
        v1392.drawImage(v1402, 17, -8);
        v1392.translate(v1397, 0);
        f90(v1392, v1398, v1399, v1394, v1396, v1400);
        f89(v1392, null, "#AF352A", v1401);
        v1402 = ⵠΔ[890];
        v1392.drawImage(v1402, 17, -9);
        v1392.translate(v1397, 0);
        f90(v1392, v1398, v1399, v1394, v1396, v1400);
        f89(v1392, null, "#669BB1", v1401);
        v1402 = ⵠΔ[889];
        v1392.drawImage(v1402, 17, -8);
        v1392.translate(v1397, 0);
        f90(v1392, v1398, v1399, v1394, v1396, v1400);
        f89(v1392, null, "#074A87", v1401);
        v1402 = ⵠΔ[891];
        v1392.drawImage(v1402, 17, -8);
        return v1391;
      }(v1310));
    }
    if (ᐃⵠΔⲆⲆΔⲆ) {
      ⵠΔ[827] = f50(f228(0.75));
    } else {
      ⵠΔ[827] = f50(f228(v1310));
    }
    ⵠΔ[1041] = f50(f229(v1310 * 0.16, vVVV1223, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
    ⵠΔ[675] = f50(f95(5.8, f146(v1310 * 0.15, true, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
    ⵠΔ[393] = [];
    ⵠΔ[603] = [];
    for (v1313 = 0; v1313 < 40; v1313++) {
      ⵠΔ[603][v1313] = f156(v1310, "" + (v1313 + 1), 12, "#FFF");
    }
    ⵠΔ[957] = [];
    ⵠΔ[957].push(f50(f267(v1310 * 0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
    ⵠΔ[957].push(f50(f267(v1310 * 0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
    ⵠΔ[957].push(f50(f267(v1310 * 0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
    ⵠΔ[974] = [];
    ⵠΔ[974].push(f50(function (p1016) {
      var v1403 = document.createElement("canvas");
      var v1404 = v1403.getContext("2d");
      v1403.width = p1016 * 321;
      v1403.height = p1016 * 345;
      v1404.translate(0, p1016 * 5);
      v1404.translate(0, p1016 * 20);
      f94(v1404, p1016 * 160.5, p1016 * 159.5, p1016 * 156.39595138242822);
      f89(v1404, "#322413", "#322413", p1016 * 4);
      v1404.translate(0, p1016 * -20);
      f94(v1404, p1016 * 160.5, p1016 * 159.5, p1016 * 156.39595138242822);
      f89(v1404, "#392C16", "#5E3E1A", p1016 * 10);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 31.999969482421875, p1016 * 163.07290649414062);
      v1404.bezierCurveTo(p1016 * 22.999969482421875, p1016 * 67.07290649414062, p1016 * 106, p1016 * 20.072906494140625, p1016 * 162, p1016 * 23.072906494140625);
      v1404.bezierCurveTo(p1016 * 269.9999694824219, p1016 * 31.072906494140625, p1016 * 292.9999694824219, p1016 * 120.07290649414062, p1016 * 294.9999694824219, p1016 * 161.07290649414062);
      v1404.bezierCurveTo(p1016 * 165.49996948242188, p1016 * 162.07290649414062, p1016 * 165.49996948242188, p1016 * 162.07290649414062, p1016 * 35.999969482421875, p1016 * 163.07290649414062);
      v1404.closePath();
      f89(v1404, "#12432D");
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 32.999969482421875, p1016 * 165.07290649414062);
      v1404.bezierCurveTo(p1016 * 16.999969482421875, p1016 * 221.07290649414062, p1016 * 85, p1016 * 289.0729064941406, p1016 * 156, p1016 * 294.0729064941406);
      v1404.bezierCurveTo(p1016 * 263.9999694824219, p1016 * 293.0729064941406, p1016 * 295.9999694824219, p1016 * 199.07290649414062, p1016 * 294.9999694824219, p1016 * 159.07290649414062);
      v1404.closePath();
      f89(v1404, "#3A2A0D");
      f94(v1404, p1016 * 161, p1016 * 158.07290649414062, p1016 * 133.4053971921676);
      f89(v1404, vVVUndefined163, "#5E3E1A", p1016 * 10);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 31.999969482421875, p1016 * 161.62844848632812);
      v1404.bezierCurveTo(p1016 * 162.49996948242188, p1016 * 161.62844848632812, p1016 * 162.49996948242188, p1016 * 161.62844848632812, p1016 * 292.9999694824219, p1016 * 161.62844848632812);
      v1404.closePath();
      f89(v1404, vVUndefined16, "#5E3E1A", p1016 * 12);
      v1404.translate(0, p1016 * 8);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 66, p1016 * 158.29513549804688);
      v1404.bezierCurveTo(p1016 * 86, p1016 * 158.29513549804688, p1016 * 86, p1016 * 158.29513549804688, p1016 * 106, p1016 * 158.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 57.999969482421875, p1016 * 117.29513549804688);
      v1404.bezierCurveTo(p1016 * 85, p1016 * 128.29513549804688, p1016 * 85, p1016 * 128.29513549804688, p1016 * 113, p1016 * 139.29513549804688);
      v1404.closePath();
      f89(v1404, vVVVUndefined172, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 95, p1016 * 90.29513549804688);
      v1404.bezierCurveTo(p1016 * 112, p1016 * 105.79513549804688, p1016 * 112, p1016 * 105.79513549804688, p1016 * 129, p1016 * 121.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 116, p1016 * 52.850677490234375);
      v1404.bezierCurveTo(p1016 * 130, p1016 * 83.85067749023438, p1016 * 130, p1016 * 83.85067749023438, p1016 * 144, p1016 * 114.85067749023438);
      v1404.closePath();
      f89(v1404, vVVVUndefined142, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 159, p1016 * 61.295135498046875);
      v1404.bezierCurveTo(p1016 * 160.49996948242188, p1016 * 92.29513549804688, p1016 * 160.49996948242188, p1016 * 92.29513549804688, p1016 * 160, p1016 * 123.29513549804688);
      v1404.closePath();
      f89(v1404, vVVVVUndefined173, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 203, p1016 * 51.295135498046875);
      v1404.bezierCurveTo(p1016 * 190.49996948242188, p1016 * 83.29513549804688, p1016 * 190.49996948242188, p1016 * 83.29513549804688, p1016 * 176, p1016 * 115.29513549804688);
      v1404.closePath();
      f89(v1404, vVVUndefined17, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 225, p1016 * 89.29513549804688);
      v1404.bezierCurveTo(p1016 * 210.49996948242188, p1016 * 104.79513549804688, p1016 * 210.49996948242188, p1016 * 104.79513549804688, p1016 * 194, p1016 * 120.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 266.9999694824219, p1016 * 112.29513549804688);
      v1404.bezierCurveTo(p1016 * 233.49996948242188, p1016 * 127.29513549804688, p1016 * 233.49996948242188, p1016 * 127.29513549804688, p1016 * 199, p1016 * 142.29513549804688);
      v1404.closePath();
      f89(v1404, vVVUndefined18, "#c7a726", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 256.9999694824219, p1016 * 155.29513549804688);
      v1404.bezierCurveTo(p1016 * 238.49996948242188, p1016 * 156.29513549804688, p1016 * 238.49996948242188, p1016 * 156.29513549804688, p1016 * 219, p1016 * 157.29513549804688);
      v1404.closePath();
      f89(v1404, vVVVVUndefined1722, "#c7a726", p1016 * 12);
      v1404.translate(0, p1016 * -8);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 66, p1016 * 158.29513549804688);
      v1404.bezierCurveTo(p1016 * 86, p1016 * 158.29513549804688, p1016 * 86, p1016 * 158.29513549804688, p1016 * 106, p1016 * 158.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 57.999969482421875, p1016 * 117.29513549804688);
      v1404.bezierCurveTo(p1016 * 85, p1016 * 128.29513549804688, p1016 * 85, p1016 * 128.29513549804688, p1016 * 113, p1016 * 139.29513549804688);
      v1404.closePath();
      f89(v1404, vVVVUndefined172, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 95, p1016 * 90.29513549804688);
      v1404.bezierCurveTo(p1016 * 112, p1016 * 105.79513549804688, p1016 * 112, p1016 * 105.79513549804688, p1016 * 129, p1016 * 121.29513549804688);
      v1404.closePath();
      f89(v1404, vVUndefined, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 116, p1016 * 52.850677490234375);
      v1404.bezierCurveTo(p1016 * 130, p1016 * 83.85067749023438, p1016 * 130, p1016 * 83.85067749023438, p1016 * 144, p1016 * 114.85067749023438);
      v1404.closePath();
      f89(v1404, vVVVVUndefined173, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 159, p1016 * 61.295135498046875);
      v1404.bezierCurveTo(p1016 * 160.49996948242188, p1016 * 92.29513549804688, p1016 * 160.49996948242188, p1016 * 92.29513549804688, p1016 * 160, p1016 * 123.29513549804688);
      v1404.closePath();
      f89(v1404, vVVVUndefined142, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 203, p1016 * 51.295135498046875);
      v1404.bezierCurveTo(p1016 * 190.49996948242188, p1016 * 83.29513549804688, p1016 * 190.49996948242188, p1016 * 83.29513549804688, p1016 * 176, p1016 * 115.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 225, p1016 * 89.29513549804688);
      v1404.bezierCurveTo(p1016 * 210.49996948242188, p1016 * 104.79513549804688, p1016 * 210.49996948242188, p1016 * 104.79513549804688, p1016 * 194, p1016 * 120.29513549804688);
      v1404.closePath();
      f89(v1404, undefined, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 266.9999694824219, p1016 * 112.29513549804688);
      v1404.bezierCurveTo(p1016 * 233.49996948242188, p1016 * 127.29513549804688, p1016 * 233.49996948242188, p1016 * 127.29513549804688, p1016 * 199, p1016 * 142.29513549804688);
      v1404.closePath();
      f89(v1404, vVUndefined15, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 256.9999694824219, p1016 * 155.29513549804688);
      v1404.bezierCurveTo(p1016 * 238.49996948242188, p1016 * 156.29513549804688, p1016 * 238.49996948242188, p1016 * 156.29513549804688, p1016 * 219, p1016 * 157.29513549804688);
      v1404.closePath();
      f89(v1404, vVUndefined, "#EDCE4F", p1016 * 12);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 94.00003051757812, p1016 * 164.40341186523438);
      v1404.bezierCurveTo(p1016 * 162.50003051757812, p1016 * 164.40341186523438, p1016 * 230.00003051757812, p1016 * 165.40341186523438, p1016 * 231.00003051757812, p1016 * 164.40341186523438);
      v1404.bezierCurveTo(p1016 * 214.00003051757812, p1016 * 267.4034118652344, p1016 * 92.00003051757812, p1016 * 243.40341186523438, p1016 * 93.00003051757812, p1016 * 165.40341186523438);
      v1404.closePath();
      f89(v1404, "#704618", "#5D3D1A", p1016 * 8);
      v1404.beginPath();
      v1404.lineCap = "round";
      v1404.lineJoin = "round";
      v1404.moveTo(p1016 * 96, p1016 * 166);
      v1404.bezierCurveTo(p1016 * 88, p1016 * 117, p1016 * 129, p1016 * 92, p1016 * 161, p1016 * 91);
      v1404.bezierCurveTo(p1016 * 201, p1016 * 90, p1016 * 223, p1016 * 121, p1016 * 230, p1016 * 161);
      v1404.closePath();
      f89(v1404, "#ECBE35", "#EDCE4F", p1016 * 8);
      f94(v1404, p1016 * 160.00003051757812, p1016 * 166.49432373046875, p1016 * 28.30194339616981);
      f89(v1404, "#392C16", "#5E3E1A", p1016 * 10);
      return v1403;
    }(v1310 * 0.22)));
    ⵠΔ[974].push(f50(function (p1017) {
      var v1405 = document.createElement("canvas");
      var v1406 = v1405.getContext("2d");
      v1405.width = p1017 * 321;
      v1405.height = p1017 * 345;
      v1406.translate(0, p1017 * 5);
      v1406.translate(0, p1017 * 20);
      f94(v1406, p1017 * 160.5, p1017 * 159.5, p1017 * 156.39595138242822);
      f89(v1406, "#322413", "#322413", p1017 * 4);
      v1406.translate(0, p1017 * -20);
      f94(v1406, p1017 * 160.5, p1017 * 159.5, p1017 * 156.39595138242822);
      f89(v1406, "#392C16", "#5E3E1A", p1017 * 10);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 31.999969482421875, p1017 * 163.07290649414062);
      v1406.bezierCurveTo(p1017 * 22.999969482421875, p1017 * 67.07290649414062, p1017 * 106, p1017 * 20.072906494140625, p1017 * 162, p1017 * 23.072906494140625);
      v1406.bezierCurveTo(p1017 * 269.9999694824219, p1017 * 31.072906494140625, p1017 * 292.9999694824219, p1017 * 120.07290649414062, p1017 * 294.9999694824219, p1017 * 161.07290649414062);
      v1406.bezierCurveTo(p1017 * 165.49996948242188, p1017 * 162.07290649414062, p1017 * 165.49996948242188, p1017 * 162.07290649414062, p1017 * 35.999969482421875, p1017 * 163.07290649414062);
      v1406.closePath();
      f89(v1406, "#3A2A0D");
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 32.999969482421875, p1017 * 165.07290649414062);
      v1406.bezierCurveTo(p1017 * 16.999969482421875, p1017 * 221.07290649414062, p1017 * 85, p1017 * 289.0729064941406, p1017 * 156, p1017 * 294.0729064941406);
      v1406.bezierCurveTo(p1017 * 263.9999694824219, p1017 * 293.0729064941406, p1017 * 295.9999694824219, p1017 * 199.07290649414062, p1017 * 294.9999694824219, p1017 * 159.07290649414062);
      v1406.closePath();
      f89(v1406, "#071A1B");
      f94(v1406, p1017 * 161, p1017 * 158.07290649414062, p1017 * 133.4053971921676);
      f89(v1406, undefined, "#5E3E1A", p1017 * 10);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 31.999969482421875, p1017 * 161.62844848632812);
      v1406.bezierCurveTo(p1017 * 162.49996948242188, p1017 * 161.62844848632812, p1017 * 162.49996948242188, p1017 * 161.62844848632812, p1017 * 292.9999694824219, p1017 * 161.62844848632812);
      v1406.closePath();
      f89(v1406, undefined, "#5E3E1A", p1017 * 12);
      v1406.translate(0, p1017 * 8);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 66, p1017 * 158.29513549804688);
      v1406.bezierCurveTo(p1017 * 86, p1017 * 158.29513549804688, p1017 * 86, p1017 * 158.29513549804688, p1017 * 106, p1017 * 158.29513549804688);
      v1406.closePath();
      f89(v1406, vVVUndefined163, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 57.999969482421875, p1017 * 117.29513549804688);
      v1406.bezierCurveTo(p1017 * 85, p1017 * 128.29513549804688, p1017 * 85, p1017 * 128.29513549804688, p1017 * 113, p1017 * 139.29513549804688);
      v1406.closePath();
      f89(v1406, vVVVVUndefined173, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 95, p1017 * 90.29513549804688);
      v1406.bezierCurveTo(p1017 * 112, p1017 * 105.79513549804688, p1017 * 112, p1017 * 105.79513549804688, p1017 * 129, p1017 * 121.29513549804688);
      v1406.closePath();
      f89(v1406, vVVVVUndefined172, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 116, p1017 * 52.850677490234375);
      v1406.bezierCurveTo(p1017 * 130, p1017 * 83.85067749023438, p1017 * 130, p1017 * 83.85067749023438, p1017 * 144, p1017 * 114.85067749023438);
      v1406.closePath();
      f89(v1406, vVVVVVUndefined173, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 159, p1017 * 61.295135498046875);
      v1406.bezierCurveTo(p1017 * 160.49996948242188, p1017 * 92.29513549804688, p1017 * 160.49996948242188, p1017 * 92.29513549804688, p1017 * 160, p1017 * 123.29513549804688);
      v1406.closePath();
      f89(v1406, vVVUndefined18, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 203, p1017 * 51.295135498046875);
      v1406.bezierCurveTo(p1017 * 190.49996948242188, p1017 * 83.29513549804688, p1017 * 190.49996948242188, p1017 * 83.29513549804688, p1017 * 176, p1017 * 115.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 225, p1017 * 89.29513549804688);
      v1406.bezierCurveTo(p1017 * 210.49996948242188, p1017 * 104.79513549804688, p1017 * 210.49996948242188, p1017 * 104.79513549804688, p1017 * 194, p1017 * 120.29513549804688);
      v1406.closePath();
      f89(v1406, vVUndefined14, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 266.9999694824219, p1017 * 112.29513549804688);
      v1406.bezierCurveTo(p1017 * 233.49996948242188, p1017 * 127.29513549804688, p1017 * 233.49996948242188, p1017 * 127.29513549804688, p1017 * 199, p1017 * 142.29513549804688);
      v1406.closePath();
      f89(v1406, vVVVVUndefined1722, "#281C08", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 256.9999694824219, p1017 * 155.29513549804688);
      v1406.bezierCurveTo(p1017 * 238.49996948242188, p1017 * 156.29513549804688, p1017 * 238.49996948242188, p1017 * 156.29513549804688, p1017 * 219, p1017 * 157.29513549804688);
      v1406.closePath();
      f89(v1406, vVVVVUndefined173, "#281C08", p1017 * 12);
      v1406.translate(0, p1017 * -8);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 66, p1017 * 158.29513549804688);
      v1406.bezierCurveTo(p1017 * 86, p1017 * 158.29513549804688, p1017 * 86, p1017 * 158.29513549804688, p1017 * 106, p1017 * 158.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 57.999969482421875, p1017 * 117.29513549804688);
      v1406.bezierCurveTo(p1017 * 85, p1017 * 128.29513549804688, p1017 * 85, p1017 * 128.29513549804688, p1017 * 113, p1017 * 139.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 95, p1017 * 90.29513549804688);
      v1406.bezierCurveTo(p1017 * 112, p1017 * 105.79513549804688, p1017 * 112, p1017 * 105.79513549804688, p1017 * 129, p1017 * 121.29513549804688);
      v1406.closePath();
      f89(v1406, vVUndefined6, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 116, p1017 * 52.850677490234375);
      v1406.bezierCurveTo(p1017 * 130, p1017 * 83.85067749023438, p1017 * 130, p1017 * 83.85067749023438, p1017 * 144, p1017 * 114.85067749023438);
      v1406.closePath();
      f89(v1406, vVVVUndefined1422, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 159, p1017 * 61.295135498046875);
      v1406.bezierCurveTo(p1017 * 160.49996948242188, p1017 * 92.29513549804688, p1017 * 160.49996948242188, p1017 * 92.29513549804688, p1017 * 160, p1017 * 123.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 203, p1017 * 51.295135498046875);
      v1406.bezierCurveTo(p1017 * 190.49996948242188, p1017 * 83.29513549804688, p1017 * 190.49996948242188, p1017 * 83.29513549804688, p1017 * 176, p1017 * 115.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 225, p1017 * 89.29513549804688);
      v1406.bezierCurveTo(p1017 * 210.49996948242188, p1017 * 104.79513549804688, p1017 * 210.49996948242188, p1017 * 104.79513549804688, p1017 * 194, p1017 * 120.29513549804688);
      v1406.closePath();
      f89(v1406, vVUndefined14, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 266.9999694824219, p1017 * 112.29513549804688);
      v1406.bezierCurveTo(p1017 * 233.49996948242188, p1017 * 127.29513549804688, p1017 * 233.49996948242188, p1017 * 127.29513549804688, p1017 * 199, p1017 * 142.29513549804688);
      v1406.closePath();
      f89(v1406, vVVVVVUndefined173, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 256.9999694824219, p1017 * 155.29513549804688);
      v1406.bezierCurveTo(p1017 * 238.49996948242188, p1017 * 156.29513549804688, p1017 * 238.49996948242188, p1017 * 156.29513549804688, p1017 * 219, p1017 * 157.29513549804688);
      v1406.closePath();
      f89(v1406, undefined, "#5E3C10", p1017 * 12);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 96, p1017 * 166);
      v1406.bezierCurveTo(p1017 * 88, p1017 * 117, p1017 * 129, p1017 * 92, p1017 * 161, p1017 * 91);
      v1406.bezierCurveTo(p1017 * 201, p1017 * 90, p1017 * 223, p1017 * 121, p1017 * 230, p1017 * 161);
      v1406.closePath();
      f89(v1406, "#704618", "#5D3D1A", p1017 * 8);
      v1406.beginPath();
      v1406.lineCap = "round";
      v1406.lineJoin = "round";
      v1406.moveTo(p1017 * 94.00003051757812, p1017 * 164.40341186523438);
      v1406.bezierCurveTo(p1017 * 162.50003051757812, p1017 * 164.40341186523438, p1017 * 230.00003051757812, p1017 * 165.40341186523438, p1017 * 231.00003051757812, p1017 * 164.40341186523438);
      v1406.bezierCurveTo(p1017 * 214.00003051757812, p1017 * 267.4034118652344, p1017 * 92.00003051757812, p1017 * 243.40341186523438, p1017 * 93.00003051757812, p1017 * 165.40341186523438);
      v1406.closePath();
      f89(v1406, "#E1DDD5", "#EAE7E4", p1017 * 8);
      f94(v1406, p1017 * 160.00003051757812, p1017 * 166.49432373046875, p1017 * 28.30194339616981);
      f89(v1406, "#392C16", "#5E3E1A", p1017 * 10);
      return v1405;
    }(v1310 * 0.22)));
    ⵠΔ[975] = f50(function (p1018) {
      var v1407 = document.createElement("canvas");
      var v1408 = v1407.getContext("2d");
      v1407.width = p1018 * 321;
      v1407.height = p1018 * 345;
      v1408.translate(0, p1018 * 5);
      f94(v1408, p1018 * 161.00003051757812, p1018 * 165.40341186523438, p1018 * 20.808652046684813);
      f89(v1408, "#C09D6F", "#A37943", p1018 * 10);
      v1408.beginPath();
      v1408.lineCap = "round";
      v1408.lineJoin = "round";
      v1408.moveTo(p1018 * 162.00003051757812, p1018 * 48.403411865234375);
      v1408.bezierCurveTo(p1018 * 172.50003051757812, p1018 * 67.40341186523438, p1018 * 172.50003051757812, p1018 * 67.40341186523438, p1018 * 183.00003051757812, p1018 * 86.40341186523438);
      v1408.bezierCurveTo(p1018 * 160.50003051757812, p1018 * 86.40341186523438, p1018 * 160.50003051757812, p1018 * 86.40341186523438, p1018 * 138.00003051757812, p1018 * 86.40341186523438);
      v1408.closePath();
      f89(v1408, "#C09D6F", "#A37943", p1018 * 10);
      v1408.save();
      v1408.translate(p1018 * 161.50003051757812, p1018 * 117.90341186523438);
      f90(v1408, p1018 * -5.5, p1018 * -37.5, p1018 * 11, p1018 * 75, p1018 * 10);
      v1408.restore();
      f89(v1408, "#C09D6F", "#A37943", p1018 * 10);
      v1408.save();
      v1408.translate(p1018 * 162.00003051757812, p1018 * 78.90341186523438);
      f90(v1408, p1018 * -10, p1018 * -5.5, p1018 * 20, p1018 * 11, p1018 * 1);
      v1408.restore();
      f89(v1408, "#C09D6F");
      f94(v1408, p1018 * 161.00003051757812, p1018 * 163.6761474609375, p1018 * 17.08800749063506);
      f89(v1408, "#C09D6F");
      return v1407;
    }(v1310 * 0.22));
    ⵠΔ[976] = [];
    ⵠΔ[976].push(f50(f113(v1310 * 1.5, ["#795026", "#654320", "#eda80d"], 0)));
    ⵠΔ[976].push(f50(f113(v1310 * 1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
    ⵠΔ[976].push(f50(f113(v1310 * 1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
    ⵠΔ[684] = ᐃΔ.ⵠΔΔΔⲆⵠⵠ;
    ⵠΔ[685] = ᐃΔ.ΔⵠΔⵠⲆⵠⵠ;
    ⵠΔ[686] = ᐃΔ.ΔΔⲆⲆΔΔᐃ;
    ⵠΔ[687] = ᐃΔ.ⵠᐃΔⵠΔⵠᐃ;
    ⵠΔ[655] = f156(v1310, "Show spectators", 25, "#FFF", undefined, vVVVUndefined1422, "#000", 5, 220);
    ⵠΔ[663] = f156(v1310, "Reconnecting...", 30, "#FFF");
    console.log(vVUndefined16, vVVUndefined142);
  }
  function f239(p1019, p1020, p1021) {
    var v1409 = document.createElement("canvas");
    var v1410 = v1409.getContext("2d");
    v1409.width = p1019 * 102;
    v1409.height = p1019 * 102;
    v1410.globalAlpha = p1020 ? 0.5 : 1;
    v1410.translate(3, 3);
    f90(v1410, p1019 * 24, p1019 * 26, p1019 * 70, p1019 * 9, p1019 * 10);
    f89(v1410, p1021[0]);
    f90(v1410, p1019 * 26, p1019 * 70, p1019 * 70, p1019 * 9, p1019 * 10);
    f89(v1410, p1021[0]);
    f90(v1410, p1019 * 5, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[0]);
    f90(v1410, p1019 * 40, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[0]);
    f90(v1410, p1019 * 75, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[0]);
    v1410.globalAlpha = 1;
    v1410.translate(-3, -3);
    f90(v1410, p1019 * 24, p1019 * 26, p1019 * 70, p1019 * 9, p1019 * 10);
    f89(v1410, p1021[1]);
    f90(v1410, p1019 * 26, p1019 * 70, p1019 * 70, p1019 * 9, p1019 * 10);
    f89(v1410, p1021[1]);
    f90(v1410, p1019 * 5, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[2], p1021[3], p1019 * 4);
    f90(v1410, p1019 * 40, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[2], p1021[3], p1019 * 4);
    f90(v1410, p1019 * 75, p1019 * 3, p1019 * 22, p1019 * 94, p1019 * 5);
    f89(v1410, p1021[2], p1021[3], p1019 * 4);
    return v1409;
  }
  const v1411 = 11697505;
  const v1412 = 11697505 .ΔⲆⲆΔΔⲆⵠ;
  const v1413 = `const ᐃΔⵠⵠⵠⵠᐃⲆΔ = (typeof ⵠΔΔΔⵠᐃᐃ === "${v1412}") ? 1 : 0; return ᐃΔⵠⵠⵠⵠᐃⲆΔ;`;
  function f240(p1022, p1023, p1024) {
    var v1414 = document.createElement("canvas");
    var v1415 = v1414.getContext("2d");
    v1414.width = p1022 * 163;
    v1414.height = p1022 * 163;
    v1415.save();
    v1415.translate(p1022 * 82.5, p1022 * 81.1015625);
    v1415.rotate(0);
    f90(v1415, p1022 * -65.5, p1022 * -66, p1022 * 131, p1022 * 131, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[1]);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 80, p1022 * 17.1015625);
    f90(v1415, p1022 * -64, p1022 * -4.5, p1022 * 129, p1022 * 9, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 80, p1022 * 17.1015625);
    f90(v1415, p1022 * -64, p1022 * -4.5, p1022 * 129, p1022 * 9, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 83.6015625);
    f90(v1415, p1022 * -4.5, p1022 * -61, p1022 * 9, p1022 * 129, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 83.6015625);
    f90(v1415, p1022 * -4.5, p1022 * -61, p1022 * 9, p1022 * 129, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 17.5, p1022 * 82.6015625);
    f90(v1415, p1022 * -4.5, p1022 * -65, p1022 * 9, p1022 * 129, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 17.5, p1022 * 82.6015625);
    f90(v1415, p1022 * -4.5, p1022 * -65, p1022 * 9, p1022 * 129, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 80.5, p1022 * 145.6015625);
    f90(v1415, p1022 * -65.5, p1022 * -4, p1022 * 129, p1022 * 9, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 80.5, p1022 * 145.6015625);
    f90(v1415, p1022 * -65.5, p1022 * -4, p1022 * 129, p1022 * 9, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 17, p1022 * 18.1015625);
    f90(v1415, p1022 * -11, p1022 * -11.5, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 17, p1022 * 18.1015625);
    f90(v1415, p1022 * -11, p1022 * -11.5, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 16.6015625);
    f90(v1415, p1022 * -10.5, p1022 * -11.5, p1022 * 21, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 16.6015625);
    f90(v1415, p1022 * -10.5, p1022 * -11.5, p1022 * 21, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 144.1015625);
    f90(v1415, p1022 * -10.5, p1022 * -11, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 145.5, p1022 * 144.1015625);
    f90(v1415, p1022 * -10.5, p1022 * -11, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    v1415.globalAlpha = p1023 ? 0.5 : 1;
    v1415.translate(p1022 * 5, p1022 * 5);
    v1415.save();
    v1415.translate(p1022 * 17.5, p1022 * 145.1015625);
    f90(v1415, p1022 * -11.5, p1022 * -12, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[0]);
    v1415.globalAlpha = 1;
    v1415.translate(p1022 * -5, p1022 * -5);
    v1415.save();
    v1415.translate(p1022 * 17.5, p1022 * 145.1015625);
    f90(v1415, p1022 * -11.5, p1022 * -12, p1022 * 22, p1022 * 22, p1022 * 5);
    v1415.restore();
    f89(v1415, p1024[2], p1024[3], p1022 * 3);
    return v1414;
  }
  function f241(p1025, p1026, p1027) {
    var v1416 = document.createElement("canvas");
    var v1417 = v1416.getContext("2d");
    v1416.width = p1025 * 218;
    v1416.height = p1025 * 185;
    v1417.beginPath();
    v1417.lineCap = "round";
    v1417.lineJoin = "round";
    v1417.moveTo(p1025 * 64, p1025 * 53.135406494140625);
    v1417.bezierCurveTo(p1025 * 92, p1025 * 17.135406494140625, p1025 * 116, p1025 * 11.135406494140625, p1025 * 158, p1025 * 53.135406494140625);
    v1417.bezierCurveTo(p1025 * 178, p1025 * 74.13540649414062, p1025 * 181, p1025 * 81.13540649414062, p1025 * 196, p1025 * 101.13540649414062);
    v1417.bezierCurveTo(p1025 * 214, p1025 * 127.13540649414062, p1025 * 192, p1025 * 138.13540649414062, p1025 * 173, p1025 * 149.13540649414062);
    v1417.bezierCurveTo(p1025 * 137, p1025 * 166.13540649414062, p1025 * 74, p1025 * 170.13540649414062, p1025 * 36, p1025 * 141.13540649414062);
    v1417.bezierCurveTo(p1025 * 13, p1025 * 127.13540649414062, p1025 * 20, p1025 * 119.13540649414062, p1025 * 30, p1025 * 103.13540649414062);
    v1417.bezierCurveTo(p1025 * 48, p1025 * 71.13540649414062, p1025 * 54, p1025 * 67.13540649414062, p1025 * 63, p1025 * 54.135406494140625);
    v1417.closePath();
    f89(v1417, p1027[0], p1027[1], p1025 * 10);
    v1417.beginPath();
    v1417.lineCap = "round";
    v1417.lineJoin = "round";
    v1417.moveTo(p1025 * 107, p1025 * 25.135406494140625);
    v1417.bezierCurveTo(p1025 * 62, p1025 * 90.13540649414062, p1025 * 54, p1025 * 129.13540649414062, p1025 * 53, p1025 * 151.13540649414062);
    v1417.bezierCurveTo(p1025 * 39.5, p1025 * 142.13540649414062, p1025 * 39.5, p1025 * 142.13540649414062, p1025 * 26, p1025 * 133.13540649414062);
    v1417.bezierCurveTo(p1025 * 23.5, p1025 * 128.63540649414062, p1025 * 23.5, p1025 * 128.63540649414062, p1025 * 21, p1025 * 124.13540649414062);
    v1417.bezierCurveTo(p1025 * 22, p1025 * 113.13540649414062, p1025 * 31, p1025 * 99.13540649414062, p1025 * 40, p1025 * 88.13540649414062);
    v1417.bezierCurveTo(p1025 * 54.5, p1025 * 67.13540649414062, p1025 * 54.5, p1025 * 67.13540649414062, p1025 * 69, p1025 * 46.135406494140625);
    v1417.bezierCurveTo(p1025 * 80.5, p1025 * 36.635406494140625, p1025 * 80.5, p1025 * 36.635406494140625, p1025 * 92, p1025 * 27.135406494140625);
    v1417.closePath();
    f89(v1417, p1027[1]);
    return v1416;
  }
  function f242(p1028, p1029, p1030) {
    var v1418 = (v1419 = document.createElement("canvas")).getContext("2d");
    v1419.width = p1028 * 47;
    v1419.height = p1028 * 60;
    var v1419;
    v1418 = (v1419 = document.createElement("canvas")).getContext("2d");
    v1419.width = p1028 * 47;
    v1419.height = p1028 * 60;
    f94(v1418, p1028 * 23.5, p1028 * 20.734375, p1028 * 15.132745950421556);
    f89(v1418, vVUndefined6, p1030[2], p1028 * 4);
    f94(v1418, p1028 * 23.5, p1028 * 20.734375, p1028 * 18.601075237738275);
    f89(v1418, undefined, p1030[1], p1028 * 4);
    f94(v1418, p1028 * 23.5, p1028 * 20.734375, p1028 * 11.40175425099138);
    f89(v1418, vVVVVUndefined1722, p1030[1], p1028 * 4);
    v1418.save();
    v1418.translate(p1028 * 23, p1028 * 38.734375);
    v1418.rotate(0);
    f90(v1418, p1028 * -21.5, p1028 * -19, p1028 * 43, p1028 * 38, p1028 * 10);
    v1418.restore();
    f89(v1418, p1030[2], p1030[1], p1028 * 4);
    v1418.save();
    v1418.translate(p1028 * 23.5, p1028 * 43.734375);
    v1418.rotate(0.5235987755982988);
    f92(v1418, 3, p1028 * 8.06225774829855, p1028 * 0);
    v1418.restore();
    f89(v1418, p1030[3]);
    f94(v1418, p1028 * 23.5, p1028 * 35.734375, p1028 * 7.0710678118654755);
    f89(v1418, p1030[3]);
    return v1419;
  }
  function f243(p1031, p1032) {
    var v1420 = document.createElement("canvas");
    var v1421 = v1420.getContext("2d");
    v1420.width = p1031 * 120;
    v1420.height = p1031 * 330;
    v1421.translate(p1031 * -60, p1031 * -10);
    v1421.beginPath();
    v1421.lineCap = "round";
    v1421.lineJoin = "round";
    v1421.moveTo(p1031 * 188.5, p1031 * 7.953125);
    v1421.bezierCurveTo(p1031 * 188.5, p1031 * 334.953125, p1031 * 188.5, p1031 * 332.953125, p1031 * 188.5, p1031 * 339.953125);
    v1421.bezierCurveTo(p1031 * 166.5, p1031 * 295.953125, p1031 * 145.5, p1031 * 295.953125, p1031 * 139.5, p1031 * 282.953125);
    v1421.bezierCurveTo(p1031 * 124.5, p1031 * 244.953125, p1031 * 139.5, p1031 * 243.953125, p1031 * 131.5, p1031 * 212.953125);
    v1421.bezierCurveTo(p1031 * 118.5, p1031 * 161.953125, p1031 * 69.5, p1031 * 156.953125, p1031 * 74.5, p1031 * 92.953125);
    v1421.bezierCurveTo(p1031 * 85.5, p1031 * 41.953125, p1031 * 158.5, p1031 * 49.953125, p1031 * 188.5, p1031 * 7.953125);
    v1421.closePath();
    f89(v1421, p1032[0]);
    return v1420;
  }
  function f244(p1033, p1034, p1035) {
    var v1422 = document.createElement("canvas");
    var v1423 = v1422.getContext("2d");
    v1422.width = p1033 * 170;
    v1422.height = p1033 * 170;
    v1423.globalAlpha = p1034 ? 0.5 : 1;
    v1423.translate(p1033 * -10, p1033 * 10);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1033 * 72.5, p1033 * 4.109375);
    v1423.bezierCurveTo(p1033 * 117, p1033 * 9.609375, p1033 * 117, p1033 * 9.609375, p1033 * 161.5, p1033 * 15.109375);
    v1423.bezierCurveTo(p1033 * 134.5, p1033 * 106.109375, p1033 * 110.5, p1033 * 130.109375, p1033 * 63.5, p1033 * 145.109375);
    v1423.bezierCurveTo(p1033 * 33.5, p1033 * 120.609375, p1033 * 33.5, p1033 * 120.609375, p1033 * 3.5, p1033 * 96.109375);
    v1423.bezierCurveTo(p1033 * 82.5, p1033 * 75.109375, p1033 * 69.5, p1033 * 29.109375, p1033 * 71.5, p1033 * 6.109375);
    v1423.closePath();
    f89(v1423, p1035[0]);
    v1423.globalAlpha = 1;
    v1423.translate(p1033 * 10, p1033 * -10);
    v1423.beginPath();
    v1423.lineCap = "round";
    v1423.lineJoin = "round";
    v1423.moveTo(p1033 * 72.5, p1033 * 4.109375);
    v1423.bezierCurveTo(p1033 * 117, p1033 * 9.609375, p1033 * 117, p1033 * 9.609375, p1033 * 161.5, p1033 * 15.109375);
    v1423.bezierCurveTo(p1033 * 134.5, p1033 * 106.109375, p1033 * 110.5, p1033 * 130.109375, p1033 * 63.5, p1033 * 145.109375);
    v1423.bezierCurveTo(p1033 * 33.5, p1033 * 120.609375, p1033 * 33.5, p1033 * 120.609375, p1033 * 3.5, p1033 * 96.109375);
    v1423.bezierCurveTo(p1033 * 82.5, p1033 * 75.109375, p1033 * 69.5, p1033 * 29.109375, p1033 * 71.5, p1033 * 6.109375);
    v1423.closePath();
    f89(v1423, p1035[1], p1035[2], p1033 * 10);
    return v1422;
  }
  function f245(p1036, p1037, p1038) {
    var v1424 = document.createElement("canvas");
    var v1425 = v1424.getContext("2d");
    v1424.width = p1036 * 187;
    v1424.height = p1036 * 119;
    v1425.globalAlpha = p1037 ? 0.5 : 1;
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.translate(0, 3);
    v1425.moveTo(p1036 * 53, p1036 * 45);
    v1425.bezierCurveTo(p1036 * 3, p1036 * 60, p1036 * 11, p1036 * 72, p1036 * 19, p1036 * 81);
    v1425.bezierCurveTo(p1036 * 28, p1036 * 82, p1036 * 24, p1036 * 81, p1036 * 29, p1036 * 82);
    v1425.bezierCurveTo(p1036 * 26, p1036 * 87, p1036 * 28, p1036 * 84, p1036 * 28, p1036 * 87);
    v1425.bezierCurveTo(p1036 * 63, p1036 * 101, p1036 * 92, p1036 * 100, p1036 * 138, p1036 * 93);
    v1425.bezierCurveTo(p1036 * 172, p1036 * 87, p1036 * 180, p1036 * 72, p1036 * 168, p1036 * 62);
    v1425.bezierCurveTo(p1036 * 154, p1036 * 51, p1036 * 150, p1036 * 50, p1036 * 148, p1036 * 49);
    v1425.bezierCurveTo(p1036 * 132, p1036 * 42, p1036 * 90, p1036 * 40, p1036 * 55, p1036 * 45);
    v1425.closePath();
    f89(v1425, p1038[5]);
    v1425.globalAlpha = 1;
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.translate(0, -3);
    v1425.moveTo(p1036 * 53, p1036 * 45);
    v1425.bezierCurveTo(p1036 * 3, p1036 * 60, p1036 * 11, p1036 * 72, p1036 * 19, p1036 * 81);
    v1425.bezierCurveTo(p1036 * 28, p1036 * 82, p1036 * 24, p1036 * 81, p1036 * 29, p1036 * 82);
    v1425.bezierCurveTo(p1036 * 26, p1036 * 87, p1036 * 28, p1036 * 84, p1036 * 28, p1036 * 87);
    v1425.bezierCurveTo(p1036 * 63, p1036 * 101, p1036 * 92, p1036 * 100, p1036 * 138, p1036 * 93);
    v1425.bezierCurveTo(p1036 * 172, p1036 * 87, p1036 * 180, p1036 * 72, p1036 * 168, p1036 * 62);
    v1425.bezierCurveTo(p1036 * 154, p1036 * 51, p1036 * 150, p1036 * 50, p1036 * 148, p1036 * 49);
    v1425.bezierCurveTo(p1036 * 132, p1036 * 42, p1036 * 90, p1036 * 40, p1036 * 55, p1036 * 45);
    v1425.closePath();
    f89(v1425, p1038[0], p1038[1], p1036 * 4);
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.moveTo(p1036 * 151, p1036 * 60);
    v1425.bezierCurveTo(p1036 * 140, p1036 * 36, p1036 * 137, p1036 * 32, p1036 * 124, p1036 * 29);
    v1425.bezierCurveTo(p1036 * 98, p1036 * 22, p1036 * 80, p1036 * 24, p1036 * 62, p1036 * 28);
    v1425.bezierCurveTo(p1036 * 42, p1036 * 35, p1036 * 38, p1036 * 46, p1036 * 34, p1036 * 58);
    v1425.bezierCurveTo(p1036 * 53, p1036 * 74, p1036 * 76, p1036 * 76, p1036 * 91, p1036 * 78);
    v1425.closePath();
    f89(v1425, p1038[0], p1038[1], p1036 * 4);
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.moveTo(p1036 * 37, p1036 * 53);
    v1425.bezierCurveTo(p1036 * 30, p1036 * 56, p1036 * 29, p1036 * 67, p1036 * 30, p1036 * 68);
    v1425.bezierCurveTo(p1036 * 94, p1036 * 108, p1036 * 150, p1036 * 76, p1036 * 155, p1036 * 70);
    v1425.bezierCurveTo(p1036 * 154, p1036 * 60, p1036 * 151, p1036 * 54, p1036 * 149, p1036 * 53);
    v1425.bezierCurveTo(p1036 * 101, p1036 * 74, p1036 * 66, p1036 * 66, p1036 * 37, p1036 * 53);
    v1425.closePath();
    f89(v1425, p1038[2], p1038[3], p1036 * 4);
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.moveTo(p1036 * 100, p1036 * 36);
    v1425.bezierCurveTo(p1036 * 92, p1036 * 25, p1036 * 86, p1036 * 28, p1036 * 82, p1036 * 34);
    v1425.bezierCurveTo(p1036 * 88, p1036 * 40, p1036 * 93, p1036 * 40, p1036 * 98, p1036 * 36);
    v1425.closePath();
    f89(v1425, p1038[0], p1038[1], p1036 * 4);
    v1425.beginPath();
    v1425.lineCap = "round";
    v1425.lineJoin = "round";
    v1425.moveTo(p1036 * 80, p1036 * 43);
    v1425.bezierCurveTo(p1036 * 69, p1036 * 46, p1036 * 67, p1036 * 52, p1036 * 69, p1036 * 58);
    f89(v1425, undefined, p1038[1], p1036 * 4);
    f94(v1425, p1036 * 58, p1036 * 50, p1036 * 5);
    f89(v1425, p1038[4]);
    f94(v1425, p1036 * 43, p1036 * 65, p1036 * 5);
    f89(v1425, p1038[4]);
    f94(v1425, p1036 * 58, p1036 * 73, p1036 * 5);
    f89(v1425, p1038[4]);
    f94(v1425, p1036 * 58, p1036 * 50, p1036 * 2);
    f89(v1425, p1038[5]);
    f94(v1425, p1036 * 43, p1036 * 65, p1036 * 2);
    f89(v1425, p1038[5]);
    f94(v1425, p1036 * 58, p1036 * 73, p1036 * 2);
    f89(v1425, p1038[5]);
    return v1424;
  }
  function f246(p1039, p1040) {
    var v1426 = document.createElement("canvas");
    var v1427 = v1426.getContext("2d");
    v1426.width = p1039 * 161;
    v1426.height = p1039 * 190;
    v1427.globalAlpha = 0.5;
    v1427.translate(0, 8);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 9, p1039 * 93);
    v1427.bezierCurveTo(p1039 * 17, p1039 * 95, p1039 * 19, p1039 * 95, p1039 * 21, p1039 * 95);
    v1427.bezierCurveTo(p1039 * 9, p1039 * 83, p1039 * 17, p1039 * 93, p1039 * 4, p1039 * 76);
    v1427.bezierCurveTo(p1039 * 11, p1039 * 75, p1039 * 11, p1039 * 75, p1039 * 18, p1039 * 75);
    v1427.bezierCurveTo(p1039 * 13, p1039 * 67, p1039 * 13, p1039 * 67, p1039 * 7, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 14, p1039 * 59, p1039 * 14, p1039 * 59, p1039 * 21, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 46, p1039 * 35, p1039 * 35, p1039 * 45, p1039 * 49, p1039 * 31);
    v1427.bezierCurveTo(p1039 * 53, p1039 * 24, p1039 * 51, p1039 * 21, p1039 * 51, p1039 * 16);
    v1427.bezierCurveTo(p1039 * 63, p1039 * 23, p1039 * 63, p1039 * 24, p1039 * 69, p1039 * 29);
    v1427.bezierCurveTo(p1039 * 76, p1039 * 7, p1039 * 75, p1039 * 11, p1039 * 76, p1039 * 6);
    v1427.bezierCurveTo(p1039 * 81, p1039 * 12, p1039 * 84, p1039 * 18, p1039 * 89, p1039 * 27);
    v1427.bezierCurveTo(p1039 * 95, p1039 * 25, p1039 * 100, p1039 * 16, p1039 * 105, p1039 * 14);
    v1427.bezierCurveTo(p1039 * 103, p1039 * 25, p1039 * 111, p1039 * 33, p1039 * 110, p1039 * 34);
    v1427.bezierCurveTo(p1039 * 123, p1039 * 48, p1039 * 123, p1039 * 48, p1039 * 136, p1039 * 62);
    v1427.bezierCurveTo(p1039 * 142, p1039 * 60, p1039 * 147, p1039 * 59, p1039 * 155, p1039 * 58);
    v1427.bezierCurveTo(p1039 * 147, p1039 * 65, p1039 * 147, p1039 * 65, p1039 * 139, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 73, p1039 * 145, p1039 * 73, p1039 * 151, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 80, p1039 * 145, p1039 * 80, p1039 * 138, p1039 * 87);
    v1427.bezierCurveTo(p1039 * 144, p1039 * 88, p1039 * 144, p1039 * 88, p1039 * 150, p1039 * 89);
    v1427.bezierCurveTo(p1039 * 125, p1039 * 103, p1039 * 125, p1039 * 125, p1039 * 113, p1039 * 141);
    v1427.bezierCurveTo(p1039 * 92, p1039 * 178, p1039 * 85, p1039 * 177, p1039 * 76, p1039 * 178);
    v1427.bezierCurveTo(p1039 * 64, p1039 * 179, p1039 * 51, p1039 * 164, p1039 * 35, p1039 * 131);
    v1427.bezierCurveTo(p1039 * 18, p1039 * 95, p1039 * 13, p1039 * 99, p1039 * 8, p1039 * 93);
    v1427.closePath();
    f89(v1427, p1040[0]);
    v1427.globalAlpha = 1;
    v1427.translate(0, -8);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 9, p1039 * 93);
    v1427.bezierCurveTo(p1039 * 17, p1039 * 95, p1039 * 19, p1039 * 95, p1039 * 21, p1039 * 95);
    v1427.bezierCurveTo(p1039 * 9, p1039 * 83, p1039 * 17, p1039 * 93, p1039 * 4, p1039 * 76);
    v1427.bezierCurveTo(p1039 * 11, p1039 * 75, p1039 * 11, p1039 * 75, p1039 * 18, p1039 * 75);
    v1427.bezierCurveTo(p1039 * 13, p1039 * 67, p1039 * 13, p1039 * 67, p1039 * 7, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 14, p1039 * 59, p1039 * 14, p1039 * 59, p1039 * 21, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 46, p1039 * 35, p1039 * 35, p1039 * 45, p1039 * 49, p1039 * 31);
    v1427.bezierCurveTo(p1039 * 53, p1039 * 24, p1039 * 51, p1039 * 21, p1039 * 51, p1039 * 16);
    v1427.bezierCurveTo(p1039 * 63, p1039 * 23, p1039 * 63, p1039 * 24, p1039 * 69, p1039 * 29);
    v1427.bezierCurveTo(p1039 * 76, p1039 * 7, p1039 * 75, p1039 * 11, p1039 * 76, p1039 * 6);
    v1427.bezierCurveTo(p1039 * 81, p1039 * 12, p1039 * 84, p1039 * 18, p1039 * 89, p1039 * 27);
    v1427.bezierCurveTo(p1039 * 95, p1039 * 25, p1039 * 100, p1039 * 16, p1039 * 105, p1039 * 14);
    v1427.bezierCurveTo(p1039 * 103, p1039 * 25, p1039 * 111, p1039 * 33, p1039 * 110, p1039 * 34);
    v1427.bezierCurveTo(p1039 * 123, p1039 * 48, p1039 * 123, p1039 * 48, p1039 * 136, p1039 * 62);
    v1427.bezierCurveTo(p1039 * 142, p1039 * 60, p1039 * 147, p1039 * 59, p1039 * 155, p1039 * 58);
    v1427.bezierCurveTo(p1039 * 147, p1039 * 65, p1039 * 147, p1039 * 65, p1039 * 139, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 73, p1039 * 145, p1039 * 73, p1039 * 151, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 80, p1039 * 145, p1039 * 80, p1039 * 138, p1039 * 87);
    v1427.bezierCurveTo(p1039 * 144, p1039 * 88, p1039 * 144, p1039 * 88, p1039 * 150, p1039 * 89);
    v1427.bezierCurveTo(p1039 * 125, p1039 * 103, p1039 * 125, p1039 * 125, p1039 * 113, p1039 * 141);
    v1427.bezierCurveTo(p1039 * 92, p1039 * 178, p1039 * 85, p1039 * 177, p1039 * 76, p1039 * 178);
    v1427.bezierCurveTo(p1039 * 64, p1039 * 179, p1039 * 51, p1039 * 164, p1039 * 35, p1039 * 131);
    v1427.bezierCurveTo(p1039 * 18, p1039 * 95, p1039 * 13, p1039 * 99, p1039 * 8, p1039 * 93);
    v1427.closePath();
    f89(v1427, p1040[1]);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 28, p1039 * 63);
    v1427.bezierCurveTo(p1039 * 23, p1039 * 54, p1039 * 24, p1039 * 47, p1039 * 26, p1039 * 37);
    v1427.bezierCurveTo(p1039 * 28, p1039 * 29, p1039 * 31, p1039 * 31, p1039 * 41, p1039 * 35);
    v1427.bezierCurveTo(p1039 * 52, p1039 * 45, p1039 * 55, p1039 * 51, p1039 * 57, p1039 * 53);
    v1427.bezierCurveTo(p1039 * 50, p1039 * 50, p1039 * 44, p1039 * 47, p1039 * 43, p1039 * 48);
    v1427.bezierCurveTo(p1039 * 43, p1039 * 52, p1039 * 43, p1039 * 52, p1039 * 42, p1039 * 57);
    v1427.bezierCurveTo(p1039 * 38, p1039 * 54, p1039 * 38, p1039 * 54, p1039 * 33, p1039 * 51);
    v1427.bezierCurveTo(p1039 * 34, p1039 * 56, p1039 * 34, p1039 * 56, p1039 * 34, p1039 * 61);
    v1427.closePath();
    f89(v1427, p1040[3]);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 99, p1039 * 55);
    v1427.bezierCurveTo(p1039 * 107, p1039 * 43, p1039 * 113, p1039 * 39, p1039 * 121, p1039 * 34);
    v1427.bezierCurveTo(p1039 * 130, p1039 * 29, p1039 * 130, p1039 * 34, p1039 * 130, p1039 * 42);
    v1427.bezierCurveTo(p1039 * 131, p1039 * 57, p1039 * 128, p1039 * 61, p1039 * 129, p1039 * 63);
    v1427.bezierCurveTo(p1039 * 124, p1039 * 62, p1039 * 124, p1039 * 62, p1039 * 119, p1039 * 61);
    v1427.bezierCurveTo(p1039 * 119, p1039 * 56, p1039 * 120, p1039 * 61, p1039 * 118, p1039 * 52);
    v1427.bezierCurveTo(p1039 * 115, p1039 * 55, p1039 * 111, p1039 * 59, p1039 * 111, p1039 * 58);
    v1427.bezierCurveTo(p1039 * 110, p1039 * 54, p1039 * 109, p1039 * 57, p1039 * 109, p1039 * 51);
    v1427.closePath();
    f89(v1427, p1040[3]);
    f94(v1427, p1039 * 103, p1039 * 110, p1039 * 11);
    f89(v1427, p1040[4]);
    f94(v1427, p1039 * 55, p1039 * 111, p1039 * 11);
    f89(v1427, p1040[4]);
    f94(v1427, p1039 * 99, p1039 * 107, p1039 * 5);
    f89(v1427, p1040[1]);
    f94(v1427, p1039 * 51, p1039 * 108, p1039 * 5);
    f89(v1427, p1040[1]);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 31, p1039 * 121);
    v1427.bezierCurveTo(p1039 * 45, p1039 * 128, p1039 * 51, p1039 * 133, p1039 * 53, p1039 * 141);
    v1427.bezierCurveTo(p1039 * 59, p1039 * 161, p1039 * 70, p1039 * 173, p1039 * 80, p1039 * 169);
    v1427.bezierCurveTo(p1039 * 89, p1039 * 172, p1039 * 99, p1039 * 149, p1039 * 107, p1039 * 133);
    v1427.bezierCurveTo(p1039 * 114, p1039 * 122, p1039 * 119, p1039 * 123, p1039 * 124, p1039 * 119);
    v1427.bezierCurveTo(p1039 * 109, p1039 * 148, p1039 * 117, p1039 * 133, p1039 * 109, p1039 * 147);
    v1427.bezierCurveTo(p1039 * 87, p1039 * 180, p1039 * 84, p1039 * 179, p1039 * 76, p1039 * 178);
    v1427.bezierCurveTo(p1039 * 49, p1039 * 173, p1039 * 44, p1039 * 149, p1039 * 31, p1039 * 121);
    v1427.closePath();
    f89(v1427, p1040[5]);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.translate(-2, 0);
    v1427.moveTo(p1039 * 71, p1039 * 162);
    v1427.bezierCurveTo(p1039 * 80, p1039 * 155, p1039 * 85, p1039 * 159, p1039 * 89, p1039 * 164);
    v1427.bezierCurveTo(p1039 * 90, p1039 * 171, p1039 * 86, p1039 * 173, p1039 * 79, p1039 * 173);
    v1427.bezierCurveTo(p1039 * 67, p1039 * 172, p1039 * 67, p1039 * 168, p1039 * 71, p1039 * 162);
    v1427.closePath();
    f89(v1427, p1040[3]);
    v1427.translate(2, 0);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 9, p1039 * 93);
    v1427.bezierCurveTo(p1039 * 17, p1039 * 95, p1039 * 19, p1039 * 95, p1039 * 21, p1039 * 95);
    v1427.bezierCurveTo(p1039 * 9, p1039 * 83, p1039 * 17, p1039 * 93, p1039 * 4, p1039 * 76);
    v1427.bezierCurveTo(p1039 * 11, p1039 * 75, p1039 * 11, p1039 * 75, p1039 * 18, p1039 * 75);
    v1427.bezierCurveTo(p1039 * 13, p1039 * 67, p1039 * 13, p1039 * 67, p1039 * 7, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 14, p1039 * 59, p1039 * 14, p1039 * 59, p1039 * 21, p1039 * 59);
    v1427.bezierCurveTo(p1039 * 46, p1039 * 35, p1039 * 35, p1039 * 45, p1039 * 49, p1039 * 31);
    v1427.bezierCurveTo(p1039 * 53, p1039 * 24, p1039 * 51, p1039 * 21, p1039 * 51, p1039 * 16);
    v1427.bezierCurveTo(p1039 * 63, p1039 * 23, p1039 * 63, p1039 * 24, p1039 * 69, p1039 * 29);
    v1427.bezierCurveTo(p1039 * 76, p1039 * 7, p1039 * 75, p1039 * 11, p1039 * 76, p1039 * 6);
    v1427.bezierCurveTo(p1039 * 81, p1039 * 12, p1039 * 84, p1039 * 18, p1039 * 89, p1039 * 27);
    v1427.bezierCurveTo(p1039 * 95, p1039 * 25, p1039 * 100, p1039 * 16, p1039 * 105, p1039 * 14);
    v1427.bezierCurveTo(p1039 * 103, p1039 * 25, p1039 * 111, p1039 * 33, p1039 * 110, p1039 * 34);
    v1427.bezierCurveTo(p1039 * 123, p1039 * 48, p1039 * 123, p1039 * 48, p1039 * 136, p1039 * 62);
    v1427.bezierCurveTo(p1039 * 142, p1039 * 60, p1039 * 147, p1039 * 59, p1039 * 155, p1039 * 58);
    v1427.bezierCurveTo(p1039 * 147, p1039 * 65, p1039 * 147, p1039 * 65, p1039 * 139, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 73, p1039 * 145, p1039 * 73, p1039 * 151, p1039 * 73);
    v1427.bezierCurveTo(p1039 * 145, p1039 * 80, p1039 * 145, p1039 * 80, p1039 * 138, p1039 * 87);
    v1427.bezierCurveTo(p1039 * 144, p1039 * 88, p1039 * 144, p1039 * 88, p1039 * 150, p1039 * 89);
    v1427.bezierCurveTo(p1039 * 125, p1039 * 103, p1039 * 125, p1039 * 125, p1039 * 113, p1039 * 141);
    v1427.bezierCurveTo(p1039 * 92, p1039 * 178, p1039 * 85, p1039 * 177, p1039 * 76, p1039 * 178);
    v1427.bezierCurveTo(p1039 * 64, p1039 * 179, p1039 * 51, p1039 * 164, p1039 * 35, p1039 * 131);
    v1427.bezierCurveTo(p1039 * 18, p1039 * 95, p1039 * 13, p1039 * 99, p1039 * 8, p1039 * 93);
    v1427.closePath();
    f89(v1427, undefined, p1040[2], p1039 * 4);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 25, p1039 * 63);
    v1427.bezierCurveTo(p1039 * 16, p1039 * 58, p1039 * 17, p1039 * 51, p1039 * 17, p1039 * 33);
    v1427.bezierCurveTo(p1039 * 19, p1039 * 12, p1039 * 21, p1039 * 12, p1039 * 32, p1039 * 17);
    v1427.bezierCurveTo(p1039 * 63, p1039 * 31, p1039 * 66, p1039 * 45, p1039 * 66, p1039 * 54);
    f89(v1427, p1040[1], p1040[2], p1039 * 4);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 91, p1039 * 53);
    v1427.bezierCurveTo(p1039 * 91, p1039 * 40, p1039 * 98, p1039 * 33, p1039 * 121, p1039 * 20);
    v1427.bezierCurveTo(p1039 * 137, p1039 * 12, p1039 * 137, p1039 * 16, p1039 * 139, p1039 * 27);
    v1427.bezierCurveTo(p1039 * 141, p1039 * 49, p1039 * 140, p1039 * 57, p1039 * 134, p1039 * 64);
    f89(v1427, p1040[1], p1040[2], p1039 * 4);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 31, p1039 * 63);
    v1427.bezierCurveTo(p1039 * 23, p1039 * 54, p1039 * 24, p1039 * 47, p1039 * 26, p1039 * 37);
    v1427.bezierCurveTo(p1039 * 28, p1039 * 29, p1039 * 31, p1039 * 31, p1039 * 41, p1039 * 35);
    v1427.bezierCurveTo(p1039 * 52, p1039 * 45, p1039 * 55, p1039 * 51, p1039 * 57, p1039 * 53);
    v1427.bezierCurveTo(p1039 * 50, p1039 * 50, p1039 * 44, p1039 * 47, p1039 * 43, p1039 * 48);
    v1427.bezierCurveTo(p1039 * 43, p1039 * 52, p1039 * 43, p1039 * 52, p1039 * 42, p1039 * 57);
    v1427.bezierCurveTo(p1039 * 38, p1039 * 54, p1039 * 38, p1039 * 54, p1039 * 33, p1039 * 51);
    v1427.bezierCurveTo(p1039 * 34, p1039 * 56, p1039 * 34, p1039 * 56, p1039 * 34, p1039 * 61);
    v1427.closePath();
    f89(v1427, p1040[3]);
    v1427.beginPath();
    v1427.lineCap = "round";
    v1427.lineJoin = "round";
    v1427.moveTo(p1039 * 99, p1039 * 55);
    v1427.bezierCurveTo(p1039 * 107, p1039 * 43, p1039 * 113, p1039 * 39, p1039 * 121, p1039 * 34);
    v1427.bezierCurveTo(p1039 * 130, p1039 * 29, p1039 * 130, p1039 * 34, p1039 * 130, p1039 * 42);
    v1427.bezierCurveTo(p1039 * 131, p1039 * 57, p1039 * 128, p1039 * 61, p1039 * 129, p1039 * 63);
    v1427.bezierCurveTo(p1039 * 124, p1039 * 62, p1039 * 124, p1039 * 62, p1039 * 119, p1039 * 61);
    v1427.bezierCurveTo(p1039 * 119, p1039 * 56, p1039 * 120, p1039 * 61, p1039 * 118, p1039 * 52);
    v1427.bezierCurveTo(p1039 * 115, p1039 * 55, p1039 * 111, p1039 * 59, p1039 * 111, p1039 * 58);
    v1427.bezierCurveTo(p1039 * 110, p1039 * 54, p1039 * 109, p1039 * 57, p1039 * 109, p1039 * 51);
    v1427.closePath();
    f89(v1427, p1040[3]);
    return v1426;
  }
  function f247(p1041, p1042, p1043) {
    var v1428 = document.createElement("canvas");
    var v1429 = v1428.getContext("2d");
    v1428.width = p1041 * 109;
    v1428.height = p1041 * 110;
    f94(v1429, p1041 * 54.5, p1041 * 55, p1041 * 48.038209575038294);
    f89(v1429, p1042[0], p1042[1], p1041 * 8);
    if (p1043 == 0) {
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 54.928558349609375, p1041 * 43.72320556640625);
      v1429.bezierCurveTo(p1041 * 66.92855834960938, p1041 * 31.72320556640625, p1041 * 69.92855834960938, p1041 * 29.72320556640625, p1041 * 74.92855834960938, p1041 * 29.72320556640625);
      v1429.bezierCurveTo(p1041 * 86.92855834960938, p1041 * 28.72320556640625, p1041 * 91.92855834960938, p1041 * 42.72320556640625, p1041 * 89.92855834960938, p1041 * 52.72320556640625);
      v1429.bezierCurveTo(p1041 * 88.92855834960938, p1041 * 63.72320556640625, p1041 * 73.92855834960938, p1041 * 75.72320556640625, p1041 * 55.928558349609375, p1041 * 87.72320556640625);
      v1429.bezierCurveTo(p1041 * 37.928558349609375, p1041 * 78.72320556640625, p1041 * 26.928558349609375, p1041 * 65.72320556640625, p1041 * 19.928558349609375, p1041 * 54.72320556640625);
      v1429.bezierCurveTo(p1041 * 13.928558349609375, p1041 * 42.72320556640625, p1041 * 21.928558349609375, p1041 * 28.72320556640625, p1041 * 35.928558349609375, p1041 * 29.72320556640625);
      v1429.bezierCurveTo(p1041 * 45.928558349609375, p1041 * 31.72320556640625, p1041 * 51.928558349609375, p1041 * 40.72320556640625, p1041 * 53.928558349609375, p1041 * 44.72320556640625);
      v1429.closePath();
      f89(v1429, p1042[2]);
    } else if (p1043 == 1) {
      v1429.save();
      v1429.translate(p1041 * 55, p1041 * 39.48748779296875);
      f90(v1429, p1041 * -11.5, p1041 * -36, p1041 * 23, p1041 * 72, p1041 * 10);
      v1429.restore();
      f89(v1429, p1042[2], p1042[3], p1041 * 4);
      f94(v1429, p1041 * 54.5, p1041 * 78.48748779296875, p1041 * 22.02271554554524);
      f89(v1429, p1042[4], p1042[3], p1041 * 4);
      v1429.save();
      v1429.translate(p1041 * 55.5, p1041 * 57.287506103515625);
      f90(v1429, p1041 * -9, p1041 * -16, p1041 * 18, p1041 * 32, p1041 * 10);
      v1429.restore();
      f89(v1429, p1042[4]);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 66.5, p1041 * 25.287506103515625);
      v1429.bezierCurveTo(p1041 * 60.5, p1041 * 25.287506103515625, p1041 * 63.5, p1041 * 25.287506103515625, p1041 * 54.5, p1041 * 25.287506103515625);
      v1429.closePath();
      f89(v1429, undefined, p1042[5], p1041 * 4);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 66.5, p1041 * 37.287506103515625);
      v1429.bezierCurveTo(p1041 * 60.5, p1041 * 37.287506103515625, p1041 * 60.5, p1041 * 37.287506103515625, p1041 * 54.5, p1041 * 37.287506103515625);
      v1429.closePath();
      f89(v1429, undefined, p1042[5], p1041 * 4);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 66.5, p1041 * 50.287506103515625);
      v1429.bezierCurveTo(p1041 * 61, p1041 * 50.287506103515625, p1041 * 61, p1041 * 50.287506103515625, p1041 * 55.5, p1041 * 50.287506103515625);
      v1429.closePath();
      f89(v1429, undefined, p1042[5], p1041 * 4);
    } else if (p1043 == 2) {
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 45.928558349609375, p1041 * 55.29463195800781);
      v1429.bezierCurveTo(p1041 * 38.928558349609375, p1041 * 67.29463195800781, p1041 * 38.928558349609375, p1041 * 67.29463195800781, p1041 * 31.928558349609375, p1041 * 79.29463195800781);
      v1429.bezierCurveTo(p1041 * 15.928558349609375, p1041 * 85.29463195800781, p1041 * 17.928558349609375, p1041 * 86.29463195800781, p1041 * 17.928558349609375, p1041 * 90.29463195800781);
      v1429.bezierCurveTo(p1041 * 19.928558349609375, p1041 * 94.29463195800781, p1041 * 21.928558349609375, p1041 * 94.29463195800781, p1041 * 27.928558349609375, p1041 * 92.29463195800781);
      v1429.bezierCurveTo(p1041 * 29.928558349609375, p1041 * 98.29463195800781, p1041 * 30.928558349609375, p1041 * 99.29463195800781, p1041 * 33.928558349609375, p1041 * 99.29463195800781);
      v1429.bezierCurveTo(p1041 * 38.928558349609375, p1041 * 97.29463195800781, p1041 * 38.928558349609375, p1041 * 93.29463195800781, p1041 * 37.928558349609375, p1041 * 86.29463195800781);
      v1429.bezierCurveTo(p1041 * 45.428558349609375, p1041 * 73.29463195800781, p1041 * 51.928558349609375, p1041 * 64.29463195800781, p1041 * 52.928558349609375, p1041 * 60.29463195800781);
      v1429.closePath();
      f89(v1429, p1042[2]);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 55.928558349609375, p1041 * 8.866058349609375);
      v1429.bezierCurveTo(p1041 * 35.928558349609375, p1041 * 35.866058349609375, p1041 * 37.928558349609375, p1041 * 48.866058349609375, p1041 * 46.928558349609375, p1041 * 62.866058349609375);
      v1429.bezierCurveTo(p1041 * 65.92855834960938, p1041 * 72.86605834960938, p1041 * 80.92855834960938, p1041 * 55.866058349609375, p1041 * 93.92855834960938, p1041 * 36.866058349609375);
      v1429.closePath();
      f89(v1429, p1042[3], p1042[4], p1041 * 6);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 93.92855834960938, p1041 * 36.866058349609375);
      v1429.bezierCurveTo(p1041 * 82.92855834960938, p1041 * 37.866058349609375, p1041 * 77.92855834960938, p1041 * 36.866058349609375, p1041 * 67.92855834960938, p1041 * 28.866058349609375);
      v1429.bezierCurveTo(p1041 * 53.928558349609375, p1041 * 16.866058349609375, p1041 * 53.928558349609375, p1041 * 14.866058349609375, p1041 * 55.928558349609375, p1041 * 7.866058349609375);
      v1429.bezierCurveTo(p1041 * 65.92855834960938, p1041 * 4.866058349609375, p1041 * 71.92855834960938, p1041 * 7.866058349609375, p1041 * 83.92855834960938, p1041 * 13.866058349609375);
      v1429.bezierCurveTo(p1041 * 96.92855834960938, p1041 * 21.866058349609375, p1041 * 95.92855834960938, p1041 * 31.866058349609375, p1041 * 92.92855834960938, p1041 * 36.866058349609375);
      v1429.closePath();
      f89(v1429, p1042[3], p1042[4], p1041 * 6);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 68.92855834960938, p1041 * 16.866058349609375);
      v1429.bezierCurveTo(p1041 * 71.92855834960938, p1041 * 13.866058349609375, p1041 * 76.92855834960938, p1041 * 16.866058349609375, p1041 * 79.92855834960938, p1041 * 21.866058349609375);
      v1429.bezierCurveTo(p1041 * 82.92855834960938, p1041 * 24.866058349609375, p1041 * 81.92855834960938, p1041 * 27.866058349609375, p1041 * 73.92855834960938, p1041 * 24.866058349609375);
      v1429.bezierCurveTo(p1041 * 67.92855834960938, p1041 * 20.866058349609375, p1041 * 66.92855834960938, p1041 * 19.866058349609375, p1041 * 67.92855834960938, p1041 * 17.866058349609375);
      v1429.closePath();
      f89(v1429, p1042[2]);
    } else if (p1043 == 3) {
      v1429.scale(0.9, 0.9);
      v1429.translate(p1041 * 6, 0);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 54, p1041 * 0.421875);
      v1429.bezierCurveTo(p1041 * 84, p1041 * 45.421875, p1041 * 89, p1041 * 51.421875, p1041 * 83, p1041 * 74.421875);
      v1429.bezierCurveTo(p1041 * 74, p1041 * 95.421875, p1041 * 46, p1041 * 98.421875, p1041 * 30, p1041 * 78.421875);
      v1429.bezierCurveTo(p1041 * 22, p1041 * 59.421875, p1041 * 27, p1041 * 49.421875, p1041 * 34, p1041 * 36.421875);
      v1429.closePath();
      f89(v1429, p1042[2], p1042[3], p1041 * 6);
      v1429.beginPath();
      v1429.lineCap = "round";
      v1429.lineJoin = "round";
      v1429.moveTo(p1041 * 74, p1041 * 52.421875);
      v1429.bezierCurveTo(p1041 * 77, p1041 * 73.421875, p1041 * 69, p1041 * 81.421875, p1041 * 58, p1041 * 81.421875);
      v1429.bezierCurveTo(p1041 * 66, p1041 * 71.421875, p1041 * 70, p1041 * 66.421875, p1041 * 74, p1041 * 52.421875);
      v1429.closePath();
      f89(v1429, p1042[3]);
    }
    return v1428;
  }
  function f248(p1044, p1045) {
    var v1430 = document.createElement("canvas");
    var v1431 = v1430.getContext("2d");
    v1430.width = p1044 * 110;
    v1430.height = p1044 * 110;
    v1431.globalAlpha = 0.2;
    f94(v1431, p1044 * 55, p1044 * 55, p1044 * 55);
    f89(v1431, p1045[0]);
    return v1430;
  }
  function f249(p1046, p1047, p1048) {
    var v1432 = document.createElement("canvas");
    var v1433 = v1432.getContext("2d");
    v1432.width = p1046 * 185;
    v1432.height = p1046 * 164;
    v1433.translate(0, 0);
    var vF41 = function (p1049, p1050, p1051) {
      var v1434 = document.createElement("canvas");
      var v1435 = v1434.getContext("2d");
      v1434.width = p1049 * 201;
      v1434.height = p1049 * 164;
      v1435.translate(0, p1049 * 5);
      v1435.globalAlpha = p1050 ? 0.5 : 1;
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 74.92746655359852);
      f89(v1435, p1051[0], p1051[0], p1049 * 4);
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 65.9417374971317);
      f89(v1435, p1051[0], p1051[0], p1049 * 4);
      v1435.translate(0, -5);
      v1435.globalAlpha = 1;
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 74.92746655359852);
      f89(v1435, p1051[1], p1051[3], p1049 * 4);
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 65.9417374971317);
      f89(v1435, p1051[1], p1051[2], p1049 * 4);
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 35.9417374971317);
      f89(v1435, p1051[1], p1051[2], p1049 * 20);
      f94(v1435, p1049 * 100.5, p1049 * 82, p1049 * 15.9417374971317);
      f89(v1435, p1051[1], p1051[2], p1049 * 6);
      return v1434;
    }(p1046, p1047, p1048);
    v1433.drawImage(vF41, p1046 * -10, p1046 * 0);
    vF41 = f253(p1046, p1047, p1048, 0);
    v1433.drawImage(vF41, p1046 * -83, p1046 * -40);
    vF41 = f253(p1046, p1047, p1048, Math.PI / 1.4);
    v1433.drawImage(vF41, p1046 * -15, p1046 * -88);
    vF41 = f253(p1046, p1047, p1048, Math.PI / -1.4);
    v1433.drawImage(vF41, p1046 * 15, p1046 * -8);
    return v1432;
  }
  function f250(p1052, p1053, p1054) {
    var v1436 = document.createElement("canvas");
    var v1437 = v1436.getContext("2d");
    v1436.width = p1052 * 167;
    v1436.height = p1052 * 136;
    v1437.globalAlpha = 0.5;
    v1437.save();
    v1437.translate(p1052 * 76.71426391601562, p1052 * 67.85713195800781);
    f90(v1437, p1052 * -57.5, p1052 * -54.5, p1052 * 115, p1052 * 109, p1052 * 15);
    v1437.restore();
    f89(v1437, p1054[0]);
    v1437.globalAlpha = 0.8;
    v1437.save();
    v1437.translate(p1052 * 76.71426391601562, p1052 * 67.85713195800781);
    f90(v1437, p1052 * -57.5, p1052 * -54.5, p1052 * 115, p1052 * 109, p1052 * 15);
    v1437.restore();
    f89(v1437, undefined, p1054[1], p1052 * 7);
    v1437.globalAlpha = 0.5;
    v1437.save();
    v1437.translate(p1052 * 91.21426391601562, p1052 * 67.35713195800781);
    f90(v1437, p1052 * -56, p1052 * -55, p1052 * 115, p1052 * 109, p1052 * 15);
    v1437.restore();
    f89(v1437, p1054[0]);
    v1437.globalAlpha = 1;
    v1437.save();
    v1437.translate(p1052 * 91.21426391601562, p1052 * 67.35713195800781);
    f90(v1437, p1052 * -56, p1052 * -55, p1052 * 115, p1052 * 109, p1052 * 15);
    v1437.restore();
    f89(v1437, vVVVUndefined142, p1054[1], p1052 * 7);
    v1437.beginPath();
    v1437.lineCap = "round";
    v1437.lineJoin = "round";
    v1437.moveTo(p1052 * 131.21426391601562, p1052 * 70.35713195800781);
    v1437.bezierCurveTo(p1052 * 133.21426391601562, p1052 * 95.35713195800781, p1052 * 128.21426391601562, p1052 * 109.35713195800781, p1052 * 108.21426391601562, p1052 * 108.35713195800781);
    f89(v1437, undefined, p1054[1], p1052 * 10);
    return v1436;
  }
  function f251(p1055, p1056, p1057) {
    var v1438 = document.createElement("canvas");
    var v1439 = v1438.getContext("2d");
    v1438.width = p1055 * 450;
    v1438.height = p1055 * 790;
    v1439.translate(p1055 * 5, p1055 * 5);
    v1439.globalAlpha = 0;
    f94(v1439, p1055 * 178.5, p1055 * 172.828125, p1055 * 150);
    f89(v1439, undefined, p1057[0], p1055 * 65);
    f94(v1439, p1055 * 178.5, p1055 * 172.828125, p1055 * 150);
    f89(v1439, vVUndefined, p1057[0], p1055 * 55);
    v1439.closePath();
    v1439.save();
    v1439.translate(p1055 * 177, p1055 * 512.328125);
    f90(v1439, p1055 * -25, p1055 * -202.5, p1055 * 65, p1055 * 405, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[0]);
    v1439.save();
    v1439.translate(p1055 * 136, p1055 * 581.828125);
    f90(v1439, p1055 * -39, p1055 * -23, p1055 * 78, p1055 * 46, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[0]);
    v1439.save();
    v1439.translate(p1055 * 135.5, p1055 * 663.828125);
    f90(v1439, p1055 * -39.5, p1055 * -22, p1055 * 79, p1055 * 44, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[0]);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 114, p1055 * 594.828125);
    v1439.bezierCurveTo(p1055 * 175, p1055 * 596.828125, p1055 * 163, p1055 * 596.828125, p1055 * 172, p1055 * 594.828125);
    v1439.bezierCurveTo(p1055 * 171.5, p1055 * 633.828125, p1055 * 171.5, p1055 * 633.828125, p1055 * 171, p1055 * 672.828125);
    v1439.bezierCurveTo(p1055 * 110, p1055 * 673.828125, p1055 * 140.5, p1055 * 673.328125, p1055 * 110, p1055 * 673.828125);
    v1439.bezierCurveTo(p1055 * 110.5, p1055 * 661.828125, p1055 * 110.5, p1055 * 661.828125, p1055 * 111, p1055 * 649.828125);
    v1439.bezierCurveTo(p1055 * 157, p1055 * 633.828125, p1055 * 134, p1055 * 607.828125, p1055 * 114, p1055 * 594.828125);
    v1439.closePath();
    f89(v1439, p1057[0]);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.translate(0, p1055 * 5);
    v1439.moveTo(p1055 * 140, p1055 * 294.828125);
    v1439.bezierCurveTo(p1055 * 212, p1055 * 295.828125, p1055 * 176.5, p1055 * 295.328125, p1055 * 213, p1055 * 295.828125);
    v1439.bezierCurveTo(p1055 * 201.5, p1055 * 325.328125, p1055 * 201.5, p1055 * 325.328125, p1055 * 190, p1055 * 354.828125);
    v1439.bezierCurveTo(p1055 * 175.5, p1055 * 355.828125, p1055 * 175.5, p1055 * 355.828125, p1055 * 161, p1055 * 356.828125);
    v1439.bezierCurveTo(p1055 * 154.5, p1055 * 328.828125, p1055 * 154.5, p1055 * 328.828125, p1055 * 148, p1055 * 300.828125);
    v1439.closePath();
    f89(v1439, p1057[0]);
    v1439.translate(3, p1055 * -5);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 159, p1055 * 679.828125);
    v1439.bezierCurveTo(p1055 * 180, p1055 * 665.828125, p1055 * 155, p1055 * 675.828125, p1055 * 151, p1055 * 671.828125);
    v1439.bezierCurveTo(p1055 * 154.5, p1055 * 685.328125, p1055 * 154.5, p1055 * 685.328125, p1055 * 158, p1055 * 698.828125);
    v1439.bezierCurveTo(p1055 * 171, p1055 * 699.828125, p1055 * 171, p1055 * 699.828125, p1055 * 184, p1055 * 700.828125);
    v1439.closePath();
    f89(v1439, p1057[0]);
    v1439.save();
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 157, p1055 * 548.828125);
    v1439.bezierCurveTo(p1055 * 157, p1055 * 561.828125, p1055 * 157, p1055 * 561.828125, p1055 * 157, p1055 * 574.828125);
    v1439.bezierCurveTo(p1055 * 132.5, p1055 * 580.828125, p1055 * 132.5, p1055 * 580.828125, p1055 * 108, p1055 * 586.828125);
    v1439.bezierCurveTo(p1055 * 112, p1055 * 599.828125, p1055 * 111, p1055 * 593.828125, p1055 * 112, p1055 * 599.828125);
    v1439.bezierCurveTo(p1055 * 159, p1055 * 603.828125, p1055 * 126.5, p1055 * 601.328125, p1055 * 141, p1055 * 602.828125);
    v1439.bezierCurveTo(p1055 * 145, p1055 * 641.828125, p1055 * 143.5, p1055 * 623.828125, p1055 * 146, p1055 * 644.828125);
    v1439.bezierCurveTo(p1055 * 129.5, p1055 * 645.328125, p1055 * 129.5, p1055 * 645.328125, p1055 * 113, p1055 * 645.828125);
    v1439.bezierCurveTo(p1055 * 107.5, p1055 * 652.828125, p1055 * 107.5, p1055 * 652.828125, p1055 * 102, p1055 * 659.828125);
    v1439.bezierCurveTo(p1055 * 104, p1055 * 669.328125, p1055 * 104, p1055 * 669.328125, p1055 * 106, p1055 * 678.828125);
    v1439.bezierCurveTo(p1055 * 145, p1055 * 679.328125, p1055 * 145, p1055 * 679.328125, p1055 * 184, p1055 * 679.828125);
    v1439.bezierCurveTo(p1055 * 185, p1055 * 615.828125, p1055 * 185, p1055 * 615.828125, p1055 * 186, p1055 * 551.828125);
    v1439.bezierCurveTo(p1055 * 172.5, p1055 * 551.328125, p1055 * 172.5, p1055 * 551.328125, p1055 * 159, p1055 * 550.828125);
    v1439.closePath();
    f89(v1439, p1057[0], p1057[0], p1055 * 7);
    v1439.restore();
    v1439.globalAlpha = 1;
    v1439.translate(p1055 * 15, p1055 * 35);
    f94(v1439, p1055 * 178.5, p1055 * 172.828125, p1055 * 150);
    f89(v1439, undefined, p1057[2], p1055 * 95);
    f94(v1439, p1055 * 178.5, p1055 * 172.828125, p1055 * 150);
    f89(v1439, vVUndefined15, p1057[1], p1055 * 55);
    v1439.closePath();
    v1439.save();
    v1439.translate(p1055 * 177, p1055 * 512.328125);
    f90(v1439, p1055 * -25, p1055 * -202.5, p1055 * 65, p1055 * 405, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[1], p1057[2], p1055 * 20);
    v1439.save();
    v1439.translate(p1055 * 136, p1055 * 581.828125);
    f90(v1439, p1055 * -39, p1055 * -23, p1055 * 78, p1055 * 46, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[1], p1057[2], p1055 * 20);
    v1439.save();
    v1439.translate(p1055 * 135.5, p1055 * 663.828125);
    f90(v1439, p1055 * -39.5, p1055 * -22, p1055 * 79, p1055 * 44, p1055 * 25);
    v1439.restore();
    f89(v1439, p1057[1], p1057[2], p1055 * 20);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 114, p1055 * 594.828125);
    v1439.bezierCurveTo(p1055 * 175, p1055 * 596.828125, p1055 * 163, p1055 * 596.828125, p1055 * 172, p1055 * 594.828125);
    v1439.bezierCurveTo(p1055 * 171.5, p1055 * 633.828125, p1055 * 171.5, p1055 * 633.828125, p1055 * 171, p1055 * 672.828125);
    v1439.bezierCurveTo(p1055 * 110, p1055 * 673.828125, p1055 * 140.5, p1055 * 673.328125, p1055 * 110, p1055 * 673.828125);
    v1439.bezierCurveTo(p1055 * 110.5, p1055 * 661.828125, p1055 * 110.5, p1055 * 661.828125, p1055 * 111, p1055 * 649.828125);
    v1439.bezierCurveTo(p1055 * 157, p1055 * 633.828125, p1055 * 134, p1055 * 607.828125, p1055 * 114, p1055 * 594.828125);
    v1439.closePath();
    f89(v1439, p1057[1]);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.translate(0, p1055 * 5);
    v1439.moveTo(p1055 * 123, p1055 * 294.828125);
    v1439.bezierCurveTo(p1055 * 212, p1055 * 295.828125, p1055 * 190.5, p1055 * 295.328125, p1055 * 250, p1055 * 295.828125);
    v1439.bezierCurveTo(p1055 * 231.5, p1055 * 325.328125, p1055 * 231.5, p1055 * 325.328125, p1055 * 220, p1055 * 354.828125);
    v1439.bezierCurveTo(p1055 * 175.5, p1055 * 355.828125, p1055 * 175.5, p1055 * 355.828125, p1055 * 140, p1055 * 356.828125);
    v1439.bezierCurveTo(p1055 * 123.5, p1055 * 328.828125, p1055 * 123.5, p1055 * 328.828125, p1055 * 123, p1055 * 294.828125);
    v1439.closePath();
    f89(v1439, p1057[1]);
    v1439.translate(0, p1055 * -5);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 159, p1055 * 679.828125);
    v1439.bezierCurveTo(p1055 * 180, p1055 * 665.828125, p1055 * 155, p1055 * 675.828125, p1055 * 151, p1055 * 671.828125);
    v1439.bezierCurveTo(p1055 * 154.5, p1055 * 685.328125, p1055 * 154.5, p1055 * 685.328125, p1055 * 158, p1055 * 698.828125);
    v1439.bezierCurveTo(p1055 * 171, p1055 * 699.828125, p1055 * 171, p1055 * 699.828125, p1055 * 184, p1055 * 700.828125);
    v1439.closePath();
    f89(v1439, p1057[1]);
    v1439.save();
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1055 * 157, p1055 * 548.828125);
    v1439.bezierCurveTo(p1055 * 157, p1055 * 561.828125, p1055 * 157, p1055 * 561.828125, p1055 * 157, p1055 * 574.828125);
    v1439.bezierCurveTo(p1055 * 132.5, p1055 * 580.828125, p1055 * 132.5, p1055 * 580.828125, p1055 * 108, p1055 * 586.828125);
    v1439.bezierCurveTo(p1055 * 112, p1055 * 599.828125, p1055 * 111, p1055 * 593.828125, p1055 * 112, p1055 * 599.828125);
    v1439.bezierCurveTo(p1055 * 159, p1055 * 603.828125, p1055 * 126.5, p1055 * 601.328125, p1055 * 141, p1055 * 602.828125);
    v1439.bezierCurveTo(p1055 * 145, p1055 * 641.828125, p1055 * 143.5, p1055 * 623.828125, p1055 * 146, p1055 * 644.828125);
    v1439.bezierCurveTo(p1055 * 129.5, p1055 * 645.328125, p1055 * 129.5, p1055 * 645.328125, p1055 * 113, p1055 * 645.828125);
    v1439.bezierCurveTo(p1055 * 107.5, p1055 * 652.828125, p1055 * 107.5, p1055 * 652.828125, p1055 * 102, p1055 * 659.828125);
    v1439.bezierCurveTo(p1055 * 104, p1055 * 669.328125, p1055 * 104, p1055 * 669.328125, p1055 * 106, p1055 * 678.828125);
    v1439.bezierCurveTo(p1055 * 145, p1055 * 679.328125, p1055 * 145, p1055 * 679.328125, p1055 * 184, p1055 * 679.828125);
    v1439.bezierCurveTo(p1055 * 185, p1055 * 615.828125, p1055 * 185, p1055 * 615.828125, p1055 * 186, p1055 * 551.828125);
    v1439.bezierCurveTo(p1055 * 172.5, p1055 * 551.328125, p1055 * 172.5, p1055 * 551.328125, p1055 * 159, p1055 * 550.828125);
    v1439.closePath();
    f89(v1439, p1057[1], p1057[1], p1055 * 7);
    v1439.restore();
    return v1438;
  }
  function f252(p1058, p1059) {
    var v1440 = document.createElement("canvas");
    var v1441 = v1440.getContext("2d");
    v1440.width = p1058 * 120;
    v1440.height = p1058 * 280;
    v1441.translate(p1058 * -100, p1058 * -20);
    v1441.beginPath();
    v1441.lineCap = "round";
    v1441.lineJoin = "round";
    v1441.moveTo(p1058 * 228.5, p1058 * 331.953125);
    v1441.bezierCurveTo(p1058 * 228.5, p1058 * 12.953125, p1058 * 228.5, p1058 * 171.453125, p1058 * 228.5, p1058 * 10.953125);
    v1441.bezierCurveTo(p1058 * 196.5, p1058 * 76.953125, p1058 * 206.5, p1058 * 78.953125, p1058 * 191.5, p1058 * 114.953125);
    v1441.bezierCurveTo(p1058 * 162.5, p1058 * 170.953125, p1058 * 206.5, p1058 * 220.953125, p1058 * 210.5, p1058 * 251.953125);
    v1441.bezierCurveTo(p1058 * 218.5, p1058 * 287.953125, p1058 * 220.5, p1058 * 291.953125, p1058 * 228.5, p1058 * 331.953125);
    v1441.closePath();
    f89(v1441, p1059[0]);
    return v1440;
  }
  function f253(p1060, p1061, p1062, p1063) {
    var v1442 = document.createElement("canvas");
    var v1443 = v1442.getContext("2d");
    v1442.width = p1060 * 501;
    v1442.height = p1060 * 564;
    v1443.scale(0.5, 0.5);
    v1443.translate(p1060 * 240, p1060 * 255);
    v1443.rotate(p1063);
    v1443.globalAlpha = p1061 ? 0.5 : 0.2;
    f94(v1443, p1060 * 174, p1060 * 87.984375, p1060 * 20.8806130178211);
    f89(v1443, p1062[0], p1062[0], p1060 * 8);
    f94(v1443, p1060 * 174, p1060 * 87.984375, p1060 * 12.165525060596439);
    f89(v1443, p1062[0], p1062[0], p1060 * 8);
    f94(v1443, p1060 * 174, p1060 * 87.484375, p1060 * 6);
    f89(v1443, p1062[0]);
    f94(v1443, p1060 * 30, p1060 * 87.984375, p1060 * 20.8806130178211);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 30, p1060 * 87.984375, p1060 * 12.165525060596439);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 30, p1060 * 87.484375, p1060 * 6);
    f89(v1443, p1062[0]);
    f94(v1443, p1060 * 100, p1060 * 30, p1060 * 20.8806130178211);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 100, p1060 * 30, p1060 * 12.165525060596439);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 100, p1060 * 30, p1060 * 6);
    f89(v1443, p1062[0]);
    f94(v1443, p1060 * 100, p1060 * 130, p1060 * 20.8806130178211);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 100, p1060 * 130, p1060 * 12.165525060596439);
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    f94(v1443, p1060 * 100, p1060 * 130, p1060 * 6);
    f89(v1443, p1062[0]);
    v1443.save();
    v1443.translate(p1060 * 102, p1060 * 81.984375);
    v1443.rotate(0);
    f90(v1443, p1060 * -74, p1060 * -57, p1060 * 148, p1060 * 114, p1060 * 23);
    v1443.restore();
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    v1443.save();
    v1443.translate(p1060 * 101, p1060 * 64.984375);
    v1443.rotate(0);
    f90(v1443, p1060 * -33, p1060 * -10, p1060 * 66, p1060 * 20, p1060 * 15);
    v1443.restore();
    f89(v1443, p1062[0], p1062[0], p1060 * 4);
    v1443.save();
    v1443.translate(p1060 * 102, p1060 * 63.484375);
    v1443.rotate(0);
    f90(v1443, p1060 * -9, p1060 * -27.5, p1060 * 18, p1060 * 55, p1060 * 15);
    v1443.restore();
    v1443.translate(5, -5);
    v1443.globalAlpha = 1;
    f94(v1443, p1060 * 174, p1060 * 87.984375, p1060 * 20.8806130178211);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 174, p1060 * 87.984375, p1060 * 12.165525060596439);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 174, p1060 * 87.484375, p1060 * 6);
    f89(v1443, p1062[2]);
    f94(v1443, p1060 * 30, p1060 * 87.984375, p1060 * 20.8806130178211);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 30, p1060 * 87.984375, p1060 * 12.165525060596439);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 30, p1060 * 87.484375, p1060 * 6);
    f89(v1443, p1062[2]);
    f94(v1443, p1060 * 102, p1060 * 30, p1060 * 20.8806130178211);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 102, p1060 * 30, p1060 * 12.165525060596439);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 102, p1060 * 30, p1060 * 6);
    f89(v1443, p1062[1]);
    f94(v1443, p1060 * 102, p1060 * 130, p1060 * 20.8806130178211);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 102, p1060 * 130, p1060 * 12.165525060596439);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 102, p1060 * 130, p1060 * 6);
    f89(v1443, p1062[1]);
    v1443.save();
    v1443.translate(p1060 * 102, p1060 * 81.984375);
    f90(v1443, p1060 * -74, p1060 * -57, p1060 * 148, p1060 * 114, p1060 * 23);
    v1443.restore();
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    v1443.save();
    v1443.translate(p1060 * 101, p1060 * 64.984375);
    f90(v1443, p1060 * -33, p1060 * -10, p1060 * 66, p1060 * 20, p1060 * 15);
    v1443.restore();
    f89(v1443, p1062[2], p1062[1], p1060 * 8);
    v1443.save();
    v1443.translate(p1060 * 102, p1060 * 63.484375);
    f90(v1443, p1060 * -9, p1060 * -27.5, p1060 * 18, p1060 * 55, p1060 * 15);
    v1443.restore();
    f89(v1443, p1062[2], p1062[1], p1060 * 8);
    f94(v1443, p1060 * 135, p1060 * 107.36605834960938, p1060 * 21.095023109728988);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 135, p1060 * 107.36605834960938, p1060 * 13);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 135, p1060 * 107.36605834960938, p1060 * 6.082762530298219);
    f89(v1443, p1062[2]);
    f94(v1443, p1060 * 70, p1060 * 107.36605834960938, p1060 * 21.095023109728988);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 70, p1060 * 107.36605834960938, p1060 * 13);
    f89(v1443, p1062[1], p1062[3], p1060 * 8);
    f94(v1443, p1060 * 70, p1060 * 107.36605834960938, p1060 * 6.082762530298219);
    f89(v1443, p1062[2]);
    return v1442;
  }
  function f254(p1064, p1065, p1066) {
    var v1444 = document.createElement("canvas");
    var v1445 = v1444.getContext("2d");
    v1444.width = p1064 * 465;
    v1444.height = p1064 * 405;
    v1445.globalAlpha = 1;
    v1445.translate(p1064 * 6, p1064 * 0);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 39.000030517578125, p1064 * 162.03977966308594);
    v1445.bezierCurveTo(p1064 * 125.00003051757812, p1064 * 84.03977966308594, p1064 * 108.50003051757812, p1064 * 115.03977966308594, p1064 * 178.00003051757812, p1064 * 68.03977966308594);
    v1445.bezierCurveTo(p1064 * 299.0000305175781, p1064 * 146.53977966308594, p1064 * 299.0000305175781, p1064 * 146.53977966308594, p1064 * 420.0000305175781, p1064 * 225.03977966308594);
    v1445.bezierCurveTo(p1064 * 400.0000305175781, p1064 * 288.53977966308594, p1064 * 400.0000305175781, p1064 * 288.53977966308594, p1064 * 380.0000305175781, p1064 * 352.03977966308594);
    v1445.bezierCurveTo(p1064 * 216.50003051757812, p1064 * 345.53977966308594, p1064 * 216.50003051757812, p1064 * 345.53977966308594, p1064 * 53.000030517578125, p1064 * 339.03977966308594);
    v1445.closePath();
    f89(v1445, p1066[3]);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 23.000030517578125, p1064 * 306.94886779785156);
    v1445.bezierCurveTo(p1064 * 5.000030517578125, p1064 * 275.94886779785156, p1064 * 6.000030517578125, p1064 * 201.94886779785156, p1064 * 14.000030517578125, p1064 * 150.94886779785156);
    v1445.bezierCurveTo(p1064 * 40.000030517578125, p1064 * 34.94886779785156, p1064 * 157.00003051757812, p1064 * 14.948867797851562, p1064 * 199.00003051757812, p1064 * 11.948867797851562);
    v1445.bezierCurveTo(p1064 * 331.0000305175781, p1064 * 0.9488677978515625, p1064 * 409.0000305175781, p1064 * 61.94886779785156, p1064 * 428.0000305175781, p1064 * 133.94886779785156);
    v1445.bezierCurveTo(p1064 * 445.0000305175781, p1064 * 207.94886779785156, p1064 * 439.0000305175781, p1064 * 274.94886779785156, p1064 * 426.0000305175781, p1064 * 342.94886779785156);
    v1445.bezierCurveTo(p1064 * 355.0000305175781, p1064 * 207.94886779785156, p1064 * 345.0000305175781, p1064 * 208.94886779785156, p1064 * 333.0000305175781, p1064 * 202.94886779785156);
    v1445.bezierCurveTo(p1064 * 262.0000305175781, p1064 * 143.94886779785156, p1064 * 236.00003051757812, p1064 * 148.94886779785156, p1064 * 189.00003051757812, p1064 * 162.94886779785156);
    v1445.bezierCurveTo(p1064 * 82.00003051757812, p1064 * 190.94886779785156, p1064 * 78.00003051757812, p1064 * 235.94886779785156, p1064 * 62.000030517578125, p1064 * 279.94886779785156);
    v1445.closePath();
    f89(v1445, p1066[0], p1066[1], p1064 * 20);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 17.000030517578125, p1064 * 149.94886779785156);
    v1445.bezierCurveTo(p1064 * 76.00003051757812, p1064 * 67.94886779785156, p1064 * 177.00003051757812, p1064 * 40.94886779785156, p1064 * 232.00003051757812, p1064 * 45.94886779785156);
    v1445.bezierCurveTo(p1064 * 316.0000305175781, p1064 * 46.94886779785156, p1064 * 359.0000305175781, p1064 * 74.94886779785156, p1064 * 428.0000305175781, p1064 * 145.94886779785156);
    v1445.bezierCurveTo(p1064 * 414.0000305175781, p1064 * 73.94886779785156, p1064 * 386.0000305175781, p1064 * 68.94886779785156, p1064 * 359.0000305175781, p1064 * 43.94886779785156);
    v1445.bezierCurveTo(p1064 * 295.0000305175781, p1064 * 5.9488677978515625, p1064 * 239.00003051757812, p1064 * 10.948867797851562, p1064 * 207.00003051757812, p1064 * 10.948867797851562);
    v1445.bezierCurveTo(p1064 * 121.00003051757812, p1064 * 20.948867797851562, p1064 * 104.00003051757812, p1064 * 34.94886779785156, p1064 * 45.000030517578125, p1064 * 84.94886779785156);
    v1445.bezierCurveTo(p1064 * 14.000030517578125, p1064 * 128.94886779785156, p1064 * 18.000030517578125, p1064 * 142.94886779785156, p1064 * 16.000030517578125, p1064 * 151.94886779785156);
    v1445.closePath();
    f89(v1445, p1066[2]);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 23.000030517578125, p1064 * 306.94886779785156);
    v1445.bezierCurveTo(p1064 * 5.000030517578125, p1064 * 275.94886779785156, p1064 * 6.000030517578125, p1064 * 201.94886779785156, p1064 * 14.000030517578125, p1064 * 150.94886779785156);
    v1445.bezierCurveTo(p1064 * 40.000030517578125, p1064 * 34.94886779785156, p1064 * 157.00003051757812, p1064 * 14.948867797851562, p1064 * 199.00003051757812, p1064 * 11.948867797851562);
    v1445.bezierCurveTo(p1064 * 331.0000305175781, p1064 * 0.9488677978515625, p1064 * 409.0000305175781, p1064 * 61.94886779785156, p1064 * 428.0000305175781, p1064 * 133.94886779785156);
    v1445.bezierCurveTo(p1064 * 445.0000305175781, p1064 * 207.94886779785156, p1064 * 439.0000305175781, p1064 * 274.94886779785156, p1064 * 426.0000305175781, p1064 * 342.94886779785156);
    v1445.bezierCurveTo(p1064 * 355.0000305175781, p1064 * 207.94886779785156, p1064 * 345.0000305175781, p1064 * 208.94886779785156, p1064 * 333.0000305175781, p1064 * 202.94886779785156);
    v1445.bezierCurveTo(p1064 * 262.0000305175781, p1064 * 143.94886779785156, p1064 * 236.00003051757812, p1064 * 148.94886779785156, p1064 * 189.00003051757812, p1064 * 162.94886779785156);
    v1445.bezierCurveTo(p1064 * 82.00003051757812, p1064 * 190.94886779785156, p1064 * 78.00003051757812, p1064 * 235.94886779785156, p1064 * 62.000030517578125, p1064 * 279.94886779785156);
    v1445.closePath();
    f89(v1445, vVVVUndefined142, p1066[1], p1064 * 16);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 60.000030517578125, p1064 * 288.03977966308594);
    v1445.bezierCurveTo(p1064 * 183.00003051757812, p1064 * 320.03977966308594, p1064 * 342.0000305175781, p1064 * 306.03977966308594, p1064 * 399.0000305175781, p1064 * 286.03977966308594);
    v1445.bezierCurveTo(p1064 * 420.0000305175781, p1064 * 345.03977966308594, p1064 * 410.0000305175781, p1064 * 335.03977966308594, p1064 * 415.0000305175781, p1064 * 362.03977966308594);
    v1445.bezierCurveTo(p1064 * 351.0000305175781, p1064 * 384.03977966308594, p1064 * 299.0000305175781, p1064 * 389.03977966308594, p1064 * 215.00003051757812, p1064 * 391.03977966308594);
    v1445.bezierCurveTo(p1064 * 128.00003051757812, p1064 * 388.03977966308594, p1064 * 69.00003051757812, p1064 * 373.03977966308594, p1064 * 39.000030517578125, p1064 * 359.03977966308594);
    v1445.closePath();
    f89(v1445, p1066[0], p1066[1], p1064 * 13);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 47.000030517578125, p1064 * 327.03977966308594);
    v1445.bezierCurveTo(p1064 * 203.00003051757812, p1064 * 377.03977966308594, p1064 * 331.0000305175781, p1064 * 349.03977966308594, p1064 * 410.0000305175781, p1064 * 330.03977966308594);
    v1445.closePath();
    f89(v1445, p1066[0], p1066[1], p1064 * 20);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 9.000030517578125, p1064 * 339.1306915283203);
    v1445.bezierCurveTo(p1064 * 2.000030517578125, p1064 * 280.1306915283203, p1064 * 30.000030517578125, p1064 * 219.1306915283203, p1064 * 85.00003051757812, p1064 * 167.1306915283203);
    v1445.bezierCurveTo(p1064 * 174.00003051757812, p1064 * 82.13069152832031, p1064 * 241.00003051757812, p1064 * 101.13069152832031, p1064 * 284.0000305175781, p1064 * 115.13069152832031);
    v1445.bezierCurveTo(p1064 * 333.0000305175781, p1064 * 134.1306915283203, p1064 * 376.0000305175781, p1064 * 177.1306915283203, p1064 * 410.0000305175781, p1064 * 247.1306915283203);
    v1445.bezierCurveTo(p1064 * 439.0000305175781, p1064 * 300.1306915283203, p1064 * 442.0000305175781, p1064 * 346.1306915283203, p1064 * 430.0000305175781, p1064 * 363.1306915283203);
    v1445.bezierCurveTo(p1064 * 418.0000305175781, p1064 * 366.1306915283203, p1064 * 395.0000305175781, p1064 * 295.1306915283203, p1064 * 355.0000305175781, p1064 * 223.1306915283203);
    v1445.bezierCurveTo(p1064 * 299.0000305175781, p1064 * 156.1306915283203, p1064 * 262.0000305175781, p1064 * 155.1306915283203, p1064 * 215.00003051757812, p1064 * 159.1306915283203);
    v1445.bezierCurveTo(p1064 * 133.00003051757812, p1064 * 171.1306915283203, p1064 * 120.00003051757812, p1064 * 193.1306915283203, p1064 * 96.00003051757812, p1064 * 221.1306915283203);
    v1445.bezierCurveTo(p1064 * 49.000030517578125, p1064 * 262.1306915283203, p1064 * 47.000030517578125, p1064 * 306.1306915283203, p1064 * 38.000030517578125, p1064 * 336.1306915283203);
    v1445.bezierCurveTo(p1064 * 30.000030517578125, p1064 * 349.1306915283203, p1064 * 30.000030517578125, p1064 * 349.1306915283203, p1064 * 22.000030517578125, p1064 * 362.1306915283203);
    v1445.closePath();
    f89(v1445, p1066[2], p1066[1], p1064 * 20);
    v1445.beginPath();
    v1445.lineCap = "round";
    v1445.lineJoin = "round";
    v1445.moveTo(p1064 * 228.00003051757812, p1064 * 128.03977966308594);
    v1445.bezierCurveTo(p1064 * 315.0000305175781, p1064 * 131.03977966308594, p1064 * 349.0000305175781, p1064 * 178.03977966308594, p1064 * 386.0000305175781, p1064 * 234.03977966308594);
    v1445.bezierCurveTo(p1064 * 444.0000305175781, p1064 * 329.03977966308594, p1064 * 446.0000305175781, p1064 * 354.03977966308594, p1064 * 427.0000305175781, p1064 * 373.03977966308594);
    v1445.bezierCurveTo(p1064 * 389.0000305175781, p1064 * 389.03977966308594, p1064 * 399.0000305175781, p1064 * 329.03977966308594, p1064 * 361.0000305175781, p1064 * 277.03977966308594);
    v1445.bezierCurveTo(p1064 * 306.0000305175781, p1064 * 191.03977966308594, p1064 * 266.0000305175781, p1064 * 183.03977966308594, p1064 * 220.00003051757812, p1064 * 181.03977966308594);
    v1445.bezierCurveTo(p1064 * 138.00003051757812, p1064 * 184.03977966308594, p1064 * 123.00003051757812, p1064 * 212.03977966308594, p1064 * 89.00003051757812, p1064 * 271.03977966308594);
    v1445.bezierCurveTo(p1064 * 52.000030517578125, p1064 * 349.03977966308594, p1064 * 68.00003051757812, p1064 * 364.03977966308594, p1064 * 33.000030517578125, p1064 * 369.03977966308594);
    v1445.bezierCurveTo(p1064 * 6.000030517578125, p1064 * 366.03977966308594, p1064 * 5.000030517578125, p1064 * 341.03977966308594, p1064 * 26.000030517578125, p1064 * 288.03977966308594);
    v1445.bezierCurveTo(p1064 * 60.000030517578125, p1064 * 207.03977966308594, p1064 * 100.00003051757812, p1064 * 180.03977966308594, p1064 * 113.00003051757812, p1064 * 170.03977966308594);
    v1445.bezierCurveTo(p1064 * 159.00003051757812, p1064 * 132.03977966308594, p1064 * 196.00003051757812, p1064 * 133.03977966308594, p1064 * 226.00003051757812, p1064 * 129.03977966308594);
    v1445.closePath();
    f89(v1445, p1066[0], p1066[1], p1064 * 20);
    return v1444;
  }
  function f255(p1067, p1068, p1069) {
    var v1446 = document.createElement("canvas");
    var v1447 = v1446.getContext("2d");
    v1446.width = p1067 * 88;
    v1446.height = p1067 * 88;
    v1447.save();
    v1447.translate(p1067 * 44, p1067 * 44);
    v1447.rotate(0.52);
    f92(v1447, 6, p1067 * 43, p1067 * 10);
    v1447.restore();
    f89(v1447, p1069[0], p1069[1], p1067 * 3);
    return v1446;
  }
  function f256(p1070, p1071, p1072) {
    var v1448 = document.createElement("canvas");
    var v1449 = v1448.getContext("2d");
    v1448.width = p1070 * 202;
    v1448.height = p1070 * 202;
    v1449.translate(p1070 * 2, p1070 * 1);
    v1449.globalAlpha = p1071 ? 0.5 : 1;
    v1449.translate(0, p1070 * 10);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 41.15177917480469);
    v1449.rotate(0.8);
    f90(v1449, p1070 * -16, p1070 * -16.5, p1070 * 32, p1070 * 33, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 98, p1070 * 22.5089111328125);
    v1449.bezierCurveTo(p1070 * 97.5, p1070 * 41.5089111328125, p1070 * 97.5, p1070 * 41.5089111328125, p1070 * 97, p1070 * 60.5089111328125);
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 147.5, p1070 * 69.5089111328125);
    v1449.rotate(0.2);
    f90(v1449, p1070 * -15.5, p1070 * -16, p1070 * 31, p1070 * 32, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 163, p1070 * 59.50892639160156);
    v1449.bezierCurveTo(p1070 * 147, p1070 * 69.50892639160156, p1070 * 127, p1070 * 82.50892639160156, p1070 * 131, p1070 * 79.50892639160156);
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 143.5, p1070 * 128.2946319580078);
    v1449.rotate(1.24);
    f90(v1449, p1070 * -16.5, p1070 * -17.5, p1070 * 33, p1070 * 35, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 162, p1070 * 135.93748474121094);
    v1449.bezierCurveTo(p1070 * 143.5, p1070 * 128.43748474121094, p1070 * 129, p1070 * 120.93748474121094, p1070 * 125, p1070 * 120.93748474121094);
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 99, p1070 * 156.08035278320312);
    v1449.rotate(0.84);
    f90(v1449, p1070 * -18, p1070 * -18, p1070 * 36, p1070 * 36, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 98, p1070 * 136.08035278320312);
    v1449.bezierCurveTo(p1070 * 98, p1070 * 156.08035278320312, p1070 * 98, p1070 * 156.08035278320312, p1070 * 98, p1070 * 176.08035278320312);
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 54, p1070 * 72.22320556640625);
    v1449.rotate(1.32);
    f90(v1449, p1070 * -18, p1070 * -19, p1070 * 36, p1070 * 38, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 34, p1070 * 60.79463195800781);
    v1449.bezierCurveTo(p1070 * 53.5, p1070 * 72.29463195800781, p1070 * 69, p1070 * 79.79463195800781, p1070 * 73, p1070 * 83.79463195800781);
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 49, p1070 * 127.29463195800781);
    v1449.rotate(1.76);
    f90(v1449, p1070 * -20, p1070 * -17.5, p1070 * 40, p1070 * 35, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 30, p1070 * 141.7946319580078);
    v1449.bezierCurveTo(p1070 * 47, p1070 * 130.2946319580078, p1070 * 64, p1070 * 119.79463195800781, p1070 * 64, p1070 * 118.79463195800781);
    f89(v1449, p1072[2]);
    v1449.globalAlpha = 1;
    v1449.translate(0, p1070 * -10);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 41.15177917480469);
    v1449.rotate(0.8);
    f90(v1449, p1070 * -16, p1070 * -16.5, p1070 * 32, p1070 * 33, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 98, p1070 * 22.5089111328125);
    v1449.bezierCurveTo(p1070 * 97.5, p1070 * 41.5089111328125, p1070 * 97.5, p1070 * 41.5089111328125, p1070 * 97, p1070 * 60.5089111328125);
    f89(v1449, vVVVUndefined17, p1072[4], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 147.5, p1070 * 69.5089111328125);
    v1449.rotate(0.2);
    f90(v1449, p1070 * -15.5, p1070 * -16, p1070 * 31, p1070 * 32, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 163, p1070 * 59.50892639160156);
    v1449.bezierCurveTo(p1070 * 147, p1070 * 69.50892639160156, p1070 * 127, p1070 * 82.50892639160156, p1070 * 131, p1070 * 79.50892639160156);
    f89(v1449, undefined, p1072[4], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 143.5, p1070 * 128.2946319580078);
    v1449.rotate(1.24);
    f90(v1449, p1070 * -16.5, p1070 * -17.5, p1070 * 33, p1070 * 35, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 162, p1070 * 135.93748474121094);
    v1449.bezierCurveTo(p1070 * 143.5, p1070 * 128.43748474121094, p1070 * 129, p1070 * 120.93748474121094, p1070 * 125, p1070 * 120.93748474121094);
    f89(v1449, undefined, p1072[4], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 99, p1070 * 156.08035278320312);
    v1449.rotate(0.84);
    f90(v1449, p1070 * -18, p1070 * -18, p1070 * 36, p1070 * 36, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 98, p1070 * 136.08035278320312);
    v1449.bezierCurveTo(p1070 * 98, p1070 * 156.08035278320312, p1070 * 98, p1070 * 156.08035278320312, p1070 * 98, p1070 * 176.08035278320312);
    f89(v1449, vVVVUndefined1422, p1072[4], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 54, p1070 * 72.22320556640625);
    v1449.rotate(1.32);
    f90(v1449, p1070 * -18, p1070 * -19, p1070 * 36, p1070 * 38, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 34, p1070 * 60.79463195800781);
    v1449.bezierCurveTo(p1070 * 53.5, p1070 * 72.29463195800781, p1070 * 69, p1070 * 79.79463195800781, p1070 * 73, p1070 * 83.79463195800781);
    f89(v1449, undefined, p1072[4], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 49, p1070 * 127.29463195800781);
    v1449.rotate(1.76);
    f90(v1449, p1070 * -20, p1070 * -17.5, p1070 * 40, p1070 * 35, p1070 * 7);
    v1449.restore();
    f89(v1449, p1072[3], p1072[4], p1070 * 5);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1070 * 30, p1070 * 141.7946319580078);
    v1449.bezierCurveTo(p1070 * 47, p1070 * 130.2946319580078, p1070 * 64, p1070 * 119.79463195800781, p1070 * 64, p1070 * 118.79463195800781);
    f89(v1449, undefined, p1072[4], p1070 * 5);
    v1449.globalAlpha = p1071 ? 0.5 : 1;
    v1449.translate(0, p1070 * 10);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 99);
    f92(v1449, 6, p1070 * 70.28669492273468, p1070 * 10);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 99);
    f92(v1449, 6, p1070 * 56.455940020351264, p1070 * 10);
    v1449.restore();
    f89(v1449, p1072[2]);
    v1449.globalAlpha = 1;
    v1449.translate(0, p1070 * -10);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 99);
    f92(v1449, 6, p1070 * 70.28669492273468, p1070 * 10);
    v1449.restore();
    f89(v1449, p1072[5], p1072[6], p1070 * 5);
    v1449.save();
    v1449.translate(p1070 * 98, p1070 * 99);
    f92(v1449, 6, p1070 * 56.455940020351264, p1070 * 10);
    v1449.restore();
    f89(v1449, p1072[7], p1072[8], p1070 * 7);
    return v1448;
  }
  function f257(p1073, p1074, p1075) {
    var v1450 = document.createElement("canvas");
    var v1451 = v1450.getContext("2d");
    v1450.width = p1073 * 247;
    v1450.height = p1073 * 247;
    v1451.translate(0, p1073 * 10);
    v1451.globalAlpha = p1074 ? 0.5 : 1;
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 150, p1073 * 62);
    v1451.bezierCurveTo(p1073 * 151.5, p1073 * 71.5, p1073 * 149, p1073 * 70, p1073 * 153, p1073 * 81);
    v1451.bezierCurveTo(p1073 * 158, p1073 * 73.5, p1073 * 158, p1073 * 73.5, p1073 * 163, p1073 * 66);
    v1451.closePath();
    f89(v1451, p1075[0]);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 164, p1073 * 171);
    v1451.bezierCurveTo(p1073 * 149, p1073 * 159, p1073 * 156.5, p1073 * 165, p1073 * 149, p1073 * 159);
    v1451.bezierCurveTo(p1073 * 149, p1073 * 167, p1073 * 149, p1073 * 170, p1073 * 152, p1073 * 178);
    v1451.closePath();
    f89(v1451, p1075[0]);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 132, p1073 * 95);
    v1451.bezierCurveTo(p1073 * 154, p1073 * 102, p1073 * 154, p1073 * 126, p1073 * 137, p1073 * 139);
    v1451.bezierCurveTo(p1073 * 113, p1073 * 152, p1073 * 89, p1073 * 136, p1073 * 80, p1073 * 121);
    v1451.bezierCurveTo(p1073 * 57, p1073 * 89, p1073 * 69, p1073 * 63, p1073 * 79, p1073 * 52);
    v1451.bezierCurveTo(p1073 * 110, p1073 * 20, p1073 * 139, p1073 * 21, p1073 * 150, p1073 * 25);
    v1451.bezierCurveTo(p1073 * 197, p1073 * 36, p1073 * 221, p1073 * 67, p1073 * 226, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 234, p1073 * 134, p1073 * 214, p1073 * 177, p1073 * 195, p1073 * 197);
    v1451.bezierCurveTo(p1073 * 144, p1073 * 242, p1073 * 79, p1073 * 216, p1073 * 58, p1073 * 206);
    v1451.bezierCurveTo(p1073 * 13, p1073 * 174, p1073 * 20, p1073 * 134, p1073 * 23, p1073 * 107);
    v1451.bezierCurveTo(p1073 * 26, p1073 * 78, p1073 * 33, p1073 * 60, p1073 * 38, p1073 * 43);
    v1451.bezierCurveTo(p1073 * 42, p1073 * 32, p1073 * 47, p1073 * 32, p1073 * 50, p1073 * 36);
    v1451.bezierCurveTo(p1073 * 54, p1073 * 37, p1073 * 50, p1073 * 52, p1073 * 44, p1073 * 87);
    v1451.bezierCurveTo(p1073 * 40, p1073 * 115, p1073 * 46, p1073 * 142, p1073 * 57, p1073 * 158);
    v1451.bezierCurveTo(p1073 * 76, p1073 * 189, p1073 * 129, p1073 * 182, p1073 * 152, p1073 * 173);
    v1451.bezierCurveTo(p1073 * 186, p1073 * 156, p1073 * 191, p1073 * 106, p1073 * 176, p1073 * 85);
    v1451.bezierCurveTo(p1073 * 159, p1073 * 61, p1073 * 132, p1073 * 62, p1073 * 122, p1073 * 66);
    v1451.bezierCurveTo(p1073 * 108, p1073 * 74, p1073 * 108, p1073 * 89, p1073 * 116, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 123, p1073 * 92, p1073 * 130, p1073 * 93, p1073 * 131, p1073 * 94);
    v1451.closePath();
    f89(v1451, p1075[0]);
    v1451.translate(0, p1073 * -10);
    v1451.globalAlpha = 1;
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 150, p1073 * 62);
    v1451.bezierCurveTo(p1073 * 151.5, p1073 * 71.5, p1073 * 149, p1073 * 70, p1073 * 153, p1073 * 81);
    v1451.bezierCurveTo(p1073 * 158, p1073 * 73.5, p1073 * 158, p1073 * 73.5, p1073 * 163, p1073 * 66);
    v1451.closePath();
    f89(v1451, p1075[5]);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 164, p1073 * 171);
    v1451.bezierCurveTo(p1073 * 149, p1073 * 159, p1073 * 156.5, p1073 * 165, p1073 * 149, p1073 * 159);
    v1451.bezierCurveTo(p1073 * 149, p1073 * 167, p1073 * 149, p1073 * 170, p1073 * 152, p1073 * 178);
    v1451.closePath();
    f89(v1451, p1075[5]);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 132, p1073 * 95);
    v1451.bezierCurveTo(p1073 * 154, p1073 * 102, p1073 * 154, p1073 * 126, p1073 * 137, p1073 * 139);
    v1451.bezierCurveTo(p1073 * 113, p1073 * 152, p1073 * 89, p1073 * 136, p1073 * 80, p1073 * 121);
    v1451.bezierCurveTo(p1073 * 57, p1073 * 89, p1073 * 69, p1073 * 63, p1073 * 79, p1073 * 52);
    v1451.bezierCurveTo(p1073 * 110, p1073 * 20, p1073 * 139, p1073 * 21, p1073 * 150, p1073 * 25);
    v1451.bezierCurveTo(p1073 * 197, p1073 * 36, p1073 * 221, p1073 * 67, p1073 * 226, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 234, p1073 * 134, p1073 * 214, p1073 * 177, p1073 * 195, p1073 * 197);
    v1451.bezierCurveTo(p1073 * 144, p1073 * 242, p1073 * 79, p1073 * 216, p1073 * 58, p1073 * 206);
    v1451.bezierCurveTo(p1073 * 13, p1073 * 174, p1073 * 20, p1073 * 134, p1073 * 23, p1073 * 107);
    v1451.bezierCurveTo(p1073 * 26, p1073 * 78, p1073 * 33, p1073 * 60, p1073 * 38, p1073 * 43);
    v1451.bezierCurveTo(p1073 * 42, p1073 * 32, p1073 * 47, p1073 * 32, p1073 * 50, p1073 * 36);
    v1451.bezierCurveTo(p1073 * 54, p1073 * 37, p1073 * 50, p1073 * 52, p1073 * 44, p1073 * 87);
    v1451.bezierCurveTo(p1073 * 40, p1073 * 115, p1073 * 46, p1073 * 142, p1073 * 57, p1073 * 158);
    v1451.bezierCurveTo(p1073 * 76, p1073 * 189, p1073 * 129, p1073 * 182, p1073 * 152, p1073 * 173);
    v1451.bezierCurveTo(p1073 * 186, p1073 * 156, p1073 * 191, p1073 * 106, p1073 * 176, p1073 * 85);
    v1451.bezierCurveTo(p1073 * 159, p1073 * 61, p1073 * 132, p1073 * 62, p1073 * 122, p1073 * 66);
    v1451.bezierCurveTo(p1073 * 108, p1073 * 74, p1073 * 108, p1073 * 89, p1073 * 116, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 123, p1073 * 92, p1073 * 130, p1073 * 93, p1073 * 131, p1073 * 94);
    v1451.closePath();
    f89(v1451, p1075[1], p1075[2], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 137, p1073 * 137);
    v1451.bezierCurveTo(p1073 * 145, p1073 * 125, p1073 * 138, p1073 * 108, p1073 * 123, p1073 * 104);
    v1451.bezierCurveTo(p1073 * 81, p1073 * 101, p1073 * 88, p1073 * 77, p1073 * 98, p1073 * 65);
    v1451.bezierCurveTo(p1073 * 117, p1073 * 38, p1073 * 138, p1073 * 39, p1073 * 165, p1073 * 52);
    v1451.bezierCurveTo(p1073 * 197, p1073 * 72, p1073 * 207, p1073 * 111, p1073 * 197, p1073 * 140);
    v1451.bezierCurveTo(p1073 * 182, p1073 * 180, p1073 * 161, p1073 * 197, p1073 * 112, p1073 * 194);
    v1451.bezierCurveTo(p1073 * 58, p1073 * 194, p1073 * 37, p1073 * 170, p1073 * 34, p1073 * 142);
    v1451.bezierCurveTo(p1073 * 29, p1073 * 102, p1073 * 40, p1073 * 63, p1073 * 51, p1073 * 45);
    v1451.bezierCurveTo(p1073 * 43, p1073 * 78, p1073 * 41, p1073 * 103, p1073 * 43, p1073 * 122);
    v1451.bezierCurveTo(p1073 * 51, p1073 * 158, p1073 * 63, p1073 * 174, p1073 * 95, p1073 * 179);
    v1451.bezierCurveTo(p1073 * 129, p1073 * 186, p1073 * 169, p1073 * 172, p1073 * 177, p1073 * 144);
    v1451.bezierCurveTo(p1073 * 197, p1073 * 105, p1073 * 172, p1073 * 76, p1073 * 160, p1073 * 71);
    v1451.bezierCurveTo(p1073 * 125, p1073 * 52, p1073 * 111, p1073 * 73, p1073 * 111, p1073 * 81);
    v1451.bezierCurveTo(p1073 * 106, p1073 * 93, p1073 * 140, p1073 * 92, p1073 * 147, p1073 * 107);
    v1451.bezierCurveTo(p1073 * 153, p1073 * 128, p1073 * 140, p1073 * 135, p1073 * 137, p1073 * 139);
    v1451.closePath();
    f89(v1451, p1075[3]);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 132, p1073 * 95);
    v1451.bezierCurveTo(p1073 * 154, p1073 * 102, p1073 * 154, p1073 * 126, p1073 * 137, p1073 * 139);
    v1451.bezierCurveTo(p1073 * 113, p1073 * 152, p1073 * 89, p1073 * 136, p1073 * 80, p1073 * 121);
    v1451.bezierCurveTo(p1073 * 57, p1073 * 89, p1073 * 69, p1073 * 63, p1073 * 79, p1073 * 52);
    v1451.bezierCurveTo(p1073 * 110, p1073 * 20, p1073 * 139, p1073 * 21, p1073 * 150, p1073 * 25);
    v1451.bezierCurveTo(p1073 * 197, p1073 * 36, p1073 * 221, p1073 * 67, p1073 * 226, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 234, p1073 * 134, p1073 * 214, p1073 * 177, p1073 * 195, p1073 * 197);
    v1451.bezierCurveTo(p1073 * 144, p1073 * 242, p1073 * 79, p1073 * 216, p1073 * 58, p1073 * 206);
    v1451.bezierCurveTo(p1073 * 13, p1073 * 174, p1073 * 20, p1073 * 134, p1073 * 23, p1073 * 107);
    v1451.bezierCurveTo(p1073 * 26, p1073 * 78, p1073 * 33, p1073 * 60, p1073 * 38, p1073 * 43);
    v1451.bezierCurveTo(p1073 * 42, p1073 * 32, p1073 * 47, p1073 * 32, p1073 * 50, p1073 * 36);
    v1451.bezierCurveTo(p1073 * 54, p1073 * 37, p1073 * 50, p1073 * 52, p1073 * 44, p1073 * 87);
    v1451.bezierCurveTo(p1073 * 40, p1073 * 115, p1073 * 46, p1073 * 142, p1073 * 57, p1073 * 158);
    v1451.bezierCurveTo(p1073 * 76, p1073 * 189, p1073 * 129, p1073 * 182, p1073 * 152, p1073 * 173);
    v1451.bezierCurveTo(p1073 * 186, p1073 * 156, p1073 * 191, p1073 * 106, p1073 * 176, p1073 * 85);
    v1451.bezierCurveTo(p1073 * 159, p1073 * 61, p1073 * 132, p1073 * 62, p1073 * 122, p1073 * 66);
    v1451.bezierCurveTo(p1073 * 108, p1073 * 74, p1073 * 108, p1073 * 89, p1073 * 116, p1073 * 90);
    v1451.bezierCurveTo(p1073 * 123, p1073 * 92, p1073 * 130, p1073 * 93, p1073 * 131, p1073 * 94);
    v1451.closePath();
    f89(v1451, undefined, p1075[2], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 82, p1073 * 63);
    v1451.bezierCurveTo(p1073 * 91, p1073 * 64, p1073 * 96, p1073 * 62, p1073 * 98, p1073 * 53);
    v1451.bezierCurveTo(p1073 * 91, p1073 * 45, p1073 * 85, p1073 * 42, p1073 * 78, p1073 * 41);
    v1451.bezierCurveTo(p1073 * 81, p1073 * 51, p1073 * 82, p1073 * 57, p1073 * 82, p1073 * 63);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 148, p1073 * 40);
    v1451.bezierCurveTo(p1073 * 140, p1073 * 52, p1073 * 131, p1073 * 51, p1073 * 123, p1073 * 43);
    v1451.bezierCurveTo(p1073 * 123, p1073 * 25, p1073 * 129, p1073 * 17, p1073 * 134, p1073 * 12);
    v1451.bezierCurveTo(p1073 * 138, p1073 * 35, p1073 * 142, p1073 * 31, p1073 * 148, p1073 * 40);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 189, p1073 * 43);
    v1451.bezierCurveTo(p1073 * 191, p1073 * 54, p1073 * 196, p1073 * 58, p1073 * 205, p1073 * 59);
    v1451.bezierCurveTo(p1073 * 211, p1073 * 42, p1073 * 214, p1073 * 37, p1073 * 216, p1073 * 31);
    v1451.bezierCurveTo(p1073 * 202, p1073 * 34, p1073 * 195, p1073 * 39, p1073 * 190, p1073 * 43);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 216, p1073 * 98);
    v1451.bezierCurveTo(p1073 * 219, p1073 * 105, p1073 * 225, p1073 * 107, p1073 * 230, p1073 * 109);
    v1451.bezierCurveTo(p1073 * 227, p1073 * 113, p1073 * 221, p1073 * 115, p1073 * 215, p1073 * 115);
    v1451.bezierCurveTo(p1073 * 208, p1073 * 109, p1073 * 211, p1073 * 101, p1073 * 216, p1073 * 98);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 180, p1073 * 85);
    v1451.bezierCurveTo(p1073 * 193, p1073 * 86, p1073 * 196, p1073 * 98, p1073 * 191, p1073 * 108);
    v1451.bezierCurveTo(p1073 * 179, p1073 * 112, p1073 * 167, p1073 * 113, p1073 * 155, p1073 * 111);
    v1451.bezierCurveTo(p1073 * 169, p1073 * 100, p1073 * 176, p1073 * 96, p1073 * 180, p1073 * 85);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 96, p1073 * 114);
    v1451.bezierCurveTo(p1073 * 102, p1073 * 109, p1073 * 112, p1073 * 110, p1073 * 114, p1073 * 118);
    v1451.bezierCurveTo(p1073 * 111, p1073 * 134, p1073 * 102, p1073 * 143, p1073 * 95, p1073 * 147);
    v1451.bezierCurveTo(p1073 * 98, p1073 * 123, p1073 * 97, p1073 * 119, p1073 * 96, p1073 * 115);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 79, p1073 * 92);
    v1451.bezierCurveTo(p1073 * 86, p1073 * 95, p1073 * 89, p1073 * 102, p1073 * 83, p1073 * 111);
    v1451.bezierCurveTo(p1073 * 70, p1073 * 110, p1073 * 61, p1073 * 107, p1073 * 54, p1073 * 100);
    v1451.bezierCurveTo(p1073 * 70, p1073 * 97, p1073 * 70, p1073 * 95, p1073 * 78, p1073 * 92);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 39, p1073 * 130);
    v1451.bezierCurveTo(p1073 * 37, p1073 * 141, p1073 * 41, p1073 * 143, p1073 * 48, p1073 * 144);
    v1451.bezierCurveTo(p1073 * 54, p1073 * 134, p1073 * 55, p1073 * 131, p1073 * 56, p1073 * 123);
    v1451.bezierCurveTo(p1073 * 47, p1073 * 129, p1073 * 43, p1073 * 129, p1073 * 39, p1073 * 129);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 113, p1073 * 189);
    v1451.bezierCurveTo(p1073 * 119, p1073 * 201, p1073 * 127, p1073 * 198, p1073 * 134, p1073 * 192);
    v1451.bezierCurveTo(p1073 * 128, p1073 * 175, p1073 * 128, p1073 * 173, p1073 * 128, p1073 * 165);
    v1451.bezierCurveTo(p1073 * 117, p1073 * 176, p1073 * 116, p1073 * 182, p1073 * 113, p1073 * 187);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 74, p1073 * 154);
    v1451.bezierCurveTo(p1073 * 76, p1073 * 163, p1073 * 76, p1073 * 170, p1073 * 75, p1073 * 177);
    v1451.bezierCurveTo(p1073 * 68, p1073 * 179, p1073 * 66, p1073 * 176, p1073 * 63, p1073 * 171);
    v1451.bezierCurveTo(p1073 * 69, p1073 * 164, p1073 * 72, p1073 * 159, p1073 * 74, p1073 * 154);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 206, p1073 * 152);
    v1451.bezierCurveTo(p1073 * 198, p1073 * 158, p1073 * 198, p1073 * 166, p1073 * 201, p1073 * 171);
    v1451.bezierCurveTo(p1073 * 209, p1073 * 170, p1073 * 221, p1073 * 170, p1073 * 226, p1073 * 172);
    v1451.bezierCurveTo(p1073 * 219, p1073 * 159, p1073 * 210, p1073 * 155, p1073 * 207, p1073 * 153);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 181, p1073 * 184);
    v1451.bezierCurveTo(p1073 * 170, p1073 * 184, p1073 * 167, p1073 * 187, p1073 * 163, p1073 * 195);
    v1451.bezierCurveTo(p1073 * 171, p1073 * 207, p1073 * 183, p1073 * 214, p1073 * 191, p1073 * 217);
    v1451.bezierCurveTo(p1073 * 183, p1073 * 204, p1073 * 184, p1073 * 196, p1073 * 181, p1073 * 184);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 66, p1073 * 199);
    v1451.bezierCurveTo(p1073 * 73, p1073 * 197, p1073 * 78, p1073 * 199, p1073 * 79, p1073 * 206);
    v1451.bezierCurveTo(p1073 * 71, p1073 * 216, p1073 * 67, p1073 * 221, p1073 * 57, p1073 * 223);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 182, p1073 * 143);
    v1451.bezierCurveTo(p1073 * 183, p1073 * 146, p1073 * 183, p1073 * 149, p1073 * 179, p1073 * 152);
    v1451.bezierCurveTo(p1073 * 174, p1073 * 146, p1073 * 174, p1073 * 146, p1073 * 169, p1073 * 140);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 32, p1073 * 159);
    v1451.bezierCurveTo(p1073 * 45, p1073 * 160, p1073 * 48, p1073 * 164, p1073 * 45, p1073 * 175);
    v1451.bezierCurveTo(p1073 * 28, p1073 * 183, p1073 * 25, p1073 * 184, p1073 * 19, p1073 * 184);
    v1451.bezierCurveTo(p1073 * 30, p1073 * 170, p1073 * 29, p1073 * 164, p1073 * 31, p1073 * 160);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 110, p1073 * 214);
    v1451.bezierCurveTo(p1073 * 106, p1073 * 212, p1073 * 104, p1073 * 213, p1073 * 102, p1073 * 218);
    v1451.bezierCurveTo(p1073 * 104, p1073 * 220, p1073 * 107, p1073 * 222, p1073 * 110, p1073 * 224);
    v1451.bezierCurveTo(p1073 * 110.5, p1073 * 219, p1073 * 110.5, p1073 * 219, p1073 * 111, p1073 * 214);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 40, p1073 * 52);
    v1451.bezierCurveTo(p1073 * 41, p1073 * 57, p1073 * 40, p1073 * 61, p1073 * 34, p1073 * 60);
    v1451.bezierCurveTo(p1073 * 31.5, p1073 * 55, p1073 * 31.5, p1073 * 55, p1073 * 29, p1073 * 50);
    v1451.bezierCurveTo(p1073 * 34, p1073 * 50.5, p1073 * 34, p1073 * 50.5, p1073 * 39, p1073 * 51);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1073 * 31, p1073 * 81);
    v1451.bezierCurveTo(p1073 * 37, p1073 * 84, p1073 * 38, p1073 * 90, p1073 * 34, p1073 * 99);
    v1451.bezierCurveTo(p1073 * 23, p1073 * 97, p1073 * 19, p1073 * 96, p1073 * 16, p1073 * 93);
    v1451.bezierCurveTo(p1073 * 24, p1073 * 88, p1073 * 28, p1073 * 85, p1073 * 30, p1073 * 81);
    v1451.closePath();
    f89(v1451, p1075[4], p1075[5], p1073 * 5);
    return v1450;
  }
  function f258(p1076, p1077, p1078) {
    var v1452 = document.createElement("canvas");
    var v1453 = v1452.getContext("2d");
    v1452.width = p1076 * 158;
    v1452.height = p1076 * 201;
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 96.5, p1076 * 76.421875);
    v1453.bezierCurveTo(p1076 * 100.5, p1076 * 64.421875, p1076 * 103.5, p1076 * 62.421875, p1076 * 110.5, p1076 * 65.421875);
    v1453.bezierCurveTo(p1076 * 116.5, p1076 * 66.421875, p1076 * 117.5, p1076 * 67.421875, p1076 * 112.5, p1076 * 73.421875);
    v1453.bezierCurveTo(p1076 * 107, p1076 * 79.921875, p1076 * 107, p1076 * 79.921875, p1076 * 101.5, p1076 * 86.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 61.5, p1076 * 78.421875);
    v1453.bezierCurveTo(p1076 * 57.5, p1076 * 73.421875, p1076 * 51.5, p1076 * 66.421875, p1076 * 45.5, p1076 * 68.421875);
    v1453.bezierCurveTo(p1076 * 32.5, p1076 * 73.421875, p1076 * 38.5, p1076 * 75.421875, p1076 * 46.5, p1076 * 81.421875);
    v1453.bezierCurveTo(p1076 * 51.5, p1076 * 84.921875, p1076 * 51.5, p1076 * 84.921875, p1076 * 56.5, p1076 * 88.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 116.5, p1076 * 127.421875);
    v1453.bezierCurveTo(p1076 * 124.5, p1076 * 108.421875, p1076 * 129.5, p1076 * 104.421875, p1076 * 141.5, p1076 * 107.421875);
    v1453.bezierCurveTo(p1076 * 156.5, p1076 * 112.421875, p1076 * 153.5, p1076 * 113.421875, p1076 * 132.5, p1076 * 134.421875);
    v1453.bezierCurveTo(p1076 * 123.5, p1076 * 141.921875, p1076 * 123.5, p1076 * 141.921875, p1076 * 114.5, p1076 * 149.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 41.5, p1076 * 134.421875);
    v1453.bezierCurveTo(p1076 * 30.5, p1076 * 119.421875, p1076 * 25.5, p1076 * 111.421875, p1076 * 12.5, p1076 * 115.421875);
    v1453.bezierCurveTo(p1076 * 4.5, p1076 * 120.421875, p1076 * 4.5, p1076 * 121.421875, p1076 * 26.5, p1076 * 142.421875);
    v1453.bezierCurveTo(p1076 * 35, p1076 * 149.921875, p1076 * 35, p1076 * 149.921875, p1076 * 43.5, p1076 * 157.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 78.5, p1076 * 51.921875);
    v1453.bezierCurveTo(p1076 * 99.5, p1076 * 75.921875, p1076 * 110.5, p1076 * 96.921875, p1076 * 118.5, p1076 * 120.921875);
    v1453.bezierCurveTo(p1076 * 121.5, p1076 * 140.921875, p1076 * 107.5, p1076 * 179.921875, p1076 * 75.5, p1076 * 183.921875);
    v1453.bezierCurveTo(p1076 * 30.5, p1076 * 169.921875, p1076 * 37.5, p1076 * 131.921875, p1076 * 34.5, p1076 * 120.921875);
    v1453.bezierCurveTo(p1076 * 41.5, p1076 * 89.921875, p1076 * 61.5, p1076 * 67.921875, p1076 * 78.5, p1076 * 51.921875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 72.5, p1076 * 72.421875);
    v1453.bezierCurveTo(p1076 * 76.5, p1076 * 79.421875, p1076 * 79.5, p1076 * 80.421875, p1076 * 83.5, p1076 * 73.421875);
    v1453.bezierCurveTo(p1076 * 80.5, p1076 * 96.921875, p1076 * 79.5, p1076 * 114.421875, p1076 * 77.5, p1076 * 120.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 42.5, p1076 * 163.421875);
    v1453.bezierCurveTo(p1076 * 62.5, p1076 * 185.421875, p1076 * 86.5, p1076 * 186.421875, p1076 * 111.5, p1076 * 165.421875);
    v1453.bezierCurveTo(p1076 * 107.5, p1076 * 176.421875, p1076 * 95.5, p1076 * 187.421875, p1076 * 75.5, p1076 * 188.421875);
    v1453.bezierCurveTo(p1076 * 53.5, p1076 * 188.421875, p1076 * 43.5, p1076 * 171.421875, p1076 * 42.5, p1076 * 164.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 8);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 79.5, p1076 * 61.421875);
    v1453.bezierCurveTo(p1076 * 88.5, p1076 * 31.421875, p1076 * 81.5, p1076 * 16.421875, p1076 * 75.5, p1076 * 7.421875);
    v1453.bezierCurveTo(p1076 * 77.5, p1076 * 28.421875, p1076 * 77.5, p1076 * 37.421875, p1076 * 68.5, p1076 * 42.421875);
    v1453.bezierCurveTo(p1076 * 79.5, p1076 * 57.421875, p1076 * 79.5, p1076 * 58.421875, p1076 * 80.5, p1076 * 61.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 72.5, p1076 * 72.421875);
    v1453.bezierCurveTo(p1076 * 76.5, p1076 * 79.421875, p1076 * 79.5, p1076 * 80.421875, p1076 * 83.5, p1076 * 73.421875);
    v1453.bezierCurveTo(p1076 * 80.5, p1076 * 96.921875, p1076 * 79.5, p1076 * 114.421875, p1076 * 77.5, p1076 * 120.421875);
    v1453.closePath();
    f89(v1453, p1078[8], p1078[8], p1076 * 10);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 96.5, p1076 * 76.421875);
    v1453.bezierCurveTo(p1076 * 100.5, p1076 * 64.421875, p1076 * 103.5, p1076 * 62.421875, p1076 * 110.5, p1076 * 65.421875);
    v1453.bezierCurveTo(p1076 * 116.5, p1076 * 66.421875, p1076 * 117.5, p1076 * 67.421875, p1076 * 112.5, p1076 * 73.421875);
    v1453.bezierCurveTo(p1076 * 107, p1076 * 79.921875, p1076 * 107, p1076 * 79.921875, p1076 * 101.5, p1076 * 86.421875);
    v1453.closePath();
    f89(v1453, p1078[1], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 61.5, p1076 * 78.421875);
    v1453.bezierCurveTo(p1076 * 57.5, p1076 * 73.421875, p1076 * 51.5, p1076 * 66.421875, p1076 * 45.5, p1076 * 68.421875);
    v1453.bezierCurveTo(p1076 * 32.5, p1076 * 73.421875, p1076 * 38.5, p1076 * 75.421875, p1076 * 46.5, p1076 * 81.421875);
    v1453.bezierCurveTo(p1076 * 51.5, p1076 * 84.921875, p1076 * 51.5, p1076 * 84.921875, p1076 * 56.5, p1076 * 88.421875);
    v1453.closePath();
    f89(v1453, p1078[1], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 116.5, p1076 * 127.421875);
    v1453.bezierCurveTo(p1076 * 124.5, p1076 * 108.421875, p1076 * 129.5, p1076 * 104.421875, p1076 * 141.5, p1076 * 107.421875);
    v1453.bezierCurveTo(p1076 * 156.5, p1076 * 112.421875, p1076 * 153.5, p1076 * 113.421875, p1076 * 132.5, p1076 * 134.421875);
    v1453.bezierCurveTo(p1076 * 123.5, p1076 * 141.921875, p1076 * 123.5, p1076 * 141.921875, p1076 * 114.5, p1076 * 149.421875);
    v1453.closePath();
    f89(v1453, p1078[1], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 41.5, p1076 * 134.421875);
    v1453.bezierCurveTo(p1076 * 30.5, p1076 * 119.421875, p1076 * 25.5, p1076 * 111.421875, p1076 * 12.5, p1076 * 115.421875);
    v1453.bezierCurveTo(p1076 * 4.5, p1076 * 120.421875, p1076 * 4.5, p1076 * 121.421875, p1076 * 26.5, p1076 * 142.421875);
    v1453.bezierCurveTo(p1076 * 35, p1076 * 149.921875, p1076 * 35, p1076 * 149.921875, p1076 * 43.5, p1076 * 157.421875);
    v1453.closePath();
    f89(v1453, p1078[1], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 78.5, p1076 * 51.921875);
    v1453.bezierCurveTo(p1076 * 99.5, p1076 * 75.921875, p1076 * 110.5, p1076 * 96.921875, p1076 * 118.5, p1076 * 120.921875);
    v1453.bezierCurveTo(p1076 * 121.5, p1076 * 140.921875, p1076 * 107.5, p1076 * 179.921875, p1076 * 75.5, p1076 * 183.921875);
    v1453.bezierCurveTo(p1076 * 30.5, p1076 * 169.921875, p1076 * 37.5, p1076 * 131.921875, p1076 * 34.5, p1076 * 120.921875);
    v1453.bezierCurveTo(p1076 * 41.5, p1076 * 89.921875, p1076 * 61.5, p1076 * 67.921875, p1076 * 78.5, p1076 * 51.921875);
    v1453.closePath();
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    f94(v1453, p1076 * 108.5, p1076 * 148.421875, p1076 * 9);
    f89(v1453, p1078[5]);
    f94(v1453, p1076 * 106.5, p1076 * 144.421875, p1076 * 3);
    f89(v1453, p1078[6]);
    f94(v1453, p1076 * 46.5, p1076 * 148.421875, p1076 * 9);
    f89(v1453, p1078[5]);
    f94(v1453, p1076 * 44.5, p1076 * 144.421875, p1076 * 3);
    f89(v1453, p1078[6]);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 116.5, p1076 * 114.421875);
    v1453.bezierCurveTo(p1076 * 121.5, p1076 * 137.421875, p1076 * 118.5, p1076 * 133.421875, p1076 * 108.5, p1076 * 139.421875);
    v1453.bezierCurveTo(p1076 * 94.5, p1076 * 146.421875, p1076 * 96.5, p1076 * 148.421875, p1076 * 95.5, p1076 * 152.421875);
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.translate(0, p1076 * -2);
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 35.5, p1076 * 131.421875);
    v1453.bezierCurveTo(p1076 * 36.5, p1076 * 140.421875, p1076 * 39.5, p1076 * 140.421875, p1076 * 49.5, p1076 * 143.421875);
    v1453.bezierCurveTo(p1076 * 59.5, p1076 * 149.421875, p1076 * 57.5, p1076 * 151.421875, p1076 * 59.5, p1076 * 155.421875);
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 84.5, p1076 * 57.421875);
    v1453.bezierCurveTo(p1076 * 101.5, p1076 * 120.421875, p1076 * 92.5, p1076 * 127.421875, p1076 * 78.5, p1076 * 134.421875);
    v1453.bezierCurveTo(p1076 * 51.5, p1076 * 131.421875, p1076 * 63.5, p1076 * 102.421875, p1076 * 70.5, p1076 * 59.421875);
    v1453.bezierCurveTo(p1076 * 75, p1076 * 55.421875, p1076 * 78.5, p1076 * 52.421875, p1076 * 79.5, p1076 * 51.421875);
    v1453.closePath();
    f89(v1453, p1078[4]);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 79.5, p1076 * 61.421875);
    v1453.bezierCurveTo(p1076 * 88.5, p1076 * 31.421875, p1076 * 81.5, p1076 * 16.421875, p1076 * 75.5, p1076 * 7.421875);
    v1453.bezierCurveTo(p1076 * 77.5, p1076 * 28.421875, p1076 * 77.5, p1076 * 37.421875, p1076 * 68.5, p1076 * 42.421875);
    v1453.bezierCurveTo(p1076 * 79.5, p1076 * 57.421875, p1076 * 79.5, p1076 * 58.421875, p1076 * 80.5, p1076 * 61.421875);
    v1453.closePath();
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 72.5, p1076 * 72.421875);
    v1453.bezierCurveTo(p1076 * 76.5, p1076 * 79.421875, p1076 * 79.5, p1076 * 80.421875, p1076 * 83.5, p1076 * 73.421875);
    v1453.bezierCurveTo(p1076 * 80.5, p1076 * 96.921875, p1076 * 79.5, p1076 * 114.421875, p1076 * 77.5, p1076 * 120.421875);
    v1453.closePath();
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 87.5, p1076 * 154.421875);
    v1453.bezierCurveTo(p1076 * 93.5, p1076 * 163.921875, p1076 * 93.5, p1076 * 163.921875, p1076 * 99.5, p1076 * 173.421875);
    v1453.bezierCurveTo(p1076 * 95, p1076 * 177.421875, p1076 * 95, p1076 * 177.421875, p1076 * 90.5, p1076 * 181.421875);
    v1453.bezierCurveTo(p1076 * 89, p1076 * 167.921875, p1076 * 89, p1076 * 167.921875, p1076 * 87.5, p1076 * 154.421875);
    v1453.closePath();
    f89(v1453, p1078[6], p1078[7], p1076 * 2);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 81.5, p1076 * 164.421875);
    v1453.bezierCurveTo(p1076 * 84, p1076 * 172.921875, p1076 * 84, p1076 * 172.921875, p1076 * 86.5, p1076 * 181.421875);
    v1453.bezierCurveTo(p1076 * 82.5, p1076 * 182.421875, p1076 * 82.5, p1076 * 182.421875, p1076 * 78.5, p1076 * 183.421875);
    v1453.closePath();
    f89(v1453, p1078[6], p1078[7], p1076 * 2);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 72.5, p1076 * 164.421875);
    v1453.bezierCurveTo(p1076 * 73.5, p1076 * 173.921875, p1076 * 73.5, p1076 * 173.921875, p1076 * 74.5, p1076 * 183.421875);
    v1453.bezierCurveTo(p1076 * 70.5, p1076 * 182.921875, p1076 * 70.5, p1076 * 182.921875, p1076 * 66.5, p1076 * 182.421875);
    v1453.closePath();
    f89(v1453, p1078[6], p1078[7], p1076 * 2);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 65.5, p1076 * 156.421875);
    v1453.bezierCurveTo(p1076 * 65, p1076 * 168.421875, p1076 * 65, p1076 * 168.421875, p1076 * 64.5, p1076 * 180.421875);
    v1453.bezierCurveTo(p1076 * 58.5, p1076 * 177.421875, p1076 * 58.5, p1076 * 177.421875, p1076 * 52.5, p1076 * 174.421875);
    v1453.closePath();
    f89(v1453, p1078[6], p1078[7], p1076 * 2);
    v1453.beginPath();
    v1453.lineCap = "round";
    v1453.lineJoin = "round";
    v1453.moveTo(p1076 * 42.5, p1076 * 163.421875);
    v1453.bezierCurveTo(p1076 * 62.5, p1076 * 185.421875, p1076 * 86.5, p1076 * 186.421875, p1076 * 111.5, p1076 * 165.421875);
    v1453.bezierCurveTo(p1076 * 107.5, p1076 * 176.421875, p1076 * 95.5, p1076 * 187.421875, p1076 * 75.5, p1076 * 188.421875);
    v1453.bezierCurveTo(p1076 * 53.5, p1076 * 188.421875, p1076 * 43.5, p1076 * 171.421875, p1076 * 42.5, p1076 * 164.421875);
    v1453.closePath();
    f89(v1453, p1078[3], p1078[2], p1076 * 4);
    return v1452;
  }
  function f259(p1079, p1080, p1081) {
    var v1454 = document.createElement("canvas");
    var v1455 = v1454.getContext("2d");
    v1454.width = p1079 * 400;
    v1454.height = p1079 * 400;
    v1455.translate(0, p1079 * 15);
    v1455.globalAlpha = p1080 ? 0.5 : 1;
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 102, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 108, p1079 * 216.5, p1079 * 108, p1079 * 216.5, p1079 * 114, p1079 * 279);
    v1455.bezierCurveTo(p1079 * 124, p1079 * 300, p1079 * 237, p1079 * 299, p1079 * 251, p1079 * 279);
    v1455.bezierCurveTo(p1079 * 257, p1079 * 217, p1079 * 257, p1079 * 217, p1079 * 263, p1079 * 155);
    v1455.bezierCurveTo(p1079 * 248, p1079 * 194, p1079 * 91, p1079 * 180, p1079 * 103, p1079 * 156);
    v1455.closePath();
    f89(v1455, p1081[0]);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 102, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 106, p1079 * 53, p1079 * 255, p1079 * 53, p1079 * 263, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 248, p1079 * 38, p1079 * 99, p1079 * 69, p1079 * 103, p1079 * 154);
    v1455.closePath();
    f89(v1455, vUndefined, p1081[0], p1079 * 11);
    v1455.translate(0, p1079 * -5);
    v1455.globalAlpha = 1;
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 103, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 98, p1079 * 119, p1079 * 264, p1079 * 119, p1079 * 264, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 271, p1079 * 189, p1079 * 94, p1079 * 188, p1079 * 103, p1079 * 154);
    v1455.closePath();
    f89(v1455, p1081[3], p1081[2], p1079 * 12);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 102, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 108, p1079 * 216.5, p1079 * 108, p1079 * 216.5, p1079 * 114, p1079 * 279);
    v1455.bezierCurveTo(p1079 * 124, p1079 * 300, p1079 * 237, p1079 * 299, p1079 * 251, p1079 * 279);
    v1455.bezierCurveTo(p1079 * 257, p1079 * 217, p1079 * 257, p1079 * 217, p1079 * 263, p1079 * 155);
    v1455.bezierCurveTo(p1079 * 248, p1079 * 194, p1079 * 91, p1079 * 180, p1079 * 103, p1079 * 156);
    v1455.closePath();
    f89(v1455, p1081[1], p1081[2], p1079 * 12);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 182, p1079 * 185);
    v1455.bezierCurveTo(p1079 * 182.5, p1079 * 237.5, p1079 * 182.5, p1079 * 237.5, p1079 * 183, p1079 * 290);
    v1455.closePath();
    f89(v1455, undefined, p1081[2], p1079 * 12);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 222, p1079 * 287);
    v1455.bezierCurveTo(p1079 * 226, p1079 * 233.5, p1079 * 226, p1079 * 233.5, p1079 * 230, p1079 * 180);
    v1455.closePath();
    f89(v1455, vVVVUndefined172, p1081[2], p1079 * 12);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 145, p1079 * 290);
    v1455.bezierCurveTo(p1079 * 140.5, p1079 * 237, p1079 * 140.5, p1079 * 237, p1079 * 136, p1079 * 184);
    v1455.closePath();
    f89(v1455, p1081[1], p1081[2], p1079 * 11);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 105, p1079 * 184);
    v1455.bezierCurveTo(p1079 * 148, p1079 * 205, p1079 * 231, p1079 * 202, p1079 * 260, p1079 * 182);
    v1455.bezierCurveTo(p1079 * 259, p1079 * 195.5, p1079 * 259, p1079 * 195.5, p1079 * 258, p1079 * 209);
    v1455.bezierCurveTo(p1079 * 217, p1079 * 218, p1079 * 163, p1079 * 225, p1079 * 108, p1079 * 207);
    v1455.closePath();
    f89(v1455, p1081[4], p1081[2], p1079 * 11);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 251, p1079 * 276);
    v1455.bezierCurveTo(p1079 * 251.5, p1079 * 267.5, p1079 * 251.5, p1079 * 267.5, p1079 * 252, p1079 * 259);
    v1455.bezierCurveTo(p1079 * 212, p1079 * 272, p1079 * 156, p1079 * 275, p1079 * 112, p1079 * 260);
    v1455.bezierCurveTo(p1079 * 112.5, p1079 * 269, p1079 * 112.5, p1079 * 269, p1079 * 113, p1079 * 278);
    v1455.bezierCurveTo(p1079 * 155, p1079 * 306, p1079 * 253, p1079 * 286, p1079 * 250, p1079 * 276);
    v1455.closePath();
    f89(v1455, p1081[4], p1081[2], p1079 * 11);
    v1455.beginPath();
    v1455.lineCap = "round";
    v1455.lineJoin = "round";
    v1455.moveTo(p1079 * 102, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 106, p1079 * 53, p1079 * 255, p1079 * 53, p1079 * 263, p1079 * 154);
    v1455.bezierCurveTo(p1079 * 248, p1079 * 38, p1079 * 99, p1079 * 69, p1079 * 103, p1079 * 154);
    v1455.closePath();
    f89(v1455, undefined, p1081[2], p1079 * 11);
    return v1454;
  }
  function f260(p1082, p1083, p1084) {
    var v1456 = document.createElement("canvas");
    var v1457 = v1456.getContext("2d");
    v1456.width = p1082 * 400;
    v1456.height = p1082 * 400;
    v1457.translate(0, p1082 * 15);
    v1457.globalAlpha = p1083 ? 0.5 : 1;
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 102, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 108, p1082 * 216.5, p1082 * 108, p1082 * 216.5, p1082 * 114, p1082 * 279);
    v1457.bezierCurveTo(p1082 * 124, p1082 * 300, p1082 * 237, p1082 * 299, p1082 * 251, p1082 * 279);
    v1457.bezierCurveTo(p1082 * 257, p1082 * 217, p1082 * 257, p1082 * 217, p1082 * 263, p1082 * 155);
    v1457.bezierCurveTo(p1082 * 248, p1082 * 194, p1082 * 91, p1082 * 180, p1082 * 103, p1082 * 156);
    v1457.closePath();
    f89(v1457, p1084[0]);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 102, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 106, p1082 * 53, p1082 * 255, p1082 * 53, p1082 * 263, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 248, p1082 * 38, p1082 * 99, p1082 * 69, p1082 * 103, p1082 * 154);
    v1457.closePath();
    f89(v1457, undefined, p1084[0], p1082 * 11);
    v1457.translate(0, p1082 * -5);
    v1457.globalAlpha = 1;
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 103, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 98, p1082 * 119, p1082 * 264, p1082 * 119, p1082 * 264, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 271, p1082 * 189, p1082 * 94, p1082 * 188, p1082 * 103, p1082 * 154);
    v1457.closePath();
    f89(v1457, p1084[3], p1084[2], p1082 * 12);
    v1457.translate(0, p1082 * 25);
    v1457.globalAlpha = 1;
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 103, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 98, p1082 * 119, p1082 * 264, p1082 * 119, p1082 * 264, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 271, p1082 * 189, p1082 * 94, p1082 * 188, p1082 * 103, p1082 * 154);
    v1457.closePath();
    f89(v1457, p1084[5]);
    v1457.translate(0, p1082 * -25);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 102, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 108, p1082 * 216.5, p1082 * 108, p1082 * 216.5, p1082 * 114, p1082 * 279);
    v1457.bezierCurveTo(p1082 * 124, p1082 * 300, p1082 * 237, p1082 * 299, p1082 * 251, p1082 * 279);
    v1457.bezierCurveTo(p1082 * 257, p1082 * 217, p1082 * 257, p1082 * 217, p1082 * 263, p1082 * 155);
    v1457.bezierCurveTo(p1082 * 248, p1082 * 194, p1082 * 91, p1082 * 180, p1082 * 103, p1082 * 156);
    v1457.closePath();
    f89(v1457, p1084[1], p1084[2], p1082 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 182, p1082 * 185);
    v1457.bezierCurveTo(p1082 * 182.5, p1082 * 237.5, p1082 * 182.5, p1082 * 237.5, p1082 * 183, p1082 * 290);
    v1457.closePath();
    f89(v1457, undefined, p1084[2], p1082 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 222, p1082 * 287);
    v1457.bezierCurveTo(p1082 * 226, p1082 * 233.5, p1082 * 226, p1082 * 233.5, p1082 * 230, p1082 * 180);
    v1457.closePath();
    f89(v1457, vVVVUndefined17, p1084[2], p1082 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 145, p1082 * 290);
    v1457.bezierCurveTo(p1082 * 140.5, p1082 * 237, p1082 * 140.5, p1082 * 237, p1082 * 136, p1082 * 184);
    v1457.closePath();
    f89(v1457, p1084[1], p1084[2], p1082 * 11);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 105, p1082 * 184);
    v1457.bezierCurveTo(p1082 * 148, p1082 * 205, p1082 * 231, p1082 * 202, p1082 * 260, p1082 * 182);
    v1457.bezierCurveTo(p1082 * 259, p1082 * 195.5, p1082 * 259, p1082 * 195.5, p1082 * 258, p1082 * 209);
    v1457.bezierCurveTo(p1082 * 217, p1082 * 218, p1082 * 163, p1082 * 225, p1082 * 108, p1082 * 207);
    v1457.closePath();
    f89(v1457, p1084[4], p1084[2], p1082 * 11);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 251, p1082 * 276);
    v1457.bezierCurveTo(p1082 * 251.5, p1082 * 267.5, p1082 * 251.5, p1082 * 267.5, p1082 * 252, p1082 * 259);
    v1457.bezierCurveTo(p1082 * 212, p1082 * 272, p1082 * 156, p1082 * 275, p1082 * 112, p1082 * 260);
    v1457.bezierCurveTo(p1082 * 112.5, p1082 * 269, p1082 * 112.5, p1082 * 269, p1082 * 113, p1082 * 278);
    v1457.bezierCurveTo(p1082 * 155, p1082 * 306, p1082 * 253, p1082 * 286, p1082 * 250, p1082 * 276);
    v1457.closePath();
    f89(v1457, p1084[4], p1084[2], p1082 * 11);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1082 * 102, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 106, p1082 * 53, p1082 * 255, p1082 * 53, p1082 * 263, p1082 * 154);
    v1457.bezierCurveTo(p1082 * 248, p1082 * 38, p1082 * 99, p1082 * 69, p1082 * 103, p1082 * 154);
    v1457.closePath();
    f89(v1457, undefined, p1084[2], p1082 * 11);
    return v1456;
  }
  function f261(p1085, p1086, p1087) {
    var v1458 = document.createElement("canvas");
    var v1459 = v1458.getContext("2d");
    v1458.width = p1085 * 137;
    v1458.height = p1085 * 129;
    v1459.globalAlpha = 0.5;
    f94(v1459, p1085 * 69, p1085 * 64, p1085 * 48.16637831516918);
    f89(v1459, p1087[1]);
    v1459.globalAlpha = 0.7;
    f94(v1459, p1085 * 69, p1085 * 64, p1085 * 38.23105625617661);
    f89(v1459, p1087[2]);
    v1459.globalAlpha = 0.7;
    f94(v1459, p1085 * 69, p1085 * 64, p1085 * 32.01562118716424);
    f89(v1459, p1087[2], p1087[3], p1085 * 4);
    v1459.beginPath();
    v1459.lineCap = "round";
    v1459.lineJoin = "round";
    v1459.moveTo(p1085 * 72, p1085 * 41);
    v1459.bezierCurveTo(p1085 * 52, p1085 * 41, p1085 * 48, p1085 * 50, p1085 * 45, p1085 * 58);
    v1459.bezierCurveTo(p1085 * 43, p1085 * 67, p1085 * 45, p1085 * 68, p1085 * 46, p1085 * 72);
    v1459.bezierCurveTo(p1085 * 52, p1085 * 53, p1085 * 60, p1085 * 48, p1085 * 72, p1085 * 42);
    v1459.closePath();
    f89(v1459, p1087[3]);
    v1459.beginPath();
    v1459.lineCap = "round";
    v1459.lineJoin = "round";
    v1459.moveTo(p1085 * 93, p1085 * 62);
    v1459.bezierCurveTo(p1085 * 95, p1085 * 72, p1085 * 90, p1085 * 81, p1085 * 81, p1085 * 87);
    v1459.bezierCurveTo(p1085 * 74, p1085 * 91, p1085 * 69, p1085 * 89, p1085 * 64, p1085 * 88);
    v1459.bezierCurveTo(p1085 * 77, p1085 * 83, p1085 * 84, p1085 * 82, p1085 * 92, p1085 * 62);
    v1459.closePath();
    f89(v1459, p1087[3]);
    return v1458;
  }
  function f262(p1088, p1089) {
    var v1460 = document.createElement("canvas");
    var v1461 = v1460.getContext("2d");
    v1460.width = p1088 * 33;
    v1460.height = p1088 * 35;
    v1461.beginPath();
    v1461.lineCap = "round";
    v1461.lineJoin = "round";
    v1461.moveTo(p1088 * 12.75, p1088 * 7.1328125);
    v1461.bezierCurveTo(p1088 * 26.75, p1088 * 8.1328125, p1088 * 27.75, p1088 * 14.1328125, p1088 * 24.75, p1088 * 23.1328125);
    v1461.bezierCurveTo(p1088 * 19.75, p1088 * 31.1328125, p1088 * 15.75, p1088 * 33.1328125, p1088 * 6.75, p1088 * 26.1328125);
    v1461.bezierCurveTo(p1088 * 0.75, p1088 * 19.1328125, p1088 * 4.75, p1088 * 8.1328125, p1088 * 12.75, p1088 * 7.1328125);
    v1461.closePath();
    f89(v1461, p1089[0]);
    return v1460;
  }
  function f263(p1090, p1091, p1092) {
    var v1462 = document.createElement("canvas");
    var v1463 = v1462.getContext("2d");
    v1462.width = p1090 * 372;
    v1462.height = p1090 * 358;
    v1463.translate(p1090 * 0, p1090 * 10);
    v1463.globalAlpha = p1091 ? 0.2 : 1;
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 247.00003051757812, p1090 * 115.76704406738281);
    v1463.bezierCurveTo(p1090 * 305.0000305175781, p1090 * 124.76704406738281, p1090 * 335.0000305175781, p1090 * 112.76704406738281, p1090 * 359.0000305175781, p1090 * 93.76704406738281);
    v1463.bezierCurveTo(p1090 * 359.5000305175781, p1090 * 113.26704406738281, p1090 * 359.5000305175781, p1090 * 113.26704406738281, p1090 * 360.0000305175781, p1090 * 132.7670440673828);
    v1463.bezierCurveTo(p1090 * 339.0000305175781, p1090 * 177.7670440673828, p1090 * 281.0000305175781, p1090 * 178.7670440673828, p1090 * 243.00003051757812, p1090 * 183.7670440673828);
    v1463.bezierCurveTo(p1090 * 214.50003051757812, p1090 * 214.2670440673828, p1090 * 214.50003051757812, p1090 * 214.2670440673828, p1090 * 186.00003051757812, p1090 * 244.7670440673828);
    v1463.bezierCurveTo(p1090 * 155.00003051757812, p1090 * 214.2670440673828, p1090 * 155.00003051757812, p1090 * 214.2670440673828, p1090 * 124.00003051757812, p1090 * 183.7670440673828);
    v1463.bezierCurveTo(p1090 * 51.000030517578125, p1090 * 180.7670440673828, p1090 * 21.000030517578125, p1090 * 161.7670440673828, p1090 * 9.000030517578125, p1090 * 129.7670440673828);
    v1463.bezierCurveTo(p1090 * 8.500030517578125, p1090 * 110.76704406738281, p1090 * 8.500030517578125, p1090 * 110.76704406738281, p1090 * 8.000030517578125, p1090 * 91.76704406738281);
    v1463.bezierCurveTo(p1090 * 31.000030517578125, p1090 * 112.76704406738281, p1090 * 87.00003051757812, p1090 * 119.76704406738281, p1090 * 116.00003051757812, p1090 * 117.76704406738281);
    v1463.bezierCurveTo(p1090 * 175.00003051757812, p1090 * 18.767044067382812, p1090 * 170.00003051757812, p1090 * 23.767044067382812, p1090 * 181.00003051757812, p1090 * 14.767044067382812);
    v1463.bezierCurveTo(p1090 * 199.00003051757812, p1090 * 34.76704406738281, p1090 * 203.00003051757812, p1090 * 54.76704406738281, p1090 * 247.00003051757812, p1090 * 115.76704406738281);
    v1463.closePath();
    f89(v1463, p1092[0], p1092[0], p1090 * 10);
    v1463.translate(p1090 * 0, p1090 * -10);
    v1463.globalAlpha = 1;
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 107.00003051757812, p1090 * 54.13069152832031);
    v1463.bezierCurveTo(p1090 * 106.50003051757812, p1090 * 38.63069152832031, p1090 * 106.50003051757812, p1090 * 38.63069152832031, p1090 * 106.00003051757812, p1090 * 23.130691528320312);
    v1463.bezierCurveTo(p1090 * 121.50003051757812, p1090 * 38.13069152832031, p1090 * 121.50003051757812, p1090 * 38.13069152832031, p1090 * 137.00003051757812, p1090 * 53.13069152832031);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 233.00003051757812, p1090 * 53.6761474609375);
    v1463.bezierCurveTo(p1090 * 247.00003051757812, p1090 * 37.1761474609375, p1090 * 247.00003051757812, p1090 * 37.1761474609375, p1090 * 261.0000305175781, p1090 * 20.6761474609375);
    v1463.bezierCurveTo(p1090 * 261.0000305175781, p1090 * 36.1761474609375, p1090 * 261.0000305175781, p1090 * 36.1761474609375, p1090 * 261.0000305175781, p1090 * 51.6761474609375);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 293.0000305175781, p1090 * 54.403411865234375);
    v1463.bezierCurveTo(p1090 * 300.0000305175781, p1090 * 49.903411865234375, p1090 * 300.0000305175781, p1090 * 49.903411865234375, p1090 * 307.0000305175781, p1090 * 45.403411865234375);
    v1463.bezierCurveTo(p1090 * 307.0000305175781, p1090 * 49.903411865234375, p1090 * 307.0000305175781, p1090 * 49.903411865234375, p1090 * 307.0000305175781, p1090 * 54.403411865234375);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 77.00003051757812, p1090 * 54.403411865234375);
    v1463.bezierCurveTo(p1090 * 70.00003051757812, p1090 * 50.403411865234375, p1090 * 70.00003051757812, p1090 * 50.403411865234375, p1090 * 63.000030517578125, p1090 * 46.403411865234375);
    v1463.bezierCurveTo(p1090 * 62.500030517578125, p1090 * 50.903411865234375, p1090 * 62.500030517578125, p1090 * 50.903411865234375, p1090 * 62.000030517578125, p1090 * 55.403411865234375);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 58.000030517578125, p1090 * 122.3125);
    v1463.bezierCurveTo(p1090 * 59.500030517578125, p1090 * 97.3125, p1090 * 59.500030517578125, p1090 * 97.3125, p1090 * 61.000030517578125, p1090 * 72.3125);
    v1463.bezierCurveTo(p1090 * 91.00003051757812, p1090 * 89.3125, p1090 * 91.00003051757812, p1090 * 89.3125, p1090 * 121.00003051757812, p1090 * 106.3125);
    v1463.closePath();
    f89(v1463, p1092[1], p1092[1], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 310.0000305175781, p1090 * 127.3125);
    v1463.bezierCurveTo(p1090 * 308.0000305175781, p1090 * 98.3125, p1090 * 308.0000305175781, p1090 * 98.3125, p1090 * 306.0000305175781, p1090 * 69.3125);
    v1463.bezierCurveTo(p1090 * 274.5000305175781, p1090 * 88.8125, p1090 * 274.5000305175781, p1090 * 88.8125, p1090 * 243.00003051757812, p1090 * 108.3125);
    v1463.closePath();
    f89(v1463, p1092[1], p1092[1], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 226.00003051757812, p1090 * 87.85795593261719);
    v1463.bezierCurveTo(p1090 * 243.50003051757812, p1090 * 66.85795593261719, p1090 * 243.50003051757812, p1090 * 66.85795593261719, p1090 * 261.0000305175781, p1090 * 45.85795593261719);
    v1463.bezierCurveTo(p1090 * 265.0000305175781, p1090 * 83.85795593261719, p1090 * 265.0000305175781, p1090 * 83.85795593261719, p1090 * 269.0000305175781, p1090 * 121.85795593261719);
    v1463.bezierCurveTo(p1090 * 235.00003051757812, p1090 * 122.85795593261719, p1090 * 233.00003051757812, p1090 * 107.85795593261719, p1090 * 228.00003051757812, p1090 * 90.85795593261719);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 105.00003051757812, p1090 * 128.8579559326172);
    v1463.bezierCurveTo(p1090 * 104.50003051757812, p1090 * 87.85795593261719, p1090 * 104.50003051757812, p1090 * 87.85795593261719, p1090 * 104.00003051757812, p1090 * 46.85795593261719);
    v1463.bezierCurveTo(p1090 * 126.50003051757812, p1090 * 69.35795593261719, p1090 * 126.50003051757812, p1090 * 69.35795593261719, p1090 * 149.00003051757812, p1090 * 91.85795593261719);
    v1463.bezierCurveTo(p1090 * 130.00003051757812, p1090 * 123.85795593261719, p1090 * 123.00003051757812, p1090 * 132.8579559326172, p1090 * 107.00003051757812, p1090 * 130.8579559326172);
    v1463.closePath();
    f89(v1463, p1092[1], p1092[1], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 59.000030517578125, p1090 * 121.85795593261719);
    v1463.bezierCurveTo(p1090 * 59.500030517578125, p1090 * 99.35795593261719, p1090 * 59.500030517578125, p1090 * 99.35795593261719, p1090 * 60.000030517578125, p1090 * 76.85795593261719);
    v1463.bezierCurveTo(p1090 * 84.00003051757812, p1090 * 92.35795593261719, p1090 * 84.00003051757812, p1090 * 92.35795593261719, p1090 * 108.00003051757812, p1090 * 107.85795593261719);
    v1463.bezierCurveTo(p1090 * 106.00003051757812, p1090 * 148.8579559326172, p1090 * 86.00003051757812, p1090 * 148.8579559326172, p1090 * 62.000030517578125, p1090 * 123.85795593261719);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 105.00003051757812, p1090 * 132.8579559326172);
    v1463.bezierCurveTo(p1090 * 104.50003051757812, p1090 * 93.35795593261719, p1090 * 104.50003051757812, p1090 * 93.35795593261719, p1090 * 104.00003051757812, p1090 * 53.85795593261719);
    v1463.bezierCurveTo(p1090 * 126.50003051757812, p1090 * 75.85795593261719, p1090 * 126.50003051757812, p1090 * 75.85795593261719, p1090 * 149.00003051757812, p1090 * 97.85795593261719);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 311.0000305175781, p1090 * 126.85795593261719);
    v1463.bezierCurveTo(p1090 * 309.0000305175781, p1090 * 101.35795593261719, p1090 * 309.0000305175781, p1090 * 101.35795593261719, p1090 * 307.0000305175781, p1090 * 75.85795593261719);
    v1463.bezierCurveTo(p1090 * 271.0000305175781, p1090 * 96.85795593261719, p1090 * 271.0000305175781, p1090 * 96.85795593261719, p1090 * 235.00003051757812, p1090 * 117.85795593261719);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 228.00003051757812, p1090 * 96.85795593261719);
    v1463.bezierCurveTo(p1090 * 244.50003051757812, p1090 * 74.85795593261719, p1090 * 244.50003051757812, p1090 * 74.85795593261719, p1090 * 261.0000305175781, p1090 * 52.85795593261719);
    v1463.bezierCurveTo(p1090 * 265.5000305175781, p1090 * 89.85795593261719, p1090 * 265.5000305175781, p1090 * 89.85795593261719, p1090 * 270.0000305175781, p1090 * 126.85795593261719);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 12.000030517578125, p1090 * 86.13069152832031);
    v1463.bezierCurveTo(p1090 * 36.000030517578125, p1090 * 113.13069152832031, p1090 * 84.00003051757812, p1090 * 111.13069152832031, p1090 * 116.00003051757812, p1090 * 113.13069152832031);
    v1463.bezierCurveTo(p1090 * 164.00003051757812, p1090 * 23.130691528320312, p1090 * 172.00003051757812, p1090 * 18.130691528320312, p1090 * 181.00003051757812, p1090 * 9.130691528320312);
    v1463.bezierCurveTo(p1090 * 199.00003051757812, p1090 * 29.130691528320312, p1090 * 221.00003051757812, p1090 * 78.13069152832031, p1090 * 247.00003051757812, p1090 * 112.13069152832031);
    v1463.bezierCurveTo(p1090 * 301.0000305175781, p1090 * 122.13069152832031, p1090 * 338.0000305175781, p1090 * 111.13069152832031, p1090 * 359.0000305175781, p1090 * 94.13069152832031);
    v1463.bezierCurveTo(p1090 * 359.0000305175781, p1090 * 113.13069152832031, p1090 * 358.5000305175781, p1090 * 105.13069152832031, p1090 * 358.0000305175781, p1090 * 116.13069152832031);
    v1463.bezierCurveTo(p1090 * 270.5000305175781, p1090 * 130.1306915283203, p1090 * 270.5000305175781, p1090 * 130.1306915283203, p1090 * 183.00003051757812, p1090 * 144.1306915283203);
    v1463.bezierCurveTo(p1090 * 98.00003051757812, p1090 * 128.6306915283203, p1090 * 98.00003051757812, p1090 * 128.6306915283203, p1090 * 13.000030517578125, p1090 * 113.13069152832031);
    v1463.closePath();
    f89(v1463, p1092[1], p1092[1], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 247.00003051757812, p1090 * 115.76704406738281);
    v1463.bezierCurveTo(p1090 * 305.0000305175781, p1090 * 124.76704406738281, p1090 * 335.0000305175781, p1090 * 112.76704406738281, p1090 * 359.0000305175781, p1090 * 93.76704406738281);
    v1463.bezierCurveTo(p1090 * 359.5000305175781, p1090 * 113.26704406738281, p1090 * 359.5000305175781, p1090 * 113.26704406738281, p1090 * 360.0000305175781, p1090 * 132.7670440673828);
    v1463.bezierCurveTo(p1090 * 339.0000305175781, p1090 * 177.7670440673828, p1090 * 281.0000305175781, p1090 * 178.7670440673828, p1090 * 243.00003051757812, p1090 * 183.7670440673828);
    v1463.bezierCurveTo(p1090 * 214.50003051757812, p1090 * 214.2670440673828, p1090 * 214.50003051757812, p1090 * 214.2670440673828, p1090 * 186.00003051757812, p1090 * 244.7670440673828);
    v1463.bezierCurveTo(p1090 * 155.00003051757812, p1090 * 214.2670440673828, p1090 * 155.00003051757812, p1090 * 214.2670440673828, p1090 * 124.00003051757812, p1090 * 183.7670440673828);
    v1463.bezierCurveTo(p1090 * 51.000030517578125, p1090 * 180.7670440673828, p1090 * 21.000030517578125, p1090 * 161.7670440673828, p1090 * 9.000030517578125, p1090 * 129.7670440673828);
    v1463.bezierCurveTo(p1090 * 8.500030517578125, p1090 * 110.76704406738281, p1090 * 8.500030517578125, p1090 * 110.76704406738281, p1090 * 8.000030517578125, p1090 * 91.76704406738281);
    v1463.bezierCurveTo(p1090 * 31.000030517578125, p1090 * 112.76704406738281, p1090 * 87.00003051757812, p1090 * 119.76704406738281, p1090 * 116.00003051757812, p1090 * 117.76704406738281);
    v1463.bezierCurveTo(p1090 * 175.00003051757812, p1090 * 18.767044067382812, p1090 * 170.00003051757812, p1090 * 23.767044067382812, p1090 * 181.00003051757812, p1090 * 14.767044067382812);
    v1463.bezierCurveTo(p1090 * 199.00003051757812, p1090 * 34.76704406738281, p1090 * 203.00003051757812, p1090 * 54.76704406738281, p1090 * 247.00003051757812, p1090 * 115.76704406738281);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 27.000030517578125, p1090 * 94.76704406738281);
    v1463.bezierCurveTo(p1090 * 11.000030517578125, p1090 * 81.76704406738281, p1090 * 31.000030517578125, p1090 * 72.76704406738281, p1090 * 44.000030517578125, p1090 * 59.76704406738281);
    v1463.bezierCurveTo(p1090 * 9.000030517578125, p1090 * 65.76704406738281, p1090 * 4.000030517578125, p1090 * 78.76704406738281, p1090 * 9.000030517578125, p1090 * 89.76704406738281);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 352.0000305175781, p1090 * 100.76705932617188);
    v1463.bezierCurveTo(p1090 * 362.0000305175781, p1090 * 92.76705932617188, p1090 * 352.0000305175781, p1090 * 84.76705932617188, p1090 * 340.0000305175781, p1090 * 68.76705932617188);
    v1463.bezierCurveTo(p1090 * 360.0000305175781, p1090 * 69.76705932617188, p1090 * 364.0000305175781, p1090 * 79.76705932617188, p1090 * 364.0000305175781, p1090 * 94.76705932617188);
    v1463.closePath();
    f89(v1463, p1092[1], p1092[1], p1090 * 1);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 25.000030517578125, p1090 * 97.94886779785156);
    v1463.bezierCurveTo(p1090 * 2.000030517578125, p1090 * 76.94886779785156, p1090 * 29.000030517578125, p1090 * 62.94886779785156, p1090 * 44.000030517578125, p1090 * 59.94886779785156);
    v1463.bezierCurveTo(p1090 * 8.000030517578125, p1090 * 59.94886779785156, p1090 * -0.999969482421875, p1090 * 81.94886779785156, p1090 * 4.000030517578125, p1090 * 92.94886779785156);
    v1463.closePath();
    f89(v1463, p1092[3]);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 349.0000305175781, p1090 * 100.94886779785156);
    v1463.bezierCurveTo(p1090 * 366.0000305175781, p1090 * 82.94886779785156, p1090 * 353.0000305175781, p1090 * 76.94886779785156, p1090 * 337.0000305175781, p1090 * 67.94886779785156);
    v1463.bezierCurveTo(p1090 * 366.0000305175781, p1090 * 69.94886779785156, p1090 * 366.0000305175781, p1090 * 83.94886779785156, p1090 * 363.0000305175781, p1090 * 101.94886779785156);
    v1463.closePath();
    f89(v1463, p1092[2], p1092[3], p1090 * 10);
    f94(v1463, p1090 * 46.000030517578125, p1090 * 137.5852279663086, p1090 * 9.219544457292887);
    f89(v1463, p1092[4], p1092[5], p1090 * 1);
    f94(v1463, p1090 * 308.0000305175781, p1090 * 141.5852279663086, p1090 * 8.54400374531753);
    f89(v1463, p1092[4], p1092[5], p1090 * 1);
    f94(v1463, p1090 * 92.00003051757812, p1090 * 149.58523559570312, p1090 * 14.866068747318506);
    f89(v1463, p1092[4], p1092[5], p1090 * 1);
    f94(v1463, p1090 * 262.0000305175781, p1090 * 148.8579559326172, p1090 * 15.620499351813308);
    f89(v1463, p1092[4], p1092[5], p1090 * 1);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 184.00003051757812, p1090 * 68.85795593261719);
    v1463.bezierCurveTo(p1090 * 203.00003051757812, p1090 * 108.85795593261719, p1090 * 203.00003051757812, p1090 * 108.85795593261719, p1090 * 222.00003051757812, p1090 * 148.8579559326172);
    v1463.bezierCurveTo(p1090 * 202.50003051757812, p1090 * 177.8579559326172, p1090 * 202.50003051757812, p1090 * 177.8579559326172, p1090 * 183.00003051757812, p1090 * 206.8579559326172);
    v1463.bezierCurveTo(p1090 * 162.00003051757812, p1090 * 178.8579559326172, p1090 * 162.00003051757812, p1090 * 178.8579559326172, p1090 * 141.00003051757812, p1090 * 150.8579559326172);
    v1463.closePath();
    f89(v1463, p1092[4], p1092[5], p1090 * 10);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1090 * 183.00003051757812, p1090 * 104.94886779785156);
    v1463.bezierCurveTo(p1090 * 192.50003051757812, p1090 * 125.44886779785156, p1090 * 192.50003051757812, p1090 * 125.44886779785156, p1090 * 202.00003051757812, p1090 * 145.94886779785156);
    v1463.bezierCurveTo(p1090 * 192.00003051757812, p1090 * 163.94886779785156, p1090 * 192.00003051757812, p1090 * 163.94886779785156, p1090 * 182.00003051757812, p1090 * 181.94886779785156);
    v1463.bezierCurveTo(p1090 * 172.50003051757812, p1090 * 164.44886779785156, p1090 * 172.50003051757812, p1090 * 164.44886779785156, p1090 * 163.00003051757812, p1090 * 146.94886779785156);
    v1463.closePath();
    f89(v1463, p1092[6]);
    return v1462;
  }
  function f264(p1093, p1094, p1095) {
    var v1464 = document.createElement("canvas");
    var v1465 = v1464.getContext("2d");
    v1464.width = p1093 * 496;
    v1464.height = p1093 * 520;
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 10);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 19.000030517578125, p1093 * 256.67613983154297);
    v1465.bezierCurveTo(p1093 * 1.000030517578125, p1093 * 332.67613983154297, p1093 * 23.000030517578125, p1093 * 404.67613983154297, p1093 * 95.00003051757812, p1093 * 463.67613983154297);
    v1465.bezierCurveTo(p1093 * 128.00003051757812, p1093 * 491.67613983154297, p1093 * 165.00003051757812, p1093 * 507.67613983154297, p1093 * 194.00003051757812, p1093 * 512.676139831543);
    v1465.bezierCurveTo(p1093 * 280.0000305175781, p1093 * 517.676139831543, p1093 * 291.0000305175781, p1093 * 516.676139831543, p1093 * 342.0000305175781, p1093 * 497.67613983154297);
    v1465.bezierCurveTo(p1093 * 425.0000305175781, p1093 * 454.67613983154297, p1093 * 469.0000305175781, p1093 * 392.67613983154297, p1093 * 468.0000305175781, p1093 * 300.67613983154297);
    v1465.bezierCurveTo(p1093 * 408.5000305175781, p1093 * 365.17613983154297, p1093 * 408.5000305175781, p1093 * 365.17613983154297, p1093 * 349.0000305175781, p1093 * 429.67613983154297);
    v1465.bezierCurveTo(p1093 * 256.0000305175781, p1093 * 473.67613983154297, p1093 * 167.00003051757812, p1093 * 459.67613983154297, p1093 * 78.00003051757812, p1093 * 384.67613983154297);
    v1465.closePath();
    f89(v1465, p1095[0]);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -10);
    f94(v1465, p1093 * 247.01138305664062, p1093 * 249.3125, p1093 * 161.4465855941215);
    f89(v1465, p1095[5], undefined, p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 10);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 65.00003051757812, p1093 * 263.4034118652344);
    v1465.bezierCurveTo(p1093 * 109.00003051757812, p1093 * 160.40341186523438, p1093 * 185.00003051757812, p1093 * 128.40341186523438, p1093 * 222.00003051757812, p1093 * 124.40341186523438);
    v1465.bezierCurveTo(p1093 * 277.0000305175781, p1093 * 116.40341186523438, p1093 * 339.0000305175781, p1093 * 134.40341186523438, p1093 * 379.0000305175781, p1093 * 195.40341186523438);
    v1465.bezierCurveTo(p1093 * 409.0000305175781, p1093 * 242.40341186523438, p1093 * 416.0000305175781, p1093 * 256.4034118652344, p1093 * 428.0000305175781, p1093 * 304.4034118652344);
    v1465.bezierCurveTo(p1093 * 457.0000305175781, p1093 * 203.40341186523438, p1093 * 449.0000305175781, p1093 * 183.40341186523438, p1093 * 438.0000305175781, p1093 * 162.40341186523438);
    v1465.bezierCurveTo(p1093 * 381.0000305175781, p1093 * 73.40341186523438, p1093 * 360.0000305175781, p1093 * 66.40341186523438, p1093 * 257.0000305175781, p1093 * 46.403411865234375);
    v1465.bezierCurveTo(p1093 * 191.00003051757812, p1093 * 45.403411865234375, p1093 * 142.00003051757812, p1093 * 65.40341186523438, p1093 * 101.00003051757812, p1093 * 115.40341186523438);
    v1465.closePath();
    f89(v1465, p1095[0]);
    v1465.globalAlpha = 1;
    var vF44 = function (p1096, p1097) {
      var v1466 = document.createElement("canvas");
      var v1467 = v1466.getContext("2d");
      v1466.width = p1096 * 496;
      v1466.height = p1096 * 520;
      v1467.globalAlpha = 1;
      v1467.translate(0, p1096 * -10);
      f94(v1467, p1096 * 247.01138305664062, p1096 * 250.13068389892578, p1096 * 232.81967270830015);
      f89(v1467, p1097[1], p1097[2], p1096 * 14);
      v1467.globalCompositeOperation = "destination-out";
      f94(v1467, p1096 * 247.01138305664062, p1096 * 249.3125, p1096 * 161.4465855941215);
      f89(v1467, p1097[0], p1097[0], p1096 * 14);
      v1467.globalCompositeOperation = "source-over";
      return v1466;
    }(p1093, p1095);
    v1465.drawImage(vF44, 0, 0);
    v1465.translate(0, p1093 * -10);
    f94(v1465, p1093 * 247.01138305664062, p1093 * 249.3125, p1093 * 161.4465855941215);
    f89(v1465, vVUndefined15, p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 325.0113830566406, p1093 * 13.767059326171875);
    v1465.bezierCurveTo(p1093 * 349.5113830566406, p1093 * 25.767059326171875, p1093 * 349.5113830566406, p1093 * 25.767059326171875, p1093 * 374.0113830566406, p1093 * 37.767059326171875);
    v1465.bezierCurveTo(p1093 * 384.0113830566406, p1093 * 44.767059326171875, p1093 * 383.0113830566406, p1093 * 50.767059326171875, p1093 * 368.0113830566406, p1093 * 68.76705932617188);
    v1465.bezierCurveTo(p1093 * 352.5113830566406, p1093 * 91.26705932617188, p1093 * 352.5113830566406, p1093 * 91.26705932617188, p1093 * 337.0113830566406, p1093 * 113.76705932617188);
    v1465.bezierCurveTo(p1093 * 328.0113830566406, p1093 * 119.76705932617188, p1093 * 328.0113830566406, p1093 * 121.76705932617188, p1093 * 312.0113830566406, p1093 * 112.76705932617188);
    v1465.bezierCurveTo(p1093 * 303.0113830566406, p1093 * 108.26705932617188, p1093 * 303.0113830566406, p1093 * 108.26705932617188, p1093 * 294.0113830566406, p1093 * 103.76705932617188);
    v1465.bezierCurveTo(p1093 * 287.0113830566406, p1093 * 99.76705932617188, p1093 * 293.0113830566406, p1093 * 84.76705932617188, p1093 * 297.0113830566406, p1093 * 67.76705932617188);
    v1465.bezierCurveTo(p1093 * 302.0113830566406, p1093 * 47.767059326171875, p1093 * 302.0113830566406, p1093 * 47.767059326171875, p1093 * 307.0113830566406, p1093 * 27.767059326171875);
    v1465.bezierCurveTo(p1093 * 310.0113830566406, p1093 * 15.767059326171875, p1093 * 317.0113830566406, p1093 * 12.767059326171875, p1093 * 323.0113830566406, p1093 * 13.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 325.0113830566406, p1093 * 13.767059326171875);
    v1465.bezierCurveTo(p1093 * 349.5113830566406, p1093 * 25.767059326171875, p1093 * 349.5113830566406, p1093 * 25.767059326171875, p1093 * 374.0113830566406, p1093 * 37.767059326171875);
    v1465.bezierCurveTo(p1093 * 384.0113830566406, p1093 * 44.767059326171875, p1093 * 383.0113830566406, p1093 * 50.767059326171875, p1093 * 368.0113830566406, p1093 * 68.76705932617188);
    v1465.bezierCurveTo(p1093 * 352.5113830566406, p1093 * 91.26705932617188, p1093 * 352.5113830566406, p1093 * 91.26705932617188, p1093 * 337.0113830566406, p1093 * 113.76705932617188);
    v1465.bezierCurveTo(p1093 * 328.0113830566406, p1093 * 119.76705932617188, p1093 * 328.0113830566406, p1093 * 121.76705932617188, p1093 * 312.0113830566406, p1093 * 112.76705932617188);
    v1465.bezierCurveTo(p1093 * 303.0113830566406, p1093 * 108.26705932617188, p1093 * 303.0113830566406, p1093 * 108.26705932617188, p1093 * 294.0113830566406, p1093 * 103.76705932617188);
    v1465.bezierCurveTo(p1093 * 287.0113830566406, p1093 * 99.76705932617188, p1093 * 293.0113830566406, p1093 * 84.76705932617188, p1093 * 297.0113830566406, p1093 * 67.76705932617188);
    v1465.bezierCurveTo(p1093 * 302.0113830566406, p1093 * 47.767059326171875, p1093 * 302.0113830566406, p1093 * 47.767059326171875, p1093 * 307.0113830566406, p1093 * 27.767059326171875);
    v1465.bezierCurveTo(p1093 * 310.0113830566406, p1093 * 15.767059326171875, p1093 * 317.0113830566406, p1093 * 12.767059326171875, p1093 * 323.0113830566406, p1093 * 13.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[3], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 403.0113830566406, p1093 * 89.76705932617188);
    v1465.bezierCurveTo(p1093 * 413.0113830566406, p1093 * 76.76705932617188, p1093 * 418.0113830566406, p1093 * 79.76705932617188, p1093 * 428.0113830566406, p1093 * 92.76705932617188);
    v1465.bezierCurveTo(p1093 * 435.0113830566406, p1093 * 99.76705932617188, p1093 * 435.0113830566406, p1093 * 99.76705932617188, p1093 * 442.0113830566406, p1093 * 106.76705932617188);
    v1465.bezierCurveTo(p1093 * 450.0113830566406, p1093 * 116.76705932617188, p1093 * 445.0113830566406, p1093 * 119.76705932617188, p1093 * 433.0113830566406, p1093 * 128.76705932617188);
    v1465.bezierCurveTo(p1093 * 408.0113830566406, p1093 * 146.26705932617188, p1093 * 408.0113830566406, p1093 * 146.26705932617188, p1093 * 383.0113830566406, p1093 * 163.76705932617188);
    v1465.bezierCurveTo(p1093 * 376.0113830566406, p1093 * 166.76705932617188, p1093 * 377.0113830566406, p1093 * 165.76705932617188, p1093 * 368.0113830566406, p1093 * 156.76705932617188);
    v1465.bezierCurveTo(p1093 * 359.0113830566406, p1093 * 144.76705932617188, p1093 * 359.0113830566406, p1093 * 142.76705932617188, p1093 * 367.0113830566406, p1093 * 133.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 403.0113830566406, p1093 * 89.76705932617188);
    v1465.bezierCurveTo(p1093 * 413.0113830566406, p1093 * 76.76705932617188, p1093 * 418.0113830566406, p1093 * 79.76705932617188, p1093 * 428.0113830566406, p1093 * 92.76705932617188);
    v1465.bezierCurveTo(p1093 * 435.0113830566406, p1093 * 99.76705932617188, p1093 * 435.0113830566406, p1093 * 99.76705932617188, p1093 * 442.0113830566406, p1093 * 106.76705932617188);
    v1465.bezierCurveTo(p1093 * 450.0113830566406, p1093 * 116.76705932617188, p1093 * 445.0113830566406, p1093 * 119.76705932617188, p1093 * 433.0113830566406, p1093 * 128.76705932617188);
    v1465.bezierCurveTo(p1093 * 408.0113830566406, p1093 * 146.26705932617188, p1093 * 408.0113830566406, p1093 * 146.26705932617188, p1093 * 383.0113830566406, p1093 * 163.76705932617188);
    v1465.bezierCurveTo(p1093 * 376.0113830566406, p1093 * 166.76705932617188, p1093 * 377.0113830566406, p1093 * 165.76705932617188, p1093 * 368.0113830566406, p1093 * 156.76705932617188);
    v1465.bezierCurveTo(p1093 * 359.0113830566406, p1093 * 144.76705932617188, p1093 * 359.0113830566406, p1093 * 142.76705932617188, p1093 * 367.0113830566406, p1093 * 133.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 228.01138305664062, p1093 * 1.767059326171875);
    v1465.bezierCurveTo(p1093 * 246.51138305664062, p1093 * 3.267059326171875, p1093 * 246.51138305664062, p1093 * 3.267059326171875, p1093 * 265.0113830566406, p1093 * 4.767059326171875);
    v1465.bezierCurveTo(p1093 * 273.0113830566406, p1093 * 5.767059326171875, p1093 * 275.0113830566406, p1093 * 11.767059326171875, p1093 * 270.0113830566406, p1093 * 27.767059326171875);
    v1465.bezierCurveTo(p1093 * 264.0113830566406, p1093 * 54.267059326171875, p1093 * 264.0113830566406, p1093 * 54.267059326171875, p1093 * 258.0113830566406, p1093 * 80.76705932617188);
    v1465.bezierCurveTo(p1093 * 256.0113830566406, p1093 * 92.76705932617188, p1093 * 256.0113830566406, p1093 * 94.76705932617188, p1093 * 242.01138305664062, p1093 * 93.76705932617188);
    v1465.bezierCurveTo(p1093 * 226.01138305664062, p1093 * 95.76705932617188, p1093 * 225.01138305664062, p1093 * 91.76705932617188, p1093 * 225.01138305664062, p1093 * 80.76705932617188);
    v1465.bezierCurveTo(p1093 * 223.51138305664062, p1093 * 50.267059326171875, p1093 * 223.51138305664062, p1093 * 50.267059326171875, p1093 * 222.01138305664062, p1093 * 19.767059326171875);
    v1465.bezierCurveTo(p1093 * 219.01138305664062, p1093 * 8.767059326171875, p1093 * 224.01138305664062, p1093 * 4.767059326171875, p1093 * 227.01138305664062, p1093 * 2.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 228.01138305664062, p1093 * 1.767059326171875);
    v1465.bezierCurveTo(p1093 * 246.51138305664062, p1093 * 3.267059326171875, p1093 * 246.51138305664062, p1093 * 3.267059326171875, p1093 * 265.0113830566406, p1093 * 4.767059326171875);
    v1465.bezierCurveTo(p1093 * 273.0113830566406, p1093 * 5.767059326171875, p1093 * 275.0113830566406, p1093 * 11.767059326171875, p1093 * 270.0113830566406, p1093 * 27.767059326171875);
    v1465.bezierCurveTo(p1093 * 264.0113830566406, p1093 * 54.267059326171875, p1093 * 264.0113830566406, p1093 * 54.267059326171875, p1093 * 258.0113830566406, p1093 * 80.76705932617188);
    v1465.bezierCurveTo(p1093 * 256.0113830566406, p1093 * 92.76705932617188, p1093 * 256.0113830566406, p1093 * 94.76705932617188, p1093 * 242.01138305664062, p1093 * 93.76705932617188);
    v1465.bezierCurveTo(p1093 * 226.01138305664062, p1093 * 95.76705932617188, p1093 * 225.01138305664062, p1093 * 91.76705932617188, p1093 * 225.01138305664062, p1093 * 80.76705932617188);
    v1465.bezierCurveTo(p1093 * 223.51138305664062, p1093 * 50.267059326171875, p1093 * 223.51138305664062, p1093 * 50.267059326171875, p1093 * 222.01138305664062, p1093 * 19.767059326171875);
    v1465.bezierCurveTo(p1093 * 219.01138305664062, p1093 * 8.767059326171875, p1093 * 224.01138305664062, p1093 * 4.767059326171875, p1093 * 227.01138305664062, p1093 * 2.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 142.01138305664062, p1093 * 25.767059326171875);
    v1465.bezierCurveTo(p1093 * 158.51138305664062, p1093 * 19.767059326171875, p1093 * 158.51138305664062, p1093 * 19.767059326171875, p1093 * 175.01138305664062, p1093 * 13.767059326171875);
    v1465.bezierCurveTo(p1093 * 188.01138305664062, p1093 * 11.767059326171875, p1093 * 188.01138305664062, p1093 * 16.767059326171875, p1093 * 191.01138305664062, p1093 * 29.767059326171875);
    v1465.bezierCurveTo(p1093 * 197.01138305664062, p1093 * 60.267059326171875, p1093 * 197.01138305664062, p1093 * 60.267059326171875, p1093 * 203.01138305664062, p1093 * 90.76705932617188);
    v1465.bezierCurveTo(p1093 * 206.01138305664062, p1093 * 102.76705932617188, p1093 * 196.01138305664062, p1093 * 99.76705932617188, p1093 * 181.01138305664062, p1093 * 105.76705932617188);
    v1465.bezierCurveTo(p1093 * 175.01138305664062, p1093 * 108.76705932617188, p1093 * 172.01138305664062, p1093 * 104.76705932617188, p1093 * 164.01138305664062, p1093 * 84.76705932617188);
    v1465.bezierCurveTo(p1093 * 152.51138305664062, p1093 * 63.267059326171875, p1093 * 152.51138305664062, p1093 * 63.267059326171875, p1093 * 141.01138305664062, p1093 * 41.767059326171875);
    v1465.bezierCurveTo(p1093 * 138.01138305664062, p1093 * 35.767059326171875, p1093 * 138.01138305664062, p1093 * 29.767059326171875, p1093 * 141.01138305664062, p1093 * 27.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 142.01138305664062, p1093 * 25.767059326171875);
    v1465.bezierCurveTo(p1093 * 158.51138305664062, p1093 * 19.767059326171875, p1093 * 158.51138305664062, p1093 * 19.767059326171875, p1093 * 175.01138305664062, p1093 * 13.767059326171875);
    v1465.bezierCurveTo(p1093 * 188.01138305664062, p1093 * 11.767059326171875, p1093 * 188.01138305664062, p1093 * 16.767059326171875, p1093 * 191.01138305664062, p1093 * 29.767059326171875);
    v1465.bezierCurveTo(p1093 * 197.01138305664062, p1093 * 60.267059326171875, p1093 * 197.01138305664062, p1093 * 60.267059326171875, p1093 * 203.01138305664062, p1093 * 90.76705932617188);
    v1465.bezierCurveTo(p1093 * 206.01138305664062, p1093 * 102.76705932617188, p1093 * 196.01138305664062, p1093 * 99.76705932617188, p1093 * 181.01138305664062, p1093 * 105.76705932617188);
    v1465.bezierCurveTo(p1093 * 175.01138305664062, p1093 * 108.76705932617188, p1093 * 172.01138305664062, p1093 * 104.76705932617188, p1093 * 164.01138305664062, p1093 * 84.76705932617188);
    v1465.bezierCurveTo(p1093 * 152.51138305664062, p1093 * 63.267059326171875, p1093 * 152.51138305664062, p1093 * 63.267059326171875, p1093 * 141.01138305664062, p1093 * 41.767059326171875);
    v1465.bezierCurveTo(p1093 * 138.01138305664062, p1093 * 35.767059326171875, p1093 * 138.01138305664062, p1093 * 29.767059326171875, p1093 * 141.01138305664062, p1093 * 27.767059326171875);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 70.01138305664062, p1093 * 76.76705932617188);
    v1465.bezierCurveTo(p1093 * 83.01138305664062, p1093 * 64.26705932617188, p1093 * 83.01138305664062, p1093 * 64.26705932617188, p1093 * 96.01138305664062, p1093 * 51.767059326171875);
    v1465.bezierCurveTo(p1093 * 104.01138305664062, p1093 * 44.767059326171875, p1093 * 110.01138305664062, p1093 * 51.767059326171875, p1093 * 119.01138305664062, p1093 * 66.76705932617188);
    v1465.bezierCurveTo(p1093 * 135.01138305664062, p1093 * 88.26705932617188, p1093 * 135.01138305664062, p1093 * 88.26705932617188, p1093 * 151.01138305664062, p1093 * 109.76705932617188);
    v1465.bezierCurveTo(p1093 * 157.01138305664062, p1093 * 119.76705932617188, p1093 * 153.01138305664062, p1093 * 122.76705932617188, p1093 * 147.01138305664062, p1093 * 129.76705932617188);
    v1465.bezierCurveTo(p1093 * 138.01138305664062, p1093 * 140.76705932617188, p1093 * 136.01138305664062, p1093 * 140.76705932617188, p1093 * 122.01138305664062, p1093 * 127.76705932617188);
    v1465.bezierCurveTo(p1093 * 99.51138305664062, p1093 * 110.26705932617188, p1093 * 99.51138305664062, p1093 * 110.26705932617188, p1093 * 77.01138305664062, p1093 * 92.76705932617188);
    v1465.bezierCurveTo(p1093 * 66.01138305664062, p1093 * 83.76705932617188, p1093 * 66.01138305664062, p1093 * 82.76705932617188, p1093 * 69.01138305664062, p1093 * 78.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 70.01138305664062, p1093 * 76.76705932617188);
    v1465.bezierCurveTo(p1093 * 83.01138305664062, p1093 * 64.26705932617188, p1093 * 83.01138305664062, p1093 * 64.26705932617188, p1093 * 96.01138305664062, p1093 * 51.767059326171875);
    v1465.bezierCurveTo(p1093 * 104.01138305664062, p1093 * 44.767059326171875, p1093 * 110.01138305664062, p1093 * 51.767059326171875, p1093 * 119.01138305664062, p1093 * 66.76705932617188);
    v1465.bezierCurveTo(p1093 * 135.01138305664062, p1093 * 88.26705932617188, p1093 * 135.01138305664062, p1093 * 88.26705932617188, p1093 * 151.01138305664062, p1093 * 109.76705932617188);
    v1465.bezierCurveTo(p1093 * 157.01138305664062, p1093 * 119.76705932617188, p1093 * 153.01138305664062, p1093 * 122.76705932617188, p1093 * 147.01138305664062, p1093 * 129.76705932617188);
    v1465.bezierCurveTo(p1093 * 138.01138305664062, p1093 * 140.76705932617188, p1093 * 136.01138305664062, p1093 * 140.76705932617188, p1093 * 122.01138305664062, p1093 * 127.76705932617188);
    v1465.bezierCurveTo(p1093 * 99.51138305664062, p1093 * 110.26705932617188, p1093 * 99.51138305664062, p1093 * 110.26705932617188, p1093 * 77.01138305664062, p1093 * 92.76705932617188);
    v1465.bezierCurveTo(p1093 * 66.01138305664062, p1093 * 83.76705932617188, p1093 * 66.01138305664062, p1093 * 82.76705932617188, p1093 * 69.01138305664062, p1093 * 78.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 33.011383056640625, p1093 * 126.76705932617188);
    v1465.bezierCurveTo(p1093 * 22.011383056640625, p1093 * 149.76705932617188, p1093 * 22.011383056640625, p1093 * 149.76705932617188, p1093 * 11.011383056640625, p1093 * 172.76705932617188);
    v1465.bezierCurveTo(p1093 * 7.011383056640625, p1093 * 184.76705932617188, p1093 * 11.011383056640625, p1093 * 189.76705932617188, p1093 * 36.011383056640625, p1093 * 195.76705932617188);
    v1465.bezierCurveTo(p1093 * 61.011383056640625, p1093 * 202.26705932617188, p1093 * 61.011383056640625, p1093 * 202.26705932617188, p1093 * 86.01138305664062, p1093 * 208.76705932617188);
    v1465.bezierCurveTo(p1093 * 100.01138305664062, p1093 * 214.76705932617188, p1093 * 102.01138305664062, p1093 * 203.76705932617188, p1093 * 109.01138305664062, p1093 * 189.76705932617188);
    v1465.bezierCurveTo(p1093 * 117.01138305664062, p1093 * 171.76705932617188, p1093 * 116.01138305664062, p1093 * 166.76705932617188, p1093 * 97.01138305664062, p1093 * 156.76705932617188);
    v1465.bezierCurveTo(p1093 * 74.01138305664062, p1093 * 140.76705932617188, p1093 * 74.01138305664062, p1093 * 140.76705932617188, p1093 * 51.011383056640625, p1093 * 124.76705932617188);
    v1465.bezierCurveTo(p1093 * 42.011383056640625, p1093 * 118.76705932617188, p1093 * 37.011383056640625, p1093 * 119.76705932617188, p1093 * 33.011383056640625, p1093 * 126.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 33.011383056640625, p1093 * 126.76705932617188);
    v1465.bezierCurveTo(p1093 * 22.011383056640625, p1093 * 149.76705932617188, p1093 * 22.011383056640625, p1093 * 149.76705932617188, p1093 * 11.011383056640625, p1093 * 172.76705932617188);
    v1465.bezierCurveTo(p1093 * 7.011383056640625, p1093 * 184.76705932617188, p1093 * 11.011383056640625, p1093 * 189.76705932617188, p1093 * 36.011383056640625, p1093 * 195.76705932617188);
    v1465.bezierCurveTo(p1093 * 61.011383056640625, p1093 * 202.26705932617188, p1093 * 61.011383056640625, p1093 * 202.26705932617188, p1093 * 86.01138305664062, p1093 * 208.76705932617188);
    v1465.bezierCurveTo(p1093 * 100.01138305664062, p1093 * 214.76705932617188, p1093 * 102.01138305664062, p1093 * 203.76705932617188, p1093 * 109.01138305664062, p1093 * 189.76705932617188);
    v1465.bezierCurveTo(p1093 * 117.01138305664062, p1093 * 171.76705932617188, p1093 * 116.01138305664062, p1093 * 166.76705932617188, p1093 * 97.01138305664062, p1093 * 156.76705932617188);
    v1465.bezierCurveTo(p1093 * 74.01138305664062, p1093 * 140.76705932617188, p1093 * 74.01138305664062, p1093 * 140.76705932617188, p1093 * 51.011383056640625, p1093 * 124.76705932617188);
    v1465.bezierCurveTo(p1093 * 42.011383056640625, p1093 * 118.76705932617188, p1093 * 37.011383056640625, p1093 * 119.76705932617188, p1093 * 33.011383056640625, p1093 * 126.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[3], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 13.011383056640625, p1093 * 229.76705932617188);
    v1465.bezierCurveTo(p1093 * 45.511383056640625, p1093 * 233.76705932617188, p1093 * 45.511383056640625, p1093 * 233.76705932617188, p1093 * 78.01138305664062, p1093 * 237.76705932617188);
    v1465.bezierCurveTo(p1093 * 92.01138305664062, p1093 * 239.76705932617188, p1093 * 92.01138305664062, p1093 * 246.76705932617188, p1093 * 91.01138305664062, p1093 * 257.7670593261719);
    v1465.bezierCurveTo(p1093 * 92.01138305664062, p1093 * 275.7670593261719, p1093 * 91.01138305664062, p1093 * 274.7670593261719, p1093 * 68.01138305664062, p1093 * 276.7670593261719);
    v1465.bezierCurveTo(p1093 * 42.511383056640625, p1093 * 279.7670593261719, p1093 * 42.511383056640625, p1093 * 279.7670593261719, p1093 * 17.011383056640625, p1093 * 282.7670593261719);
    v1465.bezierCurveTo(p1093 * 2.011383056640625, p1093 * 282.7670593261719, p1093 * 3.011383056640625, p1093 * 276.7670593261719, p1093 * 2.011383056640625, p1093 * 260.7670593261719);
    v1465.bezierCurveTo(p1093 * 2.011383056640625, p1093 * 231.76705932617188, p1093 * 4.011383056640625, p1093 * 232.76705932617188, p1093 * 11.011383056640625, p1093 * 230.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 13.011383056640625, p1093 * 229.76705932617188);
    v1465.bezierCurveTo(p1093 * 45.511383056640625, p1093 * 233.76705932617188, p1093 * 45.511383056640625, p1093 * 233.76705932617188, p1093 * 78.01138305664062, p1093 * 237.76705932617188);
    v1465.bezierCurveTo(p1093 * 92.01138305664062, p1093 * 239.76705932617188, p1093 * 92.01138305664062, p1093 * 246.76705932617188, p1093 * 91.01138305664062, p1093 * 257.7670593261719);
    v1465.bezierCurveTo(p1093 * 92.01138305664062, p1093 * 275.7670593261719, p1093 * 91.01138305664062, p1093 * 274.7670593261719, p1093 * 68.01138305664062, p1093 * 276.7670593261719);
    v1465.bezierCurveTo(p1093 * 42.511383056640625, p1093 * 279.7670593261719, p1093 * 42.511383056640625, p1093 * 279.7670593261719, p1093 * 17.011383056640625, p1093 * 282.7670593261719);
    v1465.bezierCurveTo(p1093 * 2.011383056640625, p1093 * 282.7670593261719, p1093 * 3.011383056640625, p1093 * 276.7670593261719, p1093 * 2.011383056640625, p1093 * 260.7670593261719);
    v1465.bezierCurveTo(p1093 * 2.011383056640625, p1093 * 231.76705932617188, p1093 * 4.011383056640625, p1093 * 232.76705932617188, p1093 * 11.011383056640625, p1093 * 230.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 97.01138305664062, p1093 * 329.7670593261719);
    v1465.bezierCurveTo(p1093 * 68.51138305664062, p1093 * 343.7670593261719, p1093 * 68.51138305664062, p1093 * 343.7670593261719, p1093 * 40.011383056640625, p1093 * 357.7670593261719);
    v1465.bezierCurveTo(p1093 * 29.011383056640625, p1093 * 360.7670593261719, p1093 * 27.011383056640625, p1093 * 361.7670593261719, p1093 * 20.011383056640625, p1093 * 346.7670593261719);
    v1465.bezierCurveTo(p1093 * 16.511383056640625, p1093 * 336.2670593261719, p1093 * 16.511383056640625, p1093 * 336.2670593261719, p1093 * 13.011383056640625, p1093 * 325.7670593261719);
    v1465.bezierCurveTo(p1093 * 10.011383056640625, p1093 * 307.7670593261719, p1093 * 18.011383056640625, p1093 * 312.7670593261719, p1093 * 34.011383056640625, p1093 * 306.7670593261719);
    v1465.bezierCurveTo(p1093 * 59.511383056640625, p1093 * 302.2670593261719, p1093 * 59.511383056640625, p1093 * 302.2670593261719, p1093 * 85.01138305664062, p1093 * 297.7670593261719);
    v1465.bezierCurveTo(p1093 * 97.01138305664062, p1093 * 294.7670593261719, p1093 * 100.01138305664062, p1093 * 297.7670593261719, p1093 * 100.01138305664062, p1093 * 307.7670593261719);
    v1465.bezierCurveTo(p1093 * 105.01138305664062, p1093 * 326.7670593261719, p1093 * 103.01138305664062, p1093 * 325.7670593261719, p1093 * 97.01138305664062, p1093 * 329.7670593261719);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 97.01138305664062, p1093 * 329.7670593261719);
    v1465.bezierCurveTo(p1093 * 68.51138305664062, p1093 * 343.7670593261719, p1093 * 68.51138305664062, p1093 * 343.7670593261719, p1093 * 40.011383056640625, p1093 * 357.7670593261719);
    v1465.bezierCurveTo(p1093 * 29.011383056640625, p1093 * 360.7670593261719, p1093 * 27.011383056640625, p1093 * 361.7670593261719, p1093 * 20.011383056640625, p1093 * 346.7670593261719);
    v1465.bezierCurveTo(p1093 * 16.511383056640625, p1093 * 336.2670593261719, p1093 * 16.511383056640625, p1093 * 336.2670593261719, p1093 * 13.011383056640625, p1093 * 325.7670593261719);
    v1465.bezierCurveTo(p1093 * 10.011383056640625, p1093 * 307.7670593261719, p1093 * 18.011383056640625, p1093 * 312.7670593261719, p1093 * 34.011383056640625, p1093 * 306.7670593261719);
    v1465.bezierCurveTo(p1093 * 59.511383056640625, p1093 * 302.2670593261719, p1093 * 59.511383056640625, p1093 * 302.2670593261719, p1093 * 85.01138305664062, p1093 * 297.7670593261719);
    v1465.bezierCurveTo(p1093 * 97.01138305664062, p1093 * 294.7670593261719, p1093 * 100.01138305664062, p1093 * 297.7670593261719, p1093 * 100.01138305664062, p1093 * 307.7670593261719);
    v1465.bezierCurveTo(p1093 * 105.01138305664062, p1093 * 326.7670593261719, p1093 * 103.01138305664062, p1093 * 325.7670593261719, p1093 * 97.01138305664062, p1093 * 329.7670593261719);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 394.0113830566406, p1093 * 181.76705932617188);
    v1465.bezierCurveTo(p1093 * 426.5113830566406, p1093 * 166.76705932617188, p1093 * 426.5113830566406, p1093 * 166.76705932617188, p1093 * 459.0113830566406, p1093 * 151.76705932617188);
    v1465.bezierCurveTo(p1093 * 469.0113830566406, p1093 * 152.76705932617188, p1093 * 469.0113830566406, p1093 * 155.76705932617188, p1093 * 472.0113830566406, p1093 * 165.76705932617188);
    v1465.bezierCurveTo(p1093 * 476.0113830566406, p1093 * 177.26705932617188, p1093 * 476.0113830566406, p1093 * 177.26705932617188, p1093 * 480.0113830566406, p1093 * 188.76705932617188);
    v1465.bezierCurveTo(p1093 * 483.0113830566406, p1093 * 199.76705932617188, p1093 * 480.0113830566406, p1093 * 200.76705932617188, p1093 * 460.0113830566406, p1093 * 205.76705932617188);
    v1465.bezierCurveTo(p1093 * 433.5113830566406, p1093 * 210.26705932617188, p1093 * 433.5113830566406, p1093 * 210.26705932617188, p1093 * 407.0113830566406, p1093 * 214.76705932617188);
    v1465.bezierCurveTo(p1093 * 395.0113830566406, p1093 * 218.76705932617188, p1093 * 397.0113830566406, p1093 * 211.76705932617188, p1093 * 393.0113830566406, p1093 * 202.76705932617188);
    v1465.bezierCurveTo(p1093 * 387.0113830566406, p1093 * 188.76705932617188, p1093 * 387.0113830566406, p1093 * 187.76705932617188, p1093 * 394.0113830566406, p1093 * 181.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 394.0113830566406, p1093 * 181.76705932617188);
    v1465.bezierCurveTo(p1093 * 426.5113830566406, p1093 * 166.76705932617188, p1093 * 426.5113830566406, p1093 * 166.76705932617188, p1093 * 459.0113830566406, p1093 * 151.76705932617188);
    v1465.bezierCurveTo(p1093 * 469.0113830566406, p1093 * 152.76705932617188, p1093 * 469.0113830566406, p1093 * 155.76705932617188, p1093 * 472.0113830566406, p1093 * 165.76705932617188);
    v1465.bezierCurveTo(p1093 * 476.0113830566406, p1093 * 177.26705932617188, p1093 * 476.0113830566406, p1093 * 177.26705932617188, p1093 * 480.0113830566406, p1093 * 188.76705932617188);
    v1465.bezierCurveTo(p1093 * 483.0113830566406, p1093 * 199.76705932617188, p1093 * 480.0113830566406, p1093 * 200.76705932617188, p1093 * 460.0113830566406, p1093 * 205.76705932617188);
    v1465.bezierCurveTo(p1093 * 433.5113830566406, p1093 * 210.26705932617188, p1093 * 433.5113830566406, p1093 * 210.26705932617188, p1093 * 407.0113830566406, p1093 * 214.76705932617188);
    v1465.bezierCurveTo(p1093 * 395.0113830566406, p1093 * 218.76705932617188, p1093 * 397.0113830566406, p1093 * 211.76705932617188, p1093 * 393.0113830566406, p1093 * 202.76705932617188);
    v1465.bezierCurveTo(p1093 * 387.0113830566406, p1093 * 188.76705932617188, p1093 * 387.0113830566406, p1093 * 187.76705932617188, p1093 * 394.0113830566406, p1093 * 181.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 411.0113830566406, p1093 * 234.76705932617188);
    v1465.bezierCurveTo(p1093 * 446.0113830566406, p1093 * 233.26705932617188, p1093 * 446.0113830566406, p1093 * 233.26705932617188, p1093 * 481.0113830566406, p1093 * 231.76705932617188);
    v1465.bezierCurveTo(p1093 * 491.0113830566406, p1093 * 232.76705932617188, p1093 * 493.0113830566406, p1093 * 239.76705932617188, p1093 * 491.0113830566406, p1093 * 251.76705932617188);
    v1465.bezierCurveTo(p1093 * 490.0113830566406, p1093 * 263.7670593261719, p1093 * 490.0113830566406, p1093 * 263.7670593261719, p1093 * 489.0113830566406, p1093 * 275.7670593261719);
    v1465.bezierCurveTo(p1093 * 487.0113830566406, p1093 * 283.7670593261719, p1093 * 483.0113830566406, p1093 * 284.7670593261719, p1093 * 464.0113830566406, p1093 * 280.7670593261719);
    v1465.bezierCurveTo(p1093 * 437.0113830566406, p1093 * 273.7670593261719, p1093 * 437.0113830566406, p1093 * 273.7670593261719, p1093 * 410.0113830566406, p1093 * 266.7670593261719);
    v1465.bezierCurveTo(p1093 * 400.0113830566406, p1093 * 261.7670593261719, p1093 * 401.0113830566406, p1093 * 259.7670593261719, p1093 * 402.0113830566406, p1093 * 249.76705932617188);
    v1465.bezierCurveTo(p1093 * 401.0113830566406, p1093 * 237.76705932617188, p1093 * 403.0113830566406, p1093 * 235.76705932617188, p1093 * 408.0113830566406, p1093 * 234.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 411.0113830566406, p1093 * 234.76705932617188);
    v1465.bezierCurveTo(p1093 * 446.0113830566406, p1093 * 233.26705932617188, p1093 * 446.0113830566406, p1093 * 233.26705932617188, p1093 * 481.0113830566406, p1093 * 231.76705932617188);
    v1465.bezierCurveTo(p1093 * 491.0113830566406, p1093 * 232.76705932617188, p1093 * 493.0113830566406, p1093 * 239.76705932617188, p1093 * 491.0113830566406, p1093 * 251.76705932617188);
    v1465.bezierCurveTo(p1093 * 490.0113830566406, p1093 * 263.7670593261719, p1093 * 490.0113830566406, p1093 * 263.7670593261719, p1093 * 489.0113830566406, p1093 * 275.7670593261719);
    v1465.bezierCurveTo(p1093 * 487.0113830566406, p1093 * 283.7670593261719, p1093 * 483.0113830566406, p1093 * 284.7670593261719, p1093 * 464.0113830566406, p1093 * 280.7670593261719);
    v1465.bezierCurveTo(p1093 * 437.0113830566406, p1093 * 273.7670593261719, p1093 * 437.0113830566406, p1093 * 273.7670593261719, p1093 * 410.0113830566406, p1093 * 266.7670593261719);
    v1465.bezierCurveTo(p1093 * 400.0113830566406, p1093 * 261.7670593261719, p1093 * 401.0113830566406, p1093 * 259.7670593261719, p1093 * 402.0113830566406, p1093 * 249.76705932617188);
    v1465.bezierCurveTo(p1093 * 401.0113830566406, p1093 * 237.76705932617188, p1093 * 403.0113830566406, p1093 * 235.76705932617188, p1093 * 408.0113830566406, p1093 * 234.76705932617188);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 400.0113830566406, p1093 * 290.7670593261719);
    v1465.bezierCurveTo(p1093 * 437.0113830566406, p1093 * 301.2670593261719, p1093 * 437.0113830566406, p1093 * 301.2670593261719, p1093 * 474.0113830566406, p1093 * 311.7670593261719);
    v1465.bezierCurveTo(p1093 * 484.0113830566406, p1093 * 319.7670593261719, p1093 * 481.0113830566406, p1093 * 322.7670593261719, p1093 * 474.0113830566406, p1093 * 335.7670593261719);
    v1465.bezierCurveTo(p1093 * 465.5113830566406, p1093 * 354.7670593261719, p1093 * 465.5113830566406, p1093 * 354.7670593261719, p1093 * 457.0113830566406, p1093 * 373.7670593261719);
    v1465.bezierCurveTo(p1093 * 449.0113830566406, p1093 * 386.7670593261719, p1093 * 444.0113830566406, p1093 * 384.7670593261719, p1093 * 427.0113830566406, p1093 * 370.7670593261719);
    v1465.bezierCurveTo(p1093 * 403.0113830566406, p1093 * 354.7670593261719, p1093 * 403.0113830566406, p1093 * 354.7670593261719, p1093 * 379.0113830566406, p1093 * 338.7670593261719);
    v1465.bezierCurveTo(p1093 * 371.0113830566406, p1093 * 327.7670593261719, p1093 * 373.0113830566406, p1093 * 323.7670593261719, p1093 * 377.0113830566406, p1093 * 313.7670593261719);
    v1465.bezierCurveTo(p1093 * 386.0113830566406, p1093 * 292.7670593261719, p1093 * 393.0113830566406, p1093 * 288.7670593261719, p1093 * 398.0113830566406, p1093 * 291.7670593261719);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 400.0113830566406, p1093 * 290.7670593261719);
    v1465.bezierCurveTo(p1093 * 437.0113830566406, p1093 * 301.2670593261719, p1093 * 437.0113830566406, p1093 * 301.2670593261719, p1093 * 474.0113830566406, p1093 * 311.7670593261719);
    v1465.bezierCurveTo(p1093 * 484.0113830566406, p1093 * 319.7670593261719, p1093 * 481.0113830566406, p1093 * 322.7670593261719, p1093 * 474.0113830566406, p1093 * 335.7670593261719);
    v1465.bezierCurveTo(p1093 * 465.5113830566406, p1093 * 354.7670593261719, p1093 * 465.5113830566406, p1093 * 354.7670593261719, p1093 * 457.0113830566406, p1093 * 373.7670593261719);
    v1465.bezierCurveTo(p1093 * 449.0113830566406, p1093 * 386.7670593261719, p1093 * 444.0113830566406, p1093 * 384.7670593261719, p1093 * 427.0113830566406, p1093 * 370.7670593261719);
    v1465.bezierCurveTo(p1093 * 403.0113830566406, p1093 * 354.7670593261719, p1093 * 403.0113830566406, p1093 * 354.7670593261719, p1093 * 379.0113830566406, p1093 * 338.7670593261719);
    v1465.bezierCurveTo(p1093 * 371.0113830566406, p1093 * 327.7670593261719, p1093 * 373.0113830566406, p1093 * 323.7670593261719, p1093 * 377.0113830566406, p1093 * 313.7670593261719);
    v1465.bezierCurveTo(p1093 * 386.0113830566406, p1093 * 292.7670593261719, p1093 * 393.0113830566406, p1093 * 288.7670593261719, p1093 * 398.0113830566406, p1093 * 291.7670593261719);
    v1465.closePath();
    f89(v1465, p1095[3], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 366.0113830566406, p1093 * 361.2216033935547);
    v1465.bezierCurveTo(p1093 * 393.0113830566406, p1093 * 383.2216033935547, p1093 * 393.0113830566406, p1093 * 383.2216033935547, p1093 * 420.0113830566406, p1093 * 405.2216033935547);
    v1465.bezierCurveTo(p1093 * 427.0113830566406, p1093 * 414.2216033935547, p1093 * 425.0113830566406, p1093 * 417.2216033935547, p1093 * 413.0113830566406, p1093 * 428.2216033935547);
    v1465.bezierCurveTo(p1093 * 405.5113830566406, p1093 * 435.2216033935547, p1093 * 405.5113830566406, p1093 * 435.2216033935547, p1093 * 398.0113830566406, p1093 * 442.2216033935547);
    v1465.bezierCurveTo(p1093 * 388.0113830566406, p1093 * 451.2216033935547, p1093 * 385.0113830566406, p1093 * 445.2216033935547, p1093 * 373.0113830566406, p1093 * 428.2216033935547);
    v1465.bezierCurveTo(p1093 * 358.5113830566406, p1093 * 408.2216033935547, p1093 * 358.5113830566406, p1093 * 408.2216033935547, p1093 * 344.0113830566406, p1093 * 388.2216033935547);
    v1465.bezierCurveTo(p1093 * 337.0113830566406, p1093 * 378.2216033935547, p1093 * 342.0113830566406, p1093 * 377.2216033935547, p1093 * 347.0113830566406, p1093 * 371.2216033935547);
    v1465.bezierCurveTo(p1093 * 359.0113830566406, p1093 * 359.2216033935547, p1093 * 361.0113830566406, p1093 * 358.2216033935547, p1093 * 364.0113830566406, p1093 * 361.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 366.0113830566406, p1093 * 361.2216033935547);
    v1465.bezierCurveTo(p1093 * 393.0113830566406, p1093 * 383.2216033935547, p1093 * 393.0113830566406, p1093 * 383.2216033935547, p1093 * 420.0113830566406, p1093 * 405.2216033935547);
    v1465.bezierCurveTo(p1093 * 427.0113830566406, p1093 * 414.2216033935547, p1093 * 425.0113830566406, p1093 * 417.2216033935547, p1093 * 413.0113830566406, p1093 * 428.2216033935547);
    v1465.bezierCurveTo(p1093 * 405.5113830566406, p1093 * 435.2216033935547, p1093 * 405.5113830566406, p1093 * 435.2216033935547, p1093 * 398.0113830566406, p1093 * 442.2216033935547);
    v1465.bezierCurveTo(p1093 * 388.0113830566406, p1093 * 451.2216033935547, p1093 * 385.0113830566406, p1093 * 445.2216033935547, p1093 * 373.0113830566406, p1093 * 428.2216033935547);
    v1465.bezierCurveTo(p1093 * 358.5113830566406, p1093 * 408.2216033935547, p1093 * 358.5113830566406, p1093 * 408.2216033935547, p1093 * 344.0113830566406, p1093 * 388.2216033935547);
    v1465.bezierCurveTo(p1093 * 337.0113830566406, p1093 * 378.2216033935547, p1093 * 342.0113830566406, p1093 * 377.2216033935547, p1093 * 347.0113830566406, p1093 * 371.2216033935547);
    v1465.bezierCurveTo(p1093 * 359.0113830566406, p1093 * 359.2216033935547, p1093 * 361.0113830566406, p1093 * 358.2216033935547, p1093 * 364.0113830566406, p1093 * 361.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 323.0113830566406, p1093 * 393.2216033935547);
    v1465.bezierCurveTo(p1093 * 338.0113830566406, p1093 * 424.7216033935547, p1093 * 338.0113830566406, p1093 * 424.7216033935547, p1093 * 353.0113830566406, p1093 * 456.2216033935547);
    v1465.bezierCurveTo(p1093 * 355.0113830566406, p1093 * 467.2216033935547, p1093 * 354.0113830566406, p1093 * 469.2216033935547, p1093 * 336.0113830566406, p1093 * 475.2216033935547);
    v1465.bezierCurveTo(p1093 * 326.0113830566406, p1093 * 478.2216033935547, p1093 * 326.0113830566406, p1093 * 478.2216033935547, p1093 * 316.0113830566406, p1093 * 481.2216033935547);
    v1465.bezierCurveTo(p1093 * 304.0113830566406, p1093 * 484.2216033935547, p1093 * 304.0113830566406, p1093 * 477.2216033935547, p1093 * 301.0113830566406, p1093 * 454.2216033935547);
    v1465.bezierCurveTo(p1093 * 295.5113830566406, p1093 * 429.2216033935547, p1093 * 295.5113830566406, p1093 * 429.2216033935547, p1093 * 290.0113830566406, p1093 * 404.2216033935547);
    v1465.bezierCurveTo(p1093 * 287.0113830566406, p1093 * 396.2216033935547, p1093 * 297.0113830566406, p1093 * 394.2216033935547, p1093 * 303.0113830566406, p1093 * 392.2216033935547);
    v1465.bezierCurveTo(p1093 * 316.0113830566406, p1093 * 387.2216033935547, p1093 * 318.0113830566406, p1093 * 387.2216033935547, p1093 * 323.0113830566406, p1093 * 394.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 323.0113830566406, p1093 * 393.2216033935547);
    v1465.bezierCurveTo(p1093 * 338.0113830566406, p1093 * 424.7216033935547, p1093 * 338.0113830566406, p1093 * 424.7216033935547, p1093 * 353.0113830566406, p1093 * 456.2216033935547);
    v1465.bezierCurveTo(p1093 * 355.0113830566406, p1093 * 467.2216033935547, p1093 * 354.0113830566406, p1093 * 469.2216033935547, p1093 * 336.0113830566406, p1093 * 475.2216033935547);
    v1465.bezierCurveTo(p1093 * 326.0113830566406, p1093 * 478.2216033935547, p1093 * 326.0113830566406, p1093 * 478.2216033935547, p1093 * 316.0113830566406, p1093 * 481.2216033935547);
    v1465.bezierCurveTo(p1093 * 304.0113830566406, p1093 * 484.2216033935547, p1093 * 304.0113830566406, p1093 * 477.2216033935547, p1093 * 301.0113830566406, p1093 * 454.2216033935547);
    v1465.bezierCurveTo(p1093 * 295.5113830566406, p1093 * 429.2216033935547, p1093 * 295.5113830566406, p1093 * 429.2216033935547, p1093 * 290.0113830566406, p1093 * 404.2216033935547);
    v1465.bezierCurveTo(p1093 * 287.0113830566406, p1093 * 396.2216033935547, p1093 * 297.0113830566406, p1093 * 394.2216033935547, p1093 * 303.0113830566406, p1093 * 392.2216033935547);
    v1465.bezierCurveTo(p1093 * 316.0113830566406, p1093 * 387.2216033935547, p1093 * 318.0113830566406, p1093 * 387.2216033935547, p1093 * 323.0113830566406, p1093 * 394.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 270.0113830566406, p1093 * 413.2216033935547);
    v1465.bezierCurveTo(p1093 * 271.0113830566406, p1093 * 445.7216033935547, p1093 * 271.0113830566406, p1093 * 445.7216033935547, p1093 * 272.0113830566406, p1093 * 478.2216033935547);
    v1465.bezierCurveTo(p1093 * 273.0113830566406, p1093 * 490.2216033935547, p1093 * 267.0113830566406, p1093 * 493.2216033935547, p1093 * 249.01138305664062, p1093 * 490.2216033935547);
    v1465.bezierCurveTo(p1093 * 222.01138305664062, p1093 * 492.2216033935547, p1093 * 220.01138305664062, p1093 * 485.2216033935547, p1093 * 225.01138305664062, p1093 * 467.2216033935547);
    v1465.bezierCurveTo(p1093 * 230.51138305664062, p1093 * 440.2216033935547, p1093 * 230.51138305664062, p1093 * 440.2216033935547, p1093 * 236.01138305664062, p1093 * 413.2216033935547);
    v1465.bezierCurveTo(p1093 * 237.01138305664062, p1093 * 405.2216033935547, p1093 * 238.01138305664062, p1093 * 404.2216033935547, p1093 * 253.01138305664062, p1093 * 403.2216033935547);
    v1465.bezierCurveTo(p1093 * 269.0113830566406, p1093 * 405.2216033935547, p1093 * 270.0113830566406, p1093 * 407.2216033935547, p1093 * 269.0113830566406, p1093 * 412.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 270.0113830566406, p1093 * 413.2216033935547);
    v1465.bezierCurveTo(p1093 * 271.0113830566406, p1093 * 445.7216033935547, p1093 * 271.0113830566406, p1093 * 445.7216033935547, p1093 * 272.0113830566406, p1093 * 478.2216033935547);
    v1465.bezierCurveTo(p1093 * 273.0113830566406, p1093 * 490.2216033935547, p1093 * 267.0113830566406, p1093 * 493.2216033935547, p1093 * 249.01138305664062, p1093 * 490.2216033935547);
    v1465.bezierCurveTo(p1093 * 222.01138305664062, p1093 * 492.2216033935547, p1093 * 220.01138305664062, p1093 * 485.2216033935547, p1093 * 225.01138305664062, p1093 * 467.2216033935547);
    v1465.bezierCurveTo(p1093 * 230.51138305664062, p1093 * 440.2216033935547, p1093 * 230.51138305664062, p1093 * 440.2216033935547, p1093 * 236.01138305664062, p1093 * 413.2216033935547);
    v1465.bezierCurveTo(p1093 * 237.01138305664062, p1093 * 405.2216033935547, p1093 * 238.01138305664062, p1093 * 404.2216033935547, p1093 * 253.01138305664062, p1093 * 403.2216033935547);
    v1465.bezierCurveTo(p1093 * 269.0113830566406, p1093 * 405.2216033935547, p1093 * 270.0113830566406, p1093 * 407.2216033935547, p1093 * 269.0113830566406, p1093 * 412.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 207.01138305664062, p1093 * 406.2216033935547);
    v1465.bezierCurveTo(p1093 * 197.51138305664062, p1093 * 440.7216033935547, p1093 * 197.51138305664062, p1093 * 440.7216033935547, p1093 * 188.01138305664062, p1093 * 475.2216033935547);
    v1465.bezierCurveTo(p1093 * 184.01138305664062, p1093 * 485.2216033935547, p1093 * 179.01138305664062, p1093 * 491.2216033935547, p1093 * 152.01138305664062, p1093 * 477.2216033935547);
    v1465.bezierCurveTo(p1093 * 136.51138305664062, p1093 * 469.7216033935547, p1093 * 136.51138305664062, p1093 * 469.7216033935547, p1093 * 121.01138305664062, p1093 * 462.2216033935547);
    v1465.bezierCurveTo(p1093 * 109.01138305664062, p1093 * 453.2216033935547, p1093 * 117.01138305664062, p1093 * 447.2216033935547, p1093 * 133.01138305664062, p1093 * 427.2216033935547);
    v1465.bezierCurveTo(p1093 * 146.51138305664062, p1093 * 406.7216033935547, p1093 * 146.51138305664062, p1093 * 406.7216033935547, p1093 * 160.01138305664062, p1093 * 386.2216033935547);
    v1465.bezierCurveTo(p1093 * 163.01138305664062, p1093 * 377.2216033935547, p1093 * 168.01138305664062, p1093 * 378.2216033935547, p1093 * 187.01138305664062, p1093 * 387.2216033935547);
    v1465.bezierCurveTo(p1093 * 206.01138305664062, p1093 * 395.2216033935547, p1093 * 208.01138305664062, p1093 * 398.2216033935547, p1093 * 207.01138305664062, p1093 * 405.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 207.01138305664062, p1093 * 406.2216033935547);
    v1465.bezierCurveTo(p1093 * 197.51138305664062, p1093 * 440.7216033935547, p1093 * 197.51138305664062, p1093 * 440.7216033935547, p1093 * 188.01138305664062, p1093 * 475.2216033935547);
    v1465.bezierCurveTo(p1093 * 184.01138305664062, p1093 * 485.2216033935547, p1093 * 179.01138305664062, p1093 * 491.2216033935547, p1093 * 152.01138305664062, p1093 * 477.2216033935547);
    v1465.bezierCurveTo(p1093 * 136.51138305664062, p1093 * 469.7216033935547, p1093 * 136.51138305664062, p1093 * 469.7216033935547, p1093 * 121.01138305664062, p1093 * 462.2216033935547);
    v1465.bezierCurveTo(p1093 * 109.01138305664062, p1093 * 453.2216033935547, p1093 * 117.01138305664062, p1093 * 447.2216033935547, p1093 * 133.01138305664062, p1093 * 427.2216033935547);
    v1465.bezierCurveTo(p1093 * 146.51138305664062, p1093 * 406.7216033935547, p1093 * 146.51138305664062, p1093 * 406.7216033935547, p1093 * 160.01138305664062, p1093 * 386.2216033935547);
    v1465.bezierCurveTo(p1093 * 163.01138305664062, p1093 * 377.2216033935547, p1093 * 168.01138305664062, p1093 * 378.2216033935547, p1093 * 187.01138305664062, p1093 * 387.2216033935547);
    v1465.bezierCurveTo(p1093 * 206.01138305664062, p1093 * 395.2216033935547, p1093 * 208.01138305664062, p1093 * 398.2216033935547, p1093 * 207.01138305664062, p1093 * 405.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[3], p1095[2], p1093 * 12);
    v1465.globalAlpha = p1094 ? 0.5 : 1;
    v1465.translate(0, p1093 * 5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 130.01138305664062, p1093 * 375.2216033935547);
    v1465.bezierCurveTo(p1093 * 109.51138305664062, p1093 * 400.7216033935547, p1093 * 109.51138305664062, p1093 * 400.7216033935547, p1093 * 89.01138305664062, p1093 * 426.2216033935547);
    v1465.bezierCurveTo(p1093 * 82.01138305664062, p1093 * 435.2216033935547, p1093 * 77.01138305664062, p1093 * 435.2216033935547, p1093 * 62.011383056640625, p1093 * 417.2216033935547);
    v1465.bezierCurveTo(p1093 * 43.011383056640625, p1093 * 397.2216033935547, p1093 * 47.011383056640625, p1093 * 395.2216033935547, p1093 * 62.011383056640625, p1093 * 382.2216033935547);
    v1465.bezierCurveTo(p1093 * 84.01138305664062, p1093 * 366.7216033935547, p1093 * 84.01138305664062, p1093 * 366.7216033935547, p1093 * 106.01138305664062, p1093 * 351.2216033935547);
    v1465.bezierCurveTo(p1093 * 116.01138305664062, p1093 * 344.2216033935547, p1093 * 120.01138305664062, p1093 * 347.2216033935547, p1093 * 127.01138305664062, p1093 * 356.2216033935547);
    v1465.bezierCurveTo(p1093 * 137.01138305664062, p1093 * 366.2216033935547, p1093 * 137.01138305664062, p1093 * 366.2216033935547, p1093 * 131.01138305664062, p1093 * 376.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[0], p1095[0], p1093 * 12);
    v1465.globalAlpha = 1;
    v1465.translate(0, p1093 * -5);
    v1465.beginPath();
    v1465.lineCap = "round";
    v1465.lineJoin = "round";
    v1465.moveTo(p1093 * 130.01138305664062, p1093 * 375.2216033935547);
    v1465.bezierCurveTo(p1093 * 109.51138305664062, p1093 * 400.7216033935547, p1093 * 109.51138305664062, p1093 * 400.7216033935547, p1093 * 89.01138305664062, p1093 * 426.2216033935547);
    v1465.bezierCurveTo(p1093 * 82.01138305664062, p1093 * 435.2216033935547, p1093 * 77.01138305664062, p1093 * 435.2216033935547, p1093 * 62.011383056640625, p1093 * 417.2216033935547);
    v1465.bezierCurveTo(p1093 * 43.011383056640625, p1093 * 397.2216033935547, p1093 * 47.011383056640625, p1093 * 395.2216033935547, p1093 * 62.011383056640625, p1093 * 382.2216033935547);
    v1465.bezierCurveTo(p1093 * 84.01138305664062, p1093 * 366.7216033935547, p1093 * 84.01138305664062, p1093 * 366.7216033935547, p1093 * 106.01138305664062, p1093 * 351.2216033935547);
    v1465.bezierCurveTo(p1093 * 116.01138305664062, p1093 * 344.2216033935547, p1093 * 120.01138305664062, p1093 * 347.2216033935547, p1093 * 127.01138305664062, p1093 * 356.2216033935547);
    v1465.bezierCurveTo(p1093 * 137.01138305664062, p1093 * 366.2216033935547, p1093 * 137.01138305664062, p1093 * 366.2216033935547, p1093 * 131.01138305664062, p1093 * 376.2216033935547);
    v1465.closePath();
    f89(v1465, p1095[4], p1095[2], p1093 * 12);
    return v1464;
  }
  function f265(p1098, p1099, p1100, p1101) {
    var v1468 = document.createElement("canvas");
    var v1469 = v1468.getContext("2d");
    v1468.width = p1098 * 170;
    v1468.height = p1098 * 200;
    v1469.translate(p1098 * 5, p1098 * 15);
    if (p1101 == 1) {
      v1469.translate(0, p1098 * -5);
      f94(v1469, p1098 * 77.00003051757812, p1098 * 104.49432373046875, p1098 * 71.84010022264724);
      f89(v1469, p1100[1], p1100[5], p1098 * 20);
      f94(v1469, p1098 * 77.00003051757812, p1098 * 104.22160339355469, p1098 * 61.554853586049575);
      f89(v1469, p1100[1], p1100[5], p1098 * 20);
      v1469.save();
      v1469.translate(p1098 * 77.00003051757812, p1098 * 31.267044067382812);
      f90(v1469, p1098 * -6, p1098 * -12.5, p1098 * 12, p1098 * 25, p1098 * 10);
      v1469.restore();
      f89(v1469, p1100[1], p1100[5], p1098 * 20);
      v1469.save();
      v1469.translate(p1098 * 77.00003051757812, p1098 * 13.267044067382812);
      f90(v1469, p1098 * -15, p1098 * -10.5, p1098 * 30, p1098 * 21, p1098 * 10);
      v1469.restore();
      f89(v1469, p1100[1], p1100[5], p1098 * 20);
    }
    f94(v1469, p1098 * 77.00003051757812, p1098 * 104.49432373046875, p1098 * 71.84010022264724);
    f89(v1469, p1100[1], p1100[2], p1098 * 7);
    f94(v1469, p1098 * 77.00003051757812, p1098 * 104.22160339355469, p1098 * 61.554853586049575);
    f89(v1469, p1100[1], p1100[2], p1098 * 7);
    v1469.beginPath();
    v1469.lineCap = "round";
    v1469.lineJoin = "round";
    v1469.moveTo(p1098 * 18.000030517578125, p1098 * 105.85795593261719);
    v1469.bezierCurveTo(p1098 * 134.00003051757812, p1098 * 104.85795593261719, p1098 * 77.00003051757812, p1098 * 104.85795593261719, p1098 * 136.00003051757812, p1098 * 103.85795593261719);
    v1469.closePath();
    f89(v1469, p1100[1], p1100[2], p1098 * 8);
    f94(v1469, p1098 * 77.00003051757812, p1098 * 104.6761474609375, p1098 * 32.55764119219941);
    f89(v1469, p1100[1], p1100[2], p1098 * 8);
    v1469.beginPath();
    v1469.lineCap = "round";
    v1469.lineJoin = "round";
    v1469.moveTo(p1098 * 78.00003051757812, p1098 * 112.03977966308594);
    v1469.bezierCurveTo(p1098 * 78.00003051757812, p1098 * 87.03977966308594, p1098 * 78.00003051757812, p1098 * 87.03977966308594, p1098 * 78.00003051757812, p1098 * 62.03977966308594);
    v1469.closePath();
    f89(v1469, p1100[3], p1100[2], p1098 * 8);
    v1469.beginPath();
    v1469.lineCap = "round";
    v1469.lineJoin = "round";
    v1469.moveTo(p1098 * 78.00003051757812, p1098 * 48.03977966308594);
    v1469.bezierCurveTo(p1098 * 82.00003051757812, p1098 * 55.53977966308594, p1098 * 82.00003051757812, p1098 * 55.53977966308594, p1098 * 86.00003051757812, p1098 * 63.03977966308594);
    v1469.bezierCurveTo(p1098 * 78.00003051757812, p1098 * 63.03977966308594, p1098 * 78.00003051757812, p1098 * 63.03977966308594, p1098 * 70.00003051757812, p1098 * 63.03977966308594);
    v1469.closePath();
    f89(v1469, p1100[3], p1100[2], p1098 * 4);
    v1469.beginPath();
    v1469.lineCap = "round";
    v1469.lineJoin = "round";
    v1469.moveTo(p1098 * 80.00003051757812, p1098 * 111.6761474609375);
    v1469.bezierCurveTo(p1098 * 95.00003051757812, p1098 * 97.1761474609375, p1098 * 95.00003051757812, p1098 * 97.1761474609375, p1098 * 110.00003051757812, p1098 * 82.6761474609375);
    v1469.closePath();
    f89(v1469, p1100[3], p1100[2], p1098 * 8);
    v1469.beginPath();
    v1469.lineCap = "round";
    v1469.lineJoin = "round";
    v1469.moveTo(p1098 * 107.00003051757812, p1098 * 76.6761474609375);
    v1469.bezierCurveTo(p1098 * 111.50003051757812, p1098 * 82.6761474609375, p1098 * 111.50003051757812, p1098 * 82.6761474609375, p1098 * 116.00003051757812, p1098 * 88.6761474609375);
    v1469.bezierCurveTo(p1098 * 118.50003051757812, p1098 * 81.6761474609375, p1098 * 118.50003051757812, p1098 * 81.6761474609375, p1098 * 121.00003051757812, p1098 * 74.6761474609375);
    v1469.closePath();
    f89(v1469, p1100[3], p1100[2], p1098 * 4);
    f94(v1469, p1098 * 77.00003051757812, p1098 * 105.03977966308594, p1098 * 15.556349186104045);
    f89(v1469, p1100[3], p1100[2], p1098 * 4);
    v1469.save();
    v1469.translate(p1098 * 77.00003051757812, p1098 * 31.267044067382812);
    v1469.rotate(0);
    f90(v1469, p1098 * -6, p1098 * -12.5, p1098 * 12, p1098 * 25, p1098 * 10);
    v1469.restore();
    f89(v1469, p1100[1], p1100[2], p1098 * 7);
    v1469.save();
    v1469.translate(p1098 * 77.00003051757812, p1098 * 13.267044067382812);
    v1469.rotate(0);
    f90(v1469, p1098 * -15, p1098 * -10.5, p1098 * 30, p1098 * 21, p1098 * 10);
    v1469.restore();
    f89(v1469, p1100[1], p1100[2], p1098 * 7);
    return v1468;
  }
  function f266(p1102, p1103, p1104) {
    var v1470 = document.createElement("canvas");
    var v1471 = v1470.getContext("2d");
    v1470.width = p1102 * 180;
    v1470.height = p1102 * 120;
    v1471.translate(p1102 * -65, p1102 * -35);
    v1471.globalAlpha = p1103 ? 0.5 : 1;
    v1471.translate(0, p1102 * 10);
    v1471.save();
    v1471.translate(p1102 * 150.5, p1102 * 63.84375);
    f90(v1471, p1102 * -67, p1102 * -16.5, p1102 * 134, p1102 * 33, p1102 * 5);
    v1471.restore();
    f89(v1471, p1104[0]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 80.5, p1102 * 75.34375);
    v1471.bezierCurveTo(p1102 * 83, p1102 * 106.34375, p1102 * 83, p1102 * 106.34375, p1102 * 85.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 93, p1102 * 135.84375, p1102 * 93, p1102 * 135.84375, p1102 * 100.5, p1102 * 134.34375);
    v1471.bezierCurveTo(p1102 * 99.5, p1102 * 100.84375, p1102 * 99.5, p1102 * 100.84375, p1102 * 98.5, p1102 * 67.34375);
    v1471.closePath();
    f89(v1471, p1104[0]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 206.5, p1102 * 71.34375);
    v1471.bezierCurveTo(p1102 * 203.5, p1102 * 104.34375, p1102 * 203.5, p1102 * 104.34375, p1102 * 200.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 208.5, p1102 * 137.34375, p1102 * 208.5, p1102 * 137.34375, p1102 * 216.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 219, p1102 * 102.84375, p1102 * 219, p1102 * 102.84375, p1102 * 221.5, p1102 * 68.34375);
    v1471.closePath();
    f89(v1471, p1104[0]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 136.5, p1102 * 75.34375);
    v1471.bezierCurveTo(p1102 * 139, p1102 * 94.34375, p1102 * 139, p1102 * 94.34375, p1102 * 141.5, p1102 * 113.34375);
    v1471.bezierCurveTo(p1102 * 149.5, p1102 * 115.34375, p1102 * 149.5, p1102 * 115.34375, p1102 * 157.5, p1102 * 117.34375);
    v1471.bezierCurveTo(p1102 * 162, p1102 * 97.34375, p1102 * 162, p1102 * 97.34375, p1102 * 166.5, p1102 * 77.34375);
    v1471.closePath();
    f89(v1471, p1104[0]);
    v1471.save();
    v1471.translate(p1102 * 152.5, p1102 * 80.84375);
    v1471.rotate(3.12);
    f90(v1471, p1102 * -73, p1102 * -20.5, p1102 * 146, p1102 * 41, p1102 * 5);
    v1471.restore();
    f89(v1471, p1104[0]);
    v1471.globalAlpha = 1;
    v1471.translate(0, p1102 * -10);
    v1471.save();
    v1471.translate(p1102 * 150.5, p1102 * 63.84375);
    f90(v1471, p1102 * -67, p1102 * -16.5, p1102 * 134, p1102 * 33, p1102 * 5);
    v1471.restore();
    f89(v1471, p1104[1], p1104[2], p1102 * 4);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 80.5, p1102 * 75.34375);
    v1471.bezierCurveTo(p1102 * 83, p1102 * 106.34375, p1102 * 83, p1102 * 106.34375, p1102 * 85.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 93, p1102 * 135.84375, p1102 * 93, p1102 * 135.84375, p1102 * 100.5, p1102 * 134.34375);
    v1471.bezierCurveTo(p1102 * 99.5, p1102 * 100.84375, p1102 * 99.5, p1102 * 100.84375, p1102 * 98.5, p1102 * 67.34375);
    v1471.closePath();
    f89(v1471, p1104[1], p1104[2], p1102 * 4);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 206.5, p1102 * 71.34375);
    v1471.bezierCurveTo(p1102 * 203.5, p1102 * 104.34375, p1102 * 203.5, p1102 * 104.34375, p1102 * 200.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 208.5, p1102 * 137.34375, p1102 * 208.5, p1102 * 137.34375, p1102 * 216.5, p1102 * 137.34375);
    v1471.bezierCurveTo(p1102 * 219, p1102 * 102.84375, p1102 * 219, p1102 * 102.84375, p1102 * 221.5, p1102 * 68.34375);
    v1471.closePath();
    f89(v1471, p1104[1], p1104[2], p1102 * 4);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 136.5, p1102 * 75.34375);
    v1471.bezierCurveTo(p1102 * 139, p1102 * 94.34375, p1102 * 139, p1102 * 94.34375, p1102 * 141.5, p1102 * 113.34375);
    v1471.bezierCurveTo(p1102 * 149.5, p1102 * 115.34375, p1102 * 149.5, p1102 * 115.34375, p1102 * 157.5, p1102 * 117.34375);
    v1471.bezierCurveTo(p1102 * 162, p1102 * 97.34375, p1102 * 162, p1102 * 97.34375, p1102 * 166.5, p1102 * 77.34375);
    v1471.closePath();
    f89(v1471, p1104[1], p1104[2], p1102 * 4);
    v1471.save();
    v1471.translate(p1102 * 152.5, p1102 * 80.84375);
    v1471.rotate(3.12);
    f90(v1471, p1102 * -73, p1102 * -20.5, p1102 * 146, p1102 * 41, p1102 * 5);
    v1471.restore();
    f89(v1471, p1104[1], p1104[2], p1102 * 4);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 83.5, p1102 * 73.34375);
    v1471.bezierCurveTo(p1102 * 93.5, p1102 * 70.34375, p1102 * 105.5, p1102 * 70.34375, p1102 * 124.5, p1102 * 72.34375);
    v1471.bezierCurveTo(p1102 * 132.5, p1102 * 78.34375, p1102 * 162.5, p1102 * 80.34375, p1102 * 176.5, p1102 * 76.34375);
    v1471.bezierCurveTo(p1102 * 194.5, p1102 * 69.34375, p1102 * 192.5, p1102 * 68.34375, p1102 * 199.5, p1102 * 63.34375);
    v1471.bezierCurveTo(p1102 * 204.5, p1102 * 63.34375, p1102 * 204.5, p1102 * 63.34375, p1102 * 209.5, p1102 * 63.34375);
    v1471.bezierCurveTo(p1102 * 153.5, p1102 * 82.34375, p1102 * 157.5, p1102 * 85.34375, p1102 * 209.5, p1102 * 63.34375);
    v1471.bezierCurveTo(p1102 * 194.5, p1102 * 88.34375, p1102 * 162.5, p1102 * 87.34375, p1102 * 149.5, p1102 * 88.34375);
    v1471.bezierCurveTo(p1102 * 129.5, p1102 * 81.34375, p1102 * 103.5, p1102 * 75.34375, p1102 * 83.5, p1102 * 82.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 137.5, p1102 * 65.34375);
    v1471.bezierCurveTo(p1102 * 150.5, p1102 * 76.34375, p1102 * 170.5, p1102 * 71.34375, p1102 * 174.5, p1102 * 65.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 221.5, p1102 * 85.34375);
    v1471.bezierCurveTo(p1102 * 211.5, p1102 * 79.34375, p1102 * 191.5, p1102 * 88.34375, p1102 * 181.5, p1102 * 96.34375);
    v1471.bezierCurveTo(p1102 * 201.5, p1102 * 96.34375, p1102 * 201.5, p1102 * 96.34375, p1102 * 221.5, p1102 * 96.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 84.5, p1102 * 89.34375);
    v1471.bezierCurveTo(p1102 * 102.5, p1102 * 87.34375, p1102 * 112.5, p1102 * 88.34375, p1102 * 119.5, p1102 * 97.34375);
    v1471.bezierCurveTo(p1102 * 102, p1102 * 98.34375, p1102 * 102, p1102 * 98.34375, p1102 * 84.5, p1102 * 99.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 208.5, p1102 * 104.34375);
    v1471.bezierCurveTo(p1102 * 208.5, p1102 * 110.34375, p1102 * 208.5, p1102 * 110.34375, p1102 * 208.5, p1102 * 116.34375);
    v1471.bezierCurveTo(p1102 * 211.5, p1102 * 110.34375, p1102 * 211.5, p1102 * 110.34375, p1102 * 214.5, p1102 * 104.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 87.5, p1102 * 117.34375);
    v1471.bezierCurveTo(p1102 * 92, p1102 * 118.84375, p1102 * 92, p1102 * 118.84375, p1102 * 96.5, p1102 * 120.34375);
    v1471.bezierCurveTo(p1102 * 93, p1102 * 123.84375, p1102 * 93, p1102 * 123.84375, p1102 * 89.5, p1102 * 127.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 107.5, p1102 * 51.34375);
    v1471.bezierCurveTo(p1102 * 122.5, p1102 * 54.34375, p1102 * 122.5, p1102 * 54.34375, p1102 * 137.5, p1102 * 57.34375);
    v1471.bezierCurveTo(p1102 * 118, p1102 * 57.34375, p1102 * 118, p1102 * 57.34375, p1102 * 98.5, p1102 * 57.34375);
    v1471.bezierCurveTo(p1102 * 94.5, p1102 * 54.84375, p1102 * 94.5, p1102 * 54.84375, p1102 * 90.5, p1102 * 52.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 170.5, p1102 * 52.34375);
    v1471.bezierCurveTo(p1102 * 179.5, p1102 * 51.84375, p1102 * 179.5, p1102 * 51.84375, p1102 * 188.5, p1102 * 51.34375);
    v1471.bezierCurveTo(p1102 * 187.5, p1102 * 53.84375, p1102 * 187.5, p1102 * 53.84375, p1102 * 186.5, p1102 * 56.34375);
    v1471.bezierCurveTo(p1102 * 177, p1102 * 56.34375, p1102 * 177, p1102 * 56.34375, p1102 * 167.5, p1102 * 56.34375);
    v1471.closePath();
    f89(v1471, p1104[3]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 80.5, p1102 * 69.34375);
    v1471.bezierCurveTo(p1102 * 86.5, p1102 * 70.34375, p1102 * 86.5, p1102 * 70.34375, p1102 * 92.5, p1102 * 71.34375);
    v1471.bezierCurveTo(p1102 * 86, p1102 * 73.34375, p1102 * 86, p1102 * 73.34375, p1102 * 79.5, p1102 * 75.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 222.5, p1102 * 75.34375);
    v1471.bezierCurveTo(p1102 * 214.5, p1102 * 76.34375, p1102 * 214.5, p1102 * 76.34375, p1102 * 206.5, p1102 * 77.34375);
    v1471.bezierCurveTo(p1102 * 216.5, p1102 * 79.34375, p1102 * 216.5, p1102 * 79.34375, p1102 * 226.5, p1102 * 81.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 116.5, p1102 * 100.34375);
    v1471.bezierCurveTo(p1102 * 128, p1102 * 97.34375, p1102 * 128, p1102 * 97.34375, p1102 * 139.5, p1102 * 94.34375);
    v1471.bezierCurveTo(p1102 * 140, p1102 * 96.84375, p1102 * 140, p1102 * 96.84375, p1102 * 140.5, p1102 * 99.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 112.5, p1102 * 48.34375);
    v1471.bezierCurveTo(p1102 * 115.5, p1102 * 50.84375, p1102 * 115.5, p1102 * 50.84375, p1102 * 118.5, p1102 * 53.34375);
    v1471.bezierCurveTo(p1102 * 131, p1102 * 50.84375, p1102 * 131, p1102 * 50.84375, p1102 * 143.5, p1102 * 48.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 216.5, p1102 * 109.34375);
    v1471.bezierCurveTo(p1102 * 213, p1102 * 114.84375, p1102 * 213, p1102 * 114.84375, p1102 * 209.5, p1102 * 120.34375);
    v1471.bezierCurveTo(p1102 * 212, p1102 * 118.84375, p1102 * 212, p1102 * 118.84375, p1102 * 214.5, p1102 * 117.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    v1471.beginPath();
    v1471.lineCap = "round";
    v1471.lineJoin = "round";
    v1471.moveTo(p1102 * 86.5, p1102 * 133.34375);
    v1471.bezierCurveTo(p1102 * 89, p1102 * 127.34375, p1102 * 89, p1102 * 127.34375, p1102 * 91.5, p1102 * 121.34375);
    v1471.bezierCurveTo(p1102 * 92.5, p1102 * 127.34375, p1102 * 92.5, p1102 * 127.34375, p1102 * 93.5, p1102 * 133.34375);
    v1471.closePath();
    f89(v1471, p1104[2]);
    return v1470;
  }
  function f267(p1105, p1106, p1107) {
    var v1472 = document.createElement("canvas");
    var v1473 = v1472.getContext("2d");
    v1472.width = p1105 * 573;
    v1472.height = p1105 * 350;
    if (p1107 == 1) {
      v1473.beginPath();
      v1473.lineCap = "round";
      v1473.lineJoin = "round";
      v1473.moveTo(p1105 * 336, p1105 * 72);
      v1473.bezierCurveTo(p1105 * 366, p1105 * 15, p1105 * 426, p1105 * 36, p1105 * 497, p1105 * 83);
      v1473.bezierCurveTo(p1105 * 522, p1105 * 85, p1105 * 522, p1105 * 85, p1105 * 547, p1105 * 87);
      v1473.bezierCurveTo(p1105 * 476.5, p1105 * 205, p1105 * 476.5, p1105 * 205, p1105 * 406, p1105 * 323);
      v1473.bezierCurveTo(p1105 * 297.5, p1105 * 319, p1105 * 297.5, p1105 * 319, p1105 * 189, p1105 * 315);
      v1473.bezierCurveTo(p1105 * 105.5, p1105 * 279, p1105 * 105.5, p1105 * 279, p1105 * 22, p1105 * 243);
      v1473.bezierCurveTo(p1105 * 92, p1105 * 140, p1105 * 92, p1105 * 140, p1105 * 162, p1105 * 37);
      v1473.bezierCurveTo(p1105 * 173, p1105 * 39, p1105 * 173, p1105 * 39, p1105 * 184, p1105 * 41);
      v1473.bezierCurveTo(p1105 * 185, p1105 * 38.5, p1105 * 185, p1105 * 38.5, p1105 * 186, p1105 * 36);
      v1473.bezierCurveTo(p1105 * 323, p1105 * 13, p1105 * 322, p1105 * 25, p1105 * 337, p1105 * 74);
      v1473.closePath();
      f89(v1473, p1106[4], p1106[4], p1105 * 35);
    }
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 168, p1105 * 42);
    v1473.bezierCurveTo(p1105 * 255, p1105 * 60, p1105 * 255, p1105 * 60, p1105 * 342, p1105 * 78);
    v1473.bezierCurveTo(p1105 * 443, p1105 * 81.5, p1105 * 443, p1105 * 81.5, p1105 * 544, p1105 * 85);
    v1473.bezierCurveTo(p1105 * 475, p1105 * 204.5, p1105 * 475, p1105 * 204.5, p1105 * 406, p1105 * 324);
    v1473.bezierCurveTo(p1105 * 297.5, p1105 * 320, p1105 * 297.5, p1105 * 320, p1105 * 189, p1105 * 316);
    v1473.bezierCurveTo(p1105 * 105.5, p1105 * 279, p1105 * 105.5, p1105 * 279, p1105 * 22, p1105 * 242);
    v1473.closePath();
    f89(v1473, p1106[0], p1106[1], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 188, p1105 * 41);
    v1473.bezierCurveTo(p1105 * 308, p1105 * 15, p1105 * 325, p1105 * 18, p1105 * 337, p1105 * 66);
    v1473.bezierCurveTo(p1105 * 191, p1105 * 305, p1105 * 196, p1105 * 286, p1105 * 184, p1105 * 307);
    v1473.bezierCurveTo(p1105 * 175, p1105 * 250, p1105 * 90, p1105 * 254, p1105 * 52, p1105 * 241);
    v1473.closePath();
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 336, p1105 * 71);
    v1473.bezierCurveTo(p1105 * 375, p1105 * 8, p1105 * 429, p1105 * 50, p1105 * 518, p1105 * 92);
    v1473.bezierCurveTo(p1105 * 455, p1105 * 199.5, p1105 * 455, p1105 * 199.5, p1105 * 392, p1105 * 307);
    v1473.bezierCurveTo(p1105 * 227, p1105 * 301, p1105 * 261, p1105 * 255, p1105 * 188, p1105 * 308);
    v1473.closePath();
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 357, p1105 * 76);
    v1473.bezierCurveTo(p1105 * 390, p1105 * 67, p1105 * 414, p1105 * 86, p1105 * 435, p1105 * 104);
    v1473.bezierCurveTo(p1105 * 417, p1105 * 135, p1105 * 417, p1105 * 135, p1105 * 399, p1105 * 166);
    v1473.bezierCurveTo(p1105 * 352, p1105 * 140, p1105 * 345, p1105 * 139, p1105 * 319, p1105 * 142);
    v1473.closePath();
    f89(v1473, p1106[3], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 309, p1105 * 168);
    v1473.bezierCurveTo(p1105 * 345, p1105 * 163, p1105 * 372, p1105 * 180, p1105 * 412, p1105 * 203);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 263, p1105 * 54);
    v1473.bezierCurveTo(p1105 * 305, p1105 * 44, p1105 * 307, p1105 * 51, p1105 * 311, p1105 * 64);
    v1473.bezierCurveTo(p1105 * 270.5, p1105 * 129.5, p1105 * 270.5, p1105 * 129.5, p1105 * 230, p1105 * 195);
    v1473.bezierCurveTo(p1105 * 221, p1105 * 175, p1105 * 203, p1105 * 171, p1105 * 186, p1105 * 172);
    v1473.closePath();
    f89(v1473, p1106[3], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 292, p1105 * 198);
    v1473.bezierCurveTo(p1105 * 328, p1105 * 191, p1105 * 364, p1105 * 211, p1105 * 401, p1105 * 237);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 245, p1105 * 68);
    v1473.bezierCurveTo(p1105 * 210, p1105 * 72, p1105 * 210, p1105 * 72, p1105 * 189, p1105 * 69);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 222, p1105 * 96);
    v1473.bezierCurveTo(p1105 * 196, p1105 * 97, p1105 * 193, p1105 * 97, p1105 * 177, p1105 * 92);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 207, p1105 * 124);
    v1473.bezierCurveTo(p1105 * 179, p1105 * 123, p1105 * 177, p1105 * 124, p1105 * 161, p1105 * 119);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 115, p1105 * 183);
    v1473.bezierCurveTo(p1105 * 184, p1105 * 185, p1105 * 203, p1105 * 198, p1105 * 219, p1105 * 221);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 98, p1105 * 213);
    v1473.bezierCurveTo(p1105 * 161, p1105 * 214, p1105 * 193, p1105 * 227, p1105 * 201, p1105 * 249);
    f89(v1473, p1106[2], p1106[3], p1105 * 12);
    v1473.beginPath();
    v1473.lineCap = "round";
    v1473.lineJoin = "round";
    v1473.moveTo(p1105 * 399, p1105 * 257);
    v1473.bezierCurveTo(p1105 * 287, p1105 * 215, p1105 * 280, p1105 * 215, p1105 * 263, p1105 * 222);
    v1473.bezierCurveTo(p1105 * 253, p1105 * 238, p1105 * 247, p1105 * 245, p1105 * 243, p1105 * 254);
    v1473.bezierCurveTo(p1105 * 267, p1105 * 236, p1105 * 292, p1105 * 263, p1105 * 377, p1105 * 284);
    f89(v1473, p1106[3], p1106[3], p1105 * 12);
    return v1472;
  }
  function f268(p1108, p1109) {
    var v1474 = document.createElement("canvas");
    var v1475 = v1474.getContext("2d");
    v1474.width = p1108 * 376;
    v1474.height = p1108 * 371;
    v1475.globalAlpha = 0.5;
    v1475.translate(p1108 * 5, p1108 * 5);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 191.633544921875, p1108 * 123.98580932617188);
    v1475.bezierCurveTo(p1108 * 215.633544921875, p1108 * 85.98580932617188, p1108 * 187.633544921875, p1108 * 71.98580932617188, p1108 * 202.633544921875, p1108 * 19.985809326171875);
    v1475.bezierCurveTo(p1108 * 231.633544921875, p1108 * 68.98580932617188, p1108 * 253.633544921875, p1108 * 71.98580932617188, p1108 * 256.633544921875, p1108 * 93.98580932617188);
    v1475.bezierCurveTo(p1108 * 306.633544921875, p1108 * 64.98580932617188, p1108 * 319.633544921875, p1108 * 61.985809326171875, p1108 * 350.633544921875, p1108 * 58.985809326171875);
    v1475.bezierCurveTo(p1108 * 280.633544921875, p1108 * 86.98580932617188, p1108 * 281.633544921875, p1108 * 106.98580932617188, p1108 * 268.633544921875, p1108 * 130.98580932617188);
    v1475.bezierCurveTo(p1108 * 295.633544921875, p1108 * 158.98580932617188, p1108 * 328.633544921875, p1108 * 155.98580932617188, p1108 * 353.633544921875, p1108 * 90.98580932617188);
    v1475.bezierCurveTo(p1108 * 371.633544921875, p1108 * 158.98580932617188, p1108 * 337.633544921875, p1108 * 210.98580932617188, p1108 * 286.633544921875, p1108 * 209.98580932617188);
    v1475.bezierCurveTo(p1108 * 323.633544921875, p1108 * 230.98580932617188, p1108 * 317.633544921875, p1108 * 274.9858093261719, p1108 * 356.633544921875, p1108 * 305.9858093261719);
    v1475.bezierCurveTo(p1108 * 288.633544921875, p1108 * 297.9858093261719, p1108 * 288.633544921875, p1108 * 265.9858093261719, p1108 * 275.633544921875, p1108 * 266.9858093261719);
    v1475.bezierCurveTo(p1108 * 280.633544921875, p1108 * 294.9858093261719, p1108 * 315.633544921875, p1108 * 306.9858093261719, p1108 * 336.633544921875, p1108 * 316.9858093261719);
    v1475.bezierCurveTo(p1108 * 295.633544921875, p1108 * 318.9858093261719, p1108 * 264.633544921875, p1108 * 302.9858093261719, p1108 * 254.633544921875, p1108 * 289.9858093261719);
    v1475.bezierCurveTo(p1108 * 252.633544921875, p1108 * 301.9858093261719, p1108 * 224.633544921875, p1108 * 315.9858093261719, p1108 * 201.633544921875, p1108 * 356.9858093261719);
    v1475.bezierCurveTo(p1108 * 195.633544921875, p1108 * 313.9858093261719, p1108 * 195.633544921875, p1108 * 308.9858093261719, p1108 * 196.633544921875, p1108 * 307.9858093261719);
    v1475.bezierCurveTo(p1108 * 197.633544921875, p1108 * 289.9858093261719, p1108 * 207.633544921875, p1108 * 283.9858093261719, p1108 * 195.633544921875, p1108 * 258.9858093261719);
    v1475.bezierCurveTo(p1108 * 182.633544921875, p1108 * 282.9858093261719, p1108 * 190.633544921875, p1108 * 287.9858093261719, p1108 * 193.633544921875, p1108 * 297.9858093261719);
    v1475.bezierCurveTo(p1108 * 195.633544921875, p1108 * 306.9858093261719, p1108 * 191.633544921875, p1108 * 334.9858093261719, p1108 * 187.633544921875, p1108 * 354.9858093261719);
    v1475.bezierCurveTo(p1108 * 165.633544921875, p1108 * 320.9858093261719, p1108 * 138.633544921875, p1108 * 307.9858093261719, p1108 * 135.633544921875, p1108 * 288.9858093261719);
    v1475.bezierCurveTo(p1108 * 110.633544921875, p1108 * 318.9858093261719, p1108 * 68.633544921875, p1108 * 323.9858093261719, p1108 * 49.633544921875, p1108 * 320.9858093261719);
    v1475.bezierCurveTo(p1108 * 88.633544921875, p1108 * 308.9858093261719, p1108 * 108.633544921875, p1108 * 284.9858093261719, p1108 * 118.633544921875, p1108 * 258.9858093261719);
    v1475.bezierCurveTo(p1108 * 86.633544921875, p1108 * 264.9858093261719, p1108 * 75.633544921875, p1108 * 310.9858093261719, p1108 * 19.633544921875, p1108 * 304.9858093261719);
    v1475.bezierCurveTo(p1108 * 54.633544921875, p1108 * 276.9858093261719, p1108 * 59.633544921875, p1108 * 214.98580932617188, p1108 * 105.633544921875, p1108 * 205.98580932617188);
    v1475.bezierCurveTo(p1108 * 14.633544921875, p1108 * 201.98580932617188, p1108 * 24.633544921875, p1108 * 141.98580932617188, p1108 * 25.633544921875, p1108 * 82.98580932617188);
    v1475.bezierCurveTo(p1108 * 49.633544921875, p1108 * 168.98580932617188, p1108 * 87.633544921875, p1108 * 141.98580932617188, p1108 * 112.633544921875, p1108 * 123.98580932617188);
    v1475.bezierCurveTo(p1108 * 95.633544921875, p1108 * 75.98580932617188, p1108 * 70.633544921875, p1108 * 68.98580932617188, p1108 * 35.633544921875, p1108 * 50.985809326171875);
    v1475.bezierCurveTo(p1108 * 70.633544921875, p1108 * 53.985809326171875, p1108 * 102.633544921875, p1108 * 65.98580932617188, p1108 * 125.633544921875, p1108 * 84.98580932617188);
    v1475.bezierCurveTo(p1108 * 133.633544921875, p1108 * 69.98580932617188, p1108 * 166.633544921875, p1108 * 42.985809326171875, p1108 * 176.633544921875, p1108 * 21.985809326171875);
    v1475.bezierCurveTo(p1108 * 185.633544921875, p1108 * 49.985809326171875, p1108 * 168.633544921875, p1108 * 95.98580932617188, p1108 * 191.633544921875, p1108 * 121.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[0]);
    v1475.globalAlpha = 1;
    v1475.translate(p1108 * -4, p1108 * -5);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 191.633544921875, p1108 * 123.98580932617188);
    v1475.bezierCurveTo(p1108 * 215.633544921875, p1108 * 85.98580932617188, p1108 * 187.633544921875, p1108 * 71.98580932617188, p1108 * 202.633544921875, p1108 * 19.985809326171875);
    v1475.bezierCurveTo(p1108 * 231.633544921875, p1108 * 68.98580932617188, p1108 * 253.633544921875, p1108 * 71.98580932617188, p1108 * 256.633544921875, p1108 * 93.98580932617188);
    v1475.bezierCurveTo(p1108 * 306.633544921875, p1108 * 64.98580932617188, p1108 * 319.633544921875, p1108 * 61.985809326171875, p1108 * 350.633544921875, p1108 * 58.985809326171875);
    v1475.bezierCurveTo(p1108 * 280.633544921875, p1108 * 86.98580932617188, p1108 * 281.633544921875, p1108 * 106.98580932617188, p1108 * 268.633544921875, p1108 * 130.98580932617188);
    v1475.bezierCurveTo(p1108 * 295.633544921875, p1108 * 158.98580932617188, p1108 * 328.633544921875, p1108 * 155.98580932617188, p1108 * 353.633544921875, p1108 * 90.98580932617188);
    v1475.bezierCurveTo(p1108 * 371.633544921875, p1108 * 158.98580932617188, p1108 * 337.633544921875, p1108 * 210.98580932617188, p1108 * 286.633544921875, p1108 * 209.98580932617188);
    v1475.bezierCurveTo(p1108 * 323.633544921875, p1108 * 230.98580932617188, p1108 * 317.633544921875, p1108 * 274.9858093261719, p1108 * 356.633544921875, p1108 * 305.9858093261719);
    v1475.bezierCurveTo(p1108 * 288.633544921875, p1108 * 297.9858093261719, p1108 * 288.633544921875, p1108 * 265.9858093261719, p1108 * 275.633544921875, p1108 * 266.9858093261719);
    v1475.bezierCurveTo(p1108 * 280.633544921875, p1108 * 294.9858093261719, p1108 * 315.633544921875, p1108 * 306.9858093261719, p1108 * 336.633544921875, p1108 * 316.9858093261719);
    v1475.bezierCurveTo(p1108 * 295.633544921875, p1108 * 318.9858093261719, p1108 * 264.633544921875, p1108 * 302.9858093261719, p1108 * 254.633544921875, p1108 * 289.9858093261719);
    v1475.bezierCurveTo(p1108 * 252.633544921875, p1108 * 301.9858093261719, p1108 * 224.633544921875, p1108 * 315.9858093261719, p1108 * 201.633544921875, p1108 * 356.9858093261719);
    v1475.bezierCurveTo(p1108 * 195.633544921875, p1108 * 313.9858093261719, p1108 * 195.633544921875, p1108 * 308.9858093261719, p1108 * 196.633544921875, p1108 * 307.9858093261719);
    v1475.bezierCurveTo(p1108 * 197.633544921875, p1108 * 289.9858093261719, p1108 * 207.633544921875, p1108 * 283.9858093261719, p1108 * 195.633544921875, p1108 * 258.9858093261719);
    v1475.bezierCurveTo(p1108 * 182.633544921875, p1108 * 282.9858093261719, p1108 * 190.633544921875, p1108 * 287.9858093261719, p1108 * 193.633544921875, p1108 * 297.9858093261719);
    v1475.bezierCurveTo(p1108 * 195.633544921875, p1108 * 306.9858093261719, p1108 * 191.633544921875, p1108 * 334.9858093261719, p1108 * 187.633544921875, p1108 * 354.9858093261719);
    v1475.bezierCurveTo(p1108 * 165.633544921875, p1108 * 320.9858093261719, p1108 * 138.633544921875, p1108 * 307.9858093261719, p1108 * 135.633544921875, p1108 * 288.9858093261719);
    v1475.bezierCurveTo(p1108 * 110.633544921875, p1108 * 318.9858093261719, p1108 * 68.633544921875, p1108 * 323.9858093261719, p1108 * 49.633544921875, p1108 * 320.9858093261719);
    v1475.bezierCurveTo(p1108 * 88.633544921875, p1108 * 308.9858093261719, p1108 * 108.633544921875, p1108 * 284.9858093261719, p1108 * 118.633544921875, p1108 * 258.9858093261719);
    v1475.bezierCurveTo(p1108 * 86.633544921875, p1108 * 264.9858093261719, p1108 * 75.633544921875, p1108 * 310.9858093261719, p1108 * 19.633544921875, p1108 * 304.9858093261719);
    v1475.bezierCurveTo(p1108 * 54.633544921875, p1108 * 276.9858093261719, p1108 * 59.633544921875, p1108 * 214.98580932617188, p1108 * 105.633544921875, p1108 * 205.98580932617188);
    v1475.bezierCurveTo(p1108 * 14.633544921875, p1108 * 201.98580932617188, p1108 * 24.633544921875, p1108 * 141.98580932617188, p1108 * 25.633544921875, p1108 * 82.98580932617188);
    v1475.bezierCurveTo(p1108 * 49.633544921875, p1108 * 168.98580932617188, p1108 * 87.633544921875, p1108 * 141.98580932617188, p1108 * 112.633544921875, p1108 * 123.98580932617188);
    v1475.bezierCurveTo(p1108 * 95.633544921875, p1108 * 75.98580932617188, p1108 * 70.633544921875, p1108 * 68.98580932617188, p1108 * 35.633544921875, p1108 * 50.985809326171875);
    v1475.bezierCurveTo(p1108 * 70.633544921875, p1108 * 53.985809326171875, p1108 * 102.633544921875, p1108 * 65.98580932617188, p1108 * 125.633544921875, p1108 * 84.98580932617188);
    v1475.bezierCurveTo(p1108 * 133.633544921875, p1108 * 69.98580932617188, p1108 * 166.633544921875, p1108 * 42.985809326171875, p1108 * 176.633544921875, p1108 * 21.985809326171875);
    v1475.bezierCurveTo(p1108 * 185.633544921875, p1108 * 49.985809326171875, p1108 * 168.633544921875, p1108 * 95.98580932617188, p1108 * 191.633544921875, p1108 * 121.98580932617188);
    v1475.closePath();
    f89(v1475, undefined, p1109[1], p1108 * 12);
    v1475.translate(p1108 * -1, p1108 * 0);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 270.633544921875, p1108 * 88.98580932617188);
    v1475.bezierCurveTo(p1108 * 296.633544921875, p1108 * 65.98580932617188, p1108 * 318.633544921875, p1108 * 62.985809326171875, p1108 * 348.633544921875, p1108 * 57.985809326171875);
    v1475.bezierCurveTo(p1108 * 309.633544921875, p1108 * 76.98580932617188, p1108 * 291.633544921875, p1108 * 88.98580932617188, p1108 * 280.633544921875, p1108 * 99.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[4], p1109[5], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 275.633544921875, p1108 * 281.9858093261719);
    v1475.bezierCurveTo(p1108 * 303.633544921875, p1108 * 308.9858093261719, p1108 * 321.633544921875, p1108 * 308.9858093261719, p1108 * 335.633544921875, p1108 * 315.9858093261719);
    v1475.bezierCurveTo(p1108 * 305.633544921875, p1108 * 320.9858093261719, p1108 * 278.633544921875, p1108 * 307.9858093261719, p1108 * 264.633544921875, p1108 * 293.9858093261719);
    v1475.closePath();
    f89(v1475, p1109[4], p1109[5], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 124.633544921875, p1108 * 291.9858093261719);
    v1475.bezierCurveTo(p1108 * 106.633544921875, p1108 * 316.9858093261719, p1108 * 72.633544921875, p1108 * 325.9858093261719, p1108 * 53.633544921875, p1108 * 319.9858093261719);
    v1475.bezierCurveTo(p1108 * 83.633544921875, p1108 * 308.9858093261719, p1108 * 97.633544921875, p1108 * 298.9858093261719, p1108 * 112.633544921875, p1108 * 284.9858093261719);
    v1475.closePath();
    f89(v1475, p1109[4], p1109[5], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 113.633544921875, p1108 * 80.98580932617188);
    v1475.bezierCurveTo(p1108 * 91.633544921875, p1108 * 54.985809326171875, p1108 * 72.633544921875, p1108 * 56.985809326171875, p1108 * 36.633544921875, p1108 * 49.985809326171875);
    v1475.bezierCurveTo(p1108 * 87.633544921875, p1108 * 72.98580932617188, p1108 * 95.633544921875, p1108 * 82.98580932617188, p1108 * 106.633544921875, p1108 * 96.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[4], p1109[5], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 202.633544921875, p1108 * 20.985809326171875);
    v1475.bezierCurveTo(p1108 * 219.633544921875, p1108 * 49.985809326171875, p1108 * 259.633544921875, p1108 * 80.98580932617188, p1108 * 255.633544921875, p1108 * 92.98580932617188);
    v1475.bezierCurveTo(p1108 * 268.633544921875, p1108 * 86.98580932617188, p1108 * 265.633544921875, p1108 * 87.98580932617188, p1108 * 275.633544921875, p1108 * 82.98580932617188);
    v1475.bezierCurveTo(p1108 * 283.633544921875, p1108 * 87.98580932617188, p1108 * 283.633544921875, p1108 * 87.98580932617188, p1108 * 291.633544921875, p1108 * 92.98580932617188);
    v1475.bezierCurveTo(p1108 * 269.633544921875, p1108 * 116.98580932617188, p1108 * 270.633544921875, p1108 * 124.98580932617188, p1108 * 267.633544921875, p1108 * 130.98580932617188);
    v1475.bezierCurveTo(p1108 * 307.633544921875, p1108 * 168.98580932617188, p1108 * 339.633544921875, p1108 * 132.98580932617188, p1108 * 352.633544921875, p1108 * 93.98580932617188);
    v1475.bezierCurveTo(p1108 * 366.633544921875, p1108 * 145.98580932617188, p1108 * 345.633544921875, p1108 * 207.98580932617188, p1108 * 286.633544921875, p1108 * 208.98580932617188);
    v1475.bezierCurveTo(p1108 * 315.633544921875, p1108 * 223.98580932617188, p1108 * 327.633544921875, p1108 * 287.9858093261719, p1108 * 355.633544921875, p1108 * 305.9858093261719);
    v1475.bezierCurveTo(p1108 * 293.633544921875, p1108 * 298.9858093261719, p1108 * 293.633544921875, p1108 * 275.9858093261719, p1108 * 276.633544921875, p1108 * 266.9858093261719);
    v1475.bezierCurveTo(p1108 * 274.633544921875, p1108 * 282.9858093261719, p1108 * 287.633544921875, p1108 * 288.9858093261719, p1108 * 295.633544921875, p1108 * 296.9858093261719);
    v1475.bezierCurveTo(p1108 * 287.133544921875, p1108 * 302.4858093261719, p1108 * 287.133544921875, p1108 * 302.4858093261719, p1108 * 278.633544921875, p1108 * 307.9858093261719);
    v1475.bezierCurveTo(p1108 * 261.633544921875, p1108 * 297.9858093261719, p1108 * 258.633544921875, p1108 * 293.9858093261719, p1108 * 255.633544921875, p1108 * 290.9858093261719);
    v1475.bezierCurveTo(p1108 * 249.633544921875, p1108 * 301.9858093261719, p1108 * 225.633544921875, p1108 * 320.9858093261719, p1108 * 202.633544921875, p1108 * 354.9858093261719);
    v1475.bezierCurveTo(p1108 * 195.633544921875, p1108 * 318.9858093261719, p1108 * 196.633544921875, p1108 * 306.9858093261719, p1108 * 198.633544921875, p1108 * 300.9858093261719);
    v1475.bezierCurveTo(p1108 * 209.633544921875, p1108 * 268.9858093261719, p1108 * 199.633544921875, p1108 * 266.9858093261719, p1108 * 195.633544921875, p1108 * 256.9858093261719);
    v1475.bezierCurveTo(p1108 * 183.633544921875, p1108 * 274.9858093261719, p1108 * 182.633544921875, p1108 * 281.9858093261719, p1108 * 192.633544921875, p1108 * 305.9858093261719);
    v1475.bezierCurveTo(p1108 * 194.633544921875, p1108 * 317.9858093261719, p1108 * 191.633544921875, p1108 * 336.9858093261719, p1108 * 186.633544921875, p1108 * 351.9858093261719);
    v1475.bezierCurveTo(p1108 * 166.633544921875, p1108 * 318.9858093261719, p1108 * 141.633544921875, p1108 * 303.9858093261719, p1108 * 136.633544921875, p1108 * 286.9858093261719);
    v1475.bezierCurveTo(p1108 * 122.633544921875, p1108 * 303.9858093261719, p1108 * 115.633544921875, p1108 * 305.9858093261719, p1108 * 109.633544921875, p1108 * 306.9858093261719);
    v1475.bezierCurveTo(p1108 * 101.133544921875, p1108 * 301.9858093261719, p1108 * 94.633544921875, p1108 * 297.9858093261719, p1108 * 92.633544921875, p1108 * 296.9858093261719);
    v1475.bezierCurveTo(p1108 * 116.633544921875, p1108 * 277.9858093261719, p1108 * 116.633544921875, p1108 * 266.9858093261719, p1108 * 119.633544921875, p1108 * 257.9858093261719);
    v1475.bezierCurveTo(p1108 * 107.633544921875, p1108 * 257.9858093261719, p1108 * 65.633544921875, p1108 * 308.9858093261719, p1108 * 24.633544921875, p1108 * 303.9858093261719);
    v1475.bezierCurveTo(p1108 * 51.633544921875, p1108 * 275.9858093261719, p1108 * 64.633544921875, p1108 * 220.98580932617188, p1108 * 108.633544921875, p1108 * 205.98580932617188);
    v1475.bezierCurveTo(p1108 * 14.633544921875, p1108 * 198.98580932617188, p1108 * 26.633544921875, p1108 * 142.98580932617188, p1108 * 25.633544921875, p1108 * 86.98580932617188);
    v1475.bezierCurveTo(p1108 * 41.633544921875, p1108 * 155.98580932617188, p1108 * 81.633544921875, p1108 * 148.98580932617188, p1108 * 113.633544921875, p1108 * 124.98580932617188);
    v1475.bezierCurveTo(p1108 * 102.633544921875, p1108 * 93.98580932617188, p1108 * 95.633544921875, p1108 * 88.98580932617188, p1108 * 89.633544921875, p1108 * 81.98580932617188);
    v1475.bezierCurveTo(p1108 * 97.633544921875, p1108 * 76.48580932617188, p1108 * 97.633544921875, p1108 * 76.48580932617188, p1108 * 105.633544921875, p1108 * 70.98580932617188);
    v1475.bezierCurveTo(p1108 * 120.633544921875, p1108 * 78.98580932617188, p1108 * 121.633544921875, p1108 * 81.98580932617188, p1108 * 124.633544921875, p1108 * 86.98580932617188);
    v1475.bezierCurveTo(p1108 * 132.633544921875, p1108 * 71.98580932617188, p1108 * 160.633544921875, p1108 * 56.985809326171875, p1108 * 175.633544921875, p1108 * 23.985809326171875);
    v1475.bezierCurveTo(p1108 * 182.633544921875, p1108 * 53.985809326171875, p1108 * 170.633544921875, p1108 * 102.98580932617188, p1108 * 191.633544921875, p1108 * 125.98580932617188);
    v1475.bezierCurveTo(p1108 * 214.633544921875, p1108 * 89.98580932617188, p1108 * 192.633544921875, p1108 * 58.985809326171875, p1108 * 202.633544921875, p1108 * 20.985809326171875);
    v1475.closePath();
    f89(v1475, p1109[2], p1109[3], p1108 * 5);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 203.633544921875, p1108 * 21.985809326171875);
    v1475.bezierCurveTo(p1108 * 223.633544921875, p1108 * 63.985809326171875, p1108 * 227.633544921875, p1108 * 72.98580932617188, p1108 * 235.633544921875, p1108 * 98.98580932617188);
    v1475.bezierCurveTo(p1108 * 241.633544921875, p1108 * 123.98580932617188, p1108 * 225.633544921875, p1108 * 138.98580932617188, p1108 * 196.633544921875, p1108 * 122.98580932617188);
    v1475.bezierCurveTo(p1108 * 213.633544921875, p1108 * 93.98580932617188, p1108 * 199.633544921875, p1108 * 49.985809326171875, p1108 * 203.633544921875, p1108 * 26.985809326171875);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 175.633544921875, p1108 * 25.985809326171875);
    v1475.bezierCurveTo(p1108 * 176.633544921875, p1108 * 51.985809326171875, p1108 * 171.633544921875, p1108 * 88.98580932617188, p1108 * 186.633544921875, p1108 * 121.98580932617188);
    v1475.bezierCurveTo(p1108 * 156.633544921875, p1108 * 144.98580932617188, p1108 * 139.633544921875, p1108 * 120.98580932617188, p1108 * 147.633544921875, p1108 * 97.98580932617188);
    v1475.bezierCurveTo(p1108 * 152.633544921875, p1108 * 77.98580932617188, p1108 * 162.633544921875, p1108 * 60.985809326171875, p1108 * 176.633544921875, p1108 * 25.985809326171875);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 26.633544921875, p1108 * 96.98580932617188);
    v1475.bezierCurveTo(p1108 * 38.633544921875, p1108 * 151.98580932617188, p1108 * 61.633544921875, p1108 * 161.98580932617188, p1108 * 88.633544921875, p1108 * 168.98580932617188);
    v1475.bezierCurveTo(p1108 * 117.633544921875, p1108 * 177.98580932617188, p1108 * 113.633544921875, p1108 * 185.98580932617188, p1108 * 106.633544921875, p1108 * 204.98580932617188);
    v1475.bezierCurveTo(p1108 * 32.633544921875, p1108 * 204.98580932617188, p1108 * 25.633544921875, p1108 * 149.98580932617188, p1108 * 25.633544921875, p1108 * 97.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 351.633544921875, p1108 * 99.98580932617188);
    v1475.bezierCurveTo(p1108 * 365.633544921875, p1108 * 161.98580932617188, p1108 * 333.633544921875, p1108 * 203.98580932617188, p1108 * 287.633544921875, p1108 * 207.98580932617188);
    v1475.bezierCurveTo(p1108 * 255.633544921875, p1108 * 208.98580932617188, p1108 * 266.633544921875, p1108 * 174.98580932617188, p1108 * 285.633544921875, p1108 * 176.98580932617188);
    v1475.bezierCurveTo(p1108 * 313.633544921875, p1108 * 178.98580932617188, p1108 * 348.633544921875, p1108 * 135.98580932617188, p1108 * 353.633544921875, p1108 * 99.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 350.633544921875, p1108 * 302.9858093261719);
    v1475.bezierCurveTo(p1108 * 310.633544921875, p1108 * 280.9858093261719, p1108 * 314.633544921875, p1108 * 244.98580932617188, p1108 * 292.633544921875, p1108 * 230.98580932617188);
    v1475.bezierCurveTo(p1108 * 272.633544921875, p1108 * 215.98580932617188, p1108 * 263.633544921875, p1108 * 222.98580932617188, p1108 * 256.633544921875, p1108 * 236.98580932617188);
    v1475.bezierCurveTo(p1108 * 251.633544921875, p1108 * 249.98580932617188, p1108 * 264.633544921875, p1108 * 255.98580932617188, p1108 * 279.633544921875, p1108 * 268.9858093261719);
    v1475.bezierCurveTo(p1108 * 306.633544921875, p1108 * 295.9858093261719, p1108 * 325.633544921875, p1108 * 299.9858093261719, p1108 * 349.633544921875, p1108 * 302.9858093261719);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 95.633544921875, p1108 * 224.98580932617188);
    v1475.bezierCurveTo(p1108 * 64.633544921875, p1108 * 245.98580932617188, p1108 * 62.633544921875, p1108 * 280.9858093261719, p1108 * 32.633544921875, p1108 * 303.9858093261719);
    v1475.bezierCurveTo(p1108 * 59.633544921875, p1108 * 301.9858093261719, p1108 * 102.633544921875, p1108 * 260.9858093261719, p1108 * 116.633544921875, p1108 * 255.98580932617188);
    v1475.bezierCurveTo(p1108 * 139.633544921875, p1108 * 229.98580932617188, p1108 * 108.633544921875, p1108 * 209.98580932617188, p1108 * 97.633544921875, p1108 * 224.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 195.633544921875, p1108 * 253.98580932617188);
    v1475.bezierCurveTo(p1108 * 209.633544921875, p1108 * 282.9858093261719, p1108 * 205.633544921875, p1108 * 278.9858093261719, p1108 * 199.633544921875, p1108 * 307.9858093261719);
    v1475.bezierCurveTo(p1108 * 198.633544921875, p1108 * 332.9858093261719, p1108 * 201.633544921875, p1108 * 340.9858093261719, p1108 * 202.633544921875, p1108 * 348.9858093261719);
    v1475.bezierCurveTo(p1108 * 215.633544921875, p1108 * 313.9858093261719, p1108 * 226.633544921875, p1108 * 291.9858093261719, p1108 * 235.633544921875, p1108 * 270.9858093261719);
    v1475.bezierCurveTo(p1108 * 243.633544921875, p1108 * 247.98580932617188, p1108 * 219.633544921875, p1108 * 235.98580932617188, p1108 * 196.633544921875, p1108 * 252.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 195.633544921875, p1108 * 251.98580932617188);
    v1475.bezierCurveTo(p1108 * 176.633544921875, p1108 * 275.9858093261719, p1108 * 182.633544921875, p1108 * 285.9858093261719, p1108 * 191.633544921875, p1108 * 308.9858093261719);
    v1475.bezierCurveTo(p1108 * 194.633544921875, p1108 * 318.9858093261719, p1108 * 190.633544921875, p1108 * 334.9858093261719, p1108 * 186.633544921875, p1108 * 348.9858093261719);
    v1475.bezierCurveTo(p1108 * 175.633544921875, p1108 * 307.9858093261719, p1108 * 157.633544921875, p1108 * 291.9858093261719, p1108 * 155.633544921875, p1108 * 272.9858093261719);
    v1475.bezierCurveTo(p1108 * 150.633544921875, p1108 * 243.98580932617188, p1108 * 170.633544921875, p1108 * 236.98580932617188, p1108 * 195.633544921875, p1108 * 251.98580932617188);
    v1475.closePath();
    f89(v1475, p1109[3]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 316, p1108 * 186.8020782470703);
    v1475.bezierCurveTo(p1108 * 315, p1108 * 173.8020782470703, p1108 * 298, p1108 * 177.8020782470703, p1108 * 293, p1108 * 183.8020782470703);
    v1475.bezierCurveTo(p1108 * 285, p1108 * 195.8020782470703, p1108 * 314, p1108 * 197.8020782470703, p1108 * 315, p1108 * 187.8020782470703);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 340, p1108 * 157.8020782470703);
    v1475.bezierCurveTo(p1108 * 327, p1108 * 153.8020782470703, p1108 * 321, p1108 * 168.8020782470703, p1108 * 330, p1108 * 174.8020782470703);
    v1475.bezierCurveTo(p1108 * 341, p1108 * 178.8020782470703, p1108 * 347, p1108 * 161.8020782470703, p1108 * 341, p1108 * 157.8020782470703);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 349, p1108 * 136.8020782470703);
    v1475.bezierCurveTo(p1108 * 343, p1108 * 135.8020782470703, p1108 * 342, p1108 * 139.8020782470703, p1108 * 341, p1108 * 147.8020782470703);
    v1475.bezierCurveTo(p1108 * 343, p1108 * 155.8020782470703, p1108 * 353, p1108 * 143.8020782470703, p1108 * 349, p1108 * 137.8020782470703);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 278.75, p1108 * 246.4375);
    v1475.bezierCurveTo(p1108 * 288.75, p1108 * 242.4375, p1108 * 301.75, p1108 * 248.4375, p1108 * 298.75, p1108 * 262.4375);
    v1475.bezierCurveTo(p1108 * 293.75, p1108 * 271.4375, p1108 * 287.75, p1108 * 271.4375, p1108 * 278.75, p1108 * 262.4375);
    v1475.bezierCurveTo(p1108 * 271.75, p1108 * 255.4375, p1108 * 274.75, p1108 * 250.4375, p1108 * 277.75, p1108 * 247.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 310.75, p1108 * 277.4375);
    v1475.bezierCurveTo(p1108 * 319.75, p1108 * 280.4375, p1108 * 322.75, p1108 * 283.4375, p1108 * 321.75, p1108 * 289.4375);
    v1475.bezierCurveTo(p1108 * 319.75, p1108 * 295.4375, p1108 * 313.75, p1108 * 291.4375, p1108 * 308.75, p1108 * 288.4375);
    v1475.bezierCurveTo(p1108 * 301.75, p1108 * 281.4375, p1108 * 306.75, p1108 * 277.4375, p1108 * 309.75, p1108 * 277.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 217.75, p1108 * 257.4375);
    v1475.bezierCurveTo(p1108 * 227.75, p1108 * 269.4375, p1108 * 220.75, p1108 * 281.4375, p1108 * 212.75, p1108 * 280.4375);
    v1475.bezierCurveTo(p1108 * 206.75, p1108 * 279.4375, p1108 * 206.75, p1108 * 269.4375, p1108 * 204.75, p1108 * 260.4375);
    v1475.bezierCurveTo(p1108 * 204.75, p1108 * 254.4375, p1108 * 211.75, p1108 * 253.4375, p1108 * 216.75, p1108 * 256.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 211.75, p1108 * 289.4375);
    v1475.bezierCurveTo(p1108 * 219.75, p1108 * 292.4375, p1108 * 213.75, p1108 * 306.4375, p1108 * 206.75, p1108 * 307.4375);
    v1475.bezierCurveTo(p1108 * 199.75, p1108 * 303.4375, p1108 * 209.75, p1108 * 287.4375, p1108 * 210.75, p1108 * 289.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 171.75, p1108 * 256.4375);
    v1475.bezierCurveTo(p1108 * 162.75, p1108 * 273.4375, p1108 * 166.75, p1108 * 278.4375, p1108 * 175.75, p1108 * 280.4375);
    v1475.bezierCurveTo(p1108 * 183.75, p1108 * 278.4375, p1108 * 185.75, p1108 * 257.4375, p1108 * 182.75, p1108 * 255.4375);
    v1475.bezierCurveTo(p1108 * 176.75, p1108 * 251.4375, p1108 * 172.75, p1108 * 253.4375, p1108 * 172.75, p1108 * 256.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 175.75, p1108 * 289.9375);
    v1475.bezierCurveTo(p1108 * 183.75, p1108 * 287.9375, p1108 * 186.75, p1108 * 301.9375, p1108 * 182.75, p1108 * 305.9375);
    v1475.bezierCurveTo(p1108 * 176.75, p1108 * 307.9375, p1108 * 171.75, p1108 * 292.9375, p1108 * 174.75, p1108 * 290.9375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 205.75, p1108 * 314.4375);
    v1475.bezierCurveTo(p1108 * 209.75, p1108 * 316.4375, p1108 * 210.75, p1108 * 320.4375, p1108 * 206.75, p1108 * 323.4375);
    v1475.bezierCurveTo(p1108 * 201.75, p1108 * 324.4375, p1108 * 201.75, p1108 * 314.4375, p1108 * 204.75, p1108 * 314.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 186.75, p1108 * 313.4375);
    v1475.bezierCurveTo(p1108 * 181.75, p1108 * 315.4375, p1108 * 180.75, p1108 * 321.4375, p1108 * 185.75, p1108 * 326.4375);
    v1475.bezierCurveTo(p1108 * 190.75, p1108 * 327.4375, p1108 * 190.75, p1108 * 313.4375, p1108 * 187.75, p1108 * 314.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 103.75, p1108 * 244.4375);
    v1475.bezierCurveTo(p1108 * 96.75, p1108 * 239.4375, p1108 * 83.75, p1108 * 240.4375, p1108 * 81.75, p1108 * 255.4375);
    v1475.bezierCurveTo(p1108 * 80.75, p1108 * 264.4375, p1108 * 89.75, p1108 * 269.4375, p1108 * 99.75, p1108 * 260.4375);
    v1475.bezierCurveTo(p1108 * 106.75, p1108 * 254.4375, p1108 * 106.75, p1108 * 250.4375, p1108 * 104.75, p1108 * 245.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 86.75, p1108 * 182.4375);
    v1475.bezierCurveTo(p1108 * 82.75, p1108 * 170.4375, p1108 * 66.75, p1108 * 169.4375, p1108 * 61.75, p1108 * 181.4375);
    v1475.bezierCurveTo(p1108 * 58.75, p1108 * 187.4375, p1108 * 68.75, p1108 * 194.4375, p1108 * 75.75, p1108 * 192.4375);
    v1475.bezierCurveTo(p1108 * 83.75, p1108 * 192.4375, p1108 * 86.75, p1108 * 187.4375, p1108 * 86.75, p1108 * 183.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 44.75, p1108 * 152.4375);
    v1475.bezierCurveTo(p1108 * 55.75, p1108 * 159.4375, p1108 * 54.75, p1108 * 170.4375, p1108 * 46.75, p1108 * 171.4375);
    v1475.bezierCurveTo(p1108 * 39.75, p1108 * 170.4375, p1108 * 34.75, p1108 * 151.4375, p1108 * 43.75, p1108 * 152.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 31.75, p1108 * 130.4375);
    v1475.bezierCurveTo(p1108 * 35.75, p1108 * 132.4375, p1108 * 35.75, p1108 * 131.4375, p1108 * 37.75, p1108 * 137.4375);
    v1475.bezierCurveTo(p1108 * 36.75, p1108 * 144.4375, p1108 * 36.75, p1108 * 145.4375, p1108 * 33.75, p1108 * 144.4375);
    v1475.bezierCurveTo(p1108 * 26.75, p1108 * 137.4375, p1108 * 29.75, p1108 * 131.4375, p1108 * 31.75, p1108 * 130.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 69.75, p1108 * 274.4375);
    v1475.bezierCurveTo(p1108 * 62.75, p1108 * 272.4375, p1108 * 59.75, p1108 * 277.4375, p1108 * 57.75, p1108 * 284.4375);
    v1475.bezierCurveTo(p1108 * 56.75, p1108 * 290.4375, p1108 * 63.75, p1108 * 289.4375, p1108 * 71.75, p1108 * 282.4375);
    v1475.bezierCurveTo(p1108 * 75.75, p1108 * 277.4375, p1108 * 72.75, p1108 * 275.4375, p1108 * 69.75, p1108 * 274.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 165.75, p1108 * 95.4375);
    v1475.bezierCurveTo(p1108 * 177.75, p1108 * 97.4375, p1108 * 182.75, p1108 * 115.4375, p1108 * 173.75, p1108 * 121.4375);
    v1475.bezierCurveTo(p1108 * 164.75, p1108 * 126.4375, p1108 * 149.75, p1108 * 102.4375, p1108 * 164.75, p1108 * 96.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 216.75, p1108 * 94.4375);
    v1475.bezierCurveTo(p1108 * 227.75, p1108 * 99.4375, p1108 * 223.75, p1108 * 122.4375, p1108 * 210.75, p1108 * 119.4375);
    v1475.bezierCurveTo(p1108 * 203.75, p1108 * 115.4375, p1108 * 207.75, p1108 * 93.4375, p1108 * 216.75, p1108 * 94.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 211.75, p1108 * 68.4375);
    v1475.bezierCurveTo(p1108 * 218.75, p1108 * 69.4375, p1108 * 220.75, p1108 * 77.4375, p1108 * 216.75, p1108 * 83.4375);
    v1475.bezierCurveTo(p1108 * 208.75, p1108 * 89.4375, p1108 * 205.75, p1108 * 68.4375, p1108 * 210.75, p1108 * 68.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 169.75, p1108 * 71.4375);
    v1475.bezierCurveTo(p1108 * 162.75, p1108 * 72.4375, p1108 * 159.75, p1108 * 83.4375, p1108 * 167.75, p1108 * 88.4375);
    v1475.bezierCurveTo(p1108 * 174.75, p1108 * 90.4375, p1108 * 174.75, p1108 * 72.4375, p1108 * 170.75, p1108 * 71.4375);
    v1475.closePath();
    f89(v1475, p1109[6], p1109[7], p1108 * 4);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 193.75, p1108 * 160.4375);
    v1475.bezierCurveTo(p1108 * 215.75, p1108 * 168.4375, p1108 * 224.75, p1108 * 180.4375, p1108 * 229.75, p1108 * 193.4375);
    v1475.bezierCurveTo(p1108 * 223.75, p1108 * 211.4375, p1108 * 205.75, p1108 * 225.4375, p1108 * 193.75, p1108 * 229.4375);
    v1475.bezierCurveTo(p1108 * 167.75, p1108 * 217.4375, p1108 * 161.75, p1108 * 205.4375, p1108 * 156.75, p1108 * 192.4375);
    v1475.bezierCurveTo(p1108 * 164.75, p1108 * 175.4375, p1108 * 176.75, p1108 * 166.4375, p1108 * 192.75, p1108 * 160.4375);
    v1475.closePath();
    f89(v1475, p1109[8], p1109[9], p1108 * 3);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 189.1999969482422, p1108 * 182.61249923706055);
    v1475.bezierCurveTo(p1108 * 190.1999969482422, p1108 * 184.11249923706055, p1108 * 190.1999969482422, p1108 * 184.11249923706055, p1108 * 191.1999969482422, p1108 * 185.61249923706055);
    v1475.bezierCurveTo(p1108 * 192.1999969482422, p1108 * 180.61249923706055, p1108 * 192.1999969482422, p1108 * 180.61249923706055, p1108 * 193.1999969482422, p1108 * 175.61249923706055);
    v1475.bezierCurveTo(p1108 * 195.6999969482422, p1108 * 177.11249923706055, p1108 * 195.6999969482422, p1108 * 177.11249923706055, p1108 * 198.1999969482422, p1108 * 178.61249923706055);
    v1475.bezierCurveTo(p1108 * 198.1999969482422, p1108 * 181.11249923706055, p1108 * 198.1999969482422, p1108 * 181.11249923706055, p1108 * 198.1999969482422, p1108 * 183.61249923706055);
    v1475.bezierCurveTo(p1108 * 201.6999969482422, p1108 * 181.11249923706055, p1108 * 201.6999969482422, p1108 * 181.11249923706055, p1108 * 205.1999969482422, p1108 * 178.61249923706055);
    v1475.bezierCurveTo(p1108 * 206.6999969482422, p1108 * 180.61249923706055, p1108 * 206.6999969482422, p1108 * 180.61249923706055, p1108 * 208.1999969482422, p1108 * 182.61249923706055);
    v1475.bezierCurveTo(p1108 * 206.1999969482422, p1108 * 185.61249923706055, p1108 * 206.1999969482422, p1108 * 185.61249923706055, p1108 * 204.1999969482422, p1108 * 188.61249923706055);
    v1475.bezierCurveTo(p1108 * 208.6999969482422, p1108 * 188.61249923706055, p1108 * 208.6999969482422, p1108 * 188.61249923706055, p1108 * 213.1999969482422, p1108 * 188.61249923706055);
    v1475.bezierCurveTo(p1108 * 213.1999969482422, p1108 * 191.11249923706055, p1108 * 213.1999969482422, p1108 * 191.11249923706055, p1108 * 213.1999969482422, p1108 * 193.61249923706055);
    v1475.bezierCurveTo(p1108 * 209.6999969482422, p1108 * 194.61249923706055, p1108 * 209.6999969482422, p1108 * 194.61249923706055, p1108 * 206.1999969482422, p1108 * 195.61249923706055);
    v1475.bezierCurveTo(p1108 * 210.1999969482422, p1108 * 198.61249923706055, p1108 * 210.1999969482422, p1108 * 198.61249923706055, p1108 * 214.1999969482422, p1108 * 201.61249923706055);
    v1475.bezierCurveTo(p1108 * 212.1999969482422, p1108 * 203.61249923706055, p1108 * 212.1999969482422, p1108 * 203.61249923706055, p1108 * 210.1999969482422, p1108 * 205.61249923706055);
    v1475.bezierCurveTo(p1108 * 207.1999969482422, p1108 * 204.11249923706055, p1108 * 207.1999969482422, p1108 * 204.11249923706055, p1108 * 204.1999969482422, p1108 * 202.61249923706055);
    v1475.bezierCurveTo(p1108 * 205.6999969482422, p1108 * 207.61249923706055, p1108 * 205.6999969482422, p1108 * 207.61249923706055, p1108 * 207.1999969482422, p1108 * 212.61249923706055);
    v1475.bezierCurveTo(p1108 * 204.6999969482422, p1108 * 213.61249923706055, p1108 * 204.6999969482422, p1108 * 213.61249923706055, p1108 * 202.1999969482422, p1108 * 214.61249923706055);
    v1475.bezierCurveTo(p1108 * 200.1999969482422, p1108 * 210.61249923706055, p1108 * 200.1999969482422, p1108 * 210.61249923706055, p1108 * 198.1999969482422, p1108 * 206.61249923706055);
    v1475.bezierCurveTo(p1108 * 196.6999969482422, p1108 * 211.61249923706055, p1108 * 196.6999969482422, p1108 * 211.61249923706055, p1108 * 195.1999969482422, p1108 * 216.61249923706055);
    v1475.bezierCurveTo(p1108 * 192.6999969482422, p1108 * 216.11249923706055, p1108 * 192.6999969482422, p1108 * 216.11249923706055, p1108 * 190.1999969482422, p1108 * 215.61249923706055);
    v1475.bezierCurveTo(p1108 * 190.1999969482422, p1108 * 211.61249923706055, p1108 * 190.1999969482422, p1108 * 211.61249923706055, p1108 * 190.1999969482422, p1108 * 207.61249923706055);
    v1475.bezierCurveTo(p1108 * 186.1999969482422, p1108 * 210.61249923706055, p1108 * 186.1999969482422, p1108 * 210.61249923706055, p1108 * 182.1999969482422, p1108 * 213.61249923706055);
    v1475.bezierCurveTo(p1108 * 181.1999969482422, p1108 * 211.11249923706055, p1108 * 181.1999969482422, p1108 * 211.11249923706055, p1108 * 180.1999969482422, p1108 * 208.61249923706055);
    v1475.bezierCurveTo(p1108 * 183.1999969482422, p1108 * 205.61249923706055, p1108 * 183.1999969482422, p1108 * 205.61249923706055, p1108 * 186.1999969482422, p1108 * 202.61249923706055);
    v1475.bezierCurveTo(p1108 * 180.6999969482422, p1108 * 203.11249923706055, p1108 * 180.6999969482422, p1108 * 203.11249923706055, p1108 * 175.1999969482422, p1108 * 203.61249923706055);
    v1475.bezierCurveTo(p1108 * 174.6999969482422, p1108 * 200.11249923706055, p1108 * 174.6999969482422, p1108 * 200.11249923706055, p1108 * 174.1999969482422, p1108 * 196.61249923706055);
    v1475.bezierCurveTo(p1108 * 177.1999969482422, p1108 * 195.61249923706055, p1108 * 177.1999969482422, p1108 * 195.61249923706055, p1108 * 180.1999969482422, p1108 * 194.61249923706055);
    v1475.bezierCurveTo(p1108 * 177.1999969482422, p1108 * 191.61249923706055, p1108 * 177.1999969482422, p1108 * 191.61249923706055, p1108 * 174.1999969482422, p1108 * 188.61249923706055);
    v1475.bezierCurveTo(p1108 * 175.6999969482422, p1108 * 187.11249923706055, p1108 * 175.6999969482422, p1108 * 187.11249923706055, p1108 * 177.1999969482422, p1108 * 185.61249923706055);
    v1475.bezierCurveTo(p1108 * 180.6999969482422, p1108 * 187.11249923706055, p1108 * 180.6999969482422, p1108 * 187.11249923706055, p1108 * 184.1999969482422, p1108 * 188.61249923706055);
    v1475.bezierCurveTo(p1108 * 182.6999969482422, p1108 * 183.61249923706055, p1108 * 182.6999969482422, p1108 * 183.61249923706055, p1108 * 181.1999969482422, p1108 * 178.61249923706055);
    v1475.bezierCurveTo(p1108 * 183.1999969482422, p1108 * 177.11249923706055, p1108 * 183.1999969482422, p1108 * 177.11249923706055, p1108 * 185.1999969482422, p1108 * 175.61249923706055);
    v1475.closePath();
    f89(v1475, p1109[10]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 185.1999969482422, p1108 * 173.8125);
    v1475.bezierCurveTo(p1108 * 187.1999969482422, p1108 * 179.3125, p1108 * 187.1999969482422, p1108 * 179.3125, p1108 * 189.1999969482422, p1108 * 184.8125);
    v1475.bezierCurveTo(p1108 * 184.1999969482422, p1108 * 181.8125, p1108 * 184.1999969482422, p1108 * 181.8125, p1108 * 179.1999969482422, p1108 * 178.8125);
    v1475.bezierCurveTo(p1108 * 181.1999969482422, p1108 * 175.8125, p1108 * 182.1999969482422, p1108 * 174.8125, p1108 * 185.1999969482422, p1108 * 173.8125);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 192.1999969482422, p1108 * 173.61249542236328);
    v1475.bezierCurveTo(p1108 * 194.1999969482422, p1108 * 172.61249542236328, p1108 * 196.1999969482422, p1108 * 171.61249542236328, p1108 * 199.1999969482422, p1108 * 173.61249542236328);
    v1475.bezierCurveTo(p1108 * 197.6999969482422, p1108 * 179.61249542236328, p1108 * 197.6999969482422, p1108 * 179.61249542236328, p1108 * 196.1999969482422, p1108 * 185.61249542236328);
    v1475.bezierCurveTo(p1108 * 194.1999969482422, p1108 * 179.61249542236328, p1108 * 194.1999969482422, p1108 * 179.61249542236328, p1108 * 192.1999969482422, p1108 * 173.61249542236328);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 205.1999969482422, p1108 * 176.2125015258789);
    v1475.bezierCurveTo(p1108 * 210.1999969482422, p1108 * 178.2125015258789, p1108 * 211.1999969482422, p1108 * 179.2125015258789, p1108 * 211.1999969482422, p1108 * 181.2125015258789);
    v1475.bezierCurveTo(p1108 * 206.6999969482422, p1108 * 184.7125015258789, p1108 * 206.6999969482422, p1108 * 184.7125015258789, p1108 * 202.1999969482422, p1108 * 188.2125015258789);
    v1475.bezierCurveTo(p1108 * 203.6999969482422, p1108 * 182.2125015258789, p1108 * 203.6999969482422, p1108 * 182.2125015258789, p1108 * 205.1999969482422, p1108 * 176.2125015258789);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 214.1999969482422, p1108 * 187.21249985694885);
    v1475.bezierCurveTo(p1108 * 216.1999969482422, p1108 * 191.21249985694885, p1108 * 216.1999969482422, p1108 * 192.21249985694885, p1108 * 215.1999969482422, p1108 * 195.21249985694885);
    v1475.bezierCurveTo(p1108 * 206.1999969482422, p1108 * 194.21249985694885, p1108 * 205.1999969482422, p1108 * 194.21249985694885, p1108 * 205.1999969482422, p1108 * 194.21249985694885);
    v1475.bezierCurveTo(p1108 * 209.6999969482422, p1108 * 190.71249985694885, p1108 * 209.6999969482422, p1108 * 190.71249985694885, p1108 * 214.1999969482422, p1108 * 187.21249985694885);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 204.1999969482422, p1108 * 201.8125);
    v1475.bezierCurveTo(p1108 * 209.1999969482422, p1108 * 201.3125, p1108 * 209.1999969482422, p1108 * 201.3125, p1108 * 214.1999969482422, p1108 * 200.8125);
    v1475.bezierCurveTo(p1108 * 215.1999969482422, p1108 * 204.8125, p1108 * 214.1999969482422, p1108 * 205.8125, p1108 * 213.1999969482422, p1108 * 208.8125);
    v1475.bezierCurveTo(p1108 * 208.6999969482422, p1108 * 205.3125, p1108 * 208.6999969482422, p1108 * 205.3125, p1108 * 204.1999969482422, p1108 * 201.8125);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 199.1999969482422, p1108 * 205.61249923706055);
    v1475.bezierCurveTo(p1108 * 207.1999969482422, p1108 * 212.61249923706055, p1108 * 203.6999969482422, p1108 * 209.11249923706055, p1108 * 208.1999969482422, p1108 * 212.61249923706055);
    v1475.bezierCurveTo(p1108 * 206.1999969482422, p1108 * 215.61249923706055, p1108 * 204.1999969482422, p1108 * 217.61249923706055, p1108 * 203.1999969482422, p1108 * 216.61249923706055);
    v1475.bezierCurveTo(p1108 * 201.1999969482422, p1108 * 211.11249923706055, p1108 * 201.1999969482422, p1108 * 211.11249923706055, p1108 * 199.1999969482422, p1108 * 205.61249923706055);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 191.1999969482422, p1108 * 207.01250076293945);
    v1475.bezierCurveTo(p1108 * 194.1999969482422, p1108 * 213.01250076293945, p1108 * 194.1999969482422, p1108 * 216.01250076293945, p1108 * 196.1999969482422, p1108 * 218.01250076293945);
    v1475.bezierCurveTo(p1108 * 193.1999969482422, p1108 * 220.01250076293945, p1108 * 190.1999969482422, p1108 * 220.01250076293945, p1108 * 188.1999969482422, p1108 * 218.01250076293945);
    v1475.bezierCurveTo(p1108 * 189.6999969482422, p1108 * 213.01250076293945, p1108 * 189.6999969482422, p1108 * 213.01250076293945, p1108 * 191.1999969482422, p1108 * 208.01250076293945);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 186.1999969482422, p1108 * 203.21249961853027);
    v1475.bezierCurveTo(p1108 * 184.1999969482422, p1108 * 209.21249961853027, p1108 * 184.1999969482422, p1108 * 209.21249961853027, p1108 * 182.1999969482422, p1108 * 215.21249961853027);
    v1475.bezierCurveTo(p1108 * 177.1999969482422, p1108 * 212.21249961853027, p1108 * 176.1999969482422, p1108 * 211.21249961853027, p1108 * 177.1999969482422, p1108 * 210.21249961853027);
    v1475.bezierCurveTo(p1108 * 181.6999969482422, p1108 * 206.71249961853027, p1108 * 181.6999969482422, p1108 * 206.71249961853027, p1108 * 186.1999969482422, p1108 * 203.21249961853027);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 183.1999969482422, p1108 * 196.8125);
    v1475.bezierCurveTo(p1108 * 177.1999969482422, p1108 * 196.3125, p1108 * 177.1999969482422, p1108 * 196.3125, p1108 * 171.1999969482422, p1108 * 195.8125);
    v1475.bezierCurveTo(p1108 * 171.1999969482422, p1108 * 199.8125, p1108 * 171.1999969482422, p1108 * 202.8125, p1108 * 174.1999969482422, p1108 * 204.8125);
    v1475.bezierCurveTo(p1108 * 178.6999969482422, p1108 * 200.8125, p1108 * 178.6999969482422, p1108 * 200.8125, p1108 * 183.1999969482422, p1108 * 196.8125);
    v1475.closePath();
    f89(v1475, p1109[11]);
    v1475.beginPath();
    v1475.lineCap = "round";
    v1475.lineJoin = "round";
    v1475.moveTo(p1108 * 185.1999969482422, p1108 * 190.21249771118164);
    v1475.bezierCurveTo(p1108 * 179.6999969482422, p1108 * 186.71249771118164, p1108 * 179.6999969482422, p1108 * 186.71249771118164, p1108 * 174.1999969482422, p1108 * 183.21249771118164);
    v1475.bezierCurveTo(p1108 * 172.1999969482422, p1108 * 186.21249771118164, p1108 * 172.1999969482422, p1108 * 187.21249771118164, p1108 * 172.1999969482422, p1108 * 190.21249771118164);
    v1475.bezierCurveTo(p1108 * 178.1999969482422, p1108 * 190.21249771118164, p1108 * 178.1999969482422, p1108 * 190.21249771118164, p1108 * 184.1999969482422, p1108 * 190.21249771118164);
    v1475.closePath();
    f89(v1475, p1109[11]);
    f94(v1475, p1108 * 126.19999694824219, p1108 * 169.8125, p1108 * 8.94427190999916);
    f89(v1475, p1109[12]);
    f94(v1475, p1108 * 123.19999694824219, p1108 * 164.8125, p1108 * 2.8284271247461903);
    f89(v1475, p1109[13]);
    f94(v1475, p1108 * 253.1999969482422, p1108 * 169.8125, p1108 * 8.94427190999916);
    f89(v1475, p1109[12]);
    f94(v1475, p1108 * 255.1999969482422, p1108 * 164.8125, p1108 * 2.23606797749979);
    f89(v1475, p1109[13]);
    return v1474;
  }
  function f269(p1110, p1111, p1112) {
    var v1476 = document.createElement("canvas");
    var v1477 = v1476.getContext("2d");
    v1476.width = p1110 * 145;
    v1476.height = p1110 * 120;
    v1477.beginPath();
    v1477.scale(0.6, 0.6);
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.translate(p1110 * 18, p1110 * -8);
    v1477.moveTo(p1110 * 101, p1110 * 72);
    v1477.bezierCurveTo(p1110 * 144, p1110 * 69, p1110 * 149, p1110 * 58, p1110 * 162, p1110 * 49);
    v1477.bezierCurveTo(p1110 * 174, p1110 * 31, p1110 * 173, p1110 * 38, p1110 * 172, p1110 * 45);
    v1477.bezierCurveTo(p1110 * 168, p1110 * 73, p1110 * 158, p1110 * 75, p1110 * 152, p1110 * 78);
    v1477.bezierCurveTo(p1110 * 106, p1110 * 89, p1110 * 107, p1110 * 91, p1110 * 107, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 107, p1110 * 100, p1110 * 107, p1110 * 107, p1110 * 107, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 99, p1110 * 112, p1110 * 98, p1110 * 110, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 94, p1110 * 107, p1110 * 93, p1110 * 107, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 93, p1110 * 100, p1110 * 93, p1110 * 100, p1110 * 92, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 92, p1110 * 89, p1110 * 90, p1110 * 90, p1110 * 73, p1110 * 86);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 81, p1110 * 40, p1110 * 77, p1110 * 35, p1110 * 68);
    v1477.bezierCurveTo(p1110 * 23, p1110 * 36, p1110 * 28, p1110 * 34, p1110 * 36, p1110 * 46);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 58, p1110 * 83, p1110 * 72, p1110 * 98, p1110 * 72);
    v1477.closePath();
    f89(v1477, p1112[4], p1112[5], p1110 * 4);
    v1477.beginPath();
    v1477.scale(1.1, 1.1);
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.translate(p1110 * -9, p1110 * 4);
    v1477.moveTo(p1110 * 101, p1110 * 72);
    v1477.bezierCurveTo(p1110 * 144, p1110 * 69, p1110 * 149, p1110 * 58, p1110 * 162, p1110 * 49);
    v1477.bezierCurveTo(p1110 * 174, p1110 * 31, p1110 * 173, p1110 * 38, p1110 * 172, p1110 * 45);
    v1477.bezierCurveTo(p1110 * 168, p1110 * 73, p1110 * 158, p1110 * 75, p1110 * 152, p1110 * 78);
    v1477.bezierCurveTo(p1110 * 106, p1110 * 89, p1110 * 107, p1110 * 91, p1110 * 107, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 107, p1110 * 100, p1110 * 107, p1110 * 107, p1110 * 107, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 99, p1110 * 112, p1110 * 98, p1110 * 110, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 94, p1110 * 107, p1110 * 93, p1110 * 107, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 93, p1110 * 100, p1110 * 93, p1110 * 100, p1110 * 92, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 92, p1110 * 89, p1110 * 90, p1110 * 90, p1110 * 73, p1110 * 86);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 81, p1110 * 40, p1110 * 77, p1110 * 35, p1110 * 68);
    v1477.bezierCurveTo(p1110 * 23, p1110 * 36, p1110 * 28, p1110 * 34, p1110 * 36, p1110 * 46);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 58, p1110 * 83, p1110 * 72, p1110 * 98, p1110 * 72);
    v1477.closePath();
    f89(v1477, p1112[4], p1112[5], p1110 * 4);
    v1477.scale(1.1, 1.1);
    v1477.translate(p1110 * -9, p1110 * 4);
    v1477.save();
    v1477.translate(p1110 * 100, p1110 * 73.06874084472656);
    v1477.rotate(0);
    f90(v1477, p1110 * -61, p1110 * -38.5, p1110 * 122, p1110 * 40, p1110 * 20);
    v1477.restore();
    f89(v1477, p1112[1], p1112[2], p1110 * 4);
    v1477.save();
    v1477.translate(p1110 * 100, p1110 * 71.36874389648438);
    v1477.rotate(0);
    f90(v1477, p1110 * -60.5, p1110 * -18, p1110 * 121, p1110 * 30, p1110 * 20);
    v1477.restore();
    f89(v1477, p1112[3], p1112[2], p1110 * 4);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 144, p1110 * 80);
    v1477.bezierCurveTo(p1110 * 152, p1110 * 100, p1110 * 152, p1110 * 101, p1110 * 153, p1110 * 102);
    v1477.bezierCurveTo(p1110 * 159, p1110 * 100, p1110 * 159, p1110 * 100, p1110 * 160, p1110 * 100);
    v1477.bezierCurveTo(p1110 * 161, p1110 * 84, p1110 * 161, p1110 * 84, p1110 * 162, p1110 * 68);
    v1477.closePath();
    f89(v1477, p1112[2]);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 57, p1110 * 75);
    v1477.bezierCurveTo(p1110 * 48, p1110 * 101, p1110 * 53, p1110 * 89, p1110 * 48, p1110 * 102);
    v1477.bezierCurveTo(p1110 * 44, p1110 * 100, p1110 * 44, p1110 * 100, p1110 * 39, p1110 * 97);
    v1477.bezierCurveTo(p1110 * 39, p1110 * 83, p1110 * 39, p1110 * 83, p1110 * 39, p1110 * 69);
    v1477.closePath();
    f89(v1477, p1112[2]);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 101, p1110 * 72);
    v1477.bezierCurveTo(p1110 * 144, p1110 * 69, p1110 * 149, p1110 * 58, p1110 * 162, p1110 * 49);
    v1477.bezierCurveTo(p1110 * 174, p1110 * 31, p1110 * 173, p1110 * 38, p1110 * 172, p1110 * 45);
    v1477.bezierCurveTo(p1110 * 168, p1110 * 73, p1110 * 158, p1110 * 75, p1110 * 152, p1110 * 78);
    v1477.bezierCurveTo(p1110 * 106, p1110 * 89, p1110 * 107, p1110 * 91, p1110 * 107, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 107, p1110 * 100, p1110 * 107, p1110 * 107, p1110 * 107, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 99, p1110 * 112, p1110 * 98, p1110 * 110, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 94, p1110 * 107, p1110 * 93, p1110 * 107, p1110 * 93, p1110 * 107);
    v1477.bezierCurveTo(p1110 * 93, p1110 * 100, p1110 * 93, p1110 * 100, p1110 * 92, p1110 * 94);
    v1477.bezierCurveTo(p1110 * 92, p1110 * 89, p1110 * 90, p1110 * 90, p1110 * 73, p1110 * 86);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 81, p1110 * 40, p1110 * 77, p1110 * 35, p1110 * 68);
    v1477.bezierCurveTo(p1110 * 23, p1110 * 36, p1110 * 28, p1110 * 34, p1110 * 36, p1110 * 46);
    v1477.bezierCurveTo(p1110 * 45, p1110 * 58, p1110 * 83, p1110 * 72, p1110 * 98, p1110 * 72);
    v1477.closePath();
    f89(v1477, p1112[4], p1112[5], p1110 * 4);
    v1477.translate(0, 0);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 115.5, p1110 * 116.07290649414062);
    v1477.bezierCurveTo(p1110 * 159.5, p1110 * 99.07290649414062, p1110 * 159.5, p1110 * 98.07290649414062, p1110 * 159.5, p1110 * 98.07290649414062);
    v1477.bezierCurveTo(p1110 * 155.5, p1110 * 116.07290649414062, p1110 * 159.5, p1110 * 116.07290649414062, p1110 * 159.5, p1110 * 118.07290649414062);
    v1477.bezierCurveTo(p1110 * 147.5, p1110 * 130.07290649414062, p1110 * 136.5, p1110 * 132.07290649414062, p1110 * 115.5, p1110 * 138.07290649414062);
    v1477.closePath();
    f89(v1477, p1112[3], p1112[2], p1110 * 4);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 39.5, p1110 * 96.07290649414062);
    v1477.bezierCurveTo(p1110 * 85.5, p1110 * 114.07290649414062, p1110 * 62.5, p1110 * 105.57290649414062, p1110 * 85.5, p1110 * 115.07290649414062);
    v1477.bezierCurveTo(p1110 * 85.5, p1110 * 125.57290649414062, p1110 * 85.5, p1110 * 125.57290649414062, p1110 * 85.5, p1110 * 136.07290649414062);
    v1477.bezierCurveTo(p1110 * 51.5, p1110 * 129.07290649414062, p1110 * 51.5, p1110 * 125.07290649414062, p1110 * 41.5, p1110 * 118.07290649414062);
    v1477.bezierCurveTo(p1110 * 44.5, p1110 * 106.07290649414062, p1110 * 42.5, p1110 * 103.07290649414062, p1110 * 40.5, p1110 * 96.07290649414062);
    v1477.closePath();
    f89(v1477, p1112[3], p1112[2], p1110 * 4);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 86, p1110 * 80);
    v1477.bezierCurveTo(p1110 * 97, p1110 * 88, p1110 * 106, p1110 * 84, p1110 * 112, p1110 * 80);
    v1477.bezierCurveTo(p1110 * 112, p1110 * 62, p1110 * 106, p1110 * 59, p1110 * 99, p1110 * 54);
    v1477.bezierCurveTo(p1110 * 86, p1110 * 62, p1110 * 86, p1110 * 73, p1110 * 86, p1110 * 80);
    v1477.closePath();
    f89(v1477, p1112[3], p1112[2], p1110 * 4);
    v1477.scale(0.5, 0.5);
    v1477.translate(p1110 * 100, p1110 * 71);
    v1477.beginPath();
    v1477.lineCap = "round";
    v1477.lineJoin = "round";
    v1477.moveTo(p1110 * 86, p1110 * 80);
    v1477.bezierCurveTo(p1110 * 97, p1110 * 88, p1110 * 106, p1110 * 84, p1110 * 112, p1110 * 80);
    v1477.bezierCurveTo(p1110 * 112, p1110 * 62, p1110 * 106, p1110 * 59, p1110 * 99, p1110 * 54);
    v1477.bezierCurveTo(p1110 * 86, p1110 * 62, p1110 * 86, p1110 * 73, p1110 * 86, p1110 * 80);
    v1477.closePath();
    f89(v1477, p1112[6], p1112[2], p1110 * 4);
    return v1476;
  }
  function f270(p1113, p1114, p1115) {
    var v1478 = document.createElement("canvas");
    var v1479 = v1478.getContext("2d");
    v1478.width = p1113 * 120;
    v1478.height = p1113 * 100;
    f90(v1479, p1113 * 10, p1113 * 10, p1113 * 95, p1113 * 80, p1113 * 10);
    f89(v1479, p1114[2]);
    f90(v1479, p1113 * 10, p1113 * 5, p1113 * 95, p1113 * 80, p1113 * 10);
    f89(v1479, p1114[3], p1114[4], p1113 * 4);
    if (p1115 == 0) {
      var vYd = f275(p1113 * 0.75, p1114, 0);
      v1479.drawImage(vYd, p1113 * 22, p1113 * 18);
    } else if (p1115 == 1) {
      vYd = f275(p1113 * 0.75, p1114, 1);
      v1479.drawImage(vYd, p1113 * 22, p1113 * 18);
    }
    return v1478;
  }
  function f271(p1116, p1117) {
    var v1480 = document.createElement("canvas");
    var v1481 = v1480.getContext("2d");
    var v1482 = p1116 * 120;
    var v1483 = p1116 * 140;
    v1480.width = v1482;
    v1480.height = v1483;
    v1480.width = p1116 * 130;
    v1480.height = p1116 * 120;
    f90(v1481, p1116 * 10, p1116 * 12, p1116 * 110, p1116 * 90, p1116 * 10);
    f89(v1481, p1117[0]);
    f90(v1481, p1116 * 10, p1116 * 5, p1116 * 110, p1116 * 90, p1116 * 10);
    f89(v1481, p1117[1], p1117[2], p1116 * 4);
    var vF95 = f95(-Math.PI / 5, f143(p1116 * 0.5, vVV1222, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1481.drawImage(vF95, p1116 * 12, p1116 * 18);
    vF95 = f95(Math.PI / 4, f218(p1116 * 0.55, true, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1481.drawImage(vF95, p1116 * 36, p1116 * 16);
    return v1480;
  }
  function f272(p1118, p1119) {
    var v1484 = document.createElement("canvas");
    var v1485 = v1484.getContext("2d");
    v1484.width = p1118 * 147;
    v1484.height = p1118 * 172;
    v1485.globalAlpha = 0.5;
    v1485.translate(0, p1118 * 8);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 8, p1118 * 50);
    v1485.bezierCurveTo(p1118 * 15, p1118 * 16, p1118 * 49, p1118 * 6, p1118 * 67, p1118 * 6);
    v1485.bezierCurveTo(p1118 * 121, p1118 * 3, p1118 * 128, p1118 * 32, p1118 * 135, p1118 * 48);
    v1485.bezierCurveTo(p1118 * 146, p1118 * 96, p1118 * 124, p1118 * 131, p1118 * 96, p1118 * 135);
    v1485.bezierCurveTo(p1118 * 96, p1118 * 158, p1118 * 79, p1118 * 156, p1118 * 75, p1118 * 156);
    v1485.bezierCurveTo(p1118 * 50, p1118 * 154, p1118 * 53, p1118 * 150, p1118 * 52, p1118 * 135);
    v1485.bezierCurveTo(p1118 * 2, p1118 * 127, p1118 * 3, p1118 * 87, p1118 * 8, p1118 * 50);
    v1485.closePath();
    f89(v1485, p1119[0]);
    v1485.translate(0, p1118 * -8);
    v1485.globalAlpha = 1;
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 8, p1118 * 50);
    v1485.bezierCurveTo(p1118 * 15, p1118 * 16, p1118 * 49, p1118 * 6, p1118 * 67, p1118 * 6);
    v1485.bezierCurveTo(p1118 * 121, p1118 * 3, p1118 * 128, p1118 * 32, p1118 * 135, p1118 * 48);
    v1485.bezierCurveTo(p1118 * 146, p1118 * 96, p1118 * 124, p1118 * 131, p1118 * 96, p1118 * 135);
    v1485.bezierCurveTo(p1118 * 96, p1118 * 158, p1118 * 79, p1118 * 156, p1118 * 75, p1118 * 156);
    v1485.bezierCurveTo(p1118 * 50, p1118 * 154, p1118 * 53, p1118 * 150, p1118 * 52, p1118 * 135);
    v1485.bezierCurveTo(p1118 * 2, p1118 * 127, p1118 * 3, p1118 * 87, p1118 * 8, p1118 * 50);
    v1485.closePath();
    f89(v1485, p1119[1], p1119[2], p1118 * 4);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 14, p1118 * 57);
    v1485.bezierCurveTo(p1118 * 2, p1118 * 50, p1118 * 5, p1118 * 22, p1118 * 24, p1118 * 22);
    v1485.bezierCurveTo(p1118 * 41, p1118 * 21, p1118 * 54, p1118 * 32, p1118 * 55, p1118 * 48);
    f89(v1485, p1119[1], p1119[2], p1118 * 4);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 93, p1118 * 47);
    v1485.bezierCurveTo(p1118 * 94, p1118 * 24, p1118 * 116, p1118 * 21, p1118 * 120, p1118 * 20);
    v1485.bezierCurveTo(p1118 * 144, p1118 * 17, p1118 * 146, p1118 * 52, p1118 * 133, p1118 * 58);
    f89(v1485, p1119[1], p1119[2], p1118 * 4);
    f94(v1485, p1118 * 51, p1118 * 91, p1118 * 9);
    f89(v1485, p1119[3]);
    f94(v1485, p1118 * 95, p1118 * 91, p1118 * 9);
    f89(v1485, p1119[3]);
    f94(v1485, p1118 * 91, p1118 * 89, p1118 * 4);
    f89(v1485, p1119[4]);
    f94(v1485, p1118 * 47, p1118 * 89, p1118 * 4);
    f89(v1485, p1119[4]);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 54, p1118 * 133);
    v1485.bezierCurveTo(p1118 * 56, p1118 * 108, p1118 * 64, p1118 * 99, p1118 * 73, p1118 * 98);
    v1485.bezierCurveTo(p1118 * 86, p1118 * 97, p1118 * 91, p1118 * 119, p1118 * 93, p1118 * 133);
    v1485.bezierCurveTo(p1118 * 94, p1118 * 155, p1118 * 90, p1118 * 150, p1118 * 74, p1118 * 155);
    v1485.bezierCurveTo(p1118 * 50, p1118 * 152, p1118 * 55, p1118 * 145, p1118 * 54, p1118 * 134);
    v1485.closePath();
    f89(v1485, p1119[5]);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 65.25, p1118 * 135);
    v1485.bezierCurveTo(p1118 * 75.25, p1118 * 128, p1118 * 83.25, p1118 * 133, p1118 * 83.25, p1118 * 138);
    v1485.bezierCurveTo(p1118 * 88.25, p1118 * 148, p1118 * 61.25, p1118 * 149, p1118 * 64.25, p1118 * 137);
    v1485.closePath();
    f89(v1485, p1119[6]);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 74, p1118 * 145);
    v1485.bezierCurveTo(p1118 * 74, p1118 * 148, p1118 * 74, p1118 * 148, p1118 * 74, p1118 * 151);
    v1485.closePath();
    f89(v1485, vVVVUndefined173, p1119[6], p1118 * 2);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 19, p1118 * 58);
    v1485.bezierCurveTo(p1118 * 10, p1118 * 38, p1118 * 18, p1118 * 33, p1118 * 28, p1118 * 34);
    v1485.bezierCurveTo(p1118 * 41, p1118 * 39, p1118 * 45, p1118 * 45, p1118 * 50, p1118 * 51);
    v1485.closePath();
    f89(v1485, p1119[6]);
    v1485.beginPath();
    v1485.lineCap = "round";
    v1485.lineJoin = "round";
    v1485.moveTo(p1118 * 100, p1118 * 51);
    v1485.bezierCurveTo(p1118 * 106, p1118 * 36, p1118 * 119, p1118 * 31, p1118 * 128, p1118 * 36);
    v1485.bezierCurveTo(p1118 * 137, p1118 * 49, p1118 * 128, p1118 * 58, p1118 * 128, p1118 * 60);
    v1485.closePath();
    f89(v1485, p1119[6]);
    return v1484;
  }
  function f273(p1120, p1121, p1122) {
    var v1486 = document.createElement("canvas");
    var v1487 = v1486.getContext("2d");
    v1486.width = p1120 * 46;
    v1486.height = p1120 * 140;
    v1487.scale(p1120 * -1, p1120 * 1);
    v1487.translate(p1120 * -50, p1120 * 40);
    v1487.translate(p1120 * -20, 0);
    v1487.globalAlpha = p1121 ? 0.5 : 1;
    v1487.translate(p1120 * 10, 0);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.moveTo(p1120 * 22.599990844726562, p1120 * 85.94999694824219);
    v1487.bezierCurveTo(p1120 * 17.599990844726562, p1120 * 83.94999694824219, p1120 * 17.599990844726562, p1120 * 83.94999694824219, p1120 * 12.599990844726562, p1120 * 81.94999694824219);
    v1487.bezierCurveTo(p1120 * 19.599990844726562, p1120 * 73.94999694824219, p1120 * 2.5999908447265625, p1120 * 22.949996948242188, p1120 * 33.59999084472656, p1120 * 7.9499969482421875);
    v1487.bezierCurveTo(p1120 * 27.599990844726562, p1120 * 28.949996948242188, p1120 * 33.59999084472656, p1120 * 26.949996948242188, p1120 * 35.59999084472656, p1120 * 32.94999694824219);
    v1487.bezierCurveTo(p1120 * 25.599990844726562, p1120 * 59.94999694824219, p1120 * 26.599990844726562, p1120 * 69.94999694824219, p1120 * 29.599990844726562, p1120 * 82.94999694824219);
    v1487.closePath();
    f89(v1487, p1122[0]);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.translate(p1120 * -1, 0);
    v1487.moveTo(p1120 * 17.599990844726562, p1120 * 89.75);
    v1487.bezierCurveTo(p1120 * 24.599990844726562, p1120 * 99.75, p1120 * 24.599990844726562, p1120 * 101.75, p1120 * 20.599990844726562, p1120 * 111.75);
    v1487.bezierCurveTo(p1120 * 28.599990844726562, p1120 * 110.75, p1120 * 26.599990844726562, p1120 * 112.75, p1120 * 28.599990844726562, p1120 * 111.75);
    v1487.bezierCurveTo(p1120 * 30.599990844726562, p1120 * 96.75, p1120 * 32.59999084472656, p1120 * 96.75, p1120 * 30.599990844726562, p1120 * 87.75);
    v1487.closePath();
    f89(v1487, p1122[0]);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.translate(p1120 * 1, 0);
    v1487.moveTo(p1120 * 7.5999908447265625, p1120 * 86.34999084472656);
    v1487.bezierCurveTo(p1120 * 12.599990844726562, p1120 * 85.34999084472656, p1120 * 14.599990844726562, p1120 * 84.34999084472656, p1120 * 13.599990844726562, p1120 * 84.34999084472656);
    v1487.bezierCurveTo(p1120 * 21.599990844726562, p1120 * 83.34999084472656, p1120 * 21.599990844726562, p1120 * 83.34999084472656, p1120 * 29.599990844726562, p1120 * 82.34999084472656);
    v1487.bezierCurveTo(p1120 * 33.59999084472656, p1120 * 85.84999084472656, p1120 * 33.59999084472656, p1120 * 85.84999084472656, p1120 * 37.59999084472656, p1120 * 89.34999084472656);
    v1487.bezierCurveTo(p1120 * 34.09999084472656, p1120 * 91.84999084472656, p1120 * 34.09999084472656, p1120 * 91.84999084472656, p1120 * 30.599990844726562, p1120 * 94.34999084472656);
    v1487.bezierCurveTo(p1120 * 21.099990844726562, p1120 * 93.34999084472656, p1120 * 21.099990844726562, p1120 * 93.34999084472656, p1120 * 11.599990844726562, p1120 * 92.34999084472656);
    v1487.closePath();
    f89(v1487, p1122[0]);
    v1487.save();
    v1487.translate(p1120 * 23.599990844726562, p1120 * 110.94999694824219);
    v1487.rotate(0);
    f90(v1487, p1120 * -7, p1120 * -4, p1120 * 14, p1120 * 8, p1120 * 10);
    v1487.restore();
    f89(v1487, p1122[0]);
    v1487.translate(p1120 * 0, 0);
    v1487.globalAlpha = 1;
    v1487.translate(p1120 * 10, 0);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.moveTo(p1120 * 22.599990844726562, p1120 * 85.94999694824219);
    v1487.bezierCurveTo(p1120 * 17.599990844726562, p1120 * 83.94999694824219, p1120 * 17.599990844726562, p1120 * 83.94999694824219, p1120 * 12.599990844726562, p1120 * 81.94999694824219);
    v1487.bezierCurveTo(p1120 * 19.599990844726562, p1120 * 73.94999694824219, p1120 * 2.5999908447265625, p1120 * 22.949996948242188, p1120 * 33.59999084472656, p1120 * 7.9499969482421875);
    v1487.bezierCurveTo(p1120 * 27.599990844726562, p1120 * 28.949996948242188, p1120 * 33.59999084472656, p1120 * 26.949996948242188, p1120 * 35.59999084472656, p1120 * 32.94999694824219);
    v1487.bezierCurveTo(p1120 * 25.599990844726562, p1120 * 59.94999694824219, p1120 * 26.599990844726562, p1120 * 69.94999694824219, p1120 * 29.599990844726562, p1120 * 82.94999694824219);
    v1487.closePath();
    f89(v1487, p1122[3], p1122[4], p1120 * 3);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.translate(p1120 * -1, 0);
    v1487.moveTo(p1120 * 17.599990844726562, p1120 * 89.75);
    v1487.bezierCurveTo(p1120 * 24.599990844726562, p1120 * 99.75, p1120 * 24.599990844726562, p1120 * 101.75, p1120 * 20.599990844726562, p1120 * 111.75);
    v1487.bezierCurveTo(p1120 * 28.599990844726562, p1120 * 110.75, p1120 * 26.599990844726562, p1120 * 112.75, p1120 * 28.599990844726562, p1120 * 111.75);
    v1487.bezierCurveTo(p1120 * 30.599990844726562, p1120 * 96.75, p1120 * 32.59999084472656, p1120 * 96.75, p1120 * 30.599990844726562, p1120 * 87.75);
    v1487.closePath();
    f89(v1487, p1122[1], p1122[2], p1120 * 3);
    v1487.beginPath();
    v1487.lineCap = "round";
    v1487.lineJoin = "round";
    v1487.translate(p1120 * 1, 0);
    v1487.moveTo(p1120 * 7.5999908447265625, p1120 * 86.34999084472656);
    v1487.bezierCurveTo(p1120 * 12.599990844726562, p1120 * 85.34999084472656, p1120 * 14.599990844726562, p1120 * 84.34999084472656, p1120 * 13.599990844726562, p1120 * 84.34999084472656);
    v1487.bezierCurveTo(p1120 * 21.599990844726562, p1120 * 83.34999084472656, p1120 * 21.599990844726562, p1120 * 83.34999084472656, p1120 * 29.599990844726562, p1120 * 82.34999084472656);
    v1487.bezierCurveTo(p1120 * 33.59999084472656, p1120 * 85.84999084472656, p1120 * 33.59999084472656, p1120 * 85.84999084472656, p1120 * 37.59999084472656, p1120 * 89.34999084472656);
    v1487.bezierCurveTo(p1120 * 34.09999084472656, p1120 * 91.84999084472656, p1120 * 34.09999084472656, p1120 * 91.84999084472656, p1120 * 30.599990844726562, p1120 * 94.34999084472656);
    v1487.bezierCurveTo(p1120 * 21.099990844726562, p1120 * 93.34999084472656, p1120 * 21.099990844726562, p1120 * 93.34999084472656, p1120 * 11.599990844726562, p1120 * 92.34999084472656);
    v1487.closePath();
    f89(v1487, p1122[1], p1122[2], p1120 * 3);
    v1487.save();
    v1487.translate(p1120 * 23.599990844726562, p1120 * 110.94999694824219);
    v1487.rotate(0);
    f90(v1487, p1120 * -7, p1120 * -4, p1120 * 14, p1120 * 8, p1120 * 10);
    v1487.restore();
    f89(v1487, p1122[1], p1122[2], p1120 * 3);
    return v1486;
  }
  function f274(p1123, p1124, p1125) {
    var v1488 = document.createElement("canvas");
    var v1489 = v1488.getContext("2d");
    v1488.width = p1123 * 105;
    v1488.height = p1123 * 144;
    v1489.globalAlpha = p1124 ? 0.5 : 1;
    v1489.translate(p1123 * -5, p1123 * 0);
    v1489.save();
    v1489.translate(p1123 * 52.5, p1123 * 91.5);
    f90(v1489, p1123 * -4.5, p1123 * -39, p1123 * 9, p1123 * 78, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[0], p1125[0], p1123 * 3);
    v1489.save();
    v1489.translate(p1123 * 53, p1123 * 36);
    f90(v1489, p1123 * -29, p1123 * -17.5, p1123 * 58, p1123 * 35, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[0], p1125[0], p1123 * 4);
    v1489.save();
    v1489.translate(p1123 * 53.5, p1123 * 35.5);
    f90(v1489, p1123 * -26.5, p1123 * -15, p1123 * 53, p1123 * 30, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[0], p1125[0], p1123 * 4);
    v1489.translate(p1123 * 5, p1123 * 0);
    v1489.globalAlpha = 1;
    v1489.save();
    v1489.translate(p1123 * 52.5, p1123 * 91.5);
    f90(v1489, p1123 * -4.5, p1123 * -39, p1123 * 9, p1123 * 78, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[1], p1125[2], p1123 * 3);
    v1489.save();
    v1489.translate(p1123 * 53, p1123 * 36);
    f90(v1489, p1123 * -29, p1123 * -17.5, p1123 * 58, p1123 * 35, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[3], p1125[4], p1123 * 4);
    v1489.save();
    v1489.translate(p1123 * 53.5, p1123 * 35.5);
    f90(v1489, p1123 * -26.5, p1123 * -15, p1123 * 53, p1123 * 30, p1123 * 5);
    v1489.restore();
    f89(v1489, p1125[5], p1125[6], p1123 * 4);
    v1489.beginPath();
    v1489.lineCap = "round";
    v1489.lineJoin = "round";
    v1489.moveTo(p1123 * 49, p1123 * 60.5);
    v1489.bezierCurveTo(p1123 * 44, p1123 * 56.5, p1123 * 44, p1123 * 56.5, p1123 * 39, p1123 * 52.5);
    v1489.bezierCurveTo(p1123 * 39, p1123 * 46.5, p1123 * 39, p1123 * 46.5, p1123 * 39, p1123 * 40.5);
    v1489.bezierCurveTo(p1123 * 44, p1123 * 44, p1123 * 44, p1123 * 44, p1123 * 49, p1123 * 47.5);
    v1489.bezierCurveTo(p1123 * 49, p1123 * 54, p1123 * 49, p1123 * 54, p1123 * 49, p1123 * 60.5);
    v1489.closePath();
    f89(v1489, p1125[7], p1125[6], p1123 * 3);
    v1489.beginPath();
    v1489.lineCap = "round";
    v1489.lineJoin = "round";
    v1489.moveTo(p1123 * 66, p1123 * 40.5);
    v1489.bezierCurveTo(p1123 * 66, p1123 * 46.5, p1123 * 66, p1123 * 46.5, p1123 * 66, p1123 * 52.5);
    v1489.bezierCurveTo(p1123 * 60.5, p1123 * 56.5, p1123 * 60.5, p1123 * 56.5, p1123 * 55, p1123 * 60.5);
    v1489.bezierCurveTo(p1123 * 56, p1123 * 53, p1123 * 56, p1123 * 53, p1123 * 57, p1123 * 45.5);
    v1489.bezierCurveTo(p1123 * 61.5, p1123 * 43, p1123 * 61.5, p1123 * 43, p1123 * 66, p1123 * 40.5);
    v1489.closePath();
    f89(v1489, p1125[7], p1125[6], p1123 * 3);
    v1489.beginPath();
    v1489.lineCap = "round";
    v1489.lineJoin = "round";
    v1489.moveTo(p1123 * 52, p1123 * 33.5);
    v1489.bezierCurveTo(p1123 * 55.5, p1123 * 41, p1123 * 55.5, p1123 * 41, p1123 * 59, p1123 * 48.5);
    v1489.bezierCurveTo(p1123 * 56, p1123 * 58, p1123 * 56, p1123 * 58, p1123 * 53, p1123 * 67.5);
    v1489.bezierCurveTo(p1123 * 49, p1123 * 58, p1123 * 49, p1123 * 58, p1123 * 45, p1123 * 48.5);
    v1489.bezierCurveTo(p1123 * 48.5, p1123 * 41, p1123 * 48.5, p1123 * 41, p1123 * 52, p1123 * 33.5);
    v1489.closePath();
    f89(v1489, p1125[9], p1125[8], p1123 * 3);
    v1489.beginPath();
    v1489.lineCap = "round";
    v1489.lineJoin = "round";
    v1489.moveTo(p1123 * 52, p1123 * 47.5);
    v1489.bezierCurveTo(p1123 * 54.5, p1123 * 50.5, p1123 * 54.5, p1123 * 50.5, p1123 * 57, p1123 * 53.5);
    v1489.bezierCurveTo(p1123 * 55, p1123 * 60, p1123 * 55, p1123 * 60, p1123 * 53, p1123 * 66.5);
    v1489.bezierCurveTo(p1123 * 50.5, p1123 * 61, p1123 * 50.5, p1123 * 61, p1123 * 48, p1123 * 55.5);
    v1489.bezierCurveTo(p1123 * 50, p1123 * 52, p1123 * 50, p1123 * 52, p1123 * 52, p1123 * 48.5);
    v1489.closePath();
    f89(v1489, p1125[11], p1125[10], p1123 * 3);
    return v1488;
  }
  function f275(p1126, p1127, p1128) {
    var v1490 = document.createElement("canvas");
    var v1491 = v1490.getContext("2d");
    v1490.width = p1126 * 95;
    v1490.height = p1126 * 85;
    if (p1128 == 0) {
      v1491.translate(p1126 * 7, p1126 * 15);
      v1491.scale(0.9, 0.9);
      v1491.save();
      f90(v1491, p1126 * 0, p1126 * 5, p1126 * 90, p1126 * 60, 10);
      f89(v1491, p1127[0]);
      v1491.globalCompositeOperation = "destination-out";
      f94(v1491, p1126 * 25, p1126 * 40, p1126 * 10);
      v1491.fill();
      f94(v1491, p1126 * 65, p1126 * 40, p1126 * 10);
      v1491.fill();
      v1491.restore();
      v1491.save();
      f90(v1491, 0, 0, p1126 * 90, p1126 * 60, p1126 * 10);
      f89(v1491, p1127[1]);
      v1491.globalCompositeOperation = "destination-out";
      f94(v1491, p1126 * 25, p1126 * 40, p1126 * 10);
      v1491.fill();
      f94(v1491, p1126 * 65, p1126 * 40, p1126 * 10);
      v1491.fill();
      v1491.restore();
    } else if (p1128 == 1) {
      v1491.scale(0.8, 0.8);
      v1491.translate(p1126 * 15, p1126 * 33);
      v1491.save();
      v1491.scale(0.56, 0.56);
      v1491.translate(p1126 * -39, p1126 * -60);
      v1491.beginPath();
      v1491.lineCap = "round";
      v1491.lineJoin = "round";
      v1491.moveTo(p1126 * 32.5, p1126 * 50.642852783203125);
      v1491.bezierCurveTo(p1126 * 83, p1126 * 69.64285278320312, p1126 * 83, p1126 * 69.64285278320312, p1126 * 133.5, p1126 * 88.64285278320312);
      v1491.bezierCurveTo(p1126 * 93, p1126 * 92.64285278320312, p1126 * 93, p1126 * 92.64285278320312, p1126 * 52.5, p1126 * 96.64285278320312);
      v1491.bezierCurveTo(p1126 * 30.5, p1126 * 100.64285278320312, p1126 * 36.5, p1126 * 94.64285278320312, p1126 * 32.5, p1126 * 84.64285278320312);
      v1491.bezierCurveTo(p1126 * 21.5, p1126 * 45.642852783203125, p1126 * 24.5, p1126 * 48.642852783203125, p1126 * 31.5, p1126 * 50.642852783203125);
      v1491.closePath();
      f89(v1491, p1127[1]);
      v1491.beginPath();
      v1491.lineCap = "round";
      v1491.lineJoin = "round";
      v1491.moveTo(p1126 * 116.5, p1126 * 85.64285278320312);
      v1491.bezierCurveTo(p1126 * 160.5, p1126 * 67.14285278320312, p1126 * 160.5, p1126 * 67.14285278320312, p1126 * 204.5, p1126 * 48.642852783203125);
      v1491.bezierCurveTo(p1126 * 220.5, p1126 * 42.642852783203125, p1126 * 208.5, p1126 * 68.64285278320312, p1126 * 205.5, p1126 * 85.64285278320312);
      v1491.bezierCurveTo(p1126 * 202.5, p1126 * 98.64285278320312, p1126 * 199.5, p1126 * 98.64285278320312, p1126 * 188.5, p1126 * 100.64285278320312);
      v1491.closePath();
      f89(v1491, p1127[1]);
      v1491.beginPath();
      v1491.lineCap = "round";
      v1491.lineJoin = "round";
      v1491.moveTo(p1126 * 166.5, p1126 * 68.64285278320312);
      v1491.bezierCurveTo(p1126 * 147.5, p1126 * 72.64285278320312, p1126 * 145.5, p1126 * 73.64285278320312, p1126 * 142.5, p1126 * 62.642852783203125);
      v1491.bezierCurveTo(p1126 * 121.5, p1126 * 12.642852783203125, p1126 * 122.5, p1126 * 5.642852783203125, p1126 * 117.5, p1126 * 15.642852783203125);
      v1491.bezierCurveTo(p1126 * 105.5, p1126 * 40.642852783203125, p1126 * 105.5, p1126 * 40.642852783203125, p1126 * 93.5, p1126 * 65.64285278320312);
      v1491.bezierCurveTo(p1126 * 89.5, p1126 * 74.64285278320312, p1126 * 84.5, p1126 * 72.64285278320312, p1126 * 73.5, p1126 * 74.64285278320312);
      v1491.bezierCurveTo(p1126 * 98, p1126 * 87.64285278320312, p1126 * 98, p1126 * 87.64285278320312, p1126 * 122.5, p1126 * 100.64285278320312);
      v1491.closePath();
      f89(v1491, p1127[1]);
      v1491.restore();
      v1491.save();
      f90(v1491, 0, p1126 * 15, p1126 * 90, p1126 * 50, p1126 * 10);
      f89(v1491, p1127[0]);
      f90(v1491, 0, p1126 * 10, p1126 * 90, p1126 * 50, p1126 * 10);
      f89(v1491, p1127[1]);
      v1491.globalCompositeOperation = "destination-out";
      f94(v1491, p1126 * 25, p1126 * 40, p1126 * 10);
      v1491.fill();
      f94(v1491, p1126 * 65, p1126 * 40, p1126 * 10);
      v1491.fill();
      v1491.restore();
    }
    return v1490;
  }
  function f276(p1129, p1130, p1131) {
    var v1492 = document.createElement("canvas");
    var v1493 = v1492.getContext("2d");
    v1492.width = p1129 * 272;
    v1492.height = p1129 * 264;
    v1493.translate(0, p1129 * 20);
    v1493.globalAlpha = p1130 ? 0.5 : 1;
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1129 * 56.999969482421875, p1129 * 84.517333984375);
    v1493.bezierCurveTo(p1129 * 61.999969482421875, p1129 * 58.517333984375, p1129 * 79.99996948242188, p1129 * 50.517333984375, p1129 * 102.99996948242188, p1129 * 50.517333984375);
    v1493.bezierCurveTo(p1129 * 119.99996948242188, p1129 * 26.517333984375, p1129 * 137.99996948242188, p1129 * 32.517333984375, p1129 * 156.99996948242188, p1129 * 44.517333984375);
    v1493.bezierCurveTo(p1129 * 187.99996948242188, p1129 * 42.517333984375, p1129 * 195.99996948242188, p1129 * 50.517333984375, p1129 * 202.99996948242188, p1129 * 77.517333984375);
    v1493.bezierCurveTo(p1129 * 229.99996948242188, p1129 * 80.517333984375, p1129 * 231.99996948242188, p1129 * 96.517333984375, p1129 * 229.99996948242188, p1129 * 118.517333984375);
    v1493.bezierCurveTo(p1129 * 241.99996948242188, p1129 * 147.517333984375, p1129 * 236.99996948242188, p1129 * 148.517333984375, p1129 * 220.99996948242188, p1129 * 165.517333984375);
    v1493.bezierCurveTo(p1129 * 222.99996948242188, p1129 * 192.517333984375, p1129 * 209.99996948242188, p1129 * 212.517333984375, p1129 * 177.99996948242188, p1129 * 213.517333984375);
    v1493.bezierCurveTo(p1129 * 159.99996948242188, p1129 * 234.517333984375, p1129 * 141.99996948242188, p1129 * 234.517333984375, p1129 * 116.99996948242188, p1129 * 222.517333984375);
    v1493.bezierCurveTo(p1129 * 72.99996948242188, p1129 * 226.517333984375, p1129 * 66.99996948242188, p1129 * 207.517333984375, p1129 * 65.99996948242188, p1129 * 190.517333984375);
    v1493.bezierCurveTo(p1129 * 35.999969482421875, p1129 * 180.517333984375, p1129 * 30.999969482421875, p1129 * 162.517333984375, p1129 * 39.999969482421875, p1129 * 135.517333984375);
    v1493.bezierCurveTo(p1129 * 23.999969482421875, p1129 * 110.517333984375, p1129 * 43.999969482421875, p1129 * 90.517333984375, p1129 * 55.999969482421875, p1129 * 85.517333984375);
    v1493.closePath();
    f89(v1493, p1131[0]);
    v1493.translate(0, p1129 * -20);
    v1493.globalAlpha = 1;
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1129 * 56.999969482421875, p1129 * 84.517333984375);
    v1493.bezierCurveTo(p1129 * 61.999969482421875, p1129 * 58.517333984375, p1129 * 79.99996948242188, p1129 * 50.517333984375, p1129 * 102.99996948242188, p1129 * 50.517333984375);
    v1493.bezierCurveTo(p1129 * 119.99996948242188, p1129 * 26.517333984375, p1129 * 137.99996948242188, p1129 * 32.517333984375, p1129 * 156.99996948242188, p1129 * 44.517333984375);
    v1493.bezierCurveTo(p1129 * 187.99996948242188, p1129 * 42.517333984375, p1129 * 195.99996948242188, p1129 * 50.517333984375, p1129 * 202.99996948242188, p1129 * 77.517333984375);
    v1493.bezierCurveTo(p1129 * 229.99996948242188, p1129 * 80.517333984375, p1129 * 231.99996948242188, p1129 * 96.517333984375, p1129 * 229.99996948242188, p1129 * 118.517333984375);
    v1493.bezierCurveTo(p1129 * 241.99996948242188, p1129 * 147.517333984375, p1129 * 236.99996948242188, p1129 * 148.517333984375, p1129 * 220.99996948242188, p1129 * 165.517333984375);
    v1493.bezierCurveTo(p1129 * 222.99996948242188, p1129 * 192.517333984375, p1129 * 209.99996948242188, p1129 * 212.517333984375, p1129 * 177.99996948242188, p1129 * 213.517333984375);
    v1493.bezierCurveTo(p1129 * 159.99996948242188, p1129 * 234.517333984375, p1129 * 141.99996948242188, p1129 * 234.517333984375, p1129 * 116.99996948242188, p1129 * 222.517333984375);
    v1493.bezierCurveTo(p1129 * 72.99996948242188, p1129 * 226.517333984375, p1129 * 66.99996948242188, p1129 * 207.517333984375, p1129 * 65.99996948242188, p1129 * 190.517333984375);
    v1493.bezierCurveTo(p1129 * 35.999969482421875, p1129 * 180.517333984375, p1129 * 30.999969482421875, p1129 * 162.517333984375, p1129 * 39.999969482421875, p1129 * 135.517333984375);
    v1493.bezierCurveTo(p1129 * 23.999969482421875, p1129 * 110.517333984375, p1129 * 43.999969482421875, p1129 * 90.517333984375, p1129 * 55.999969482421875, p1129 * 85.517333984375);
    v1493.closePath();
    f89(v1493, p1131[1], p1131[2], p1129 * 8);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1129 * 123.99996948242188, p1129 * 116.18402099609375);
    v1493.bezierCurveTo(p1129 * 115.99996948242188, p1129 * 99.18402099609375, p1129 * 109.99996948242188, p1129 * 74.18402099609375, p1129 * 109.99996948242188, p1129 * 63.18402099609375);
    v1493.bezierCurveTo(p1129 * 115.99996948242188, p1129 * 69.18402099609375, p1129 * 125.99996948242188, p1129 * 87.18402099609375, p1129 * 137.99996948242188, p1129 * 112.18402099609375);
    v1493.bezierCurveTo(p1129 * 142.99996948242188, p1129 * 84.18402099609375, p1129 * 143.99996948242188, p1129 * 76.18402099609375, p1129 * 153.99996948242188, p1129 * 62.18402099609375);
    v1493.bezierCurveTo(p1129 * 155.99996948242188, p1129 * 79.18402099609375, p1129 * 149.99996948242188, p1129 * 110.18402099609375, p1129 * 151.99996948242188, p1129 * 117.18402099609375);
    v1493.bezierCurveTo(p1129 * 162.99996948242188, p1129 * 104.18402099609375, p1129 * 180.99996948242188, p1129 * 91.18402099609375, p1129 * 191.99996948242188, p1129 * 91.18402099609375);
    v1493.bezierCurveTo(p1129 * 185.99996948242188, p1129 * 102.18402099609375, p1129 * 180.99996948242188, p1129 * 106.18402099609375, p1129 * 160.99996948242188, p1129 * 124.18402099609375);
    v1493.bezierCurveTo(p1129 * 190.99996948242188, p1129 * 121.18402099609375, p1129 * 199.99996948242188, p1129 * 120.18402099609375, p1129 * 207.99996948242188, p1129 * 123.18402099609375);
    v1493.bezierCurveTo(p1129 * 199.99996948242188, p1129 * 129.18402099609375, p1129 * 181.99996948242188, p1129 * 132.18402099609375, p1129 * 160.99996948242188, p1129 * 135.18402099609375);
    v1493.bezierCurveTo(p1129 * 179.99996948242188, p1129 * 142.18402099609375, p1129 * 193.99996948242188, p1129 * 151.18402099609375, p1129 * 196.99996948242188, p1129 * 156.18402099609375);
    v1493.bezierCurveTo(p1129 * 185.99996948242188, p1129 * 156.18402099609375, p1129 * 163.99996948242188, p1129 * 149.18402099609375, p1129 * 152.99996948242188, p1129 * 147.18402099609375);
    v1493.bezierCurveTo(p1129 * 157.99996948242188, p1129 * 155.18402099609375, p1129 * 165.99996948242188, p1129 * 176.18402099609375, p1129 * 169.99996948242188, p1129 * 195.18402099609375);
    v1493.bezierCurveTo(p1129 * 162.99996948242188, p1129 * 190.18402099609375, p1129 * 147.99996948242188, p1129 * 167.18402099609375, p1129 * 139.99996948242188, p1129 * 153.18402099609375);
    v1493.bezierCurveTo(p1129 * 137.99996948242188, p1129 * 167.18402099609375, p1129 * 126.99996948242188, p1129 * 194.18402099609375, p1129 * 119.99996948242188, p1129 * 204.18402099609375);
    v1493.bezierCurveTo(p1129 * 117.99996948242188, p1129 * 186.18402099609375, p1129 * 123.99996948242188, p1129 * 165.18402099609375, p1129 * 126.99996948242188, p1129 * 149.18402099609375);
    v1493.bezierCurveTo(p1129 * 110.99996948242188, p1129 * 163.18402099609375, p1129 * 103.99996948242188, p1129 * 170.18402099609375, p1129 * 82.99996948242188, p1129 * 177.18402099609375);
    v1493.bezierCurveTo(p1129 * 90.99996948242188, p1129 * 162.18402099609375, p1129 * 99.99996948242188, p1129 * 153.18402099609375, p1129 * 117.99996948242188, p1129 * 140.18402099609375);
    v1493.bezierCurveTo(p1129 * 97.99996948242188, p1129 * 140.18402099609375, p1129 * 83.99996948242188, p1129 * 139.18402099609375, p1129 * 65.99996948242188, p1129 * 132.18402099609375);
    v1493.bezierCurveTo(p1129 * 77.99996948242188, p1129 * 127.18402099609375, p1129 * 95.99996948242188, p1129 * 127.18402099609375, p1129 * 115.99996948242188, p1129 * 127.18402099609375);
    v1493.bezierCurveTo(p1129 * 91.99996948242188, p1129 * 113.18402099609375, p1129 * 84.99996948242188, p1129 * 107.18402099609375, p1129 * 76.99996948242188, p1129 * 96.18402099609375);
    v1493.bezierCurveTo(p1129 * 94.99996948242188, p1129 * 99.18402099609375, p1129 * 109.99996948242188, p1129 * 109.18402099609375, p1129 * 123.99996948242188, p1129 * 116.18402099609375);
    v1493.closePath();
    f89(v1493, p1131[3]);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1129 * 131.99996948242188, p1129 * 119.18402099609375);
    v1493.bezierCurveTo(p1129 * 141.99996948242188, p1129 * 119.18402099609375, p1129 * 145.99996948242188, p1129 * 116.18402099609375, p1129 * 147.99996948242188, p1129 * 109.18402099609375);
    v1493.bezierCurveTo(p1129 * 151.99996948242188, p1129 * 107.18402099609375, p1129 * 159.99996948242188, p1129 * 107.18402099609375, p1129 * 156.99996948242188, p1129 * 123.18402099609375);
    v1493.bezierCurveTo(p1129 * 155.99996948242188, p1129 * 140.18402099609375, p1129 * 142.99996948242188, p1129 * 149.18402099609375, p1129 * 132.99996948242188, p1129 * 147.18402099609375);
    v1493.bezierCurveTo(p1129 * 119.99996948242188, p1129 * 144.18402099609375, p1129 * 113.99996948242188, p1129 * 122.18402099609375, p1129 * 131.99996948242188, p1129 * 119.18402099609375);
    v1493.closePath();
    f89(v1493, p1131[4], p1131[5], p1129 * 6);
    return v1492;
  }
  function f277() {
    var v1494 = v2857.time;
    if (ⵠΔ[395]) {
      v407.drawImage(ⵠΔ[395][v1494][1], v411 + 480, v412 + 190);
      v407.drawImage(ⵠΔ[395][v1494][2], v411 + 180, v412 - 430);
      v407.drawImage(ⵠΔ[395][v1494][1], v411 - 855, v412 + 100);
      v407.drawImage(ⵠΔ[395][v1494][0], v411 - 550, v412 - 300);
      v407.drawImage(ⵠΔ[395][v1494][0], v411 - 1020, v412 - 520);
    }
    if (ⵠΔ[199]) {
      v407.drawImage(ⵠΔ[199][v1494][1], v411 - 80, v412 - 640);
      v407.drawImage(ⵠΔ[199][v1494][1], v411 + 80, v412 + 490);
      v407.drawImage(ⵠΔ[199][v1494][2], v411 - 180, v412 - 700);
      v407.drawImage(ⵠΔ[199][v1494][0], v411 + 550, v412 + 100);
      v407.drawImage(ⵠΔ[199][v1494][1], v411 + 450, v412 + 300);
      v407.drawImage(ⵠΔ[199][v1494][1], v411 + 780, v412 + 300);
      v407.drawImage(ⵠΔ[199][v1494][2], v411 + 980, v412 + 200);
      v407.drawImage(ⵠΔ[199][v1494][2], v411 + 680, v412 + 600);
      v407.drawImage(ⵠΔ[199][v1494][2], v411 - 380, v412 + 100);
      v407.drawImage(ⵠΔ[199][v1494][2], v411 + 280, v412 + 250);
    }
    if (ⵠΔ[201]) {
      v407.drawImage(ⵠΔ[201][v1494][0], v411 - 590, v412);
      v407.drawImage(ⵠΔ[201][v1494][0], v411 + 120, v412 - 390);
      v407.drawImage(ⵠΔ[201][v1494][0], v411 - 270, v412 + 340);
    }
    if (ⵠΔ[200]) {
      v407.drawImage(ⵠΔ[200][v1494][4], v411 - 700, v412 - 600);
      v407.drawImage(ⵠΔ[200][v1494][2], v411 - 970, v412 - 250);
      v407.drawImage(ⵠΔ[200][v1494][5], v411 - 720, v412 - 200);
      v407.drawImage(ⵠΔ[200][v1494][2], v411 - 1020, v412 + 340);
      v407.drawImage(ⵠΔ[200][v1494][0], v411 - 1120, v412 - 0);
      v407.drawImage(ⵠΔ[200][v1494][1], v411 - 650, v412 - 330);
      v407.drawImage(ⵠΔ[200][v1494][4], v411 - 495, v412 - 90);
      v407.drawImage(ⵠΔ[200][v1494][3], v411 - 520, v412 + 340);
      v407.drawImage(ⵠΔ[200][v1494][2], v411 + 830, v412 - 520);
    }
    ⵠΔ[524];
    if (v2860 && v2859) {
      var v1495 = v2860.Δⵠⵠ.x;
      var v1496 = v2860.Δⵠⵠ.y;
      v2860.Δⵠⵠ.x = v411;
      v2860.Δⵠⵠ.y = v412;
      var v1497 = v2859.time;
      v2859.time = v2857.time;
      var v1498;
      var v1499 = v2857.items;
      v1499[2].x = 400;
      v1499[2].y = 100;
      v1499[2].ⲆⵠⲆᐃ(205);
      (v1498 = v1499[1]).x = -500;
      v1498.y = 100;
      v1498.ᐃⲆᐃⲆ[0].x = v1498.x - 20.5;
      v1498.ᐃⲆᐃⲆ[0].y = v1498.y - 22.5;
      v1498.ᐃⲆᐃⲆ[1].x = v1498.x - 35.5;
      v1498.ᐃⲆᐃⲆ[1].y = v1498.y + 7.5;
      v1498.ᐃⲆᐃⲆ[2].x = v1498.x + 7.5;
      v1498.ᐃⲆᐃⲆ[2].y = v1498.y - 30;
      v1498.ᐃⲆᐃⲆ[3].x = v1498.x + 22.5;
      v1498.ᐃⲆᐃⲆ[3].y = v1498.y;
      v1498.ᐃⲆᐃⲆ[4].x = v1498.x - 7.5;
      v1498.ᐃⲆᐃⲆ[4].y = v1498.y + 14.5;
      for (var v1500 = 0; v1500 < v1498.info; v1500++) {
        v1498.ᐃⲆᐃⲆ[v1500].ⲆⵠⲆᐃ(404);
      }
      (v1498 = v1499[3]).x = 210;
      v1498.y = -290;
      v1498.ᐃⲆᐃⲆ[0].x = v1498.x - 20.5;
      v1498.ᐃⲆᐃⲆ[0].y = v1498.y - 22.5;
      v1498.ᐃⲆᐃⲆ[1].x = v1498.x - 35.5;
      v1498.ᐃⲆᐃⲆ[1].y = v1498.y + 7.5;
      v1498.ᐃⲆᐃⲆ[2].x = v1498.x + 7.5;
      v1498.ᐃⲆᐃⲆ[2].y = v1498.y - 30;
      v1498.ᐃⲆᐃⲆ[3].x = v1498.x + 22.5;
      v1498.ᐃⲆᐃⲆ[3].y = v1498.y;
      v1498.ᐃⲆᐃⲆ[4].x = v1498.x - 7.5;
      v1498.ᐃⲆᐃⲆ[4].y = v1498.y + 14.5;
      for (v1500 = 0; v1498.info > v1500; v1500++) {
        v1498.ᐃⲆᐃⲆ[v1500].ⲆⵠⲆᐃ(404);
      }
      v1499[0].x = 450;
      v1499[0].y = -100;
      v1499[0].ⵠⲆⲆᐃΔⲆΔ(204);
      v1499[0].ᐃⵠᐃΔᐃ();
      v2860.Δⵠⵠ.x = v1495;
      v2860.Δⵠⵠ.y = v1496;
      v2859.time = v1497;
    }
  }
  function f278(p1132, p1133, p1134) {
    var v1501 = document.createElement("canvas");
    var v1502 = v1501.getContext("2d");
    v1501.width = p1132 * 465;
    v1501.height = p1132 * 310;
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 126, p1132 * 192);
    v1502.bezierCurveTo(p1132 * 198, p1132 * 202, p1132 * 245, p1132 * 203, p1132 * 335, p1132 * 194);
    v1502.bezierCurveTo(p1132 * 336, p1132 * 232, p1132 * 326, p1132 * 235, p1132 * 232, p1132 * 237);
    v1502.bezierCurveTo(p1132 * 161, p1132 * 235, p1132 * 122, p1132 * 235, p1132 * 126, p1132 * 193);
    v1502.closePath();
    f89(v1502, p1134[0], p1134[1], p1132 * 4);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 146, p1132 * 239);
    v1502.bezierCurveTo(p1132 * 174, p1132 * 74, p1132 * 287, p1132 * 88, p1132 * 320, p1132 * 240);
    v1502.bezierCurveTo(p1132 * 329, p1132 * 231, p1132 * 340, p1132 * 219, p1132 * 332, p1132 * 115);
    v1502.bezierCurveTo(p1132 * 330, p1132 * 40, p1132 * 144, p1132 * 30, p1132 * 129, p1132 * 116);
    v1502.bezierCurveTo(p1132 * 124, p1132 * 217, p1132 * 124, p1132 * 228, p1132 * 143, p1132 * 237);
    v1502.closePath();
    f89(v1502, p1134[0], p1134[1], p1132 * 4);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 126, p1132 * 193);
    v1502.bezierCurveTo(p1132 * 173, p1132 * 94, p1132 * 209, p1132 * 100, p1132 * 228, p1132 * 57);
    v1502.bezierCurveTo(p1132 * 190, p1132 * 112, p1132 * 165, p1132 * 115, p1132 * 127, p1132 * 184);
    v1502.closePath();
    f89(v1502, vVUndefined6, p1134[1], p1132 * 4);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 230, p1132 * 57);
    v1502.bezierCurveTo(p1132 * 266, p1132 * 117, p1132 * 310, p1132 * 130, p1132 * 332, p1132 * 183);
    v1502.bezierCurveTo(p1132 * 290, p1132 * 112, p1132 * 262, p1132 * 109, p1132 * 230, p1132 * 56);
    v1502.closePath();
    f89(v1502, vVVVUndefined17, p1134[1], p1132 * 4);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 154, p1132 * 212);
    v1502.bezierCurveTo(p1132 * 208, p1132 * 224, p1132 * 252, p1132 * 219, p1132 * 305, p1132 * 212);
    v1502.bezierCurveTo(p1132 * 267, p1132 * 219, p1132 * 204, p1132 * 222, p1132 * 155, p1132 * 212);
    v1502.closePath();
    f89(v1502, vVUndefined14, p1134[1], p1132 * 4);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 239, p1132 * 59);
    v1502.bezierCurveTo(p1132 * 302, p1132 * 72, p1132 * 325, p1132 * 84, p1132 * 326, p1132 * 115);
    v1502.bezierCurveTo(p1132 * 289, p1132 * 80, p1132 * 270, p1132 * 88, p1132 * 253, p1132 * 78);
    v1502.closePath();
    f89(v1502, p1134[2]);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 216, p1132 * 61);
    v1502.bezierCurveTo(p1132 * 209, p1132 * 70, p1132 * 209, p1132 * 70, p1132 * 202, p1132 * 79);
    v1502.bezierCurveTo(p1132 * 173, p1132 * 87, p1132 * 162, p1132 * 91, p1132 * 137, p1132 * 107);
    v1502.bezierCurveTo(p1132 * 153, p1132 * 78, p1132 * 174, p1132 * 67, p1132 * 212, p1132 * 62);
    v1502.closePath();
    f89(v1502, p1134[2]);
    v1502.beginPath();
    v1502.lineCap = "round";
    v1502.lineJoin = "round";
    v1502.moveTo(p1132 * 175, p1132 * 125);
    v1502.bezierCurveTo(p1132 * 218, p1132 * 94, p1132 * 238, p1132 * 90, p1132 * 281, p1132 * 125);
    v1502.bezierCurveTo(p1132 * 245, p1132 * 89, p1132 * 240, p1132 * 80, p1132 * 228, p1132 * 67);
    v1502.bezierCurveTo(p1132 * 207, p1132 * 100, p1132 * 192, p1132 * 104, p1132 * 177, p1132 * 123);
    v1502.closePath();
    f89(v1502, p1134[2]);
    return v1501;
  }
  function f279(p1135, p1136) {
    var v1503 = document.createElement("canvas");
    var v1504 = v1503.getContext("2d");
    v1503.width = p1135 * 271;
    v1503.height = p1135 * 366;
    v1504.globalAlpha = 0.5;
    v1504.translate(0, p1135 * 10);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 99);
    v1504.bezierCurveTo(p1135 * 186, p1135 * 123, p1135 * 199, p1135 * 152, p1135 * 209, p1135 * 169);
    v1504.bezierCurveTo(p1135 * 228, p1135 * 205, p1135 * 224, p1135 * 245, p1135 * 190, p1135 * 276);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 296, p1135 * 99, p1135 * 292, p1135 * 79, p1135 * 274);
    v1504.bezierCurveTo(p1135 * 49, p1135 * 253, p1135 * 47, p1135 * 214, p1135 * 50, p1135 * 197);
    v1504.bezierCurveTo(p1135 * 61, p1135 * 143, p1135 * 102, p1135 * 113, p1135 * 131, p1135 * 99);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 73, p1135 * 270);
    v1504.bezierCurveTo(p1135 * 79, p1135 * 280, p1135 * 77, p1135 * 280, p1135 * 78, p1135 * 287);
    v1504.bezierCurveTo(p1135 * 78, p1135 * 290, p1135 * 83, p1135 * 291, p1135 * 82, p1135 * 299);
    v1504.bezierCurveTo(p1135 * 81, p1135 * 301, p1135 * 87, p1135 * 301, p1135 * 92, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 94, p1135 * 319, p1135 * 100, p1135 * 321, p1135 * 107, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 323, p1135 * 114, p1135 * 324, p1135 * 119, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 321, p1135 * 146, p1135 * 323, p1135 * 139, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 324, p1135 * 150, p1135 * 324, p1135 * 153, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 168, p1135 * 319, p1135 * 171, p1135 * 316, p1135 * 173, p1135 * 307);
    v1504.bezierCurveTo(p1135 * 180, p1135 * 305, p1135 * 180, p1135 * 301, p1135 * 178, p1135 * 296);
    v1504.bezierCurveTo(p1135 * 183, p1135 * 296, p1135 * 185, p1135 * 289, p1135 * 188, p1135 * 279);
    v1504.bezierCurveTo(p1135 * 171, p1135 * 286, p1135 * 149, p1135 * 290, p1135 * 132, p1135 * 289);
    v1504.bezierCurveTo(p1135 * 101, p1135 * 290, p1135 * 86, p1135 * 280, p1135 * 74, p1135 * 271);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 76, p1135 * 252);
    v1504.bezierCurveTo(p1135 * 85, p1135 * 294, p1135 * 96, p1135 * 314, p1135 * 103, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 316, p1135 * 151, p1135 * 314, p1135 * 156, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 169, p1135 * 317, p1135 * 182, p1135 * 285, p1135 * 191, p1135 * 256);
    v1504.bezierCurveTo(p1135 * 134.5, p1135 * 254, p1135 * 134.5, p1135 * 254, p1135 * 78, p1135 * 252);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 84, p1135 * 257);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 273, p1135 * 146, p1135 * 268, p1135 * 179, p1135 * 261);
    v1504.bezierCurveTo(p1135 * 190, p1135 * 258, p1135 * 187, p1135 * 266, p1135 * 178, p1135 * 272);
    v1504.bezierCurveTo(p1135 * 160, p1135 * 284, p1135 * 123, p1135 * 282, p1135 * 100, p1135 * 277);
    v1504.bezierCurveTo(p1135 * 73, p1135 * 260, p1135 * 79, p1135 * 257, p1135 * 84, p1135 * 257);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 125, p1135 * 65);
    v1504.bezierCurveTo(p1135 * 133, p1135 * 45, p1135 * 136, p1135 * 42, p1135 * 141, p1135 * 55);
    v1504.bezierCurveTo(p1135 * 151, p1135 * 96, p1135 * 164, p1135 * 117, p1135 * 175, p1135 * 134);
    v1504.bezierCurveTo(p1135 * 203, p1135 * 181, p1135 * 207, p1135 * 182, p1135 * 208, p1135 * 215);
    v1504.bezierCurveTo(p1135 * 206, p1135 * 240, p1135 * 205, p1135 * 246, p1135 * 184, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 267, p1135 * 131, p1135 * 272, p1135 * 86, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 67, p1135 * 252, p1135 * 68, p1135 * 239, p1135 * 64, p1135 * 216);
    v1504.bezierCurveTo(p1135 * 62, p1135 * 194, p1135 * 72, p1135 * 169, p1135 * 92, p1135 * 142);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 121, p1135 * 114, p1135 * 101, p1135 * 125, p1135 * 65);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 115, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 116, p1135 * 28, p1135 * 119, p1135 * 27, p1135 * 126, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 134, p1135 * 48, p1135 * 134, p1135 * 49, p1135 * 132, p1135 * 59);
    v1504.bezierCurveTo(p1135 * 131, p1135 * 67, p1135 * 127, p1135 * 65, p1135 * 120, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 49, p1135 * 113, p1135 * 43, p1135 * 115, p1135 * 38);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 146, p1135 * 34);
    v1504.bezierCurveTo(p1135 * 152, p1135 * 28, p1135 * 155, p1135 * 27, p1135 * 157, p1135 * 39);
    v1504.bezierCurveTo(p1135 * 157, p1135 * 45, p1135 * 157, p1135 * 49, p1135 * 150, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 66, p1135 * 138, p1135 * 66, p1135 * 138, p1135 * 57);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 50, p1135 * 137, p1135 * 47, p1135 * 141, p1135 * 42);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 143, p1135 * 69);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 56, p1135 * 156, p1135 * 50, p1135 * 158, p1135 * 58);
    v1504.bezierCurveTo(p1135 * 159, p1135 * 64, p1135 * 160, p1135 * 67, p1135 * 153, p1135 * 77);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 83, p1135 * 145, p1135 * 84, p1135 * 143, p1135 * 77);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 149, p1135 * 92);
    v1504.bezierCurveTo(p1135 * 149, p1135 * 89, p1135 * 151, p1135 * 84, p1135 * 156, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 73, p1135 * 163, p1135 * 78, p1135 * 162, p1135 * 86);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 91, p1135 * 155, p1135 * 99, p1135 * 152, p1135 * 98);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 111, p1135 * 61);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 51, p1135 * 117, p1135 * 51, p1135 * 124, p1135 * 64);
    v1504.bezierCurveTo(p1135 * 128, p1135 * 68, p1135 * 128, p1135 * 76, p1135 * 126, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 123, p1135 * 84, p1135 * 122, p1135 * 82, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 112, p1135 * 67, p1135 * 115, p1135 * 74, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 68, p1135 * 111, p1135 * 66, p1135 * 111, p1135 * 62);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 107, p1135 * 81);
    v1504.bezierCurveTo(p1135 * 108, p1135 * 74, p1135 * 112, p1135 * 73, p1135 * 118, p1135 * 84);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 88, p1135 * 122, p1135 * 93, p1135 * 121, p1135 * 98);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 98, p1135 * 113, p1135 * 98, p1135 * 109, p1135 * 90);
    v1504.bezierCurveTo(p1135 * 107, p1135 * 87, p1135 * 106, p1135 * 85, p1135 * 107, p1135 * 82);
    v1504.closePath();
    f89(v1504, p1136[0]);
    v1504.globalAlpha = 1;
    v1504.translate(0, p1135 * -10);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 99);
    v1504.bezierCurveTo(p1135 * 186, p1135 * 123, p1135 * 199, p1135 * 152, p1135 * 209, p1135 * 169);
    v1504.bezierCurveTo(p1135 * 228, p1135 * 205, p1135 * 224, p1135 * 245, p1135 * 190, p1135 * 276);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 296, p1135 * 99, p1135 * 292, p1135 * 79, p1135 * 274);
    v1504.bezierCurveTo(p1135 * 49, p1135 * 253, p1135 * 47, p1135 * 214, p1135 * 50, p1135 * 197);
    v1504.bezierCurveTo(p1135 * 61, p1135 * 143, p1135 * 102, p1135 * 113, p1135 * 131, p1135 * 99);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 73, p1135 * 270);
    v1504.bezierCurveTo(p1135 * 79, p1135 * 280, p1135 * 77, p1135 * 280, p1135 * 78, p1135 * 287);
    v1504.bezierCurveTo(p1135 * 78, p1135 * 290, p1135 * 83, p1135 * 291, p1135 * 82, p1135 * 299);
    v1504.bezierCurveTo(p1135 * 81, p1135 * 301, p1135 * 87, p1135 * 301, p1135 * 92, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 94, p1135 * 319, p1135 * 100, p1135 * 321, p1135 * 107, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 323, p1135 * 114, p1135 * 324, p1135 * 119, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 321, p1135 * 146, p1135 * 323, p1135 * 139, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 324, p1135 * 150, p1135 * 324, p1135 * 153, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 168, p1135 * 319, p1135 * 171, p1135 * 316, p1135 * 173, p1135 * 307);
    v1504.bezierCurveTo(p1135 * 180, p1135 * 305, p1135 * 180, p1135 * 301, p1135 * 178, p1135 * 296);
    v1504.bezierCurveTo(p1135 * 183, p1135 * 296, p1135 * 185, p1135 * 289, p1135 * 188, p1135 * 279);
    v1504.bezierCurveTo(p1135 * 171, p1135 * 286, p1135 * 149, p1135 * 290, p1135 * 132, p1135 * 289);
    v1504.bezierCurveTo(p1135 * 101, p1135 * 290, p1135 * 86, p1135 * 280, p1135 * 74, p1135 * 271);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 76, p1135 * 252);
    v1504.bezierCurveTo(p1135 * 85, p1135 * 294, p1135 * 96, p1135 * 314, p1135 * 103, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 316, p1135 * 151, p1135 * 314, p1135 * 156, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 169, p1135 * 317, p1135 * 182, p1135 * 285, p1135 * 191, p1135 * 256);
    v1504.bezierCurveTo(p1135 * 134.5, p1135 * 254, p1135 * 134.5, p1135 * 254, p1135 * 78, p1135 * 252);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 84, p1135 * 257);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 273, p1135 * 146, p1135 * 268, p1135 * 179, p1135 * 261);
    v1504.bezierCurveTo(p1135 * 190, p1135 * 258, p1135 * 187, p1135 * 266, p1135 * 178, p1135 * 272);
    v1504.bezierCurveTo(p1135 * 160, p1135 * 284, p1135 * 123, p1135 * 282, p1135 * 100, p1135 * 277);
    v1504.bezierCurveTo(p1135 * 73, p1135 * 260, p1135 * 79, p1135 * 257, p1135 * 84, p1135 * 257);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 125, p1135 * 65);
    v1504.bezierCurveTo(p1135 * 133, p1135 * 45, p1135 * 136, p1135 * 42, p1135 * 141, p1135 * 55);
    v1504.bezierCurveTo(p1135 * 151, p1135 * 96, p1135 * 164, p1135 * 117, p1135 * 175, p1135 * 134);
    v1504.bezierCurveTo(p1135 * 203, p1135 * 181, p1135 * 207, p1135 * 182, p1135 * 208, p1135 * 215);
    v1504.bezierCurveTo(p1135 * 206, p1135 * 240, p1135 * 205, p1135 * 246, p1135 * 184, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 267, p1135 * 131, p1135 * 272, p1135 * 86, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 67, p1135 * 252, p1135 * 68, p1135 * 239, p1135 * 64, p1135 * 216);
    v1504.bezierCurveTo(p1135 * 62, p1135 * 194, p1135 * 72, p1135 * 169, p1135 * 92, p1135 * 142);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 121, p1135 * 114, p1135 * 101, p1135 * 125, p1135 * 65);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 115, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 116, p1135 * 28, p1135 * 119, p1135 * 27, p1135 * 126, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 134, p1135 * 48, p1135 * 134, p1135 * 49, p1135 * 132, p1135 * 59);
    v1504.bezierCurveTo(p1135 * 131, p1135 * 67, p1135 * 127, p1135 * 65, p1135 * 120, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 49, p1135 * 113, p1135 * 43, p1135 * 115, p1135 * 38);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 146, p1135 * 34);
    v1504.bezierCurveTo(p1135 * 152, p1135 * 28, p1135 * 155, p1135 * 27, p1135 * 157, p1135 * 39);
    v1504.bezierCurveTo(p1135 * 157, p1135 * 45, p1135 * 157, p1135 * 49, p1135 * 150, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 66, p1135 * 138, p1135 * 66, p1135 * 138, p1135 * 57);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 50, p1135 * 137, p1135 * 47, p1135 * 141, p1135 * 42);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 143, p1135 * 69);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 56, p1135 * 156, p1135 * 50, p1135 * 158, p1135 * 58);
    v1504.bezierCurveTo(p1135 * 159, p1135 * 64, p1135 * 160, p1135 * 67, p1135 * 153, p1135 * 77);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 83, p1135 * 145, p1135 * 84, p1135 * 143, p1135 * 77);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 149, p1135 * 92);
    v1504.bezierCurveTo(p1135 * 149, p1135 * 89, p1135 * 151, p1135 * 84, p1135 * 156, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 73, p1135 * 163, p1135 * 78, p1135 * 162, p1135 * 86);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 91, p1135 * 155, p1135 * 99, p1135 * 152, p1135 * 98);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 111, p1135 * 61);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 51, p1135 * 117, p1135 * 51, p1135 * 124, p1135 * 64);
    v1504.bezierCurveTo(p1135 * 128, p1135 * 68, p1135 * 128, p1135 * 76, p1135 * 126, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 123, p1135 * 84, p1135 * 122, p1135 * 82, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 112, p1135 * 67, p1135 * 115, p1135 * 74, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 68, p1135 * 111, p1135 * 66, p1135 * 111, p1135 * 62);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 107, p1135 * 81);
    v1504.bezierCurveTo(p1135 * 108, p1135 * 74, p1135 * 112, p1135 * 73, p1135 * 118, p1135 * 84);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 88, p1135 * 122, p1135 * 93, p1135 * 121, p1135 * 98);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 98, p1135 * 113, p1135 * 98, p1135 * 109, p1135 * 90);
    v1504.bezierCurveTo(p1135 * 107, p1135 * 87, p1135 * 106, p1135 * 85, p1135 * 107, p1135 * 82);
    v1504.closePath();
    f89(v1504, p1136[3], p1136[3], p1135 * 8);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 99);
    v1504.bezierCurveTo(p1135 * 186, p1135 * 123, p1135 * 199, p1135 * 152, p1135 * 209, p1135 * 169);
    v1504.bezierCurveTo(p1135 * 228, p1135 * 205, p1135 * 224, p1135 * 245, p1135 * 190, p1135 * 276);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 296, p1135 * 99, p1135 * 292, p1135 * 79, p1135 * 274);
    v1504.bezierCurveTo(p1135 * 49, p1135 * 253, p1135 * 47, p1135 * 214, p1135 * 50, p1135 * 197);
    v1504.bezierCurveTo(p1135 * 61, p1135 * 143, p1135 * 102, p1135 * 113, p1135 * 131, p1135 * 99);
    v1504.closePath();
    f89(v1504, p1136[1]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 73, p1135 * 270);
    v1504.bezierCurveTo(p1135 * 79, p1135 * 280, p1135 * 77, p1135 * 280, p1135 * 78, p1135 * 287);
    v1504.bezierCurveTo(p1135 * 78, p1135 * 290, p1135 * 83, p1135 * 291, p1135 * 82, p1135 * 299);
    v1504.bezierCurveTo(p1135 * 81, p1135 * 301, p1135 * 87, p1135 * 301, p1135 * 92, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 94, p1135 * 319, p1135 * 100, p1135 * 321, p1135 * 107, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 323, p1135 * 114, p1135 * 324, p1135 * 119, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 321, p1135 * 146, p1135 * 323, p1135 * 139, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 324, p1135 * 150, p1135 * 324, p1135 * 153, p1135 * 320);
    v1504.bezierCurveTo(p1135 * 168, p1135 * 319, p1135 * 171, p1135 * 316, p1135 * 173, p1135 * 307);
    v1504.bezierCurveTo(p1135 * 180, p1135 * 305, p1135 * 180, p1135 * 301, p1135 * 178, p1135 * 296);
    v1504.bezierCurveTo(p1135 * 183, p1135 * 296, p1135 * 185, p1135 * 289, p1135 * 188, p1135 * 279);
    v1504.bezierCurveTo(p1135 * 171, p1135 * 286, p1135 * 149, p1135 * 290, p1135 * 132, p1135 * 289);
    v1504.bezierCurveTo(p1135 * 101, p1135 * 290, p1135 * 86, p1135 * 280, p1135 * 74, p1135 * 271);
    v1504.closePath();
    f89(v1504, p1136[5]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 76, p1135 * 252);
    v1504.bezierCurveTo(p1135 * 85, p1135 * 294, p1135 * 96, p1135 * 314, p1135 * 103, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 316, p1135 * 151, p1135 * 314, p1135 * 156, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 169, p1135 * 317, p1135 * 182, p1135 * 285, p1135 * 191, p1135 * 256);
    v1504.bezierCurveTo(p1135 * 134.5, p1135 * 254, p1135 * 134.5, p1135 * 254, p1135 * 78, p1135 * 252);
    v1504.closePath();
    f89(v1504, p1136[2]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 84, p1135 * 257);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 273, p1135 * 146, p1135 * 268, p1135 * 179, p1135 * 261);
    v1504.bezierCurveTo(p1135 * 190, p1135 * 258, p1135 * 187, p1135 * 266, p1135 * 178, p1135 * 272);
    v1504.bezierCurveTo(p1135 * 160, p1135 * 284, p1135 * 123, p1135 * 282, p1135 * 100, p1135 * 277);
    v1504.bezierCurveTo(p1135 * 73, p1135 * 260, p1135 * 79, p1135 * 257, p1135 * 84, p1135 * 257);
    v1504.closePath();
    f89(v1504, p1136[1]);
    f94(v1504, p1135 * 102, p1135 * 269, p1135 * 11);
    f89(v1504, p1136[3]);
    f94(v1504, p1135 * 98, p1135 * 266, p1135 * 5);
    f89(v1504, p1136[6]);
    f94(v1504, p1135 * 168, p1135 * 269, p1135 * 11);
    f89(v1504, p1136[3]);
    f94(v1504, p1135 * 164, p1135 * 266, p1135 * 5);
    f89(v1504, p1136[6]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 125, p1135 * 65);
    v1504.bezierCurveTo(p1135 * 133, p1135 * 45, p1135 * 136, p1135 * 42, p1135 * 141, p1135 * 55);
    v1504.bezierCurveTo(p1135 * 151, p1135 * 96, p1135 * 164, p1135 * 117, p1135 * 175, p1135 * 134);
    v1504.bezierCurveTo(p1135 * 203, p1135 * 181, p1135 * 207, p1135 * 182, p1135 * 208, p1135 * 215);
    v1504.bezierCurveTo(p1135 * 206, p1135 * 240, p1135 * 205, p1135 * 246, p1135 * 184, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 267, p1135 * 131, p1135 * 272, p1135 * 86, p1135 * 258);
    v1504.bezierCurveTo(p1135 * 67, p1135 * 252, p1135 * 68, p1135 * 239, p1135 * 64, p1135 * 216);
    v1504.bezierCurveTo(p1135 * 62, p1135 * 194, p1135 * 72, p1135 * 169, p1135 * 92, p1135 * 142);
    v1504.bezierCurveTo(p1135 * 106, p1135 * 121, p1135 * 114, p1135 * 101, p1135 * 125, p1135 * 65);
    v1504.closePath();
    f89(v1504, p1136[2]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 115, p1135 * 235);
    v1504.bezierCurveTo(p1135 * 118, p1135 * 258, p1135 * 137, p1135 * 268, p1135 * 148, p1135 * 246);
    v1504.bezierCurveTo(p1135 * 156, p1135 * 228, p1135 * 152, p1135 * 169, p1135 * 150, p1135 * 140);
    v1504.bezierCurveTo(p1135 * 147, p1135 * 87, p1135 * 143, p1135 * 69, p1135 * 142, p1135 * 60);
    v1504.bezierCurveTo(p1135 * 136, p1135 * 44, p1135 * 132, p1135 * 43, p1135 * 127, p1135 * 62);
    v1504.bezierCurveTo(p1135 * 119, p1135 * 116, p1135 * 119, p1135 * 140, p1135 * 116, p1135 * 166);
    v1504.bezierCurveTo(p1135 * 113, p1135 * 202, p1135 * 113, p1135 * 223, p1135 * 115, p1135 * 233);
    v1504.closePath();
    f89(v1504, p1136[4]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 132, p1135 * 219);
    v1504.bezierCurveTo(p1135 * 140, p1135 * 229, p1135 * 142, p1135 * 231, p1135 * 145, p1135 * 237);
    v1504.bezierCurveTo(p1135 * 145, p1135 * 245, p1135 * 139, p1135 * 249, p1135 * 133, p1135 * 249);
    v1504.bezierCurveTo(p1135 * 123, p1135 * 248, p1135 * 123, p1135 * 243, p1135 * 121, p1135 * 239);
    v1504.bezierCurveTo(p1135 * 126, p1135 * 227, p1135 * 129, p1135 * 223, p1135 * 132, p1135 * 219);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 179);
    v1504.bezierCurveTo(p1135 * 140, p1135 * 188.5, p1135 * 140, p1135 * 188.5, p1135 * 147, p1135 * 198);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 209, p1135 * 142, p1135 * 214, p1135 * 133, p1135 * 214);
    v1504.bezierCurveTo(p1135 * 121, p1135 * 211, p1135 * 121, p1135 * 207, p1135 * 120, p1135 * 200);
    v1504.bezierCurveTo(p1135 * 126.5, p1135 * 189.5, p1135 * 126.5, p1135 * 189.5, p1135 * 133, p1135 * 179);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 143);
    v1504.bezierCurveTo(p1135 * 139, p1135 * 151.5, p1135 * 139, p1135 * 151.5, p1135 * 145, p1135 * 160);
    v1504.bezierCurveTo(p1135 * 143, p1135 * 167, p1135 * 140, p1135 * 170, p1135 * 134, p1135 * 170);
    v1504.bezierCurveTo(p1135 * 128, p1135 * 169, p1135 * 124, p1135 * 167, p1135 * 123, p1135 * 161);
    v1504.bezierCurveTo(p1135 * 128, p1135 * 152, p1135 * 128, p1135 * 152, p1135 * 133, p1135 * 143);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 115);
    v1504.bezierCurveTo(p1135 * 137.5, p1135 * 121.5, p1135 * 137.5, p1135 * 121.5, p1135 * 142, p1135 * 128);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 133, p1135 * 138, p1135 * 135, p1135 * 133, p1135 * 135);
    v1504.bezierCurveTo(p1135 * 129, p1135 * 135, p1135 * 125, p1135 * 132, p1135 * 125, p1135 * 129);
    v1504.bezierCurveTo(p1135 * 129, p1135 * 122, p1135 * 129, p1135 * 122, p1135 * 133, p1135 * 115);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 133, p1135 * 94);
    v1504.bezierCurveTo(p1135 * 136.5, p1135 * 98.5, p1135 * 136.5, p1135 * 98.5, p1135 * 140, p1135 * 103);
    v1504.bezierCurveTo(p1135 * 139, p1135 * 109, p1135 * 137, p1135 * 109, p1135 * 133, p1135 * 110);
    v1504.bezierCurveTo(p1135 * 127, p1135 * 108, p1135 * 129, p1135 * 107, p1135 * 127, p1135 * 105);
    v1504.bezierCurveTo(p1135 * 130, p1135 * 99.5, p1135 * 130, p1135 * 99.5, p1135 * 133, p1135 * 94);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 130, p1135 * 279);
    v1504.bezierCurveTo(p1135 * 136.5, p1135 * 287.5, p1135 * 136.5, p1135 * 287.5, p1135 * 143, p1135 * 296);
    v1504.bezierCurveTo(p1135 * 143, p1135 * 302, p1135 * 139, p1135 * 309, p1135 * 131, p1135 * 308);
    v1504.bezierCurveTo(p1135 * 123, p1135 * 306, p1135 * 121, p1135 * 303, p1135 * 120, p1135 * 297);
    v1504.bezierCurveTo(p1135 * 125.5, p1135 * 288.5, p1135 * 125.5, p1135 * 288.5, p1135 * 131, p1135 * 280);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 147, p1135 * 303);
    v1504.bezierCurveTo(p1135 * 151, p1135 * 311, p1135 * 151, p1135 * 319, p1135 * 147, p1135 * 321);
    v1504.bezierCurveTo(p1135 * 138, p1135 * 320, p1135 * 145, p1135 * 308, p1135 * 147, p1135 * 303);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 115, p1135 * 303);
    v1504.bezierCurveTo(p1135 * 115, p1135 * 312, p1135 * 118, p1135 * 319, p1135 * 115, p1135 * 319);
    v1504.bezierCurveTo(p1135 * 112, p1135 * 324, p1135 * 109, p1135 * 318, p1135 * 109, p1135 * 314);
    v1504.bezierCurveTo(p1135 * 109, p1135 * 308, p1135 * 112, p1135 * 303, p1135 * 115, p1135 * 303);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 89, p1135 * 280);
    v1504.bezierCurveTo(p1135 * 83, p1135 * 279, p1135 * 80, p1135 * 281, p1135 * 81, p1135 * 286);
    v1504.bezierCurveTo(p1135 * 83, p1135 * 290, p1135 * 84, p1135 * 290, p1135 * 87, p1135 * 286);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 94, p1135 * 290);
    v1504.bezierCurveTo(p1135 * 93, p1135 * 294, p1135 * 90, p1135 * 303, p1135 * 86, p1135 * 298);
    v1504.bezierCurveTo(p1135 * 84, p1135 * 295, p1135 * 84, p1135 * 291, p1135 * 89, p1135 * 291);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 163, p1135 * 295);
    v1504.bezierCurveTo(p1135 * 175, p1135 * 294, p1135 * 176, p1135 * 296, p1135 * 175, p1135 * 301);
    v1504.bezierCurveTo(p1135 * 174, p1135 * 305, p1135 * 171, p1135 * 305, p1135 * 166, p1135 * 300);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 172, p1135 * 286);
    v1504.bezierCurveTo(p1135 * 180, p1135 * 285, p1135 * 181, p1135 * 285, p1135 * 180, p1135 * 291);
    v1504.bezierCurveTo(p1135 * 176, p1135 * 295, p1135 * 174, p1135 * 294, p1135 * 172, p1135 * 286);
    v1504.closePath();
    f89(v1504, p1136[8]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 115, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 116, p1135 * 28, p1135 * 119, p1135 * 27, p1135 * 126, p1135 * 37);
    v1504.bezierCurveTo(p1135 * 134, p1135 * 48, p1135 * 134, p1135 * 49, p1135 * 132, p1135 * 59);
    v1504.bezierCurveTo(p1135 * 131, p1135 * 67, p1135 * 127, p1135 * 65, p1135 * 120, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 49, p1135 * 113, p1135 * 43, p1135 * 115, p1135 * 38);
    v1504.closePath();
    f89(v1504, p1136[7]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 146, p1135 * 34);
    v1504.bezierCurveTo(p1135 * 152, p1135 * 28, p1135 * 155, p1135 * 27, p1135 * 157, p1135 * 39);
    v1504.bezierCurveTo(p1135 * 157, p1135 * 45, p1135 * 157, p1135 * 49, p1135 * 150, p1135 * 56);
    v1504.bezierCurveTo(p1135 * 141, p1135 * 66, p1135 * 138, p1135 * 66, p1135 * 138, p1135 * 57);
    v1504.bezierCurveTo(p1135 * 137, p1135 * 50, p1135 * 137, p1135 * 47, p1135 * 141, p1135 * 42);
    v1504.closePath();
    f89(v1504, p1136[7]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 143, p1135 * 69);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 56, p1135 * 156, p1135 * 50, p1135 * 158, p1135 * 58);
    v1504.bezierCurveTo(p1135 * 159, p1135 * 64, p1135 * 160, p1135 * 67, p1135 * 153, p1135 * 77);
    v1504.bezierCurveTo(p1135 * 148, p1135 * 83, p1135 * 145, p1135 * 84, p1135 * 143, p1135 * 77);
    v1504.closePath();
    f89(v1504, p1136[7]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 149, p1135 * 92);
    v1504.bezierCurveTo(p1135 * 149, p1135 * 89, p1135 * 151, p1135 * 84, p1135 * 156, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 73, p1135 * 163, p1135 * 78, p1135 * 162, p1135 * 86);
    v1504.bezierCurveTo(p1135 * 161, p1135 * 91, p1135 * 155, p1135 * 99, p1135 * 152, p1135 * 98);
    v1504.closePath();
    f89(v1504, p1136[7]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 111, p1135 * 61);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 51, p1135 * 117, p1135 * 51, p1135 * 124, p1135 * 64);
    v1504.bezierCurveTo(p1135 * 128, p1135 * 68, p1135 * 128, p1135 * 76, p1135 * 126, p1135 * 79);
    v1504.bezierCurveTo(p1135 * 123, p1135 * 84, p1135 * 122, p1135 * 82, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 112, p1135 * 67, p1135 * 115, p1135 * 74, p1135 * 115, p1135 * 74);
    v1504.bezierCurveTo(p1135 * 111, p1135 * 68, p1135 * 111, p1135 * 66, p1135 * 111, p1135 * 62);
    v1504.closePath();
    f89(v1504, p1136[7]);
    v1504.beginPath();
    v1504.lineCap = "round";
    v1504.lineJoin = "round";
    v1504.moveTo(p1135 * 107, p1135 * 81);
    v1504.bezierCurveTo(p1135 * 108, p1135 * 74, p1135 * 112, p1135 * 73, p1135 * 118, p1135 * 84);
    v1504.bezierCurveTo(p1135 * 122, p1135 * 88, p1135 * 122, p1135 * 93, p1135 * 121, p1135 * 98);
    v1504.bezierCurveTo(p1135 * 114, p1135 * 98, p1135 * 113, p1135 * 98, p1135 * 109, p1135 * 90);
    v1504.bezierCurveTo(p1135 * 107, p1135 * 87, p1135 * 106, p1135 * 85, p1135 * 107, p1135 * 82);
    v1504.closePath();
    f89(v1504, p1136[7]);
    return v1503;
  }
  function f280(p1137, p1138, p1139) {
    var v1505 = document.createElement("canvas");
    var v1506 = v1505.getContext("2d");
    v1505.width = p1137 * 400;
    v1505.height = p1137 * 170;
    v1506.translate(0, p1137 * -170);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 159.5, p1137 * 322.0625);
    v1506.bezierCurveTo(p1137 * 240.5, p1137 * 293.0625, p1137 * 240.5, p1137 * 293.0625, p1137 * 321.5, p1137 * 264.0625);
    v1506.bezierCurveTo(p1137 * 276.5, p1137 * 230.0625, p1137 * 276.5, p1137 * 230.0625, p1137 * 231.5, p1137 * 196.0625);
    v1506.bezierCurveTo(p1137 * 158.5, p1137 * 221.5625, p1137 * 158.5, p1137 * 221.5625, p1137 * 85.5, p1137 * 247.0625);
    v1506.closePath();
    f89(v1506, p1139[0], p1139[1], p1137 * 12);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 212.5, p1137 * 270.0625);
    v1506.bezierCurveTo(p1137 * 235, p1137 * 261.5625, p1137 * 235, p1137 * 261.5625, p1137 * 257.5, p1137 * 253.0625);
    v1506.closePath();
    f89(v1506, undefined, p1139[0], p1137 * 12);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 193.5, p1137 * 226.0625);
    v1506.bezierCurveTo(p1137 * 204.5, p1137 * 242.0625, p1137 * 242.5, p1137 * 237.0625, p1137 * 251.5, p1137 * 225.0625);
    v1506.bezierCurveTo(p1137 * 246.5, p1137 * 195.0625, p1137 * 205.5, p1137 * 190.0625, p1137 * 193.5, p1137 * 227.0625);
    v1506.closePath();
    f89(v1506, p1139[2], p1139[3], p1137 * 12);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 164.5, p1137 * 245.0625);
    v1506.bezierCurveTo(p1137 * 182.5, p1137 * 264.0625, p1137 * 252.5, p1137 * 258.0625, p1137 * 276.5, p1137 * 244.0625);
    v1506.bezierCurveTo(p1137 * 265.5, p1137 * 226.0625, p1137 * 244.5, p1137 * 231.0625, p1137 * 229.5, p1137 * 230.0625);
    v1506.bezierCurveTo(p1137 * 205.5, p1137 * 227.0625, p1137 * 175.5, p1137 * 202.0625, p1137 * 162.5, p1137 * 244.0625);
    v1506.closePath();
    f89(v1506, p1139[2], p1139[3], p1137 * 12);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 115.5, p1137 * 260.0625);
    v1506.bezierCurveTo(p1137 * 134.5, p1137 * 279.0625, p1137 * 170.5, p1137 * 275.0625, p1137 * 191.5, p1137 * 257.0625);
    v1506.bezierCurveTo(p1137 * 174.5, p1137 * 208.0625, p1137 * 142.5, p1137 * 197.0625, p1137 * 116.5, p1137 * 259.0625);
    v1506.closePath();
    f89(v1506, p1139[2], p1139[3], p1137 * 12);
    v1506.beginPath();
    v1506.lineCap = "round";
    v1506.lineJoin = "round";
    v1506.moveTo(p1137 * 152.5, p1137 * 278.0625);
    v1506.bezierCurveTo(p1137 * 165.5, p1137 * 294.0625, p1137 * 200.5, p1137 * 287.0625, p1137 * 216.5, p1137 * 278.0625);
    v1506.bezierCurveTo(p1137 * 206.5, p1137 * 247.0625, p1137 * 173.5, p1137 * 233.0625, p1137 * 153.5, p1137 * 276.0625);
    v1506.closePath();
    f89(v1506, p1139[2], p1139[3], p1137 * 12);
    return v1505;
  }
  const v1507 = 6616588;
  const v1508 = 6616588 .ⵠⵠᐃᐃⲆⵠⵠ;
  const v1509 = `const ⲆᐃΔᐃⵠΔⲆ = (typeof ⲆⲆΔⲆΔⵠᐃ === "${v1508}") ? 1 : 0; return ⲆᐃΔᐃⵠΔⲆ;`;
  function f281(p1140, p1141, p1142, p1143) {
    var v1510 = document.createElement("canvas");
    var v1511 = v1510.getContext("2d");
    v1510.width = p1140 * 198;
    v1510.height = p1140 * 147;
    v1511.globalAlpha = p1141 ? 0.5 : 1;
    v1511.translate(0, p1140 * 6);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 44, p1140 * 76);
    v1511.bezierCurveTo(p1140 * 50, p1140 * 82, p1140 * 50, p1140 * 82, p1140 * 56, p1140 * 88);
    v1511.bezierCurveTo(p1140 * 59, p1140 * 82, p1140 * 59, p1140 * 82, p1140 * 62, p1140 * 76);
    v1511.bezierCurveTo(p1140 * 59, p1140 * 71, p1140 * 59, p1140 * 71, p1140 * 56, p1140 * 66);
    v1511.bezierCurveTo(p1140 * 59, p1140 * 69, p1140 * 59, p1140 * 69, p1140 * 62, p1140 * 72);
    v1511.bezierCurveTo(p1140 * 80, p1140 * 48, p1140 * 102, p1140 * 50, p1140 * 120, p1140 * 62);
    v1511.bezierCurveTo(p1140 * 127, p1140 * 58, p1140 * 127, p1140 * 58, p1140 * 134, p1140 * 54);
    v1511.bezierCurveTo(p1140 * 129, p1140 * 60, p1140 * 129, p1140 * 60, p1140 * 124, p1140 * 66);
    v1511.bezierCurveTo(p1140 * 129, p1140 * 73, p1140 * 129, p1140 * 73, p1140 * 134, p1140 * 80);
    v1511.bezierCurveTo(p1140 * 140, p1140 * 74, p1140 * 140, p1140 * 74, p1140 * 146, p1140 * 68);
    v1511.bezierCurveTo(p1140 * 142, p1140 * 76, p1140 * 142, p1140 * 76, p1140 * 138, p1140 * 84);
    v1511.bezierCurveTo(p1140 * 144, p1140 * 90, p1140 * 142, p1140 * 90, p1140 * 144, p1140 * 90);
    v1511.bezierCurveTo(p1140 * 136, p1140 * 97, p1140 * 136, p1140 * 97, p1140 * 128, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 154, p1140 * 110, p1140 * 164, p1140 * 90, p1140 * 160, p1140 * 80);
    v1511.bezierCurveTo(p1140 * 138, p1140 * 22, p1140 * 148, p1140 * 51, p1140 * 136, p1140 * 22);
    v1511.bezierCurveTo(p1140 * 97, p1140 * 24, p1140 * 97, p1140 * 24, p1140 * 58, p1140 * 26);
    v1511.bezierCurveTo(p1140 * 47, p1140 * 54, p1140 * 36, p1140 * 80, p1140 * 36, p1140 * 82);
    v1511.bezierCurveTo(p1140 * 40, p1140 * 108, p1140 * 54, p1140 * 104, p1140 * 62, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 46, p1140 * 92, p1140 * 54, p1140 * 97, p1140 * 46, p1140 * 90);
    v1511.closePath();
    f89(v1511, p1142[0]);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 36, p1140 * 80);
    v1511.bezierCurveTo(p1140 * 30, p1140 * 84, p1140 * 28, p1140 * 92, p1140 * 34, p1140 * 100);
    v1511.bezierCurveTo(p1140 * 41.5, p1140 * 102, p1140 * 41.5, p1140 * 102, p1140 * 49, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 43, p1140 * 105.5, p1140 * 43, p1140 * 105.5, p1140 * 37, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 46, p1140 * 111, p1140 * 60, p1140 * 114, p1140 * 76, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 78, p1140 * 110.5, p1140 * 78, p1140 * 110.5, p1140 * 80, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 81, p1140 * 110.5, p1140 * 81, p1140 * 110.5, p1140 * 82, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 94.5, p1140 * 113.5, p1140 * 94.5, p1140 * 113.5, p1140 * 107, p1140 * 113);
    v1511.bezierCurveTo(p1140 * 108.5, p1140 * 110, p1140 * 108.5, p1140 * 110, p1140 * 110, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 111.5, p1140 * 110.5, p1140 * 111.5, p1140 * 110.5, p1140 * 113, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 131, p1140 * 112.5, p1140 * 131, p1140 * 112.5, p1140 * 149, p1140 * 111);
    v1511.bezierCurveTo(p1140 * 148.5, p1140 * 107.5, p1140 * 148.5, p1140 * 107.5, p1140 * 148, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 150.5, p1140 * 107, p1140 * 150.5, p1140 * 107, p1140 * 153, p1140 * 110);
    v1511.bezierCurveTo(p1140 * 155.5, p1140 * 108.5, p1140 * 155.5, p1140 * 108.5, p1140 * 158, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 156.5, p1140 * 104, p1140 * 156.5, p1140 * 104, p1140 * 155, p1140 * 101);
    v1511.bezierCurveTo(p1140 * 158.5, p1140 * 102.5, p1140 * 158.5, p1140 * 102.5, p1140 * 162, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 168, p1140 * 100, p1140 * 170, p1140 * 92, p1140 * 169, p1140 * 85);
    v1511.bezierCurveTo(p1140 * 166, p1140 * 86, p1140 * 166, p1140 * 86, p1140 * 163, p1140 * 87);
    v1511.bezierCurveTo(p1140 * 165.5, p1140 * 83, p1140 * 165.5, p1140 * 83, p1140 * 168, p1140 * 79);
    v1511.bezierCurveTo(p1140 * 165.5, p1140 * 76.5, p1140 * 165.5, p1140 * 76.5, p1140 * 163, p1140 * 74);
    v1511.bezierCurveTo(p1140 * 155, p1140 * 82.5, p1140 * 155, p1140 * 82.5, p1140 * 147, p1140 * 91);
    v1511.bezierCurveTo(p1140 * 139, p1140 * 95.5, p1140 * 139, p1140 * 95.5, p1140 * 131, p1140 * 100);
    v1511.bezierCurveTo(p1140 * 97.5, p1140 * 100.5, p1140 * 97.5, p1140 * 100.5, p1140 * 64, p1140 * 101);
    v1511.bezierCurveTo(p1140 * 49, p1140 * 102, p1140 * 43, p1140 * 90, p1140 * 36, p1140 * 80);
    v1511.closePath();
    f89(v1511, p1142[0]);
    v1511.globalAlpha = 1;
    v1511.translate(0, p1140 * -6);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 36, p1140 * 80);
    v1511.bezierCurveTo(p1140 * 30, p1140 * 84, p1140 * 28, p1140 * 92, p1140 * 34, p1140 * 100);
    v1511.bezierCurveTo(p1140 * 41.5, p1140 * 102, p1140 * 41.5, p1140 * 102, p1140 * 49, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 43, p1140 * 105.5, p1140 * 43, p1140 * 105.5, p1140 * 37, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 46, p1140 * 111, p1140 * 60, p1140 * 114, p1140 * 76, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 78, p1140 * 110.5, p1140 * 78, p1140 * 110.5, p1140 * 80, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 81, p1140 * 110.5, p1140 * 81, p1140 * 110.5, p1140 * 82, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 94.5, p1140 * 113.5, p1140 * 94.5, p1140 * 113.5, p1140 * 107, p1140 * 113);
    v1511.bezierCurveTo(p1140 * 108.5, p1140 * 110, p1140 * 108.5, p1140 * 110, p1140 * 110, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 111.5, p1140 * 110.5, p1140 * 111.5, p1140 * 110.5, p1140 * 113, p1140 * 114);
    v1511.bezierCurveTo(p1140 * 131, p1140 * 112.5, p1140 * 131, p1140 * 112.5, p1140 * 149, p1140 * 111);
    v1511.bezierCurveTo(p1140 * 148.5, p1140 * 107.5, p1140 * 148.5, p1140 * 107.5, p1140 * 148, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 150.5, p1140 * 107, p1140 * 150.5, p1140 * 107, p1140 * 153, p1140 * 110);
    v1511.bezierCurveTo(p1140 * 155.5, p1140 * 108.5, p1140 * 155.5, p1140 * 108.5, p1140 * 158, p1140 * 107);
    v1511.bezierCurveTo(p1140 * 156.5, p1140 * 104, p1140 * 156.5, p1140 * 104, p1140 * 155, p1140 * 101);
    v1511.bezierCurveTo(p1140 * 158.5, p1140 * 102.5, p1140 * 158.5, p1140 * 102.5, p1140 * 162, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 168, p1140 * 100, p1140 * 170, p1140 * 92, p1140 * 169, p1140 * 85);
    v1511.bezierCurveTo(p1140 * 166, p1140 * 86, p1140 * 166, p1140 * 86, p1140 * 163, p1140 * 87);
    v1511.bezierCurveTo(p1140 * 165.5, p1140 * 83, p1140 * 165.5, p1140 * 83, p1140 * 168, p1140 * 79);
    v1511.bezierCurveTo(p1140 * 165.5, p1140 * 76.5, p1140 * 165.5, p1140 * 76.5, p1140 * 163, p1140 * 74);
    v1511.bezierCurveTo(p1140 * 155, p1140 * 82.5, p1140 * 155, p1140 * 82.5, p1140 * 147, p1140 * 91);
    v1511.bezierCurveTo(p1140 * 139, p1140 * 95.5, p1140 * 139, p1140 * 95.5, p1140 * 131, p1140 * 100);
    v1511.bezierCurveTo(p1140 * 97.5, p1140 * 100.5, p1140 * 97.5, p1140 * 100.5, p1140 * 64, p1140 * 101);
    v1511.bezierCurveTo(p1140 * 49, p1140 * 102, p1140 * 43, p1140 * 90, p1140 * 36, p1140 * 80);
    v1511.closePath();
    f89(v1511, p1142[1], p1142[2], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 49, p1140 * 98);
    v1511.bezierCurveTo(p1140 * 96.5, p1140 * 98, p1140 * 96.5, p1140 * 98, p1140 * 144, p1140 * 98);
    v1511.bezierCurveTo(p1140 * 136.5, p1140 * 102, p1140 * 136.5, p1140 * 102, p1140 * 129, p1140 * 106);
    v1511.bezierCurveTo(p1140 * 103, p1140 * 105.5, p1140 * 103, p1140 * 105.5, p1140 * 77, p1140 * 105);
    v1511.bezierCurveTo(p1140 * 65, p1140 * 105, p1140 * 65, p1140 * 105, p1140 * 53, p1140 * 105);
    v1511.closePath();
    f89(v1511, p1142[1]);
    v1511.globalAlpha = 0.5;
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 54, p1140 * 98);
    v1511.bezierCurveTo(p1140 * 97, p1140 * 98, p1140 * 97, p1140 * 98, p1140 * 140, p1140 * 98);
    v1511.bezierCurveTo(p1140 * 134, p1140 * 101, p1140 * 134, p1140 * 101, p1140 * 128, p1140 * 104);
    v1511.bezierCurveTo(p1140 * 92, p1140 * 104, p1140 * 92, p1140 * 104, p1140 * 56, p1140 * 104);
    v1511.closePath();
    f89(v1511, p1142[0]);
    v1511.globalAlpha = 1;
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 118, p1140 * 47);
    v1511.bezierCurveTo(p1140 * 124.5, p1140 * 43.5, p1140 * 124.5, p1140 * 43.5, p1140 * 131, p1140 * 40);
    v1511.bezierCurveTo(p1140 * 128, p1140 * 46, p1140 * 128, p1140 * 46, p1140 * 125, p1140 * 52);
    v1511.bezierCurveTo(p1140 * 131, p1140 * 57, p1140 * 135, p1140 * 64, p1140 * 139, p1140 * 73);
    v1511.bezierCurveTo(p1140 * 142.5, p1140 * 69.5, p1140 * 142.5, p1140 * 69.5, p1140 * 146, p1140 * 66);
    v1511.bezierCurveTo(p1140 * 143.5, p1140 * 72.5, p1140 * 143.5, p1140 * 72.5, p1140 * 141, p1140 * 79);
    v1511.bezierCurveTo(p1140 * 142, p1140 * 91, p1140 * 141, p1140 * 94, p1140 * 132, p1140 * 98);
    v1511.bezierCurveTo(p1140 * 117, p1140 * 102, p1140 * 126, p1140 * 108, p1140 * 142, p1140 * 102);
    v1511.bezierCurveTo(p1140 * 159, p1140 * 98, p1140 * 164, p1140 * 80, p1140 * 162, p1140 * 47);
    v1511.bezierCurveTo(p1140 * 160, p1140 * 19, p1140 * 150, p1140 * 6, p1140 * 117, p1140 * 4);
    v1511.bezierCurveTo(p1140 * 44, p1140 * 0, p1140 * 35, p1140 * 20, p1140 * 33, p1140 * 37);
    v1511.bezierCurveTo(p1140 * 29, p1140 * 69, p1140 * 33, p1140 * 88, p1140 * 44, p1140 * 96);
    v1511.bezierCurveTo(p1140 * 64, p1140 * 107, p1140 * 70, p1140 * 102, p1140 * 54, p1140 * 93);
    v1511.bezierCurveTo(p1140 * 49, p1140 * 88, p1140 * 50, p1140 * 82, p1140 * 53, p1140 * 77);
    v1511.bezierCurveTo(p1140 * 51.5, p1140 * 71, p1140 * 51.5, p1140 * 71, p1140 * 50, p1140 * 65);
    v1511.bezierCurveTo(p1140 * 53, p1140 * 68.5, p1140 * 53, p1140 * 68.5, p1140 * 56, p1140 * 72);
    v1511.bezierCurveTo(p1140 * 59, p1140 * 67.5, p1140 * 59, p1140 * 67.5, p1140 * 62, p1140 * 63);
    v1511.bezierCurveTo(p1140 * 60.5, p1140 * 59.5, p1140 * 60.5, p1140 * 59.5, p1140 * 59, p1140 * 56);
    v1511.bezierCurveTo(p1140 * 62, p1140 * 57, p1140 * 62, p1140 * 57, p1140 * 65, p1140 * 58);
    v1511.bezierCurveTo(p1140 * 78, p1140 * 35, p1140 * 103, p1140 * 36, p1140 * 117, p1140 * 47);
    v1511.closePath();
    f89(v1511, p1142[1], p1142[2], p1140 * 6);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 62, p1140 * 21);
    v1511.bezierCurveTo(p1140 * 63, p1140 * 34, p1140 * 64, p1140 * 37, p1140 * 66, p1140 * 40);
    v1511.bezierCurveTo(p1140 * 54, p1140 * 49, p1140 * 53, p1140 * 51, p1140 * 48, p1140 * 58);
    v1511.bezierCurveTo(p1140 * 44, p1140 * 51, p1140 * 42, p1140 * 43, p1140 * 40, p1140 * 36);
    v1511.bezierCurveTo(p1140 * 47, p1140 * 28, p1140 * 52, p1140 * 25, p1140 * 61, p1140 * 21);
    v1511.closePath();
    f89(v1511, p1142[4]);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 60, p1140 * 29);
    v1511.bezierCurveTo(p1140 * 62, p1140 * 25, p1140 * 65, p1140 * 24, p1140 * 70, p1140 * 23);
    f89(v1511, vVVVUndefined173, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 61, p1140 * 37);
    v1511.bezierCurveTo(p1140 * 63, p1140 * 32, p1140 * 66, p1140 * 32, p1140 * 71, p1140 * 32);
    f89(v1511, vVVUndefined142, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 52, p1140 * 31);
    v1511.bezierCurveTo(p1140 * 50, p1140 * 26, p1140 * 50, p1140 * 25, p1140 * 51, p1140 * 23);
    f89(v1511, undefined, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 46, p1140 * 35);
    v1511.bezierCurveTo(p1140 * 44, p1140 * 31, p1140 * 43, p1140 * 29, p1140 * 45, p1140 * 26);
    f89(v1511, undefined, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 58, p1140 * 44);
    v1511.bezierCurveTo(p1140 * 57, p1140 * 48, p1140 * 57, p1140 * 50, p1140 * 60, p1140 * 52);
    f89(v1511, undefined, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 53, p1140 * 48);
    v1511.bezierCurveTo(p1140 * 52, p1140 * 52, p1140 * 52, p1140 * 54, p1140 * 55, p1140 * 57);
    f89(v1511, vVVVVUndefined172, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 46, p1140 * 41);
    v1511.bezierCurveTo(p1140 * 41, p1140 * 42, p1140 * 39, p1140 * 45, p1140 * 38, p1140 * 48);
    f89(v1511, vVVVVUndefined172, p1142[3], p1140 * 4);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1140 * 48, p1140 * 48);
    v1511.bezierCurveTo(p1140 * 42, p1140 * 51, p1140 * 42, p1140 * 53, p1140 * 40, p1140 * 55);
    f89(v1511, undefined, p1142[3], p1140 * 4);
    if (p1143 == 0) {
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1140 * 99, p1140 * 101);
      v1511.bezierCurveTo(p1140 * 118.6666259765625, p1140 * 104.33331298828125, p1140 * 124.6666259765625, p1140 * 116.33331298828125, p1140 * 112.6666259765625, p1140 * 114.33331298828125);
      v1511.bezierCurveTo(p1140 * 104.6666259765625, p1140 * 112.33331298828125, p1140 * 100.6666259765625, p1140 * 105.33331298828125, p1140 * 99.6666259765625, p1140 * 101.33331298828125);
      f89(v1511, vVVUndefined152, p1142[5], p1140 * 6);
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1140 * 97.6666259765625, p1140 * 101.33331298828125);
      v1511.bezierCurveTo(p1140 * 81.6666259765625, p1140 * 106.33331298828125, p1140 * 79.6666259765625, p1140 * 114.33331298828125, p1140 * 89.6666259765625, p1140 * 114.33331298828125);
      v1511.bezierCurveTo(p1140 * 95.6666259765625, p1140 * 111.33331298828125, p1140 * 95.6666259765625, p1140 * 109.33331298828125, p1140 * 98.6666259765625, p1140 * 102.33331298828125);
      f89(v1511, undefined, p1142[5], p1140 * 6);
    } else {
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1140 * 103, p1140 * 100.39999389648438);
      v1511.bezierCurveTo(p1140 * 120, p1140 * 106.39999389648438, p1140 * 118, p1140 * 107.39999389648438, p1140 * 120, p1140 * 111.39999389648438);
      f89(v1511, undefined, p1142[5], p1140 * 6);
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1140 * 103, p1140 * 100.39999389648438);
      v1511.bezierCurveTo(p1140 * 90, p1140 * 103.39999389648438, p1140 * 89, p1140 * 106.39999389648438, p1140 * 87, p1140 * 112.39999389648438);
      f89(v1511, undefined, p1142[5], p1140 * 6);
      f94(v1511, p1140 * 86, p1140 * 114.39999389648438, p1140 * 4.5);
      f89(v1511, p1142[1], p1142[5], p1140 * 6);
      f94(v1511, p1140 * 121, p1140 * 114.39999389648438, p1140 * 4.5);
      f89(v1511, p1142[1], p1142[5], p1140 * 6);
    }
    return v1510;
  }
  function f282(p1144, p1145) {
    var v1512 = document.createElement("canvas");
    var v1513 = v1512.getContext("2d");
    v1512.width = p1144 * 48;
    v1512.height = p1144 * 47;
    v1513.beginPath();
    v1513.lineCap = "round";
    v1513.lineJoin = "round";
    v1513.moveTo(p1144 * 7.1875, p1144 * 25.434661865234375);
    v1513.bezierCurveTo(p1144 * 11.1875, p1144 * 13.434661865234375, p1144 * 18.1875, p1144 * 8.434661865234375, p1144 * 32.1875, p1144 * 10.434661865234375);
    v1513.bezierCurveTo(p1144 * 45.1875, p1144 * 14.434661865234375, p1144 * 41.1875, p1144 * 24.434661865234375, p1144 * 36.1875, p1144 * 30.434661865234375);
    v1513.bezierCurveTo(p1144 * 22.1875, p1144 * 42.434661865234375, p1144 * 2.1875, p1144 * 41.434661865234375, p1144 * 7.1875, p1144 * 25.434661865234375);
    v1513.closePath();
    f89(v1513, p1145[0]);
    return v1512;
  }
  function f283(p1146, p1147) {
    var v1514 = document.createElement("canvas");
    var v1515 = v1514.getContext("2d");
    v1514.width = p1146 * 20;
    v1514.height = p1146 * 35;
    f90(v1515, 0, 0, 20, 35, 7);
    f89(v1515, p1147[0]);
    return v1514;
  }
  function f284(p1148, p1149, p1150) {
    var v1516 = document.createElement("canvas");
    var v1517 = v1516.getContext("2d");
    v1516.width = p1148 * 440;
    v1516.height = p1148 * 388;
    v1517.globalAlpha = p1149 ? 0.5 : 1;
    v1517.translate(p1148 * 5, p1148 * 5);
    f94(v1517, p1148 * 220, p1148 * 201, p1148 * 170.41713528867922);
    f89(v1517, p1150[0], p1150[0], p1148 * 6);
    v1517.globalAlpha = 1;
    v1517.translate(p1148 * -5, p1148 * -5);
    f94(v1517, p1148 * 220, p1148 * 201, p1148 * 170.41713528867922);
    f89(v1517, p1150[1], p1150[2], p1148 * 6);
    f94(v1517, p1148 * 220, p1148 * 201, p1148 * 130);
    f89(v1517, p1150[11], p1150[2], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 218, p1148 * 97);
    v1517.bezierCurveTo(p1148 * 219, p1148 * 163, p1148 * 201, p1148 * 176, p1148 * 191, p1148 * 175);
    v1517.bezierCurveTo(p1148 * 176, p1148 * 177, p1148 * 168, p1148 * 167, p1148 * 160, p1148 * 115);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 224, p1148 * 181);
    v1517.bezierCurveTo(p1148 * 225, p1148 * 138, p1148 * 246, p1148 * 115, p1148 * 263, p1148 * 137);
    v1517.bezierCurveTo(p1148 * 282, p1148 * 174, p1148 * 279, p1148 * 217, p1148 * 265, p1148 * 243);
    v1517.bezierCurveTo(p1148 * 253, p1148 * 264, p1148 * 240, p1148 * 256, p1148 * 233, p1148 * 238);
    v1517.bezierCurveTo(p1148 * 221, p1148 * 212, p1148 * 225, p1148 * 198, p1148 * 224, p1148 * 184);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 169, p1148 * 289);
    v1517.bezierCurveTo(p1148 * 161, p1148 * 234, p1148 * 168, p1148 * 197, p1148 * 187, p1148 * 195);
    v1517.bezierCurveTo(p1148 * 219, p1148 * 189, p1148 * 222, p1148 * 256, p1148 * 216, p1148 * 307);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 143, p1148 * 146);
    v1517.bezierCurveTo(p1148 * 161, p1148 * 199, p1148 * 151, p1148 * 245, p1148 * 138, p1148 * 266);
    v1517.bezierCurveTo(p1148 * 120.5, p1148 * 239.5, p1148 * 120.5, p1148 * 239.5, p1148 * 103, p1148 * 213);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 283, p1148 * 135);
    v1517.bezierCurveTo(p1148 * 277, p1148 * 176, p1148 * 298, p1148 * 194, p1148 * 315, p1148 * 205);
    v1517.bezierCurveTo(p1148 * 323.5, p1148 * 175, p1148 * 323.5, p1148 * 175, p1148 * 332, p1148 * 145);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 318, p1148 * 223);
    v1517.bezierCurveTo(p1148 * 290, p1148 * 195, p1148 * 271, p1148 * 256, p1148 * 283, p1148 * 281);
    v1517.bezierCurveTo(p1148 * 303.5, p1148 * 267, p1148 * 303.5, p1148 * 267, p1148 * 324, p1148 * 253);
    v1517.closePath();
    f89(v1517, p1150[5], p1150[6], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 142, p1148 * 223);
    v1517.bezierCurveTo(p1148 * 128, p1148 * 213, p1148 * 123, p1148 * 214, p1148 * 111, p1148 * 223);
    v1517.closePath();
    f89(v1517, p1150[10], p1150[10], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 251, p1148 * 133);
    v1517.bezierCurveTo(p1148 * 269, p1148 * 188, p1148 * 262, p1148 * 229, p1148 * 251, p1148 * 253);
    v1517.bezierCurveTo(p1148 * 288, p1148 * 224, p1148 * 273, p1148 * 139, p1148 * 252, p1148 * 133);
    v1517.closePath();
    f89(v1517, p1150[10], p1150[10], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 203, p1148 * 102);
    v1517.bezierCurveTo(p1148 * 204, p1148 * 136, p1148 * 200, p1148 * 159, p1148 * 189, p1148 * 174);
    v1517.bezierCurveTo(p1148 * 223, p1148 * 164, p1148 * 219, p1148 * 87, p1148 * 205, p1148 * 83);
    v1517.closePath();
    f89(v1517, p1150[10], p1150[10], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 196, p1148 * 324);
    v1517.bezierCurveTo(p1148 * 209, p1148 * 239, p1148 * 200, p1148 * 219, p1148 * 192, p1148 * 196);
    v1517.bezierCurveTo(p1148 * 229, p1148 * 216, p1148 * 219, p1148 * 316, p1148 * 198, p1148 * 325);
    v1517.closePath();
    f89(v1517, p1150[10], p1150[10], p1148 * 4);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 266, p1148 * 166);
    v1517.bezierCurveTo(p1148 * 249, p1148 * 154, p1148 * 243, p1148 * 161, p1148 * 233, p1148 * 167);
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 269, p1148 * 192);
    v1517.bezierCurveTo(p1148 * 256, p1148 * 183, p1148 * 241, p1148 * 186, p1148 * 233, p1148 * 192);
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 263, p1148 * 217);
    v1517.bezierCurveTo(p1148 * 251, p1148 * 211, p1148 * 242, p1148 * 213, p1148 * 236, p1148 * 218);
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 204, p1148 * 141);
    v1517.bezierCurveTo(p1148 * 191, p1148 * 131, p1148 * 187, p1148 * 133, p1148 * 176, p1148 * 141);
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 207, p1148 * 230);
    v1517.bezierCurveTo(p1148 * 193, p1148 * 222, p1148 * 185, p1148 * 224, p1148 * 177, p1148 * 231);
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 210, p1148 * 258);
    v1517.bezierCurveTo(p1148 * 196, p1148 * 247, p1148 * 191, p1148 * 250, p1148 * 177, p1148 * 259);
    f89(v1517, vVUndefined15, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 145, p1148 * 196);
    v1517.bezierCurveTo(p1148 * 130, p1148 * 186, p1148 * 124, p1148 * 187, p1148 * 114, p1148 * 195);
    f89(v1517, vVVVUndefined172, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 218, p1148 * 97);
    v1517.bezierCurveTo(p1148 * 219, p1148 * 163, p1148 * 201, p1148 * 176, p1148 * 191, p1148 * 175);
    v1517.bezierCurveTo(p1148 * 176, p1148 * 177, p1148 * 168, p1148 * 167, p1148 * 160, p1148 * 115);
    v1517.closePath();
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 224, p1148 * 181);
    v1517.bezierCurveTo(p1148 * 225, p1148 * 138, p1148 * 246, p1148 * 115, p1148 * 263, p1148 * 137);
    v1517.bezierCurveTo(p1148 * 282, p1148 * 174, p1148 * 279, p1148 * 217, p1148 * 265, p1148 * 243);
    v1517.bezierCurveTo(p1148 * 253, p1148 * 264, p1148 * 240, p1148 * 256, p1148 * 233, p1148 * 238);
    v1517.bezierCurveTo(p1148 * 221, p1148 * 212, p1148 * 225, p1148 * 198, p1148 * 224, p1148 * 184);
    v1517.closePath();
    f89(v1517, vVUndefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 169, p1148 * 289);
    v1517.bezierCurveTo(p1148 * 161, p1148 * 234, p1148 * 168, p1148 * 197, p1148 * 187, p1148 * 195);
    v1517.bezierCurveTo(p1148 * 219, p1148 * 189, p1148 * 222, p1148 * 256, p1148 * 216, p1148 * 307);
    v1517.closePath();
    f89(v1517, vVVVUndefined142, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 143, p1148 * 146);
    v1517.bezierCurveTo(p1148 * 161, p1148 * 199, p1148 * 151, p1148 * 245, p1148 * 138, p1148 * 266);
    v1517.bezierCurveTo(p1148 * 120.5, p1148 * 239.5, p1148 * 120.5, p1148 * 239.5, p1148 * 103, p1148 * 213);
    v1517.closePath();
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 283, p1148 * 135);
    v1517.bezierCurveTo(p1148 * 277, p1148 * 176, p1148 * 298, p1148 * 194, p1148 * 315, p1148 * 205);
    v1517.bezierCurveTo(p1148 * 323.5, p1148 * 175, p1148 * 323.5, p1148 * 175, p1148 * 332, p1148 * 145);
    v1517.closePath();
    f89(v1517, undefined, p1150[6], p1148 * 6);
    v1517.beginPath();
    v1517.lineCap = "round";
    v1517.lineJoin = "round";
    v1517.moveTo(p1148 * 318, p1148 * 223);
    v1517.bezierCurveTo(p1148 * 290, p1148 * 195, p1148 * 271, p1148 * 256, p1148 * 283, p1148 * 281);
    v1517.bezierCurveTo(p1148 * 303.5, p1148 * 267, p1148 * 303.5, p1148 * 267, p1148 * 324, p1148 * 253);
    v1517.closePath();
    f89(v1517, vVUndefined, p1150[6], p1148 * 6);
    f94(v1517, p1148 * 222, p1148 * 199, p1148 * 120.74767078498864);
    f89(v1517, undefined, p1150[3], p1148 * 40);
    f94(v1517, p1148 * 220, p1148 * 200, p1148 * 95.44108130150245);
    f89(v1517, vVVVUndefined172, p1150[2], p1148 * 15);
    f94(v1517, p1148 * 220, p1148 * 201, p1148 * 85);
    f89(v1517, vVVUndefined142, p1150[4], p1148 * 10);
    v1517.globalAlpha = 0.5;
    f94(v1517, p1148 * 220, p1148 * 201, p1148 * 82);
    f89(v1517, p1150[9]);
    v1517.globalAlpha = p1149 ? 0.5 : 1;
    v1517.translate(p1148 * 5, p1148 * 5);
    f94(v1517, p1148 * 63, p1148 * 136, p1148 * 49.193495504995376);
    f89(v1517, p1150[0], p1150[0], p1148 * 4);
    v1517.globalAlpha = 1;
    v1517.translate(p1148 * -5, p1148 * -5);
    f94(v1517, p1148 * 63, p1148 * 136, p1148 * 49.193495504995376);
    f89(v1517, p1150[8], p1150[2], p1148 * 4);
    f94(v1517, p1148 * 63, p1148 * 137, p1148 * 25.632011235952593);
    f89(v1517, p1150[7], p1150[2], p1148 * 4);
    return v1516;
  }
  const v1518 = String.fromCharCode;
  const vV1518 = v1518(101);
  const vV15182 = v1518(118);
  const vV15183 = v1518(97);
  const vV15184 = v1518(108);
  function f285(p1151, p1152, p1153) {
    var v1519 = document.createElement("canvas");
    var v1520 = v1519.getContext("2d");
    v1519.width = p1151 * 400;
    v1519.height = p1151 * 400;
    v1520.globalAlpha = 1;
    v1520.translate(p1151 * 20, p1151 * 20);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 36.5, p1151 * 278.0625);
    v1520.bezierCurveTo(p1151 * 67.5, p1151 * 316.0625, p1151 * 134.5, p1151 * 334.0625, p1151 * 199.5, p1151 * 319.0625);
    v1520.bezierCurveTo(p1151 * 254.5, p1151 * 304.0625, p1151 * 346.5, p1151 * 270.0625, p1151 * 348.5, p1151 * 237.0625);
    v1520.bezierCurveTo(p1151 * 359.5, p1151 * 206.0625, p1151 * 318.5, p1151 * 129.0625, p1151 * 262.5, p1151 * 122.0625);
    v1520.bezierCurveTo(p1151 * 213.5, p1151 * 115.0625, p1151 * 166.5, p1151 * 133.0625, p1151 * 104.5, p1151 * 166.0625);
    v1520.bezierCurveTo(p1151 * 54.5, p1151 * 194.0625, p1151 * 23.5, p1151 * 241.0625, p1151 * 36.5, p1151 * 277.0625);
    v1520.closePath();
    f89(v1520, p1153[0]);
    v1520.translate(p1151 * -20, p1151 * -20);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 36.5, p1151 * 278.0625);
    v1520.bezierCurveTo(p1151 * 67.5, p1151 * 316.0625, p1151 * 134.5, p1151 * 334.0625, p1151 * 199.5, p1151 * 319.0625);
    v1520.bezierCurveTo(p1151 * 254.5, p1151 * 304.0625, p1151 * 346.5, p1151 * 270.0625, p1151 * 348.5, p1151 * 237.0625);
    v1520.bezierCurveTo(p1151 * 359.5, p1151 * 206.0625, p1151 * 318.5, p1151 * 129.0625, p1151 * 262.5, p1151 * 122.0625);
    v1520.bezierCurveTo(p1151 * 213.5, p1151 * 115.0625, p1151 * 166.5, p1151 * 133.0625, p1151 * 104.5, p1151 * 166.0625);
    v1520.bezierCurveTo(p1151 * 54.5, p1151 * 194.0625, p1151 * 23.5, p1151 * 241.0625, p1151 * 36.5, p1151 * 277.0625);
    v1520.closePath();
    f89(v1520, p1153[1], p1153[2], p1151 * 19);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 214.5, p1151 * 124.0625);
    v1520.bezierCurveTo(p1151 * 242.5, p1151 * 125.0625, p1151 * 272.5, p1151 * 159.0625, p1151 * 283.5, p1151 * 184.0625);
    v1520.bezierCurveTo(p1151 * 277.5, p1151 * 161.0625, p1151 * 233.5, p1151 * 128.0625, p1151 * 219.5, p1151 * 122.0625);
    v1520.closePath();
    f89(v1520, undefined, p1153[2], p1151 * 19);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 157.5, p1151 * 145.0625);
    v1520.bezierCurveTo(p1151 * 176.5, p1151 * 148.0625, p1151 * 205.5, p1151 * 176.0625, p1151 * 212.5, p1151 * 197.0625);
    v1520.bezierCurveTo(p1151 * 205.5, p1151 * 178.0625, p1151 * 177.5, p1151 * 152.0625, p1151 * 156.5, p1151 * 142.0625);
    v1520.closePath();
    f89(v1520, vVVVVUndefined172, p1153[2], p1151 * 19);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 103.5, p1151 * 169.0625);
    v1520.bezierCurveTo(p1151 * 160.5, p1151 * 166.0625, p1151 * 228.5, p1151 * 312.0625, p1151 * 162.5, p1151 * 323.0625);
    v1520.bezierCurveTo(p1151 * 128.5, p1151 * 330.0625, p1151 * 45.5, p1151 * 312.0625, p1151 * 34.5, p1151 * 268.0625);
    v1520.bezierCurveTo(p1151 * 30.5, p1151 * 238.0625, p1151 * 44.5, p1151 * 222.0625, p1151 * 52.5, p1151 * 211.0625);
    v1520.bezierCurveTo(p1151 * 82.5, p1151 * 174.0625, p1151 * 104.5, p1151 * 166.0625, p1151 * 119.5, p1151 * 172.0625);
    v1520.closePath();
    f89(v1520, p1153[3], p1153[2], p1151 * 19);
    f94(v1520, p1151 * 92.5, p1151 * 216.0625, p1151 * 13.892443989449804);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 68.5, p1151 * 227.0625, p1151 * 8.06225774829855);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 85.5, p1151 * 240.0625, p1151 * 6.708203932499369);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 147.5, p1151 * 294.0625, p1151 * 17.46424919657298);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 166.5, p1151 * 273.0625, p1151 * 6.708203932499369);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 114.5, p1151 * 294.0625, p1151 * 12.36931687685298);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 123.5, p1151 * 220.0625, p1151 * 5.830951894845301);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 114.5, p1151 * 259.0625, p1151 * 4.123105625617661);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 63.5, p1151 * 265.0625, p1151 * 5.385164807134504);
    f89(v1520, p1153[4]);
    f94(v1520, p1151 * 148.5, p1151 * 235.0625, p1151 * 4.47213595499958);
    f89(v1520, p1153[4]);
    v1520.beginPath();
    v1520.lineCap = "round";
    v1520.lineJoin = "round";
    v1520.moveTo(p1151 * 194.5, p1151 * 313.0625);
    v1520.bezierCurveTo(p1151 * 222.5, p1151 * 306.0625, p1151 * 319.5, p1151 * 271.0625, p1151 * 337.5, p1151 * 241.0625);
    v1520.bezierCurveTo(p1151 * 274.5, p1151 * 270.0625, p1151 * 216.5, p1151 * 288.0625, p1151 * 199.5, p1151 * 287.0625);
    v1520.bezierCurveTo(p1151 * 198.5, p1151 * 302.0625, p1151 * 195.5, p1151 * 311.0625, p1151 * 193.5, p1151 * 312.0625);
    v1520.closePath();
    f89(v1520, p1153[5]);
    return v1519;
  }
  function f286(p1154, p1155) {
    var v1521 = document.createElement("canvas");
    var v1522 = v1521.getContext("2d");
    v1521.width = p1154 * 120;
    v1521.height = p1154 * 300;
    v1522.translate(p1154 * -200, p1154 * -40);
    v1522.beginPath();
    v1522.lineCap = "round";
    v1522.lineJoin = "round";
    v1522.moveTo(p1154 * 344, p1154 * 18.40625);
    v1522.bezierCurveTo(p1154 * 345, p1154 * 361.40625, p1154 * 344, p1154 * 191.40625, p1154 * 344, p1154 * 364.40625);
    v1522.bezierCurveTo(p1154 * 261, p1154 * 275.40625, p1154 * 274, p1154 * 259.40625, p1154 * 229, p1154 * 213.40625);
    v1522.bezierCurveTo(p1154 * 199, p1154 * 187.40625, p1154 * 222, p1154 * 133.40625, p1154 * 273, p1154 * 100.40625);
    v1522.bezierCurveTo(p1154 * 321, p1154 * 71.40625, p1154 * 327, p1154 * 34.40625, p1154 * 344, p1154 * 18.40625);
    v1522.closePath();
    f89(v1522, p1155[0]);
    v1522.beginPath();
    v1522.lineCap = "round";
    v1522.lineJoin = "round";
    v1522.moveTo(p1154 * 335, p1154 * 38.072906494140625);
    v1522.bezierCurveTo(p1154 * 307, p1154 * 62.072906494140625, p1154 * 291, p1154 * 60.072906494140625, p1154 * 262, p1154 * 68.07290649414062);
    v1522.bezierCurveTo(p1154 * 223, p1154 * 80.07290649414062, p1154 * 225, p1154 * 111.07290649414062, p1154 * 264, p1154 * 139.07290649414062);
    v1522.closePath();
    f89(v1522, p1155[0]);
    return v1521;
  }
  function f287(p1156, p1157, p1158) {
    var v1523 = document.createElement("canvas");
    var v1524 = v1523.getContext("2d");
    v1523.width = p1156 * 144;
    v1523.height = p1156 * 280;
    v1524.globalAlpha = p1157 ? 0.5 : 1;
    v1524.translate(p1156 * 5, p1156 * 5);
    v1524.beginPath();
    v1524.lineCap = "round";
    v1524.lineJoin = "round";
    v1524.moveTo(p1156 * 62, p1156 * 103.79999542236328);
    v1524.bezierCurveTo(p1156 * 62.5, p1156 * 148.79999542236328, p1156 * 62.5, p1156 * 148.79999542236328, p1156 * 63, p1156 * 193.79999542236328);
    v1524.bezierCurveTo(p1156 * 63, p1156 * 219.79999542236328, p1156 * 47, p1156 * 217.79999542236328, p1156 * 51, p1156 * 230.79999542236328);
    v1524.bezierCurveTo(p1156 * 62, p1156 * 255.79999542236328, p1156 * 74, p1156 * 260.7999954223633, p1156 * 72, p1156 * 248.79999542236328);
    v1524.bezierCurveTo(p1156 * 65, p1156 * 226.79999542236328, p1156 * 71, p1156 * 229.79999542236328, p1156 * 76, p1156 * 225.79999542236328);
    v1524.bezierCurveTo(p1156 * 90, p1156 * 224.79999542236328, p1156 * 89, p1156 * 232.79999542236328, p1156 * 90, p1156 * 243.79999542236328);
    v1524.bezierCurveTo(p1156 * 95, p1156 * 253.79999542236328, p1156 * 99, p1156 * 249.79999542236328, p1156 * 100, p1156 * 229.79999542236328);
    v1524.bezierCurveTo(p1156 * 102, p1156 * 213.79999542236328, p1156 * 98, p1156 * 214.79999542236328, p1156 * 90, p1156 * 205.79999542236328);
    v1524.bezierCurveTo(p1156 * 82, p1156 * 201.79999542236328, p1156 * 82, p1156 * 185.79999542236328, p1156 * 82, p1156 * 114.79999542236328);
    v1524.bezierCurveTo(p1156 * 80, p1156 * 73, p1156 * 82, p1156 * 68, p1156 * 93, p1156 * 53);
    v1524.bezierCurveTo(p1156 * 98, p1156 * 37, p1156 * 65, p1156 * 14, p1156 * 74, p1156 * 33);
    v1524.bezierCurveTo(p1156 * 82, p1156 * 56, p1156 * 77, p1156 * 52, p1156 * 69, p1156 * 54);
    v1524.bezierCurveTo(p1156 * 55, p1156 * 57, p1156 * 57, p1156 * 53, p1156 * 54, p1156 * 39);
    v1524.bezierCurveTo(p1156 * 46, p1156 * 20, p1156 * 37, p1156 * 61, p1156 * 50, p1156 * 68);
    v1524.bezierCurveTo(p1156 * 65, p1156 * 81, p1156 * 60, p1156 * 89, p1156 * 62, p1156 * 102);
    v1524.closePath();
    f89(v1524, p1158[0]);
    v1524.globalAlpha = 1;
    v1524.translate(p1156 * -5, p1156 * -5);
    v1524.beginPath();
    v1524.lineCap = "round";
    v1524.lineJoin = "round";
    v1524.moveTo(p1156 * 62, p1156 * 103.79999542236328);
    v1524.bezierCurveTo(p1156 * 62.5, p1156 * 148.79999542236328, p1156 * 62.5, p1156 * 148.79999542236328, p1156 * 63, p1156 * 193.79999542236328);
    v1524.bezierCurveTo(p1156 * 63, p1156 * 219.79999542236328, p1156 * 47, p1156 * 217.79999542236328, p1156 * 51, p1156 * 230.79999542236328);
    v1524.bezierCurveTo(p1156 * 62, p1156 * 255.79999542236328, p1156 * 74, p1156 * 260.7999954223633, p1156 * 72, p1156 * 248.79999542236328);
    v1524.bezierCurveTo(p1156 * 65, p1156 * 226.79999542236328, p1156 * 71, p1156 * 229.79999542236328, p1156 * 76, p1156 * 225.79999542236328);
    v1524.bezierCurveTo(p1156 * 90, p1156 * 224.79999542236328, p1156 * 89, p1156 * 232.79999542236328, p1156 * 90, p1156 * 243.79999542236328);
    v1524.bezierCurveTo(p1156 * 95, p1156 * 253.79999542236328, p1156 * 99, p1156 * 249.79999542236328, p1156 * 100, p1156 * 229.79999542236328);
    v1524.bezierCurveTo(p1156 * 102, p1156 * 213.79999542236328, p1156 * 98, p1156 * 214.79999542236328, p1156 * 90, p1156 * 205.79999542236328);
    v1524.bezierCurveTo(p1156 * 82, p1156 * 201.79999542236328, p1156 * 82, p1156 * 185.79999542236328, p1156 * 82, p1156 * 114.79999542236328);
    v1524.bezierCurveTo(p1156 * 80, p1156 * 73, p1156 * 82, p1156 * 68, p1156 * 93, p1156 * 53);
    v1524.bezierCurveTo(p1156 * 98, p1156 * 37, p1156 * 65, p1156 * 14, p1156 * 74, p1156 * 33);
    v1524.bezierCurveTo(p1156 * 82, p1156 * 56, p1156 * 77, p1156 * 52, p1156 * 69, p1156 * 54);
    v1524.bezierCurveTo(p1156 * 55, p1156 * 57, p1156 * 57, p1156 * 53, p1156 * 54, p1156 * 39);
    v1524.bezierCurveTo(p1156 * 46, p1156 * 20, p1156 * 37, p1156 * 61, p1156 * 50, p1156 * 68);
    v1524.bezierCurveTo(p1156 * 65, p1156 * 81, p1156 * 60, p1156 * 89, p1156 * 62, p1156 * 102);
    v1524.closePath();
    f89(v1524, p1158[1], p1158[2], p1156 * 6);
    return v1523;
  }
  function f288(p1159, p1160, p1161) {
    var v1525 = document.createElement("canvas");
    var v1526 = v1525.getContext("2d");
    v1525.width = p1159 * 440;
    v1525.height = p1159 * 388;
    v1526.globalAlpha = p1160 ? 0.5 : 1;
    v1526.translate(p1159 * 5, p1159 * 5);
    f94(v1526, p1159 * 220, p1159 * 201, p1159 * 170.41713528867922);
    f89(v1526, p1161[0], p1161[0], p1159 * 6);
    v1526.globalAlpha = 1;
    v1526.translate(p1159 * -5, p1159 * -5);
    f94(v1526, p1159 * 220, p1159 * 201, p1159 * 170.41713528867922);
    f89(v1526, p1161[1], p1161[2], p1159 * 6);
    f94(v1526, p1159 * 220, p1159 * 201, p1159 * 130);
    f89(v1526, p1161[11], p1161[2], p1159 * 6);
    f94(v1526, p1159 * 222, p1159 * 199, p1159 * 120.74767078498864);
    f89(v1526, vVVVVUndefined1722, p1161[3], p1159 * 40);
    f94(v1526, p1159 * 220, p1159 * 200, p1159 * 95.44108130150245);
    f89(v1526, vVVVVUndefined1722, p1161[2], p1159 * 15);
    v1526.globalAlpha = p1160 ? 0.5 : 1;
    v1526.translate(p1159 * 5, p1159 * 5);
    f94(v1526, p1159 * 63, p1159 * 136, p1159 * 49.193495504995376);
    f89(v1526, p1161[0], p1161[0], p1159 * 4);
    v1526.globalAlpha = 1;
    v1526.translate(p1159 * -5, p1159 * -5);
    f94(v1526, p1159 * 63, p1159 * 136, p1159 * 49.193495504995376);
    f89(v1526, p1161[8], p1161[2], p1159 * 4);
    f94(v1526, p1159 * 63, p1159 * 137, p1159 * 25.632011235952593);
    f89(v1526, p1161[7], p1161[2], p1159 * 4);
    return v1525;
  }
  function f289(p1162, p1163, p1164) {
    var v1527 = document.createElement("canvas");
    var v1528 = v1527.getContext("2d");
    v1527.width = p1162 * 142;
    v1527.height = p1162 * 118;
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 111, p1162 * 27.3671875);
    v1528.bezierCurveTo(p1162 * 128, p1162 * 9.3671875, p1162 * 125, p1162 * 13.3671875, p1162 * 126, p1162 * 21.3671875);
    v1528.bezierCurveTo(p1162 * 126, p1162 * 33.3671875, p1162 * 119, p1162 * 43.3671875, p1162 * 118, p1162 * 42.3671875);
    v1528.closePath();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 31, p1162 * 23.3671875);
    v1528.bezierCurveTo(p1162 * 17, p1162 * 15.3671875, p1162 * 16, p1162 * 14.3671875, p1162 * 17, p1162 * 20.3671875);
    v1528.bezierCurveTo(p1162 * 22, p1162 * 33.3671875, p1162 * 20, p1162 * 27.3671875, p1162 * 24, p1162 * 34.3671875);
    v1528.closePath();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.save();
    v1528.translate(p1162 * 70.5, p1162 * 34.8671875);
    v1528.rotate(0);
    f90(v1528, p1162 * -49.5, p1162 * -21.5, p1162 * 99, p1162 * 43, p1162 * 15);
    v1528.restore();
    f89(v1528, p1164[0], p1164[1], p1162 * 4);
    v1528.save();
    v1528.translate(p1162 * 71, p1162 * 40.8671875);
    v1528.rotate(0);
    f90(v1528, p1162 * -49, p1162 * -12.5, p1162 * 98, p1162 * 25, p1162 * 15);
    v1528.restore();
    f89(v1528, p1164[2], p1164[1], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 19.800003051757812, p1162 * 75.95625305175781);
    v1528.bezierCurveTo(p1162 * 19.300003051757812, p1162 * 82.95625305175781, p1162 * 19.300003051757812, p1162 * 82.95625305175781, p1162 * 18.800003051757812, p1162 * 89.95625305175781);
    v1528.bezierCurveTo(p1162 * 38.80000305175781, p1162 * 115.95625305175781, p1162 * 37.80000305175781, p1162 * 104.95625305175781, p1162 * 31.800003051757812, p1162 * 91.95625305175781);
    v1528.closePath();
    f89(v1528, p1164[2], p1164[1], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 119.80000305175781, p1162 * 75.95625305175781);
    v1528.bezierCurveTo(p1162 * 120.80000305175781, p1162 * 82.95625305175781, p1162 * 120.80000305175781, p1162 * 82.95625305175781, p1162 * 121.80000305175781, p1162 * 89.95625305175781);
    v1528.bezierCurveTo(p1162 * 101.80000305175781, p1162 * 111.95625305175781, p1162 * 99.80000305175781, p1162 * 111.95625305175781, p1162 * 112.80000305175781, p1162 * 81.95625305175781);
    v1528.closePath();
    f89(v1528, p1164[2], p1164[1], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 17.800003051757812, p1162 * 49.15625);
    v1528.bezierCurveTo(p1162 * 17.800003051757812, p1162 * 64.15625, p1162 * 17.800003051757812, p1162 * 64.15625, p1162 * 17.800003051757812, p1162 * 79.15625);
    v1528.bezierCurveTo(p1162 * 23.300003051757812, p1162 * 85.15625, p1162 * 23.300003051757812, p1162 * 85.15625, p1162 * 28.800003051757812, p1162 * 91.15625);
    v1528.bezierCurveTo(p1162 * 36.80000305175781, p1162 * 96.15625, p1162 * 32.80000305175781, p1162 * 91.15625, p1162 * 28.800003051757812, p1162 * 77.15625);
    v1528.bezierCurveTo(p1162 * 33.80000305175781, p1162 * 65.15625, p1162 * 33.80000305175781, p1162 * 65.15625, p1162 * 38.80000305175781, p1162 * 53.15625);
    v1528.closePath();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 123.80000305175781, p1162 * 53.95625305175781);
    v1528.bezierCurveTo(p1162 * 121.80000305175781, p1162 * 77.95625305175781, p1162 * 121.80000305175781, p1162 * 74.95625305175781, p1162 * 121.80000305175781, p1162 * 78.95625305175781);
    v1528.bezierCurveTo(p1162 * 115.80000305175781, p1162 * 84.95625305175781, p1162 * 115.80000305175781, p1162 * 84.95625305175781, p1162 * 109.80000305175781, p1162 * 90.95625305175781);
    v1528.bezierCurveTo(p1162 * 102.80000305175781, p1162 * 93.95625305175781, p1162 * 105.80000305175781, p1162 * 86.95625305175781, p1162 * 110.80000305175781, p1162 * 76.95625305175781);
    v1528.bezierCurveTo(p1162 * 107.30000305175781, p1162 * 65.45625305175781, p1162 * 103.80000305175781, p1162 * 53.95625305175781, p1162 * 103.80000305175781, p1162 * 53.95625305175781);
    v1528.closePath();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.beginPath();
    v1528.lineCap = "round";
    v1528.lineJoin = "round";
    v1528.moveTo(p1162 * 18, p1162 * 56.3671875);
    v1528.bezierCurveTo(p1162 * 70, p1162 * 56.8671875, p1162 * 70, p1162 * 56.8671875, p1162 * 122, p1162 * 57.3671875);
    v1528.bezierCurveTo(p1162 * 137, p1162 * 20.3671875, p1162 * 137, p1162 * 16.3671875, p1162 * 126, p1162 * 22.3671875);
    v1528.bezierCurveTo(p1162 * 115.5, p1162 * 34.3671875, p1162 * 115.5, p1162 * 34.3671875, p1162 * 105, p1162 * 46.3671875);
    v1528.bezierCurveTo(p1162 * 70.5, p1162 * 46.3671875, p1162 * 70.5, p1162 * 46.3671875, p1162 * 36, p1162 * 46.3671875);
    v1528.bezierCurveTo(p1162 * 4, p1162 * 14.3671875, p1162 * 7, p1162 * 18.3671875, p1162 * 8, p1162 * 27.3671875);
    v1528.bezierCurveTo(p1162 * 12.5, p1162 * 41.8671875, p1162 * 12.5, p1162 * 41.8671875, p1162 * 17, p1162 * 56.3671875);
    v1528.closePath();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.save();
    v1528.translate(p1162 * 68.30000305175781, p1162 * 41.45625305175781);
    v1528.rotate(0.76);
    f90(v1528, p1162 * -20.5, p1162 * -20.5, p1162 * 41, p1162 * 41, p1162 * 10);
    v1528.restore();
    f89(v1528, undefined, p1164[5], p1162 * 4);
    v1528.save();
    v1528.translate(p1162 * 68.80000305175781, p1162 * 44.45625305175781);
    v1528.rotate(0.76);
    f90(v1528, p1162 * -21, p1162 * -20.5, p1162 * 42, p1162 * 41, p1162 * 10);
    v1528.restore();
    f89(v1528, p1164[3], p1164[4], p1162 * 4);
    v1528.save();
    v1528.translate(p1162 * 69.80000305175781, p1162 * 44.556243896484375);
    v1528.rotate(0.76);
    f90(v1528, p1162 * -10, p1162 * -10, p1162 * 20, p1162 * 20, p1162 * 5);
    v1528.restore();
    f89(v1528, p1164[6], p1164[7], p1162 * 4);
    return v1527;
  }
  function f290(p1165, p1166, p1167) {
    var v1529 = document.createElement("canvas");
    var v1530 = v1529.getContext("2d");
    v1529.width = p1165 * 316;
    v1529.height = p1165 * 365;
    v1530.save();
    v1530.translate(p1165 * 156.07142639160156, p1165 * 51.81248474121094);
    v1530.rotate(0);
    f90(v1530, p1165 * -21.5, p1165 * -34, p1165 * 43, p1165 * 68, p1165 * 8);
    v1530.restore();
    f89(v1530, p1167[1], p1167[2], p1165 * 15);
    v1530.beginPath();
    v1530.lineCap = "round";
    v1530.lineJoin = "round";
    v1530.moveTo(p1165 * 126.57142639160156, p1165 * 67.38392639160156);
    v1530.bezierCurveTo(p1165 * 126.57142639160156, p1165 * 57.38392639160156, p1165 * 132.57142639160156, p1165 * 54.38392639160156, p1165 * 140.57142639160156, p1165 * 54.38392639160156);
    v1530.bezierCurveTo(p1165 * 177.57142639160156, p1165 * 55.38392639160156, p1165 * 158.07142639160156, p1165 * 54.38392639160156, p1165 * 175.57142639160156, p1165 * 54.38392639160156);
    v1530.bezierCurveTo(p1165 * 185.57142639160156, p1165 * 56.38392639160156, p1165 * 185.57142639160156, p1165 * 57.38392639160156, p1165 * 184.57142639160156, p1165 * 66.38392639160156);
    v1530.bezierCurveTo(p1165 * 184.57142639160156, p1165 * 78.38392639160156, p1165 * 184.57142639160156, p1165 * 89.38392639160156, p1165 * 184.57142639160156, p1165 * 90.38392639160156);
    v1530.bezierCurveTo(p1165 * 177.57142639160156, p1165 * 107.38392639160156, p1165 * 180.57142639160156, p1165 * 112.38392639160156, p1165 * 189.57142639160156, p1165 * 116.38392639160156);
    v1530.bezierCurveTo(p1165 * 212.57142639160156, p1165 * 127.38392639160156, p1165 * 212.57142639160156, p1165 * 132.38392639160156, p1165 * 211.57142639160156, p1165 * 150.38392639160156);
    v1530.bezierCurveTo(p1165 * 211.57142639160156, p1165 * 227.59821128845215, p1165 * 211.57142639160156, p1165 * 227.59821128845215, p1165 * 211.57142639160156, p1165 * 304.81249618530273);
    v1530.bezierCurveTo(p1165 * 212.57142639160156, p1165 * 328.81249618530273, p1165 * 209.57142639160156, p1165 * 330.81249618530273, p1165 * 188.57142639160156, p1165 * 333.81249618530273);
    v1530.bezierCurveTo(p1165 * 155.07142639160156, p1165 * 333.31249618530273, p1165 * 155.07142639160156, p1165 * 333.31249618530273, p1165 * 121.57142639160156, p1165 * 332.81249618530273);
    v1530.bezierCurveTo(p1165 * 104.57142639160156, p1165 * 327.81249618530273, p1165 * 105.57142639160156, p1165 * 328.81249618530273, p1165 * 104.57142639160156, p1165 * 312.81249618530273);
    v1530.bezierCurveTo(p1165 * 104.57142639160156, p1165 * 228.16963958740234, p1165 * 104.57142639160156, p1165 * 228.16963958740234, p1165 * 104.57142639160156, p1165 * 143.52678298950195);
    v1530.bezierCurveTo(p1165 * 106.57142639160156, p1165 * 124.52678298950195, p1165 * 110.57142639160156, p1165 * 123.52678298950195, p1165 * 123.57142639160156, p1165 * 116.52678298950195);
    v1530.bezierCurveTo(p1165 * 136.57142639160156, p1165 * 110.52678298950195, p1165 * 130.57142639160156, p1165 * 106.52678298950195, p1165 * 126.57142639160156, p1165 * 98.52678298950195);
    v1530.closePath();
    f89(v1530, vVVVUndefined17, p1167[5], p1165 * 15);
    v1530.beginPath();
    v1530.lineCap = "round";
    v1530.lineJoin = "round";
    v1530.moveTo(p1165 * 125.57142639160156, p1165 * 156.66963958740234);
    v1530.bezierCurveTo(p1165 * 125.57142639160156, p1165 * 182.66963958740234, p1165 * 125.57142639160156, p1165 * 182.66963958740234, p1165 * 125.57142639160156, p1165 * 208.66963958740234);
    v1530.closePath();
    f89(v1530, vVVUndefined17, p1167[6], p1165 * 15);
    return v1529;
  }
  function f291(p1168, p1169, p1170) {
    var v1531 = document.createElement("canvas");
    var v1532 = v1531.getContext("2d");
    v1531.width = p1168 * 160;
    v1531.height = p1168 * 161;
    v1532.globalAlpha = p1169 ? 0.5 : 1;
    v1532.translate(0, p1168 * 10);
    v1532.save();
    v1532.translate(p1168 * 80.5, p1168 * 78);
    f90(v1532, p1168 * -71.5, p1168 * -71, p1168 * 143, p1168 * 143, p1168 * 10);
    v1532.restore();
    f89(v1532, p1170[0]);
    v1532.globalAlpha = 1;
    v1532.translate(0, p1168 * -10);
    v1532.save();
    v1532.translate(p1168 * 80.5, p1168 * 78);
    f90(v1532, p1168 * -71.5, p1168 * -71, p1168 * 143, p1168 * 143, p1168 * 10);
    v1532.restore();
    f89(v1532, p1170[1], p1170[2], p1168 * 6);
    v1532.save();
    v1532.translate(p1168 * 80, p1168 * 78.5);
    f90(v1532, p1168 * -17, p1168 * -72.5, p1168 * 34, p1168 * 145, p1168 * 10);
    v1532.restore();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.globalAlpha = p1169 ? 0.5 : 1;
    v1532.translate(0, p1168 * 10);
    v1532.save();
    v1532.translate(p1168 * 80, p1168 * 79.5);
    f90(v1532, p1168 * -73, p1168 * -16.5, p1168 * 145, p1168 * 34, p1168 * 10);
    v1532.restore();
    f89(v1532, p1170[0]);
    v1532.globalAlpha = 1;
    v1532.translate(0, p1168 * -10);
    v1532.save();
    v1532.translate(p1168 * 80, p1168 * 79.5);
    f90(v1532, p1168 * -73, p1168 * -16.5, p1168 * 145, p1168 * 34, p1168 * 10);
    v1532.restore();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.globalAlpha = p1169 ? 0.5 : 1;
    v1532.translate(0, p1168 * 10);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 79, p1168 * 71);
    v1532.bezierCurveTo(p1168 * 90, p1168 * 42, p1168 * 98, p1168 * 36, p1168 * 109, p1168 * 43);
    v1532.bezierCurveTo(p1168 * 119, p1168 * 47, p1168 * 128, p1168 * 62, p1168 * 107, p1168 * 72);
    v1532.bezierCurveTo(p1168 * 96, p1168 * 78.5, p1168 * 96, p1168 * 78.5, p1168 * 85, p1168 * 85);
    v1532.closePath();
    f89(v1532, p1170[0]);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 84, p1168 * 78);
    v1532.bezierCurveTo(p1168 * 113, p1168 * 82, p1168 * 123, p1168 * 97, p1168 * 115, p1168 * 108);
    v1532.bezierCurveTo(p1168 * 110, p1168 * 119, p1168 * 98, p1168 * 124, p1168 * 87, p1168 * 107);
    v1532.bezierCurveTo(p1168 * 81.5, p1168 * 94.5, p1168 * 81.5, p1168 * 94.5, p1168 * 76, p1168 * 82);
    v1532.closePath();
    f89(v1532, p1170[0]);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 80, p1168 * 73);
    v1532.bezierCurveTo(p1168 * 64, p1168 * 37, p1168 * 55, p1168 * 34, p1168 * 45, p1168 * 42);
    v1532.bezierCurveTo(p1168 * 30, p1168 * 54, p1168 * 36, p1168 * 65, p1168 * 51, p1168 * 72);
    v1532.bezierCurveTo(p1168 * 62.5, p1168 * 77, p1168 * 62.5, p1168 * 77, p1168 * 74, p1168 * 82);
    v1532.closePath();
    f89(v1532, p1170[0]);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 82, p1168 * 83);
    v1532.bezierCurveTo(p1168 * 73, p1168 * 107, p1168 * 60, p1168 * 123, p1168 * 47, p1168 * 113);
    v1532.bezierCurveTo(p1168 * 33, p1168 * 105, p1168 * 33, p1168 * 92, p1168 * 52, p1168 * 85);
    v1532.bezierCurveTo(p1168 * 74, p1168 * 73, p1168 * 77, p1168 * 76, p1168 * 76, p1168 * 75);
    v1532.closePath();
    f89(v1532, p1170[0]);
    v1532.globalAlpha = 1;
    v1532.translate(0, p1168 * -10);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 79, p1168 * 71);
    v1532.bezierCurveTo(p1168 * 90, p1168 * 42, p1168 * 98, p1168 * 36, p1168 * 109, p1168 * 43);
    v1532.bezierCurveTo(p1168 * 119, p1168 * 47, p1168 * 128, p1168 * 62, p1168 * 107, p1168 * 72);
    v1532.bezierCurveTo(p1168 * 96, p1168 * 78.5, p1168 * 96, p1168 * 78.5, p1168 * 85, p1168 * 85);
    v1532.closePath();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 84, p1168 * 78);
    v1532.bezierCurveTo(p1168 * 113, p1168 * 82, p1168 * 123, p1168 * 97, p1168 * 115, p1168 * 108);
    v1532.bezierCurveTo(p1168 * 110, p1168 * 119, p1168 * 98, p1168 * 124, p1168 * 87, p1168 * 107);
    v1532.bezierCurveTo(p1168 * 81.5, p1168 * 94.5, p1168 * 81.5, p1168 * 94.5, p1168 * 76, p1168 * 82);
    v1532.closePath();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 80, p1168 * 73);
    v1532.bezierCurveTo(p1168 * 64, p1168 * 37, p1168 * 55, p1168 * 34, p1168 * 45, p1168 * 42);
    v1532.bezierCurveTo(p1168 * 30, p1168 * 54, p1168 * 36, p1168 * 65, p1168 * 51, p1168 * 72);
    v1532.bezierCurveTo(p1168 * 62.5, p1168 * 77, p1168 * 62.5, p1168 * 77, p1168 * 74, p1168 * 82);
    v1532.closePath();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.beginPath();
    v1532.lineCap = "round";
    v1532.lineJoin = "round";
    v1532.moveTo(p1168 * 82, p1168 * 83);
    v1532.bezierCurveTo(p1168 * 73, p1168 * 107, p1168 * 60, p1168 * 123, p1168 * 47, p1168 * 113);
    v1532.bezierCurveTo(p1168 * 33, p1168 * 105, p1168 * 33, p1168 * 92, p1168 * 52, p1168 * 85);
    v1532.bezierCurveTo(p1168 * 74, p1168 * 73, p1168 * 77, p1168 * 76, p1168 * 76, p1168 * 75);
    v1532.closePath();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    v1532.globalAlpha = p1169 ? 0.5 : 1;
    v1532.translate(0, p1168 * 10);
    v1532.save();
    v1532.translate(p1168 * 78.5, p1168 * 78);
    f90(v1532, p1168 * -13.5, p1168 * -14, p1168 * 27, p1168 * 27, p1168 * 6);
    v1532.restore();
    f89(v1532, p1170[0]);
    v1532.globalAlpha = 1;
    v1532.translate(0, p1168 * -10);
    v1532.save();
    v1532.translate(p1168 * 78.5, p1168 * 78);
    f90(v1532, p1168 * -13.5, p1168 * -14, p1168 * 27, p1168 * 27, p1168 * 6);
    v1532.restore();
    f89(v1532, p1170[3], p1170[4], p1168 * 6);
    return v1531;
  }
  function f292(p1171, p1172, p1173) {
    var v1533 = document.createElement("canvas");
    var v1534 = v1533.getContext("2d");
    v1533.width = p1171 * 104;
    v1533.height = p1171 * 117;
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 4, p1171 * 90);
    v1534.bezierCurveTo(p1171 * 20, p1171 * 99.5, p1171 * 20, p1171 * 99.5, p1171 * 36, p1171 * 109);
    v1534.bezierCurveTo(p1171 * 67, p1171 * 92, p1171 * 67, p1171 * 92, p1171 * 98, p1171 * 75);
    v1534.bezierCurveTo(p1171 * 91, p1171 * 27, p1171 * 91, p1171 * 27, p1171 * 91, p1171 * 28);
    v1534.bezierCurveTo(p1171 * 72.5, p1171 * 16, p1171 * 72.5, p1171 * 16, p1171 * 54, p1171 * 4);
    v1534.bezierCurveTo(p1171 * 33.5, p1171 * 10, p1171 * 33.5, p1171 * 10, p1171 * 13, p1171 * 16);
    v1534.closePath();
    f89(v1534, p1173[0]);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 6, p1171 * 76);
    v1534.bezierCurveTo(p1171 * 13.5, p1171 * 51.5, p1171 * 13.5, p1171 * 51.5, p1171 * 21, p1171 * 27);
    v1534.bezierCurveTo(p1171 * 37.5, p1171 * 17, p1171 * 37.5, p1171 * 17, p1171 * 54, p1171 * 7);
    v1534.bezierCurveTo(p1171 * 33.5, p1171 * 12.5, p1171 * 33.5, p1171 * 12.5, p1171 * 13, p1171 * 18);
    v1534.closePath();
    f89(v1534, p1173[1]);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 24, p1171 * 62);
    v1534.bezierCurveTo(p1171 * 28.5, p1171 * 53, p1171 * 28.5, p1171 * 53, p1171 * 33, p1171 * 44);
    v1534.bezierCurveTo(p1171 * 41.5, p1171 * 41, p1171 * 41.5, p1171 * 41, p1171 * 50, p1171 * 38);
    v1534.bezierCurveTo(p1171 * 52.5, p1171 * 35, p1171 * 52.5, p1171 * 35, p1171 * 55, p1171 * 32);
    v1534.bezierCurveTo(p1171 * 52, p1171 * 30, p1171 * 52, p1171 * 30, p1171 * 49, p1171 * 28);
    v1534.bezierCurveTo(p1171 * 38, p1171 * 31.5, p1171 * 38, p1171 * 31.5, p1171 * 27, p1171 * 35);
    v1534.closePath();
    f89(v1534, p1173[1]);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 36, p1171 * 107);
    v1534.bezierCurveTo(p1171 * 66, p1171 * 90.5, p1171 * 66, p1171 * 90.5, p1171 * 96, p1171 * 74);
    v1534.bezierCurveTo(p1171 * 93, p1171 * 52.5, p1171 * 93, p1171 * 52.5, p1171 * 90, p1171 * 31);
    v1534.bezierCurveTo(p1171 * 87, p1171 * 48, p1171 * 87, p1171 * 48, p1171 * 84, p1171 * 65);
    v1534.closePath();
    f89(v1534, p1173[2]);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 1, p1171 * 89);
    v1534.bezierCurveTo(p1171 * 18, p1171 * 100, p1171 * 34, p1171 * 110, p1171 * 35, p1171 * 111);
    v1534.bezierCurveTo(p1171 * 67, p1171 * 93, p1171 * 67, p1171 * 93, p1171 * 99, p1171 * 75);
    v1534.bezierCurveTo(p1171 * 100, p1171 * 78.5, p1171 * 100, p1171 * 78.5, p1171 * 101, p1171 * 82);
    v1534.bezierCurveTo(p1171 * 68, p1171 * 99, p1171 * 68, p1171 * 99, p1171 * 35, p1171 * 116);
    v1534.bezierCurveTo(p1171 * 18, p1171 * 106.5, p1171 * 18, p1171 * 106.5, p1171 * 1, p1171 * 97);
    v1534.closePath();
    f89(v1534, p1173[3]);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 36, p1171 * 107);
    v1534.bezierCurveTo(p1171 * 66.5, p1171 * 91.5, p1171 * 66.5, p1171 * 91.5, p1171 * 97, p1171 * 76);
    v1534.bezierCurveTo(p1171 * 94.5, p1171 * 52, p1171 * 94.5, p1171 * 52, p1171 * 92, p1171 * 28);
    v1534.bezierCurveTo(p1171 * 73, p1171 * 15.5, p1171 * 73, p1171 * 15.5, p1171 * 54, p1171 * 3);
    v1534.bezierCurveTo(p1171 * 33, p1171 * 9.5, p1171 * 33, p1171 * 9.5, p1171 * 12, p1171 * 16);
    v1534.bezierCurveTo(p1171 * 8, p1171 * 53, p1171 * 8, p1171 * 53, p1171 * 4, p1171 * 90);
    v1534.bezierCurveTo(p1171 * 18.5, p1171 * 99, p1171 * 18.5, p1171 * 99, p1171 * 33, p1171 * 108);
    v1534.closePath();
    f89(v1534, undefined, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 22, p1171 * 71);
    v1534.bezierCurveTo(p1171 * 30, p1171 * 76.5, p1171 * 30, p1171 * 76.5, p1171 * 38, p1171 * 82);
    v1534.bezierCurveTo(p1171 * 53, p1171 * 72, p1171 * 53, p1171 * 72, p1171 * 68, p1171 * 62);
    v1534.bezierCurveTo(p1171 * 68, p1171 * 52, p1171 * 68, p1171 * 52, p1171 * 68, p1171 * 42);
    v1534.bezierCurveTo(p1171 * 59.5, p1171 * 35.5, p1171 * 59.5, p1171 * 35.5, p1171 * 51, p1171 * 29);
    v1534.bezierCurveTo(p1171 * 39.5, p1171 * 32, p1171 * 39.5, p1171 * 32, p1171 * 28, p1171 * 35);
    v1534.bezierCurveTo(p1171 * 25, p1171 * 52, p1171 * 25, p1171 * 52, p1171 * 22, p1171 * 69);
    v1534.closePath();
    f89(v1534, undefined, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 5, p1171 * 89);
    v1534.bezierCurveTo(p1171 * 20, p1171 * 73, p1171 * 12.5, p1171 * 80.5, p1171 * 20, p1171 * 72);
    v1534.closePath();
    f89(v1534, vVUndefined, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 35, p1171 * 102);
    v1534.bezierCurveTo(p1171 * 36, p1171 * 92.5, p1171 * 36, p1171 * 92.5, p1171 * 37, p1171 * 83);
    v1534.closePath();
    f89(v1534, undefined, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 68, p1171 * 62);
    v1534.bezierCurveTo(p1171 * 81, p1171 * 67.5, p1171 * 81, p1171 * 67.5, p1171 * 94, p1171 * 73);
    v1534.closePath();
    f89(v1534, vVUndefined15, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 70, p1171 * 41);
    v1534.bezierCurveTo(p1171 * 80, p1171 * 35.5, p1171 * 80, p1171 * 35.5, p1171 * 90, p1171 * 30);
    v1534.closePath();
    f89(v1534, vVVVVUndefined172, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 28, p1171 * 33);
    v1534.bezierCurveTo(p1171 * 21.5, p1171 * 26.5, p1171 * 21.5, p1171 * 26.5, p1171 * 15, p1171 * 20);
    v1534.closePath();
    f89(v1534, undefined, p1173[4], p1171 * 6);
    v1534.beginPath();
    v1534.lineCap = "round";
    v1534.lineJoin = "round";
    v1534.moveTo(p1171 * 51, p1171 * 28);
    v1534.bezierCurveTo(p1171 * 53, p1171 * 17, p1171 * 53, p1171 * 17, p1171 * 55, p1171 * 6);
    v1534.closePath();
    f89(v1534, vVVUndefined152, p1173[4], p1171 * 6);
    return v1533;
  }
  function f293(p1174, p1175, p1176) {
    var v1535 = document.createElement("canvas");
    var v1536 = v1535.getContext("2d");
    v1535.width = p1174 * 137;
    v1535.height = p1174 * 129;
    v1536.globalAlpha = 0.4;
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 42.000030517578125, p1174 * 41.17047119140625);
    v1536.bezierCurveTo(p1174 * 45.000030517578125, p1174 * 38.17047119140625, p1174 * 49.000030517578125, p1174 * 37.17047119140625, p1174 * 62.000030517578125, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 94.00003051757812, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 100.00003051757812, p1174 * 38.17047119140625, p1174 * 102.00003051757812, p1174 * 38.17047119140625, p1174 * 101.00003051757812, p1174 * 47.17047119140625);
    v1536.bezierCurveTo(p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 80.17047119140625);
    v1536.bezierCurveTo(p1174 * 102.00003051757812, p1174 * 84.17047119140625, p1174 * 100.00003051757812, p1174 * 86.17047119140625, p1174 * 95.00003051757812, p1174 * 88.17047119140625);
    v1536.bezierCurveTo(p1174 * 84.00003051757812, p1174 * 94.17047119140625, p1174 * 89.00003051757812, p1174 * 94.17047119140625, p1174 * 79.00003051757812, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 40.000030517578125, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 86.17047119140625);
    v1536.bezierCurveTo(p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 53.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 47.17047119140625, p1174 * 34.000030517578125, p1174 * 47.17047119140625, p1174 * 40.000030517578125, p1174 * 42.17047119140625);
    v1536.closePath();
    f89(v1536, vVUndefined14, p1176[2], p1174 * 40);
    v1536.globalAlpha = 0.4;
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 42.000030517578125, p1174 * 41.17047119140625);
    v1536.bezierCurveTo(p1174 * 45.000030517578125, p1174 * 38.17047119140625, p1174 * 49.000030517578125, p1174 * 37.17047119140625, p1174 * 62.000030517578125, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 94.00003051757812, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 100.00003051757812, p1174 * 38.17047119140625, p1174 * 102.00003051757812, p1174 * 38.17047119140625, p1174 * 101.00003051757812, p1174 * 47.17047119140625);
    v1536.bezierCurveTo(p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 80.17047119140625);
    v1536.bezierCurveTo(p1174 * 102.00003051757812, p1174 * 84.17047119140625, p1174 * 100.00003051757812, p1174 * 86.17047119140625, p1174 * 95.00003051757812, p1174 * 88.17047119140625);
    v1536.bezierCurveTo(p1174 * 84.00003051757812, p1174 * 94.17047119140625, p1174 * 89.00003051757812, p1174 * 94.17047119140625, p1174 * 79.00003051757812, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 40.000030517578125, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 86.17047119140625);
    v1536.bezierCurveTo(p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 53.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 47.17047119140625, p1174 * 34.000030517578125, p1174 * 47.17047119140625, p1174 * 40.000030517578125, p1174 * 42.17047119140625);
    v1536.closePath();
    f89(v1536, vVVUndefined142, p1176[1], p1174 * 20);
    v1536.globalAlpha = 0.8;
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 42.000030517578125, p1174 * 41.17047119140625);
    v1536.bezierCurveTo(p1174 * 45.000030517578125, p1174 * 38.17047119140625, p1174 * 49.000030517578125, p1174 * 37.17047119140625, p1174 * 62.000030517578125, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 94.00003051757812, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 100.00003051757812, p1174 * 38.17047119140625, p1174 * 102.00003051757812, p1174 * 38.17047119140625, p1174 * 101.00003051757812, p1174 * 47.17047119140625);
    v1536.bezierCurveTo(p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 80.17047119140625);
    v1536.bezierCurveTo(p1174 * 102.00003051757812, p1174 * 84.17047119140625, p1174 * 100.00003051757812, p1174 * 86.17047119140625, p1174 * 95.00003051757812, p1174 * 88.17047119140625);
    v1536.bezierCurveTo(p1174 * 84.00003051757812, p1174 * 94.17047119140625, p1174 * 89.00003051757812, p1174 * 94.17047119140625, p1174 * 79.00003051757812, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 40.000030517578125, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 86.17047119140625);
    v1536.bezierCurveTo(p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 53.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 47.17047119140625, p1174 * 34.000030517578125, p1174 * 47.17047119140625, p1174 * 40.000030517578125, p1174 * 42.17047119140625);
    v1536.closePath();
    f89(v1536, p1176[0], p1176[1], p1174 * 4);
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 51.000030517578125, p1174 * 37.9886474609375);
    v1536.bezierCurveTo(p1174 * 51.000030517578125, p1174 * 61.9886474609375, p1174 * 51.000030517578125, p1174 * 61.9886474609375, p1174 * 51.000030517578125, p1174 * 85.9886474609375);
    v1536.bezierCurveTo(p1174 * 75.50003051757812, p1174 * 85.9886474609375, p1174 * 75.50003051757812, p1174 * 85.9886474609375, p1174 * 100.00003051757812, p1174 * 85.9886474609375);
    v1536.bezierCurveTo(p1174 * 100.00003051757812, p1174 * 61.9886474609375, p1174 * 100.00003051757812, p1174 * 61.9886474609375, p1174 * 100.00003051757812, p1174 * 37.9886474609375);
    v1536.bezierCurveTo(p1174 * 76.00003051757812, p1174 * 37.9886474609375, p1174 * 76.00003051757812, p1174 * 37.9886474609375, p1174 * 52.000030517578125, p1174 * 37.9886474609375);
    v1536.closePath();
    f89(v1536, p1176[1], p1176[2], p1174 * 4);
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 99.00003051757812, p1174 * 38.9886474609375);
    v1536.bezierCurveTo(p1174 * 93.50003051757812, p1174 * 44.9886474609375, p1174 * 93.50003051757812, p1174 * 44.9886474609375, p1174 * 88.00003051757812, p1174 * 50.9886474609375);
    v1536.bezierCurveTo(p1174 * 88.00003051757812, p1174 * 72.4886474609375, p1174 * 88.00003051757812, p1174 * 72.4886474609375, p1174 * 88.00003051757812, p1174 * 93.9886474609375);
    v1536.bezierCurveTo(p1174 * 94.00003051757812, p1174 * 90.4886474609375, p1174 * 94.00003051757812, p1174 * 90.4886474609375, p1174 * 100.00003051757812, p1174 * 86.9886474609375);
    v1536.closePath();
    f89(v1536, p1176[1], p1176[2], p1174 * 4);
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 87.00003051757812, p1174 * 49.625);
    v1536.bezierCurveTo(p1174 * 61.000030517578125, p1174 * 49.625, p1174 * 61.000030517578125, p1174 * 49.625, p1174 * 35.000030517578125, p1174 * 49.625);
    v1536.bezierCurveTo(p1174 * 35.000030517578125, p1174 * 70.625, p1174 * 35.000030517578125, p1174 * 70.625, p1174 * 35.000030517578125, p1174 * 91.625);
    v1536.bezierCurveTo(p1174 * 60.500030517578125, p1174 * 91.625, p1174 * 60.500030517578125, p1174 * 91.625, p1174 * 86.00003051757812, p1174 * 91.625);
    v1536.bezierCurveTo(p1174 * 86.50003051757812, p1174 * 70.625, p1174 * 86.50003051757812, p1174 * 70.625, p1174 * 87.00003051757812, p1174 * 49.625);
    v1536.closePath();
    f89(v1536, p1176[1], p1176[3], p1174 * 4);
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 47.000030517578125, p1174 * 36.625);
    v1536.bezierCurveTo(p1174 * 73.00003051757812, p1174 * 37.125, p1174 * 73.00003051757812, p1174 * 37.125, p1174 * 99.00003051757812, p1174 * 37.625);
    v1536.bezierCurveTo(p1174 * 93.50003051757812, p1174 * 44.125, p1174 * 93.50003051757812, p1174 * 44.125, p1174 * 88.00003051757812, p1174 * 50.625);
    v1536.bezierCurveTo(p1174 * 60.500030517578125, p1174 * 50.125, p1174 * 60.500030517578125, p1174 * 50.125, p1174 * 33.000030517578125, p1174 * 49.625);
    v1536.closePath();
    f89(v1536, p1176[1], p1176[3], p1174 * 4);
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 53.000030517578125, p1174 * 52.625);
    v1536.bezierCurveTo(p1174 * 40.000030517578125, p1174 * 54.625, p1174 * 39.000030517578125, p1174 * 59.625, p1174 * 40.000030517578125, p1174 * 67.625);
    v1536.bezierCurveTo(p1174 * 45.000030517578125, p1174 * 59.625, p1174 * 48.000030517578125, p1174 * 58.625, p1174 * 54.000030517578125, p1174 * 53.625);
    v1536.closePath();
    f89(v1536, p1176[3]);
    v1536.globalAlpha = 1;
    v1536.beginPath();
    v1536.lineCap = "round";
    v1536.lineJoin = "round";
    v1536.moveTo(p1174 * 42.000030517578125, p1174 * 41.17047119140625);
    v1536.bezierCurveTo(p1174 * 45.000030517578125, p1174 * 38.17047119140625, p1174 * 49.000030517578125, p1174 * 37.17047119140625, p1174 * 62.000030517578125, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 78.00003051757812, p1174 * 38.17047119140625, p1174 * 94.00003051757812, p1174 * 38.17047119140625);
    v1536.bezierCurveTo(p1174 * 100.00003051757812, p1174 * 38.17047119140625, p1174 * 102.00003051757812, p1174 * 38.17047119140625, p1174 * 101.00003051757812, p1174 * 47.17047119140625);
    v1536.bezierCurveTo(p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 63.67047119140625, p1174 * 101.00003051757812, p1174 * 80.17047119140625);
    v1536.bezierCurveTo(p1174 * 102.00003051757812, p1174 * 84.17047119140625, p1174 * 100.00003051757812, p1174 * 86.17047119140625, p1174 * 95.00003051757812, p1174 * 88.17047119140625);
    v1536.bezierCurveTo(p1174 * 84.00003051757812, p1174 * 94.17047119140625, p1174 * 89.00003051757812, p1174 * 94.17047119140625, p1174 * 79.00003051757812, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 59.500030517578125, p1174 * 94.17047119140625, p1174 * 40.000030517578125, p1174 * 94.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 94.17047119140625, p1174 * 34.000030517578125, p1174 * 86.17047119140625);
    v1536.bezierCurveTo(p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 69.67047119140625, p1174 * 34.000030517578125, p1174 * 53.17047119140625);
    v1536.bezierCurveTo(p1174 * 33.000030517578125, p1174 * 47.17047119140625, p1174 * 34.000030517578125, p1174 * 47.17047119140625, p1174 * 40.000030517578125, p1174 * 42.17047119140625);
    v1536.closePath();
    f89(v1536, vVUndefined14, p1176[3], p1174 * 4);
    return v1535;
  }
  function f294(p1177, p1178) {
    var v1537 = document.createElement("canvas");
    var v1538 = v1537.getContext("2d");
    v1537.width = p1177 * 85;
    v1537.height = p1177 * 145;
    v1538.translate(p1177 * -165, p1177 * -95);
    v1538.beginPath();
    v1538.lineCap = "round";
    v1538.lineJoin = "round";
    v1538.moveTo(p1177 * 217, p1177 * 103);
    v1538.bezierCurveTo(p1177 * 209, p1177 * 129, p1177 * 203, p1177 * 137, p1177 * 195, p1177 * 146);
    v1538.bezierCurveTo(p1177 * 195, p1177 * 159, p1177 * 194, p1177 * 167, p1177 * 189, p1177 * 178);
    v1538.bezierCurveTo(p1177 * 193, p1177 * 186, p1177 * 196, p1177 * 195, p1177 * 198, p1177 * 216);
    v1538.bezierCurveTo(p1177 * 217.5, p1177 * 189.5, p1177 * 217.5, p1177 * 189.5, p1177 * 237, p1177 * 163);
    v1538.closePath();
    f89(v1538, p1178[1]);
    v1538.beginPath();
    v1538.lineCap = "round";
    v1538.lineJoin = "round";
    v1538.moveTo(p1177 * 231, p1177 * 163);
    v1538.bezierCurveTo(p1177 * 221, p1177 * 139, p1177 * 218, p1177 * 128, p1177 * 215, p1177 * 114);
    v1538.bezierCurveTo(p1177 * 213, p1177 * 102, p1177 * 220, p1177 * 92, p1177 * 222, p1177 * 107);
    v1538.bezierCurveTo(p1177 * 224, p1177 * 118, p1177 * 233, p1177 * 138, p1177 * 244, p1177 * 161);
    v1538.bezierCurveTo(p1177 * 235, p1177 * 188, p1177 * 224, p1177 * 198, p1177 * 204, p1177 * 221);
    v1538.bezierCurveTo(p1177 * 190, p1177 * 233, p1177 * 190, p1177 * 235, p1177 * 180, p1177 * 235);
    v1538.bezierCurveTo(p1177 * 167, p1177 * 235, p1177 * 164, p1177 * 216, p1177 * 175, p1177 * 211);
    v1538.bezierCurveTo(p1177 * 176, p1177 * 208, p1177 * 181, p1177 * 207, p1177 * 191, p1177 * 205);
    v1538.bezierCurveTo(p1177 * 213, p1177 * 186, p1177 * 218, p1177 * 180, p1177 * 230, p1177 * 163);
    v1538.closePath();
    f89(v1538, p1178[2], p1178[3], p1177 * 4);
    v1538.beginPath();
    v1538.lineCap = "round";
    v1538.lineJoin = "round";
    v1538.moveTo(p1177 * 234, p1177 * 154);
    v1538.bezierCurveTo(p1177 * 227, p1177 * 156, p1177 * 222, p1177 * 156, p1177 * 199, p1177 * 148);
    v1538.bezierCurveTo(p1177 * 201, p1177 * 151, p1177 * 216, p1177 * 159, p1177 * 224, p1177 * 162);
    v1538.bezierCurveTo(p1177 * 209, p1177 * 169.5, p1177 * 209, p1177 * 169.5, p1177 * 194, p1177 * 177);
    v1538.bezierCurveTo(p1177 * 213.5, p1177 * 175, p1177 * 213.5, p1177 * 175, p1177 * 233, p1177 * 173);
    v1538.closePath();
    f89(v1538, p1178[2]);
    return v1537;
  }
  function f295(p1179, p1180, p1181) {
    var v1539 = document.createElement("canvas");
    var v1540 = v1539.getContext("2d");
    v1539.width = p1179 * 80;
    v1539.height = p1179 * 160;
    v1540.globalAlpha = p1180 ? 0.5 : 1;
    v1540.translate(p1179 * 5, p1179 * 5);
    v1540.save();
    f90(v1540, p1179 * 33, p1179 * 53, p1179 * 10, p1179 * 98, p1179 * 10);
    f89(v1540, p1181[0]);
    v1540.beginPath();
    v1540.lineCap = "round";
    v1540.lineJoin = "round";
    v1540.translate(p1179 * -150, p1179 * -100);
    v1540.moveTo(p1179 * 167.5, p1179 * 171.0625);
    v1540.bezierCurveTo(p1179 * 188, p1179 * 171.0625, p1179 * 188, p1179 * 171.0625, p1179 * 208.5, p1179 * 171.0625);
    v1540.bezierCurveTo(p1179 * 208.5, p1179 * 156.0625, p1179 * 208.5, p1179 * 156.0625, p1179 * 208.5, p1179 * 141.0625);
    v1540.bezierCurveTo(p1179 * 203.5, p1179 * 113.0625, p1179 * 179.5, p1179 * 96.0625, p1179 * 167.5, p1179 * 141.0625);
    v1540.closePath();
    f89(v1540, p1181[0]);
    v1540.restore();
    v1540.globalAlpha = 1;
    v1540.translate(p1179 * -5, p1179 * -5);
    v1540.save();
    f90(v1540, p1179 * 33, p1179 * 53, p1179 * 10, p1179 * 98, p1179 * 10);
    f89(v1540, p1181[1], p1181[2], p1179 * 4);
    v1540.beginPath();
    v1540.lineCap = "round";
    v1540.lineJoin = "round";
    v1540.translate(p1179 * -150, p1179 * -100);
    v1540.moveTo(p1179 * 167.5, p1179 * 171.0625);
    v1540.bezierCurveTo(p1179 * 188, p1179 * 171.0625, p1179 * 188, p1179 * 171.0625, p1179 * 208.5, p1179 * 171.0625);
    v1540.bezierCurveTo(p1179 * 208.5, p1179 * 156.0625, p1179 * 208.5, p1179 * 156.0625, p1179 * 208.5, p1179 * 141.0625);
    v1540.bezierCurveTo(p1179 * 203.5, p1179 * 113.0625, p1179 * 179.5, p1179 * 96.0625, p1179 * 167.5, p1179 * 141.0625);
    v1540.closePath();
    f89(v1540, p1181[3], p1181[4], p1179 * 4);
    v1540.beginPath();
    v1540.lineCap = "round";
    v1540.lineJoin = "round";
    v1540.translate(p1179 * 0, p1179 * 1);
    v1540.moveTo(p1179 * 180.5, p1179 * 169.0625);
    v1540.bezierCurveTo(p1179 * 180.5, p1179 * 157.5625, p1179 * 180.5, p1179 * 157.5625, p1179 * 180.5, p1179 * 146.0625);
    v1540.bezierCurveTo(p1179 * 181.5, p1179 * 134.0625, p1179 * 193.5, p1179 * 129.0625, p1179 * 196.5, p1179 * 146.0625);
    v1540.bezierCurveTo(p1179 * 196.5, p1179 * 157.5625, p1179 * 196.5, p1179 * 157.5625, p1179 * 196.5, p1179 * 169.0625);
    v1540.closePath();
    f89(v1540, p1181[5]);
    v1540.restore();
    return v1539;
  }
  function f296(p1182, p1183, p1184) {
    var v1541 = document.createElement("canvas");
    var v1542 = v1541.getContext("2d");
    v1541.width = p1182 * 161;
    v1541.height = p1182 * 184;
    v1542.translate(0, p1182 * 10);
    v1542.globalAlpha = 1;
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 105.5, p1182 * 34.609375);
    v1542.bezierCurveTo(p1182 * 48.5, p1182 * 7.609375, p1182 * 11.5, p1182 * 58.609375, p1182 * 20.5, p1182 * 97.609375);
    v1542.bezierCurveTo(p1182 * 44.5, p1182 * 161.609375, p1182 * 70.5, p1182 * 171.609375, p1182 * 88.5, p1182 * 156.609375);
    v1542.bezierCurveTo(p1182 * 120.5, p1182 * 129.609375, p1182 * 123.5, p1182 * 105.609375, p1182 * 128.5, p1182 * 83.609375);
    v1542.bezierCurveTo(p1182 * 137.5, p1182 * 79.609375, p1182 * 141.5, p1182 * 79.609375, p1182 * 146.5, p1182 * 81.609375);
    v1542.bezierCurveTo(p1182 * 153.5, p1182 * 70.609375, p1182 * 151.5, p1182 * 65.609375, p1182 * 148.5, p1182 * 61.609375);
    v1542.bezierCurveTo(p1182 * 134.5, p1182 * 60.609375, p1182 * 131.5, p1182 * 63.609375, p1182 * 127.5, p1182 * 66.609375);
    v1542.bezierCurveTo(p1182 * 127.5, p1182 * 55.609375, p1182 * 125.5, p1182 * 54.609375, p1182 * 120.5, p1182 * 51.609375);
    v1542.bezierCurveTo(p1182 * 128.5, p1182 * 42.609375, p1182 * 136.5, p1182 * 38.609375, p1182 * 147.5, p1182 * 39.609375);
    v1542.bezierCurveTo(p1182 * 152.5, p1182 * 23.609375, p1182 * 147.5, p1182 * 21.609375, p1182 * 140.5, p1182 * 17.609375);
    v1542.bezierCurveTo(p1182 * 120.5, p1182 * 17.609375, p1182 * 114.5, p1182 * 27.609375, p1182 * 106.5, p1182 * 35.609375);
    v1542.closePath();
    f89(v1542, p1184[0]);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 45.5, p1182 * 144.609375);
    v1542.bezierCurveTo(p1182 * 35.5, p1182 * 155.609375, p1182 * 37, p1182 * 152.109375, p1182 * 28.5, p1182 * 159.609375);
    v1542.bezierCurveTo(p1182 * 16.5, p1182 * 154.609375, p1182 * 16.5, p1182 * 151.609375, p1182 * 17.5, p1182 * 141.609375);
    v1542.bezierCurveTo(p1182 * 25.5, p1182 * 134.109375, p1182 * 25.5, p1182 * 134.109375, p1182 * 33.5, p1182 * 126.609375);
    f89(v1542, p1184[0]);
    v1542.translate(0, p1182 * -10);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 45.5, p1182 * 144.609375);
    v1542.bezierCurveTo(p1182 * 35.5, p1182 * 155.609375, p1182 * 37, p1182 * 152.109375, p1182 * 28.5, p1182 * 159.609375);
    v1542.bezierCurveTo(p1182 * 16.5, p1182 * 154.609375, p1182 * 16.5, p1182 * 151.609375, p1182 * 17.5, p1182 * 141.609375);
    v1542.bezierCurveTo(p1182 * 25.5, p1182 * 134.109375, p1182 * 25.5, p1182 * 134.109375, p1182 * 33.5, p1182 * 126.609375);
    f89(v1542, p1184[1], p1184[2], p1182 * 8);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 105.5, p1182 * 34.609375);
    v1542.bezierCurveTo(p1182 * 48.5, p1182 * 7.609375, p1182 * 11.5, p1182 * 58.609375, p1182 * 20.5, p1182 * 97.609375);
    v1542.bezierCurveTo(p1182 * 44.5, p1182 * 161.609375, p1182 * 70.5, p1182 * 171.609375, p1182 * 88.5, p1182 * 156.609375);
    v1542.bezierCurveTo(p1182 * 120.5, p1182 * 129.609375, p1182 * 123.5, p1182 * 105.609375, p1182 * 128.5, p1182 * 83.609375);
    v1542.bezierCurveTo(p1182 * 137.5, p1182 * 79.609375, p1182 * 141.5, p1182 * 79.609375, p1182 * 146.5, p1182 * 81.609375);
    v1542.bezierCurveTo(p1182 * 153.5, p1182 * 70.609375, p1182 * 151.5, p1182 * 65.609375, p1182 * 148.5, p1182 * 61.609375);
    v1542.bezierCurveTo(p1182 * 134.5, p1182 * 60.609375, p1182 * 131.5, p1182 * 63.609375, p1182 * 127.5, p1182 * 66.609375);
    v1542.bezierCurveTo(p1182 * 127.5, p1182 * 55.609375, p1182 * 125.5, p1182 * 54.609375, p1182 * 120.5, p1182 * 51.609375);
    v1542.bezierCurveTo(p1182 * 128.5, p1182 * 42.609375, p1182 * 136.5, p1182 * 38.609375, p1182 * 147.5, p1182 * 39.609375);
    v1542.bezierCurveTo(p1182 * 152.5, p1182 * 23.609375, p1182 * 147.5, p1182 * 21.609375, p1182 * 140.5, p1182 * 17.609375);
    v1542.bezierCurveTo(p1182 * 120.5, p1182 * 17.609375, p1182 * 114.5, p1182 * 27.609375, p1182 * 106.5, p1182 * 35.609375);
    v1542.closePath();
    f89(v1542, p1184[1], p1184[2], p1182 * 8);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 104.5, p1182 * 35.609375);
    v1542.bezierCurveTo(p1182 * 71.5, p1182 * 36.609375, p1182 * 57.5, p1182 * 52.609375, p1182 * 58.5, p1182 * 81.609375);
    v1542.bezierCurveTo(p1182 * 59.5, p1182 * 103.609375, p1182 * 66.5, p1182 * 107.609375, p1182 * 66.5, p1182 * 116.609375);
    v1542.bezierCurveTo(p1182 * 67.5, p1182 * 128.609375, p1182 * 65.5, p1182 * 131.609375, p1182 * 63.5, p1182 * 137.609375);
    f89(v1542, undefined, p1184[2], p1182 * 8);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 59.5, p1182 * 72.609375);
    v1542.bezierCurveTo(p1182 * 38.5, p1182 * 80.609375, p1182 * 43.5, p1182 * 81.609375, p1182 * 37.5, p1182 * 89.609375);
    f89(v1542, vVVUndefined142, p1184[2], p1182 * 4);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 60.5, p1182 * 85.609375);
    v1542.bezierCurveTo(p1182 * 75.5, p1182 * 91.609375, p1182 * 76.5, p1182 * 96.609375, p1182 * 81.5, p1182 * 104.609375);
    f89(v1542, undefined, p1184[2], p1182 * 4);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 68.5, p1182 * 122.609375);
    v1542.bezierCurveTo(p1182 * 79.5, p1182 * 130.609375, p1182 * 74.5, p1182 * 128.609375, p1182 * 80.5, p1182 * 134.609375);
    f89(v1542, p1184[1], p1184[2], p1182 * 4);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 142.5, p1182 * 18.609375);
    v1542.bezierCurveTo(p1182 * 151.5, p1182 * 28.609375, p1182 * 151.5, p1182 * 32.609375, p1182 * 146.5, p1182 * 40.609375);
    v1542.bezierCurveTo(p1182 * 137.5, p1182 * 26.609375, p1182 * 138.5, p1182 * 24.609375, p1182 * 142.5, p1182 * 19.609375);
    v1542.closePath();
    f89(v1542, p1184[3]);
    v1542.beginPath();
    v1542.lineCap = "round";
    v1542.lineJoin = "round";
    v1542.moveTo(p1182 * 146.5, p1182 * 61.50892639160156);
    v1542.bezierCurveTo(p1182 * 157.5, p1182 * 69.50892639160156, p1182 * 150.5, p1182 * 79.50892639160156, p1182 * 145.5, p1182 * 81.50892639160156);
    v1542.bezierCurveTo(p1182 * 140.5, p1182 * 65.50892639160156, p1182 * 144.5, p1182 * 64.50892639160156, p1182 * 146.5, p1182 * 62.50892639160156);
    v1542.closePath();
    f89(v1542, p1184[3]);
    return v1541;
  }
  function f297(p1185, p1186, p1187) {
    var v1543 = document.createElement("canvas");
    var v1544 = v1543.getContext("2d");
    v1543.width = p1185 * 400;
    v1543.height = p1185 * 400;
    v1544.save();
    v1544.translate(p1185 * 204, p1185 * 195.0833282470703);
    v1544.rotate(10.16);
    f90(v1544, p1185 * -97.5, p1185 * -134.5, p1185 * 195, p1185 * 269, p1185 * 10);
    v1544.restore();
    f89(v1544, p1187[0], p1187[1], p1185 * 8);
    v1544.beginPath();
    v1544.lineCap = "round";
    v1544.lineJoin = "round";
    v1544.moveTo(p1185 * 58.5, p1185 * 226.5833282470703);
    v1544.bezierCurveTo(p1185 * 120.5, p1185 * 281.5833282470703, p1185 * 120.5, p1185 * 281.5833282470703, p1185 * 182.5, p1185 * 336.5833282470703);
    v1544.bezierCurveTo(p1185 * 263, p1185 * 248.5833282470703, p1185 * 263, p1185 * 248.5833282470703, p1185 * 343.5, p1185 * 160.5833282470703);
    v1544.bezierCurveTo(p1185 * 280.5, p1185 * 104.58332824707031, p1185 * 280.5, p1185 * 104.58332824707031, p1185 * 217.5, p1185 * 48.58332824707031);
    v1544.closePath();
    f89(v1544, p1187[2], p1187[3], p1185 * 4);
    v1544.save();
    v1544.translate(p1185 * 197, p1185 * 169.0833282470703);
    v1544.rotate(10.16);
    f90(v1544, p1185 * -93.5, p1185 * -126.5, p1185 * 187, p1185 * 253, p1185 * 10);
    v1544.restore();
    f89(v1544, p1187[4], p1187[1], p1185 * 8);
    v1544.beginPath();
    v1544.lineCap = "round";
    v1544.lineJoin = "round";
    v1544.moveTo(p1185 * 226.5, p1185 * 24.583328247070312);
    v1544.bezierCurveTo(p1185 * 58.5, p1185 * 207.5833282470703, p1185 * 143, p1185 * 116.58332824707031, p1185 * 59.5, p1185 * 208.5833282470703);
    v1544.closePath();
    f89(v1544, vUndefined, p1187[1], p1185 * 8);
    v1544.beginPath();
    v1544.lineCap = "round";
    v1544.lineJoin = "round";
    v1544.moveTo(p1185 * 46.133331298828125, p1185 * 202.64999389648438);
    v1544.bezierCurveTo(p1185 * 46.133331298828125, p1185 * 215.64999389648438, p1185 * 46.133331298828125, p1185 * 215.64999389648438, p1185 * 46.133331298828125, p1185 * 228.64999389648438);
    v1544.closePath();
    f89(v1544, p1187[4], p1187[1], p1185 * 8);
    v1544.beginPath();
    v1544.lineCap = "round";
    v1544.lineJoin = "round";
    v1544.moveTo(p1185 * 55.133331298828125, p1185 * 211.64999389648438);
    v1544.bezierCurveTo(p1185 * 55.133331298828125, p1185 * 225.14999389648438, p1185 * 55.133331298828125, p1185 * 225.14999389648438, p1185 * 55.133331298828125, p1185 * 238.64999389648438);
    v1544.bezierCurveTo(p1185 * 50.133331298828125, p1185 * 235.64999389648438, p1185 * 50.133331298828125, p1185 * 235.64999389648438, p1185 * 45.133331298828125, p1185 * 232.64999389648438);
    v1544.bezierCurveTo(p1185 * 45.133331298828125, p1185 * 216.64999389648438, p1185 * 45.133331298828125, p1185 * 216.64999389648438, p1185 * 45.133331298828125, p1185 * 200.64999389648438);
    v1544.closePath();
    f89(v1544, p1187[4], p1187[1], p1185 * 8);
    v1544.beginPath();
    v1544.lineCap = "round";
    v1544.lineJoin = "round";
    v1544.moveTo(p1185 * 46.133331298828125, p1185 * 198.39999389648438);
    v1544.bezierCurveTo(p1185 * 46.133331298828125, p1185 * 199.89999389648438, p1185 * 46.133331298828125, p1185 * 199.89999389648438, p1185 * 46.133331298828125, p1185 * 201.39999389648438);
    v1544.closePath();
    f89(v1544, p1187[4], p1187[1], p1185 * 8);
    v1544.save();
    v1544.translate(p1185 * 249.63333129882812, p1185 * 120.89999389648438);
    v1544.rotate(7.04);
    f90(v1544, p1185 * -58.5, p1185 * -32, p1185 * 117, p1185 * 64, p1185 * 10);
    v1544.restore();
    f89(v1544, p1187[5]);
    return v1543;
  }
  function f298() {
    if (!v2860.ᐃᐃᐃᐃ.open && !v2860.ᐃΔⵠᐃᐃ.open && !v2860.Ⲇᐃⵠⵠ.open && !v2860.ⵠΔᐃⵠ.open) {
      v2860.ⵠᐃⲆΔ.open = false;
      var v1545 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1546 = 100;
      if (v1545) {
        for (var v1547 = 0; v1547 < v2859.ⲆⵠΔ[43].length; v1547++) {
          var v1548 = v2859.ⲆⵠΔ[43][v1547];
          var v1549 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1548, v1545);
          if (v1546 > v1549) {
            v1546 = v1549;
            v2860.ⵠᐃⲆΔ.open = vVVVV12232;
            v2860.ⵠᐃⲆΔ.ΔᐃⲆΔΔᐃⲆ = v1548.info & 31;
            v2860.ⵠᐃⲆΔ.ΔᐃⲆᐃΔⲆⲆ = (v1548.info & 992) >> 5;
            v2860.ⵠᐃⲆΔ.ᐃᐃⲆᐃᐃᐃᐃ = (v1548.info & 31744) >> 10;
            v2860.ⵠᐃⲆΔ.ΔⲆⲆᐃ = v1548.ΔⲆⲆᐃ;
            v2860.ⵠᐃⲆΔ.ΔᐃᐃΔⵠ = v1548.id;
          }
        }
        if (v1546 < 100) {
          var v1550 = ⵠΔ[971];
          var v1551 = (v1552 = v3057.ᐃᐃⲆᐃΔᐃⲆ).info.translate.x - 32;
          f302(v407, v1550, v1551, 0);
          if (v2860.ⵠᐃⲆΔ.ΔᐃⲆΔΔᐃⲆ > 0) {
            v1552.ⲆⵠⲆᐃ(v407);
            if ((v1553 = v2860.ⵠᐃⲆΔ.ΔᐃⲆΔΔᐃⲆ) > 1) {
              f312(v1553, v1552);
            }
          }
          var v1552 = v3057.ⵠⵠΔⲆᐃᐃⵠ;
          if (v2860.ⵠᐃⲆΔ.ᐃᐃⲆᐃᐃᐃᐃ > 0) {
            v1552.ⲆⵠⲆᐃ(v407);
            if ((v1553 = v2860.ⵠᐃⲆΔ.ᐃᐃⲆᐃᐃᐃᐃ) > 1) {
              f312(v1553, v1552);
            }
          }
          var v1553;
          v1552 = v3057.ⲆⵠⲆΔᐃΔΔ;
          if (v2860.ⵠᐃⲆΔ.ΔᐃⲆᐃΔⲆⲆ > 0) {
            v1552.ⲆⵠⲆᐃ(v407);
            if ((v1553 = v2860.ⵠᐃⲆΔ.ΔᐃⲆᐃΔⲆⲆ) > 1) {
              f312(v1553, v1552);
            }
          }
        }
      }
    }
  }
  function f299() {
    if (v2860.ΔⲆⵠⵠⲆΔⵠ) {
      v407.globalAlpha = 0.5;
      v407.fillStyle = "#000";
      v407.fillRect(0, 0, v408, v410);
      v407.globalAlpha = 0.8;
      var v1554 = ⵠΔ[654][v2859.time];
      var v1555 = v411 - v1554.width / 2;
      var v1556 = v412 - v1554.height / 2;
      f302(v407, v1554, v1555, v1556);
      v407.globalAlpha = 1;
      if (v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.x > -1) {
        v407.fillStyle = "#660000";
        f94(v407, v1555 + v414 * (v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.x * 3), v1556 + v414 * (v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.y * 3), v414 * 14);
        v407.fill();
      }
      for (var v1557 = v3057.ΔᐃⵠΔΔ.ⵠⲆⵠⲆ, v1558 = 0; v1558 < v1557.length; v1558++) {
        var v1559 = v1557[v1558];
        v2859.time;
        v407.fillStyle = "#ff0000";
        f94(v407, v1555 + v1559.x / (v2859.ⲆᐃᐃⲆΔ * 100) * 600 * v414, v1556 + v414 * (v1559.y / (v2859.ⵠΔᐃΔⲆ * 100) * 600), v414 * 6);
        v407.fill();
      }
      var v1560 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      if (v1560) {
        v407.fillStyle = v2859.time ? "#fff" : "#e39716";
        f94(v407, v1555 + v414 * (v1560.x / (v2859.ⲆᐃᐃⲆΔ * 100) * 600), v1556 + v1560.y / (v2859.ⵠΔᐃΔⲆ * 100) * 600 * v414, v414 * 12);
        v407.fill();
      }
    }
  }
  function f300() {
    if (!v2860.ᐃᐃᐃᐃ.open) {
      v2860.ᐃΔⵠᐃᐃ.ᐃΔΔⲆ = 0;
      v2860.ᐃΔⵠᐃᐃ.open = false;
      var v1561 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1562 = 100;
      if (v1561) {
        for (var v1563 = 0; v1563 < v2859.ⲆⵠΔ[18].length; v1563++) {
          var v1564 = v2859.ⲆⵠΔ[18][v1563];
          var v1565 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1564, v1561);
          if (v1562 > v1565) {
            v1562 = v1565;
            v2860.ᐃΔⵠᐃᐃ.open = true;
            v2860.ᐃΔⵠᐃᐃ.ᐃΔΔⲆ = v1564.info;
            v2860.ᐃΔⵠᐃᐃ.ΔⲆⲆᐃ = v1564.ΔⲆⲆᐃ;
            v2860.ᐃΔⵠᐃᐃ.ΔᐃᐃΔⵠ = v1564.id;
          }
        }
        if (v1562 < 100) {
          var v1566 = ⵠΔ[522];
          var v1567 = v3057.ΔⵠᐃΔⵠⵠΔ;
          var v1568 = Math.floor(v1567.info.translate.x + (v1567.info.ⵠⵠ[0].width - v1566.width) / 2);
          var v1569 = Math.floor(v1567.info.translate.y + (v1567.info.ⵠⵠ[0].height - v1566.height) / 2) + 3;
          f302(v407, v1566, v1568, v1569);
          if (v2860.ᐃΔⵠᐃᐃ.ᐃΔΔⲆ > 0) {
            v1567.ⲆⵠⲆᐃ(v407);
            var v1570 = v2860.ᐃΔⵠᐃᐃ.ᐃΔΔⲆ;
            if (v1570 > 1) {
              f312(v1570, v1567);
            }
          }
        }
      }
    }
  }
  function f301() {
    v2860.ᐃᐃᐃᐃ.id = -1;
    v2860.ᐃᐃᐃᐃ.lock = vVV162;
    v2860.ᐃᐃᐃᐃ.locked = vVVVVV1623;
    v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ = false;
    v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ = false;
    v2860.ᐃᐃᐃᐃ.open = false;
    var v1571 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
    var v1572 = 100;
    if (v1571) {
      for (var v1573 = 0; v2859.ⲆⵠΔ[11].length > v1573; v1573++) {
        var v1574 = v2859.ⲆⵠΔ[11][v1573];
        var v1575 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1574, v1571);
        if (v1572 > v1575) {
          v1572 = v1575;
          v2860.ᐃᐃᐃᐃ.open = true;
          v2860.ᐃᐃᐃᐃ.id = v1574.action < 2 ? -1 : Math.floor((v1574.action - 1) / 2);
          v2860.ᐃᐃᐃᐃ.ᐃΔΔⲆ = v1574.info;
          v2860.ᐃᐃᐃᐃ.ΔⲆⲆᐃ = v1574.ΔⲆⲆᐃ;
          v2860.ᐃᐃᐃᐃ.ΔᐃᐃΔⵠ = v1574.id;
          v2860.ᐃᐃᐃᐃ.locked = v1574.lock;
          v2860.ᐃᐃᐃᐃ.lock = !!v1574.lock && v1574.ΔⲆⲆᐃ != v2860.id && !v2860.ᐃⵠᐃᐃⵠⲆⵠ(v1574.ΔⲆⲆᐃ) && vVVV122;
          v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ = v1574.ΔⲆⲆᐃ === v2860.id && !v2860.ᐃᐃᐃᐃ.locked && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(241) != -1;
          if (v2860.ᐃᐃᐃᐃ.locked && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(260) != -1) {
            v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ = true;
          }
        }
      }
      if (v1572 < 100) {
        var v1576 = ⵠΔ[450];
        var v1577 = v3057.ᐃΔⵠ[0];
        var v1578 = Math.floor(v1577.info.translate.x + (v1577.info.ⵠⵠ[0].width - v1576.width) / 2);
        var v1579 = Math.floor(v1577.info.translate.y + (v1577.info.ⵠⵠ[0].height - v1576.height) / 2) + 3;
        f302(v407, v1576, v1578, v1579);
        if ((!v2860.ᐃᐃᐃᐃ.lock || v2860.id === v2860.ᐃᐃᐃᐃ.ΔⲆⲆᐃ) && v2860.ᐃᐃᐃᐃ.id >= 0) {
          (v1577 = v3057.ᐃΔⵠ[v2860.ᐃᐃᐃᐃ.id]).ⲆⵠⲆᐃ(v407);
          var v1580 = v2860.ᐃᐃᐃᐃ.ᐃΔΔⲆ;
          if (v1580 > 1) {
            f312(v1580, v1577);
          }
        }
        if (v2860.ᐃᐃᐃᐃ.lock) {
          v3057.ⲆⲆΔᐃⲆΔⵠ.ⲆⵠⲆᐃ(v407);
        } else if (v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ) {
          v3057.ΔΔᐃᐃⵠⲆⲆ.ⲆⵠⲆᐃ(v407);
        }
        if (v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ) {
          v3057.ⲆΔⵠᐃⲆΔⵠ.ⲆⵠⲆᐃ(v407);
        }
      }
    }
  }
  function f302(p1188, p1189, p1190, p1191, p1192, p1193, p1194, p1195, p1196, p1197) {
    if (vVUndefined15 === p1189.ⵠΔⲆᐃΔᐃΔ || p1189.ⵠΔⲆᐃΔᐃΔ() === 1) {
      if (p1197 !== undefined) {
        p1188.drawImage(p1189, p1190, p1191, Math.max(1, p1192), Math.max(1, p1193), p1194, p1195, p1196, p1197);
      } else if (p1193 !== vVVUndefined18) {
        p1188.drawImage(p1189, p1190, p1191, p1192, p1193);
      } else {
        p1188.drawImage(p1189, p1190, p1191);
      }
    }
  }
  function f303() {
    if (!v2860.ᐃᐃᐃᐃ.open && !v2860.ᐃΔⵠᐃᐃ.open) {
      v2860.Ⲇᐃⵠⵠ.open = false;
      var v1581 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1582 = 100;
      if (v1581) {
        for (var v1583 = 0; v2859.ⲆⵠΔ[41].length > v1583; v1583++) {
          var v1584 = v2859.ⲆⵠΔ[41][v1583];
          var v1585 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1584, v1581);
          if (v1582 > v1585) {
            v1582 = v1585;
            v2860.Ⲇᐃⵠⵠ.open = true;
            v2860.Ⲇᐃⵠⵠ.ᐃᐃⲆᐃΔⲆΔ = v1584.info & 255;
            v2860.Ⲇᐃⵠⵠ.ΔᐃⲆᐃΔⲆⲆ = (v1584.info & 65280) >> 8;
            v2860.Ⲇᐃⵠⵠ.ΔⲆⲆᐃ = v1584.ΔⲆⲆᐃ;
            v2860.Ⲇᐃⵠⵠ.ΔᐃᐃΔⵠ = v1584.id;
          }
        }
        if (v1582 < 100) {
          var v1586 = ⵠΔ[874];
          var v1587 = (v1589 = v3057.ᐃⲆⲆⲆΔᐃⲆ).info.translate.x - 33;
          f302(v407, v1586, v1587, 0);
          if (v2860.Ⲇᐃⵠⵠ.ᐃᐃⲆᐃΔⲆΔ > 0) {
            v1589.ⲆⵠⲆᐃ(v407);
            if ((v1588 = v2860.Ⲇᐃⵠⵠ.ᐃᐃⲆᐃΔⲆΔ) > 1) {
              f312(v1588, v1589);
            }
          }
          var v1588;
          var v1589 = v3057.ⵠΔᐃᐃΔΔΔ;
          if (v2860.Ⲇᐃⵠⵠ.ΔᐃⲆᐃΔⲆⲆ > 0) {
            v1589.ⲆⵠⲆᐃ(v407);
            if ((v1588 = v2860.Ⲇᐃⵠⵠ.ΔᐃⲆᐃΔⲆⲆ) > 1) {
              f312(v1588, v1589);
            }
          }
        }
      }
    }
  }
  function f304() {
    v2860.ΔΔⲆⲆΔ.open = false;
    var v1590 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
    var v1591 = 100;
    if (v1590) {
      for (var v1592 = 0; v2859.ⲆⵠΔ[22].length > v1592; v1592++) {
        var v1593 = v2859.ⲆⵠΔ[22][v1592];
        var v1594 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1593, v1590);
        if (v1591 > v1594) {
          v1591 = v1594;
          v2860.ΔΔⲆⲆΔ.open = true;
          v2860.ΔΔⲆⲆΔ.ΔⲆⲆᐃ = v1593.ΔⲆⲆᐃ;
          v2860.ΔΔⲆⲆΔ.ΔᐃᐃΔⵠ = v1593.id;
        }
      }
      if (v1591 < 100) {
        v3057.ΔΔⲆⲆΔ.ⲆⵠⲆᐃ(v407);
      }
    }
  }
  function f305(p1198, p1199, p1200) {
    var v1595 = ⵠΔ[603][p1198];
    var v1596 = p1199.info.translate.x + v414 * 5;
    var v1597 = p1199.info.translate.y + v414 * 5;
    if (v2234 == p1199.info.state || p1200) {
      v1597 += v414 * 5;
    }
    f302(v407, v1595, v1596, v1597);
  }
  function f306() {
    var v1598 = v3057.ᐃⵠᐃᐃⵠ;
    var v1599 = v1598.id;
    if (v1598.ⵠᐃᐃⵠⲆ === 1 && v1598.display === 1) {
      if (ΔⲆⲆᐃⲆⵠⲆ[v1599] === vVVUndefined152) {
        ΔⲆⲆᐃⲆⵠⲆ[v1599] = function (p1201) {
          var v1600 = document.createElement("canvas");
          var v1601 = v1600.getContext("2d");
          var v1602 = v756[p1201];
          v1601.font = "20px Baloo Paaji";
          var v1603 = 0;
          if (v1602.length >= 1) {
            v1603 = Math.max(0, v1601.measureText(v1602[0]).width);
          }
          v1601.font = "17px Baloo Paaji";
          if (v1602.length >= 2) {
            v1603 = Math.max(v1603, v1601.measureText(v1602[1]).width);
          }
          v1601.font = "14px Baloo Paaji";
          v768 = 2;
          for (; v1602.length > v768; v768++) {
            v1603 = Math.max(v1603, v1601.measureText(v1602[v768]).width);
          }
          var v1604 = v1603 + 35;
          var v1605 = 0;
          v1605 = v1602.length === 1 ? 55 : v1602.length === 2 ? 85 : (v1602.length - 2) * 26 + 85;
          v1600.width = v1604;
          v1600.height = v1605;
          f90(v1601, 0, 0, v1604, v1605, 10);
          v1601.fillStyle = "#000000";
          v1601.globalAlpha = 0.5;
          v1601.fill();
          if (v1602.length >= 1) {
            v1601.textBaseline = "middle";
            v1601.font = "20px Baloo Paaji";
            v1601.globalAlpha = 1;
            v1601.fillStyle = "#e2c340";
            v1601.fillText(v1602[0], 15, 28);
          }
          if (v1602.length >= 2) {
            v1601.font = "17px Baloo Paaji";
            v1601.fillStyle = "#ffffff";
            v1601.fillText(v1602[1], 15, 55);
            v1605 = 55;
          }
          if (v1602.length >= 3) {
            v1601.font = "14px Baloo Paaji";
            v1601.globalAlpha = 0.7;
            v768 = 2;
            for (; v1602.length > v768; v768++) {
              v1601.fillText(v1602[v768], 15, v1605 + 28);
              v1605 += 26;
            }
          }
          return v1600;
        }(v1599);
      }
      if (v1598.ⵠⲆᐃᐃ === 1) {
        f302(v407, ΔⲆⲆᐃⲆⵠⲆ[v1599], v1598.x, v1598.y);
      } else if (v408 < v1598.x - 80 + ΔⲆⲆᐃⲆⵠⲆ[v1599].width) {
        f302(v407, ΔⲆⲆᐃⲆⵠⲆ[v1599], v408 - ΔⲆⲆᐃⲆⵠⲆ[v1599].width - 10, v1598.y - ΔⲆⲆᐃⲆⵠⲆ[v1599].height - 10);
      } else {
        f302(v407, ΔⲆⲆᐃⲆⵠⲆ[v1599], v1598.x - 80, v1598.y - ΔⲆⲆᐃⲆⵠⲆ[v1599].height - 10);
      }
    }
  }
  function f307() {
    if (!v2860.ᐃᐃᐃᐃ.open && !v2860.ᐃΔⵠᐃᐃ.open && !v2860.Ⲇᐃⵠⵠ.open && !v2860.ⵠᐃⲆΔ.open && !v2860.ⵠΔᐃⵠ.open) {
      v2860.sign.open = false;
      var v1606 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1607 = 100;
      if (v1606) {
        for (var v1608 = 0; v1608 < v2859.ⲆⵠΔ[45].length; v1608++) {
          var v1609 = v2859.ⲆⵠΔ[45][v1608];
          var v1610 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1609, v1606);
          if (v1610 < v1607 && v1609.info === 0 && v2860.id === v1609.ΔⲆⲆᐃ) {
            v2860.sign.open = true;
            v1607 = v1610;
            v2860.sign.ΔᐃᐃΔⵠ = v1609.id;
          }
        }
        if (v1607 < 100) {
          v3057.sign.button.ⲆⵠⲆᐃ(v407);
        }
      }
    }
  }
  function f308() {
    if (!v2860.ᐃᐃᐃᐃ.open && !v2860.ᐃΔⵠᐃᐃ.open) {
      v2860.ⵠΔᐃⵠ.open = false;
      var v1611 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1612 = 100;
      if (v1611) {
        for (var v1613 = 0; v2297.length > v1613; v1613++) {
          for (var v1614 = v2297[v1613][0], v1615 = v2297[v1613][1], v1616 = 0; v1616 < v2859.ⲆⵠΔ[v1614].length; v1616++) {
            var v1617 = v2859.ⲆⵠΔ[v1614][v1616];
            var v1618 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1617, v1611);
            if (v1618 < v1612) {
              v1612 = v1618;
              v2860.ⵠΔᐃⵠ.ΔⵠⲆᐃᐃⵠᐃ = v1615;
              v2860.ⵠΔᐃⵠ.type = v1614;
              v2860.ⵠΔᐃⵠ.open = true;
              v2860.ⵠΔᐃⵠ.ΔᐃⲆΔΔᐃⲆ = v1617.info & 255;
              v2860.ⵠΔᐃⵠ.ⵠᐃⵠᐃⲆΔⲆ = (v1617.info & 65280) >> 8;
              v2860.ⵠΔᐃⵠ.ΔⲆⲆᐃ = v1617.ΔⲆⲆᐃ;
              v2860.ⵠΔᐃⵠ.ΔᐃᐃΔⵠ = v1617.id;
            }
          }
        }
        if (v1612 < 100) {
          var v1619 = ⵠΔ[875];
          var v1620 = (v1622 = v3057.ΔΔⵠⵠΔᐃⵠ).info.translate.x - 33;
          f302(v407, v1619, v1620, 0);
          if (v2860.ⵠΔᐃⵠ.ΔᐃⲆΔΔᐃⲆ > 0) {
            v1622.ⲆⵠⲆᐃ(v407);
            var v1621 = v2860.ⵠΔᐃⵠ.ΔᐃⲆΔΔᐃⲆ;
            if (v1621 > 1) {
              f312(v1621, v1622);
            }
          }
          switch (v2860.ⵠΔᐃⵠ.ΔⵠⲆᐃᐃⵠᐃ) {
            case 199:
              var v1622 = v3057.ⲆⲆᐃⵠᐃⵠΔ;
              break;
            case 202:
              v1622 = v3057.ⵠⲆⵠⵠΔΔⲆ;
              break;
            case 203:
              v1622 = v3057.ⲆᐃⵠΔⲆⲆⵠ;
              break;
            case 212:
              v1622 = v3057.ᐃⲆⲆΔᐃⵠⲆ;
              break;
            case 304:
              v1622 = v3057.ⲆⲆΔⵠᐃⲆΔ;
              break;
            case 344:
              v1622 = v3057.ᐃⵠΔᐃᐃΔⲆ;
              break;
            case 306:
              v1622 = v3057.ⲆᐃΔᐃᐃΔⵠ;
              break;
            case 307:
              v1622 = v3057.ⵠⵠⵠΔⵠⵠⲆ;
              break;
            case 308:
              v1622 = v3057.ᐃᐃᐃΔΔⵠᐃ;
              break;
            case 309:
              v1622 = v3057.ΔⵠⲆⵠᐃⲆΔ;
              break;
            case 310:
              v1622 = v3057.ΔᐃⵠΔᐃⵠΔ;
              break;
            case 311:
              v1622 = v3057.ΔⲆᐃⵠⵠⲆⵠ;
              break;
            case 312:
              v1622 = v3057.ᐃΔⵠᐃΔⲆᐃ;
              break;
            case 313:
              v1622 = v3057.ⵠⵠᐃΔⵠⵠⲆ;
          }
          if (v2860.ⵠΔᐃⵠ.ⵠᐃⵠᐃⲆΔⲆ > 0) {
            v1622.ⲆⵠⲆᐃ(v407);
            if ((v1621 = v2860.ⵠΔᐃⵠ.ⵠᐃⵠᐃⲆΔⲆ) > 1) {
              f312(v1621, v1622);
            }
          }
        }
      }
    }
  }
  function f309() {
    if (v2860.reconnect.enabled) {
      v407.globalAlpha = 0.9;
      v407.fillStyle = "#000";
      f90(v407, v411 - 150, v412 - 90, 300, 180, 15);
      v407.fill();
      v407.globalAlpha = 1;
      var v1623 = ⵠΔ[412];
      v407.save();
      v2860.reconnect.rotate = (v2860.reconnect.rotate + v3091 * 2) % (Math.PI * 2);
      v407.translate(v408 / 2, v410 / 2 - 25);
      v407.rotate(v2860.reconnect.rotate);
      f302(v407, v1623, -v1623.width / 2, -v1623.height / 2);
      v407.restore();
      v1623 = ⵠΔ[663];
      f302(v407, v1623, (v408 - v1623.width) / 2, (v410 - v1623.height) / 2 + 25);
    }
  }
  function f310() {
    v2860.ΔᐃᐃⲆⲆ.id = -1;
    v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ = -1;
    if (!v2860.ΔⲆᐃⵠΔⲆⵠ && !v2860.ΔᐃᐃⲆⲆ.wait && !v2860.ⵠⲆᐃᐃΔ) {
      var v1624 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v1625 = 100;
      if (v1624) {
        for (var v1626 = 0; v1626 < v2859.ⲆⵠΔ[38].length; v1626++) {
          var v1627 = v2859.ⲆⵠΔ[38][v1626];
          var v1628 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1627, v1624);
          if (v1628 < v1625) {
            v1625 = v1628;
            v2860.ΔᐃᐃⲆⲆ.id = v1627.id;
            v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ = v1627.ΔⲆⲆᐃ;
            v2860.ΔᐃᐃⲆⲆ.info = v1627.info;
            v2860.ΔᐃᐃⲆⲆ.lock = (v1627.info & 16) >> 4;
          }
        }
      }
      var v1629 = v3057.ⲆⲆΔⲆⲆ;
      v3057.ⲆⲆΔⲆⲆ = -1;
      if (v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ == -1 || v2860.ΔᐃⲆᐃⲆ.length != 0 && v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ != v2860.id) {
        if (v2860.ΔᐃⲆᐃⲆ.length != 0 && v2860.id != v2860.ΔᐃⲆᐃⲆ[0]) {
          v3057.ⲆⲆΔⲆⲆ = 2;
        } else if (v2860.ΔᐃⲆᐃⲆ.length != 0 && v2860.id == v2860.ΔᐃⲆᐃⲆ[0]) {
          v3057.ⲆⲆΔⲆⲆ = 1;
        } else if (v2860.ΔᐃⲆᐃⲆ.length != 0) {
          v3057.ⲆⲆΔⲆⲆ = 3;
        }
      } else if (v2860.ΔᐃⲆᐃⲆ.length == 0 && v2860.ΔᐃᐃⲆⲆ.info >= 8) {
        v3057.ⲆⲆΔⲆⲆ = 4;
      } else if (v2860.ΔᐃⲆᐃⲆ.length == 0) {
        v3057.ⲆⲆΔⲆⲆ = 3;
      } else {
        v3057.ⲆⲆΔⲆⲆ = 0;
      }
      if (v3057.ⲆⲆΔⲆⲆ != -1) {
        v3057.ΔⲆᐃΔⲆ[v3057.ⲆⲆΔⲆⲆ].button.ⲆⵠⲆᐃ(v407);
      }
      var v1630 = document.getElementById("team_box").style;
      if (v3057.ⲆⲆΔⲆⲆ != -1 && v1629 != v3057.ⲆⲆΔⲆⲆ && v1630.display == "inline-block") {
        v3057.ΔⲆᐃΔⲆ[v3057.ⲆⲆΔⲆⲆ].action();
      }
    }
  }
  function f311() {
    if (v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length > 0) {
      var v1631 = {
        x: v3057.ΔᐃⵠΔΔ.translate.x,
        y: v3057.ΔᐃⵠΔΔ.translate.y - v414 * 120
      };
    } else {
      v1631 = {
        x: v3057.ΔᐃⵠΔΔ.translate.x,
        y: v3057.ΔᐃⵠΔΔ.translate.y - v414 * 50
      };
    }
    v407.globalAlpha = 0.8;
    var v1632 = ⵠΔ[369][v2859.time];
    f302(v407, v1632, v1631.x, v1631.y);
    v407.globalAlpha = 1;
    if (v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.x > -1) {
      v407.fillStyle = "#660000";
      f94(v407, v1631.x + v414 * v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.x, v1631.y + v414 * v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.y, v414 * 5);
      v407.fill();
    }
    var vV414 = v414;
    for (var v1633 = v3057.ΔᐃⵠΔΔ.ⵠⲆⵠⲆ, v1634 = 0; v1633.length > v1634; v1634++) {
      var v1635 = v1633[v1634];
      v2859.time;
      v407.fillStyle = "#ff0000";
      f94(v407, v1631.x + v1635.x / (v2859.ⲆᐃᐃⲆΔ * 100) * 193 * v414, v1631.y + v414 * (v1635.y / (v2859.ⵠΔᐃΔⲆ * 100) * 193), v414 * 2);
      v407.fill();
    }
    var v1636 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
    if (v1636) {
      v407.fillStyle = v2859.time ? "#fff" : "#e39716";
      f94(v407, v1631.x + v1636.x / (v2859.ⲆᐃᐃⲆΔ * 100) * 193 * v414, v1631.y + v1636.y / (v2859.ⵠΔᐃΔⲆ * 100) * 193 * v414, v414 * 4);
      v407.fill();
    }
    v414 = vV414;
  }
  function f312(p1202, p1203) {
    if (!ⵠΔ[393][p1202]) {
      ⵠΔ[393][p1202] = f156(v414, "x" + p1202, 17, "#FFF");
    }
    var v1637 = ⵠΔ[393][p1202];
    var v1638 = p1203.info.translate.x + p1203.info.ⵠⵠ[0].width - v1637.width - v414 * 14;
    var v1639 = p1203.info.translate.y + p1203.info.ⵠⵠ[0].height - v1637.height - v414 * 19;
    if (p1203.info.state == v2234) {
      v1639 += v414 * 5;
    }
    f302(v407, v1637, v1638, v1639);
  }
  ΔⲆⲆᐃⲆⵠⲆ = [];
  ⵠᐃⵠⲆΔⵠⵠ = [];
  var v1640 = [];
  function f313() {
    var v1641 = v2860.ⵠΔⵠⲆΔ;
    if (v1641.wait) {
      var v1642 = v1641.timeout.ⵠΔᐃ();
      v407.save();
      var v1643 = ⵠΔ[675];
      v407.translate(v1643.width - v414 * 2, v3057.ⲆᐃΔⲆ.translate.y - v414 * 60);
      var v1644 = -v1643.width / 2 - 2;
      var v1645 = -v1643.height / 2 - 4;
      f302(v407, v1643, v1644, v1645);
      v407.beginPath();
      v407.lineWidth = v414 * 5;
      v407.strokeStyle = v594.ΔⲆⲆⵠⲆⲆⲆ[v2859.time];
      v407.lineCap = "round";
      v407.arc(0, v1645 + v1643.height / 2, v414 * 25, 0, Math.PI * 2 * v1641.timeout.ΔⲆⵠ);
      v407.stroke();
      v407.restore();
      if (v1642) {
        v1641.wait = vVV1622;
        v1641.timeout.ΔⲆⵠ = 0;
        v1641.timeout.ⵠⵠⲆ = vVVV1623;
      }
    }
  }
  function f314() {
    var v1646 = v2860.ⵠⲆⲆᐃᐃ;
    if (v1646.wait) {
      var v1647 = v1646.timeout.ⵠΔᐃ();
      v407.save();
      var v1648 = ⵠΔ[1043];
      v407.translate(v1648.width - v414 * 12, v3057.ⲆᐃΔⲆ.translate.y - v414 * 190);
      var v1649 = -v1648.width / 2 + 9;
      var v1650 = -v1648.height / 2 - 4;
      f302(v407, v1648, v1649, v1650);
      v407.beginPath();
      v407.lineWidth = v414 * 5;
      v407.strokeStyle = v594.ⲆⵠⲆΔⲆᐃⵠ[v2859.time];
      v407.lineCap = "round";
      v407.arc(9, v1650 + v1648.height / 2, v414 * 25, 0, Math.PI * 2 * v1646.timeout.ΔⲆⵠ);
      v407.stroke();
      v407.restore();
      if (v1647) {
        v1646.wait = false;
        v1646.timeout.ΔⲆⵠ = 0;
        v1646.timeout.ⵠⵠⲆ = vVV165;
      }
    }
  }
  function f315(p1204) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVV1623) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVVV16222;
      }
      var v1651 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1652 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1651;
      var v1653 = v1651 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1652 = 0;
      v1653 = 0;
    }
    if (p1204 === 1189 && !v2859.transition) {
      var v1654 = 0;
      for (var v1655 = v2859.ⲆⵠΔ[0], v1656 = 0; v1655.length > v1656; v1656++) {
        var v1657 = ⵠⵠΔ.ᐃᐃⵠⲆ(v1655[v1656], this);
        if (v1657 < 140 && v1657 > 35) {
          v1654 = 0;
          break;
        }
        if (v1657 <= 35) {
          v1654 = 1;
        }
      }
      this.opacity = v1654 === 0 ? Math.max(0.5, this.opacity - v3091 / 1.5) : Math.min(1, this.opacity + v3091 / 1.5);
      v407.globalAlpha = this.opacity;
    }
    ⵠⵠ = ⵠΔ[p1204][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1652, -ᐃⵠⵠ / 2 + v1653, Δⵠᐃ, ᐃⵠⵠ);
    v407.globalAlpha = 1;
    v407.restore();
  }
  function f316() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[1086][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f317() {
    var v1658 = v2859.ⲆⵠΔΔΔ;
    var v1659 = ⵠΔ[974][v2859.time];
    f302(v407, v1659, v1658.translate.x, v1658.translate.y);
    v407.save();
    v407.translate(v1658.translate.x + v1659.width / 2, v1658.translate.y + v1659.height / 2);
    v2859.ⲆⵠΔΔΔ.now = (new Date().getTime() - v1658.ⵠⵠΔⵠᐃ + v1658.ᐃΔΔⵠᐃ) % 480000;
    var v1660 = Math.PI * 2 * v2859.ⲆⵠΔΔΔ.now / 480000 - Math.PI / 2;
    v407.rotate(v1660);
    f302(v407, ⵠΔ[975], -v1659.width / 2, -v1659.height / 2);
    v407.restore();
  }
  function f318() {
    var v1661 = v2860.ⵠⵠⲆⵠⵠ;
    if (v1661.wait) {
      var v1662 = v1661.timeout.ⵠΔᐃ();
      v407.save();
      var v1663 = ⵠΔ[1041];
      v407.translate(v1663.width - v414 * 2, v3057.ⲆᐃΔⲆ.translate.y - v414 * 125);
      var v1664 = -v1663.width / 2 + 10;
      var v1665 = -v1663.height / 2 - 4;
      f302(v407, v1663, v1664, v1665);
      v407.beginPath();
      v407.lineWidth = v414 * 5;
      v407.strokeStyle = v594.ⲆⵠⲆΔⲆᐃⵠ[v2859.time];
      v407.lineCap = "round";
      v407.arc(9, v1665 + v1663.height / 2, v414 * 25, 0, Math.PI * 2 * v1661.timeout.ΔⲆⵠ);
      v407.stroke();
      v407.restore();
      if (v1662) {
        v1661.wait = false;
        v1661.timeout.ΔⲆⵠ = 0;
        v1661.timeout.ⵠⵠⲆ = false;
      }
    }
  }
  function f319() {
    var v1666 = v2860.ⵠⲆᐃᐃ;
    if (v1666.ΔⵠΔⵠⵠ) {
      var v1667 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + v1667.x, v2860.Δⵠⵠ.y + v1667.y);
      var v1668 = ⵠΔ[435];
      var v1669 = -v1668.width / 2;
      var v1670 = -v1668.height / 2 - v414 * 125;
      f302(v407, v1668, v1669, v1670);
      v407.beginPath();
      v407.lineWidth = v414 * 5;
      v407.strokeStyle = v594.ⲆⵠⵠⵠⵠᐃΔ[v2859.time];
      v407.lineCap = "round";
      v407.arc(0, v1670 + v1668.height / 2, v414 * 25, 0, v1666.timeout.ΔⲆⵠ * (Math.PI * 2));
      v407.stroke();
      v407.restore();
    }
  }
  function f320() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[1097][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f321() {
    var v1671 = v2860.ΔᐃᐃⲆⲆ;
    if (v1671.wait) {
      var v1672 = v1671.timeout.ⵠΔᐃ();
      v407.save();
      var v1673 = ⵠΔ[727];
      var v1674 = ⵠΔ[675].height + v414 * 25;
      v407.translate(v1673.width, v3057.ⲆᐃΔⲆ.translate.y - v414 * 188 - v1674);
      var v1675 = -v1673.width / 2 - 2;
      var v1676 = -v1673.height / 2 - 4;
      f302(v407, v1673, v1675 + 2, v1676);
      v407.beginPath();
      v407.lineWidth = v414 * 5;
      v407.strokeStyle = v594.ΔⲆⲆⵠⲆⲆⲆ[v2859.time];
      v407.lineCap = "round";
      v407.arc(0, v1676 + v1673.height / 2, v414 * 25, 0, Math.PI * 2 * v1671.timeout.ΔⲆⵠ);
      v407.stroke();
      v407.restore();
      if (v1672) {
        v1671.wait = vVVV163;
        v1671.timeout.ΔⲆⵠ = 0;
        v1671.timeout.ⵠⵠⲆ = v16;
      }
    }
  }
  function f322(p1205) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1677 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1678 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1677;
      var v1679 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1677;
    } else {
      v1678 = 0;
      v1679 = 0;
    }
    if (this.ΔᐃⵠⲆΔ.ⵠΔᐃ()) {
      this.color += 0.2 + Math.random() * 0.3;
    }
    ⵠⵠ = ⵠΔ[1121][Math.floor(this.id + this.color) % 5][v2859.time];
    Δⵠᐃ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1678, -ᐃⵠⵠ / 2 + v1679, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f323() {
    var v1680 = -8;
    if (v2860.ⵠᐃΔⵠᐃ.enabled) {
      var v1681 = ⵠΔ[684];
      f302(v407, v1681, v2860.ⵠᐃΔⵠᐃ.translate.x, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680);
      v1680 += 70;
    }
    if (v2860.ⲆⵠᐃΔⵠΔⵠ === 1) {
      v1681 = ⵠΔ[687];
      f302(v407, v1681, v2860.ⵠᐃΔⵠᐃ.translate.x, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680);
      v1680 += 70;
    } else if (v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.x < 0.25 || v2860.ⲆᐃΔⲆ.ⵠΔᐃⵠᐃⵠⵠ.x < 0.25 || v2860.ⲆᐃΔⲆ.ⲆⵠΔⵠⲆⲆᐃ.x < 0.25 || v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.x < 0.25 || v2860.ⲆᐃΔⲆ.ᐃⲆⵠᐃⵠΔⲆ.x < 0.25) {
      v1681 = ⵠΔ[686];
      f302(v407, v1681, v2860.ⵠᐃΔⵠᐃ.translate.x, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680);
      v1680 += 70;
    }
    if (v2860.ᐃΔⲆᐃⵠ > 0) {
      v1681 = ⵠΔ[685];
      f302(v407, v1681, v2860.ⵠᐃΔⵠᐃ.translate.x, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680);
      var v1682 = v1640[v2860.ᐃΔⲆᐃⵠ];
      if (v1682 === undefined) {
        v1682 = f156(v414, v2860.ᐃΔⲆᐃⵠ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
        v1640[v2860.ᐃΔⲆᐃⵠ] = v1682;
      }
      if (v2860.ᐃΔⲆᐃⵠ < 9) {
        f302(v407, v1682, v2860.ⵠᐃΔⵠᐃ.translate.x - 39, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680 + 20);
      } else {
        f302(v407, v1682, v2860.ⵠᐃΔⵠᐃ.translate.x - 46, v2860.ⵠᐃΔⵠᐃ.translate.y + v1680 + 20);
      }
    }
  }
  function f324() {
    for (var v1683 = v2860.ΔⲆⵠⵠ, v1684 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ], v1685 = 0; v1685 < v1683.ⲆΔⵠΔᐃ.length; v1685++) {
      var v1686 = v1683.ⲆΔⵠΔᐃ[v1685];
      var v1687 = false;
      if ((v1684 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ]) && (v1686.id == v1684.right || v1686.id == v1684.ΔΔⵠⲆΔ && v1684.ΔΔⵠⲆΔ > 0)) {
        v1687 = vVVV1223;
        f302(v407, v1686.info.ⵠⵠ[2], v1686.info.translate.x, v1686.info.translate.y, v1686.info.width, v1686.info.height);
      } else {
        v1686.ⲆⵠⲆᐃ(v407);
      }
      var v1688 = v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[v1686.id];
      if (v1688 > 1) {
        f312(v1688, v1686);
      }
      if (v1688 > 0) {
        f305(v1685, v1686, v1687);
      }
      var v1689 = v2860.ᐃᐃᐃᐃ;
      if (!!v1689.open && (!!(v1689.id < 0) || v1689.id == v1686.id) && (!v1689.lock || v2860.id == v1689.ΔⲆⲆᐃ)) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
      if (v2860.ᐃΔⵠᐃᐃ.open && v1686.id == 200) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
      if (v2860.ΔⲆⲆᐃⲆ.open && v1686.id == 282) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
      if (v2860.Ⲇᐃⵠⵠ.open && v1686.id == 227) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
      if (v2860.ⵠΔᐃⵠ.open && v1686.id == 200) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
      if (!!v2860.ⵠᐃⲆΔ.open && (v1686.id == 200 || v1686.id == 224)) {
        v3057.ⲆΔᐃᐃΔ[v1686.id].ⲆⵠⲆᐃ(v407);
      }
    }
    if (v1686 && v1685 < v1683.max) {
      var v1690 = ⵠΔ[445][2];
      ᐃᐃ = v1686.info.translate.x;
      Ⲇᐃⵠ = v1686.info.translate.y;
      ᐃᐃΔⲆ = 1;
      for (; v1683.max > v1685; v1685++, ᐃᐃΔⲆ++) {
        f302(v407, v1690, ᐃᐃ + (v1690.width + 5) * ᐃᐃΔⲆ, Ⲇᐃⵠ);
      }
    }
  }
  function f325() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[432][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f326(p1206) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1691 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1692 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1691;
      var v1693 = v1691 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1692 = 0;
      v1693 = 0;
    }
    var v1694 = ⵠΔ[p1206][v2859.time];
    Δⵠᐃ = -v1694.width;
    ᐃⵠⵠ = -v1694.height;
    f302(v407, v1694, -Δⵠᐃ / 2 + v1692, -ᐃⵠⵠ / 2 + v1693, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f327() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVVV16222 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1695 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1696 = v1695 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1697 = v1695 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1696 = 0;
      v1697 = 0;
    }
    ⵠⵠ = ⵠΔ[269][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1696, -ᐃⵠⵠ / 2 + v1697, Δⵠᐃ, ᐃⵠⵠ);
    if (this.lock) {
      ⵠⵠ = ⵠΔ[241][v2859.time];
      Δⵠᐃ = -ⵠⵠ.width;
      ᐃⵠⵠ = -ⵠⵠ.height;
      f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1696 - v414 * 1, -ᐃⵠⵠ / 2 + v1697, Δⵠᐃ, ᐃⵠⵠ);
    }
    v407.restore();
  }
  function f328() {
    var v1698 = v2860.ⵠⲆᐃᐃ;
    if (!v1698.ΔⵠΔⵠⵠ && v1698.ᐃⵠᐃᐃ > 0) {
      var v1699 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      if (!v1699) {
        return;
      }
      v407.save();
      if (v602[v1698.ᐃⵠᐃᐃ].ⵠⲆᐃ === 0 && v1698.mode === 0) {
        v407.translate(v2860.Δⵠⵠ.x + v1699.x, v2860.Δⵠⵠ.y + v1699.y);
        v407.rotate(v1699.angle);
        v407.translate(120, 0);
      } else {
        var v1700 = Math.floor(v1699.x + Math.sin(v1699.angle) * 120);
        var v1701 = Math.floor(v1699.y + Math.cos(v1699.angle) * 120);
        v1700 = v2860.Δⵠⵠ.x + (v1700 - v1700 % 100 + 50);
        v1701 = v2860.Δⵠⵠ.y + (v1701 - v1701 % 100 + 50);
        v407.translate(v1700, v1701);
      }
      var v1702 = ⵠΔ[v1698.ᐃⵠᐃᐃ][v2859.time];
      v407.globalAlpha = 0.5;
      f302(v407, v1702, -v1702.width / 2, -v1702.height / 2);
      v407.globalAlpha = 1;
      v407.restore();
      if (v602[v1698.ᐃⵠᐃᐃ].ⵠⲆᐃ === 0) {
        if (!v1698.label[v1698.mode]) {
          if (v1698.mode === 0) {
            v1698.label[0] = f156(v414, v756[2036], 20, "#e2c340");
          } else {
            v1698.label[1] = f156(v414, v756[2037], 20, "#e2c340");
          }
        }
        v1702 = v1698.label[v1698.mode];
        f302(v407, v1702, v411 + -v1702.width / 2, v3057.ⲆᐃΔⲆ.y - 26);
      }
    }
    if (v1698.ΔⵠΔⵠⵠ) {
      var v1703 = v1698.timeout.ⵠΔᐃ();
      for (var v1704 = 0; v1704 < v1698.ⵠᐃⵠΔᐃ.length; v1704++) {
        var v1705 = v1698.ⵠᐃⵠΔᐃ[v1704];
        if (v1705.id == v1698.id) {
          var v1706 = v414 * 42;
          var v1707 = v414 * 17;
          f90(v407, v1705.info.translate.x, v1705.info.translate.y + (1 - v1698.timeout.ΔⲆⵠ) * v1706, v1705.info.width, v1706 * v1698.timeout.ΔⲆⵠ + v1707, v414 * 10);
          v407.fillStyle = "#55B973";
          v407.fill();
          v407.globalAlpha = 0.8;
          v1705.ⲆⵠⲆᐃ(v407);
        } else {
          v407.globalAlpha = 0.5;
          v1705.ⲆⵠⲆᐃ(v407);
        }
        v407.globalAlpha = 1;
      }
      if (v1703) {
        v1698.ΔⵠΔⵠⵠ = false;
        v1698.timeout.ΔⲆⵠ = 0;
        v1698.timeout.ⵠⵠⲆ = vVV16;
      }
      return vVVVV12232;
    }
    for (v1704 = 0; v1698.ⵠᐃⵠΔᐃ.length > v1704; v1704++) {
      v1698.ⵠᐃⵠΔᐃ[v1704].ⲆⵠⲆᐃ(v407);
    }
    return vVVV1623;
  }
  function f329(p1207) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = vV162;
      }
      var v1708 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1709 = v1708 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1710 = v1708 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1709 = 0;
      v1710 = 0;
    }
    var v1711 = ⵠΔ[1102].length;
    ⵠⵠ = ⵠΔ[1102][(this.ᐃᐃΔⲆ + this.ⲆΔ % 2) % v1711][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    var v1712 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
    if (v1712 && (v2860.id === this.ΔⲆⲆᐃ || v2860.ᐃⵠᐃᐃⵠⲆⵠ(this.ΔⲆⲆᐃ))) {
      if (ⵠⵠΔ.ᐃᐃⵠⲆ(this, v1712) < 550) {
        this.opacity = Math.max(this.opacity - v3091, 0.3);
      } else {
        this.opacity = Math.min(this.opacity + v3091, 1);
      }
    } else if (v1712 && ⵠⵠΔ.ᐃᐃⵠⲆ(this, v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ]) < 150) {
      this.opacity = Math.max(this.opacity - v3091, 0.3);
    } else {
      this.opacity = Math.min(this.opacity + v3091, 1);
    }
    var v1713 = v407.globalAlpha;
    v407.globalAlpha *= this.opacity;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1709, -ᐃⵠⵠ / 2 + v1710, Δⵠᐃ, ᐃⵠⵠ);
    v407.globalAlpha = v1713;
    v407.restore();
  }
  function f330() {
    v407.save();
    var vV4142 = v414;
    if (v2860.ⲆᐃΔⲆ.ᐃⵠΔΔΔ.x < 0.25) {
      v407.globalAlpha = v2860.ⲆᐃΔⲆ.ⵠᐃΔⵠΔᐃⲆ.ΔⲆⵠ;
    }
    var v1714 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length > 0 ? -70 : 0;
    if (v2860.ᐃᐃᐃᐃ.open || v2860.ᐃΔⵠᐃᐃ.open && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(200) != -1 || v2860.Ⲇᐃⵠⵠ.open && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(227) != -1 || v2860.ⵠΔᐃⵠ.open && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(200) != -1 || v2860.ΔⲆⲆᐃⲆ.open && v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(282) != -1 || v2860.ⵠᐃⲆΔ.open && (v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(200) != -1 || v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(224) != -1)) {
      v1714 -= v414 * 50;
    }
    v407.translate((v408 - v414 * 950) / 2, v1714);
    v407.fillStyle = "#69A148";
    v407.fillRect(this.translate.x + v414 * 37, this.translate.y + v414 * 17, v2860.ⲆᐃΔⲆ.ᐃⵠΔΔΔ.x * 178 * v414, v414 * 18);
    v407.globalAlpha = 1;
    if (v2860.ⲆᐃΔⲆ.ⵠΔᐃⵠᐃⵠⵠ.x < 0.35) {
      v407.fillStyle = "#8F050A";
      v407.globalAlpha = v2860.ⲆᐃΔⲆ.ⲆⵠᐃⵠᐃΔΔ.ΔⲆⵠ;
      v407.fillRect(this.translate.x + v414 * 277, this.translate.y + v414 * 17, v414 * 178, v414 * 18);
      v407.globalAlpha = 1;
    }
    v407.fillStyle = "#AF352A";
    v407.fillRect(this.translate.x + v414 * 277, this.translate.y + v414 * 17, v414 * (v2860.ⲆᐃΔⲆ.ⵠΔᐃⵠᐃⵠⵠ.x * 178), v414 * 18);
    if (v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.x < 0.35) {
      v407.fillStyle = "#366B91";
      v407.globalAlpha = v2860.ⲆᐃΔⲆ.ΔΔΔⲆⲆᐃᐃ.ΔⲆⵠ;
      v407.fillRect(this.translate.x + v414 * 517, this.translate.y + v414 * 17, v414 * 178, v414 * 18);
      v407.globalAlpha = 1;
    }
    v407.fillStyle = "#669BB1";
    v407.fillRect(this.translate.x + v414 * 517, this.translate.y + v414 * 17, v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.x * 178 * v414, v414 * 18);
    if (v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.x > 0.99) {
      if (v2860.ⲆᐃΔⲆ.ᐃⲆⵠᐃⵠΔⲆ.x < 0.35) {
        v407.fillStyle = "#6C4036";
        v407.globalAlpha = v2860.ⲆᐃΔⲆ.ΔⲆⵠⲆΔΔⲆ.ΔⲆⵠ;
        v407.fillRect(this.translate.x + v414 * 517, this.translate.y + v414 * 17, v414 * 178, v414 * 18);
        v407.globalAlpha = 1;
      }
      v407.fillStyle = "#9C4036";
      v407.fillRect(this.translate.x + v414 * 517, this.translate.y + v414 * 17, v414 * ((1 - v2860.ⲆᐃΔⲆ.ᐃⲆⵠᐃⵠΔⲆ.x) * 178), v414 * 18);
    }
    if (v2860.ⲆᐃΔⲆ.ⲆⵠΔⵠⲆⲆᐃ.x < 0.35) {
      v407.fillStyle = "#001A57";
      v407.globalAlpha = v2860.ⲆᐃΔⲆ.ΔⵠⵠΔΔΔⵠ.ΔⲆⵠ;
      v407.fillRect(this.translate.x + v414 * 757, this.translate.y + v414 * 17, v414 * 178, v414 * 18);
      v407.globalAlpha = 1;
    }
    v407.fillStyle = "#074A87";
    v407.fillRect(this.translate.x + v414 * 757, this.translate.y + v414 * 17, v2860.ⲆᐃΔⲆ.ⲆⵠΔⵠⲆⲆᐃ.x * 178 * v414, v414 * 18);
    v414 = vV4142;
    f302(v407, this.ⵠⵠ, this.translate.x, this.translate.y);
    this.y = this.translate.y + v1714;
    v407.restore();
    if (v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.x < 0.99) {
      var v1715 = Math.floor(v411 - ⵠΔ[827].width / 2);
      v1714 += this.translate.y - ⵠΔ[827].height - v414 * 5;
      v407.fillStyle = "#BBE8EF";
      v407.fillRect(v1715 + 5, v1714 + v414 * 5, v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.x * (v414 * 588), v414 * 10);
      if (v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.x < 0.35) {
        v407.fillStyle = "#9BA8AF";
        v407.globalAlpha = v2860.ⲆᐃΔⲆ.ⵠⲆⵠΔᐃⲆΔ.ΔⲆⵠ;
        v407.fillRect(v1715 + 5, v1714 + 5, v414 * 588, v414 * 10);
        v407.globalAlpha = 1;
      }
      f302(v407, ⵠΔ[827], v1715, v1714);
      this.y = v1714;
    }
  }
  function f331() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[1060][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f332() {
    var v1716 = v2860.ᐃᐃΔⵠⲆ;
    var v1717 = v3057.ⵠᐃⵠⲆⲆ;
    if (v1716.ⵠΔᐃ) {
      v1716.ⵠΔᐃ = vV163;
      var v1718 = v1716.ⵠⵠΔⵠΔ;
      var v1719 = v1717.ⵠΔΔ.width;
      var v1720 = v1717.ⵠΔΔ.height;
      var v1721 = v1717.ᐃ;
      var v1722 = v2859.ⵠⲆⵠⲆ;
      var v1723 = false;
      v1721.clearRect(0, 0, v1719, v1720);
      v1721.drawImage(v1717.ⵠⵠ, 0, 0);
      for (var v1724 = 0; v1718.length > v1724; v1724++) {
        var v1725 = v1722[v1718[v1724]];
        if ((v2859.mode !== 1 || v1725.ᐃΔⵠⵠΔ !== "spectator") && (v2859.mode !== 2 || v1725.ⵠⲆⲆΔ !== 0)) {
          if (v1718[v1724] == v2860.id) {
            v1723 = vVV1222;
            if (v2859.mode === 3 && v1725.ⵠⲆⲆΔ === 0) {
              ΔⲆ = "#FF0000";
            } else {
              ΔⲆ = "#FFF";
            }
          } else if (v2859.mode === 3 && v1725.ⵠⲆⲆΔ === 0) {
            ΔⲆ = "#990000";
          } else {
            ΔⲆ = "#A1BDCD";
          }
          v1721.drawImage(f156(v414, "" + (v1724 + 1), v414 * 15, ΔⲆ), v414 * 20, (40 + v1724 * 22) * v414);
          v1725.ᐃΔⵠᐃⲆⵠᐃ ||= f156(v414, v1725.ᐃΔⵠⵠΔ, v414 * 15, ΔⲆ, vVVUndefined163, vVVVUndefined142, vVVVUndefined1422, undefined, v414 * 110);
          v1721.drawImage(v1725.ᐃΔⵠᐃⲆⵠᐃ, v414 * 39, v414 * (40 + v1724 * 22));
          v1721.drawImage(f156(v414, ⵠⵠΔ.ΔⲆᐃⲆΔᐃᐃ(v1725.ΔⲆΔΔᐃ), v414 * 15, ΔⲆ), v414 * 156, v414 * (40 + v1724 * 22));
        }
      }
      if (!v1723) {
        if (v2859.mode === 0 || v2859.mode === 3 || v2859.mode === 4 || v2859.mode === 5 || v2859.mode === 7 || v2859.mode === 1 && !v2860.ΔⲆᐃⵠΔⲆⵠ || v2859.mode === 2 && !v2860.ⵠⲆᐃᐃΔ) {
          v1721.drawImage(ⵠΔ[417], v414 * 15, v414 * (46 + v1724 * 22));
          v1721.drawImage(f156(v414, ⵠⵠΔ.ΔⲆᐃⲆΔᐃᐃ(v2859.ⵠⲆⵠⲆ[v2860.id].ΔⲆΔΔᐃ), v414 * 15, "#FFF"), v414 * 100, v414 * (46 + v1724 * 22));
        }
      }
    }
    f302(v407, v1717.ⵠΔΔ, v1717.translate.x, v1717.translate.y);
  }
  function f333(p1208) {
    if (!((p1208 = p1208 / 100) > 0.8)) {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
          this.ᐃᐃΔ.ⵠΔᐃ = vVVV163;
        }
        var v1726 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
        var v1727 = v1726 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
        var v1728 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1726;
      } else {
        v1727 = 0;
        v1728 = 0;
      }
      v407.globalAlpha = 0.5;
      f91(v407, v1727, v1728, v414 * 18, p1208);
      f89(v407, null, "#000000", v414 * 18);
      v407.globalAlpha = 1;
      f91(v407, v1727, v1728, v414 * 18, p1208);
      f89(v407, null, v594.ⵠᐃᐃⲆᐃΔⲆ[v2859.time], v414 * 6);
      v407.restore();
    }
  }
  function f334(p1209) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVVVVV1623 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVV165;
      }
      var v1729 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1730 = v1729 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1731 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1729;
    } else {
      v1730 = 0;
      v1731 = 0;
    }
    ⵠⵠ = ⵠΔ[p1209][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2 + v1730, -ᐃⵠⵠ / 2 + v1731, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f335() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[349][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f336(p1210) {
    if (!((p1210 = p1210 / 100) > 0.95)) {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
          this.ᐃᐃΔ.ⵠΔᐃ = false;
        }
        var v1732 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
        var v1733 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1732;
        var v1734 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1732;
      } else {
        v1733 = 0;
        v1734 = 0;
      }
      v407.globalAlpha = 0.5;
      f91(v407, v1733, v1734, v414 * 28, p1210);
      f89(v407, null, "#000000", v414 * 18);
      v407.globalAlpha = 1;
      f91(v407, v1733, v1734, v414 * 28, p1210);
      f89(v407, null, v594.ⲆⵠⵠⵠⵠᐃΔ[v2859.time], v414 * 6);
      v407.restore();
    }
  }
  const v1735 = 5512765;
  const v1736 = 5512765 .ᐃⵠⵠᐃⲆⲆΔ;
  const v1737 = `const ⲆⲆⲆⲆΔΔⲆⲆⲆ = (typeof ⲆⵠΔⵠⲆⲆⲆ === "${v1736}") ? 1 : 0; return ⲆⲆⲆⲆΔΔⲆⲆⲆ;`;
  var v1738 = 0;
  function f337() {
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1739 = this.info === 0 ? ⵠΔ[1350][v2859.time] : ⵠΔ[1352][v2859.time];
    Δⵠᐃ = -v1739.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = -v1739.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, v1739, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVVV16) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1739 = ⵠΔ[1353];
      f302(v407, v1739, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f338() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV163 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVVVVV1623;
      }
      var v1740 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1741 = v1740 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1742 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1740;
    } else {
      v1741 = 0;
      v1742 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1741 += Math.random() * 2 - 1;
      v1742 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1741, v2860.Δⵠⵠ.y + this.y + v1742);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[253][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1581][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f339() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1743 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1744 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1743;
      var v1745 = v1743 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1744 = 0;
      v1745 = 0;
    }
    var v1746 = this.info & 15;
    if (this.info === 10 || v1746 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1747 = ⵠΔ[1745][v2859.time];
      } else {
        v1747 = ⵠΔ[1739][v2859.time];
      }
      var v1748 = -v1747.width * this.ΔΔⵠΔ.ΔⲆⵠ;
      var v1749 = -v1747.height * this.ΔΔⵠΔ.ΔⲆⵠ;
      f302(v407, v1747, -v1748 / 2 + v1744, -v1749 / 2 + v1745, v1748, v1749);
    } else {
      if (this.info & 16) {
        v1747 = ⵠΔ[1746][v2859.time];
      } else {
        v1747 = ⵠΔ[1759][v2859.time];
      }
      v407.translate(0, v1747.height / 2);
      f302(v407, v1747, v1744 - v1747.width / 2, -v1747.height + v1745);
    }
    v407.restore();
  }
  function f340() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1750 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1751 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1750;
      var v1752 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1750;
    } else {
      v1751 = 0;
      v1752 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1751 += Math.random() * 2 - 1;
      v1752 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1751, v2860.Δⵠⵠ.y + this.y + v1752);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[256][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1593][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f341() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVV165;
      }
      var v1753 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1754 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1753;
      var v1755 = v1753 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1754 = 0;
      v1755 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1754 += Math.random() * 2 - 1;
      v1755 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1754, v2860.Δⵠⵠ.y + this.y + v1755);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[255][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1589][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f342(p1211, p1212, p1213) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + p1212, v2860.Δⵠⵠ.y + p1213);
    v407.rotate(this.angle);
    v407.translate(this.x - p1212, this.y - p1213);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[p1211][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f343() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1756 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1757 = v1756 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1758 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1756;
    } else {
      v1757 = 0;
      v1758 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1757 += Math.random() * 2 - 1;
      v1758 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1757, v2860.Δⵠⵠ.y + this.y + v1758);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[249][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1565][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f344() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vV16) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1759 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1760 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1759;
      var v1761 = v1759 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1760 = 0;
      v1761 = 0;
    }
    var v1762 = this.info & 15;
    if (this.info === 10 || v1762 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1763 = ⵠΔ[887][v2859.time];
      } else {
        v1763 = ⵠΔ[225][v2859.time];
      }
      var v1764 = -v1763.width * this.ΔΔⵠΔ.ΔⲆⵠ;
      var v1765 = -v1763.height * this.ΔΔⵠΔ.ΔⲆⵠ;
      f302(v407, v1763, -v1764 / 2 + v1760, -v1765 / 2 + v1761, v1764, v1765);
    } else {
      this.ⵠⲆΔΔⲆᐃⵠ.ⵠΔᐃ();
      if (this.info & 16) {
        v1763 = ⵠΔ[857][v2859.time];
      } else {
        v1763 = ⵠΔ[227][v2859.time];
      }
      v407.translate(0, v1763.height / 2);
      v407.rotate(this.ⵠⲆΔΔⲆᐃⵠ.ΔⲆⵠ);
      f302(v407, v1763, v1760 - v1763.width / 2, -v1763.height + v1761);
    }
    v407.restore();
  }
  function f345() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVV164) {
        this.ᐃᐃΔ.ⵠΔᐃ = v16;
      }
      var v1766 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1767 = v1766 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1768 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1766;
    } else {
      v1767 = 0;
      v1768 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1767 += Math.random() * 2 - 1;
      v1768 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1767, v2860.Δⵠⵠ.y + this.y + v1768);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[252][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1577][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f346() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3091 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3091, 1);
    }
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    v1769 = this.info === 0 ? ⵠΔ[342][v2859.time] : ⵠΔ[1376][v2859.time];
    Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1769.width);
    ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1769.height);
    f302(v407, v1769, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1769 = ⵠΔ[1385];
      f302(v407, v1769, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1769 = this.info === 0 ? ⵠΔ[1380][v2859.time] : ⵠΔ[1379][v2859.time];
    Δⵠᐃ = -v1769.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = -v1769.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    v407.save();
    v407.translate(v414 * -40, v414 * 10);
    v407.rotate(this.rotate.ΔⲆⵠ);
    f302(v407, v1769, -Δⵠᐃ * v414 / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1769 = ⵠΔ[1386];
      f302(v407, v1769, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1769 = this.info === 0 ? ⵠΔ[1383][v2859.time] : ⵠΔ[1382][v2859.time];
    v407.save();
    v407.translate(v414 * 40, v414 * 10);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    f302(v407, v1769, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1769 = ⵠΔ[1387];
      f302(v407, v1769, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.restore();
  }
  function f347(p1214, p1215, p1216) {
    if (p1214 >= 0) {
      ⵠⵠ = ⵠΔ[p1214][v2859.time];
      switch (p1214) {
        case 135:
        case 136:
        case 137:
          f432(p1214, ⵠⵠ, -ⵠⵠ.width / 4 - (0 + p1215) * v414, -ⵠⵠ.height / 4 + (p1216 + 35) * v414);
          break;
        case 138:
          f432(p1214, ⵠⵠ, -ⵠⵠ.width / 4 - (1 + p1215) * v414, -ⵠⵠ.height / 4 + (p1216 + 45) * v414);
          break;
        case 139:
        case 140:
        case 142:
        case 143:
        case 144:
        case 145:
        case 146:
        case 147:
        case 141:
        case 148:
        case 149:
          f432(p1214, ⵠⵠ, -ⵠⵠ.width / 4 - (1 + p1215) * v414, -ⵠⵠ.height / 4 + (p1216 + 40) * v414);
      }
    }
  }
  function f348() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ΔᐃⵠⲆΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[664][v2859.time];
    Δⵠᐃ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f349(p1217, p1218, p1219) {
    if (p1217 >= 0) {
      ⵠⵠ = ⵠΔ[p1217][v2859.time];
      switch (p1217) {
        case 1:
        case 3:
        case 4:
        case 8:
        case 49:
        case 50:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 51:
        case 58:
        case 59:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - v414 * (45 + p1218), -ⵠⵠ.height / 2 + (p1219 + 22) * v414);
          break;
        case 167:
        case 168:
        case 169:
        case 170:
        case 174:
        case 175:
        case 176:
        case 177:
        case 178:
        case 180:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (52 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 20));
          break;
        case 171:
        case 172:
        case 173:
        case 179:
        case 181:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (57 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 20));
          break;
        case 103:
        case 0:
        case 5:
        case 6:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 110:
        case 117:
        case 118:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (47 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 45));
          break;
        case 48:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (52 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 45));
          break;
        case 28:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (47 + p1218), -ⵠⵠ.height / 4 + (p1219 + 44) * v414);
          break;
        case 9:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - (47 + p1218) * v414, -ⵠⵠ.height / 2 + v414 * (p1219 + 44));
          break;
        case 108:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - (40 + p1218) * v414, -ⵠⵠ.height / 2 + v414 * (p1219 + 65));
          break;
        case 12:
        case 61:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (37 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 85));
          break;
        case 100:
        case 99:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (26 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 77));
          break;
        case 17:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (37 + p1218), -ⵠⵠ.height / 4 + (p1219 + 85) * v414);
          break;
        case 109:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (47 + p1218), -ⵠⵠ.height / 4 + v414 * (p1219 + 44));
          break;
        case 119:
        case 120:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 127:
        case 128:
        case 129:
        case 130:
        case 131:
        case 132:
        case 126:
        case 133:
        case 134:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (37 + p1218), -ⵠⵠ.height / 4 + (p1219 + 30) * v414);
          break;
        case 102:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (47 + p1218), -ⵠⵠ.height / 4 + (p1219 + 35) * v414);
          break;
        case 165:
        case 166:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (47 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 40));
          break;
        case 162:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - v414 * (47 + p1218), -ⵠⵠ.height / 4 + (p1219 + 34) * v414);
          break;
        case 13:
        case 14:
        case 15:
        case 60:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 19:
        case 26:
        case 27:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (37 + p1218) * v414, -ⵠⵠ.height / 4 + v414 * (p1219 + 90));
          break;
        case 18:
          f432(p1217, ⵠⵠ, -ⵠⵠ.width / 4 - (40 + p1218) * v414, -ⵠⵠ.height / 4 + (p1219 + 85) * v414);
          break;
        case 16:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - v414 * (39 + p1218), -ⵠⵠ.height / 2 + (p1219 + 90) * v414);
          break;
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 72:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 73:
        case 80:
        case 81:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - v414 * (46 + p1218), -ⵠⵠ.height / 2 + (p1219 + 35) * v414);
          break;
        case 85:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - (47 + p1218) * v414, -ⵠⵠ.height / 2 + (p1219 + 54) * v414);
          break;
        case 82:
        case 86:
        case 87:
        case 88:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 90:
        case 89:
        case 97:
        case 98:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - (46 + p1218) * v414, -ⵠⵠ.height / 2 + v414 * (p1219 + 35));
          break;
        case 101:
          f426(p1217, ⵠⵠ, -ⵠⵠ.width / 2 - (47 + p1218) * v414, -ⵠⵠ.height / 2 + v414 * (p1219 + 20));
      }
    }
  }
  function f350() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    var v1770 = ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r);
    this.scale = v1770 > 350 ? Math.min(this.scale + v3091 / 2, 1.8) : Math.max(this.scale - v3091, 1);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    this.ΔⵠⲆᐃ = v1770 < 350 ? Math.max(0, this.ΔⵠⲆᐃ - v3091 * 2.2) : Math.min(1, this.ΔⵠⲆᐃ + v3091 * 2.2);
    v1771 = this.info & 1 ? ⵠΔ[1461][v2859.time] : ⵠΔ[1460][v2859.time];
    Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.width);
    ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.height);
    v407.globalAlpha = 1 - this.ΔⵠⲆᐃ;
    f302(v407, v1771, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    v1771 = (this.info & 1) === 0 ? ⵠΔ[1446][v2859.time] : ⵠΔ[1445][v2859.time];
    Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.width);
    ᐃⵠⵠ = this.scale * (-v1771.height * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1771, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * (1 - this.ΔⵠⲆᐃ);
      var v1771 = ⵠΔ[1462];
      Δⵠᐃ = -v1771.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
      ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.height);
      f302(v407, v1771, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * this.ΔⵠⲆᐃ;
      v1771 = ⵠΔ[1454];
      Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.width * this.scale;
      ᐃⵠⵠ = -v1771.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
      f302(v407, v1771, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1771 = this.info & 1 ? ⵠΔ[1448][v2859.time] : ⵠΔ[1449][v2859.time];
    Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1771.width);
    ᐃⵠⵠ = -v1771.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    v407.save();
    v407.translate(v414 * -20, v414 * 0);
    v407.rotate(this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1771, -Δⵠᐃ * v414 / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * this.ΔⵠⲆᐃ;
      v1771 = ⵠΔ[1455];
      f302(v407, v1771, -Δⵠᐃ * v414 / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1771 = (this.info & 1) === 0 ? ⵠΔ[1452][v2859.time] : ⵠΔ[1451][v2859.time];
    v407.save();
    v407.translate(v414 * 20, v414 * 0);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1771, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = this.ΔⵠⲆᐃ * (0.6 - this.ᐃᐃΔ.ΔⲆⵠ);
      v1771 = ⵠΔ[1456];
      f302(v407, v1771, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.globalAlpha = 1;
    v407.restore();
    v407.restore();
  }
  function f351() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1772 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1773 = v1772 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1774 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1772;
    } else {
      v1773 = 0;
      v1774 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1773 += Math.random() * 2 - 1;
      v1774 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1773, v2860.Δⵠⵠ.y + this.y + v1774);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[259][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1605][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f352() {
    if (!(this.info < 10)) {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVVV1623) {
          this.ᐃᐃΔ.ⵠΔᐃ = vVVVV1623;
        }
        var v1775 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
        var v1776 = v1775 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
        var v1777 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1775;
      } else {
        v1776 = 0;
        v1777 = 0;
      }
      this.ΔΔⵠΔ.ⵠΔᐃ();
      var v1778 = ⵠΔ[206][v2859.time];
      var v1779 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1778.width;
      var v1780 = -v1778.height * this.ΔΔⵠΔ.ΔⲆⵠ;
      f302(v407, v1778, -v1779 / 2 + v1776, -v1780 / 2 + v1777, v1779, v1780);
      v407.restore();
    }
  }
  function f353() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3091 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3091, 1);
    }
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    v1781 = ⵠΔ[587][v2859.time];
    Δⵠᐃ = this.scale * (-v1781.width * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1781.height * this.scale;
    f302(v407, v1781, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1781 = ⵠΔ[601];
      f302(v407, v1781, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v1781 = ⵠΔ[589][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1781.width * this.scale;
    ᐃⵠⵠ = -v1781.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    v407.save();
    v407.translate(v414 * -30, v414 * 70);
    v407.rotate(this.rotate.ΔⲆⵠ);
    f302(v407, v1781, v414 * -10, v414 * -40, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1781 = ⵠΔ[604];
      f302(v407, v1781, v414 * -10, v414 * -40, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1781 = ⵠΔ[590][v2859.time];
    v407.save();
    v407.translate(v414 * 30, v414 * 70);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    f302(v407, v1781, v414 * 10 - Δⵠᐃ, v414 * -40, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1781 = ⵠΔ[605];
      f302(v407, v1781, v414 * 10 - Δⵠᐃ, v414 * -40, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.restore();
  }
  function f354() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1782 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1783 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1782;
      var v1784 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1782;
    } else {
      v1783 = 0;
      v1784 = 0;
    }
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1783, v2860.Δⵠⵠ.y + this.y + v1784);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[228][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f355() {
    if (this.info !== 10) {
      for (var v1785 = this.info & 15, v1786 = 0; v1786 < v1785; v1786++) {
        this.ᐃⲆᐃⲆ[v1786].ⲆⵠⲆᐃ(317, this.x, this.y);
      }
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV16 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
          this.ᐃᐃΔ.ⵠΔᐃ = vVV162;
        }
        var v1787 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
        var v1788 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1787;
        var v1789 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1787;
      } else {
        v1788 = 0;
        v1789 = 0;
      }
      if (this.info & 16) {
        var v1790 = ⵠΔ[1234][v2859.time];
      } else {
        v1790 = ⵠΔ[1233][v2859.time];
      }
      f302(v407, v1790, -v1790.width / 2 + v1788, -v1790.width / 2 + v1789);
      v407.restore();
    }
  }
  function f356() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.info & 31 && this.info & 992 && ~this.info & 31744 && (this.ⲆΔᐃΔⲆ.length == 0 || v594.ΔᐃⵠΔΔⲆΔ >= this.ⲆΔᐃΔⲆ[this.ⲆΔᐃΔⲆ.length - 1])) {
      this.ⲆΔᐃΔⲆ.push(v594.ΔⵠⲆⲆⵠᐃΔ);
    }
    for (var v1791 = 0; v1791 < this.ⲆΔᐃΔⲆ.length; v1791++) {
      this.ⲆΔᐃΔⲆ[v1791] = Math.max(0, this.ⲆΔᐃΔⲆ[v1791] - v3091 * v594.ⵠΔⲆⲆᐃΔⵠ);
      v407.globalAlpha = this.ⲆΔᐃΔⲆ[v1791] / 1.3;
      var v1792 = (1 - this.ⲆΔᐃΔⲆ[v1791]) * 40;
      var v1793 = (1 - this.ⲆΔᐃΔⲆ[v1791]) * 35 + 10;
      f94(v407, v414 * -68 + v1792 * Math.sin(-this.angle - Math.PI / 2), v414 * -20 + Math.cos(-this.angle - Math.PI / 2) * v1792, v1793);
      f89(v407, "#333333");
    }
    v407.globalAlpha = 1;
    if (this.ⲆΔᐃΔⲆ.length > 0 && this.ⲆΔᐃΔⲆ[0] === 0) {
      this.ⲆΔᐃΔⲆ.shift();
    }
    v407.restore();
  }
  function f357() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1794 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1795 = v1794 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1796 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1794;
    } else {
      v1795 = 0;
      v1796 = 0;
    }
    var v1797 = this.info & 15;
    if (this.info === 10 || v1797 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1798 = ⵠΔ[1229][v2859.time];
      } else {
        v1798 = ⵠΔ[314][v2859.time];
      }
      var v1799 = -v1798.width * this.ΔΔⵠΔ.ΔⲆⵠ;
      var v1800 = -v1798.height * this.ΔΔⵠΔ.ΔⲆⵠ;
      f302(v407, v1798, -v1799 / 2 + v1795, -v1800 / 2 + v1796, v1799, v1800);
    } else {
      if (this.info & 16) {
        v1798 = ⵠΔ[1230][v2859.time];
      } else {
        v1798 = ⵠΔ[315][v2859.time];
      }
      v407.translate(0, v1798.height / 2);
      f302(v407, v1798, v1795 - v1798.width / 2, -v1798.height + v1796);
    }
    v407.restore();
  }
  function f358() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1801 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1802 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1801;
      var v1803 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1801;
    } else {
      v1802 = 0;
      v1803 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1802 += Math.random() * 2 - 1;
      v1803 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1802, v2860.Δⵠⵠ.y + this.y + v1803);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[246][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1553][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f359() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ΔᐃⵠⲆΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[1547][v2859.time];
    Δⵠᐃ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height * this.ΔᐃⵠⲆΔ.ΔⲆⵠ;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f360() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVVV16) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1804 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1805 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1804;
      var v1806 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1804;
    } else {
      v1805 = 0;
      v1806 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1805 += Math.random() * 2 - 1;
      v1806 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1805, v2860.Δⵠⵠ.y + this.y + v1806);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[247][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1557][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f361() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = v16;
      }
      var v1807 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1808 = v1807 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1809 = v1807 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1808 = 0;
      v1809 = 0;
    }
    this.ⵠⲆⵠⲆⵠⵠᐃ = (this.ⵠⲆⵠⲆⵠⵠᐃ + v3091 * 3) % (Math.PI * 2);
    this.ⵠⵠΔᐃⲆⲆⵠ = (this.ⵠⵠΔᐃⲆⲆⵠ - v3091 * 3) % (Math.PI * 2);
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1808, v2860.Δⵠⵠ.y + this.y + v1809);
    v407.save();
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[245][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.save();
    v407.rotate(this.ⵠⲆⵠⲆⵠⵠᐃ);
    ⵠⵠ = ⵠΔ[1549][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.save();
    v407.rotate(this.ⵠⵠΔᐃⲆⲆⵠ);
    ⵠⵠ = ⵠΔ[1548][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.restore();
  }
  function f362() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVVV16223) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1810 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1811 = v1810 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1812 = v1810 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1811 = 0;
      v1812 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1811 += Math.random() * 2 - 1;
      v1812 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1811, v2860.Δⵠⵠ.y + this.y + v1812);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[250][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1569][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f363() {
    if (~this.info & 1) {
      this.ᐃⲆΔⲆΔ = Math.max(this.ᐃⲆΔⲆΔ - v3091, 0);
      this.ⲆⵠⲆⵠᐃⲆⲆ += v3091;
      if (this.ⲆⵠⲆⵠᐃⲆⲆ > 0.1) {
        this.ⲆⵠⲆⵠᐃⲆⲆ = 0;
        var v1813 = {
          x: this.x + Math.random() * 60 - 30,
          y: this.y + Math.random() * 60 - 30,
          a: 0,
          r: Math.random() * 30 + 30
        };
        this.ΔΔⵠΔ.push(v1813);
      }
    } else {
      this.ᐃⲆΔⲆΔ = Math.min(this.ᐃⲆΔⲆΔ + v3091, 2.2);
    }
    for (var v1814 = 0; v1814 < this.ΔΔⵠΔ.length; v1814++) {
      v1813 = this.ΔΔⵠΔ[v1814];
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + v1813.x, v2860.Δⵠⵠ.y + v1813.y);
      v1813.a = Math.min(1, 0 + v3091 / 2);
      var v1815 = 0;
      if (v1815 < 0.2) {
        v1815 *= 5;
      } else {
        v1815 = v1815 > 0.8 ? (1 - v1815) * 5 : 1;
      }
      v407.globalAlpha = v1815 * 0.8;
      f94(v407, 0, 0, v1813.r);
      f89(v407, v594.ⵠⲆᐃⲆΔᐃⲆ[v2859.time]);
      v407.restore();
      if (1 === 0) {
        this.ΔΔⵠΔ.splice(v1814, 1);
        v1814--;
      }
    }
  }
  function f364(p1220) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ΔΔⵠΔ.ⵠΔᐃ();
    v407.globalAlpha = 0.3;
    var v1816 = ⵠΔ[392][v2859.time];
    var v1817 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1816.width;
    var v1818 = -v1816.height * this.ΔΔⵠΔ.ΔⲆⵠ;
    f302(v407, v1816, -v1817 / 2, -v1818 / 2, v1817, v1818);
    v407.globalAlpha = 1;
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1819 = (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600 * v414;
      var v1820 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1819;
      var v1821 = v1819 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1820 = 0;
      v1821 = 0;
    }
    v1816 = ⵠΔ[p1220][v2859.time];
    f302(v407, v1816, -v1816.width / 2 + v1820, -v1816.height / 2 + v1821);
    v407.restore();
  }
  function f365() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    var v1822 = ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r);
    this.scale = v1822 > 350 ? Math.min(this.scale + v3091 / 2, 1.8) : Math.max(this.scale - v3091, 1);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    this.ΔⵠⲆᐃ = v1822 < 350 ? Math.max(0, this.ΔⵠⲆᐃ - v3091 * 2.2) : Math.min(1, this.ΔⵠⲆᐃ + v3091 * 2.2);
    v1823 = (this.info & 1) === 0 ? ⵠΔ[1421][v2859.time] : ⵠΔ[1422][v2859.time];
    Δⵠᐃ = this.scale * (-v1823.width * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.height * this.scale;
    v407.globalAlpha = 1 - this.ΔⵠⲆᐃ;
    f302(v407, v1823, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    v1823 = (this.info & 1) === 0 ? ⵠΔ[345][v2859.time] : ⵠΔ[1406][v2859.time];
    Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.width);
    ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.height);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1823, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * (1 - this.ΔⵠⲆᐃ);
      var v1823 = ⵠΔ[1423];
      Δⵠᐃ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.width);
      ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.height * this.scale;
      f302(v407, v1823, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * this.ΔⵠⲆᐃ;
      v1823 = ⵠΔ[1415];
      Δⵠᐃ = -v1823.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
      ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.height);
      f302(v407, v1823, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1823 = (this.info & 1) === 0 ? ⵠΔ[1410][v2859.time] : ⵠΔ[1409][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1823.width * this.scale;
    ᐃⵠⵠ = this.scale * (-v1823.height * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    v407.save();
    v407.translate(v414 * -20, v414 * 0);
    v407.rotate(this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1823, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * this.ΔⵠⲆᐃ;
      v1823 = ⵠΔ[1416];
      f302(v407, v1823, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1823 = (this.info & 1) === 0 ? ⵠΔ[1413][v2859.time] : ⵠΔ[1412][v2859.time];
    v407.save();
    v407.translate(v414 * 20, v414 * 0);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1823, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = this.ΔⵠⲆᐃ * (0.6 - this.ᐃᐃΔ.ΔⲆⵠ);
      v1823 = ⵠΔ[1417];
      f302(v407, v1823, -Δⵠᐃ * v414 / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.globalAlpha = 1;
    v407.restore();
    v407.restore();
  }
  function f366() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3091 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3091, 1);
    }
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    v1824 = ⵠΔ[588][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1824.width * this.scale;
    ᐃⵠⵠ = -v1824.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    f302(v407, v1824, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVVV162) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1824 = ⵠΔ[602];
      f302(v407, v1824, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1824 = ⵠΔ[591][v2859.time];
    Δⵠᐃ = this.scale * (-v1824.width * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    ᐃⵠⵠ = this.scale * (-v1824.height * this.ⵠⲆⵠΔ.ΔⲆⵠ);
    v407.save();
    v407.translate(v414 * -60, v414 * 20);
    v407.rotate(this.rotate.ΔⲆⵠ);
    f302(v407, v1824, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1824 = ⵠΔ[606];
      f302(v407, v1824, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1824 = ⵠΔ[592][v2859.time];
    v407.save();
    v407.translate(v414 * 60, v414 * 20);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    f302(v407, v1824, -Δⵠᐃ * v414 / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1824 = ⵠΔ[607];
      f302(v407, v1824, -Δⵠᐃ * v414 / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.restore();
  }
  function f367() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3091 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3091, 1);
    }
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    v1825 = this.info === 0 ? ⵠΔ[343][v2859.time] : ⵠΔ[1391][v2859.time];
    Δⵠᐃ = -v1825.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = -v1825.height * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    f302(v407, v1825, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVV1622) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1825 = ⵠΔ[1400];
      f302(v407, v1825, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1825 = this.info === 0 ? ⵠΔ[1395][v2859.time] : ⵠΔ[1394][v2859.time];
    Δⵠᐃ = -v1825.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1825.height * this.scale;
    v407.save();
    v407.translate(v414 * -40, v414 * 10);
    v407.rotate(this.rotate.ΔⲆⵠ);
    f302(v407, v1825, -Δⵠᐃ * v414 / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1825 = ⵠΔ[1401];
      f302(v407, v1825, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1825 = this.info === 0 ? ⵠΔ[1398][v2859.time] : ⵠΔ[1397][v2859.time];
    v407.save();
    v407.translate(v414 * 40, v414 * 10);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    f302(v407, v1825, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1825 = ⵠΔ[1402];
      f302(v407, v1825, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.restore();
  }
  function f368() {
    var v1826 = Math.PI / 2;
    var v1827 = Math.PI / 4;
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.ᐃᐃⵠΔⵠᐃⵠ.ⵠΔᐃ();
    this.ⵠⲆΔᐃΔΔⲆ.ⵠΔᐃ();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1828 = this.info === 0 ? ⵠΔ[1163][v2859.time] : ⵠΔ[1162][v2859.time];
    Δⵠᐃ = -v1828.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = -v1828.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1828 = ⵠΔ[1164];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.ᐃⵠΔⵠΔ.ⵠΔᐃ() && vVVV16 == this.ᐃⵠΔⵠΔ.ⵠⵠⲆ) {
        this.action -= 4;
      }
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1828 = ⵠΔ[1167];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle + v1827);
    v407.translate(55, 0);
    v407.rotate(v1826);
    v1828 = this.info === 0 ? ⵠΔ[1170][v2859.time] : ⵠΔ[1172][v2859.time];
    Δⵠᐃ = this.ᐃᐃⵠΔⵠᐃⵠ.ΔⲆⵠ * -v1828.width;
    ᐃⵠⵠ = this.ᐃᐃⵠΔⵠᐃⵠ.ΔⲆⵠ * -v1828.height;
    f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1828 = ⵠΔ[1165];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1828 = ⵠΔ[1168];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle + v1826 + v1827);
    v407.translate(55, 0);
    v407.rotate(v1826);
    v1828 = this.info === 0 ? ⵠΔ[1171][v2859.time] : ⵠΔ[1173][v2859.time];
    Δⵠᐃ = this.ⵠⲆΔᐃΔΔⲆ.ΔⲆⵠ * -v1828.width;
    ᐃⵠⵠ = this.ⵠⲆΔᐃΔΔⲆ.ΔⲆⵠ * -v1828.height;
    f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1828 = ⵠΔ[1166];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1828 = ⵠΔ[1169];
      f302(v407, v1828, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f369() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV164 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1829 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1830 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1829;
      var v1831 = v1829 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1830 = 0;
      v1831 = 0;
    }
    this.ⵠⲆⵠⲆⵠⵠᐃ = (this.ⵠⲆⵠⲆⵠⵠᐃ + v3091 * 3) % (Math.PI * 2);
    this.ⵠⵠΔᐃⲆⲆⵠ = (this.ⵠⵠΔᐃⲆⲆⵠ - v3091 * 3) % (Math.PI * 2);
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1830, v2860.Δⵠⵠ.y + this.y + v1831);
    v407.save();
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[244][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.save();
    v407.rotate(this.ⵠⲆⵠⲆⵠⵠᐃ);
    ⵠⵠ = ⵠΔ[666][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.save();
    v407.rotate(this.ⵠⵠΔᐃⲆⲆⵠ);
    ⵠⵠ = ⵠΔ[665][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.restore();
  }
  function f370() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV162 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1832 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1833 = v1832 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1834 = v1832 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1833 = 0;
      v1834 = 0;
    }
    if (this.action == 2) {
      ⵠⵠ = ⵠΔ[518][v2859.time];
    } else {
      ⵠⵠ = ⵠΔ[210][v2859.time];
    }
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2 + v1833, -ⵠⵠ.height / 2 + v1834);
    v407.restore();
  }
  function f371() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    var v1835 = ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r);
    this.scale = v1835 > 350 ? Math.min(this.scale + v3091 / 2, 1.8) : Math.max(this.scale - v3091, 1);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    this.ΔⵠⲆᐃ = v1835 < 350 ? Math.max(0, this.ΔⵠⲆᐃ - v3091 * 2.2) : Math.min(1, this.ΔⵠⲆᐃ + v3091 * 2.2);
    v1836 = ⵠΔ[1443][v2859.time];
    Δⵠᐃ = -v1836.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1836.height);
    v407.globalAlpha = 1 - this.ΔⵠⲆᐃ;
    f302(v407, v1836, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    v1836 = ⵠΔ[1427][v2859.time];
    Δⵠᐃ = -v1836.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1836.height * this.scale;
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1836, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * (1 - this.ΔⵠⲆᐃ);
      var v1836 = ⵠΔ[1444];
      Δⵠᐃ = this.scale * (-v1836.width * this.ⵠⲆⵠΔ.ΔⲆⵠ);
      ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1836.height * this.scale;
      f302(v407, v1836, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = this.ΔⵠⲆᐃ * (0.6 - this.ᐃᐃΔ.ΔⲆⵠ);
      v1836 = ⵠΔ[1436];
      Δⵠᐃ = -v1836.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
      ᐃⵠⵠ = this.scale * (this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1836.height);
      f302(v407, v1836, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v1836 = ⵠΔ[1430][v2859.time];
    Δⵠᐃ = -v1836.width * this.ⵠⲆⵠΔ.ΔⲆⵠ * this.scale;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1836.height * this.scale;
    v407.save();
    v407.translate(v414 * -40, v414 * 80);
    v407.rotate(this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1836, -Δⵠᐃ * v414 / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = this.ΔⵠⲆᐃ * (0.6 - this.ᐃᐃΔ.ΔⲆⵠ);
      v1836 = ⵠΔ[1437];
      f302(v407, v1836, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v1836 = ⵠΔ[1433][v2859.time];
    v407.save();
    v407.translate(v414 * 40, v414 * 80);
    v407.rotate(-this.rotate.ΔⲆⵠ);
    v407.globalAlpha = this.ΔⵠⲆᐃ;
    f302(v407, v1836, v414 * -Δⵠᐃ / 4, -ᐃⵠⵠ * v414 / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * this.ΔⵠⲆᐃ;
      v1836 = ⵠΔ[1438];
      f302(v407, v1836, v414 * -Δⵠᐃ / 4, v414 * -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.globalAlpha = 1;
    v407.restore();
    v407.restore();
  }
  function f372(p1221, p1222, p1223, p1224, p1225, p1226, p1227, p1228, p1229) {
    if (vVVUndefined163 === p1228) {
      p1228 = 0;
    }
    for (var vP1221 = p1221; p1222 >= vP1221; vP1221++) {
      for (var vP1223 = p1223; p1224 >= vP1223; vP1223++) {
        var v1837 = v2856.ⵠΔⲆΔ[vP1221][vP1223];
        if (v1837 !== vVVUndefined152 && vVVVVUndefined1722 !== v1837[p1226]) {
          var v1838 = v1837[p1226];
          var v1839 = ⵠΔ[p1225][v2859.time][v1838.ⵠⲆᐃⵠΔⲆⲆ];
          f302(v407, v1839, v2860.Δⵠⵠ.x + v1838.x - v1839.width / (ⵠΔⵠⵠⵠ * 4), v2860.Δⵠⵠ.y + v1838.y - v1839.height / (ⵠΔⵠⵠⵠ * 4), v1839.width / (ⵠΔⵠⵠⵠ * 2), v1839.height / (ⵠΔⵠⵠⵠ * 2));
          if (v2858.ᐃᐃΔⵠⵠ) {
            var v1840 = 2147483648;
            var v1841 = ((vP1221 * 1000 + vP1223) * 1103515245 + 12345) % v1840 / v1840;
            if (v1841 < 0.2) {
              v1841 = Math.floor(ⵠΔ[1333][v2859.time][v1838.ⵠⲆᐃⵠΔⲆⲆ].length * (v1841 * 5));
              v1839 = ⵠΔ[1333][v2859.time][v1838.ⵠⲆᐃⵠΔⲆⲆ][v1841];
              f302(v407, v1839, v2860.Δⵠⵠ.x + v1838.x - v1839.width / (ⵠΔⵠⵠⵠ * 4), v2860.Δⵠⵠ.y + v1838.y - v1839.height / (ⵠΔⵠⵠⵠ * 4), v1839.width / (ⵠΔⵠⵠⵠ * 2), v1839.height / (ⵠΔⵠⵠⵠ * 2));
            } else if (v1838.ⵠⵠⲆⵠᐃᐃᐃ !== 0) {
              v1839 = ⵠΔ[1334][v2859.time];
              var v1842 = (v1738 + vP1221 % 2 * 30) % 60;
              v407.globalAlpha = v1842 < 30 ? v1842 / 30 : 1 - (v1842 - 30) / 30;
              f302(v407, v1839, v2860.Δⵠⵠ.x + v1838.x - v1839.width / (ⵠΔⵠⵠⵠ * 4), v2860.Δⵠⵠ.y + v1838.y - v1839.height / (ⵠΔⵠⵠⵠ * 4) - 30 + v1842, v1839.width / (ⵠΔⵠⵠⵠ * 2), v1839.height / (ⵠΔⵠⵠⵠ * 2));
              v407.globalAlpha = 1;
            }
          }
        }
      }
    }
  }
  function f373() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVVVV1623 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVV165;
      }
      var v1843 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1844 = v1843 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1845 = v1843 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1844 = 0;
      v1845 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1844 += Math.random() * 2 - 1;
      v1845 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1844, v2860.Δⵠⵠ.y + this.y + v1845);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[251][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1573][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f374(p1230) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[p1230][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = -ⵠⵠ.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f375() {
    var v1846 = Math.PI / 2;
    var v1847 = Math.PI / 4;
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.ᐃᐃⵠΔⵠᐃⵠ.ⵠΔᐃ();
    this.ⵠⲆΔᐃΔΔⲆ.ⵠΔᐃ();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1848 = this.info === 0 ? ⵠΔ[341][v2859.time] : ⵠΔ[1361][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1848.width;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1848.height;
    f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVV162) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1848 = ⵠΔ[1364];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.ᐃⵠΔⵠΔ.ⵠΔᐃ() && this.ᐃⵠΔⵠΔ.ⵠⵠⲆ == 0) {
        this.action -= 4;
      }
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1848 = ⵠΔ[1373];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle + v1847);
    v407.translate(100, 0);
    v407.rotate(v1846);
    v1848 = this.info === 0 ? ⵠΔ[1368][v2859.time] : ⵠΔ[1367][v2859.time];
    Δⵠᐃ = -v1848.width * this.ᐃᐃⵠΔⵠᐃⵠ.ΔⲆⵠ;
    ᐃⵠⵠ = this.ᐃᐃⵠΔⵠᐃⵠ.ΔⲆⵠ * -v1848.height;
    f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1848 = ⵠΔ[1365];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1848 = ⵠΔ[1374];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle + v1846 + v1847);
    v407.translate(100, 0);
    v407.rotate(v1846);
    v1848 = this.info === 0 ? ⵠΔ[1371][v2859.time] : ⵠΔ[1370][v2859.time];
    Δⵠᐃ = -v1848.width * this.ⵠⲆΔᐃΔΔⲆ.ΔⲆⵠ;
    ᐃⵠⵠ = -v1848.height * this.ⵠⲆΔᐃΔΔⲆ.ΔⲆⵠ;
    f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      v1848 = ⵠΔ[1366];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    if (this.action & 4) {
      v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
      v1848 = ⵠΔ[1375];
      f302(v407, v1848, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f376() {
    var vVVVVVVUndefined173 = vVVVVVUndefined173;
    var vUndefined3 = undefined;
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    this.rotate.ⵠΔᐃ();
    if (this.ᐃⲆΔⲆΔ >= 0.1 && this.ᐃⲆΔⲆΔ <= 1.1) {
      if ((v1849 = Math.max(0, Math.min(1, this.ᐃⲆΔⲆΔ - 0.1))) < 0.2) {
        v1849 *= 5;
      } else {
        v1849 = v1849 > 0.8 ? (1 - v1849) * 5 : 1;
      }
      vVVVVVVUndefined173 = ⵠΔ[1478][v2859.time];
      Δⵠᐃ = -vVVVVVVUndefined173.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
      ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -vVVVVVVUndefined173.height;
      v407.globalAlpha = v1849;
      f302(v407, vVVVVVVUndefined173, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      vUndefined3 = ⵠΔ[1479];
    }
    if (this.ᐃⲆΔⲆΔ >= 0.9) {
      var v1849;
      if ((v1849 = Math.max(0, Math.min(1, this.ᐃⲆΔⲆΔ - 0.9))) < 0.2) {
        v1849 *= 5;
      } else {
        v1849 = 1;
      }
      vVVVVVVUndefined173 = ⵠΔ[1480][v2859.time];
      Δⵠᐃ = -vVVVVVVUndefined173.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
      ᐃⵠⵠ = -vVVVVVVUndefined173.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
      v407.globalAlpha = v1849;
      f302(v407, vVVVVVVUndefined173, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      vUndefined3 = ⵠΔ[1481];
    }
    if (this.action & 2 && vVVVUndefined1422 !== vUndefined3) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVVV162) {
        this.action -= 2;
      }
      v407.globalAlpha = (0.6 - this.ᐃᐃΔ.ΔⲆⵠ) * v1849;
      Δⵠᐃ = -vUndefined3.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
      ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -vUndefined3.height;
      f302(v407, vUndefined3, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    }
    v407.globalAlpha = 1;
    v407.restore();
  }
  function f377() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == v16) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1850 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1851 = v1850 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1852 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1850;
    } else {
      v1851 = 0;
      v1852 = 0;
    }
    var v1853 = this.info & 15;
    if (this.info === 10 || v1853 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1854 = ⵠΔ[1261][v2859.time];
      } else {
        v1854 = ⵠΔ[320][v2859.time];
      }
      var v1855 = -v1854.width * this.ΔΔⵠΔ.ΔⲆⵠ;
      var v1856 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1854.height;
      f302(v407, v1854, -v1855 / 2 + v1851, -v1856 / 2 + v1852, v1855, v1856);
    } else {
      if (this.info & 16) {
        v1854 = ⵠΔ[1262][v2859.time];
      } else {
        v1854 = ⵠΔ[321][v2859.time];
      }
      v407.translate(0, v1854.height / 2);
      f302(v407, v1854, v1851 - v1854.width / 2, -v1854.height + v1852);
    }
    v407.restore();
  }
  function f378() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ΔΔⵠΔ.ⵠΔᐃ();
    v407.globalAlpha = 0.3;
    var v1857 = ⵠΔ[392][v2859.time];
    var v1858 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1857.width;
    var v1859 = -v1857.height * this.ΔΔⵠΔ.ΔⲆⵠ;
    f302(v407, v1857, -v1858 / 2, -v1859 / 2, v1858, v1859);
    v407.globalAlpha = 1;
    v407.restore();
  }
  function f379() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVV164;
      }
      var v1860 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1861 = v1860 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1862 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1860;
    } else {
      v1861 = 0;
      v1862 = 0;
    }
    var v1863 = this.info & 15;
    if (this.info === 10 || v1863 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1864 = ⵠΔ[1098][v2859.time];
      } else {
        v1864 = ⵠΔ[295][v2859.time];
      }
      var v1865 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1864.width;
      var v1866 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1864.height;
      f302(v407, v1864, -v1865 / 2 + v1861, -v1866 / 2 + v1862, v1865, v1866);
    } else {
      if (this.info & 16) {
        v1864 = ⵠΔ[1118][v2859.time];
      } else {
        v1864 = ⵠΔ[296][v2859.time];
      }
      v407.translate(0, v1864.height / 2);
      f302(v407, v1864, v1861 - v1864.width / 2, -v1864.height + v1862);
    }
    v407.restore();
  }
  function f380() {
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1867 = this.info === 0 ? ⵠΔ[358][v2859.time] : ⵠΔ[1613][v2859.time];
    Δⵠᐃ = -v1867.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1867.height;
    f302(v407, v1867, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1867 = ⵠΔ[1614];
      f302(v407, v1867, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f381() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1868 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1869 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1868;
      var v1870 = v1868 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1869 = 0;
      v1870 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1869 += Math.random() * 2 - 1;
      v1870 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1869, v2860.Δⵠⵠ.y + this.y + v1870);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[248][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1561][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f382(p1231, p1232) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (p1231 === 1103) {
      p1231 = 360;
      this.info = 41;
    }
    ⵠⵠ = ⵠΔ[p1231][this.info][v2859.time];
    Δⵠᐃ = -ⵠⵠ.width / 2;
    ᐃⵠⵠ = -ⵠⵠ.height / 2;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vV163) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var vNv = f404(this.info, ⵠⵠ, ΔⲆᐃⵠΔⵠᐃᐃᐃ);
      f302(v407, vNv, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f383() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠᐃⵠΔᐃⵠⵠ = Math.min(1, this.ⵠᐃⵠΔᐃⵠⵠ + v3091 * 2);
    v407.globalAlpha = Math.min(1, Math.max(0, ⵠⵠΔ.ᐃᐃⵠⲆ(this, this.r) / 80)) * this.ⵠᐃⵠΔᐃⵠⵠ;
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[357][v2859.time][this.ΔᐃΔΔΔᐃΔ];
    if (this.ΔᐃΔΔΔᐃΔ < 2) {
      Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -ⵠⵠ.width;
      ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -ⵠⵠ.height;
    } else if (this.ⵠΔⵠᐃⲆΔⵠ === 0) {
      Δⵠᐃ = -ⵠⵠ.width;
      ᐃⵠⵠ = -ⵠⵠ.height;
    } else {
      Δⵠᐃ = -ⵠⵠ.width * 1.35;
      ᐃⵠⵠ = -ⵠⵠ.height * 1.35;
    }
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.globalAlpha = 1;
    v407.restore();
  }
  function f384() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV165 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1871 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1872 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1871;
      var v1873 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1871;
    } else {
      v1872 = 0;
      v1873 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1872 += Math.random() * 2 - 1;
      v1873 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1872, v2860.Δⵠⵠ.y + this.y + v1873);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[254][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1585][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f385() {
    if (this.info !== 10) {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
          this.ᐃᐃΔ.ⵠΔᐃ = vVV1623;
        }
        var v1874 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
        var v1875 = v1874 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
        var v1876 = v1874 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
      } else {
        v1875 = 0;
        v1876 = 0;
      }
      if (this.info & 16) {
        var v1877 = ⵠΔ[842][v2859.time];
      } else {
        v1877 = ⵠΔ[397][v2859.time];
      }
      f302(v407, v1877, -v1877.width / 2 + v1875, -v1877.width / 2 + v1876);
      v407.restore();
      for (var v1878 = this.info & 15, v1879 = 0; v1879 < v1878; v1879++) {
        this.ᐃⲆᐃⲆ[v1879].ⲆⵠⲆᐃ(404);
      }
    }
  }
  function f386() {
    if (!(this.info < 10)) {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.angle);
      if (this.ᐃᐃΔ.ⵠΔᐃ) {
        if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
          this.ᐃᐃΔ.ⵠΔᐃ = vVVV1622;
        }
        var v1880 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
        var v1881 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1880;
        var v1882 = v1880 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
      } else {
        v1881 = 0;
        v1882 = 0;
      }
      this.ΔΔⵠΔ.ⵠΔᐃ();
      var v1883 = ⵠΔ[316][v2859.time];
      var v1884 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1883.width;
      var v1885 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1883.height;
      f302(v407, v1883, -v1884 / 2 + v1881, -v1885 / 2 + v1882, v1884, v1885);
      v407.restore();
    }
  }
  function f387() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ΔᐃⵠⲆΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[399][v2859.time];
    Δⵠᐃ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.height;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f388() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠⲆⲆΔΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[398][v2859.time];
    Δⵠᐃ = this.ⵠⲆⲆΔΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height * this.ⵠⲆⲆΔΔ.ΔⲆⵠ;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    this.ΔᐃⵠⲆΔ.ⵠΔᐃ();
    ⵠⵠ = ⵠΔ[399][v2859.time];
    Δⵠᐃ = this.ΔᐃⵠⲆΔ.ΔⲆⵠ * -ⵠⵠ.width;
    ᐃⵠⵠ = -ⵠⵠ.height * this.ΔᐃⵠⲆΔ.ΔⲆⵠ;
    f302(v407, ⵠⵠ, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    v407.restore();
  }
  function f389() {
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1886 = this.info === 0 ? ⵠΔ[1323][v2859.time] : ⵠΔ[1331][v2859.time];
    Δⵠᐃ = -v1886.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1886.height;
    f302(v407, v1886, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVV16) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1886 = ⵠΔ[1325];
      f302(v407, v1886, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f390() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV163 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1887 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1888 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1887;
      var v1889 = v1887 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1888 = 0;
      v1889 = 0;
    }
    if (this.info === 0) {
      ⵠⵠ = ⵠΔ[285][v2859.time];
    } else {
      ⵠⵠ = ⵠΔ[1051][v2859.time][this.info - 1];
    }
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2 + v1888, -ⵠⵠ.height / 2 + v1889);
    v407.restore();
  }
  function f391(p1233, p1234) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    v1890 = ⵠΔ[p1233][v2859.time];
    Δⵠᐃ = -v1890.width;
    ᐃⵠⵠ = -v1890.height;
    f302(v407, v1890, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVV16) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1890 = ⵠΔ[p1234];
      f302(v407, v1890, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f392() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVV16;
      }
      var v1891 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1892 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1891;
      var v1893 = v1891 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1892 = 0;
      v1893 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1892 += Math.random() * 2 - 1;
      v1893 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1892, v2860.Δⵠⵠ.y + this.y + v1893);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[257][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1597][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f393() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      var v1894 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1895 = v1894 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1896 = v1894 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1895 = 0;
      v1896 = 0;
    }
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 0.5) % (Math.PI * 2);
    }
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1895, v2860.Δⵠⵠ.y + this.y + v1896);
    v407.save();
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[860][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.save();
    v407.rotate(this.ᐃᐃⲆΔⲆᐃᐃⲆᐃ);
    ⵠⵠ = ⵠΔ[861][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
    v407.restore();
  }
  function f394(p1235, p1236) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    v1897 = ⵠΔ[p1235][v2859.time];
    Δⵠᐃ = -v1897.width * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    ᐃⵠⵠ = -v1897.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, v1897, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == 0) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1897 = ⵠΔ[p1236];
      f302(v407, v1897, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f395() {
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vV162) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1898 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1899 = v1898 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1900 = v1898 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1899 = 0;
      v1900 = 0;
    }
    v407.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1899 += Math.random() * 2 - 1;
      v1900 += Math.random() * 2 - 1;
    }
    v407.translate(v2860.Δⵠⵠ.x + this.x + v1899, v2860.Δⵠⵠ.y + this.y + v1900);
    v407.rotate(this.angle);
    ⵠⵠ = ⵠΔ[258][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3091 * 3) % (Math.PI * 2);
    }
    v407.rotate(this.rotate);
    ⵠⵠ = ⵠΔ[1601][v2859.time];
    f302(v407, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
    v407.restore();
  }
  function f396() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && vVV165 == this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1901 = v414 * (v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600);
      var v1902 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1901;
      var v1903 = v1901 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1902 = 0;
      v1903 = 0;
    }
    if (this.info & 31 && this.info & 992 && ~this.info & 31744) {
      v1904 = ⵠΔ[965][v2859.time];
      f302(v407, v1904, -v1904.width / 2 + v1902, -v1904.height / 2 + v1903);
      this.up.ⵠΔᐃ();
      var v1904 = ⵠΔ[969][v2859.time];
      var v1905 = -v1904.width * this.up.ΔⲆⵠ;
      var v1906 = this.up.ΔⲆⵠ * -v1904.height;
      f302(v407, v1904, -v1905 / 2 + v414 * 1, -v1906 / 2 + v414 * 3, v1905, v1906);
    } else {
      v1904 = ⵠΔ[237][v2859.time];
      f302(v407, v1904, -v1904.width / 2 + v1902, -v1904.height / 2 + v1903);
    }
    v407.restore();
  }
  function f397(p1237, p1238) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    v407.rotate(this.angle);
    this.ⵠⲆⵠΔ.ⵠΔᐃ();
    v1907 = ⵠΔ[p1237][v2859.time];
    Δⵠᐃ = this.ⵠⲆⵠΔ.ΔⲆⵠ * -v1907.width;
    ᐃⵠⵠ = -v1907.height * this.ⵠⲆⵠΔ.ΔⲆⵠ;
    f302(v407, v1907, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃᐃΔ.ⵠΔᐃ() && this.ᐃᐃΔ.ⵠⵠⲆ == vVVV16) {
        this.action -= 2;
      }
      v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
      var v1907 = ⵠΔ[p1238];
      f302(v407, v1907, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
      v407.globalAlpha = 1;
    }
    v407.restore();
  }
  function f398() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = vVVV163;
      }
      var v1908 = v414 * ((1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * v3091 * 600);
      var v1909 = v1908 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1910 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1908;
    } else {
      v1909 = 0;
      v1910 = 0;
    }
    var v1911 = this.info & 15;
    if (this.info === 10 || v1911 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1912 = ⵠΔ[1087][v2859.time];
      } else {
        v1912 = ⵠΔ[293][v2859.time];
      }
      var v1913 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1912.width;
      var v1914 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1912.height;
      f302(v407, v1912, -v1913 / 2 + v1909, -v1914 / 2 + v1910, v1913, v1914);
    } else {
      if (this.info & 16) {
        v1912 = ⵠΔ[1088][v2859.time];
      } else {
        v1912 = ⵠΔ[294][v2859.time];
      }
      v407.translate(0, v1912.height / 2);
      f302(v407, v1912, v1909 - v1912.width / 2, -v1912.height + v1910);
    }
    v407.restore();
  }
  function f399() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == vVVV1622) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1915 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1916 = v1915 * Math.sin(this.ᐃᐃΔ.angle - this.angle);
      var v1917 = v1915 * Math.cos(this.ᐃᐃΔ.angle - this.angle);
    } else {
      v1916 = 0;
      v1917 = 0;
    }
    var v1918 = this.info & 15;
    if (this.info === 10 || v1918 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1919 = ⵠΔ[1246][v2859.time];
      } else {
        v1919 = ⵠΔ[318][v2859.time];
      }
      var v1920 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1919.width;
      var v1921 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1919.height;
      f302(v407, v1919, -v1920 / 2 + v1916, -v1921 / 2 + v1917, v1920, v1921);
    } else {
      if (this.info & 16) {
        v1919 = ⵠΔ[1247][v2859.time];
      } else {
        v1919 = ⵠΔ[319][v2859.time];
      }
      v407.translate(0, v1919.height / 2);
      f302(v407, v1919, v1916 - v1919.width / 2, -v1919.height + v1917);
    }
    v407.restore();
  }
  function f400() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.ᐃᐃΔ.ⵠΔᐃ) {
      if (this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠΔᐃ() && this.ᐃᐃΔ.ᐃⵠᐃⲆ.ⵠⵠⲆ == 0) {
        this.ᐃᐃΔ.ⵠΔᐃ = false;
      }
      var v1922 = v3091 * (1 - this.ᐃᐃΔ.ᐃⵠᐃⲆ.ΔⲆⵠ) * 600 * v414;
      var v1923 = Math.sin(this.ᐃᐃΔ.angle - this.angle) * v1922;
      var v1924 = Math.cos(this.ᐃᐃΔ.angle - this.angle) * v1922;
    } else {
      v1923 = 0;
      v1924 = 0;
    }
    var v1925 = this.info & 15;
    if (this.info === 10 || v1925 === 0) {
      v407.rotate(this.angle);
      this.ΔΔⵠΔ.ⵠΔᐃ();
      if (this.info & 16) {
        var v1926 = ⵠΔ[1061][v2859.time];
      } else {
        v1926 = ⵠΔ[290][v2859.time];
      }
      var v1927 = -v1926.width * this.ΔΔⵠΔ.ΔⲆⵠ;
      var v1928 = this.ΔΔⵠΔ.ΔⲆⵠ * -v1926.height;
      f302(v407, v1926, -v1927 / 2 + v1923, -v1928 / 2 + v1924, v1927, v1928);
    } else {
      if (this.info & 16) {
        v1926 = ⵠΔ[1062][v2859.time];
      } else {
        v1926 = ⵠΔ[291][v2859.time];
      }
      v407.translate(0, v1926.height / 2);
      f302(v407, v1926, v1923 - v1926.width / 2, -v1926.height + v1924);
    }
    v407.restore();
  }
  function f401(p1239) {
    if (p1239 > 0) {
      var v1929 = ⵠΔ[p1239][v2859.time];
      switch (p1239) {
        case 104:
          f426(p1239, v1929, -v1929.width / 2 + v414 * 2, -v1929.height / 2 - v414 * 5);
          break;
        case 10:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 18);
          break;
        case 11:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 10);
          break;
        case 32:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 19);
          break;
        case 33:
          f432(p1239, v1929, -v1929.width / 4, -v1929.height / 4 - v414 * 20);
          break;
        case 34:
          f426(p1239, v1929, -v1929.width / 2 - v414 * 1, -v1929.height / 2 - v414 * 23);
          break;
        case 35:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 5);
          break;
        case 36:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 2);
          break;
        case 70:
          f426(p1239, v1929, -v1929.width / 2 + v414 * 1.5, -v1929.height / 2 - v414 * 1);
          break;
        case 71:
        case 29:
        case 30:
        case 31:
        case 153:
        case 154:
        case 155:
        case 106:
        case 163:
        case 161:
        case 160:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
          f432(p1239, v1929, -v1929.width / 4, -v1929.height / 4 + v414 * 2);
          break;
        case 68:
        case 69:
          f426(p1239, v1929, -v1929.width / 2 - v414 * 5, -v1929.height / 2 - v414 * 2);
          break;
        case 67:
        case 158:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 2);
          break;
        case 84:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 2);
          break;
        case 83:
          f426(p1239, v1929, -v1929.width / 2 + v414 * 2, -v1929.height / 2);
          break;
        case 105:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 5);
          break;
        case 150:
        case 151:
        case 152:
          f426(p1239, v1929, -v1929.width / 2 - v414 * 1, -v1929.height / 2);
          break;
        case 156:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 + v414 * 2);
          break;
        case 157:
        case 159:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 + v414 * 8);
          break;
        case 107:
          f426(p1239, v1929, -v1929.width / 2, -v1929.height / 2 - v414 * 4);
      }
    }
  }
  function f402() {
    if (!this.ᐃΔΔᐃᐃ && this.ⵠⵠⵠⵠ !== 0) {
      if (this.x != this.r.x || this.r.y != this.y) {
        var v1930 = (ⵠⵠΔ.ⵠⲆᐃⲆⵠⲆⲆ(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (Math.PI * 2);
        this.ⵠⲆᐃᐃᐃ = ⵠⵠΔ.ⵠΔΔⲆᐃΔΔ(v1930, this.ⵠⲆᐃᐃᐃ);
        this.ⵠⲆᐃᐃᐃ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ⵠⲆᐃᐃᐃ, v1930, 0.018);
      }
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v407.rotate(this.ⵠⲆᐃᐃᐃ);
      if (this.ⵠⵠⵠⵠ === 333) {
        if (this.ⲆᐃᐃΔⵠ > 50 || this.ΔᐃⲆⲆ > 0) {
          if (this.ⲆᐃᐃΔⵠ > 50) {
            this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091);
          } else {
            this.ΔᐃⲆⲆ = Math.max(0, this.ΔᐃⲆⲆ - v3091);
          }
          v407.globalAlpha = this.ΔᐃⲆⲆ;
          var v1931 = ⵠΔ[335][v2859.time];
          f432(335, v1931, -v1931.width / 4, -v1931.height / 4);
          v407.globalAlpha = 1;
        }
        v1931 = ⵠΔ[333][v2859.time];
        f432(333, v1931, -v1931.width / 4, -v1931.height / 4);
      } else if (this.ⵠⵠⵠⵠ === 339) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        this.ⲆⵠΔⵠⵠ.ⵠΔᐃ();
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0.1, this.ΔᐃⲆⲆ - v3091);
        }
        v1931 = ⵠΔ[1408][v2859.time];
        f432(1408, v1931, -v1931.width / 4, -v1931.height / 4);
        v1931 = ⵠΔ[1411][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        v407.save();
        v407.translate(v414 * -20, v414 * -20);
        v407.rotate(this.ΔᐃⲆⲆ * this.ⲆⵠΔⵠⵠ.ΔⲆⵠ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
        v1931 = ⵠΔ[1414][v2859.time];
        v407.save();
        v407.translate(v414 * 20, v414 * -20);
        v407.rotate(-this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
      } else if (this.ⵠⵠⵠⵠ === 355) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        this.ⲆⵠΔⵠⵠ.ⵠΔᐃ();
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0.1, this.ΔᐃⲆⲆ - v3091);
        }
        v1931 = ⵠΔ[1429][v2859.time];
        f432(1429, v1931, -v1931.width / 4, -v1931.height / 4);
        v1931 = ⵠΔ[1432][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        v407.save();
        v407.translate(v414 * -20, v414 * -20);
        v407.rotate(this.ΔᐃⲆⲆ * this.ⲆⵠΔⵠⵠ.ΔⲆⵠ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
        v1931 = ⵠΔ[1435][v2859.time];
        v407.save();
        v407.translate(v414 * 20, v414 * -20);
        v407.rotate(this.ΔᐃⲆⲆ * -this.ⲆⵠΔⵠⵠ.ΔⲆⵠ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
      } else if (this.ⵠⵠⵠⵠ === 354) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        this.ⲆⵠΔⵠⵠ.ⵠΔᐃ();
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0.1, this.ΔᐃⲆⲆ - v3091);
        }
        v1931 = ⵠΔ[1447][v2859.time];
        f432(1447, v1931, -v1931.width / 4, -v1931.height / 4);
        v1931 = ⵠΔ[1450][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        v407.save();
        v407.translate(v414 * -20, v414 * -20);
        v407.rotate(this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
        v1931 = ⵠΔ[1453][v2859.time];
        v407.save();
        v407.translate(v414 * 20, v414 * -20);
        v407.rotate(-this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
      } else if (this.ⵠⵠⵠⵠ === 338) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        this.ⲆⵠΔⵠⵠ.ⵠΔᐃ();
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0.1, this.ΔᐃⲆⲆ - v3091);
        }
        v1931 = ⵠΔ[1393][v2859.time];
        f432(1393, v1931, -v1931.width / 4, -v1931.height / 4);
        v1931 = ⵠΔ[1396][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        v407.save();
        v407.translate(v414 * -40, v414 * -45);
        v407.rotate(this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
        v1931 = ⵠΔ[1399][v2859.time];
        v407.save();
        v407.translate(v414 * 40, v414 * -45);
        v407.rotate(-this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
      } else if (this.ⵠⵠⵠⵠ === 337) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        this.ⲆⵠΔⵠⵠ.ⵠΔᐃ();
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0.1, this.ΔᐃⲆⲆ - v3091);
        }
        v1931 = ⵠΔ[1378][v2859.time];
        f432(1378, v1931, -v1931.width / 4, -v1931.height / 4);
        v1931 = ⵠΔ[1381][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        v407.save();
        v407.translate(v414 * -40, v414 * -45);
        v407.rotate(this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
        v1931 = ⵠΔ[1384][v2859.time];
        v407.save();
        v407.translate(v414 * 40, v414 * -45);
        v407.rotate(-this.ⲆⵠΔⵠⵠ.ΔⲆⵠ * this.ΔᐃⲆⲆ);
        f302(v407, v1931, -Δⵠᐃ / 4, -ᐃⵠⵠ / 4, Δⵠᐃ / 2, ᐃⵠⵠ / 2);
        v407.restore();
      } else if (this.ⵠⵠⵠⵠ === 164) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        v1931 = ⵠΔ[164][v2859.time];
        f432(164, v1931, -v1931.width / 4, -v1931.height / 4);
      } else if (this.ⵠⵠⵠⵠ === 340) {
        this.ᐃᐃⵠⵠⲆ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(this.ᐃᐃⵠⵠⲆ, this.ⲆᐃᐃΔⵠ, 0.018);
        v1931 = ⵠΔ[346][v2859.time];
        f432(346, v1931, -v1931.width / 4, -v1931.height / 4);
      } else if (this.ⵠⵠⵠⵠ === 334) {
        v1931 = ⵠΔ[334][v2859.time];
        f432(334, v1931, -v1931.width / 4, -v1931.height / 4);
      } else if (this.ⵠⵠⵠⵠ === 349) {
        v1931 = ⵠΔ[1612][v2859.time];
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0, this.ΔᐃⲆⲆ - v3091);
        }
        this.ⲆⵠΔᐃᐃ += v3091 * 60;
        if (this.ⲆⵠΔᐃᐃ > 60) {
          this.ⲆⵠΔᐃᐃ -= 60;
        }
        var v1932 = this.ΔᐃⲆⲆ * ((this.ⲆⵠΔᐃᐃ < 30 ? this.ⲆⵠΔᐃᐃ / 30 : 1 - (this.ⲆⵠΔᐃᐃ - 30) / 30) * 12 - 6);
        f432(1612, v1931, -v1931.width / 4, -v1931.height / 4 + v1932);
      } else if (this.ⵠⵠⵠⵠ === 335) {
        v1931 = ⵠΔ[1351][v2859.time];
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0, this.ΔᐃⲆⲆ - v3091);
        }
        this.ⲆⵠΔᐃᐃ += v3091 * 60;
        if (this.ⲆⵠΔᐃᐃ > 60) {
          this.ⲆⵠΔᐃᐃ -= 60;
        }
        v1932 = ((this.ⲆⵠΔᐃᐃ < 30 ? this.ⲆⵠΔᐃᐃ / 30 : 1 - (this.ⲆⵠΔᐃᐃ - 30) / 30) * 12 - 6) * this.ΔᐃⲆⲆ;
        f432(1351, v1931, -v1931.width / 4, -v1931.height / 4 + v1932);
      } else if (this.ⵠⵠⵠⵠ === 358) {
        v1931 = ⵠΔ[1327][v2859.time];
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0, this.ΔᐃⲆⲆ - v3091);
        }
        this.ⲆⵠΔᐃᐃ += v3091 * 60;
        if (this.ⲆⵠΔᐃᐃ > 60) {
          this.ⲆⵠΔᐃᐃ -= 60;
        }
        v1932 = this.ΔᐃⲆⲆ * ((this.ⲆⵠΔᐃᐃ < 30 ? this.ⲆⵠΔᐃᐃ / 30 : 1 - (this.ⲆⵠΔᐃᐃ - 30) / 30) * 12 - 6);
        f432(1327, v1931, -v1931.width / 4, -v1931.height / 4 + v1932);
      } else if (this.ⵠⵠⵠⵠ === 336) {
        var v1933 = Math.PI / 2;
        var v1934 = Math.PI / 4;
        v1931 = ⵠΔ[1363][v2859.time];
        if (this.ⲆᐃᐃΔⵠ > 85) {
          this.ΔᐃⲆⲆ = Math.min(1, this.ΔᐃⲆⲆ + v3091 / 4);
        } else {
          this.ΔᐃⲆⲆ = Math.max(0, this.ΔᐃⲆⲆ - v3091);
        }
        this.ⲆⵠΔᐃᐃ += v3091 * 60;
        if (this.ⲆⵠΔᐃᐃ > 60) {
          this.ⲆⵠΔᐃᐃ -= 60;
        }
        v1932 = ((this.ⲆⵠΔᐃᐃ < 30 ? this.ⲆⵠΔᐃᐃ / 30 : 1 - (this.ⲆⵠΔᐃᐃ - 30) / 30) * 12 - 6) * this.ΔᐃⲆⲆ;
        f432(1363, v1931, -v1931.width / 4 + v1932, -v1931.height / 4);
        v407.restore();
        v407.save();
        v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
        v407.rotate(Math.PI + this.ⵠⲆᐃᐃᐃ + v1934);
        v407.translate(120, v1932);
        v407.rotate(v1933);
        v1931 = ⵠΔ[1368][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        f302(v407, v1931, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
        v407.restore();
        v407.save();
        v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
        v407.rotate(Math.PI + this.ⵠⲆᐃᐃᐃ + v1933 + v1934);
        v407.translate(120, v1932);
        v407.rotate(v1933);
        v1931 = ⵠΔ[1371][v2859.time];
        Δⵠᐃ = -v1931.width;
        ᐃⵠⵠ = -v1931.height;
        f302(v407, v1931, -Δⵠᐃ / 2, -ᐃⵠⵠ / 2, Δⵠᐃ, ᐃⵠⵠ);
      }
      v407.restore();
    }
  }
  function f403() {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
    if (this.text.length > 0) {
      for (var v1935 = 0; v1935 < this.text.length && v1935 < 2; v1935++) {
        if (!this.label[v1935]) {
          this.label[v1935] = f93(v414, this.text[v1935]);
          this.ᐃᐃⵠⵠᐃΔⵠ[v1935] = 0;
          this.ⵠᐃⵠⵠᐃⵠᐃ[v1935] = 0;
        }
        if (v1935 === 1) {
          this.ⵠᐃⵠⵠᐃⵠᐃ[0] = ⵠⵠΔ.ⲆΔᐃᐃⵠ(this.ⵠⵠΔⲆⵠⵠⵠ) * 30;
        }
      }
      this.ᐃᐃⵠⵠᐃΔⵠ[0] += v3091;
      if (this.text.length > 1) {
        this.ⵠⵠΔⲆⵠⵠⵠ = Math.min(this.ⵠⵠΔⲆⵠⵠⵠ + v3091, 1);
        if (this.ᐃᐃⵠⵠᐃΔⵠ[0] > 1 && this.ⵠⵠΔⲆⵠⵠⵠ > 0.5) {
          this.ᐃᐃⵠⵠᐃΔⵠ[1] += v3091;
        }
      }
      for (v1935 = 0; this.text.length > v1935 && v1935 < 2; v1935++) {
        var v1936 = this.ᐃᐃⵠⵠᐃΔⵠ[v1935];
        if (v1936 > 0) {
          v407.globalAlpha = v1936 < 0.25 ? v1936 * 4 : v1936 > 3.75 ? Math.max((4 - v1936) * 4, 0) : 1;
          f302(v407, this.label[v1935], -this.label[v1935].width / 2, -this.ⵠᐃⵠⵠᐃⵠᐃ[v1935] + -this.label[v1935].height / 2 - v414 * 110);
        }
      }
      if (this.ᐃᐃⵠⵠᐃΔⵠ[0] > 4) {
        this.ᐃᐃⵠⵠᐃΔⵠ.shift();
        this.text.shift();
        this.ⵠᐃⵠⵠᐃⵠᐃ.shift();
        this.label.shift();
        this.ⵠⵠΔⲆⵠⵠⵠ = 0;
      }
    }
    v407.restore();
  }
  function f404(p1240, p1241, p1242) {
    if (p1241.ⵠΔⲆᐃΔᐃΔ() !== 1) {
      return p1241;
    }
    var v1937 = ⲆⲆⲆΔΔⲆΔ[p1242][p1240];
    if (vVUndefined15 === v1937) {
      var v1938 = (v1937 = document.createElement("canvas")).getContext("2d");
      var v1939 = p1241.width;
      var v1940 = p1241.height;
      v1937.width = v1939;
      v1937.height = v1940;
      v1938.drawImage(p1241, 0, 0);
      v1938.globalCompositeOperation = "source-in";
      v1938.fillStyle = ΔᐃⵠⵠΔⵠᐃᐃⵠ[p1242];
      v1938.fillRect(0, 0, v1939, v1940);
      ⲆⲆⲆΔΔⲆΔ[p1242][p1240] = v1937;
    }
    return v1937;
  }
  function f405(p1243, p1244) {
    if (this.text) {
      if (this.timeout.ⵠⵠⲆ) {
        v407.globalAlpha = 1 - this.timeout.ΔⲆⵠ;
      } else {
        v407.globalAlpha = 1;
      }
      this.label ||= f156(v414, this.text, 40, p1243, null, null, null, null, null, p1244, 10);
      f302(v407, this.label, (v408 - this.label.width) / 2, v414 * 50);
      v407.globalAlpha = 1;
      if (this.timeout.ⵠΔᐃ() && this.timeout.ⵠⵠⲆ == 0) {
        this.text = this.list.shift();
        this.label = null;
      }
    }
  }
  function f406() {
    if (this.message !== vVVVVUndefined173) {
      var v1941 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length > 0 ? -95 : 0;
      f302(v407, this.message, 0, v410 - this.message.height + v1941);
    }
  }
  function f407() {
    var v1942 = 0;
    switch (this.right) {
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
        v1942 = 1;
    }
    if (this.ᐃΔΔᐃᐃ) {
      for (var v1943 = 0; this.bubbles.length > v1943; v1943++) {
        var v1944 = this.bubbles[v1943];
        if (v1944.ᐃⵠΔΔΔ > 0.5) {
          var v1945 = 1 - (v1944.ᐃⵠΔΔΔ - 0.5) * 2;
        } else {
          v1945 = v1944.ᐃⵠΔΔΔ * 2;
        }
        v407.globalAlpha = v1945;
        var v1946 = ⵠΔ[678][v2859.time][v1944.id];
        f302(v407, v1946, v2860.Δⵠⵠ.x + v1944.x - v1946.width / 2, v2860.Δⵠⵠ.y + v1944.y - v1946.height / 2);
        v407.globalAlpha = 1;
      }
    } else {
      v407.save();
      v407.translate(v2860.Δⵠⵠ.x + this.x, v2860.Δⵠⵠ.y + this.y);
      v2859.ΔⵠⵠΔΔᐃᐃΔⵠ(this);
      if (this.action & 16) {
        (function (p1245) {
          if (p1245.right >= 0) {
            switch (p1245.right) {
              case 85:
                v407.save();
                var v1947 = p1245.attack.ΔⲆⵠ * -3 / Math.PI;
                if (p1245.attack.ⵠⵠⲆ) {
                  var v1948 = -Math.PI / 3 - (Math.PI / 3 + p1245.attack.ΔⲆⵠ) / 3;
                } else {
                  v1948 = p1245.attack.ΔⲆⵠ;
                }
                v407.rotate(p1245.angle - Math.PI / 2 + v1948);
                v407.globalAlpha = v1947 / 1.2;
                f94(v407, v414 * -40, v414 * 90, v414 * 5);
                f89(v407, "#0B6A84");
                v407.globalAlpha = v1947 / 1.2;
                f94(v407, v414 * -52, v414 * 100, v414 * 8);
                f89(v407, "#0B6A84");
                v407.globalAlpha = v1947 / 1.2;
                f94(v407, v414 * -30, v414 * 95, v414 * 4);
                f89(v407, "#0B6A84");
                v407.globalAlpha = 1;
                v407.restore();
                break;
              case 82:
              case 86:
              case 87:
              case 88:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 90:
              case 89:
              case 97:
              case 98:
                if (p1245.ⵠΔⵠᐃⲆΔⵠ === 1) {
                  break;
                }
                if (p1245.ⲆⵠΔⲆΔ > 0) {
                  var v1949 = v594.ⵠⵠⲆⵠΔᐃᐃ[v2859.time];
                } else {
                  v1949 = p1245.ⲆⲆⲆⵠΔⲆⵠ > 0 || p1245.ⵠᐃᐃᐃΔ > 0 ? v594.ᐃⲆⵠⵠΔΔⵠ[v2859.time] : v594.ⵠⵠΔΔⵠΔΔ[v2859.time];
                }
                v1947 = p1245.attack.ΔⲆⵠ * -3 / Math.PI;
                if ((v1948 = p1245.attack.ⵠⵠⲆ ? Math.max(0.5 - v1947 / 2 + 0.5, 0) : Math.max(v1947 / 2, 0)) === 0) {
                  p1245.ΔᐃᐃⲆⲆⵠᐃ = p1245.angle;
                }
                v407.save();
                v407.rotate(p1245.ΔᐃᐃⲆⲆⵠᐃ - Math.PI / 2);
                v407.globalAlpha = v1947;
                var v1950 = v414 * 25 + v1948 * 25;
                f94(v407, v1950, v414 * 80, v414 * 15);
                f89(v407, v1949);
                f94(v407, -v1950, v414 * 80, v414 * 15);
                f89(v407, v1949);
                v407.globalAlpha = 1;
                v407.restore();
            }
          }
        })(this);
      }
      v407.save();
      v407.rotate(this.angle - Math.PI / 2);
      if (!(this.action & 16)) {
        if (this.action & 64 || this.ⵠⵠⵠⵠ !== 0) {
          this.ᐃᐃⲆᐃᐃᐃⲆ.ⵠΔᐃ();
        } else if (this.action & 32) {
          this.Ⲇᐃᐃᐃᐃᐃⵠ.ⵠΔᐃ();
        }
      }
      var v1951;
      var v1952 = this.ᐃᐃⲆᐃᐃᐃⲆ.ΔⲆⵠ;
      var v1953 = this.Ⲇᐃᐃᐃᐃᐃⵠ.ΔⲆⵠ;
      if (this.ΔΔⵠⲆΔ === 158) {
        v1946 = ⵠΔ[1042][v2859.time];
        v1951 = 1042;
      } else if (this.ΔΔⵠⲆΔ === 29) {
        v1946 = ⵠΔ[1196][v2859.time];
        v1951 = 1196;
      } else if (this.ΔΔⵠⲆΔ === 30) {
        v1946 = ⵠΔ[1200][v2859.time];
        v1951 = 1200;
      } else if (this.ΔΔⵠⲆΔ === 31) {
        v1946 = ⵠΔ[1204][v2859.time];
        v1951 = 1204;
      } else if (this.ᐃⲆΔᐃⲆⵠⲆ) {
        v1946 = ⵠΔ[1071][v2859.time];
        v1951 = 1071;
      } else {
        v1946 = ⵠΔ[7][this.ⵠⲆⲆΔ][v2859.time];
        v1951 = 7;
      }
      ᐃΔⵠⲆ = ⵠΔ[396][v2859.time];
      var vV1946 = v1946;
      var vV1951 = v1951;
      if (this.action & 16) {
        if (this.attack.ⵠΔᐃ() && this.attack.ⵠⵠⲆ == 0) {
          this.ᐃΔᐃᐃⵠ = !this.ᐃΔᐃᐃⵠ;
          this.action -= 16;
          if (this.ᐃᐃⲆⵠ == v2860.ᐃᐃⲆⵠ) {
            v2860.control.ΔⲆⵠᐃ = 0;
          }
        }
        if (this.right >= 0) {
          this.ᐃΔᐃᐃⵠ = true;
        }
        var v1954 = this.ᐃΔᐃᐃⵠ ? this.attack.ΔⲆⵠ : -this.attack.ΔⲆⵠ / 3;
        var v1955 = this.ᐃΔᐃᐃⵠ ? this.attack.ΔⲆⵠ / 3 : -this.attack.ΔⲆⵠ;
        if (this.ᐃⲆΔᐃⲆⵠⲆ) {
          v407.save();
          v407.rotate(v1954);
          f426(v1951, v1946, -v1946.width / 2 - v414 * (66 + v1952), -v1946.height / 2 + (5 + v1953) * v414);
          v407.restore();
          v407.save();
          v407.rotate(v1955);
          f426(v1951, v1946, -v1946.width / 2 + (66 + v1952) * v414, -v1946.height / 2 + (5 + v1953) * v414);
          v407.restore();
        } else if (v1942 === 0) {
          if (this.right === 119) {
            v1954 = -ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ(-v1954);
          }
          v407.save();
          v407.rotate(v1954);
          f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 - (49 + v1952) * v414, -ᐃΔⵠⲆ.height / 2 + v414 * (15 + v1953));
          if (this.right === 46) {
            var v1956 = ⵠΔ[this.right][this.ᐃᐃᐃⵠⲆ][v2859.time];
            f414(this.right, this.ᐃᐃᐃⵠⲆ, v1956, -v1956.width / 4 - v414 * (62 + v1952), -v1956.height / 4 + (v1953 + 18) * v414);
          } else {
            f349(this.right, v1952, v1953);
          }
          if (v1951 >= 1196) {
            f432(v1951, v1946, -v1946.width / 4 - (49 + v1952) * v414, -v1946.height / 4 + v414 * (11 + v1953));
          } else if (v1951 !== 1042) {
            f414(v1951, this.ⵠⲆⲆΔ, v1946, -v1946.width / 4 - (49 + v1952) * v414, -v1946.height / 4 + (11 + v1953) * v414);
          } else {
            f426(v1951, v1946, -v1946.width / 2 - v414 * (49 + v1952), -v1946.height / 2 + v414 * (11 + v1953));
          }
          v407.restore();
          v407.save();
          v407.rotate(v1955);
          f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 + v414 * (49 + v1952), -ᐃΔⵠⲆ.height / 2 + v414 * (15 + v1953));
          if (v1951 >= 1196) {
            f432(v1951, v1946, -v1946.width / 4 + v414 * (49 + v1952), -v1946.height / 4 + (11 + v1953) * v414);
          } else if (v1951 !== 1042) {
            f414(v1951, this.ⵠⲆⲆΔ, v1946, -v1946.width / 4 + v414 * (49 + v1952), -v1946.height / 4 + (11 + v1953) * v414);
          } else {
            f426(v1951, v1946, -v1946.width / 2 + v414 * (49 + v1952), -v1946.height / 2 + v414 * (11 + v1953));
          }
          v407.restore();
        }
      } else if (this.ᐃⲆΔᐃⲆⵠⲆ) {
        f426(v1951, v1946, -v1946.width / 2 - v414 * (66 + v1952), -v1946.height / 2 + v414 * (5 + v1953));
        f426(v1951, v1946, -v1946.width / 2 + v414 * (66 + v1952), -v1946.height / 2 + (5 + v1953) * v414);
      } else if (v1942 === 0) {
        f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 - (49 + v1952) * v414, -ᐃΔⵠⲆ.height / 2 + (15 + v1953) * v414);
        if (this.right === 46) {
          v1956 = ⵠΔ[this.right][this.ᐃᐃᐃⵠⲆ][v2859.time];
          f414(this.right, this.ᐃᐃᐃⵠⲆ, v1956, -v1956.width / 4 - v414 * (62 + v1952), -v1956.height / 4 + v414 * (v1953 + 18));
        } else {
          f349(this.right, v1952, v1953);
        }
        if (v1951 >= 1196) {
          f432(v1951, v1946, -v1946.width / 4 - v414 * (49 + v1952), -v1946.height / 4 + (11 + v1953) * v414);
        } else if (v1951 !== 1042) {
          f414(v1951, this.ⵠⲆⲆΔ, v1946, -v1946.width / 4 - (49 + v1952) * v414, -v1946.height / 4 + (11 + v1953) * v414);
        } else {
          f426(v1951, v1946, -v1946.width / 2 - (49 + v1952) * v414, -v1946.height / 2 + (11 + v1953) * v414);
        }
        f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 + (49 + v1952) * v414, -ᐃΔⵠⲆ.height / 2 + v414 * (15 + v1953));
        if (v1951 >= 1196) {
          f432(v1951, v1946, -v1946.width / 4 + (49 + v1952) * v414, -v1946.height / 4 + (11 + v1953) * v414);
        } else if (v1951 !== 1042) {
          f414(v1951, this.ⵠⲆⲆΔ, v1946, -v1946.width / 4 + (49 + v1952) * v414, -v1946.height / 4 + v414 * (11 + v1953));
        } else {
          f426(v1951, v1946, -v1946.width / 2 + (49 + v1952) * v414, -v1946.height / 2 + v414 * (11 + v1953));
        }
      }
      if (this.ⵠᐃⲆⵠᐃ && this.ΔΔⵠⲆΔ < 1) {
        v1946 = ⵠΔ[47][this.ⵠⲆΔΔᐃᐃᐃ][v2859.time];
        f414(47, this.ⵠⲆΔΔᐃᐃᐃ, v1946, -v1946.width / 4, -v1946.height / 4 - v414 * 39);
      }
      if (this.ᐃⲆΔᐃⲆⵠⲆ) {
        v1946 = ⵠΔ[1069][v2859.time];
        f426(1069, v1946, -v1946.width / 2, -v1946.height / 2);
        this.ⵠⵠⲆΔᐃᐃⵠ.ⵠΔᐃ();
        v1946 = ⵠΔ[1070][v2859.time];
        f426(1070, v1946, -v1946.width / 2, -v1946.height / 2 + this.ⵠⵠⲆΔᐃᐃⵠ.ΔⲆⵠ);
      } else {
        v1946 = ⵠΔ[365][this.ⵠⲆⲆΔ][v2859.time];
        if (this.ΔΔⵠⲆΔ !== 158 && (f414(365, this.ⵠⲆⲆΔ, v1946, -v1946.width / 4, -v1946.height / 4), this.ᐃⲆΔΔⲆ > 0)) {
          v1946 = ⵠΔ[1045][this.ᐃⲆΔΔⲆ][v2859.time];
          f414(1045, this.ᐃⲆΔΔⲆ, v1946, -v1946.width / 4, -v1946.height / 4);
        }
      }
      if (this.action & 128) {
        if (this.ᐃⵠΔⵠΔ.ⵠΔᐃ() && this.ᐃⵠΔⵠΔ.ⵠⵠⲆ == 0) {
          this.action -= 128;
        }
        v407.globalAlpha = 0.6 - this.ᐃⵠΔⵠΔ.ΔⲆⵠ;
        if (this.ᐃⲆΔᐃⲆⵠⲆ) {
          v1946 = ⵠΔ[1074];
          f302(v407, v1946, -v1946.width / 2, -v1946.height / 2);
        } else {
          v1946 = f404(this.ⵠⲆⲆΔ, ⵠΔ[365][this.ⵠⲆⲆΔ][0], ΔΔⲆᐃΔΔᐃⵠᐃ);
          f302(v407, v1946, v1946.width / 4, v1946.height / 4, -v1946.width / 2, -v1946.height / 2);
        }
        v407.globalAlpha = 1;
      }
      if (this.action & 256) {
        if (this.ΔᐃᐃⲆᐃⲆᐃ.ⵠΔᐃ() && this.ΔᐃᐃⲆᐃⲆᐃ.ⵠⵠⲆ == 0) {
          this.action -= 256;
        }
        v407.globalAlpha = 0.6 - this.ΔᐃᐃⲆᐃⲆᐃ.ΔⲆⵠ;
        v1946 = ⵠΔ[376];
        f302(v407, v1946, -v1946.width / 2, -v1946.height / 2);
        v407.globalAlpha = 1;
      }
      if (this.action & 2) {
        if (this.ᐃᐃΔ.ⵠΔᐃ() && vVV16 == this.ᐃᐃΔ.ⵠⵠⲆ) {
          this.action -= 2;
        }
        v407.globalAlpha = 0.6 - this.ᐃᐃΔ.ΔⲆⵠ;
        if (this.ᐃⲆΔᐃⲆⵠⲆ) {
          v1946 = ⵠΔ[1072];
          f302(v407, v1946, -v1946.width / 2, -v1946.height / 2);
        } else {
          v1946 = f404(this.ⵠⲆⲆΔ, ⵠΔ[365][this.ⵠⲆⲆΔ][0], ⵠΔᐃΔⲆΔᐃⵠⵠ);
          f302(v407, v1946, v1946.width / 4, v1946.height / 4, -v1946.width / 2, -v1946.height / 2);
        }
        v407.globalAlpha = 1;
      }
      if (this.action & 4) {
        if (this.freeze.ⵠΔᐃ() && vVV165 == this.freeze.ⵠⵠⲆ) {
          this.action -= 4;
        }
        v407.globalAlpha = 0.6 - this.freeze.ΔⲆⵠ;
        v1946 = f404(this.ⵠⲆⲆΔ, ⵠΔ[365][this.ⵠⲆⲆΔ][0], ΔΔⲆΔⲆⵠⵠΔΔ);
        f302(v407, v1946, v1946.width / 4, v1946.height / 4, -v1946.width / 2, -v1946.height / 2);
        v407.globalAlpha = 1;
      }
      if (this.action & 8) {
        if (this.ᐃΔᐃᐃⵠⵠⵠ.ⵠΔᐃ() && this.ᐃΔᐃᐃⵠⵠⵠ.ⵠⵠⲆ == vVVVVV1623) {
          this.action -= 8;
        }
        v407.globalAlpha = 0.6 - this.ᐃΔᐃᐃⵠⵠⵠ.ΔⲆⵠ;
        if (this.ᐃⲆΔᐃⲆⵠⲆ) {
          v1946 = ⵠΔ[1073];
          f302(v407, v1946, -v1946.width / 2, -v1946.height / 2);
        } else {
          v1946 = f404(this.ⵠⲆⲆΔ, ⵠΔ[365][this.ⵠⲆⲆΔ][0], ⲆⲆⲆᐃⲆⵠⲆᐃΔ);
          f302(v407, v1946, v1946.width / 4, v1946.height / 4, -v1946.width / 2, -v1946.height / 2);
        }
        v407.globalAlpha = 1;
      }
      f401(this.ΔΔⵠⲆΔ);
      if (v1942 === 1) {
        if (this.action & 16) {
          v1952 += this.attack.ΔⲆⵠ * 15;
        }
        f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 - v414 * 26, -ᐃΔⵠⲆ.height / 2 + v414 * (31 + v1953 + v1952));
        if (vV1951 >= 1196) {
          f432(vV1951, vV1946, -vV1946.width / 4 - v414 * 26, -vV1946.height / 4 + (27 + v1953 + v1952) * v414);
        } else if (vV1951 !== 1042) {
          f414(vV1951, this.ⵠⲆⲆΔ, vV1946, -vV1946.width / 4 - v414 * 26, -vV1946.height / 4 + (27 + v1953 + v1952) * v414);
        } else {
          f426(vV1951, vV1946, -vV1946.width / 2 - v414 * 26, -vV1946.height / 2 + v414 * (27 + v1953 + v1952));
        }
        f426(396, ᐃΔⵠⲆ, -ᐃΔⵠⲆ.width / 2 + v414 * 26, -ᐃΔⵠⲆ.height / 2 + v414 * (31 + v1953 + v1952));
        if (vV1951 >= 1196) {
          f432(vV1951, vV1946, -vV1946.width / 4 + v414 * 26, -vV1946.height / 4 + v414 * (27 + v1953 + v1952));
        } else if (vV1951 !== 1042) {
          f414(vV1951, this.ⵠⲆⲆΔ, vV1946, -vV1946.width / 4 + v414 * 26, -vV1946.height / 4 + (27 + v1953 + v1952) * v414);
        } else {
          f426(vV1951, vV1946, -vV1946.width / 2 + v414 * 26, -vV1946.height / 2 + v414 * (27 + v1953 + v1952));
        }
        f347(this.right, 0, v1953 + v1952);
      }
      v407.restore();
      if (this.ΔΔⵠⲆΔ !== 156 && this.ΔΔⵠⲆΔ !== 158) {
        if (this.ⲆⵠΔⲆΔ > 0) {
          this.ⲆⵠⲆΔ.ᐃⲆΔⲆⲆᐃΔ ||= f156(v414, this.ⲆⵠⲆΔ.ᐃΔⵠⵠΔ, 20, "#187484", "#000", 2, null, null, v414 * 300);
          v1946 = this.ⲆⵠⲆΔ.ᐃⲆΔⲆⲆᐃΔ;
        } else {
          if (!this.ⲆⵠⲆΔ.label) {
            this.ⲆⵠⲆΔ.label = f156(v414, this.ⲆⵠⲆΔ.ᐃΔⵠⵠΔ, 20, "#FFF", "#000", 2, null, null, v414 * 300);
          }
          v1946 = this.ⲆⵠⲆΔ.label;
        }
        if (v594.ᐃᐃⵠ == v2859.ⵠᐃⵠ) {
          v407.globalAlpha = 0.5;
        }
        v1952 = Math.floor(-v1946.width / 2);
        v1953 = Math.floor(-v1946.height / 2 - v414 * 70);
        f302(v407, v1946, v1952, v1953);
        if (this.ⲆⵠⲆΔ.level > 0) {
          var v1957 = v1952 + v1946.width + 5;
          v1946 = ⵠΔ[1161];
          if (vVVVUndefined17 === ⵠᐃⵠⲆΔⵠⵠ[this.ⲆⵠⲆΔ.level]) {
            ⵠᐃⵠⲆΔⵠⵠ[this.ⲆⵠⲆΔ.level] = f156(v414, "[" + this.ⲆⵠⲆΔ.level + "]", 20, "#F9E8A2", "#000", 2, null, null, v414 * 50);
          }
          f302(v407, ⵠᐃⵠⲆΔⵠⵠ[this.ⲆⵠⲆΔ.level], v1957, v1953);
        }
        v407.globalAlpha = 1;
      } else {
        v1953 = Math.floor(v414 * -70);
        v1952 = Math.floor(ⵠΔ[723].width / 1.5);
      }
      if (v2860.ᐃⵠᐃᐃⵠⲆⵠ(this.ΔⲆⲆᐃ)) {
        if (v2860.ΔᐃⲆᐃⲆ[0] == this.ΔⲆⲆᐃ) {
          v1946 = ⵠΔ[724];
        } else {
          v1946 = ⵠΔ[723];
        }
        f302(v407, v1946, v1952 - v1946.width - 5, v1953 - 6);
      }
      v407.restore();
    }
  }
  function f408() {
    if (this.enabled && this.ᐃⵠⲆΔⲆ >= 0) {
      var v1958 = new Date().getTime() - this.ᐃⵠⲆΔⲆ;
      var v1959 = v1958 % 1000 / 1000;
      if (v1959 > 0.5) {
        v1959 = 1 - (v1959 - 0.5) * 2;
      } else {
        v1959 *= 2;
      }
      if ((v1958 = Math.floor(v1958 / 1000)) < 60) {
        v1958 = 60 - v1958;
        this.label ||= f156(v414, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10);
        if (this.now != v1958 || !this.ᐃᐃᐃΔᐃᐃΔ) {
          this.now = v1958;
          this.ᐃᐃᐃΔᐃᐃΔ = f156(v414, "" + v1958, 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        f302(v407, this.label, (v408 - this.label.width) / 2, v414 * 100);
        v407.globalAlpha = v1959;
        f302(v407, this.ᐃᐃᐃΔᐃᐃΔ, (v408 - this.label.width) / 2 - this.ᐃᐃᐃΔᐃᐃΔ.width + v414 * 15, v414 * 100);
        v407.globalAlpha = 1;
      }
    }
  }
  ⵠΔᐃΔⲆΔᐃⵠⵠ = 0;
  ΔΔⲆᐃΔΔᐃⵠᐃ = 1;
  ΔΔⲆΔⲆⵠⵠΔΔ = 2;
  ⲆⲆⲆᐃⲆⵠⲆᐃΔ = 3;
  ΔⲆᐃⵠΔⵠᐃᐃᐃ = 4;
  ⲆⲆⲆΔΔⲆΔ = [[], [], [], [], []];
  ΔᐃⵠⵠΔⵠᐃᐃⵠ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
  var v1960 = 0;
  function f409(p1246, p1247, p1248, p1249, p1250, p1251, p1252, p1253) {
    if (p1253 === vVVVVUndefined1722) {
      p1253 = 0;
    }
    v2859.ⵠⲆⵠΔ[p1250].ⵠΔᐃ();
    for (var vP1252 = p1252; p1253 <= vP1252; vP1252--) {
      for (var vP1246 = p1246; p1247 >= vP1246; vP1246++) {
        for (var vP1248 = p1248; vP1248 <= p1249; vP1248++) {
          var v1961 = v2856.ⵠΔⲆΔ[vP1246][vP1248];
          if (v1961 && v1961[p1251]) {
            var v1962 = v1961[p1251][vP1252];
            if (v1962 !== undefined) {
              for (var v1963 = 0; v1962.length > v1963; v1963++) {
                var v1964 = v1962[v1963];
                if (v1964.ⵠΔᐃ) {
                  if (v1964.ᐃᐃΔ.ⵠΔᐃ() && v1964.ᐃᐃΔ.ⵠⵠⲆ == vVVV163) {
                    v1964.ⵠΔᐃ = false;
                  }
                  var v1965 = v414 * (v3091 * (1 - v1964.ᐃᐃΔ.ΔⲆⵠ) * 600);
                  var v1966 = v1965 * Math.sin(v1964.angle);
                  var v1967 = v1965 * Math.cos(v1964.angle);
                } else {
                  v1966 = 0;
                  v1967 = 0;
                }
                var v1968 = ⵠΔ[p1250][v2859.time][vP1252];
                var v1969 = v2859.ⵠⲆⵠΔ[p1250].ΔⲆⵠ * -v1968.width;
                var v1970 = v2859.ⵠⲆⵠΔ[p1250].ΔⲆⵠ * -v1968.height;
                f302(v407, v1968, v2860.Δⵠⵠ.x + v1964.x - v1969 / 2 + v1966, v2860.Δⵠⵠ.y + v1964.y - v1970 / 2 + v1967, v1969, v1970);
              }
            }
          }
        }
      }
    }
  }
  function f410(p1254, p1255, p1256, p1257, p1258, p1259, p1260, p1261 = 0) {
    for (var vP1260 = p1260; vP1260 >= p1261; vP1260--) {
      for (var vP1254 = p1254; vP1254 <= p1255; vP1254++) {
        for (var vP1256 = p1256; p1257 >= vP1256; vP1256++) {
          var v1971 = v2856.ⵠΔⲆΔ[vP1254][vP1256];
          if (v1971 && v1971[p1259]) {
            var v1972 = v1971[p1259][vP1260];
            if (v1972 !== undefined) {
              for (var v1973 = 0; v1973 < v1972.length; v1973++) {
                var v1974 = v1972[v1973];
                var v1975 = ⵠΔ[p1258][v2859.time][vP1260];
                var v1976 = (v1960 + (vP1254 + vP1256) * 3) % 60;
                var v1977 = v1976 < 30 ? v1976 / 30 : 1 - (v1976 - 30) / 30;
                var v1978 = (1 + v1977 * 0.9 / 30) * -v1975.width;
                var v1979 = (1 + v1977 * 0.9 / 30) * -v1975.height;
                v1977 = (v1976 = (v1960 + (vP1254 + vP1256) * 7) % 60) < 30 ? v1976 / 30 : 1 - (v1976 - 30) / 30;
                var v1980 = v407.globalAlpha;
                v407.globalAlpha = (0.9 + v1977 * 0.1) * v1980;
                f302(v407, v1975, v2860.Δⵠⵠ.x + v1974.x - v1978 / 2, v2860.Δⵠⵠ.y + v1974.y - v1979 / 2, v1978, v1979);
                v407.globalAlpha = v1980;
              }
            }
          }
        }
      }
    }
  }
  var v1981 = [];
  for (v768 = 0; v768 < 100; v768++) {
    var v1982 = 1;
    if (Math.random() < 0.25) {
      v1982 = 0;
    }
    v1981.push(v1982);
  }
  function f411(p1262, p1263, p1264, p1265, p1266, p1267, p1268, p1269, p1270) {
    if (p1269 === vVUndefined14) {
      p1269 = 0;
    }
    for (var vP1268 = p1268; p1269 <= vP1268; vP1268--) {
      for (var vP1262 = p1262; vP1262 <= p1263; vP1262++) {
        for (var vP1264 = p1264; p1265 >= vP1264; vP1264++) {
          if (!(p1270 > 0) || v1981[(vP1262 + vP1264 * p1270) % v1981.length] !== 1) {
            var v1983 = v2856.ⵠΔⲆΔ[vP1262][vP1264];
            if (v1983 !== undefined && v1983[p1267] !== undefined) {
              var v1984 = v1983[p1267][vP1268];
              if (v1984 !== vUndefined) {
                for (var v1985 = 0; v1984.length > v1985; v1985++) {
                  var v1986 = v1984[v1985];
                  if (v1986.ⵠΔᐃ) {
                    if (v1986.ᐃᐃΔ.ⵠΔᐃ() && v1986.ᐃᐃΔ.ⵠⵠⲆ == 0) {
                      v1986.ⵠΔᐃ = vVVV16;
                    }
                    var v1987 = v3091 * (1 - v1986.ᐃᐃΔ.ΔⲆⵠ) * 600 * v414;
                    var v1988 = v1987 * Math.sin(v1986.angle);
                    var v1989 = Math.cos(v1986.angle) * v1987;
                  } else {
                    v1988 = 0;
                    v1989 = 0;
                  }
                  var v1990 = ⵠΔ[p1266][v2859.time][vP1268];
                  f302(v407, v1990, v2860.Δⵠⵠ.x + v1986.x - v1990.width / (ⵠΔⵠⵠⵠ * 2) + v1988, v2860.Δⵠⵠ.y + v1986.y - v1990.height / (ⵠΔⵠⵠⵠ * 2) + v1989, v1990.width / ⵠΔⵠⵠⵠ, v1990.height / ⵠΔⵠⵠⵠ);
                }
              }
            }
          }
        }
      }
    }
  }
  function f412(p1271, p1272, p1273, p1274, p1275, p1276, p1277, p1278, p1279) {
    if (vVUndefined16 === p1278) {
      p1278 = 0;
    }
    for (var vP1277 = p1277; p1278 <= vP1277; vP1277--) {
      for (var vP1271 = p1271; p1272 >= vP1271; vP1271++) {
        for (var vP1273 = p1273; vP1273 <= p1274; vP1273++) {
          var v1991 = v2856.ⵠΔⲆΔ[vP1271][vP1273];
          if (v1991 !== vVVVVUndefined173 && v1991[p1276] !== undefined) {
            var v1992 = v1991[p1276][vP1277];
            if (v1992 !== undefined) {
              for (var v1993 = 0; v1992.length > v1993; v1993++) {
                var v1994 = v1992[v1993];
                if (v1994.ⵠΔᐃ) {
                  if (v1994.ᐃᐃΔ.ⵠΔᐃ() && vV163 == v1994.ᐃᐃΔ.ⵠⵠⲆ) {
                    v1994.ⵠΔᐃ = false;
                  }
                  var v1995 = (1 - v1994.ᐃᐃΔ.ΔⲆⵠ) * v3091 * 600 * v414;
                  var v1996 = Math.sin(v1994.angle) * v1995;
                  var v1997 = Math.cos(v1994.angle) * v1995;
                } else {
                  v1996 = 0;
                  v1997 = 0;
                }
                for (var v1998 = 0; v1998 < ΔⲆΔⵠΔⵠⲆ[vP1277].ᐃΔΔⲆ; v1998++) {
                  if (v3092 !== v2859.ΔⲆΔⵠΔ[v1998].ΔΔⵠΔⵠⵠⵠ) {
                    v2859.ΔⲆΔⵠΔ[v1998].ⵠΔᐃ();
                    v2859.ΔⲆΔⵠΔ[v1998].ΔΔⵠΔⵠⵠⵠ = v3092;
                  }
                  var v1999 = ⵠΔ[1217][v2859.time][ΔⲆΔⵠΔⵠⲆ[vP1277].ΔΔⲆΔ[v1998].ⵠⲆΔ];
                  var v2000 = v2859.ΔⲆΔⵠΔ[v1998].ΔⲆⵠ * -v1999.width;
                  var v2001 = v2859.ΔⲆΔⵠΔ[v1998].ΔⲆⵠ * -v1999.height;
                  f302(v407, v1999, v2860.Δⵠⵠ.x + v1994.x - v2000 / 4 + v1996 + ΔⲆΔⵠΔⵠⲆ[vP1277].ΔΔⲆΔ[v1998].x, v2860.Δⵠⵠ.y + v1994.y - v2001 / 4 + v1997 + ΔⲆΔⵠΔⵠⲆ[vP1277].ΔΔⲆΔ[v1998].y, v2000 / 2, v2001 / 2);
                }
              }
            }
          }
        }
      }
    }
  }
  function f413(p1280, p1281, p1282, p1283, p1284, p1285, p1286, p1287, p1288) {
    if (p1287 === vVUndefined16) {
      p1287 = 0;
    }
    for (var vP1280 = p1280; vP1280 <= p1281; vP1280++) {
      for (var vP1282 = p1282; vP1282 <= p1283; vP1282++) {
        var v2002 = v2856.ⵠΔⲆΔ[vP1280][vP1282];
        if (vVVVUndefined173 !== v2002 && v2002[p1285] !== undefined) {
          var v2003 = v2002[p1285];
          if (v2003 !== vVVVVUndefined173) {
            if (v2003.scale === 1) {
              var v2004 = ⵠΔ[p1284][v2859.time][v2003.ⲆⲆⵠⵠᐃ];
              v407.save();
              v407.translate(v2860.Δⵠⵠ.x + v2003.x, v2860.Δⵠⵠ.y + v2003.y);
              v407.rotate(v2003.angle);
              f302(v407, v2004, -v2004.width / 4, -v2004.height / 4, v2004.width / 2, v2004.height / 2);
              v407.restore();
            } else if (v2003.scale === 3) {
              for (var v2005 = 0; v2003.ΔΔΔ.length > v2005; v2005++) {
                v407.save();
                v407.translate(v2860.Δⵠⵠ.x + v2003.x, v2860.Δⵠⵠ.y + v2003.y);
                v407.rotate(v2003.ΔΔΔ[v2005].angle);
                v2004 = ⵠΔ[p1284][v2859.time][v2003.ΔΔΔ[v2005].ⲆⲆⵠⵠᐃ];
                f302(v407, v2004, -v2004.width / 3 + v2003.ΔΔΔ[v2005].x, -v2004.height / 3 + v2003.ΔΔΔ[v2005].y, v2004.width / 1.5, v2004.height / 1.5);
                v407.restore();
              }
            } else {
              v2004 = ⵠΔ[p1284][v2859.time][v2003.ⲆⲆⵠⵠᐃ];
              v407.save();
              v407.translate(v2860.Δⵠⵠ.x + v2003.x, v2860.Δⵠⵠ.y + v2003.y);
              v407.rotate(v2003.angle);
              f302(v407, v2004, -v2004.width / 2, -v2004.height / 2, v2004.width, v2004.height);
              v407.restore();
            }
          }
        }
      }
    }
  }
  ⵠΔⵠⵠⵠ = 1;
  ΔⲆΔⵠΔⵠⲆ = [{
    ᐃΔΔⲆ: 10,
    ΔΔⲆΔ: [{
      x: -128,
      y: -20,
      ⵠⲆΔ: 0
    }, {
      x: -86,
      y: -4,
      ⵠⲆΔ: 1
    }, {
      x: -60,
      y: -74,
      ⵠⲆΔ: 2
    }, {
      ⵠⲆΔ: 0,
      x: -22,
      y: -144
    }, {
      ⵠⲆΔ: 0,
      x: -58,
      y: 86
    }, {
      y: -30,
      ⵠⲆΔ: 0,
      x: 3
    }, {
      x: 65,
      y: -115,
      ⵠⲆΔ: 1
    }, {
      ⵠⲆΔ: 0,
      y: -50,
      x: 118
    }, {
      x: 73,
      y: 15,
      ⵠⲆΔ: 1
    }, {
      y: 79,
      ⵠⲆΔ: 0,
      x: 67
    }]
  }, {
    ΔΔⲆΔ: [{
      y: -26,
      x: -45,
      ⵠⲆΔ: 0
    }, {
      x: -45,
      ⵠⲆΔ: 2,
      y: 20
    }, {
      y: -60,
      ⵠⲆΔ: 1,
      x: 10
    }, {
      y: -17,
      x: 52,
      ⵠⲆΔ: 1
    }, {
      y: 45,
      ⵠⲆΔ: 0,
      x: 14
    }],
    ᐃΔΔⲆ: 5
  }, {
    ΔΔⲆΔ: [{
      ⵠⲆΔ: 2,
      x: -30,
      y: 3
    }, {
      y: -38,
      ⵠⲆΔ: 2,
      x: 7
    }, {
      x: 37,
      y: 5,
      ⵠⲆΔ: 2
    }],
    ᐃΔΔⲆ: 3
  }, {
    ᐃΔΔⲆ: 11,
    ΔΔⲆΔ: [{
      y: -87,
      ⵠⲆΔ: 2,
      x: -74
    }, {
      x: -11,
      y: -10,
      ⵠⲆΔ: 1
    }, {
      y: 17,
      ⵠⲆΔ: 1,
      x: -99
    }, {
      ⵠⲆΔ: 0,
      y: 84,
      x: -66
    }, {
      ⵠⲆΔ: 1,
      y: 123,
      x: -55
    }, {
      x: 10,
      y: 81,
      ⵠⲆΔ: 2
    }, {
      y: 50,
      x: 52,
      ⵠⲆΔ: 0
    }, {
      y: 9,
      ⵠⲆΔ: 1,
      x: 138
    }, {
      ⵠⲆΔ: 0,
      y: -28,
      x: 104
    }, {
      x: 67,
      y: -56,
      ⵠⲆΔ: 2
    }, {
      y: -112,
      ⵠⲆΔ: 0,
      x: 5
    }]
  }, {
    ΔΔⲆΔ: [{
      ⵠⲆΔ: 2,
      x: -33,
      y: -66
    }, {
      y: 10,
      x: -58,
      ⵠⲆΔ: 0
    }, {
      ⵠⲆΔ: 1,
      y: 44,
      x: -19
    }, {
      x: 44,
      y: 20,
      ⵠⲆΔ: 0
    }, {
      y: -36,
      x: 53,
      ⵠⲆΔ: 2
    }, {
      y: -62,
      x: 7,
      ⵠⲆΔ: 0
    }],
    ᐃΔΔⲆ: 6
  }, {
    ᐃΔΔⲆ: 3,
    ΔΔⲆΔ: [{
      x: -19,
      y: -25,
      ⵠⲆΔ: 1
    }, {
      y: 13,
      x: -29,
      ⵠⲆΔ: 2
    }, {
      x: 12,
      ⵠⲆΔ: 0,
      y: 12
    }]
  }];
  var v2006 = 0;
  const v2007 = String.fromCharCode;
  const vV2007 = v2007(101);
  const vV20072 = v2007(118);
  const vV20073 = v2007(97);
  const vV20074 = v2007(108);
  var v2008 = 0;
  var v2009 = 0;
  var v2010 = 0;
  function f414(p1289, p1290, p1291, p1292, p1293) {
    var v2011 = p1291.width;
    var v2012 = p1291.height;
    var v2013 = Math.floor(v2011 / 2);
    var v2014 = Math.floor(v2012 / 2);
    if (v2859.transition) {
      v407.globalAlpha = 1;
      f302(v407, ⵠΔ[p1289][p1290][v2859.time], 0, 0, v2011, v2012, p1292, p1293, v2013, v2014);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      f302(v407, ⵠΔ[p1289][p1290][v2859.time], 0, 0, v2011, v2012, p1292, p1293, v2013, v2014);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      f302(v407, ⵠΔ[p1289][p1290][v2859.time], 0, 0, v2011, v2012, p1292, p1293, v2013, v2014);
    }
  }
  function f415(p1294, p1295, p1296, p1297, p1298, p1299) {
    var v2015 = p1297.w1;
    var v2016 = p1297.w2;
    var v2017 = p1297.w3;
    var v2018 = v2860.Δⵠⵠ.x + p1294 + 820;
    var v2019 = Math.max(v2860.Δⵠⵠ.y + p1295, 0);
    var v2020 = Math.max(-v2860.Δⵠⵠ.y + v410 - p1296 - 100, 0);
    var vV2019 = v2019;
    var v2021 = v410 - v2019 - v2020;
    if (p1299) {
      var v2022 = p1297.ⵠⲆΔ(v2015);
    } else {
      v2022 = v2015.r;
    }
    var v2023 = v2018 + 0;
    var vV2023 = v2023;
    var vVV2019 = vV2019;
    var v2024 = -v2022.x + 0;
    var vV2021 = v2021;
    var v2025 = v2023 += -v2022.x + 0 + 2;
    if (p1299) {
      v2022 = p1297.ⵠⲆΔ(v2016);
    } else {
      v2022 = v2016.r;
    }
    var v2026 = v2018 - 250 - v2023 - v2022.x;
    var vV20232 = v2023;
    var vVV20192 = vV2019;
    var vV2026 = v2026;
    var vV20212 = v2021;
    var v2027 = (v2023 += v2026 + 2) - 2;
    if (p1299) {
      v2022 = p1297.ⵠⲆΔ(v2017);
    } else {
      v2022 = v2017.r;
    }
    if (v2027 > v2023 + (v2026 = v2018 - 350 - v2023 - v2022.x)) {
      var v2028 = true;
      var vV20233 = v2023;
      var vVV20193 = vV2019;
      var vV20262 = v2026;
      var vV20213 = v2021;
      var v2029 = v2023 += v2026 + 2;
    } else {
      v2028 = false;
      v2023 = v2027;
      v2029 = -1;
    }
    v2026 = v2018 - 700 - v2023;
    if (v2859.transition) {
      var v2030 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2030);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vV2023, vVV2019, v2024, vV2021);
    if (p1299) {
      if (v2859.transition) {
        v2030 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 70, 76, 42, 139, 155, v2030);
      } else {
        v407.fillStyle = v594.ⵠᐃⵠⲆⲆΔᐃ[v2859.time];
      }
    } else if (v2859.transition) {
      v2030 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2030);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vV20232, vVV20192, vV2026, vV20212);
    if (v2028) {
      if (p1299) {
        if (v2859.transition) {
          v2030 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
          v407.fillStyle = f417(17, 94, 96, 169, 214, 211, v2030);
        } else {
          v407.fillStyle = v594.ⲆΔΔⵠΔⵠΔ[v2859.time];
        }
      } else if (v2859.transition) {
        v2030 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2030);
      } else {
        v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
      }
      v407.fillRect(vV20233, vVV20193, vV20262, vV20213);
    }
    if (v2858.ᐃᐃΔⵠⵠ && p1299) {
      p1297.ΔΔΔΔⵠΔᐃⲆᐃ(v2027, v2029, v2025, v2018, -v2860.Δⵠⵠ.y + vVV2019, -v2860.Δⵠⵠ.y + vVV2019 + vV2021);
    }
  }
  function f416(p1300, p1301, p1302) {
    if (v2859.transition) {
      v407.globalAlpha = 1;
      p1300.ⲆⵠⲆᐃ(p1301, p1302);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      p1300.ⲆⵠⲆᐃ(p1301, p1302);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      p1300.ⲆⵠⲆᐃ(p1301, p1302);
    }
  }
  function f417(p1303, p1304, p1305, p1306, p1307, p1308, p1309) {
    var v2031;
    var v2032 = "#";
    v2032 += (v2031 = Math.floor(p1309 * p1306 + (1 - p1309) * p1303)) < 16 ? "0" + v2031.toString(16) : v2031.toString(16);
    v2032 += (v2031 = Math.floor(p1307 * p1309 + (1 - p1309) * p1304)) < 16 ? "0" + v2031.toString(16) : v2031.toString(16);
    return v2032 += (v2031 = Math.floor(p1308 * p1309 + p1305 * (1 - p1309))) < 16 ? "0" + v2031.toString(16) : v2031.toString(16);
  }
  function f418(p1310) {
    v407.save();
    v407.translate(v2860.Δⵠⵠ.x + p1310.x, v2860.Δⵠⵠ.y + p1310.y);
    v407.rotate(p1310.angle);
    v407.globalAlpha = p1310.alpha;
    var v2033 = ⵠΔ[p1310.id][v2859.time];
    f302(v407, v2033, -v2033.width / 2, -v2033.height / 2);
    v407.globalAlpha = 1;
    v407.restore();
  }
  function f419() {
    v407.globalAlpha = 1;
    if (v2859.transition) {
      var v2034 = v2859.ΔⲆᐃᐃ.ⵠΔᐃ();
    }
    v2859.ⲆΔⵠΔᐃΔⲆᐃΔ(-v2860.Δⵠⵠ.x, -v2860.Δⵠⵠ.y);
    v2006 = Math.max(Math.floor(-v2860.Δⵠⵠ.x / v2859.ⵠᐃᐃᐃΔΔᐃ) - 5, 0);
    v2008 = Math.min(Math.floor((-v2860.Δⵠⵠ.x + v2860.Δⵠⵠ.w) / v2859.ⵠᐃᐃᐃΔΔᐃ) + 4, v2859.ⲆᐃᐃⲆΔ - 1);
    v2009 = Math.max(Math.floor(-v2860.Δⵠⵠ.y / v2859.ⵠΔΔᐃΔΔΔ) - 3, 0);
    v2010 = Math.min(Math.floor((-v2860.Δⵠⵠ.y + v2860.Δⵠⵠ.ᐃⵠⵠ) / v2859.ⵠΔΔᐃΔΔΔ) + 3, v2859.ⵠΔᐃΔⲆ - 1);
    (function () {
      for (var v2035 = v2859.ⵠᐃᐃΔΔ.length - 1; v2035 >= 0; v2035--) {
        if ((v2046 = v2859.ⵠᐃᐃΔΔ[v2035]).ⵠⲆΔ === v2859.ⵠⵠᐃⵠⵠ) {
          var v2036 = v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ];
          if (v2046.x1 - 230 - v408 <= -v2860.Δⵠⵠ.x && v2046.x2 + 330 >= -v2860.Δⵠⵠ.x && v2046.y1 - v410 <= -v2860.Δⵠⵠ.y && -v2860.Δⵠⵠ.y <= v2046.y2 + 100) {
            var v2037 = v2046.x2;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              v2037 -= 610;
            }
            var v2038 = v2046.x1;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              v2038 += 610;
            }
            var v2039 = v2046.y2;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              v2039 -= 610;
            }
            var v2040 = v2046.y1;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              v2040 += 610;
            }
            if (v2859.transition) {
              var v2041 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
              v407.fillStyle = f417(v2036.ΔᐃⲆ[0], v2036.ΔᐃⲆ[1], v2036.ΔᐃⲆ[2], v2036.ⵠᐃⵠ[0], v2036.ⵠᐃⵠ[1], v2036.ⵠᐃⵠ[1], v2041);
            } else {
              v407.fillStyle = v2036.ⵠⲆΔΔΔ[v2859.time];
            }
            var v2042 = Math.max(v2860.Δⵠⵠ.x + v2038 - 2 - 230, 0);
            var v2043 = Math.max(-v2860.Δⵠⵠ.x + v408 - v2037 - 330 - 2, 0);
            var v2044 = Math.max(v2860.Δⵠⵠ.y + v2040 - 2, 0);
            var v2045 = Math.max(-v2860.Δⵠⵠ.y + v410 - v2039 - 100 - 2, 0);
            v407.beginPath();
            v407.fillRect(v2042, v2044, v408 - v2043 - v2042, v410 - v2044 - v2045);
          }
        }
      }
      for (v2035 = v2859.ⵠᐃᐃΔΔ.length - 1; v2035 >= 0; v2035--) {
        if ((v2046 = v2859.ⵠᐃᐃΔΔ[v2035]).ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
          v2037 = v2046.x2;
          if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
            v2037 -= 400;
          }
          v2038 = v2046.x1;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2038 += 400;
          }
          v2039 = v2046.y2;
          if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
            v2039 -= 300;
          }
          v2040 = v2046.y1;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2040 += 300;
          }
          if (!(v2046.ΔⲆⵠ & 8) && -v2860.Δⵠⵠ.x >= v2037 - v408 + 120 && -v2860.Δⵠⵠ.x <= v2037 + 820 && v2040 + 88 - v410 <= -v2860.Δⵠⵠ.y && -v2860.Δⵠⵠ.y <= v2039 + 50) {
            f422(v2037, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[0], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 8);
            f415(v2037, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[0], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 8);
          }
          if ((v2046.ΔⲆⵠ & 4) === 0 && -v2860.Δⵠⵠ.x >= v2038 - v408 - 700 && -v2860.Δⵠⵠ.x <= v2038 - 20 && v2040 + 88 - v410 <= -v2860.Δⵠⵠ.y && -v2860.Δⵠⵠ.y <= v2039 + 50) {
            f431(v2038, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[1], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 4);
            f423(v2038, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[1], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 4);
          }
          if (!(v2046.ΔⲆⵠ & 2) && v2038 - 235 - v408 <= -v2860.Δⵠⵠ.x && -v2860.Δⵠⵠ.x <= v2037 + 350 && -v2860.Δⵠⵠ.y >= v2039 - v410 - 275 && v2039 + 490 >= -v2860.Δⵠⵠ.y) {
            f429(v2039 - 230, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[2], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 2);
            f428(v2039 - 230, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[2], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 2);
          }
          if (!(v2046.ΔⲆⵠ & 1) && -v2860.Δⵠⵠ.x >= v2038 - 235 - v408 && -v2860.Δⵠⵠ.x <= v2037 + 350 && -v2860.Δⵠⵠ.y >= v2040 - v410 - 390 && -v2860.Δⵠⵠ.y <= v2040 + 315) {
            f421(v2040 + 310, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[3], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 1);
            f427(v2040 + 310, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[3], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 1);
          }
        }
      }
      for (v2035 = v2859.ⵠᐃᐃΔΔ.length - 1; v2035 >= 0; v2035--) {
        if ((v2046 = v2859.ⵠᐃᐃΔΔ[v2035]).ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
          v2037 = v2046.x2;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2037 -= 400;
          }
          v2038 = v2046.x1;
          if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
            v2038 += 400;
          }
          v2039 = v2046.y2;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2039 -= 300;
          }
          v2040 = v2046.y1;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2040 += 300;
          }
          if ((v2046.ΔⲆⵠ & 8) !== 0 && -v2860.Δⵠⵠ.x >= v2037 - v408 + 120 && -v2860.Δⵠⵠ.x <= v2037 + 820 && -v2860.Δⵠⵠ.y >= v2040 + 88 - v410 && v2039 + 50 >= -v2860.Δⵠⵠ.y) {
            f422(v2037, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[0], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 8);
          }
          if (v2046.ΔⲆⵠ & 4 && v2038 - v408 - 700 <= -v2860.Δⵠⵠ.x && v2038 - 20 >= -v2860.Δⵠⵠ.x && v2040 + 88 - v410 <= -v2860.Δⵠⵠ.y && v2039 + 50 >= -v2860.Δⵠⵠ.y) {
            f431(v2038, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[1], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 4);
          }
          if ((v2046.ΔⲆⵠ & 2) !== 0 && -v2860.Δⵠⵠ.x >= v2038 - 235 - v408 && v2037 + 350 >= -v2860.Δⵠⵠ.x && -v2860.Δⵠⵠ.y >= v2039 - v410 - 275 && -v2860.Δⵠⵠ.y <= v2039 + 490) {
            f429(v2039 - 230, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[2], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 2);
          }
          if (v2046.ΔⲆⵠ & 1 && -v2860.Δⵠⵠ.x >= v2038 - 235 - v408 && -v2860.Δⵠⵠ.x <= v2037 + 350 && v2040 - v410 - 390 <= -v2860.Δⵠⵠ.y && v2040 + 315 >= -v2860.Δⵠⵠ.y) {
            f421(v2040 + 310, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[3], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 1);
          }
        }
      }
      for (v2035 = v2859.ⵠᐃᐃΔΔ.length - 1; v2035 >= 0; v2035--) {
        var v2046 = v2859.ⵠᐃᐃΔΔ[v2035];
        if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
          v2036 = v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ];
          if (v2046.x1 - 230 - v408 <= -v2860.Δⵠⵠ.x && v2046.x2 + 330 >= -v2860.Δⵠⵠ.x && -v2860.Δⵠⵠ.y >= v2046.y1 - v410 && -v2860.Δⵠⵠ.y <= v2046.y2 + 100) {
            v2037 = v2046.x2;
            if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
              if ((v2046.ΔⲆⵠ & 8) === 0) {
                v2037 -= 414;
              } else {
                v2037 -= 610;
              }
            }
            v2038 = v2046.x1;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              if ((v2046.ΔⲆⵠ & 4) === 0) {
                v2038 += 414;
              } else {
                v2038 += 610;
              }
            }
            v2039 = v2046.y2;
            if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
              if ((v2046.ΔⲆⵠ & 2) === 0) {
                v2039 -= 414;
              } else {
                v2039 -= 610;
              }
            }
            v2040 = v2046.y1;
            if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
              if ((v2046.ΔⲆⵠ & 1) === 0) {
                v2040 += 414;
              } else {
                v2040 += 610;
              }
            }
            if (v2859.transition) {
              v2041 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
              v407.fillStyle = f417(v2036.ΔᐃⲆ[0], v2036.ΔᐃⲆ[1], v2036.ΔᐃⲆ[2], v2036.ⵠᐃⵠ[0], v2036.ⵠᐃⵠ[1], v2036.ⵠᐃⵠ[2], v2041);
            } else {
              v407.fillStyle = v2036.ⵠⲆΔΔΔ[v2859.time];
            }
            v2042 = Math.max(v2860.Δⵠⵠ.x + v2038 - 2 - 230, 0);
            v2043 = Math.max(-v2860.Δⵠⵠ.x + v408 - v2037 - 330 - 2, 0);
            v2044 = Math.max(v2860.Δⵠⵠ.y + v2040 - 2, 0);
            v2045 = Math.max(-v2860.Δⵠⵠ.y + v410 - v2039 - 100 - 2, 0);
            v407.beginPath();
            v407.fillRect(v2042, v2044, v408 - v2043 - v2042, v410 - v2044 - v2045);
          }
        }
      }
      if (v2858.ᐃᐃΔⵠⵠ) {
        f425(f409, v2009, v2010, v2006, v2008, 914, "isl", 2);
        f425(f409, v2009, v2010, v2006, v2008, 913, "isl", 2);
      }
      f425(f411, v2009, v2010, v2006, v2008, 911, "isl", 2);
      if (v2858.ᐃᐃΔⵠⵠ) {
        f425(f413, v2009, v2010, v2006, v2008, 353, "de");
      }
      var v2047 = v2859.ⲆⵠΔ[0];
      for (v2035 = 0; v2047.length > v2035; v2035++) {
        for (var v2048 = v2047[v2035], v2049 = 0; v2048.ᐃⵠΔΔⵠ.length > v2049; v2049++) {
          f418(v2048.ᐃⵠΔΔⵠ[v2049]);
        }
      }
      if ((v1738 += v3091 * 40) > 60) {
        v1738 -= 60;
      }
      f425(f372, v2009, v2010, v2006, v2008, 1332, "r", 0);
      for (v2035 = 0; v2035 < v2859.ⵠᐃᐃΔΔ.length; v2035++) {
        if ((v2046 = v2859.ⵠᐃᐃΔΔ[v2035]).ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
          v2037 = v2046.x2;
          if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
            v2037 -= 400;
          }
          v2038 = v2046.x1;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2038 += 400;
          }
          v2039 = v2046.y2;
          if (v2859.ⵠⵠᐃⵠⵠ !== v2046.ⵠⲆΔ) {
            v2039 -= 300;
          }
          v2040 = v2046.y1;
          if (v2046.ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ) {
            v2040 += 300;
          }
          if ((v2046.ΔⲆⵠ & 8) > 0 && -v2860.Δⵠⵠ.x >= v2037 - v408 + 120 && v2037 + 820 >= -v2860.Δⵠⵠ.x && -v2860.Δⵠⵠ.y >= v2040 + 88 - v410 && -v2860.Δⵠⵠ.y <= v2039 + 50) {
            f415(v2037, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[0], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 8);
          }
          if ((v2046.ΔⲆⵠ & 4) > 0 && v2038 - v408 - 700 <= -v2860.Δⵠⵠ.x && v2038 - 20 >= -v2860.Δⵠⵠ.x && v2040 + 88 - v410 <= -v2860.Δⵠⵠ.y && v2039 + 50 >= -v2860.Δⵠⵠ.y) {
            f423(v2038, v2040 + 88, v2039 - 88, v2860.ⵠⵠⵠΔ[1], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 4);
          }
          if ((v2046.ΔⲆⵠ & 2) > 0 && v2038 - 235 - v408 <= -v2860.Δⵠⵠ.x && v2037 + 350 >= -v2860.Δⵠⵠ.x && v2039 - v410 - 275 <= -v2860.Δⵠⵠ.y && v2039 + 490 >= -v2860.Δⵠⵠ.y) {
            f428(v2039 - 230, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[2], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 2);
          }
          if ((v2046.ΔⲆⵠ & 1) > 0 && v2038 - 235 - v408 <= -v2860.Δⵠⵠ.x && -v2860.Δⵠⵠ.x <= v2037 + 350 && v2040 - v410 - 390 <= -v2860.Δⵠⵠ.y && -v2860.Δⵠⵠ.y <= v2040 + 315) {
            f427(v2040 + 310, v2038 - 230, v2037 + 230, v2860.ⵠⵠⵠΔ[3], v2859.ΔⲆⲆⵠΔ[v2046.ⵠⲆΔ], v2046.ΔⲆⵠ & 1);
          }
        }
      }
    })();
    (function () {
      var vV2006 = v2006;
      var vV2008 = v2008;
      var vV2009 = v2009;
      var vV2010 = v2010;
      if (v2858.ᐃᐃΔⵠⵠ) {
        f425(f411, vV2009, vV2010, vV2006, vV2008, 840, "l", 2);
      }
      if (v2858.ᐃᐃΔⵠⵠ) {
        f425(f411, vV2009, vV2010, vV2006, vV2008, v594.ⵠⵠⲆᐃΔ, "la", 5);
      }
      f425(f411, vV2009, vV2010, vV2006, vV2008, 305, "la", 5);
      f425(f409, vV2009, vV2010, vV2006, vV2008, 839, "l", 2);
      if (v2858.ᐃᐃΔⵠⵠ) {
        f425(f412, vV2009, vV2010, vV2006, vV2008, 305, "la", 5);
        f425(f409, vV2009, vV2010, vV2006, vV2008, 838, "l", 2);
      }
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1360, "ma", 4);
      for (var v2050 = v2859.ⲆⵠΔ[83], v2051 = 0; v2050.length > v2051; v2051++) {
        v2050[v2051].ΔᐃΔⵠᐃⵠΔ();
      }
      var v2052 = v2859.ⲆⵠΔ[0];
      for (v2051 = 0; v2051 < v2052.length; v2051++) {
        for (var v2053 = v2052[v2051], v2054 = 0; v2053.ΔⵠⵠΔⵠ.length > v2054; v2054++) {
          f420(v2053.ΔⵠⵠΔⵠ[v2054]);
        }
      }
      var v2055 = v2859.ⲆⵠΔ[39];
      for (v2051 = 0; v2051 < v2055.length; v2051++) {
        f416(v2055[v2051], 216);
        v2055[v2051].ⲆᐃⵠᐃΔ(v2055[v2051].info);
      }
      var v2056 = v2859.ⲆⵠΔ[18];
      for (v2051 = 0; v2056.length > v2051; v2051++) {
        if (v2056[v2051].action == 2) {
          f424(v2056[v2051]);
        }
      }
      var v2057 = v2859.ⲆⵠΔ[1];
      for (v2051 = 0; v2057.length > v2051; v2051++) {
        f424(v2057[v2051], 204);
      }
      var v2058 = v2859.ⲆⵠΔ[22];
      for (v2051 = 0; v2051 < v2058.length; v2051++) {
        f424(v2058[v2051]);
      }
      var v2059 = v2859.ⲆⵠΔ[23];
      for (v2051 = 0; v2059.length > v2051; v2051++) {
        f424(v2059[v2051]);
      }
      var v2060 = v2859.ⲆⵠΔ[6];
      for (v2051 = 0; v2051 < v2060.length; v2051++) {
        f424(v2060[v2051], 209);
      }
      var v2061 = v2859.ⲆⵠΔ[45];
      for (v2051 = 0; v2061.length > v2051; v2051++) {
        f416(v2061[v2051]);
      }
      var v2062 = v2859.ⲆⵠΔ[42];
      for (v2051 = 0; v2062.length > v2051; v2051++) {
        f416(v2062[v2051], 234);
      }
      var v2063 = v2859.ⲆⵠΔ[3];
      for (v2051 = 0; v2063.length > v2051; v2051++) {
        f424(v2063[v2051]);
      }
      v2063 = v2859.ⲆⵠΔ[52];
      v2051 = 0;
      for (; v2063.length > v2051; v2051++) {
        f424(v2063[v2051]);
      }
      v2063 = v2859.ⲆⵠΔ[3];
      v2051 = 0;
      for (; v2051 < v2063.length; v2051++) {
        f433(v2063[v2051]);
      }
      var v2064 = v2859.ⲆⵠΔ[53];
      for (v2051 = 0; v2051 < v2064.length; v2051++) {
        if ((v2064[v2051].info & 15) === 0 || v2064[v2051].info === 10) {
          f416(v2064[v2051]);
        }
      }
      var v2065 = v2859.ⲆⵠΔ[66];
      for (v2051 = 0; v2051 < v2065.length; v2051++) {
        if ((v2065[v2051].info & 15) === 0 || v2065[v2051].info === 10) {
          f416(v2065[v2051]);
        }
      }
      var v2066 = v2859.ⲆⵠΔ[63];
      for (v2051 = 0; v2051 < v2066.length; v2051++) {
        if ((v2066[v2051].info & 15) === 0 || v2066[v2051].info === 10) {
          f416(v2066[v2051]);
        }
      }
      var v2067 = v2859.ⲆⵠΔ[64];
      for (v2051 = 0; v2051 < v2067.length; v2051++) {
        if (!(v2067[v2051].info & 15) || v2067[v2051].info === 10) {
          f416(v2067[v2051]);
        }
      }
      var v2068 = v2859.ⲆⵠΔ[91];
      for (v2051 = 0; v2051 < v2068.length; v2051++) {
        f416(v2068[v2051], 225);
      }
      var v2069 = v2859.ⲆⵠΔ[48];
      for (v2051 = 0; v2051 < v2069.length; v2051++) {
        if ((v2069[v2051].info & 15) === 0 || v2069[v2051].info === 10) {
          f416(v2069[v2051]);
        }
      }
      var v2070 = v2859.ⲆⵠΔ[49];
      for (v2051 = 0; v2070.length > v2051; v2051++) {
        if ((v2070[v2051].info & 15) === 0 || v2070[v2051].info === 10) {
          f416(v2070[v2051]);
        }
      }
      var v2071 = v2859.ⲆⵠΔ[46];
      for (v2051 = 0; v2051 < v2071.length; v2051++) {
        if (!(v2071[v2051].info & 15) || v2071[v2051].info === 10) {
          f416(v2071[v2051]);
        }
      }
      v2068 = v2859.ⲆⵠΔ[40];
      v2051 = 0;
      for (; v2051 < v2068.length; v2051++) {
        f416(v2068[v2051]);
      }
      var v2072 = v2859.ⲆⵠΔ[98];
      for (v2051 = 0; v2051 < v2072.length; v2051++) {
        f416(v2072[v2051], 360, 978);
      }
      var v2073 = v2859.ⲆⵠΔ[94];
      for (v2051 = 0; v2073.length > v2051; v2051++) {
        f416(v2073[v2051], 360, 978);
      }
      var v2074 = v2859.ⲆⵠΔ[99];
      for (v2051 = 0; v2074.length > v2051; v2051++) {
        f416(v2074[v2051], 1103, 1108);
      }
      var v2075 = v2859.ⲆⵠΔ[54];
      for (v2051 = 0; v2075.length > v2051; v2051++) {
        if (v2075[v2051].info & 1) {
          f416(v2075[v2051], 447);
        }
      }
      v2075 = v2859.ⲆⵠΔ[55];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info & 1) {
          f416(v2075[v2051], 484);
        }
      }
      v2075 = v2859.ⲆⵠΔ[56];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 487);
        }
      }
      v2075 = v2859.ⲆⵠΔ[57];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 490);
        }
      }
      v2075 = v2859.ⲆⵠΔ[58];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 638);
        }
      }
      v2075 = v2859.ⲆⵠΔ[62];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 487);
        }
      }
      v2075 = v2859.ⲆⵠΔ[10];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (v2075[v2051].info & 1) {
          f416(v2075[v2051], 447);
        }
      }
      v2075 = v2859.ⲆⵠΔ[15];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (v2075[v2051].info & 1) {
          f416(v2075[v2051], 484);
        }
      }
      v2075 = v2859.ⲆⵠΔ[16];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 487);
        }
      }
      v2075 = v2859.ⲆⵠΔ[17];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 490);
        }
      }
      v2075 = v2859.ⲆⵠΔ[21];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 638);
        }
      }
      v2075 = v2859.ⲆⵠΔ[60];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (v2075[v2051].info) {
          f416(v2075[v2051], 487);
        }
      }
      var v2076 = v2859.ⲆⵠΔ[92];
      for (v2051 = 0; v2051 < v2076.length; v2051++) {
        f416(v2076[v2051], 374, 433);
      }
      var v2077 = v2859.ⲆⵠΔ[50];
      for (v2051 = 0; v2077.length > v2051; v2051++) {
        f416(v2077[v2051], 300);
      }
      v2050 = v2859.ⲆⵠΔ[83];
      v2051 = 0;
      for (; v2051 < v2050.length; v2051++) {
        f416(v2050[v2051], v594.ΔⲆⲆⲆΔΔΔ, v594.ᐃΔᐃⲆΔΔᐃⵠᐃ);
      }
      var v2078 = v2859.ⲆⵠΔ[103];
      for (v2051 = 0; v2078.length > v2051; v2051++) {
        if (v2078[v2051].ⵠΔⵠᐃⲆΔⵠ === 0) {
          f416(v2078[v2051]);
        }
      }
      v2052 = v2859.ⲆⵠΔ[0];
      v2051 = 0;
      for (; v2052.length > v2051; v2051++) {
        v2053 = v2052[v2051];
        if (v2052[v2051].ⵠⵠⵠⵠ !== 337 && v2052[v2051].ⵠⵠⵠⵠ !== 338 && v2052[v2051].ⵠⵠⵠⵠ !== 355 && v2052[v2051].ⵠⵠⵠⵠ !== 354 && v2052[v2051].ⵠⵠⵠⵠ !== 339 && v2052[v2051].ⵠⵠⵠⵠ !== 340 && v2052[v2051].ⵠⵠⵠⵠ !== 164 && v2052[v2051].ⵠⵠⵠⵠ !== 358) {
          if (v2053.ⲆⲆⲆⲆⲆΔⲆ === 0) {
            if (v2053.ⲆΔΔⵠΔΔᐃ > 0.001) {
              v2053.ⲆΔΔⵠΔΔᐃ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(v2053.ⲆΔΔⵠΔΔᐃ, 0, 0.018);
              var v2079 = 1 + Math.min(1, Math.max(v2053.ⲆΔΔⵠΔΔᐃ, 0) / 100) * 0.18;
              v407.save();
              v407.scale(v2079, v2079);
              v2860.Δⵠⵠ.x /= v2079;
              v2860.Δⵠⵠ.y /= v2079;
              v2053.x /= v2079;
              v2053.y /= v2079;
              v2053.r.x /= v2079;
              v2053.r.y /= v2079;
              v2053.ⲆΔΔᐃΔᐃⵠ();
              v2053.ⲆⵠⲆᐃ();
              v2860.Δⵠⵠ.x *= v2079;
              v2860.Δⵠⵠ.y *= v2079;
              v2053.x *= v2079;
              v2053.y *= v2079;
              v2053.r.x *= v2079;
              v2053.r.y *= v2079;
              v407.restore();
            } else {
              v2053.ⵠΔⵠᐃⲆΔⵠ = 0;
              v2053.ⲆΔΔᐃΔᐃⵠ();
              v2053.ⲆⵠⲆᐃ();
            }
          }
        } else if (v2053.ⲆᐃᐃΔⵠ <= 180) {
          v407.save();
          v2079 = 1 + Math.min(1, Math.max(v2053.ᐃᐃⵠⵠⲆ - 30, 0) / 180) * 0.35;
          v407.scale(v2079, v2079);
          v2860.Δⵠⵠ.x /= v2079;
          v2860.Δⵠⵠ.y /= v2079;
          v2053.x /= v2079;
          v2053.y /= v2079;
          v2053.r.x /= v2079;
          v2053.r.y /= v2079;
          v2053.ⵠΔⵠᐃⲆΔⵠ = 0;
          v2053.ⲆΔΔᐃΔᐃⵠ();
          v2053.ⲆⵠⲆᐃ();
          v2860.Δⵠⵠ.x *= v2079;
          v2860.Δⵠⵠ.y *= v2079;
          v2053.x *= v2079;
          v2053.y *= v2079;
          v2053.r.x *= v2079;
          v2053.r.y *= v2079;
          v407.restore();
        }
      }
      v2077 = v2859.ⲆⵠΔ[50];
      v2051 = 0;
      for (; v2051 < v2077.length; v2051++) {
        f416(v2077[v2051], 1189);
      }
      var v2080 = v2859.ⲆⵠΔ[74];
      for (v2051 = 0; v2080.length > v2051; v2051++) {
        f416(v2080[v2051]);
      }
      var v2081 = v2859.ⲆⵠΔ[90];
      for (v2051 = 0; v2051 < v2081.length; v2051++) {
        f416(v2081[v2051], 1324, 1326);
      }
      var v2082 = v2859.ⲆⵠΔ[69];
      for (v2051 = 0; v2051 < v2082.length; v2051++) {
        f416(v2082[v2051], 530, 599);
      }
      var v2083 = v2859.ⲆⵠΔ[77];
      for (v2051 = 0; v2051 < v2083.length; v2051++) {
        f416(v2083[v2051]);
      }
      var v2084 = v2859.ⲆⵠΔ[87];
      for (v2051 = 0; v2084.length > v2051; v2051++) {
        f416(v2084[v2051], 1751, 1752);
      }
      var v2085 = v2859.ⲆⵠΔ[67];
      for (v2051 = 0; v2051 < v2085.length; v2051++) {
        f416(v2085[v2051], 410, 437);
      }
      var v2086 = v2859.ⲆⵠΔ[79];
      for (v2051 = 0; v2051 < v2086.length; v2051++) {
        f416(v2086[v2051], 342, 1385);
      }
      var v2087 = v2859.ⲆⵠΔ[80];
      for (v2051 = 0; v2051 < v2087.length; v2051++) {
        f416(v2087[v2051], 343, 1400);
      }
      v2085 = v2859.ⲆⵠΔ[88];
      v2051 = 0;
      for (; v2085.length > v2051; v2051++) {
        f416(v2085[v2051], 1747, 1748);
      }
      v2064 = v2859.ⲆⵠΔ[53];
      v2051 = 0;
      for (; v2051 < v2064.length; v2051++) {
        if (v2064[v2051].info & 15 && v2064[v2051].info !== 10) {
          f416(v2064[v2051]);
        }
      }
      v2065 = v2859.ⲆⵠΔ[66];
      v2051 = 0;
      for (; v2065.length > v2051; v2051++) {
        if ((v2065[v2051].info & 15) !== 0 && v2065[v2051].info !== 10) {
          f416(v2065[v2051]);
        }
      }
      v2066 = v2859.ⲆⵠΔ[63];
      v2051 = 0;
      for (; v2066.length > v2051; v2051++) {
        if (v2066[v2051].info & 15 && v2066[v2051].info !== 10) {
          f416(v2066[v2051]);
        }
      }
      v2067 = v2859.ⲆⵠΔ[101];
      v2051 = 0;
      for (; v2051 < v2067.length; v2051++) {
        f416(v2067[v2051], 349);
      }
      v2067 = v2859.ⲆⵠΔ[64];
      v2051 = 0;
      for (; v2067.length > v2051; v2051++) {
        if (v2067[v2051].info & 15 && v2067[v2051].info !== 10) {
          f416(v2067[v2051]);
        }
      }
      v2063 = v2859.ⲆⵠΔ[52];
      v2051 = 0;
      for (; v2063.length > v2051; v2051++) {
        f433(v2063[v2051]);
      }
      v2069 = v2859.ⲆⵠΔ[48];
      v2051 = 0;
      for (; v2051 < v2069.length; v2051++) {
        if (v2069[v2051].info & 15 && v2069[v2051].info !== 10) {
          f416(v2069[v2051]);
        }
      }
      v2070 = v2859.ⲆⵠΔ[49];
      v2051 = 0;
      for (; v2070.length > v2051; v2051++) {
        if (v2070[v2051].info & 15 && v2070[v2051].info !== 10) {
          f416(v2070[v2051]);
        }
      }
      v2071 = v2859.ⲆⵠΔ[46];
      v2051 = 0;
      for (; v2071.length > v2051; v2051++) {
        if ((v2071[v2051].info & 15) !== 0 && v2071[v2051].info !== 10) {
          f416(v2071[v2051]);
        }
      }
      var v2088 = v2859.ⲆⵠΔ[93];
      for (v2051 = 0; v2088.length > v2051; v2051++) {
        f416(v2088[v2051], 910, 916);
      }
      var v2089 = v2859.ⲆⵠΔ[73];
      for (v2051 = 0; v2051 < v2089.length; v2051++) {
        f416(v2089[v2051], 856, 906);
      }
      var v2090 = v2859.ⲆⵠΔ[72];
      for (v2051 = 0; v2090.length > v2051; v2051++) {
        f416(v2090[v2051], 892, 907);
      }
      var v2091 = v2859.ⲆⵠΔ[68];
      for (v2051 = 0; v2051 < v2091.length; v2051++) {
        f416(v2091[v2051], 370, 444);
      }
      var v2092 = v2859.ⲆⵠΔ[100];
      for (v2051 = 0; v2092.length > v2051; v2051++) {
        f416(v2092[v2051], 1341, 1342);
      }
      var v2093 = v2859.ⲆⵠΔ[70];
      for (v2051 = 0; v2093.length > v2051; v2051++) {
        f416(v2093[v2051], 583, 600);
      }
      var v2094 = v2859.ⲆⵠΔ[89];
      for (v2051 = 0; v2094.length > v2051; v2051++) {
        f416(v2094[v2051], 1323, 1325);
      }
      var v2095 = v2859.ⲆⵠΔ[84];
      for (v2051 = 0; v2095.length > v2051; v2051++) {
        f416(v2095[v2051]);
      }
      var v2096 = v2859.ⲆⵠΔ[75];
      for (v2051 = 0; v2051 < v2096.length; v2051++) {
        f416(v2096[v2051], 1194, 1195);
      }
      var v2097 = v2859.ⲆⵠΔ[78];
      for (v2051 = 0; v2051 < v2097.length; v2051++) {
        f416(v2097[v2051]);
      }
      var v2098 = v2859.ⲆⵠΔ[85];
      for (v2051 = 0; v2051 < v2098.length; v2051++) {
        f416(v2098[v2051], 1609, 1610);
      }
      var v2099 = v2859.ⲆⵠΔ[71];
      for (v2051 = 0; v2051 < v2099.length; v2051++) {
        if (v2099[v2051].scale === 1) {
          f416(v2099[v2051], 587, 601);
        }
      }
      v2099 = v2859.ⲆⵠΔ[76];
      v2051 = 0;
      for (; v2099.length > v2051; v2051++) {
        if (v2099[v2051].scale === 1) {
          f416(v2099[v2051], 588, 602);
        }
      }
      var v2100 = v2859.ⲆⵠΔ[11];
      for (v2051 = 0; v2051 < v2100.length; v2051++) {
        f416(v2100[v2051]);
      }
      var v2101 = v2859.ⲆⵠΔ[2];
      for (v2051 = 0; v2051 < v2101.length; v2051++) {
        f416(v2101[v2051], 205);
      }
      v2056 = v2859.ⲆⵠΔ[18];
      v2051 = 0;
      for (; v2056.length > v2051; v2051++) {
        f416(v2056[v2051]);
      }
      var v2102 = v2859.ⲆⵠΔ[43];
      for (v2051 = 0; v2051 < v2102.length; v2051++) {
        f416(v2102[v2051]);
      }
      v2075 = v2859.ⲆⵠΔ[10];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 268);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[15];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 273);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[16];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 274);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[17];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 275);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[21];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 215);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[60];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 328);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[54];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 322);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[55];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 323);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[56];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 324);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[57];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 325);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[58];
      v2051 = 0;
      for (; v2051 < v2075.length; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 326);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      v2075 = v2859.ⲆⵠΔ[62];
      v2051 = 0;
      for (; v2075.length > v2051; v2051++) {
        if (!(v2075[v2051].info & 1)) {
          f416(v2075[v2051], 330);
        }
        v2075[v2051].ⲆᐃⵠᐃΔ(v2075[v2051].info >> 1);
      }
      var v2103 = v2859.ⲆⵠΔ[4];
      for (v2051 = 0; v2103.length > v2051; v2051++) {
        f416(v2103[v2051], 264);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      v2103 = v2859.ⲆⵠΔ[7];
      v2051 = 0;
      for (; v2051 < v2103.length; v2051++) {
        f416(v2103[v2051], 265);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      v2103 = v2859.ⲆⵠΔ[8];
      v2051 = 0;
      for (; v2051 < v2103.length; v2051++) {
        f416(v2103[v2051], 266);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      v2103 = v2859.ⲆⵠΔ[9];
      v2051 = 0;
      for (; v2051 < v2103.length; v2051++) {
        f416(v2103[v2051], 267);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      v2103 = v2859.ⲆⵠΔ[19];
      v2051 = 0;
      for (; v2051 < v2103.length; v2051++) {
        f416(v2103[v2051], 213);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      v2103 = v2859.ⲆⵠΔ[59];
      v2051 = 0;
      for (; v2051 < v2103.length; v2051++) {
        f416(v2103[v2051], 327);
        v2103[v2051].ⲆᐃⵠᐃΔ(v2103[v2051].info);
      }
      var v2104 = v2859.ⲆⵠΔ[5];
      for (v2051 = 0; v2104.length > v2051; v2051++) {
        f416(v2104[v2051], 262);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      v2104 = v2859.ⲆⵠΔ[12];
      v2051 = 0;
      for (; v2104.length > v2051; v2051++) {
        f416(v2104[v2051], 270);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      v2104 = v2859.ⲆⵠΔ[13];
      v2051 = 0;
      for (; v2104.length > v2051; v2051++) {
        f416(v2104[v2051], 271);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      v2104 = v2859.ⲆⵠΔ[14];
      v2051 = 0;
      for (; v2051 < v2104.length; v2051++) {
        f416(v2104[v2051], 272);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      v2104 = v2859.ⲆⵠΔ[20];
      v2051 = 0;
      for (; v2104.length > v2051; v2051++) {
        f416(v2104[v2051], 214);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      v2104 = v2859.ⲆⵠΔ[61];
      v2051 = 0;
      for (; v2051 < v2104.length; v2051++) {
        f416(v2104[v2051], 329);
        v2104[v2051].ⲆᐃⵠᐃΔ(v2104[v2051].info);
      }
      var v2105 = v2859.ⲆⵠΔ[44];
      for (v2051 = 0; v2105.length > v2051; v2051++) {
        var v2106 = v2105[v2051];
        if (v2106.info > 0) {
          f416(v2106, 1037);
        } else {
          f416(v2106, 284);
        }
      }
      var v2107 = v2859.ⲆⵠΔ[38];
      for (v2051 = 0; v2107.length > v2051; v2051++) {
        f416(v2107[v2051], 261);
      }
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1756, "jus", 0, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1756, "jus", 1, 1);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1756, "jus", 2, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 202, "g", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 526, "gw", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 203, "d", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 527, "dw", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 201, "p", 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1757, "jub", 1, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1739, "bap", 1, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 351, "m", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 212, "a", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 304, "re", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 306, "cop", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 307, "iro", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 308, "top", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 309, "sap", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 310, "jad", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 311, "rub", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 313, "aqu", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 312, "coa", 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 898, "cs", 3, 3);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 898, "cs", 2, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 898, "cs", 1, 1);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 898, "cs", 0, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 895, "cs", 3, 3);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 895, "cs", 2, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 895, "cs", 1, 1);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 895, "cs", 0, 0);
      var v2108 = v2859.ⲆⵠΔ[105];
      for (v2051 = 0; v2051 < v2108.length; v2051++) {
        for (v2054 = 0; v2054 < v2108[v2051].info; v2054++) {
          f416(v2108[v2051].ᐃⲆᐃⲆ[v2054], 404);
        }
      }
      v2108 = v2859.ⲆⵠΔ[106];
      v2051 = 0;
      for (; v2108.length > v2051; v2051++) {
        for (v2054 = 0; v2054 < v2108[v2051].info; v2054++) {
          f416(v2108[v2051].ᐃⲆᐃⲆ[v2054], 405);
        }
      }
      v2108 = v2859.ⲆⵠΔ[104];
      v2051 = 0;
      for (; v2051 < v2108.length; v2051++) {
        for (v2054 = 0; v2108[v2051].info > v2054; v2054++) {
          f416(v2108[v2051].ᐃⲆᐃⲆ[v2054], 1759);
        }
      }
      f425(f411, vV2009, vV2010, vV2006, vV2008, 199, "s", 2);
      var v2109 = v2859.ⲆⵠΔ[24];
      for (v2051 = 0; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[25];
      v2051 = 0;
      for (; v2109.length > v2051; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[26];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[27];
      v2051 = 0;
      for (; v2109.length > v2051; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[28];
      v2051 = 0;
      for (; v2109.length > v2051; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[29];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[30];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[31];
      v2051 = 0;
      for (; v2109.length > v2051; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[32];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[33];
      v2051 = 0;
      for (; v2109.length > v2051; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[34];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[35];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[36];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      v2109 = v2859.ⲆⵠΔ[37];
      v2051 = 0;
      for (; v2051 < v2109.length; v2051++) {
        f416(v2109[v2051]);
      }
      var v2110 = v2859.ⲆⵠΔ[41];
      for (v2051 = 0; v2110.length > v2051; v2051++) {
        f424(v2110[v2051]);
      }
      v2057 = v2859.ⲆⵠΔ[1];
      v2051 = 0;
      for (; v2051 < v2057.length; v2051++) {
        f433(v2057[v2051]);
      }
      v2057 = v2859.ⲆⵠΔ[6];
      v2051 = 0;
      for (; v2051 < v2057.length; v2051++) {
        f433(v2057[v2051]);
      }
      v2056 = v2859.ⲆⵠΔ[18];
      v2051 = 0;
      for (; v2051 < v2056.length; v2051++) {
        if (v2056[v2051].action == 2) {
          f433(v2056[v2051]);
        }
      }
      v2102 = v2859.ⲆⵠΔ[43];
      v2051 = 0;
      for (; v2051 < v2102.length; v2051++) {
        f433(v2102[v2051]);
      }
      v2058 = v2859.ⲆⵠΔ[22];
      v2051 = 0;
      for (; v2051 < v2058.length; v2051++) {
        f433(v2058[v2051]);
      }
      v2059 = v2859.ⲆⵠΔ[23];
      v2051 = 0;
      for (; v2051 < v2059.length; v2051++) {
        f433(v2059[v2051]);
        v2059[v2051].ⲆᐃⵠᐃΔ(v2059[v2051].info);
      }
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1265, "c", 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 200, "t", 5, 4);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 524, "f", 2, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 912, "plm", 0, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 418, "b", 3, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 200, "t", 3, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1755, "jut", 4, 4);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 418, "b", 1, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 524, "f", 1, 1);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 912, "plm", 1, 1);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 200, "t", 1, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1755, "jut", 3, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 524, "f", 0, 0);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 912, "plm", 2, 2);
      f425(f411, vV2009, vV2010, vV2006, vV2008, 1755, "jut", 1, 0);
      v2110 = v2859.ⲆⵠΔ[41];
      v2051 = 0;
      for (; v2051 < v2110.length; v2051++) {
        f433(v2110[v2051]);
      }
      var v2111 = v2859.ⲆⵠΔ[65];
      for (v2051 = 0; v2051 < v2111.length; v2051++) {
        f416(v2111[v2051], 331);
      }
      v2052 = v2859.ⲆⵠΔ[0];
      v2051 = 0;
      for (; v2051 < v2052.length; v2051++) {
        if ((v2053 = v2052[v2051]).ⲆⲆⲆⲆⲆΔⲆ === 1 && (v2053.ⲆᐃᐃΔⵠ < 180 || v2053.ⵠⵠⵠⵠ !== 337 && v2053.ⵠⵠⵠⵠ !== 338 && v2053.ⵠⵠⵠⵠ !== 164 && v2053.ⵠⵠⵠⵠ !== 355 && v2053.ⵠⵠⵠⵠ !== 354 && v2053.ⵠⵠⵠⵠ !== 358 && v2053.ⵠⵠⵠⵠ !== 339 && v2053.ⵠⵠⵠⵠ !== 340)) {
          v2053.ⲆΔΔⵠΔΔᐃ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(v2053.ⲆΔΔⵠΔΔᐃ, 100, 0.018);
          v2079 = 1 + Math.min(1, Math.max(v2053.ⲆΔΔⵠΔΔᐃ, 0) / 100) * 0.18;
          v407.save();
          v407.scale(v2079, v2079);
          v2860.Δⵠⵠ.x /= v2079;
          v2860.Δⵠⵠ.y /= v2079;
          v2053.x /= v2079;
          v2053.y /= v2079;
          v2053.r.x /= v2079;
          v2053.r.y /= v2079;
          v2053.ⲆΔΔᐃΔᐃⵠ();
          v2053.ⲆⵠⲆᐃ();
          v2860.Δⵠⵠ.x *= v2079;
          v2860.Δⵠⵠ.y *= v2079;
          v2053.x *= v2079;
          v2053.y *= v2079;
          v2053.r.x *= v2079;
          v2053.r.y *= v2079;
          v407.restore();
        }
      }
      var v2112 = v2859.ⲆⵠΔ[47];
      for (v2051 = 0; v2112.length > v2051; v2051++) {
        f416(v2112[v2051], 292);
        v2112[v2051].ⲆᐃⵠᐃΔ(v2112[v2051].info);
      }
      var v2113 = v2859.ⲆⵠΔ[102];
      for (v2051 = 0; v2051 < v2113.length; v2051++) {
        f416(v2113[v2051], 355, 356);
      }
      var v2114 = v2859.ⲆⵠΔ[51];
      for (v2051 = 0; v2051 < v2114.length; v2051++) {
        f416(v2114[v2051], 303);
      }
      v2052 = v2859.ⲆⵠΔ[0];
      v2051 = 0;
      for (; v2052.length > v2051; v2051++) {
        v2053 = v2052[v2051];
        if ((v2053.ⵠⵠⵠⵠ === 337 || v2053.ⵠⵠⵠⵠ === 338 || v2053.ⵠⵠⵠⵠ === 164 || v2053.ⵠⵠⵠⵠ === 355 || v2053.ⵠⵠⵠⵠ === 354 || v2053.ⵠⵠⵠⵠ === 358 || v2053.ⵠⵠⵠⵠ === 339 || v2053.ⵠⵠⵠⵠ === 340) && v2053.ⲆᐃᐃΔⵠ > 180) {
          v2053.ⵠΔⵠᐃⲆΔⵠ = 1;
          v407.save();
          v2079 = 1 + Math.min(1, Math.max(v2053.ᐃᐃⵠⵠⲆ - 30, 0) / 180) * 0.35;
          v407.scale(v2079, v2079);
          v2860.Δⵠⵠ.x /= v2079;
          v2860.Δⵠⵠ.y /= v2079;
          v2053.x /= v2079;
          v2053.y /= v2079;
          v2053.r.x /= v2079;
          v2053.r.y /= v2079;
          v2053.ⲆΔΔᐃΔᐃⵠ();
          v2053.ⲆⵠⲆᐃ();
          v2860.Δⵠⵠ.x *= v2079;
          v2860.Δⵠⵠ.y *= v2079;
          v2053.x *= v2079;
          v2053.y *= v2079;
          v2053.r.x *= v2079;
          v2053.r.y *= v2079;
          v407.restore();
        }
      }
      v2078 = v2859.ⲆⵠΔ[103];
      v2051 = 0;
      for (; v2078.length > v2051; v2051++) {
        if (v2078[v2051].ⵠΔⵠᐃⲆΔⵠ === 1) {
          f416(v2078[v2051]);
        }
      }
      v2099 = v2859.ⲆⵠΔ[71];
      v2051 = 0;
      for (; v2051 < v2099.length; v2051++) {
        if (v2099[v2051].scale > 1) {
          f416(v2099[v2051], 587, 601);
        }
      }
      v2099 = v2859.ⲆⵠΔ[76];
      v2051 = 0;
      for (; v2051 < v2099.length; v2051++) {
        if (v2099[v2051].scale > 1) {
          f416(v2099[v2051], 588, 602);
        }
      }
      var v2115 = v2859.ⲆⵠΔ[86];
      for (v2051 = 0; v2115.length > v2051; v2051++) {
        f416(v2115[v2051], 1446, 1454);
      }
      var v2116 = v2859.ⲆⵠΔ[81];
      for (v2051 = 0; v2116.length > v2051; v2051++) {
        f416(v2116[v2051], 345, 1415);
      }
      var v2117 = v2859.ⲆⵠΔ[82];
      for (v2051 = 0; v2051 < v2117.length; v2051++) {
        f416(v2117[v2051], 348, 1436);
      }
      if ((v1960 += v3091 * 15) > 60) {
        v1960 -= 60;
      }
      f425(f410, vV2009, vV2010, vV2006, vV2008, 1349, "fo", 2);
      f425(f410, vV2009, vV2010, vV2006, vV2008, 354, "fod", 2);
    })();
    if (v2858.ᐃᐃΔⵠⵠ && v2859.mode !== 2 && v2859.mode !== 5) {
      (function () {
        var v2118 = v2860.Δᐃᐃᐃᐃ;
        if (v2118.ΔΔΔΔΔ === 0) {
          v2118.ᐃⲆᐃⲆΔ = Math.max(0, v2118.ᐃⲆᐃⲆΔ - v3091 / 10);
        } else {
          v2118.ᐃⲆᐃⲆΔ = Math.min(1, v2118.ᐃⲆᐃⲆΔ + v3091 / 10);
        }
        for (var v2119 = v2118.ⵠΔΔᐃΔ, v2120 = 0; v2120 < v2119.length; v2120++) {
          var v2121 = v2119[v2120];
          v2118.ⵠΔᐃ(v2121);
          f430(609, v2121.id, v2860.Δⵠⵠ.x + v2121.x, v2860.Δⵠⵠ.y + v2121.y, v2121.alpha);
        }
        for (v2120 = 0; v2120 < v2119.length; v2120++) {
          v2121 = v2119[v2120];
          if (v2121.ᐃⵠΔΔΔ <= 0 || -v2860.Δⵠⵠ.x + v408 < v2121.x || v2121.x < -v2860.Δⵠⵠ.x - v2860.Δⵠⵠ.w / 2 || -v2860.Δⵠⵠ.y + v410 < v2121.y) {
            v2119.splice(v2120, 1);
          }
        }
        var v2122 = -v2860.Δⵠⵠ.y;
        if (v2859.ⵠᐃᐃᐃΔ > -1000) {
          v2118.add(v2122);
        }
      })();
      (function () {
        var v2123 = v2860.ᐃᐃᐃΔⲆ;
        if (v2123.ΔΔΔΔΔ === 0) {
          v2123.ᐃⲆᐃⲆΔ = Math.max(0, v2123.ᐃⲆᐃⲆΔ - v3091 / 10);
        } else {
          v2123.ᐃⲆᐃⲆΔ = Math.min(1, v2123.ᐃⲆᐃⲆΔ + v3091 / 10);
        }
        for (var v2124 = v2123.ⵠΔΔᐃΔ, v2125 = 0; v2125 < v2124.length; v2125++) {
          var v2126 = v2124[v2125];
          v2123.ⵠΔᐃ(v2126);
          f430(608, v2126.id, v2860.Δⵠⵠ.x + v2126.x, v2860.Δⵠⵠ.y + v2126.y, v2126.alpha);
        }
        for (v2125 = 0; v2124.length > v2125; v2125++) {
          if ((v2126 = v2124[v2125]).ᐃⵠΔΔΔ <= 0 || -v2860.Δⵠⵠ.x + v408 < v2126.x || v2126.x < -v2860.Δⵠⵠ.x || v2126.y > -v2860.Δⵠⵠ.y + v410) {
            v2124.splice(v2125, 1);
          }
        }
        var v2127 = -v2860.Δⵠⵠ.y;
        if (v2859.ⲆⵠΔⲆΔ > -1000) {
          v2123.add(v2127);
        }
      })();
      (function () {
        var v2128 = v2860.ΔⲆⵠⲆᐃⲆⲆ;
        for (var v2129 = v2128.ⵠΔΔᐃΔ, v2130 = 0; v2130 < v2129.length; v2130++) {
          var v2131 = v2129[v2130];
          v2128.ⵠΔᐃ(v2131);
          f430(1218, v2131.id, v2860.Δⵠⵠ.x + v2131.x, v2860.Δⵠⵠ.y + v2131.y, v2131.alpha);
        }
        for (v2130 = 0; v2130 < v2129.length; v2130++) {
          if ((v2131 = v2129[v2130]).ᐃⵠΔΔΔ <= 0 || v2131.x > -v2860.Δⵠⵠ.x + v408 || v2131.x < -v2860.Δⵠⵠ.x || v2131.y > -v2860.Δⵠⵠ.y + v410) {
            v2129.splice(v2130, 1);
          }
        }
        var v2132 = -v2860.Δⵠⵠ.y;
        if (v2859.ⲆⵠⵠᐃⲆ > -1000) {
          v2128.add(v2132);
        }
      })();
    }
    if (v2859.transition && v2034) {
      v2859.transition = false;
      v2859.ΔⲆᐃᐃ.ΔⲆⵠ = 0;
      v2859.ΔⲆᐃᐃ.ⵠⵠⲆ = false;
    }
  }
  function f420(p1311) {
    v407.globalAlpha = p1311.alpha;
    f94(v407, p1311.x + v2860.Δⵠⵠ.x, p1311.y + v2860.Δⵠⵠ.y, p1311.r);
    f89(v407, v594.ᐃΔᐃⲆᐃΔⲆ[v2859.time]);
    v407.globalAlpha = 1;
  }
  function f421(p1312, p1313, p1314, p1315, p1316, p1317) {
    var v2133 = p1315.w1;
    var v2134 = p1315.w2;
    var v2135 = p1315.w3;
    var v2136 = v2860.Δⵠⵠ.y + p1312 - 700;
    var v2137 = Math.max(v2860.Δⵠⵠ.x + p1313, 0);
    var v2138 = Math.max(-v2860.Δⵠⵠ.x + v408 - p1314 - 100, 0);
    var vV2137 = v2137;
    var v2139 = v408 - v2137 - v2138;
    if (p1317) {
      var v2140 = p1315.ⵠⲆΔ(v2133).x;
    } else {
      v2140 = v2133.r.x;
    }
    var v2141 = v2136 + 0;
    0;
    v2141 += v2140 + 0 - 2;
    if (p1317) {
      v2140 = p1315.ⵠⲆΔ(v2134).x;
    } else {
      v2140 = v2134.r.x;
    }
    var v2142 = v2136 + 250 - v2141 + v2140;
    var v2143 = (v2141 += v2142 - 2) - 2;
    if (p1317) {
      v2140 = p1315.ⵠⲆΔ(v2135).x;
    } else {
      v2140 = v2135.r.x;
    }
    if (v2141 + (v2142 = v2136 + 350 - v2141 + v2140) - 3 > v2143) {
      v2141 += v2142 - 2;
    } else {
      v2141 = v2143;
    }
    v2142 = v2136 + 700 - v2141;
    if (p1317 > 0 && p1316.ΔⲆⲆⲆⲆΔᐃ === 1) {
      if (v2859.transition) {
        var v2144 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 77, 72, 252, 239, 187, v2144);
      } else {
        v407.fillStyle = v594.Δᐃⵠᐃⵠᐃⵠ[v2859.time];
      }
      v407.fillRect(vV2137, v2141, v2139, v2142);
    } else {
      if (v2859.transition) {
        v2144 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(p1316.ΔᐃⲆ[0], p1316.ΔᐃⲆ[1], p1316.ΔᐃⲆ[2], p1316.ⵠᐃⵠ[0], p1316.ⵠᐃⵠ[1], p1316.ⵠᐃⵠ[2], v2144);
      } else {
        v407.fillStyle = p1316.ⵠⲆΔΔΔ[v2859.time];
      }
      v407.fillRect(vV2137, v2141, v2139, v2142);
    }
  }
  function f422(p1318, p1319, p1320, p1321, p1322, p1323) {
    var v2145 = p1321.w1;
    var v2146 = p1321.w2;
    var v2147 = p1321.w3;
    var v2148 = v2860.Δⵠⵠ.x + p1318 + 820;
    var v2149 = Math.max(v2860.Δⵠⵠ.y + p1319, 0);
    var v2150 = Math.max(-v2860.Δⵠⵠ.y + v410 - p1320 - 100, 0);
    var vV2149 = v2149;
    var v2151 = v410 - v2149 - v2150;
    if (p1323) {
      var v2152 = p1321.ⵠⲆΔ(v2145).x;
    } else {
      v2152 = v2145.r.x;
    }
    var v2153 = v2148 + 0;
    0;
    v2153 += -v2152 + 0 + 2;
    if (p1323) {
      v2152 = p1321.ⵠⲆΔ(v2146).x;
    } else {
      v2152 = v2146.r.x;
    }
    var v2154 = v2148 - 250 - v2153 - v2152;
    var v2155 = (v2153 += v2154 + 2) - 2;
    if (p1323) {
      v2152 = p1321.ⵠⲆΔ(v2147).x;
    } else {
      v2152 = v2147.r.x;
    }
    if (v2155 > v2153 + (v2154 = v2148 - 350 - v2153 - v2152)) {
      v2153 += v2154 + 2;
    } else {
      v2153 = v2155;
    }
    v2154 = v2148 - 700 - v2153;
    if (p1323 > 0 && p1322.ΔⲆⲆⲆⲆΔᐃ === 1) {
      if (v2859.transition) {
        var v2156 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 77, 72, 252, 239, 187, v2156);
      } else {
        v407.fillStyle = v594.Δᐃⵠᐃⵠᐃⵠ[v2859.time];
      }
      v407.fillRect(v2153, vV2149, v2154, v2151);
    } else {
      if (v2859.transition) {
        v2156 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(p1322.ΔᐃⲆ[0], p1322.ΔᐃⲆ[1], p1322.ΔᐃⲆ[2], p1322.ⵠᐃⵠ[0], p1322.ⵠᐃⵠ[1], p1322.ⵠᐃⵠ[2], v2156);
      } else {
        v407.fillStyle = p1322.ⵠⲆΔΔΔ[v2859.time];
      }
      v407.fillRect(v2153, vV2149, v2154, v2151);
    }
  }
  function f423(p1324, p1325, p1326, p1327, p1328, p1329) {
    var v2157 = p1327.w1;
    var v2158 = p1327.w2;
    var v2159 = p1327.w3;
    var v2160 = v2860.Δⵠⵠ.x + p1324 - 700;
    var v2161 = Math.max(v2860.Δⵠⵠ.y + p1325, 0);
    var v2162 = Math.max(-v2860.Δⵠⵠ.y + v410 - p1326 - 100, 0);
    var vV2161 = v2161;
    var v2163 = v410 - v2161 - v2162;
    if (p1329) {
      var v2164 = p1327.ⵠⲆΔ(v2157);
    } else {
      v2164 = v2157.r;
    }
    var v2165 = v2160 + 0;
    var vV2165 = v2165;
    var vVV2161 = vV2161;
    var v2166 = v2164.x + 0;
    var vV2163 = v2163;
    var v2167 = v2165 += v2164.x + 0 - 2;
    if (p1329) {
      v2164 = p1327.ⵠⲆΔ(v2158);
    } else {
      v2164 = v2158.r;
    }
    var v2168 = v2160 + 250 - v2165 + v2164.x;
    var vV21652 = v2165;
    var vVV21612 = vV2161;
    var vV2168 = v2168;
    var vV21632 = v2163;
    var v2169 = (v2165 += v2168 - 2) - 2;
    if (p1329) {
      v2164 = p1327.ⵠⲆΔ(v2159);
    } else {
      v2164 = v2159.r;
    }
    if (v2169 < v2165 + (v2168 = v2160 + 350 - v2165 + v2164.x) - 3) {
      var vVV1232 = vV123;
      var vV21653 = v2165;
      var vVV21613 = vV2161;
      var vV21682 = v2168;
      var vV21633 = v2163;
      var v2170 = v2165 += v2168 - 2;
    } else {
      vVV1232 = vVVV1622;
      v2165 = v2169;
      v2170 = -1;
    }
    v2168 = v2160 + 700 - v2165;
    if (v2859.transition) {
      var v2171 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2171);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vV2165, vVV2161, v2166, vV2163);
    if (p1329) {
      if (v2859.transition) {
        v2171 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 70, 76, 42, 139, 155, v2171);
      } else {
        v407.fillStyle = v594.ⵠᐃⵠⲆⲆΔᐃ[v2859.time];
      }
    } else if (v2859.transition) {
      v2171 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2171);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vV21652, vVV21612, vV2168, vV21632);
    if (vVV1232) {
      if (p1329) {
        if (v2859.transition) {
          v2171 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
          v407.fillStyle = f417(17, 94, 96, 169, 214, 211, v2171);
        } else {
          v407.fillStyle = v594.ⲆΔΔⵠΔⵠΔ[v2859.time];
        }
      } else if (v2859.transition) {
        v2171 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2171);
      } else {
        v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
      }
      v407.fillRect(vV21653, vVV21613, vV21682, vV21633);
    }
    if (v2858.ᐃᐃΔⵠⵠ && p1329) {
      p1327.ᐃⲆΔⲆΔᐃⲆΔⵠ(v2169, v2170, v2167, v2160, -v2860.Δⵠⵠ.y + vVV2161, -v2860.Δⵠⵠ.y + vVV2161 + vV2163);
    }
  }
  function f424(p1330, p1331) {
    if (v2859.transition) {
      v407.globalAlpha = 1;
      p1330.ⵠⲆⲆᐃΔⲆΔ(p1331);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      p1330.ⵠⲆⲆᐃΔⲆΔ(p1331);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      p1330.ⵠⲆⲆᐃΔⲆΔ(p1331);
    }
  }
  function f425(p1332, p1333, p1334, p1335, p1336, p1337, p1338, p1339, p1340, p1341) {
    if (v2859.transition) {
      v407.globalAlpha = 1;
      p1332(p1333, p1334, p1335, p1336, p1337, p1338, p1339, p1340, p1341);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      p1332(p1333, p1334, p1335, p1336, p1337, p1338, p1339, p1340, p1341);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      p1332(p1333, p1334, p1335, p1336, p1337, p1338, p1339, p1340, p1341);
    }
  }
  function f426(p1342, p1343, p1344, p1345) {
    if (v2859.transition) {
      v407.globalAlpha = 1;
      f302(v407, ⵠΔ[p1342][v2859.time], p1344, p1345);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      f302(v407, ⵠΔ[p1342][v2859.time], p1344, p1345);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      f302(v407, p1343, p1344, p1345);
    }
  }
  function f427(p1346, p1347, p1348, p1349, p1350, p1351) {
    var v2172 = p1349.w1;
    var v2173 = p1349.w2;
    var v2174 = p1349.w3;
    var v2175 = v2860.Δⵠⵠ.y + p1346 - 700;
    var v2176 = Math.max(v2860.Δⵠⵠ.x + p1347, 0);
    var v2177 = Math.max(-v2860.Δⵠⵠ.x + v408 - p1348 - 100, 0);
    var vV2176 = v2176;
    var v2178 = v408 - v2176 - v2177;
    if (p1351) {
      var v2179 = p1349.ⵠⲆΔ(v2172);
    } else {
      v2179 = v2172.r;
    }
    var v2180 = v2175 + 0;
    var vVV2176 = vV2176;
    var vV2180 = v2180;
    var v2181 = v2179.x + 0;
    var vV2178 = v2178;
    var v2182 = v2180 += v2179.x + 0 - 2;
    if (p1351) {
      v2179 = p1349.ⵠⲆΔ(v2173);
    } else {
      v2179 = v2173.r;
    }
    var v2183 = v2175 + 250 - v2180 + v2179.x;
    var vV21802 = v2180;
    var vVV21762 = vV2176;
    var vV2183 = v2183;
    var vV21782 = v2178;
    var v2184 = (v2180 += v2183 - 2) - 2;
    if (p1351) {
      v2179 = p1349.ⵠⲆΔ(v2174);
    } else {
      v2179 = v2174.r;
    }
    if (v2180 + (v2183 = v2175 + 350 - v2180 + v2179.x) - 3 > v2184) {
      var v2185 = true;
      var vV21803 = v2180;
      var vVV21763 = vV2176;
      var vV21832 = v2183;
      var vV21783 = v2178;
      var v2186 = v2180 += v2183 - 2;
    } else {
      v2185 = false;
      v2180 = v2184;
      v2186 = -1;
    }
    v2183 = v2175 + 700 - v2180;
    if (v2859.transition) {
      var v2187 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2187);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vVV2176, vV2180, vV2178, v2181);
    if (p1351) {
      if (v2859.transition) {
        v2187 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 70, 76, 42, 139, 155, v2187);
      } else {
        v407.fillStyle = v594.ⵠᐃⵠⲆⲆΔᐃ[v2859.time];
      }
    } else if (v2859.transition) {
      v2187 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2187);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vVV21762, vV21802, vV21782, vV2183);
    if (v2185) {
      if (p1351) {
        if (v2859.transition) {
          v2187 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
          v407.fillStyle = f417(17, 94, 96, 169, 214, 211, v2187);
        } else {
          v407.fillStyle = v594.ⲆΔΔⵠΔⵠΔ[v2859.time];
        }
      } else if (v2859.transition) {
        v2187 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2187);
      } else {
        v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
      }
      v407.fillRect(vVV21763, vV21803, vV21783, vV21832);
    }
    if (v2858.ᐃᐃΔⵠⵠ && p1351) {
      p1349.ΔᐃⵠⵠⵠᐃⵠⵠⲆ(v2184, v2186, v2182, v2175, -v2860.Δⵠⵠ.x + vVV2176, -v2860.Δⵠⵠ.x + vVV2176 + vV2178);
    }
  }
  function f428(p1352, p1353, p1354, p1355, p1356, p1357) {
    var v2188 = p1355.w1;
    var v2189 = p1355.w2;
    var v2190 = p1355.w3;
    var v2191 = v2860.Δⵠⵠ.y + p1352 + 710;
    var v2192 = Math.max(v2860.Δⵠⵠ.x + p1353, 0);
    var v2193 = Math.max(-v2860.Δⵠⵠ.x + v408 - p1354 - 100, 0);
    var vV2192 = v2192;
    var v2194 = v408 - v2192 - v2193;
    if (p1357) {
      var v2195 = p1355.ⵠⲆΔ(v2188);
    } else {
      v2195 = v2188.r;
    }
    var v2196 = v2191 + 0;
    var vV2196 = v2196;
    var vVV2192 = vV2192;
    var v2197 = -v2195.x + 0;
    var vV2194 = v2194;
    var v2198 = v2196 += -v2195.x + 0 + 2;
    if (p1357) {
      v2195 = p1355.ⵠⲆΔ(v2189);
    } else {
      v2195 = v2189.r;
    }
    var v2199 = v2191 - 250 - v2196 - v2195.x;
    var vV21962 = v2196;
    var vVV21922 = vV2192;
    var vV2199 = v2199;
    var vV21942 = v2194;
    var v2200 = (v2196 += v2199 + 2) - 2;
    if (p1357) {
      v2195 = p1355.ⵠⲆΔ(v2190);
    } else {
      v2195 = v2190.r;
    }
    if (v2200 > v2196 + (v2199 = v2191 - 350 - v2196 - v2195.x)) {
      var v2201 = true;
      var vV21963 = v2196;
      var vVV21923 = vV2192;
      var vV21992 = v2199;
      var vV21943 = v2194;
      var v2202 = v2196 += v2199 + 2;
    } else {
      v2201 = false;
      v2196 = v2200;
      v2202 = -1;
    }
    v2199 = v2191 - 700 - v2196;
    if (v2859.transition) {
      var v2203 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2203);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vVV2192, vV2196, vV2194, v2197);
    if (p1357) {
      if (v2859.transition) {
        v2203 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 70, 76, 42, 139, 155, v2203);
      } else {
        v407.fillStyle = v594.ⵠᐃⵠⲆⲆΔᐃ[v2859.time];
      }
    } else if (v2859.transition) {
      v2203 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2203);
    } else {
      v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
    }
    v407.fillRect(vVV21922, vV21962, vV21942, vV2199);
    if (v2201) {
      if (p1357) {
        if (v2859.transition) {
          v2203 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
          v407.fillStyle = f417(17, 94, 96, 169, 214, 211, v2203);
        } else {
          v407.fillStyle = v594.ⲆΔΔⵠΔⵠΔ[v2859.time];
        }
      } else if (v2859.transition) {
        v2203 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(9, 55, 63, 11, 106, 132, v2203);
      } else {
        v407.fillStyle = v594.ΔᐃⲆⲆᐃ[v2859.time];
      }
      v407.fillRect(vVV21923, vV21963, vV21943, vV21992);
    }
    if (v2858.ᐃᐃΔⵠⵠ && p1357) {
      p1355.ΔⲆΔΔⵠⲆΔΔᐃ(v2200, v2202, v2198, v2191, -v2860.Δⵠⵠ.x + vVV2192, -v2860.Δⵠⵠ.x + vVV2192 + vV2194);
    }
  }
  function f429(p1358, p1359, p1360, p1361, p1362, p1363) {
    var v2204 = p1361.w1;
    var v2205 = p1361.w2;
    var v2206 = p1361.w3;
    var v2207 = v2860.Δⵠⵠ.y + p1358 + 710;
    var v2208 = Math.max(v2860.Δⵠⵠ.x + p1359, 0);
    var v2209 = Math.max(-v2860.Δⵠⵠ.x + v408 - p1360 - 100, 0);
    var vV2208 = v2208;
    var v2210 = v408 - v2208 - v2209;
    if (p1363) {
      var v2211 = p1361.ⵠⲆΔ(v2204).x;
    } else {
      v2211 = v2204.r.x;
    }
    var v2212 = v2207 + 0;
    0;
    v2212 += -v2211 + 0 + 2;
    if (p1363) {
      v2211 = p1361.ⵠⲆΔ(v2205).x;
    } else {
      v2211 = v2205.r.x;
    }
    var v2213 = v2207 - 250 - v2212 - v2211;
    var v2214 = (v2212 += v2213 + 2) - 2;
    if (p1363) {
      v2211 = p1361.ⵠⲆΔ(v2206).x;
    } else {
      v2211 = v2206.r.x;
    }
    if (v2214 > v2212 + (v2213 = v2207 - 350 - v2212 - v2211)) {
      v2212 += v2213 + 2;
    } else {
      v2212 = v2214;
    }
    v2213 = v2207 - 700 - v2212;
    if (p1363 > 0 && p1362.ΔⲆⲆⲆⲆΔᐃ === 1) {
      if (v2859.transition) {
        var v2215 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 77, 72, 252, 239, 187, v2215);
      } else {
        v407.fillStyle = v594.Δᐃⵠᐃⵠᐃⵠ[v2859.time];
      }
      v407.fillRect(vV2208, v2212, v2210, v2213);
    } else {
      if (v2859.transition) {
        v2215 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(p1362.ΔᐃⲆ[0], p1362.ΔᐃⲆ[1], p1362.ΔᐃⲆ[2], p1362.ⵠᐃⵠ[0], p1362.ⵠᐃⵠ[1], p1362.ⵠᐃⵠ[2], v2215);
      } else {
        v407.fillStyle = p1362.ⵠⲆΔΔΔ[v2859.time];
      }
      v407.fillRect(vV2208, v2212, v2210, v2213);
    }
  }
  function f430(p1364, p1365, p1366, p1367, p1368) {
    if (v2859.transition && p1368 == 1) {
      v407.globalAlpha = 1;
      f302(v407, ⵠΔ[p1364][v2859.time][p1365], p1366, p1367);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      f302(v407, ⵠΔ[p1364][v2859.time][p1365], p1366, p1367);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      v407.globalAlpha = p1368;
      f302(v407, ⵠΔ[p1364][v2859.time][p1365], p1366, p1367);
      v407.globalAlpha = 1;
    }
  }
  function f431(p1369, p1370, p1371, p1372, p1373, p1374) {
    var v2216 = p1372.w1;
    var v2217 = p1372.w2;
    var v2218 = p1372.w3;
    var v2219 = v2860.Δⵠⵠ.x + p1369 - 700;
    var v2220 = Math.max(v2860.Δⵠⵠ.y + p1370, 0);
    var v2221 = Math.max(-v2860.Δⵠⵠ.y + v410 - p1371 - 100, 0);
    var vV2220 = v2220;
    var v2222 = v410 - v2220 - v2221;
    if (p1374) {
      var v2223 = p1372.ⵠⲆΔ(v2216).x;
    } else {
      v2223 = v2216.r.x;
    }
    var v2224 = v2219 + 0;
    0;
    v2224 += v2223 + 0 - 2;
    if (p1374) {
      v2223 = p1372.ⵠⲆΔ(v2217).x;
    } else {
      v2223 = v2217.r.x;
    }
    var v2225 = v2219 + 250 - v2224 + v2223;
    var v2226 = (v2224 += v2225 - 2) - 2;
    if (p1374) {
      v2223 = p1372.ⵠⲆΔ(v2218).x;
    } else {
      v2223 = v2218.r.x;
    }
    if (v2224 + (v2225 = v2219 + 350 - v2224 + v2223) - 3 > v2226) {
      v2224 += v2225 - 2;
    } else {
      v2224 = v2226;
    }
    v2225 = v2219 + 700 - v2224;
    if (p1374 > 0 && p1373.ΔⲆⲆⲆⲆΔᐃ === 1) {
      if (v2859.transition) {
        var v2227 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(15, 77, 72, 252, 239, 187, v2227);
      } else {
        v407.fillStyle = v594.Δᐃⵠᐃⵠᐃⵠ[v2859.time];
      }
      v407.fillRect(v2224, vV2220, v2225, v2222);
    } else {
      if (v2859.transition) {
        v2227 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
        v407.fillStyle = f417(p1373.ΔᐃⲆ[0], p1373.ΔᐃⲆ[1], p1373.ΔᐃⲆ[2], p1373.ⵠᐃⵠ[0], p1373.ⵠᐃⵠ[1], p1373.ⵠᐃⵠ[2], v2227);
      } else {
        v407.fillStyle = p1373.ⵠⲆΔΔΔ[v2859.time];
      }
      v407.fillRect(v2224, vV2220, v2225, v2222);
    }
  }
  function f432(p1375, p1376, p1377, p1378) {
    var v2228 = p1376.width;
    var v2229 = p1376.height;
    var v2230 = Math.floor(v2228 / 2);
    var v2231 = Math.floor(v2229 / 2);
    if (v2859.transition) {
      v407.globalAlpha = 1;
      f302(v407, ⵠΔ[p1375][v2859.time], 0, 0, v2228, v2229, p1377, p1378, v2230, v2231);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      f302(v407, ⵠΔ[p1375][v2859.time], 0, 0, v2228, v2229, p1377, p1378, v2230, v2231);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      f302(v407, p1376, 0, 0, v2228, v2229, p1377, p1378, v2230, v2231);
    }
  }
  function f433(p1379, p1380) {
    if (v2859.transition) {
      v407.globalAlpha = 1;
      p1379.ᐃⵠᐃΔᐃ(p1380);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
      p1379.ᐃⵠᐃΔᐃ(p1380);
      v2859.time = v2859.time ? 0 : 1;
      v407.globalAlpha = 1;
    } else {
      p1379.ᐃⵠᐃΔᐃ(p1380);
    }
  }
  var v2232 = 0;
  var v2233 = 1;
  var v2234 = 2;
  function f434(p1381, p1382, p1383, p1384) {
    const v2235 = ((26029 + p1381) * 214013 + 2531011) % 4294967296;
    const v2236 = (43590 + p1382) % 65398;
    const v2237 = (17752 + p1383) % 65330;
    const v2238 = (0 << (p1384 & 255)) + (24 << (p1384 >> 16 & 255)) + (8 << (p1384 >> 24 & 255)) + (16 << (p1384 >> 8 & 255));
    return (1 + (34245 + (f513(v2235, v2236) ^ function (p1385, p1386, p1387, p1388) {
      const v2239 = p1385 ^ 25202;
      const v2240 = (8 << (p1386 >> 24 & 255)) + (24 << (p1386 >> 8 & 255)) + (16 << (p1386 & 255)) + (0 << (p1386 >> 16 & 255));
      const v2241 = (0 << (p1387 >> 0 & 255)) + (24 << (p1387 >> 16 & 255)) + (8 << (p1387 >> 8 & 255)) + (16 << (p1387 >> 24 & 255));
      const v2242 = (p1388 | 43455) & ~(p1388 & 43455);
      const vVC = f516(v2239, v2240, v2241, v2242, v2239, v2240);
      f75(v2241, v2242, v2239);
      return ~(vVC & 2811) & 2811 | ~(vVC & 2811) & vVC;
    }(v2237, v2238, v2235, v2236))) * 22695477) % 4294967296;
  }
  function f435(p1389, p1390) {
    var v2243 = p1389.getBoundingClientRect();
    return {
      x: p1390.clientX - v2243.left,
      y: p1390.clientY - v2243.top
    };
  }
  function f436(p1391, p1392, p1393, p1394, p1395) {
    var v2244 = {
      x: p1393,
      y: p1394,
      ᐃΔⲆᐃᐃ: p1393,
      ΔⲆΔᐃΔ: p1394
    };
    return {
      translate: v2244,
      ⲆⵠⲆᐃ: function (p1396) {
        f302(p1396, p1391, v2244.x, v2244.y, p1391.width / 2, p1391.height / 2);
      },
      active: p1392,
      position: p1395
    };
  }
  function f437(p1397, p1398, p1399, p1400, p1401, p1402, p1403, p1404, p1405, p1406, p1407, p1408, p1409, p1410, p1411) {
    if (p1397.length === 0) {
      p1397 = " ";
    }
    if (p1403 === vUndefined) {
      p1403 = 0;
    }
    if (p1404 === vVUndefined6) {
      p1404 = 0;
    }
    if (vVVVUndefined173 === p1405) {
      p1405 = 0;
    }
    if (p1410 === vVVUndefined18) {
      p1410 = 0;
    }
    var v2245 = document.createElement("canvas");
    var v2246 = v2245.getContext("2d");
    v2246.textBaseline = "middle";
    v2246.font = (vVVVUndefined1422 !== p1411 ? p1411 + " " : "") + p1400 + "px " + p1398;
    p1401 = p1401 !== undefined ? Math.min(v2246.measureText(p1397).width, p1401) : v2246.measureText(p1397).width;
    v2245.width = p1401 + p1403;
    v2245.height = p1400 + p1404;
    if (p1402 !== undefined) {
      if (p1407 !== undefined) {
        v2246.globalAlpha = p1407;
      }
      v2246.fillStyle = p1402;
      if (vUndefined !== p1408) {
        ⵠΔᐃΔⲆⲆⵠΔΔ(v2246, p1405 + 2, p1405, p1401 + p1403 - p1405 * 2 - 4, p1400 + p1404 - p1405 * 2, p1408);
        v2246.fill();
      } else {
        v2246.fillRect(p1405, p1405, p1401 + p1403 - p1405 * 2, p1400 + p1404 - p1405 * 2);
      }
      v2246.globalAlpha = 1;
      if (p1405 !== 0) {
        v2246.lineWidth = p1405;
        v2246.strokeStyle = p1406;
        v2246.stroke();
      }
    }
    v2246.textBaseline = "middle";
    v2246.font = (vVVUndefined142 !== p1411 ? p1411 + " " : "") + p1400 + "px " + p1398;
    if (p1409 !== vVVVVUndefined1722) {
      v2246.strokeStyle = p1409;
      v2246.lineWidth = p1410;
      v2246.lineJoin = "miter";
      v2246.miterLimit = 2;
      v2246.strokeText(p1397, Math.floor(p1403 / 2), Math.floor(p1404 / 2) + Math.floor(p1400 / 2), p1401);
    }
    v2246.fillStyle = p1399;
    v2246.fillText(p1397, Math.floor(p1403 / 2), Math.floor(p1404 / 2) + Math.floor(p1400 / 2), p1401);
    v2245.w2 = v2245.width / 2;
    v2245.ⵠⲆᐃᐃⲆ = v2245.height / 2;
    return v2245;
  }
  function f438(p1412, p1413, p1414, p1415, p1416, p1417, p1418, p1419, p1420, p1421, p1422) {
    if (p1420 === vVVVVUndefined173) {
      p1420 = 0;
    }
    if (p1419 === undefined) {
      p1419 = 0;
    }
    if (vVVUndefined163 === p1421) {
      p1421 = 0;
    }
    if (vVVUndefined163 === p1422) {
      p1422 = 1;
    }
    if (p1417 !== 1) {
      p1417 = 0;
    }
    if (p1415) {
      var vP1415 = p1415;
    }
    var v2247;
    var v2248 = {
      width: p1412,
      height: p1413,
      ⵠⵠ: vP1415,
      state: v2232,
      translate: {
        x: p1419,
        y: p1420,
        ᐃΔⲆᐃᐃ: p1419,
        ΔⲆΔᐃΔ: p1420
      },
      ΔΔᐃⵠⲆΔⲆⵠⲆ: p1417,
      ⵠⲆⵠΔ: 0,
      callback: p1418,
      position: p1421,
      active: p1422
    };
    function f439() {
      return v2248.ⵠⵠ[v2248.state];
    }
    function f440(p1423) {
      var v2249 = v2248.translate;
      if (v2248.width === 0 || v2248.height === 0) {
        v2248.width = v2248.ⵠⵠ[0].width;
        v2248.height = v2248.ⵠⵠ[0].height;
      }
      return p1423.x > v2249.x && p1423.x < v2249.x + v2248.width / p1416 && p1423.y > v2249.y && p1423.y < v2249.y + v2248.height / p1416;
    }
    p1417 = function () {
      var v2250 = 0;
      if (v2248.ΔΔᐃⵠⲆΔⲆⵠⲆ === 1) {
        if (v2233 === v2248.state || v2248.state === v2234) {
          v2248.ⵠⲆⵠΔ = (0 + v3091 * 1000) % 1000;
        } else if (0 > 0) {
          v2248.ⵠⲆⵠΔ = 0 > 500 ? 0 + v3091 * 1000 : 0 - v3091 * 1000;
          if (0 < 0 || 0 > 1000) {
            v2248.ⵠⲆⵠΔ = 0;
          }
        }
        v2250 = ⵠⵠΔ.ⲆΔᐃᐃⵠ(500 < 0 ? 2 : 0) * 0.2;
      }
      return v2250;
    };
    if ((p1416 = p1416 === 3 ? 3 : p1416 === 1 ? 2 : 1) === 2) {
      v2247 = function (p1424) {
        var v2251 = 1 + p1417();
        var vF439 = f439();
        var v2252 = v2248.width * v2251 / 2;
        var v2253 = v2248.height * v2251 / 2;
        var v2254 = (v2252 - v2248.width / 2) / 2;
        var v2255 = (v2253 - v2248.height / 2) / 2;
        f302(p1424, vF439, v2248.translate.x - v2254, v2248.translate.y - v2255, v2252, v2253);
      };
    } else if (p1416 === 3) {
      v2247 = function (p1425) {
        var vF4392 = f439();
        var v2256 = v2248.width;
        var v2257 = v2248.height;
        var v2258 = (v2256 - v2248.width) / 2;
        var v2259 = (v2257 - v2248.height) / 2;
        f302(p1425, vF4392, v2248.translate.x - v2258, v2248.translate.y - v2259, v2256, v2257);
      };
      p1416 = 1;
    } else {
      v2247 = function (p1426) {
        f302(p1426, f439(), v2248.translate.x, v2248.translate.y);
      };
    }
    return {
      info: v2248,
      ⵠⲆⵠᐃ: function (p1427, p1428, p1429) {
        if (f440(p1428)) {
          if (p1429 == 1) {
            v2248.state = v2234;
          } else if (p1429 == 2 || p1429 == 0 && v2248.state != v2234) {
            v2248.state = v2233;
          }
          return true;
        } else {
          v2248.state = v2232;
          return false;
        }
      },
      ⲆⵠⲆᐃ: v2247,
      ⲆⲆⲆⲆΔⲆⵠ: f440
    };
  }
  var v2260 = "send";
  var v2261 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("id") === "1" ? 1 : 0;
  var v2262 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("password");
  var v2263 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("debug") || undefined;
  if (vVVUndefined17 !== v2263) {
    v2263 = JSON.parse(vWindow.decodeURIComponent(v2263));
  }
  var v2264 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("server") || undefined;
  var v2265 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("region") || vVVVUndefined172;
  var v2266 = "starve.io";
  var v2267 = "https://" + v2266;
  var v2268 = {
    ⵠⵠᐃᐃⲆⲆΔ: 16,
    ᐃᐃᐃΔΔⲆⲆ: 128,
    ΔⵠΔⵠⲆⲆΔ: 8,
    ⲆⲆᐃΔᐃⵠᐃ: 256,
    ᐃΔᐃⲆⵠⵠΔᐃⵠ: 1,
    ⲆⲆᐃᐃⲆᐃᐃ: 32,
    ⲆΔⵠᐃΔ: 4,
    IDLE: 64,
    ⵠⲆⵠⵠ: 2
  };
  var v2269 = [{
    ᐃⵠⲆⲆⵠ: 1000,
    items: [[2, 204], [1, 208], [8, 201], [1, 236]]
  }, {
    ᐃⵠⲆⲆⵠ: 2000,
    items: [[2, 209], [1, 8], [2, 208], [16, 201], [2, 236]]
  }, {
    ᐃⵠⲆⲆⵠ: 4000,
    items: [[3, 209], [1, 1], [4, 208], [20, 201], [4, 236], [1, 205], [80, 199], [140, 200]]
  }, {
    ᐃⵠⲆⲆⵠ: 8000,
    items: [[1, 47], [4, 209], [1, 3], [6, 208], [30, 201], [6, 236], [1, 205], [150, 199], [200, 200], [60, 202], [2, 218]]
  }, {
    ᐃⵠⲆⲆⵠ: 16000,
    items: [[1, 47], [1, 4], [1, 300], [7, 229], [2, 218], [2, 209], [1, 210], [15, 265], [2, 273], [1, 261], [1, 101], [200, 199], [300, 200]]
  }, {
    ᐃⵠⲆⲆⵠ: 16000,
    items: [[1, 47], [1, 11], [1, 86], [1, 3], [10, 229], [4, 218], [6, 209], [3, 297], [1, 46], [200, 199], [300, 200]]
  }, {
    ᐃⵠⲆⲆⵠ: 16000,
    items: [[1, 47], [1, 156], [1, 63], [3, 297], [1, 0], [1, 3], [7, 229], [2, 218], [4, 209], [150, 199], [200, 200], [1, 260]]
  }, {
    ᐃⵠⲆⲆⵠ: 16000,
    items: [[1, 47], [1, 157], [1, 3], [7, 229], [2, 218], [4, 209], [2, 228], [4, 237], [10, 234], [6, 225], [4, 206], [1, 85], [500, 200]]
  }, {
    ᐃⵠⲆⲆⵠ: 16000,
    items: [[1, 47], [1, 3], [16, 231], [1, 218], [6, 209], [3, 297], [1, 84], [1, 0], [16, 216], [150, 199], [200, 200]]
  }, {
    ᐃⵠⲆⲆⵠ: 20000,
    items: [[1, 47], [1, 3], [1, 229], [1, 218], [3, 209], [3, 297], [1, 35], [1, 5], [1, 15], [2, 271], [50, 199], [100, 200]]
  }];
  const v2270 = [];
  let v2271 = 0;
  const v2272 = 922562;
  const v2273 = 922562 .ⵠⲆⵠΔⲆⵠᐃⲆΔ;
  const v2274 = `const ⵠⲆⵠⲆΔⲆⲆ = (typeof ΔⵠⵠⵠⵠᐃΔⵠⵠ === "${v2273}") ? 1 : 0; return ⵠⲆⵠⲆΔⲆⲆ;`;
  var v2275 = {
    ΔⵠⵠⵠΔⵠᐃⵠⵠ: 3,
    ⵠΔΔⵠⲆⵠᐃⵠᐃ: "[15]",
    ΔΔⵠⵠⵠⵠⵠⲆⵠ: 20,
    ᐃᐃⲆΔⵠΔⵠΔⵠ: 200,
    ⵠⵠᐃᐃⲆⲆΔ: 0.2,
    ᐃⵠⵠᐃΔⲆⲆ: 4,
    ⵠⲆΔⲆⵠⵠΔⵠᐃ: 2000,
    ΔⵠⵠⲆⲆΔΔ: 1,
    ᐃᐃᐃⵠᐃᐃΔ: 600000,
    ΔᐃΔᐃΔᐃΔ: 0,
    ᐃⵠΔⲆᐃᐃⵠᐃⵠ: 3,
    ᐃⲆⵠⵠⵠᐃⵠⵠᐃ: 14,
    ⵠⵠⵠΔΔᐃᐃ: 2,
    ⲆᐃᐃⲆΔⲆΔ: 52,
    ΔΔⵠⲆᐃΔⵠ: 4,
    ᐃΔⵠᐃᐃΔⵠⲆⲆ: 50,
    ⵠᐃⵠΔⵠᐃΔᐃᐃ: 125000,
    ᐃᐃⵠᐃⵠΔⵠⲆⵠ: 5,
    ⲆⵠᐃⵠᐃΔⵠᐃⵠ: 0.58,
    ⲆᐃⲆⲆΔᐃⵠᐃΔ: 60000,
    ᐃⵠΔΔⲆⲆᐃ: 0.2,
    ⲆⲆΔⵠⵠᐃᐃⵠᐃ: 14,
    ΔⵠᐃⲆⵠⲆⵠΔⲆ: 8000,
    ⵠᐃⲆᐃⲆⲆⲆⲆᐃ: 5,
    ⲆᐃⵠΔⲆᐃⵠ: 3
  };
  function f441(p1430, p1431, p1432, p1433, p1434) {
    const v2276 = (0 << (p1430 >> 8 & 255)) + (16 << (p1430 & 255)) + (24 << (p1430 >> 16 & 255)) + (8 << (p1430 >> 24 & 255));
    const v2277 = (51308 + p1431) % 65530;
    const v2278 = ~(p1432 & 47902) & 47902 | ~(p1432 & 47902) & p1432;
    const v2279 = (19712 + p1433) % 65291;
    const v2280 = ~(p1434 & 9230) & (p1434 | 9230);
    const vF63 = f63(v2276, v2277, v2278, v2279, v2280, v2276);
    (function (p1435, p1436, p1437, p1438) {
      const v2281 = ~(p1435 & 57425) & (p1435 | 57425);
      const v2282 = (12345 + (9273 + p1436) * 1103515245) % 2147483648;
      const v2283 = ~(p1437 & 10977) & (p1437 | 10977);
      const vF85 = f85(v2281, v2282, v2283, p1438 ^ 50479);
      const vIC2 = f512(v2281, v2282, v2283);
    })(v2277, v2278, v2279, v2280);
    return vF63 ^ 26021;
  }
  function f442(p1439, p1440, p1441, p1442) {
    vVVUndefined66(v555, p1439, p1440, p1441, p1442);
    v2285 = v557[0];
    v2286 = v557[1];
    v2287 = v557[2];
    v2288 = v557[3];
    v51(v555, v2285, v2286, v2287, v2288);
    const v2284 = (44931 + (f57(v557[0], v557[1], v557[2]) ^ f76(v557[3], v557[0], v557[1], v557[2]))) % 65467;
    var v2285;
    var v2286;
    var v2287;
    var v2288;
    f57(v557[0], v557[1], v557[2]);
    return ~(v2284 & 6805) & (v2284 | 6805);
  }
  var v2289 = {
    ΔⲆᐃ: 480000,
    ⲆⲆⲆⵠⲆⲆⵠ: 10,
    ⲆΔⵠΔⵠⵠⵠ: 16,
    ⲆⵠⲆᐃΔⵠᐃ: 6,
    ⲆᐃΔⵠᐃᐃᐃᐃⵠ: 40,
    ᐃⵠⵠᐃᐃᐃΔ: 60,
    ᐃᐃΔΔⲆ: 1,
    ⵠⵠⲆΔⲆ: 2,
    ᐃⵠⲆΔᐃ: 4,
    ΔⵠⵠΔΔ: 8,
    ᐃⵠΔΔⲆⲆᐃ: 10,
    ⲆΔⵠⲆⲆᐃⲆ: 100,
    ⵠΔⵠΔⲆⲆⵠ: 100,
    ᐃᐃⲆΔⵠⲆΔ: 100,
    ΔᐃᐃΔⵠᐃᐃⵠⲆ: 100,
    ⵠⲆᐃⵠⲆⲆⵠ: 100,
    ⲆΔᐃᐃᐃⵠΔ: 100,
    ⲆᐃⲆⲆⵠΔᐃᐃⵠ: 100,
    ⲆΔᐃᐃᐃⵠΔ: 100,
    ᐃⵠⵠᐃⲆⵠΔ: 100,
    ⲆⵠⲆⲆΔⲆᐃ: 100,
    ΔⲆᐃⵠᐃ: 0,
    ⵠᐃᐃⵠΔⲆⲆ: 1,
    ⵠᐃΔⲆⵠ: 2,
    ΔΔⵠⲆⵠ: 3,
    ⲆΔⲆⲆᐃᐃᐃ: 4,
    Δᐃᐃᐃᐃⵠᐃ: 5,
    ⲆΔΔⵠⵠ: 6,
    ΔⲆΔᐃᐃ: 7,
    ᐃᐃᐃⵠΔⵠⵠΔΔ: {
      frankfurt: "Frankfurt",
      sydney: "Sydney",
      atlanta: "Atlanta",
      losangeles: "Los Angeles",
      osaka: "Osaka"
    },
    ⵠΔⵠⵠΔⵠⵠ: {
      0: "normal",
      2: "zombies",
      3: "vampires",
      4: "forest",
      6: "community",
      7: "experimental"
    },
    ⵠⲆΔⲆⲆⵠⲆ: 0,
    ΔⲆᐃᐃΔⵠⵠ: 0,
    ᐃⵠΔᐃᐃⵠⵠ: 30,
    ⵠⲆⵠⵠⵠⵠⲆᐃΔ: 2,
    ᐃⵠⵠᐃᐃᐃΔ: 60000,
    ⵠΔΔᐃⲆⲆΔⵠᐃ: 0,
    ⵠⲆᐃᐃⲆⵠᐃⲆᐃ: 0,
    ⵠⲆᐃⲆΔᐃΔᐃⲆ: 50,
    ᐃⲆⵠᐃΔΔⲆⵠⲆ: 0,
    ᐃᐃΔᐃⲆⵠⵠⲆΔ: 40,
    ⲆᐃΔⵠΔⲆᐃΔΔ: 39,
    ⵠᐃⵠᐃᐃᐃΔΔᐃ: 830,
    ΔⵠΔⵠᐃⵠΔ: 25,
    ⲆΔⲆⲆΔΔⵠ: 8,
    ᐃⲆΔⵠⵠ: 0,
    ⵠⵠΔΔⲆ: 0,
    ᐃΔⲆⵠⵠⲆⵠ: 200,
    ⵠΔⲆⲆⲆᐃΔ: 0,
    ᐃΔᐃΔⲆ: 250,
    ⵠΔⲆᐃΔΔⲆ: 150,
    ⲆΔᐃᐃᐃᐃⵠ: 0,
    ᐃⵠⵠⵠⲆ: 350,
    ⵠⵠⲆᐃⵠⵠΔ: 100,
    ⲆᐃⵠᐃⵠⲆᐃ: 700,
    ᐃⲆⲆᐃᐃ: 39879
  };
  var v2290 = [];
  for (v768 = 0; v768 < 1000; v768++) {
    v2290[v768] = 0;
  }
  v2290[83] = 1;
  v2290[103] = 1;
  v2290[0] = 1;
  v2290[5] = 1;
  v2290[6] = 1;
  v2290[48] = 1;
  v2290[28] = 1;
  v2290[9] = 1;
  v2290[108] = 1;
  v2290[109] = 1;
  v2290[110] = 1;
  v2290[111] = 1;
  v2290[112] = 1;
  v2290[113] = 1;
  v2290[114] = 1;
  v2290[115] = 1;
  v2290[116] = 1;
  v2290[117] = 1;
  v2290[118] = 1;
  v2290[13] = 1;
  v2290[14] = 1;
  v2290[15] = 1;
  v2290[60] = 1;
  v2290[61] = 1;
  v2290[16] = 1;
  v2290[17] = 1;
  v2290[12] = 1;
  v2290[18] = 1;
  v2290[19] = 1;
  v2290[20] = 1;
  v2290[21] = 1;
  v2290[22] = 1;
  v2290[23] = 1;
  v2290[24] = 1;
  v2290[25] = 1;
  v2290[26] = 1;
  const v2291 = {};
  v2291.get = function (p1443, p1444) {
    if (p1444 !== "ᐃⲆΔΔⲆΔⲆ") {
      const v2292 = Math.floor;
      let v2293 = 0;
      const vF45 = function (p1445) {
        for (let v2294 = 0; v2294 < 4685; v2294++) {
          v2293 += v2294;
        }
        return v2292(p1445);
      };
      Math.floor = vF45;
    }
    return vWindow.Reflect.get(...arguments);
  };
  v2290[27] = 1;
  var v2295 = [{
    time: 2880000
  }, {
    time: 1440000
  }, {
    time: 1920000
  }, {
    time: 1440000
  }, {
    time: 2880000
  }, {
    time: 2400000
  }, {
    time: 2400000
  }, {
    time: 4800000
  }, {
    time: 2880000
  }, {
    time: 3360000
  }, {
    time: 2880000
  }, {
    time: 3840000
  }, {
    time: 3360000
  }];
  v593 = 0;
  var v2296 = {
    ⲆᐃⲆⲆΔ: 0,
    ΔᐃΔᐃⲆ: 1,
    ΔᐃΔΔⵠ: 2,
    ᐃⲆⲆᐃᐃ: 3,
    ΔⵠⲆⵠⲆ: 4,
    ΔⲆⲆΔᐃ: 5,
    ΔΔⲆᐃᐃ: 6,
    ᐃΔᐃΔⵠ: 7,
    ᐃΔᐃⵠⲆ: 8,
    ᐃᐃΔᐃᐃ: 9,
    ΔΔᐃΔⲆ: 10,
    ⵠⲆⵠⲆⵠ: 11,
    ⲆᐃⲆⵠᐃ: 12,
    ᐃⲆᐃΔᐃ: 13,
    ⵠⲆᐃⲆⲆ: 14,
    ΔΔⵠⵠⲆ: 15,
    ΔⵠⲆⲆᐃ: 16,
    ᐃⲆⲆⲆⲆ: 17,
    ΔΔⲆᐃⵠ: 18,
    ⵠΔⲆⲆᐃ: 19,
    ᐃᐃᐃᐃΔ: 20,
    ⲆⵠⵠⲆΔ: 21,
    ᐃⵠⵠⲆᐃ: 22,
    ⲆΔⵠⲆΔ: 23,
    ⵠΔⵠΔⵠ: 24,
    ΔΔⲆⵠⵠ: 25,
    ⲆΔΔΔᐃ: 26,
    ᐃⵠⲆⵠᐃ: 27,
    ᐃᐃⵠΔⵠ: 28,
    ΔΔⲆᐃΔ: 29,
    ⵠⵠⲆⵠᐃ: 30,
    ᐃⲆΔΔⵠ: 31,
    ⵠᐃⵠⵠⲆ: 32,
    ⵠⲆⲆᐃΔ: 33,
    ⵠⵠⲆⲆⵠ: 34,
    ⵠᐃΔᐃΔ: 35,
    ⲆᐃΔⵠⲆ: 36,
    ΔⲆᐃᐃⵠ: 37,
    ΔⵠᐃᐃⲆ: 38,
    ⵠᐃΔΔⵠ: 39,
    ΔⲆⵠᐃⲆ: 40,
    Ⲇᐃᐃⵠᐃ: 41,
    ⵠⵠΔⲆⲆ: 42,
    ⵠΔⲆⵠΔ: 43,
    ⵠᐃⵠΔⵠ: 44,
    ΔⵠᐃΔⵠ: 45,
    ⲆⲆΔΔⲆ: 46,
    ᐃΔΔΔⵠ: 47,
    ᐃΔⵠⵠⲆ: 48,
    ⵠⲆⵠΔᐃ: 49,
    ᐃⲆⲆΔΔ: 50,
    ⲆᐃⵠΔᐃ: 51,
    ΔᐃΔⲆⲆ: 52,
    ⵠⵠⵠᐃᐃ: 53,
    ᐃⵠᐃⲆⵠ: 54,
    ᐃᐃⵠᐃᐃ: 55,
    ᐃΔΔᐃΔ: 56,
    ⲆⲆΔΔⵠ: 57,
    ⲆⵠᐃⲆⲆ: 58,
    ᐃⵠΔⲆⵠ: 59,
    ΔᐃᐃⲆⵠ: 60,
    ᐃᐃⵠⵠⵠ: 61,
    ⲆⵠⲆⲆⵠ: 62,
    ᐃΔΔΔⲆ: 63,
    ᐃⲆΔΔΔ: 64,
    ⲆΔⵠΔⲆ: 65,
    ⵠⲆΔⵠⲆ: 66,
    Δⵠⵠᐃⵠ: 67,
    ΔΔᐃΔⵠ: 68,
    ⲆⲆⵠⲆΔ: 69,
    ⵠΔⵠⲆⵠ: 70,
    ⲆᐃⵠΔⵠ: 71,
    ᐃᐃᐃⲆⲆ: 72,
    ΔⲆᐃⲆⵠ: 73,
    ⵠᐃᐃΔⲆ: 74,
    ⵠᐃᐃⲆᐃ: 75,
    ⲆᐃⲆⲆⲆ: 76,
    ΔΔᐃᐃΔ: 77,
    ⲆᐃᐃⲆⲆ: 78,
    ᐃΔⵠᐃⵠ: 79,
    ᐃᐃᐃᐃⲆ: 80,
    ΔΔΔⵠᐃ: 81,
    ⲆⵠⲆΔⲆ: 82,
    ΔⲆⲆⲆΔΔΔ: 83,
    ΔᐃⲆΔⲆ: 84,
    ΔΔⲆΔⲆ: 85,
    ΔΔᐃⲆⵠ: 86,
    ⵠΔⲆⵠᐃ: 87,
    ⲆΔⵠⲆⵠ: 88,
    ΔⲆⵠⲆⲆ: 89,
    ⵠᐃᐃΔᐃ: 90,
    ⲆΔΔᐃᐃᐃⲆ: 91,
    ⵠⲆⲆⵠᐃ: 92,
    ⲆΔᐃΔⲆᐃⲆ: 93,
    ΔⲆᐃⵠᐃΔΔ: 94,
    ᐃⲆⲆᐃΔᐃᐃ: 95,
    ⵠΔΔⲆΔⲆⲆ: 96,
    ⵠᐃⲆⵠΔᐃⲆ: 97,
    ΔⲆⵠΔⵠ: 98,
    ΔⲆΔΔⵠ: 99,
    ⲆⲆⵠᐃᐃ: 100,
    ⲆⵠⲆᐃⲆⵠᐃ: 101,
    ⲆⵠΔᐃⵠ: 102,
    ⵠⲆᐃⵠΔ: 103,
    ᐃΔΔⵠΔ: 104,
    ΔⲆᐃⲆᐃ: 105,
    ᐃᐃᐃⵠᐃΔⲆ: 106
  };
  var v2297 = [[24, 199], [25, 202], [26, 203], [27, 212], [28, 304], [29, 344], [30, 306], [31, 307], [32, 308], [33, 309], [34, 310], [35, 311], [36, 312], [37, 313]];
  function f443(p1446, p1447, p1448, p1449, p1450, p1451, p1452, p1453, p1454, p1455, p1456) {
    this.type = p1446;
    this.ΔⲆⲆᐃ = p1447;
    this.id = p1448;
    this.x = p1449;
    this.y = p1450;
    this.angle = p1451;
    this.ⲆᐃⲆΔⲆᐃΔ = p1451;
    this.action = p1452;
    this.info = p1453;
    this.ᐃᐃⲆⲆᐃΔⲆ = p1456;
    this.ⵠⵠΔᐃᐃ = p1455;
    this.r = {
      x: p1449,
      y: p1450
    };
    this.ⲆᐃᐃΔⵠ = p1454;
    if (v2859) {
      this.ᐃᐃⲆⵠ = p1447 * v2859.ΔⵠⲆᐃⵠⲆⵠ + p1448;
    }
    switch (p1446) {
      case 0:
        this.ⲆⵠⲆΔ = v2859.ⵠⲆⵠⲆ[this.ΔⲆⲆᐃ];
        this.ⵠⲆⲆΔ = this.ⲆⵠⲆΔ.ⵠⲆⲆΔ;
        this.ⵠⲆΔΔᐃᐃᐃ = this.ⲆⵠⲆΔ.ⵠⲆΔΔᐃᐃᐃ;
        this.ᐃᐃᐃⵠⲆ = this.ⲆⵠⲆΔ.ᐃᐃᐃⵠⲆ;
        this.ᐃⲆΔΔⲆ = this.ⲆⵠⲆΔ.ᐃⲆΔΔⲆ;
        this.ᐃⵠⵠΔᐃⵠⲆ = -1000000;
        this.ΔΔᐃⵠⵠᐃΔ = -1000000;
        this.ⲆⵠⵠᐃⲆ = -1000000;
        this.ⲆⵠΔⲆΔ = -1000000;
        this.ⵠᐃᐃᐃΔ = -1000000;
        this.ⵠᐃⵠΔᐃᐃᐃ = -1000000;
        this.ⲆⲆⲆⵠΔⲆⵠ = -1000000;
        this.ΔᐃΔⲆᐃ = -1000000;
        this.ⵠⲆᐃᐃΔ = v2859.mode === 2 && this.ⵠⲆⲆΔ === 0 && vVVV12222;
        this.ⵠΔⲆΔⲆᐃⵠ = v2859.mode === 3 && this.ⵠⲆⲆΔ === 0 ? vV123 : vVVV16222;
        this.ᐃⲆΔᐃⲆⵠⲆ = !!this.ⵠⲆᐃᐃΔ && this.ⲆⵠⲆΔ.ᐃΔⵠⵠΔ === "  " || vV16;
        this.ᐃⵠΔΔⵠ = [];
        this.ⲆⲆⲆⲆⲆΔⲆ = 0;
        this.ⵠⲆΔᐃ = true;
        this.ΔⲆΔΔⲆⵠⲆ = 0;
        this.ⵠΔⵠᐃⲆΔⵠ = 0;
        this.ΔⵠⵠΔⵠ = [];
        this.r = {
          x: p1449,
          y: p1450
        };
        this.ⲆⵠⲆᐃ = f407;
        this.ⲆΔΔᐃΔᐃⵠ = f402;
        this.ΔᐃⲆⲆ = 0;
        this.ⵠⲆᐃᐃᐃ = 0;
        this.ⲆⵠΔᐃᐃ = 0;
        this.ⲆⵠΔⵠⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1623, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃⵠⵠⲆ = 0;
        this.ⲆΔΔⵠΔΔᐃ = 0;
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        this.ᐃⵠΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16, 0.6, 0.6, 0, 5, 3);
        this.freeze = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        this.ᐃΔᐃᐃⵠⵠⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 0.6, 0.6, 0, 5, 3);
        this.ᐃᐃⲆᐃᐃᐃⲆ = new ⵠⵠΔ.ΔⲆⵠⲆ(true, 0, 2.25, -1.5, 3.75, 7.5);
        this.Ⲇᐃᐃᐃᐃᐃⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(true, 0, 7.5, -3, 22.5, 33.75);
        this.attack = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 0, 0, -Math.PI / 3, 6, 9);
        this.ΔⵠⵠΔⵠⵠΔⲆᐃ = 0;
        this.ΔᐃᐃⲆᐃⲆᐃ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 0.6, 0.6, 0, 1, 3);
        this.ⵠⵠⲆΔᐃᐃⵠ = this.ᐃⲆΔᐃⲆⵠⲆ ? new ⵠⵠΔ.ΔⲆⵠⲆ(vV122, 0, 2.25, -1.5, 2.75, 5.5) : 0;
        this.ΔᐃᐃⲆⲆⵠᐃ = 0;
        this.ⵠⵠΔⲆⵠⵠⵠ = 0;
        this.ᐃᐃⵠⵠᐃΔⵠ = [];
        this.ⵠᐃⵠⵠᐃⵠᐃ = [];
        this.text = [];
        this.label = [];
        this.ⲆⵠᐃⵠⵠⲆⲆ = f403;
        this.ᐃΔᐃᐃⵠ = true;
        this.right = -1;
        this.ⵠⵠⵠⵠ = -1;
        this.action = 64;
        this.ᐃⵠᐃΔⲆⲆᐃ = vV16;
        this.ΔΔⵠⲆΔ = 0;
        this.ᐃΔΔᐃᐃ = false;
        this.bubbles = [];
        this.ⵠᐃⲆⵠᐃ = 0;
        this.ΔΔΔΔⲆ = -1;
        this.ⵠΔᐃ = function (p1457) {
          if (this.info & 32768) {
            this.ᐃⵠᐃΔⲆⲆᐃ = vVVV1222;
            this.info = this.info & -32769;
          } else {
            this.ᐃⵠᐃΔⲆⲆᐃ = vVV1623;
          }
          if (this.info & 16384) {
            this.info = this.info & -16385;
            this.ⵠᐃⲆⵠᐃ = 1;
          } else {
            this.ⵠᐃⲆⵠᐃ = 0;
          }
          this.ΔΔⵠⲆΔ = this.ᐃᐃⲆⲆᐃΔⲆ;
          if (this.info === 7 || this.ᐃⲆΔᐃⲆⵠⲆ) {
            this.right = -1;
          } else {
            this.right = this.info;
          }
          this.ⲆⲆⲆⲆⲆΔⲆ = v2859.ᐃⵠⲆᐃΔᐃⵠᐃⲆ(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));
          this.ⵠⵠⵠⵠ = this.ⵠⵠΔᐃᐃ & 65535;
          if (this.right === 2) {
            this.ᐃΔΔᐃᐃ = true;
          } else {
            this.ᐃΔΔᐃᐃ = vVV1623;
          }
          if (v2290[this.right]) {
            this.ⵠΔⵠⲆΔ = true;
          } else {
            this.ⵠΔⵠⲆΔ = vVVV1623;
          }
          if (p1457 & 256) {
            this.ΔᐃᐃⲆᐃⲆᐃ.ⵠⵠⲆ = false;
            this.ΔᐃᐃⲆᐃⲆᐃ.ΔⲆⵠ = 0.6;
          } else if (p1457 & 4) {
            this.freeze.ⵠⵠⲆ = vVVVVV1623;
            this.freeze.ΔⲆⵠ = 0.6;
          } else if (p1457 & 128) {
            this.ᐃⵠΔⵠΔ.ⵠⵠⲆ = false;
            this.ᐃⵠΔⵠΔ.ΔⲆⵠ = 0.6;
          }
          if (p1457 & 8) {
            this.ᐃΔᐃᐃⵠⵠⵠ.ⵠⵠⲆ = false;
            this.ᐃΔᐃᐃⵠⵠⵠ.ΔⲆⵠ = 0.6;
          }
          if (p1457 & 2) {
            this.ᐃᐃΔ.ⵠⵠⲆ = vVV16;
            this.ᐃᐃΔ.ΔⲆⵠ = 0.6;
          }
          if (p1457 & 16) {
            this.ΔⵠⵠΔⵠⵠΔⲆᐃ = 0.58;
            if (v3058.ⲆⵠⵠᐃΔ && this.ΔΔΔΔⲆ !== -1) {
              v3058.ⵠⲆⵠⲆ[this.ΔΔΔΔⲆ].ⲆᐃΔᐃⲆΔⲆⲆΔ(v2821[this.right]);
            }
          }
        };
        this.ⵠΔᐃ();
        break;
      case 23:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV16, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⵠⲆⲆᐃΔⲆΔ = f359;
        this.ᐃⵠᐃΔᐃ = f361;
        this.ΔᐃⵠⲆΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ⵠⲆⵠⲆⵠⵠᐃ = 0;
        this.ⵠⵠΔᐃⲆⲆⵠ = 0;
        this.ⲆᐃⵠᐃΔ = f336;
        break;
      case 22:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vV162,
          angle: 0
        };
        this.ⵠⲆⲆᐃΔⲆΔ = f348;
        this.ᐃⵠᐃΔᐃ = f369;
        this.ΔᐃⵠⲆΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVV1623, 1, 1.23, 1.18, 0.01, 0.01);
        this.ⵠⲆⵠⲆⵠⵠᐃ = 0;
        this.ⵠⵠΔᐃⲆⲆⵠ = 0;
        break;
      case 1:
      case 6:
        this.ⵠⲆⲆᐃΔⲆΔ = f364;
        this.ᐃⵠᐃΔᐃ = f388;
        this.ⵠⲆⲆΔΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV162, 1, 1.03, 0.98, 0.3, 0.3);
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 1, 1.23, 1.18, 0.01, 0.01);
        this.ΔᐃⵠⲆΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1622, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV16,
          angle: 0
        };
        break;
      case 52:
        this.ⵠⲆⲆᐃΔⲆΔ = f386;
        this.ᐃⵠᐃΔᐃ = f355;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ᐃⲆᐃⲆ = [];
        for (var v2298 = 0; v2298 < 3; v2298++) {
          this.ᐃⲆᐃⲆ.push({
            ⲆⵠⲆᐃ: f342,
            ⵠⲆⵠΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ᐃⲆᐃⲆ[0].x = this.x - 16.5;
        this.ᐃⲆᐃⲆ[0].y = this.y - 15.5;
        this.ᐃⲆᐃⲆ[0].angle = this.angle;
        this.ᐃⲆᐃⲆ[1].x = this.x + 36;
        this.ᐃⲆᐃⲆ[1].y = this.y + 17;
        this.ᐃⲆᐃⲆ[1].angle = this.angle;
        this.ᐃⲆᐃⲆ[2].x = this.x - 18.5;
        this.ᐃⲆᐃⲆ[2].y = this.y + 39;
        this.ᐃⲆᐃⲆ[2].angle = this.angle;
        break;
      case 3:
        this.ⵠⲆⲆᐃΔⲆΔ = f352;
        this.ᐃⵠᐃΔᐃ = f385;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV162, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ᐃⲆᐃⲆ = [];
        for (v2298 = 0; v2298 < 3; v2298++) {
          this.ᐃⲆᐃⲆ.push({
            ⲆⵠⲆᐃ: f374,
            ⵠⲆⵠΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ᐃⲆᐃⲆ[0].x = this.x - 16.5;
        this.ᐃⲆᐃⲆ[0].y = this.y - 15.5;
        this.ᐃⲆᐃⲆ[1].x = this.x - 5.5;
        this.ᐃⲆᐃⲆ[1].y = this.y + 7.5;
        this.ᐃⲆᐃⲆ[2].x = this.x + 18;
        this.ᐃⲆᐃⲆ[2].y = this.y - 5;
        break;
      case 84:
        this.ⲆⵠⲆᐃ = f380;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 0.6, 0.6, 0, 5, 3);
        break;
      case 89:
        this.ⲆⵠⲆᐃ = f389;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1623, 0.6, 0.6, 0, 5, 3);
        break;
      case 77:
        this.ⲆⵠⲆᐃ = f337;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 78:
        this.ⲆⵠⲆᐃ = f375;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃⵠΔⵠᐃⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠⲆΔᐃΔΔⲆ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 0.6, 0.6, 0, 5, 3);
        this.ᐃⵠΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 74:
        this.ⲆⵠⲆᐃ = f368;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃⵠΔⵠᐃⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠⲆΔᐃΔΔⲆ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16, 0.6, 0.6, 0, 5, 3);
        this.ᐃⵠΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 0.6, 0.6, 0, 5, 3);
        break;
      case 90:
      case 75:
        this.ⲆⵠⲆᐃ = f397;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 0.6, 0.6, 0, 5, 3);
        break;
      case 102:
        this.ⲆⵠⲆᐃ = f394;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.5, 0.5);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.6, 0.6, 0, 5, 3);
        break;
      case 103:
        this.ΔᐃΔΔΔᐃΔ = this.ᐃᐃⲆⲆᐃΔⲆ;
        this.ⵠΔⵠᐃⲆΔⵠ = this.ⵠⵠΔᐃᐃ & 1;
        this.ⵠᐃⵠΔᐃⵠⵠ = 0;
        this.x = this.info;
        this.y = this.ⵠⵠΔᐃᐃ;
        this.ⲆⵠⲆᐃ = f383;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV164, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.6, 0.6);
        break;
      case 92:
      case 67:
      case 68:
      case 69:
      case 70:
      case 85:
      case 72:
      case 73:
      case 100:
      case 87:
      case 88:
        this.ⲆⵠⲆᐃ = f394;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 45:
        this.ⲆⵠⲆᐃ = f390;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV16,
          angle: 0
        };
        break;
      case 43:
        this.ᐃⵠᐃΔᐃ = f356;
        this.ⲆⵠⲆᐃ = f396;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV162,
          angle: 0
        };
        this.up = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1.03, 0.98, 0.1, 0.1);
        this.ⲆΔᐃΔⲆ = [];
        break;
      case 99:
        this.angle = Math.random() * Math.PI / 2;
      case 98:
      case 94:
        this.ⲆⵠⲆᐃ = f382;
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 93:
        this.ⲆⵠⲆᐃ = f391;
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 76:
        this.scale = 1;
        this.ⲆⵠⲆᐃ = f366;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 0.6, 0.6, 0, 5, 3);
        break;
      case 83:
        this.ᐃⲆΔⲆΔ = 0;
        this.ΔΔⵠΔ = [];
        this.ⲆⵠⲆⵠᐃⲆⲆ = 0;
        this.ΔᐃΔⵠᐃⵠΔ = f363;
        this.ⲆⵠⲆᐃ = f376;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 82:
        this.x = this.info;
        this.y = this.ⵠⵠΔᐃᐃ;
        this.scale = 1;
        this.ΔⵠⲆᐃ = 0;
        this.ⲆⵠⲆᐃ = f371;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 81:
        this.x = this.info;
        this.y = this.ⵠⵠΔᐃᐃ;
        this.scale = 1;
        this.ΔⵠⲆᐃ = 0;
        this.ⲆⵠⲆᐃ = f365;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 0.6, 0.6, 0, 5, 3);
        break;
      case 86:
        this.x = this.info;
        this.y = this.ⵠⵠΔᐃᐃ;
        this.scale = 1;
        this.ΔⵠⲆᐃ = 0;
        this.ⲆⵠⲆᐃ = f350;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 0.6, 0.6, 0, 5, 3);
        break;
      case 80:
        this.scale = 1;
        this.ⲆⵠⲆᐃ = f367;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 79:
        this.scale = 1;
        this.ⲆⵠⲆᐃ = f346;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 71:
        this.scale = 1;
        this.ⲆⵠⲆᐃ = f353;
        this.ⵠⲆⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃᐃΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 0.6, 0.6, 0, 5, 3);
        break;
      case 104:
        this.ᐃⲆᐃⲆ = [];
        for (v2298 = 0; v2298 < 5; v2298++) {
          this.ᐃⲆᐃⲆ.push({
            ⲆⵠⲆᐃ: f374,
            ⵠⲆⵠΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ᐃⲆᐃⲆ[0].x = this.x - 20.5;
        this.ᐃⲆᐃⲆ[0].y = this.y - 22.5;
        this.ᐃⲆᐃⲆ[0].angle = -0.1 + Math.PI;
        this.ᐃⲆᐃⲆ[1].x = this.x - 35.5;
        this.ᐃⲆᐃⲆ[1].y = this.y + 7.5;
        this.ᐃⲆᐃⲆ[1].angle = 0.1 + Math.PI;
        this.ᐃⲆᐃⲆ[2].x = this.x + 7.5;
        this.ᐃⲆᐃⲆ[2].y = this.y - 30;
        this.ᐃⲆᐃⲆ[2].angle = -0.2 + Math.PI;
        this.ᐃⲆᐃⲆ[3].x = this.x + 22.5;
        this.ᐃⲆᐃⲆ[3].y = this.y;
        this.ᐃⲆᐃⲆ[3].angle = -0.2 + Math.PI;
        this.ᐃⲆᐃⲆ[4].x = this.x - 7.5;
        this.ᐃⲆᐃⲆ[4].y = this.y + 14.5;
        this.ᐃⲆᐃⲆ[4].angle = 0.15 + Math.PI;
        break;
      case 105:
      case 106:
        this.ᐃⲆᐃⲆ = [];
        for (v2298 = 0; v2298 < 5; v2298++) {
          this.ᐃⲆᐃⲆ.push({
            ⲆⵠⲆᐃ: f374,
            ⵠⲆⵠΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        switch (this.id % 3) {
          case 0:
            this.ᐃⲆᐃⲆ[0].x = this.x - 20.5;
            this.ᐃⲆᐃⲆ[0].y = this.y - 22.5;
            this.ᐃⲆᐃⲆ[1].x = this.x - 35.5;
            this.ᐃⲆᐃⲆ[1].y = this.y + 7.5;
            this.ᐃⲆᐃⲆ[2].x = this.x + 7.5;
            this.ᐃⲆᐃⲆ[2].y = this.y - 30;
            this.ᐃⲆᐃⲆ[3].x = this.x + 22.5;
            this.ᐃⲆᐃⲆ[3].y = this.y;
            this.ᐃⲆᐃⲆ[4].x = this.x - 7.5;
            this.ᐃⲆᐃⲆ[4].y = this.y + 14.5;
            break;
          case 1:
            this.ᐃⲆᐃⲆ[0].x = this.x - 30.5;
            this.ᐃⲆᐃⲆ[0].y = this.y - 22.5;
            this.ᐃⲆᐃⲆ[1].x = this.x - 15.5;
            this.ᐃⲆᐃⲆ[1].y = this.y + 7.5;
            this.ᐃⲆᐃⲆ[2].x = this.x + 15.5;
            this.ᐃⲆᐃⲆ[2].y = this.y - 30;
            this.ᐃⲆᐃⲆ[3].x = this.x + 12.5;
            this.ᐃⲆᐃⲆ[3].y = this.y + 5;
            this.ᐃⲆᐃⲆ[4].x = this.x - 40.5;
            this.ᐃⲆᐃⲆ[4].y = this.y + 14.5;
            break;
          case 2:
            this.ᐃⲆᐃⲆ[0].x = this.x - 20.5;
            this.ᐃⲆᐃⲆ[0].y = this.y - 20.5;
            this.ᐃⲆᐃⲆ[1].x = this.x - 35.5;
            this.ᐃⲆᐃⲆ[1].y = this.y + 15.5;
            this.ᐃⲆᐃⲆ[2].x = this.x + 7.5;
            this.ᐃⲆᐃⲆ[2].y = this.y - 17;
            this.ᐃⲆᐃⲆ[3].x = this.x + 22.5;
            this.ᐃⲆᐃⲆ[3].y = this.y + 5;
            this.ᐃⲆᐃⲆ[4].x = this.x - 7.5;
            this.ᐃⲆᐃⲆ[4].y = this.y + 1.5;
        }
        break;
      case 40:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f344;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ⵠⲆΔΔⲆᐃⵠ = new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);
        break;
      case 49:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV16,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f379;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 48:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16222, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV163,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f398;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 53:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f357;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 64:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16223, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f377;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 63:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f399;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 66:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV16,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f339;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 46:
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆⵠⲆᐃ = f400;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV164, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 24:
        this.ⲆⵠⲆᐃ = f358;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV1622,
          angle: 0
        };
        break;
      case 25:
        this.ⲆⵠⲆᐃ = f360;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 26:
        this.ⲆⵠⲆᐃ = f381;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 27:
        this.ⲆⵠⲆᐃ = f343;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 28:
        this.ⲆⵠⲆᐃ = f362;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV164, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVVVV1623,
          angle: 0
        };
        break;
      case 29:
        this.ⲆⵠⲆᐃ = f373;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVVVV1623,
          angle: 0
        };
        break;
      case 30:
        this.ⲆⵠⲆᐃ = f345;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 31:
        this.ⲆⵠⲆᐃ = f338;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 32:
        this.ⲆⵠⲆᐃ = f384;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV163,
          angle: 0
        };
        break;
      case 33:
        this.ⲆⵠⲆᐃ = f341;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 34:
        this.ⲆⵠⲆᐃ = f340;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 35:
        this.ⲆⵠⲆᐃ = f392;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16223, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 36:
        this.ⲆⵠⲆᐃ = f395;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1622, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV162,
          angle: 0
        };
        break;
      case 37:
        this.ⲆⵠⲆᐃ = f351;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV16222,
          angle: 0
        };
        break;
      case 41:
        this.ⵠⲆⲆᐃΔⲆΔ = f354;
        this.ᐃⵠᐃΔᐃ = f393;
        this.rotate = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV165,
          angle: 0
        };
        break;
      case 47:
        this.ⲆⵠⲆᐃ = f329;
        this.ᐃᐃΔⲆ = Math.floor(this.x / 100);
        this.ⲆΔ = Math.floor(this.y / 100);
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1623, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV162,
          angle: 0
        };
        this.opacity = 1;
        this.ⲆᐃⵠᐃΔ = f333;
        break;
      case 51:
        this.ⲆⵠⲆᐃ = f322;
        this.ΔᐃⵠⲆΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 1, 1.15, 1, 0.3, 0.3);
        this.color = 0;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        break;
      case 42:
      case 2:
      case 65:
      case 44:
      case 38:
        this.ⲆⵠⲆᐃ = f334;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVVV1622,
          angle: 0
        };
        break;
      case 39:
        this.ⲆⵠⲆᐃ = f334;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV16, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆᐃⵠᐃΔ = f333;
        break;
      case 4:
      case 7:
      case 8:
      case 9:
      case 19:
      case 59:
      case 5:
      case 12:
      case 13:
      case 14:
      case 20:
      case 61:
        this.ⲆⵠⲆᐃ = f334;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        this.ⲆᐃⵠᐃΔ = f336;
        break;
      case 50:
        this.ⲆⵠⲆᐃ = f315;
        this.opacity = 1;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 1, 1, 0, 10, 10),
          ⵠΔᐃ: false,
          angle: 0
        };
        var v2299 = this.angle % (Math.PI / 2);
        if (Math.PI / 4 > v2299) {
          this.angle -= v2299;
        } else {
          this.angle += Math.PI / 2 - v2299;
        }
        break;
      case 91:
        this.ⲆⵠⲆᐃ = f325;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 101:
        this.ⲆⵠⲆᐃ = f335;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 95:
        this.ⲆⵠⲆᐃ = f331;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 96:
        this.ⲆⵠⲆᐃ = f316;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 97:
        this.ⲆⵠⲆᐃ = f320;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 11:
        this.ⵠΔᐃ = function (p1458) {
          this.lock = this.info & 8192 ? 1 : 0;
          this.info = this.info & 8191;
          this.action = p1458;
        };
        this.ⲆⵠⲆᐃ = f327;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV165,
          angle: 0
        };
        this.lock = 0;
        this.ⵠΔᐃ(this.action);
        break;
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 62:
      case 10:
      case 15:
      case 16:
      case 17:
      case 21:
      case 60:
        this.ⲆⵠⲆᐃ = f326;
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV164,
          angle: 0
        };
        this.ⲆᐃⵠᐃΔ = f336;
        break;
      case 18:
        this.ⵠⲆⲆᐃΔⲆΔ = f378;
        this.ⲆⵠⲆᐃ = f370;
        this.ᐃⵠᐃΔᐃ = f387;
        this.ΔΔⵠΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1.23, 1.18, 0.02, 0.02);
        this.ΔᐃⵠⲆΔ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 1, 1.23, 1.18, 0.04, 0.04);
        this.ᐃᐃΔ = {
          ᐃⵠᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV164, 1, 1, 0, 10, 10),
          ⵠΔᐃ: vVV163,
          angle: 0
        };
        this.ⵠΔᐃ = function (p1459) {
          this.action = p1459;
        };
    }
  }
  function f444(p1460, p1461, p1462, p1463, p1464) {
    const v2300 = p1460 ^ 6216;
    const v2301 = p1461 ^ 34832;
    const v2302 = (p1462 | 27510) & ~(p1462 & 27510);
    const v2303 = (0 << (p1463 >> 16 & 255)) + (8 << (p1463 >> 8 & 255)) + (16 << (p1463 >> 24 & 255)) + (24 << (p1463 & 255));
    const v2304 = ~(p1464 & 59267) & p1464 | ~(p1464 & 59267) & 59267;
    return ((50296 + (f8(v2300, v2301, 0, v2303, v2304) ^ f8(v2301, v2302, 0, v2304, v2300))) * 1103515245 + 12345) % 2147483648;
  }
  function f445(p1465) {
    if (p1465 > 0) {
      return p1465 * p1465;
    } else {
      return p1465;
    }
  }
  function f446(p1466) {
    return vWindow.String.fromCharCode(p1466);
  }
  function f447(p1467) {
    this.ΔⲆΔⵠΔᐃⲆ = 62;
    this.ⵠᐃΔⲆᐃⲆⲆ = 31;
    this.ΔⲆΔⵠΔᐃⲆ;
    this.ⵠᐃΔⲆᐃⲆⲆ;
    this.mode = 0;
    this.ΔⵠⲆᐃⵠⲆⵠ = p1467;
    this.ᐃⲆⲆΔᐃ = 0;
    this.ⲆⲆᐃΔΔΔⵠ = 6;
    var v2305 = 130;
    if (v2305 == 1) {
      v2305 = 55;
    }
    this.ⵠⲆⵠⲆ = [];
    this.ⲆⵠΔ = [];
    this.ⲆⵠΔ[0] = [];
    this.ⲆΔⵠΔⵠΔⲆ = 4698;
    this.ⲆⵠΔ[105] = [];
    this.ⲆⵠΔ[106] = [];
    this.ⲆⵠΔ[104] = [];
    this.ⲆⵠΔ[92] = [];
    this.ⲆⵠΔ[67] = [];
    this.ⲆⵠΔ[74] = [];
    this.ⲆⵠΔ[77] = [];
    this.ⲆⵠΔ[84] = [];
    this.ⲆⵠΔ[78] = [];
    this.ⲆⵠΔ[79] = [];
    this.ⲆⵠΔ[80] = [];
    this.ⲆⵠΔ[81] = [];
    this.ⲆⵠΔ[86] = [];
    this.ⲆⵠΔ[88] = [];
    this.ⲆⵠΔ[89] = [];
    this.ⲆⵠΔ[90] = [];
    this.ⲆⵠΔ[87] = [];
    this.ⲆⵠΔ[72] = [];
    this.ⲆⵠΔ[73] = [];
    this.ⲆⵠΔ[69] = [];
    this.ⲆⵠΔ[100] = [];
    this.ⲆⵠΔ[103] = [];
    this.ⲆⵠΔ[102] = [];
    this.ⲆⵠΔ[70] = [];
    this.ⲆⵠΔ[85] = [];
    this.ⲆⵠΔ[71] = [];
    this.ⲆⵠΔ[76] = [];
    this.ⲆⵠΔ[75] = [];
    this.ⲆⵠΔ[91] = [];
    this.ⲆⵠΔ[101] = [];
    this.ⲆⵠΔ[95] = [];
    this.ⲆⵠΔ[96] = [];
    this.ⲆⵠΔ[97] = [];
    this.ⲆⵠΔ[93] = [];
    this.ⲆⵠΔ[94] = [];
    this.ⲆⵠΔ[98] = [];
    this.ⲆⵠΔ[43] = [];
    this.ⲆⵠΔ[45] = [];
    this.ᐃⵠⲆΔᐃⲆΔ = 50;
    this.ⲆⵠΔ[68] = [];
    this.ⲆⵠΔ[2] = [];
    this.ⲆᐃⵠⲆⵠⵠΔ = -30;
    this.ⲆⵠΔ[1] = [];
    this.ⲆⵠΔ[6] = [];
    this.ⲆⵠΔ[3] = [];
    this.ⲆⵠΔ[5] = [];
    this.ⲆⵠΔ[12] = [];
    this.ⲆⵠΔ[13] = [];
    this.ⲆⵠΔ[14] = [];
    this.ⲆⵠΔ[20] = [];
    this.ⲆⵠΔ[61] = [];
    this.ⲆⵠΔ[4] = [];
    this.ⲆⵠΔ[7] = [];
    this.ⲆⵠΔ[8] = [];
    this.ⲆⵠΔ[9] = [];
    this.ⲆⵠΔ[19] = [];
    this.ⲆⵠΔ[59] = [];
    this.ⲆⵠΔ[50] = [];
    this.ⲆⵠΔ[10] = [];
    this.ⲆⵠΔ[15] = [];
    this.ⲆⵠΔ[16] = [];
    this.ⲆⵠΔ[17] = [];
    this.ⲆⵠΔ[21] = [];
    this.ⲆⵠΔ[60] = [];
    this.ⲆⵠΔ[54] = [];
    this.ⲆⵠΔ[55] = [];
    this.ⲆⵠΔ[56] = [];
    this.ⲆⵠΔ[57] = [];
    this.ⲆⵠΔ[58] = [];
    this.ⲆⵠΔ[62] = [];
    this.ⲆⵠΔ[18] = [];
    this.ⲆⵠΔ[38] = [];
    this.ⲆⵠΔ[65] = [];
    this.ⲆⵠΔ[11] = [];
    this.ⲆⵠΔ[22] = [];
    this.ⲆⵠΔ[23] = [];
    this.ⲆⲆⲆΔⵠⲆⵠ = 25;
    this.ⲆⵠΔ[39] = [];
    this.ⲆⵠΔ[47] = [];
    this.ⲆⵠΔ[42] = [];
    this.ⲆⵠΔ[40] = [];
    this.ⲆⵠΔ[64] = [];
    this.ⲆⵠΔ[46] = [];
    this.ⲆⵠΔ[52] = [];
    var v2306 = 26;
    if (v2306 >= 8) {
      v2306 = 96;
    }
    this.ⲆⲆΔᐃᐃⵠᐃ = 209;
    var v2307 = 98;
    function a(p1468, p1469, p1470, p1471, p1472) {
      var v2308 = p1469 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * p1471);
      var v2309 = p1470 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * p1471);
      var v2310 = 10 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * (v2859.ⲆᐃᐃⲆΔ - v2308 - 20));
      var v2311 = 10 + Math.floor((v2859.ⵠΔᐃΔⲆ - v2309 - 20) * v2859.ΔΔⵠⲆᐃ.get());
      var v2312 = v2310 + v2308;
      var v2313 = v2311 + v2309;
      for (var v2314 = 0; v2314 < v2859.ⵠᐃᐃΔΔ.length; v2314++) {
        var v2315 = v2859.ⵠᐃᐃΔΔ[v2314];
        if (ⵠⵠΔ.ⵠⲆⵠΔΔⵠᐃ(v2310, v2312, v2311, v2313, v2315.x1 / 100 - p1472, v2315.x2 / 100 + p1472, v2315.y1 / 100 - p1472, v2315.y2 / 100 + p1472) === 1) {
          return 0;
        }
      }
      v2859.ⵠᐃᐃΔΔ.push(new v2859.ᐃΔⵠᐃΔⵠᐃ(p1468, v2310, v2311, v2308, v2309, 15));
      return 1;
    }
    function o(p1473, p1474, p1475) {
      var vP1474 = p1474;
      for (var vP1475 = p1475; v2859.ⵠΔᐃΔⲆ > vP1475; vP1475++) {
        for (var vP14742 = p1474; v2859.ⲆᐃᐃⲆΔ > vP14742 && (vP1475 === p1475 && (vP1474 = Math.max(vP14742, vP1474)), !(vP14742 > vP1474)) && p1473[vP1475][vP14742] !== 1; vP14742++) {
          p1473[vP1475][vP14742] = 1;
        }
        if (vP1474 > vP14742) {
          break;
        }
      }
      v2859.ⵠᐃᐃΔΔ.push(new v2859.ᐃΔⵠᐃΔⵠᐃ(v2859.ⵠⵠᐃⵠⵠ, p1474, p1475, vP1474 - p1474 + 1, vP1475 - p1475, 15));
    }
    function r(p1476, p1477, p1478, p1479, p1480) {
      for (var v2316 = 0; p1480 > v2316 && a(p1476, p1477, p1478, p1479, 8) !== 1; v2316++);
      if (p1480 === v2316) {
        return 0;
      } else {
        return 1;
      }
    }
    function s(p1481, p1482) {
      var v2317 = v2859.ⵠᐃᐃΔΔ[p1481];
      var v2318 = Math.floor(v2317.y1 / 100);
      var v2319 = Math.floor(v2317.x1 / 100);
      var v2320 = Math.floor(v2317.ᐃⵠⵠ / 100);
      var v2321 = v2319 + (v2328 = Math.floor(v2317.w / 100));
      var v2322 = 2;
      var vV2320 = v2320;
      var vV2318 = v2318;
      for (var v2323 = v2319 + 10 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * (v2328 - 20)), v2324 = v2323 - 4; v2324 < v2323 + 4; v2324++) {
        f456(v2318 - 1, v2324, "wtb", 0, 1);
      }
      while (vV2320 > 0) {
        if (v2322 !== 2) {
          if (vV2320 < 10) {
            for (v2329 = 1; vV2320 > 0; v2329++) {
              g(vV2318, v2323, 1, 1, 0, p1482, v2329, 1);
              vV2320 -= 1;
              vV2318 += 1;
            }
          } else if (v2322 !== 1) {
            v2322 = 1;
            var v2325 = Math.floor(1 + v2859.ΔΔⵠⲆᐃ.get() * 2);
            var v2326 = 1 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 4);
            if (v2323 < v2319 + 16) {
              g(vV2318, v2323, v2325, 0, 1, p1482, v2326, v2326);
              v2323 += v2325;
            } else if (v2323 > v2321 - 16) {
              g(vV2318, v2323, v2325, 0, -1, p1482, v2326, v2326);
              v2323 -= v2325;
            } else if (v2859.ΔΔⵠⲆᐃ.get() > 0.5) {
              g(vV2318, v2323, v2325, 0, 1, p1482, v2326, v2326);
              v2323 += v2325;
            } else {
              g(vV2318, v2323, v2325, 0, -1, p1482, v2326, v2326);
              v2323 -= v2325;
            }
          } else {
            var v2327 = Math.min(vV2320, Math.floor(1 + v2859.ΔΔⵠⲆᐃ.get() * 4));
            var v2328 = 1 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 4);
            g(vV2318, v2323, v2327, 1, 0, p1482, v2328, v2328);
            v2322 = 0;
            vV2320 -= v2327;
            vV2318 += v2327;
          }
        } else {
          for (var v2329 = 10; v2329 > 1; v2329--) {
            g(vV2318, v2323, 1, 1, 0, p1482, v2329, 1);
            vV2320 -= 1;
            vV2318 += 1;
          }
          v2322 = 0;
        }
      }
      for (v2324 = v2323 - 1; v2324 < v2323 + 2; v2324++) {
        f456(vV2318, v2324, "wtb", 0, 1);
      }
    }
    function g(p1483, p1484, p1485, p1486, p1487, p1488, p1489, p1490) {
      var v2330 = Math.floor(p1489 / 2);
      var v2331 = Math.max(1, Math.floor(p1489 / 2));
      var v2332 = Math.floor(p1490 / 2);
      var v2333 = Math.max(1, Math.floor(p1490 / 2));
      for (var v2334 = 0; p1485 > v2334; v2334++) {
        for (var v2335 = p1483 - v2332; v2335 < p1483 + v2333; v2335++) {
          for (var v2336 = p1484 - v2330; p1484 + v2331 > v2336; v2336++) {
            if (f456(v2335, v2336, "wtb", 0, 1) === 1) {
              p1488.push([v2335, v2336, 1]);
            }
          }
        }
        p1483 += p1486;
        p1484 += p1487;
      }
    }
    function f453(p1491, p1492) {
      for (var v2337 = 0; v2337 < p1492.length; v2337++) {
        f463(p1492[v2337][0], p1492[v2337][1], p1491, p1492[v2337][2]);
      }
    }
    function f454(p1493) {
      for (var v2338 = 0; v2338 < 3; v2338++) {
        f465(p1493, "s", v2338, 15);
      }
      for (v2338 = 0; v2338 < 3; v2338++) {
        f465(p1493, "a", v2338, 1);
      }
      for (v2338 = 0; v2338 < 3; v2338++) {
        f465(p1493, "d", v2338, 1);
      }
      f464(p1493);
    }
    function f455(p1494, p1495) {
      for (var v2339 = 0; v2339 < 5; v2339++) {
        f465(p1494, "jut", v2339, Math.floor(p1495 * 160));
      }
      for (v2339 = 0; v2339 < 2; v2339++) {
        f465(p1494, "jub", v2339, Math.floor(p1495 * 20));
      }
      for (v2339 = 0; v2339 < 1; v2339++) {
        f465(p1494, "bap", v2339, Math.floor(p1495 * 40));
      }
      for (v2339 = 0; v2339 < 3; v2339++) {
        f465(p1494, "jus", v2339, Math.floor(p1495 * 80));
      }
      for (v2339 = 0; v2339 < 3; v2339++) {
        f465(p1494, "cop", v2339, Math.floor(p1495 * 20));
        f465(p1494, "iro", v2339, Math.floor(p1495 * 20));
        f465(p1494, "top", v2339, Math.floor(p1495 * 20));
        f465(p1494, "sap", v2339, Math.floor(p1495 * 20));
        f465(p1494, "jad", v2339, Math.floor(p1495 * 20));
        f465(p1494, "rub", v2339, Math.floor(p1495 * 20));
        f465(p1494, "aqu", v2339, Math.floor(p1495 * 20));
        f465(p1494, "coa", v2339, Math.floor(p1495 * 20));
      }
      var v2340 = [];
      for (v2339 = 0; v2339 < 6; v2339++) {
        s(p1494, v2340);
      }
      f453(p1494, v2340);
      v2340 = [];
      f464(p1494);
    }
    function f456(p1496, p1497, p1498, p1499, p1500) {
      if (!(p1496 < 0) && !(p1497 < 0) && !(p1496 >= v2859.ⵠΔᐃΔⲆ) && !(p1497 >= v2859.ⲆᐃᐃⲆΔ)) {
        ⵠΔⲆΔ = v2856.ⵠΔⲆΔ;
        if (vVVVUndefined17 === ⵠΔⲆΔ[p1496][p1497]) {
          ⵠΔⲆΔ[p1496][p1497] = {};
        }
        if (ⵠΔⲆΔ[p1496][p1497][p1498] !== vUndefined) {
          return 0;
        } else {
          ⵠΔⲆΔ[p1496][p1497][p1498] = [];
          ⵠΔⲆΔ[p1496][p1497][p1498][p1499] = [{
            x: p1497 * 100 + 50,
            y: p1496 * 100 + 50
          }];
          if (p1500 === 1) {
            (function (p1501, p1502, p1503, p1504) {
              v773.push([p1501, p1502, p1503, p1504]);
            })(p1498, p1499, p1496, p1497);
          }
          return 1;
        }
      }
    }
    function f457(p1505, p1506) {
      for (var v2341 = 0; v2341 < 6; v2341++) {
        f465(p1505, "t", v2341, Math.floor(p1506 * 80));
      }
      for (v2341 = 0; v2341 < 4; v2341++) {
        f465(p1505, "b", v2341, Math.floor(p1506 * 80));
      }
      for (v2341 = 0; v2341 < 3; v2341++) {
        f465(p1505, "s", v2341, Math.floor(p1506 * 50));
      }
      var v2342 = [];
      for (v2341 = 0; v2341 < 6; v2341++) {
        s(p1505, v2342);
      }
      f453(p1505, v2342);
      v2342 = [];
      f465(p1505, "p", 0, Math.floor(p1506 * 28));
      for (v2341 = 0; v2341 < 3; v2341++) {
        f465(p1505, "g", v2341, Math.floor(p1506 * 7));
      }
      for (v2341 = 0; v2341 < 3; v2341++) {
        f465(p1505, "d", v2341, Math.floor(p1506 * 2));
      }
      for (v2341 = 0; v2341 < 3; v2341++) {
        f465(p1505, "a", v2341, Math.floor(p1506 * 1));
      }
      for (v2341 = 0; v2341 < 3; v2341++) {
        f465(p1505, "m", v2341, Math.floor(p1506 * 1));
      }
      f465(p1505, "a", 0, Math.floor(p1506 * 1));
      f464(p1505);
    }
    function f458(p1507, p1508) {
      for (var v2343 = 0; v2343 < 6; v2343++) {
        f465(p1507, "t", v2343, Math.floor(p1508 * 20));
      }
      for (v2343 = 0; v2343 < 4; v2343++) {
        f465(p1507, "b", v2343, Math.floor(p1508 * 20));
      }
      for (v2343 = 0; v2343 < 3; v2343++) {
        f465(p1507, "s", v2343, Math.floor(p1508 * 20));
      }
      var v2344 = [];
      s(p1507, v2344);
      f453(p1507, v2344);
      v2344 = [];
      f465(p1507, "p", 0, Math.floor(p1508 * 24));
      for (v2343 = 0; v2343 < 3; v2343++) {
        f465(p1507, "g", v2343, Math.floor(p1508 * 5));
      }
      if (v2859.mode === 2) {
        for (v2343 = 0; v2343 < 3; v2343++) {
          f465(p1507, "d", v2343, Math.floor(p1508 * 3));
        }
        for (v2343 = 0; v2343 < 3; v2343++) {
          f465(p1507, "a", v2343, Math.floor(p1508 * 2));
        }
      }
      f464(p1507);
    }
    function f459(p1509, p1510) {
      (function (p1511, p1512) {
        var v2345 = v2859.ⵠᐃᐃΔΔ[p1512];
        for (var v2346 = 0, v2347 = 0; v2346 < p1511 && v2347 < 10000; v2347++) {
          var v2348 = v2345.y1 + v2345.ᐃⵠⵠ * v2859.ΔΔⵠⲆᐃ.get();
          var v2349 = v2345.x1 + v2345.w * v2859.ΔΔⵠⲆᐃ.get();
          var v2350 = Math.floor(v2348 / 100);
          var v2351 = Math.floor(v2349 / 100);
          if (!(v2859.ᐃΔᐃᐃᐃ(p1512, v2351 * 100 + 50, v2350 * 100 + 50) < 600)) {
            for (var v2352 = 1, v2353 = v2350 - 4; v2352 === 1 && v2350 + 4 >= v2353; v2353++) {
              for (var v2354 = v2351 - 4; v2352 === 1 && v2354 <= v2351 + 4; v2354++) {
                if (vVUndefined6 !== v2856.ⵠΔⲆΔ[v2353][v2354]) {
                  v2352 = 0;
                }
              }
            }
            if (v2352 !== 0) {
              f456(v2350, v2351, "la", v2346 % 6, 0);
              v2346++;
            }
          }
        }
      })(p1510 * 80, p1509);
      for (var v2355 = 0; v2355 < 3; v2355++) {
        f465(p1509, "s", v2355, Math.floor(p1510 * 12));
      }
      for (v2355 = 0; v2355 < 3; v2355++) {
        f465(p1509, "g", v2355, Math.floor(p1510 * 6));
      }
      for (v2355 = 0; v2355 < 3; v2355++) {
        f465(p1509, "re", v2355, Math.max(1, Math.floor(p1510 * 1)), 0.2);
      }
      for (v2355 = 0; v2355 < 3; v2355++) {
        f465(p1509, "a", v2355, Math.max(1, Math.floor(p1510 * 2)));
      }
      f464(p1509);
    }
    function f460(p1513, p1514) {
      for (var v2356 = 0; v2356 < 3; v2356++) {
        f465(p1513, "s", v2356, Math.floor(p1514 * 18));
      }
      for (v2356 = 0; v2356 < 3; v2356++) {
        f465(p1513, "f", v2356, Math.floor(p1514 * 24));
      }
      for (v2356 = 0; v2356 < 3; v2356++) {
        f465(p1513, "d", v2356, Math.max(1, Math.floor(p1514 * 2)), 0.3);
      }
      for (v2356 = 0; v2356 < 3; v2356++) {
        f465(p1513, "g", v2356, Math.floor(p1514 * 6));
      }
      f464(p1513);
    }
    function f461(p1515, p1516) {
      for (var v2357 = 0; v2357 < 3; v2357++) {
        f465(p1515, "s", v2357, Math.floor(p1516 * 12));
      }
      for (v2357 = 0; v2357 < 3; v2357++) {
        f465(p1515, "m", v2357, Math.max(1, Math.floor(p1516 * 1)), 0.2);
      }
      f465(p1515, "c", 0, Math.floor(p1516 * 36));
      var v2358 = [];
      (function (p1517, p1518) {
        var v2359 = v2859.ⵠᐃᐃΔΔ[p1517];
        var v2360 = Math.floor(v2359.y1 / 100);
        var v2361 = Math.floor(v2359.x1 / 100);
        var v2362 = Math.floor(v2359.ᐃⵠⵠ / 100);
        var v2363 = Math.floor(v2359.w / 100);
        var v2364 = v2360 + Math.floor(v2362 / 2);
        var v2365 = v2361 + Math.floor(v2363 / 2);
        for (var v2366 = 0; v2366 < 3; v2366++) {
          f456(v2367 = Math.floor(v2364 - 3 + v2859.ΔΔⵠⲆᐃ.get() * 6), v2368 = Math.floor(v2365 - 3 + v2859.ΔΔⵠⲆᐃ.get() * 6), "plm", v2366, 1);
        }
        for (v2366 = 0; v2366 < 80; v2366++) {
          var v2367 = Math.floor(v2364 - 3 + v2859.ΔΔⵠⲆᐃ.get() * 6);
          var v2368 = Math.floor(v2365 - 3 + v2859.ΔΔⵠⲆᐃ.get() * 6);
          if (f456(v2367, v2368, "wtb", 0, 1) === 1) {
            p1518.push([v2367, v2368, 0]);
          }
        }
      })(p1515, v2358);
      f453(p1515, v2358);
      v2358 = [];
    }
    function f462(p1519, p1520) {
      return p1519 >= 0 && p1520 >= 0 && p1519 < v2859.ⵠΔᐃΔⲆ && p1520 < v2859.ⲆᐃᐃⲆΔ;
    }
    function f463(p1521, p1522, p1523, p1524) {
      if (f462(p1521, p1522) && (ⵠΔⲆΔ = v2856.ⵠΔⲆΔ, vVVUndefined152 === ⵠΔⲆΔ[p1521][p1522] && (ⵠΔⲆΔ[p1521][p1522] = {}), ⵠΔⲆΔ[p1521][p1522].r === undefined)) {
        var v2369 = 0;
        if (f462(p1521 - 1, p1522) && vVVVVUndefined1722 !== ⵠΔⲆΔ[p1521 - 1][p1522] && vVVVUndefined173 !== ⵠΔⲆΔ[p1521 - 1][p1522].wtb) {
          v2369 += 2;
        }
        if (f462(p1521, p1522 - 1) && vVVVUndefined172 !== ⵠΔⲆΔ[p1521][p1522 - 1] && ⵠΔⲆΔ[p1521][p1522 - 1].wtb !== undefined) {
          v2369 += 8;
        }
        if (f462(p1521, p1522 + 1) && ⵠΔⲆΔ[p1521][p1522 + 1] !== vUndefined && ⵠΔⲆΔ[p1521][p1522 + 1].wtb !== undefined) {
          v2369 += 16;
        }
        if (f462(p1521 + 1, p1522) && vVVUndefined163 !== ⵠΔⲆΔ[p1521 + 1][p1522] && vVUndefined !== ⵠΔⲆΔ[p1521 + 1][p1522].wtb) {
          v2369 += 64;
        }
        if (!!f462(p1521 - 1, p1522 - 1) && !(~v2369 & 10) && ⵠΔⲆΔ[p1521 - 1][p1522 - 1] !== vVUndefined6 && vVVUndefined152 !== ⵠΔⲆΔ[p1521 - 1][p1522 - 1].wtb) {
          v2369 += 1;
        }
        if (!!f462(p1521 - 1, p1522 + 1) && !(~v2369 & 18) && ⵠΔⲆΔ[p1521 - 1][p1522 + 1] !== undefined && vVVUndefined163 !== ⵠΔⲆΔ[p1521 - 1][p1522 + 1].wtb) {
          v2369 += 4;
        }
        if (!!f462(p1521 + 1, p1522 - 1) && !(~v2369 & 72) && ⵠΔⲆΔ[p1521 + 1][p1522 - 1] !== undefined && ⵠΔⲆΔ[p1521 + 1][p1522 - 1].wtb !== vVVVUndefined142) {
          v2369 += 32;
        }
        if (f462(p1521 + 1, p1522 + 1) && (v2369 & 80) == 80 && ⵠΔⲆΔ[p1521 + 1][p1522 + 1] !== undefined && vVVUndefined18 !== ⵠΔⲆΔ[p1521 + 1][p1522 + 1].wtb) {
          v2369 += 128;
        }
        ⵠΔⲆΔ[p1521][p1522].r = {};
        ⵠΔⲆΔ[p1521][p1522].r.ⵠⲆᐃⵠΔⲆⲆ = v2369;
        ⵠΔⲆΔ[p1521][p1522].r.ⵠⵠⲆⵠᐃᐃᐃ = p1524;
        ⵠΔⲆΔ[p1521][p1522].r.ᐃᐃⵠⲆ = v2859.ᐃΔᐃᐃᐃ(p1523, p1522 * 100 + 50, p1521 * 100 + 50) - 400;
        ⵠΔⲆΔ[p1521][p1522].r.x = p1522 * 100 + 50;
        ⵠΔⲆΔ[p1521][p1522].r.y = p1521 * 100 + 50;
      }
    }
    function f464(p1525) {
      var v2370 = v2859.ⵠᐃᐃΔΔ[p1525];
      f456(-3 + Math.floor(v2370.y2 / 100), -1 + Math.floor(v2370.x2 / 100), "s", 0, 0);
      f456(3 + Math.floor(v2370.y1 / 100), -1 + Math.floor(v2370.x2 / 100), "s", 0, 0);
      f456(-3 + Math.floor(v2370.y2 / 100), 1 + Math.floor(v2370.x1 / 100), "s", 0, 0);
      f456(3 + Math.floor(v2370.y1 / 100), 1 + Math.floor(v2370.x1 / 100), "s", 0, 0);
    }
    function f465(p1526, p1527, p1528, p1529, p1530) {
      var v2371 = v2859.ⵠᐃᐃΔΔ[p1526];
      var v2372 = Math.floor(v2371.x1 / 100);
      var v2373 = Math.floor(v2371.y1 / 100);
      var v2374 = Math.floor(v2371.w / 100);
      var v2375 = Math.floor(v2371.ᐃⵠⵠ / 100);
      if (p1530 !== undefined) {
        p1530 = 1 - p1530;
        v2372 += Math.floor(v2374 * p1530 / 2);
        v2373 += Math.floor(p1530 * v2375 / 2);
        v2374 -= Math.floor(v2374 * p1530);
        v2375 -= Math.floor(v2375 * p1530);
      }
      var v2376 = v2856.ⵠΔⲆΔ;
      for (var v2377 = 0, v2378 = 0; p1529 > v2377 && !(v2378 > 50000); v2378++) {
        var v2379 = v2373 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * v2375);
        var v2380 = v2372 + Math.floor(v2374 * v2859.ΔΔⵠⲆᐃ.get());
        if (!(v2859.ᐃΔᐃᐃᐃ(p1526, v2380 * 100 + 50, v2379 * 100 + 50) < 400)) {
          var v2381 = v2376[v2379][v2380 + 1];
          if (vVVUndefined152 === v2381 || vVVVVUndefined172 === v2381[p1527] || v2381[p1527][p1528] === undefined) {
            if ((v2381 = v2376[v2379][v2380 - 1]) === undefined || v2381[p1527] === undefined || v2381[p1527][p1528] === undefined) {
              v2381 = v2376[v2379 + 1][v2380];
              if (vVVVVUndefined173 === v2381 || vVVVUndefined142 === v2381[p1527] || v2381[p1527][p1528] === undefined) {
                if ((v2381 = v2376[v2379 - 1][v2380]) === vVVUndefined18 || v2381[p1527] === vVVUndefined17 || v2381[p1527][p1528] === undefined) {
                  v2381 = v2376[v2379 + 1][v2380 - 1];
                  if (vVUndefined16 === v2381 || v2381[p1527] === undefined || v2381[p1527][p1528] === vVVVVUndefined173) {
                    v2381 = v2376[v2379 - 1][v2380 + 1];
                    if (vUndefined === v2381 || vVVVVUndefined1722 === v2381[p1527] || v2381[p1527][p1528] === undefined) {
                      if ((v2381 = v2376[v2379 + 1][v2380 + 1]) === undefined || v2381[p1527] === undefined || v2381[p1527][p1528] === undefined) {
                        v2381 = v2376[v2379 - 1][v2380 - 1];
                        if (vVVUndefined152 === v2381 || v2381[p1527] === undefined || vUndefined === v2381[p1527][p1528]) {
                          if (v2376[v2379][v2380] === vVVVUndefined1422) {
                            f456(v2379, v2380, p1527, p1528, 1);
                            v2377++;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    function f466(p1531, p1532, p1533) {
      if (p1531[p1532]) {
        for (v133 = 0; p1531[p1532].length > v133; v133++) {
          if (p1531[p1532][v133]) {
            for (Ⲇⵠᐃⵠ = 0; p1531[p1532][v133].length > Ⲇⵠᐃⵠ; Ⲇⵠᐃⵠ++) {
              p1531[p1532][v133][Ⲇⵠᐃⵠ].ᐃᐃΔ = p1533;
              p1531[p1532][v133][Ⲇⵠᐃⵠ].ⵠΔᐃ = vVV165;
              p1531[p1532][v133][Ⲇⵠᐃⵠ].time = 0;
              p1531[p1532][v133][Ⲇⵠᐃⵠ].angle = 0;
            }
          }
        }
      }
    }
    if (v2307 > 7) {
      v2307 = 200;
    }
    this.ⲆⲆΔᐃᐃⵠᐃ.ⵠΔΔⵠΔᐃΔ = 12;
    this.ⲆⵠΔ[53] = [];
    this.ΔΔΔΔⵠⲆΔ = {};
    this.ΔΔΔΔⵠⲆΔ.ⲆⲆⲆᐃᐃᐃⲆ = 13;
    this.ⲆⵠΔ[63] = [];
    this.ⲆⵠΔ[66] = [];
    this.ⲆⵠΔ[48] = [];
    this.ΔⲆⲆⵠΔⵠΔ = 412;
    this.ⲆⵠΔ[49] = [];
    this.ⲆⵠΔ[41] = [];
    this.ⲆⵠΔ[24] = [];
    this.ⲆⵠΔ[25] = [];
    this.ⲆⵠΔ[26] = [];
    this.ⲆⵠΔ[27] = [];
    this.ⲆⵠΔ[28] = [];
    this.ΔΔΔᐃΔΔⵠ = 146;
    this.ΔΔΔᐃΔΔⵠ.ΔᐃⲆᐃⲆⲆⵠ = 8;
    this.ⲆⵠΔ[29] = [];
    this.ⲆⵠΔ[30] = [];
    this.ᐃⵠⲆⵠⲆΔΔ = 88;
    this.ⲆⵠΔ[31] = [];
    this.ⲆⵠΔ[32] = [];
    this.ⲆⵠΔ[33] = [];
    this.ⲆⵠΔ[34] = [];
    this.ⲆⵠΔ[35] = [];
    this.ⲆⵠΔ[36] = [];
    this.ⲆⵠΔ[37] = [];
    this.ⲆⵠΔ[44] = [];
    this.ⲆⵠΔ[99] = [];
    this.ⲆⵠΔ[51] = [];
    this.ᐃΔⵠⲆⵠ = [];
    this.ⲆᐃᐃⲆΔ = 260;
    this.ⵠΔᐃΔⲆ = 260;
    this.ⵠᐃᐃᐃΔΔᐃ = 100;
    this.ⵠΔΔᐃΔΔΔ = 100;
    this.w = this.ⵠᐃᐃᐃΔΔᐃ * this.ⲆᐃᐃⲆΔ;
    this.ᐃⵠⵠ = this.ⵠΔᐃΔⲆ * this.ⵠΔΔᐃΔΔΔ;
    this.ΔΔⵠⲆᐃ = new v573.ⲆⲆⵠⲆᐃΔΔ();
    this.ⵠᐃᐃΔΔ = [];
    this.ΔⲆᐃᐃ = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 0, 1, 0, 1, 1);
    this.transition = vVVVV1623;
    this.ΔⲆⲆⵠΔ = [];
    this.ⲆΔᐃΔᐃⵠⲆ = 0;
    this.ⵠⵠⵠᐃⲆⲆⲆ = 1;
    this.ΔΔΔΔⵠΔⲆ = 2;
    this.ⵠⲆΔⲆⵠⵠⵠ = 3;
    this.ⵠⵠᐃⵠⵠ = 4;
    this.ᐃⲆᐃⵠⵠⲆⲆ = 10;
    this.ⲆᐃΔⲆⵠΔΔ = 11;
    this.ΔⲆⲆⵠΔ[this.ⲆΔᐃΔᐃⵠⲆ] = {
      ΔⲆⲆⲆⲆΔᐃ: 1,
      ⵠᐃⵠ: [19, 58, 43],
      ΔᐃⲆ: [4, 43, 48],
      ⵠⲆΔΔΔ: ["#133a2b", "#042b30"]
    };
    this.ΔⲆⲆⵠΔ[this.ⲆᐃΔⲆⵠΔΔ] = {
      ⵠⲆΔΔΔ: ["#13491E", "#092D1F"],
      ⵠᐃⵠ: [19, 73, 30],
      ΔⲆⲆⲆⲆΔᐃ: 1,
      ΔᐃⲆ: [9, 43, 31]
    };
    this.ΔⲆⲆⵠΔ[this.ⵠⵠᐃⵠⵠ] = {
      ΔⲆⲆⲆⲆΔᐃ: 0,
      ⵠᐃⵠ: [11, 106, 132],
      ΔᐃⲆ: [9, 55, 63],
      ⵠⲆΔΔΔ: ["#0B6A84", "#09373F"]
    };
    this.ΔⲆⲆⵠΔ[this.ⵠⵠⵠᐃⲆⲆⲆ] = {
      ΔⲆⲆⲆⲆΔᐃ: 0,
      ⵠᐃⵠ: [235, 242, 240],
      ΔᐃⲆ: [19, 97, 103],
      ⵠⲆΔΔΔ: ["#EBF2F0", "#136167"]
    };
    this.ΔⲆⲆⵠΔ[this.ΔΔΔΔⵠΔⲆ] = {
      ΔᐃⲆ: [3, 28, 30],
      ⵠⲆΔΔΔ: ["#2D2017", "#031C1E"],
      ΔⲆⲆⲆⲆΔᐃ: 0,
      ⵠᐃⵠ: [45, 32, 23]
    };
    this.ΔⲆⲆⵠΔ[this.ⵠⲆΔⲆⵠⵠⵠ] = {
      ΔⲆⲆⲆⲆΔᐃ: 0,
      ΔᐃⲆ: [24, 61, 60],
      ⵠᐃⵠ: [74, 74, 74],
      ⵠⲆΔΔΔ: ["#4A4A4A", "#183D3C"]
    };
    this.ΔⲆⲆⵠΔ[this.ᐃⲆᐃⵠⵠⲆⲆ] = {
      ⵠⲆΔΔΔ: ["#EBD8A6", "#093D38"],
      ΔⲆⲆⲆⲆΔᐃ: 0,
      ΔᐃⲆ: [9, 61, 56],
      ⵠᐃⵠ: [235, 216, 166]
    };
    this.ᐃΔⵠᐃΔⵠᐃ = function (p1534, p1535, p1536, p1537, p1538, p1539) {
      this.x1 = p1535 * 100;
      this.y1 = p1536 * 100;
      this.w = p1537 * 100;
      this.ᐃⵠⵠ = p1538 * 100;
      this.x2 = (p1535 + p1537) * 100;
      this.y2 = (p1536 + p1538) * 100;
      this.ⵠⲆΔ = p1534;
      this.ΔⲆⵠ = p1539 === vVVVUndefined1422 ? 15 : p1539;
    };
    this.ⵠᐃⵠⲆΔ = -1000000;
    this.ⲆⵠΔⲆΔ = this.ⵠᐃⵠⲆΔ;
    this.ⵠᐃᐃᐃΔ = this.ⵠᐃⵠⲆΔ;
    this.ⲆⵠⵠᐃⲆ = this.ⵠᐃⵠⲆΔ;
    this.ᐃⵠⵠΔᐃⵠⲆ = this.ⵠᐃⵠⲆΔ;
    this.ΔΔᐃⵠⵠᐃΔ = this.ⵠᐃⵠⲆΔ;
    this.ⵠᐃⵠΔᐃᐃᐃ = this.ⵠᐃⵠⲆΔ;
    this.ΔᐃΔⲆᐃ = this.ⵠᐃⵠⲆΔ;
    this.ΔⵠⵠΔΔᐃᐃΔⵠ = function (p1540) {
      var v2382 = p1540.r.x;
      var v2383 = p1540.r.y;
      var v2384 = Math.floor(v2383 / 100);
      var v2385 = Math.floor(v2382 / 100);
      p1540.ⲆⵠΔⲆΔ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ⵠᐃᐃᐃΔ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ⲆⵠⵠᐃⲆ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ᐃⵠⵠΔᐃⵠⲆ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ΔΔᐃⵠⵠᐃΔ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ΔᐃΔⲆᐃ = v2859.ⵠᐃⵠⲆΔ;
      p1540.ⲆⲆⲆⵠΔⲆⵠ = v2859.ⵠᐃⵠⲆΔ;
      for (var v2386 = 0; v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ !== v2859.ⵠⵠᐃⵠⵠ; v2386++) {
        if (v2859.ⲆΔᐃΔᐃⵠⲆ === v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ) {
          var v2387 = v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383);
          p1540.ᐃⵠⵠΔᐃⵠⲆ = Math.max(p1540.ᐃⵠⵠΔᐃⵠⲆ, v2387);
          if (v2387 > 0 && v2859.ⵠΔⵠⵠΔⲆⵠ(v2386, v2382, v2383) === 1) {
            p1540.ⲆⲆⲆⵠΔⲆⵠ = 1;
          }
        } else if (v2859.ⲆᐃΔⲆⵠΔΔ === v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ) {
          v2387 = v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383);
          p1540.ΔΔᐃⵠⵠᐃΔ = Math.max(p1540.ΔΔᐃⵠⵠᐃΔ, v2387);
          if (v2387 > 0 && v2859.ⵠΔⵠⵠΔⲆⵠ(v2386, v2382, v2383) === 1) {
            p1540.ⲆⲆⲆⵠΔⲆⵠ = 1;
          }
        } else if (v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ === v2859.ⵠⵠⵠᐃⲆⲆⲆ) {
          p1540.ⲆⵠΔⲆΔ = Math.max(p1540.ⲆⵠΔⲆΔ, v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383));
        } else if (v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ === v2859.ᐃⲆᐃⵠⵠⲆⲆ) {
          p1540.ⵠᐃᐃᐃΔ = Math.max(p1540.ⵠᐃᐃᐃΔ, v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383));
        } else if (v2859.ΔΔΔΔⵠΔⲆ === v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ) {
          p1540.ⲆⵠⵠᐃⲆ = Math.max(p1540.ⲆⵠⵠᐃⲆ, v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383));
        } else if (v2859.ⵠᐃᐃΔΔ[v2386].ⵠⲆΔ === v2859.ⵠⲆΔⲆⵠⵠⵠ) {
          p1540.ΔᐃΔⲆᐃ = Math.max(p1540.ΔᐃΔⲆᐃ, v2859.ᐃΔᐃᐃᐃ(v2386, v2382, v2383));
        }
      }
      if (v2856.ⵠΔⲆΔ[v2384][v2385].iblk) {
        p1540.ⲆⲆⲆⵠΔⲆⵠ = 1;
      }
      if (v2859.ᐃⵠⵠⲆⲆᐃⵠΔᐃ(v2385, v2384)) {
        p1540.ⵠᐃⵠΔᐃᐃᐃ = p1540.ⵠᐃⵠⲆΔ;
      } else if (v2856.ⵠΔⲆΔ[v2384][v2385].wtb || p1540.ⲆⵠΔⲆΔ < 0 && p1540.ⲆⵠⵠᐃⲆ < 0 && p1540.ᐃⵠⵠΔᐃⵠⲆ < 0 && p1540.ⲆⲆⲆⵠΔⲆⵠ < 0 && p1540.ΔᐃΔⲆᐃ < 0 && p1540.ⵠᐃᐃᐃΔ < 0 && p1540.ΔΔᐃⵠⵠᐃΔ < 0) {
        p1540.ⵠᐃⵠΔᐃᐃᐃ = 1;
      } else {
        p1540.ⵠᐃⵠΔᐃᐃᐃ = p1540.ⵠᐃⵠⲆΔ;
      }
    };
    this.ⲆΔⵠΔᐃΔⲆᐃΔ = function (p1541, p1542) {
      v2859.ⲆⵠΔⲆΔ = v2859.ⵠᐃⵠⲆΔ;
      v2859.ⵠᐃᐃᐃΔ = v2859.ⵠᐃⵠⲆΔ;
      v2859.ⲆⵠⵠᐃⲆ = v2859.ⵠᐃⵠⲆΔ;
      v2859.ΔᐃΔⲆᐃ = v2859.ⵠᐃⵠⲆΔ;
      v2859.ᐃⵠⵠΔᐃⵠⲆ = v2859.ⵠᐃⵠⲆΔ;
      v2859.ΔΔᐃⵠⵠᐃΔ = v2859.ⵠᐃⵠⲆΔ;
      for (var v2388 = 0; v2859.ⵠⵠᐃⵠⵠ !== v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ; v2388++) {
        if (v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ === v2859.ⲆΔᐃΔᐃⵠⲆ) {
          v2859.ᐃⵠⵠΔᐃⵠⲆ = Math.max(v2859.ᐃⵠⵠΔᐃⵠⲆ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        } else if (v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ === v2859.ⲆᐃΔⲆⵠΔΔ) {
          v2859.ΔΔᐃⵠⵠᐃΔ = Math.max(v2859.ΔΔᐃⵠⵠᐃΔ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        } else if (v2859.ⵠⵠⵠᐃⲆⲆⲆ === v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ) {
          v2859.ⲆⵠΔⲆΔ = Math.max(v2859.ⲆⵠΔⲆΔ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        } else if (v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ === v2859.ᐃⲆᐃⵠⵠⲆⲆ) {
          v2859.ⵠᐃᐃᐃΔ = Math.max(v2859.ⵠᐃᐃᐃΔ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        } else if (v2859.ΔΔΔΔⵠΔⲆ === v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ) {
          v2859.ⲆⵠⵠᐃⲆ = Math.max(v2859.ⲆⵠⵠᐃⲆ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        } else if (v2859.ⵠⲆΔⲆⵠⵠⵠ === v2859.ⵠᐃᐃΔΔ[v2388].ⵠⲆΔ) {
          v2859.ΔᐃΔⲆᐃ = Math.max(v2859.ΔᐃΔⲆᐃ, v2859.ᐃΔᐃᐃᐃ(v2388, p1541, p1542));
        }
      }
      if (v2859.ⲆⵠΔⲆΔ < 0 && v2859.ΔᐃΔⲆᐃ < 0 && v2859.ᐃⵠⵠΔᐃⵠⲆ < 0 && v2859.ΔᐃΔⲆᐃ < 0 && v2859.ⵠᐃᐃᐃΔ < 0 && v2859.ΔΔᐃⵠⵠᐃΔ < 0) {
        v2859.ⵠᐃⵠΔᐃᐃᐃ = 1;
      } else {
        v2859.ⵠᐃⵠΔᐃᐃᐃ = v2859.ⵠᐃⵠⲆΔ;
      }
    };
    this.ⵠΔⵠⵠΔⲆⵠ = function (p1543, p1544, p1545) {
      var v2389 = v2859.ⵠᐃᐃΔΔ[p1543];
      var v2390 = 0;
      ᐃᐃᐃⵠ = v2389.x1 + 30 + (v2389.ΔⲆⵠ & 4 ? 0 : 150);
      var v2391 = p1544 - ᐃᐃᐃⵠ;
      if ((v2389.ΔⲆⵠ & 4) > 0 && v2391 > 0 && v2391 < 320) {
        v2390 = 1;
      }
      ᐃⲆⲆΔ = v2389.y1 + 250 + ((v2389.ΔⲆⵠ & 1) === 0 ? 150 : 0);
      v2391 = p1545 - ᐃⲆⲆΔ;
      if ((v2389.ΔⲆⵠ & 1) > 0 && v2391 > 0 && v2391 < 320) {
        v2390 = 1;
      }
      Ⲇⵠⵠⵠ = v2389.x2 + 80 + (v2389.ΔⲆⵠ & 8 ? 0 : -200);
      v2391 = Ⲇⵠⵠⵠ - p1544;
      if ((v2389.ΔⲆⵠ & 8) > 0 && v2391 > 0 && v2391 < 320) {
        v2390 = 1;
      }
      ⲆᐃΔⵠ = v2389.y2 - 200 + (v2389.ΔⲆⵠ & 2 ? 0 : -200);
      v2391 = ⲆᐃΔⵠ - p1545;
      if ((v2389.ΔⲆⵠ & 2) > 0 && v2391 > 0 && v2391 < 320) {
        v2390 = 1;
      }
      if (ᐃᐃᐃⵠ <= p1544 && Ⲇⵠⵠⵠ >= p1544 && p1545 >= ᐃⲆⲆΔ && p1545 <= ⲆᐃΔⵠ) {
        return v2390;
      } else {
        return 0;
      }
    };
    this.ᐃΔᐃᐃᐃ = function (p1546, p1547, p1548) {
      var v2392 = v2859.ⵠᐃᐃΔΔ[p1546];
      ᐃᐃᐃⵠ = v2392.x1 + 30;
      ᐃⲆⲆΔ = v2392.y1 + 250;
      Ⲇⵠⵠⵠ = v2392.x2 + 80;
      ⲆᐃΔⵠ = v2392.y2 - 200;
      if (p1547 >= ᐃᐃᐃⵠ && Ⲇⵠⵠⵠ >= p1547 && ᐃⲆⲆΔ <= p1548 && ⲆᐃΔⵠ >= p1548) {
        return Math.min(p1547 - ᐃᐃᐃⵠ, Ⲇⵠⵠⵠ - p1547, p1548 - ᐃⲆⲆΔ, ⲆᐃΔⵠ - p1548);
      }
      var v2393 = -1000000;
      if (p1547 - ᐃᐃᐃⵠ < 0) {
        v2393 = Math.max(v2393, p1547 - ᐃᐃᐃⵠ);
      } else if (Ⲇⵠⵠⵠ - p1547 < 0) {
        v2393 = Math.max(v2393, Ⲇⵠⵠⵠ - p1547);
      }
      ΔΔⲆⵠⲆⵠΔ = -1000000;
      if (p1548 < ᐃⲆⲆΔ || ⲆᐃΔⵠ < p1548) {
        if (p1548 - ᐃⲆⲆΔ < 0) {
          ΔΔⲆⵠⲆⵠΔ = Math.max(ΔΔⲆⵠⲆⵠΔ, p1548 - ᐃⲆⲆΔ);
        } else {
          ΔΔⲆⵠⲆⵠΔ = Math.max(ΔΔⲆⵠⲆⵠΔ, ⲆᐃΔⵠ - p1548);
        }
        v2393 = v2393 !== -1000000 && ΔΔⲆⵠⲆⵠΔ !== -1000000 ? Math.min(v2393, ΔΔⲆⵠⲆⵠΔ) : ΔΔⲆⵠⲆⵠΔ;
      }
      return v2393;
    };
    this.ⲆⵠᐃΔᐃⵠᐃ = function (p1549, p1550, p1551) {
      var vP1551 = p1551;
      var vP1550 = p1550;
      f456(vP1551, vP1550, "isl", p1549, 1);
      for (var v2394 = 0; v2394 < 4; v2394++) {
        for (var v2395 = 0; v2395 < 3; v2395++) {
          f456(vP1551 - v2395, vP1550 - v2394, "iblk", 0);
          f456(vP1551 + v2395, vP1550 - v2394, "iblk", 0);
          f456(vP1551 + v2395, vP1550 + v2394, "iblk", 0);
          f456(vP1551 - v2395, vP1550 + v2394, "iblk", 0);
        }
      }
      if (p1549 === 0) {
        for (v2394 = 0; v2394 < 2; v2394++) {
          f456(vP1551 - v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 - v2394, vP1550 + 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 + 4, "iblk", 0);
        }
        for (v2394 = 0; v2394 < 3; v2394++) {
          f456(vP1551 - 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 - 3, vP1550 - v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 - v2394, "iblk", 0);
        }
        f456(vP1551 - 2, vP1550 - 4, "iblk", 0);
        f456(vP1551 - 3, vP1550 - 3, "iblk", 0);
        f456(vP1551 + 2, vP1550 + 4, "iblk", 0);
        f456(vP1551 + 3, vP1550 + 3, "iblk", 0);
      } else if (p1549 === 1) {
        for (v2394 = 0; v2394 < 3; v2394++) {
          f456(vP1551 - v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 - v2394, vP1550 + 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 + 4, "iblk", 0);
        }
        for (v2394 = 0; v2394 < 4; v2394++) {
          f456(vP1551 - 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 - 3, vP1550 - v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 - v2394, "iblk", 0);
        }
      } else if (p1549 === 2) {
        for (v2394 = 0; v2394 < 2; v2394++) {
          f456(vP1551 - v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 - 4, "iblk", 0);
          f456(vP1551 - v2394, vP1550 + 4, "iblk", 0);
          f456(vP1551 + v2394, vP1550 + 4, "iblk", 0);
        }
        for (v2394 = 0; v2394 < 3; v2394++) {
          f456(vP1551 - 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 + v2394, "iblk", 0);
          f456(vP1551 - 3, vP1550 - v2394, "iblk", 0);
          f456(vP1551 + 3, vP1550 - v2394, "iblk", 0);
        }
      }
    };
    this.ΔΔⲆΔⵠⲆⵠⲆⲆ = function (p1552) {
      for (var v2396 = 0; v2396 < v2859.ⵠᐃᐃΔΔ.length && p1552 > 0; v2396++) {
        var v2397 = v2859.ⵠᐃᐃΔΔ[v2396];
        if (v2859.ⵠⵠᐃⵠⵠ === v2397.ⵠⲆΔ && v2397.w > 1800 && v2397.ᐃⵠⵠ > 1000) {
          var v2398 = Math.floor((v2397.x1 + v2397.w / 2) / 100);
          var v2399 = Math.floor((v2397.y1 + v2397.ᐃⵠⵠ / 2) / 100);
          v2859.ⲆⵠᐃΔᐃⵠᐃ(p1552 % 3, v2398, v2399);
          for (var v2400 = 0; v2400 < 3; v2400++) {
            var v2401 = v2399 - 2 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 4);
            var v2402 = v2398 - 3 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 6);
            if (vVVUndefined163 === v2856.ⵠΔⲆΔ[v2401][v2402].s) {
              f456(v2401, v2402, "plm", v2400);
            }
            v2401 = v2399 - 2 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 4);
            v2402 = v2398 - 3 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 6);
            if (v2856.ⵠΔⲆΔ[v2401][v2402].plm === undefined) {
              f456(v2401, v2402, "s", v2400);
            }
          }
          v2401 = v2399 - 2 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 4);
          v2402 = v2398 - 3 + Math.floor(v2859.ΔΔⵠⲆᐃ.get() * 6);
          if (vVUndefined15 === v2856.ⵠΔⲆΔ[v2401][v2402].plm && v2856.ⵠΔⲆΔ[v2401][v2402].s === undefined) {
            f456(v2401, v2402, "p", 0, 1);
          }
          p1552--;
        }
      }
    };
    this.ⵠᐃⵠΔⵠᐃᐃᐃᐃ = function (p1553) {
      v2859.ΔΔⵠⲆᐃ.ⵠⵠΔⵠᐃ(p1553);
      var v2403 = 0;
      while (true) {
        if (++v2403 > 10000) {
          return;
        }
        v2859.ⵠᐃᐃΔΔ = [];
        if (v2859.ᐃⲆⲆΔᐃ === 0 && (v2859.mode === 3 || v2859.mode === 7 || v2859.mode === 0)) {
          v2859.ᐃⲆⲆΔᐃ = v581;
        }
        if (v2859.mode === 2) {
          v2859.ⵠᐃᐃΔΔ.push(new v2859.ᐃΔⵠᐃΔⵠᐃ(v2859.ⲆΔᐃΔᐃⵠⲆ, 2, 2, 80, 80, 15));
        } else if (v2859.ᐃⲆⲆΔᐃ !== 0 && v2859.ᐃⲆⲆΔᐃ.length > 0 && v2859.ᐃⲆⲆΔᐃ[0].length > 3) {
          for (var v2404 = 0; v2859.ᐃⲆⲆΔᐃ.length > v2404; v2404++) {
            var v2405 = v2859.ᐃⲆⲆΔᐃ[v2404];
            if (v2405[0] !== 0) {
              break;
            }
            var v2406 = v2289.ⲆΔᐃΔᐃⵠⲆ;
            switch (v2405[1]) {
              case "FOREST":
                v2406 = v2859.ⲆΔᐃΔᐃⵠⲆ;
                break;
              case "JUNGLE":
                v2406 = v2859.ⲆᐃΔⲆⵠΔΔ;
                break;
              case "WINTER":
                v2406 = v2859.ⵠⵠⵠᐃⲆⲆⲆ;
                break;
              case "DESERT":
                v2406 = v2859.ᐃⲆᐃⵠⵠⲆⲆ;
                break;
              case "LAVA":
                v2406 = v2859.ΔΔΔΔⵠΔⲆ;
                break;
              case "DRAGON":
                v2406 = v2859.ⵠⲆΔⲆⵠⵠⵠ;
            }
            v2859.ⵠᐃᐃΔΔ.push(new v2859.ᐃΔⵠᐃΔⵠᐃ(v2406, v2405[2], v2405[3], v2405[4], v2405[5], v2405[6], v2405[7]));
          }
        } else if (v2859.ᐃⲆⲆΔᐃ !== 0) {
          for (v2404 = 0; v2404 < v2859.ᐃⲆⲆΔᐃ.length; v2404++) {
            var v2407 = v2859.ᐃⲆⲆΔᐃ[v2404];
            v2406 = v2289.ⲆΔᐃΔᐃⵠⲆ;
            switch (v2407[0]) {
              case "FOREST":
                v2406 = v2859.ⲆΔᐃΔᐃⵠⲆ;
                break;
              case "JUNGLE":
                v2406 = v2859.ⲆᐃΔⲆⵠΔΔ;
                break;
              case "WINTER":
                v2406 = v2859.ⵠⵠⵠᐃⲆⲆⲆ;
                break;
              case "DESERT":
                v2406 = v2859.ᐃⲆᐃⵠⵠⲆⲆ;
                break;
              case "LAVA":
                v2406 = v2859.ΔΔΔΔⵠΔⲆ;
                break;
              case "DRAGON":
                v2406 = v2859.ⵠⲆΔⲆⵠⵠⵠ;
            }
            if (r(v2406, v2407[1], v2407[2], 0, (v2404 + 1) * 10) === 0) {
              break;
            }
          }
          if (v2859.ᐃⲆⲆΔᐃ.length !== v2404) {
            continue;
          }
        }
        break;
      }
      ΔⲆᐃⲆⵠⲆΔᐃⲆ();
      var v2408 = [];
      for (var v2409 = 0; v2409 < v2859.ⵠΔᐃΔⲆ; v2409++) {
        v2408[v2409] = new Array(v2859.ⲆᐃᐃⲆΔ);
        for (var v2410 = 0; v2859.ⲆᐃᐃⲆΔ > v2410; v2410++) {
          v2408[v2409][v2410] = 0;
        }
      }
      for (v2409 = 0; v2409 < v2859.ⵠᐃᐃΔΔ.length; v2409++) {
        for (var v2411 = (v2407 = v2859.ⵠᐃᐃΔΔ[v2409]).x2 / 100, v2412 = v2407.y2 / 100, v2413 = v2407.x1 / 100; v2413 <= v2411; v2413++) {
          for (var v2414 = v2407.y1 / 100; v2414 <= v2412; v2414++) {
            v2408[v2414][v2413] = 1;
          }
        }
      }
      for (v2414 = 0; v2859.ⵠΔᐃΔⲆ > v2414; v2414++) {
        for (v2413 = 0; v2413 < v2859.ⲆᐃᐃⲆΔ; v2413++) {
          if (v2408[v2414][v2413] === 0) {
            o(v2408, v2413, v2414);
          }
        }
      }
      v2856 = {
        w: v2859.ⲆᐃᐃⲆΔ,
        ᐃⵠⵠ: v2859.ⵠΔᐃΔⲆ,
        ⵠΔⲆΔ: []
      };
      for (v2409 = 0; v2409 < v2859.ⵠΔᐃΔⲆ; v2409++) {
        v2856.ⵠΔⲆΔ[v2409] = [];
      }
      if (v2859.ᐃⲆⲆΔᐃ !== 0 && v2859.ᐃⲆⲆΔᐃ.length > 0 && v2859.ᐃⲆⲆΔᐃ[0].length > 3) {
        for (v2404 = 0; v2404 < v2859.ᐃⲆⲆΔᐃ.length; v2404++) {
          v2405 = v2859.ᐃⲆⲆΔᐃ[v2404];
          if (v2405[1] === "isl") {
            v2859.ⲆⵠᐃΔᐃⵠᐃ(v2405[2], v2405[3], v2405[4]);
          }
        }
      } else {
        v2859.ΔΔⲆΔⵠⲆⵠⲆⲆ(v2859.ⲆⲆᐃΔΔΔⵠ);
      }
      if (v2859.ᐃⲆⲆΔᐃ !== 0 && v2859.ᐃⲆⲆΔᐃ.length > 0 && v2859.ᐃⲆⲆΔᐃ[0].length > 3) {
        var v2415 = [];
        for (v2404 = 0; v2404 < v2859.ᐃⲆⲆΔᐃ.length; v2404++) {
          if ((v2405 = v2859.ᐃⲆⲆΔᐃ[v2404])[0] === 1) {
            if (v2405[1] === "r") {
              f456(v2405[3], v2405[2], "wtb", 0, 1);
              v2415.push([v2405[3], v2405[2], v2405[4]]);
            } else {
              f456(v2405[4], v2405[3], v2405[1], v2405[2], v2405[5]);
            }
          }
        }
        f453(0, v2415);
        v2415 = [];
      } else {
        for (v2409 = 0; v2409 < v2859.ⵠᐃᐃΔΔ.length; v2409++) {
          if ((v2407 = v2859.ⵠᐃᐃΔΔ[v2409]).ⵠⲆΔ === v2859.ⲆΔᐃΔᐃⵠⲆ) {
            if (v2859.mode === 4) {
              f457(v2409, v2407.w / 10000);
            } else {
              f458(v2409, v2407.w / 10000);
            }
          }
          if (v2859.ⲆᐃΔⲆⵠΔΔ === v2407.ⵠⲆΔ) {
            f455(v2409, v2407.w / 10000);
          }
          if (v2407.ⵠⲆΔ === v2859.ΔΔΔΔⵠΔⲆ) {
            f459(v2409, v2407.w / 10000);
          }
          if (v2859.ⵠⵠⵠᐃⲆⲆⲆ === v2407.ⵠⲆΔ) {
            f460(v2409, v2407.w / 10000);
          }
          if (v2407.ⵠⲆΔ === v2859.ᐃⲆᐃⵠⵠⲆⲆ) {
            f461(v2409, v2407.w / 10000);
          }
          if (v2407.ⵠⲆΔ === v2859.ⵠⲆΔⲆⵠⵠⵠ) {
            f454(v2409);
          }
        }
      }
      f87("isl", 1);
      f87("wtb", 20);
      f87("la", 1);
      f87("c", 1);
      f87("s", 1);
      f87("jus", 1);
      f87("f", 1);
      f87("p", 1);
      f87("bap", 1);
      f87("jub", 1);
      f87("g", 1);
      f87("d", 1);
      f87("a", 1);
      f87("re", 1);
      f87("m", 1);
      f87("cop", 1);
      f87("iro", 1);
      f87("top", 1);
      f87("sap", 1);
      f87("jad", 1);
      f87("rub", 1);
      f87("aqu", 1);
      f87("coa", 1);
      v773 = [];
      v2859.ᐃᐃⲆⵠⲆᐃΔΔⵠ(v2856);
    };
    this.ᐃᐃⵠⵠ = f456;
    this.ᐃᐃⲆⵠⲆᐃΔΔⵠ = function (p1554) {
      for (var v2416 = 0; v2416 < this.ⵠΔᐃΔⲆ; v2416++) {
        for (var v2417 = 0; v2417 < this.ⲆᐃᐃⲆΔ; v2417++) {
          p1554.ⵠΔⲆΔ[v2416] ||= [];
          if (p1554.ⵠΔⲆΔ[v2416][v2417]) {
            var v2418 = p1554.ⵠΔⲆΔ[v2416][v2417];
            if (v2418.de && v2418.de.length > 0) {
              for (var v2419 = 0; v2418.de.length > v2419; v2419++) {
                if (v2418.de[v2419] && v2418.de[v2419].length > 0) {
                  v2418.de = v2418.de[v2419][0];
                  if (v2419 >= 41 && v2419 <= 49) {
                    v2418.de.scale = 3;
                    var v2420 = Math.floor(Math.random() * 3 + 1);
                    v2418.de.ΔΔΔ = [];
                    for (var v2421 = 0; v2421 < v2420; v2421++) {
                      v2418.de.ΔΔΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.random() * Math.PI * 2,
                        ⲆⲆⵠⵠᐃ: 41 + Math.floor(Math.random() * 9)
                      });
                    }
                  } else if (v2419 >= 19 && v2419 <= 26) {
                    v2418.de.scale = 3;
                    v2420 = Math.floor(Math.random() * 3 + 1);
                    v2418.de.ΔΔΔ = [];
                    for (v2421 = 0; v2421 < v2420; v2421++) {
                      v2418.de.ΔΔΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.PI * Math.random() * 2,
                        ⲆⲆⵠⵠᐃ: 19 + Math.floor(Math.random() * 8)
                      });
                    }
                  } else if (v2419 <= 15 || v2419 >= 27 && v2419 <= 40) {
                    v2418.de.angle = 0;
                    v2418.de.scale = 2;
                    v2418.de.ⲆⲆⵠⵠᐃ = v2419;
                  } else {
                    v2418.de.angle = Math.random() * Math.PI * 2;
                    v2418.de.scale = 1;
                    v2418.de.ⲆⲆⵠⵠᐃ = v2419;
                  }
                }
              }
            }
            f466(v2418, "p", new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 1, 1, 0, 10, 10));
            f466(v2418, "t", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "s", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "g", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1622, 1, 1, 0, 10, 10));
            f466(v2418, "d", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 1, 1, 0, 10, 10));
            f466(v2418, "b", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV162, 1, 1, 0, 10, 10));
            f466(v2418, "f", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16222, 1, 1, 0, 10, 10));
            f466(v2418, "sw", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "gw", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "dw", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "a", new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 1, 1, 0, 10, 10));
            f466(v2418, "cs", new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 1, 1, 0, 10, 10));
            f466(v2418, "plm", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1623, 1, 1, 0, 10, 10));
            f466(v2418, "re", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "c", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "m", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV164, 1, 1, 0, 10, 10));
            f466(v2418, "coa", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 1, 1, 0, 10, 10));
            f466(v2418, "cop", new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 1, 1, 0, 10, 10));
            f466(v2418, "iro", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "top", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "sap", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV162, 1, 1, 0, 10, 10));
            f466(v2418, "jad", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "rub", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 1, 1, 0, 10, 10));
            f466(v2418, "aqu", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16223, 1, 1, 0, 10, 10));
            f466(v2418, "jut", new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVVV1623, 1, 1, 0, 10, 10));
            f466(v2418, "jub", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
            f466(v2418, "jus", new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 1, 1, 0, 10, 10));
            f466(v2418, "jus", new ⵠⵠΔ.ΔⲆⵠⲆ(vVV163, 1, 1, 0, 10, 10));
            f466(v2418, "bap", new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1, 0, 10, 10));
          } else {
            p1554.ⵠΔⲆΔ[v2416][v2417] = [];
          }
        }
      }
    };
    this.time = v594.ΔⲆᐃ;
    this.ⲆⵠΔΔΔ = {
      ⵠⵠΔⵠᐃ: 0,
      translate: {
        y: 0,
        x: 0
      },
      ᐃΔΔⵠᐃ: 0,
      now: 0
    };
    this.ⲆⵠⵠᐃⲆᐃᐃⵠⲆ = function () {
      this.ᐃΔⵠⲆⵠ = [];
      this.ⲆⵠΔ[0] = [];
      this.ⲆⵠΔ[2] = [];
      this.ⲆⵠΔ[1] = [];
      this.ⲆⵠΔ[6] = [];
      this.ⲆⵠΔ[3] = [];
      this.ⲆⵠΔ[5] = [];
      this.ⲆⵠΔ[12] = [];
      this.ⲆⵠΔ[13] = [];
      this.ⲆⵠΔ[14] = [];
      this.ⲆⵠΔ[20] = [];
      this.ⲆⵠΔ[61] = [];
      this.ⲆⵠΔ[39] = [];
      this.ⲆⵠΔ[65] = [];
      this.ⲆⵠΔ[47] = [];
      this.ⲆⵠΔ[42] = [];
      this.ⲆⵠΔ[40] = [];
      this.ⲆⵠΔ[64] = [];
      this.ⲆⵠΔ[46] = [];
      this.ⲆⵠΔ[52] = [];
      this.ⲆⵠΔ[53] = [];
      this.ⲆⵠΔ[63] = [];
      this.ⲆⵠΔ[66] = [];
      this.ⲆⵠΔ[48] = [];
      this.ⲆⵠΔ[49] = [];
      this.ⲆⵠΔ[41] = [];
      this.ⲆⵠΔ[24] = [];
      this.ⲆⵠΔ[25] = [];
      this.ⲆⵠΔ[26] = [];
      this.ⲆⵠΔ[27] = [];
      this.ⲆⵠΔ[28] = [];
      this.ⲆⵠΔ[29] = [];
      this.ⲆⵠΔ[30] = [];
      this.ⲆⵠΔ[31] = [];
      this.ⲆⵠΔ[32] = [];
      this.ⲆⵠΔ[33] = [];
      this.ⲆⵠΔ[34] = [];
      this.ⲆⵠΔ[35] = [];
      this.ⲆⵠΔ[36] = [];
      this.ⲆⵠΔ[37] = [];
      this.ⲆⵠΔ[44] = [];
      this.ⲆⵠΔ[4] = [];
      this.ⲆⵠΔ[7] = [];
      this.ⲆⵠΔ[8] = [];
      this.ⲆⵠΔ[9] = [];
      this.ⲆⵠΔ[19] = [];
      this.ⲆⵠΔ[59] = [];
      this.ⲆⵠΔ[50] = [];
      this.ⲆⵠΔ[10] = [];
      this.ⲆⵠΔ[15] = [];
      this.ⲆⵠΔ[16] = [];
      this.ⲆⵠΔ[17] = [];
      this.ⲆⵠΔ[21] = [];
      this.ⲆⵠΔ[60] = [];
      this.ⲆⵠΔ[54] = [];
      this.ⲆⵠΔ[55] = [];
      this.ⲆⵠΔ[56] = [];
      this.ⲆⵠΔ[57] = [];
      this.ⲆⵠΔ[58] = [];
      this.ⲆⵠΔ[62] = [];
      this.ⲆⵠΔ[18] = [];
      this.ⲆⵠΔ[38] = [];
      this.ⲆⵠΔ[65] = [];
      this.ⲆⵠΔ[11] = [];
      this.ⲆⵠΔ[22] = [];
      this.ⲆⵠΔ[23] = [];
      this.ⲆⵠΔ[105] = [];
      this.ⲆⵠΔ[106] = [];
      this.ⲆⵠΔ[104] = [];
      this.ⲆⵠΔ[92] = [];
      this.ⲆⵠΔ[67] = [];
      this.ⲆⵠΔ[74] = [];
      this.ⲆⵠΔ[77] = [];
      this.ⲆⵠΔ[84] = [];
      this.ⲆⵠΔ[78] = [];
      this.ⲆⵠΔ[79] = [];
      this.ⲆⵠΔ[80] = [];
      this.ⲆⵠΔ[81] = [];
      this.ⲆⵠΔ[86] = [];
      this.ⲆⵠΔ[88] = [];
      this.ⲆⵠΔ[89] = [];
      this.ⲆⵠΔ[90] = [];
      this.ⲆⵠΔ[87] = [];
      this.ⲆⵠΔ[72] = [];
      this.ⲆⵠΔ[73] = [];
      this.ⲆⵠΔ[69] = [];
      this.ⲆⵠΔ[100] = [];
      this.ⲆⵠΔ[103] = [];
      this.ⲆⵠΔ[102] = [];
      this.ⲆⵠΔ[70] = [];
      this.ⲆⵠΔ[85] = [];
      this.ⲆⵠΔ[82] = [];
      this.ⲆⵠΔ[83] = [];
      this.ⲆⵠΔ[71] = [];
      this.ⲆⵠΔ[76] = [];
      this.ⲆⵠΔ[75] = [];
      this.ⲆⵠΔ[91] = [];
      this.ⲆⵠΔ[101] = [];
      this.ⲆⵠΔ[95] = [];
      this.ⲆⵠΔ[96] = [];
      this.ⲆⵠΔ[97] = [];
      this.ⲆⵠΔ[93] = [];
      this.ⲆⵠΔ[94] = [];
      this.ⲆⵠΔ[98] = [];
      this.ⲆⵠΔ[43] = [];
      this.ⲆⵠΔ[45] = [];
      this.ⲆⵠΔ[68] = [];
      this.ⲆⵠΔ[99] = [];
      this.ⲆⵠΔ[51] = [];
    };
    this.ⵠⲆⲆⵠΔᐃᐃᐃᐃ = function (p1555) {
      if (this.ᐃΔⵠⲆⵠ[p1555]) {
        ΔⲆⵠΔ = this.ᐃΔⵠⲆⵠ[p1555].type;
        this.ᐃΔⵠⲆⵠ[p1555] = null;
        for (var v2422 = this.ⲆⵠΔ[ΔⲆⵠΔ], v2423 = 0; v2422.length > v2423; v2423++) {
          if (p1555 == v2422[v2423].ᐃᐃⲆⵠ) {
            v2422.splice(v2423, 1);
            return;
          }
        }
      }
    };
    this.ᐃⵠⲆᐃΔᐃⵠᐃⲆ = function (p1556, p1557) {
      for (var v2424 = 0; v2424 < this.ⲆⵠΔ[65].length; v2424++) {
        var v2425 = this.ⲆⵠΔ[65][v2424];
        if (p1557 === Math.floor(v2425.x / 100) && p1556 === Math.floor(v2425.y / 100)) {
          return 1;
        }
      }
      return 0;
    };
    this.ᐃⵠⵠⲆⲆᐃⵠΔᐃ = function (p1558, p1559) {
      for (var v2426 = 0; this.ⲆⵠΔ[39].length > v2426; v2426++) {
        var v2427 = this.ⲆⵠΔ[39][v2426];
        if (p1558 == Math.floor(v2427.x / 100) && Math.floor(v2427.y / 100) == p1559) {
          return vVVVV12222;
        }
      }
      return false;
    };
    this.ᐃᐃⲆⲆⲆ = function (p1560) {
      for (var v2428 = 0; p1560.length > v2428; v2428++) {
        ⲆⲆᐃⵠ = p1560[v2428];
        if (ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ != ⲆⲆᐃⵠ.angle) {
          var v2429 = Math.PI * 2;
          ⲆⲆᐃⵠ.angle = (ⲆⲆᐃⵠ.angle + v2429) % v2429;
          ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ = (ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ + v2429) % v2429;
          if (ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ != ⲆⲆᐃⵠ.angle) {
            var v2430 = ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ - ⲆⲆᐃⵠ.angle;
            var v2431 = Math.abs(v2430);
            if (v2431 > Math.PI) {
              v2431 = Math.PI * 2 - v2431;
            }
            var v2432 = v2431 / Math.PI * 3 * 10 * v3091;
            if (Math.PI < v2430) {
              ⲆⲆᐃⵠ.angle -= v2432;
            } else if (-Math.PI > v2430) {
              ⲆⲆᐃⵠ.angle += v2432;
            } else if (v2430 < 0) {
              ⲆⲆᐃⵠ.angle -= v2432;
            } else {
              ⲆⲆᐃⵠ.angle += v2432;
            }
            ⲆⲆᐃⵠ.angle = (ⲆⲆᐃⵠ.angle + v2429) % v2429;
            if (v2432 > Math.abs(ⲆⲆᐃⵠ.angle - ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ)) {
              ⲆⲆᐃⵠ.angle = ⲆⲆᐃⵠ.ⲆᐃⲆΔⲆᐃΔ;
            }
          }
        }
        Math.floor(ⲆⲆᐃⵠ.r.y / 100);
        Math.floor(ⲆⲆᐃⵠ.r.x / 100);
        if (ⲆⲆᐃⵠ.x != ⲆⲆᐃⵠ.r.x || ⲆⲆᐃⵠ.y != ⲆⲆᐃⵠ.r.y) {
          if (ⲆⲆᐃⵠ.action & 64) {
            ⲆⲆᐃⵠ.action -= 64;
          }
          ⲆⲆᐃⵠ.action |= 32;
          var v2433 = ⵠⵠΔ.ⲆᐃⵠⵠΔΔⵠ(ⲆⲆᐃⵠ, ⲆⲆᐃⵠ.r) + Math.PI;
          var v2434 = v3091 * ⲆⲆᐃⵠ.ⲆᐃᐃΔⵠ;
          var v2435 = ⵠⵠΔ.ΔⲆⵠⲆᐃᐃⲆ(v2434, v2433);
          if (ⵠⵠΔ.ᐃΔΔᐃᐃΔⲆ(v2435) < ⵠⵠΔ.ᐃΔΔᐃᐃΔⲆ(ⵠⵠΔ.ᐃΔᐃᐃⲆΔΔ(ⲆⲆᐃⵠ, ⲆⲆᐃⵠ.r))) {
            ⵠⵠΔ.ΔᐃΔᐃΔΔΔ(ⲆⲆᐃⵠ, v2435);
          } else {
            if (ⲆⲆᐃⵠ.action & 32) {
              ⲆⲆᐃⵠ.action -= 32;
            }
            ⲆⲆᐃⵠ.action |= 64;
            ⵠⵠΔ.ⲆΔᐃᐃⲆᐃⲆ(ⲆⲆᐃⵠ.r, ⲆⲆᐃⵠ);
          }
        }
        if (ⲆⲆᐃⵠ.ᐃΔΔᐃᐃ) {
          var v2436 = ⲆⲆᐃⵠ.bubbles;
          if ((v2440 = v2436.length) === 0 || v594.ΔⲆᐃⲆᐃⲆⵠ > v2440 && v2436[v2440 - 1].ᐃⵠΔΔΔ < 0.95) {
            v2436.push({
              id: Math.floor(Math.random() * ⵠΔ[678][0].length),
              x: Math.floor(ⲆⲆᐃⵠ.x + Math.random() * 80 - 40),
              y: Math.floor(ⲆⲆᐃⵠ.y + Math.random() * 80 - 40),
              ᐃⵠΔΔΔ: 1
            });
          }
          for (var v2437 = 0; v2437 < v2440; v2437++) {
            v2436[v2437].ᐃⵠΔΔΔ = Math.max(0, v2436[v2437].ᐃⵠΔΔΔ - v3091);
          }
          for (v2437 = 0; v2440 > v2437; v2437++) {
            if (v2436[v2437].ᐃⵠΔΔΔ === 0) {
              v2436.splice(v2437, 1);
              break;
            }
          }
        }
        var v2438 = 0;
        if (ⲆⲆᐃⵠ.ⵠⲆΔᐃ && v2858.ᐃᐃΔⵠⵠ) {
          var v2439 = ⲆⲆᐃⵠ.ΔⵠⵠΔⵠ;
          var v2440 = v2439.length;
          if (ⲆⲆᐃⵠ.ⵠᐃⵠΔᐃᐃᐃ > 0 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 337 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 338 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 340 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 355 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 354 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 339 && ⲆⲆᐃⵠ.ⵠⵠⵠⵠ !== 164 && !ⲆⲆᐃⵠ.ᐃΔΔᐃᐃ && (v2438 = 1, v2440 === 0 || ⵠⵠΔ.ᐃᐃⵠⲆ(v2439[v2440 - 1], ⲆⲆᐃⵠ) > v594.ΔᐃⵠᐃΔᐃⲆ)) {
            var v2441 = -ⲆⲆᐃⵠ.angle;
            var v2442 = Math.cos(v2441) * 45 * v414;
            var v2443 = v414 * (Math.sin(v2441) * 45);
            v2439.push({
              x: ⲆⲆᐃⵠ.x + v2442,
              y: ⲆⲆᐃⵠ.y + v2443,
              r: 8,
              alpha: 0.8
            });
            v2439.push({
              x: ⲆⲆᐃⵠ.x - v2442,
              y: ⲆⲆᐃⵠ.y - v2443,
              r: 8,
              alpha: 0.8
            });
            v2439.push({
              x: ⲆⲆᐃⵠ.x,
              y: ⲆⲆᐃⵠ.y,
              r: 24,
              alpha: 1
            });
          }
          for (v2437 = 0; v2440 > v2437; v2437++) {
            v2439[v2437].alpha = Math.max(0, v2439[v2437].alpha - v3091 / 2.2);
            v2439[v2437].r += v3091 * 20;
          }
          if (v2439.length > 0 && v2439[0].alpha === 0) {
            v2439.splice(0, 1);
          }
          var v2444 = ⲆⲆᐃⵠ.ᐃⵠΔΔⵠ;
          v2440 = v2444.length;
          var v2445 = -1;
          var v2446 = Math.max(0, Math.sign(ⲆⲆᐃⵠ.ⲆⲆⲆⵠΔⲆⵠ));
          var v2447 = Math.max(0, Math.sign(ⲆⲆᐃⵠ.ⲆⵠΔⲆΔ));
          Math.max(0, Math.sign(ⲆⲆᐃⵠ.ⵠᐃᐃᐃΔ));
          var v2448 = Math.max(0, Math.sign(ⲆⲆᐃⵠ.ⲆⵠⵠᐃⲆ));
          var v2449 = Math.max(0, Math.sign(ⲆⲆᐃⵠ.ΔᐃΔⲆᐃ));
          if (ⲆⲆᐃⵠ.ⲆⲆⲆⵠΔⲆⵠ > 0 || ⲆⲆᐃⵠ.ⵠᐃᐃᐃΔ > 0) {
            v2445 = 821;
          } else if (ⲆⲆᐃⵠ.ΔᐃΔⲆᐃ > 0) {
            v2445 = 899;
          } else if (ⲆⲆᐃⵠ.ⲆⵠΔⲆΔ > 0) {
            v2445 = 613;
          } else if (ⲆⲆᐃⵠ.ⲆⵠⵠᐃⲆ > 0) {
            v2445 = 614;
          }
          if (ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 335 && (v2446 | v2447 | v2448 | v2449) == 1) {
            v2445 = 338;
            var v2450 = ⲆⲆᐃⵠ.ⵠⲆᐃᐃᐃ - Math.PI / 2;
            var v2451 = 15;
            var v2452 = 11;
            var v2453 = v594.ⵠΔⵠⲆⲆΔΔ;
          } else if (ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 349 && (v2446 | v2447 | v2448 | v2449) == 1) {
            v2445 = 359;
            v2450 = ⲆⲆᐃⵠ.ⵠⲆᐃᐃᐃ - Math.PI / 2;
            v2451 = 21;
            v2452 = 16;
            v2453 = v594.ⵠΔⵠⲆⲆΔΔ;
          } else if (ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 336 && (v2446 | v2447 | v2448 | v2449) === 1) {
            v2445 = 344;
            v2450 = ⲆⲆᐃⵠ.ⵠⲆᐃᐃᐃ - Math.PI / 2;
            var v2454 = Math.random() * 50;
            v2451 = 10 + v2454;
            v2452 = 0 + v2454;
            v2453 = v594.ⵠΔⵠⲆⲆΔΔ * 0.9;
          } else {
            v2450 = ⲆⲆᐃⵠ.angle;
            v2451 = 15;
            v2452 = 11;
            v2453 = v594.ⵠΔⵠⲆⲆΔΔ;
          }
          if (ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 337 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 338 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 354 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 355 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 164 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 339 || ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 340 || ⲆⲆᐃⵠ.ᐃΔΔᐃᐃ) ;else if (ⲆⲆᐃⵠ.ⵠⵠⵠⵠ === 334) {
            if (v2440 === 0 || v594.ⵠⲆΔΔᐃⵠⵠ < ⵠⵠΔ.ᐃᐃⵠⲆ(v2444[v2440 - 1], ⲆⲆᐃⵠ)) {
              v2444.push({
                x: ⲆⲆᐃⵠ.x,
                y: ⲆⲆᐃⵠ.y,
                angle: ⲆⲆᐃⵠ.ⵠⲆᐃᐃᐃ,
                alpha: 1,
                id: 336
              });
            }
          } else if (v2445 != -1 && v2438 === 0 && (v2440 === 0 || ⵠⵠΔ.ᐃᐃⵠⲆ(v2444[v2440 - 1], ⲆⲆᐃⵠ) > v2453)) {
            ⲆⲆᐃⵠ.ΔⲆΔΔⲆⵠⲆ++;
            if (Math.abs(ⲆⲆᐃⵠ.x - ⲆⲆᐃⵠ.r.x) > 1 && Math.abs(ⲆⲆᐃⵠ.y - ⲆⲆᐃⵠ.r.y) > 1) {
              if (ⲆⲆᐃⵠ.r.x > ⲆⲆᐃⵠ.x && ⲆⲆᐃⵠ.r.y < ⲆⲆᐃⵠ.y || ⲆⲆᐃⵠ.x > ⲆⲆᐃⵠ.r.x && ⲆⲆᐃⵠ.y < ⲆⲆᐃⵠ.r.y) {
                if (ⲆⲆᐃⵠ.ΔⲆΔΔⲆⵠⲆ % 2) {
                  v2442 = v414 * -v2452;
                  v2443 = v414 * -v2452;
                } else {
                  v2443 = v2452 * v414;
                  v2442 = v2452 * v414;
                }
              } else if (ⲆⲆᐃⵠ.ΔⲆΔΔⲆⵠⲆ % 2) {
                v2442 = v2452 * v414;
                v2443 = -v2452 * v414;
              } else {
                v2443 = v414 * v2452;
                v2442 = -v2452 * v414;
              }
            } else if (ⲆⲆᐃⵠ.ΔⲆΔΔⲆⵠⲆ % 2) {
              v2442 = v414 * (v2451 * Math.cos(v2450));
              v2443 = v414 * (v2451 * Math.sin(v2450));
            } else {
              v2442 = v414 * (-Math.cos(v2450) * v2451);
              v2443 = v2451 * -Math.sin(v2450) * v414;
            }
            v2444.push({
              x: ⲆⲆᐃⵠ.x + v2442,
              y: ⲆⲆᐃⵠ.y + v2443,
              angle: v2450 + Math.PI / 2,
              alpha: 1,
              id: v2445
            });
          }
          for (v2437 = 0; v2440 > v2437; v2437++) {
            if (v2444[v2437].id === 336) {
              v2444[v2437].alpha = Math.max(0, v2444[v2437].alpha - v3091 * 1.5);
            } else {
              v2444[v2437].alpha = Math.max(0, v2444[v2437].alpha - v3091 / 2.85);
            }
          }
          if (v2444.length > 0 && v2444[0].alpha === 0) {
            v2444.splice(0, 1);
          }
        }
      }
    };
    this.ⵠΔᐃ = function () {
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[0]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[92]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[67]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[74]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[77]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[84]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[78]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[79]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[80]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[81]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[86]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[88]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[89]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[90]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[87]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[68]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[69]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[100]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[103]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[102]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[70]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[85]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[82]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[83]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[71]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[75]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[72]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[73]);
      this.ᐃᐃⲆⲆⲆ(this.ⲆⵠΔ[76]);
    };
    this.ⵠⲆⵠΔ = [];
    this.ⵠⲆⵠΔ[839] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV165, 1, 1.05, 1, 0.008, 0.008);
    this.ⵠⲆⵠΔ[838] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 1, 1.08, 1, 0.006, 0.006);
    this.ⵠⲆⵠΔ[913] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVVV1623, 1, 1.02, 1, 0.008, 0.008);
    this.ⵠⲆⵠΔ[914] = new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 1, 1.08, 1, 0.006, 0.006);
    this.ΔⲆΔⵠΔ = [];
    this.ΔⲆΔⵠΔ[0] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.1, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[1] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.4, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[2] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.3, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[3] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVV162, 0.8, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[4] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16, 0.3, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[5] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1623, 0.8, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[6] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.5, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[7] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.9, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[8] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.6, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[9] = new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 0.2, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[10] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.6, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[11] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV163, 0.4, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[12] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVV1623, 0.8, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[13] = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16223, 0.2, 1, 0, 0.6, 0.6);
    this.ΔⲆΔⵠΔ[14] = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0.7, 1, 0, 0.6, 0.6);
  }
  function f467() {
    this.ᐃΔⵠⵠΔ = "";
    this.ⵠⲆⲆΔ = 0;
    this.ᐃⲆΔΔⲆ = 0;
    this.ⵠᐃⲆⵠᐃ = 0;
    this.ⵠⲆΔΔᐃᐃᐃ = 0;
    this.ᐃᐃᐃⵠⲆ = 0;
    this.ⵠᐃᐃⵠᐃ = 0;
    this.ᐃⲆⵠΔⲆ = 0;
    this.level = 0;
    this.label = null;
    this.ᐃⲆΔⲆⲆᐃΔ = null;
    this.ᐃΔⵠᐃⲆⵠᐃ = null;
    this.ᐃᐃⲆΔⲆ = false;
    this.ΔⲆΔΔᐃ = 0;
  }
  function f468(p1561, p1562, p1563, p1564) {
    this.id = p1561;
    this.ⲆᐃᐃΔⵠ = (p1561 + 5) * 8;
    this.ᐃⵠΔΔΔ = v408 / 1366;
    this.x = p1562;
    this.y = p1563;
    this.c = Math.sin(p1564);
    this.ⵠᐃⲆⲆ = Math.cos(p1564);
    this.alpha = 0;
  }
  function f472() {
    Math.random();
    return "o";
  }
  function f481() {
    Math.random();
    return "p";
  }
  function f477() {
    Math.random();
    return "t";
  }
  function f472() {
    Math.random();
    return "o";
  }
  function f473() {
    Math.random();
    return "r";
  }
  function f474() {
    Math.random();
    return "C";
  }
  function f475() {
    Math.random();
    return "s";
  }
  function f476() {
    Math.random();
    return "d";
  }
  function f477() {
    Math.random();
    return "t";
  }
  ⲆΔⵠⵠΔⲆⵠᐃΔ = 1;
  const v2455 = String.fromCharCode;
  const vV2455 = v2455(101);
  const vV24552 = v2455(118);
  const vV24553 = v2455(97);
  const vV24554 = v2455(108);
  function f478() {
    Math.random();
    return "i";
  }
  function f485() {
    Math.random();
    return "a";
  }
  function f480() {
    Math.random();
    return "n";
  }
  function f481() {
    Math.random();
    return "p";
  }
  function f482() {
    this.ⵠⵠΔⵠᐃ = function () {};
    this.ΔΔⲆⲆΔ = {
      ΔᐃᐃΔⵠ: 1,
      ΔⲆⲆᐃ: 1,
      open: vVV162
    };
    this.ΔⲆⲆᐃⲆ = {
      ΔᐃᐃΔⵠ: -1,
      open: vVVVV1623,
      ΔⲆⲆᐃ: 1
    };
    this.Ⲇᐃⵠⵠ = {
      ᐃᐃⲆᐃΔⲆΔ: 0,
      ΔᐃⲆᐃΔⲆⲆ: 0,
      ΔⲆⲆᐃ: 1,
      ΔᐃᐃΔⵠ: -1,
      open: v16
    };
    this.ⵠΔᐃⵠ = {
      ΔᐃⲆΔΔᐃⲆ: 0,
      ⵠᐃⵠᐃⲆΔⲆ: 0,
      type: 0,
      ΔⵠⲆᐃᐃⵠᐃ: 0,
      ΔⲆⲆᐃ: 1,
      ΔᐃᐃΔⵠ: -1,
      open: vVVV1622
    };
    this.ⵠᐃⲆΔ = {
      ΔⲆⲆᐃ: 1,
      open: vVVV16223,
      ΔᐃⲆΔΔᐃⲆ: 0,
      ᐃᐃⲆᐃᐃᐃᐃ: 0,
      ΔᐃᐃΔⵠ: -1,
      ΔᐃⲆᐃΔⲆⲆ: 0
    };
    this.sign = {
      ΔᐃᐃΔⵠ: -1,
      open: vV163
    };
    this.ᐃΔⵠᐃᐃ = {
      ᐃΔΔⲆ: 0,
      ΔⲆⲆᐃ: 1,
      ΔᐃᐃΔⵠ: -1,
      open: false
    };
    this.ᐃΔΔᐃᐃ = {
      enabled: false,
      ᐃⵠⲆΔⲆ: -1,
      label: false,
      now: -1,
      ⲆⵠⲆᐃ: f408
    };
    this.ᐃᐃᐃᐃ = {
      id: -1,
      ᐃΔΔⲆ: 0,
      ΔⲆⲆᐃ: 1,
      ΔᐃᐃΔⵠ: -1,
      open: false,
      lock: false,
      locked: vVVV16,
      ⲆⵠⲆⲆᐃⵠᐃ: false,
      ΔⵠΔΔⵠⲆᐃ: false
    };
    this.ᐃᐃⲆΔⲆ = vV124;
    this.reconnect = {
      enabled: false,
      rotate: 0
    };
    this.key = ⵠⵠΔ.ⲆᐃᐃΔⲆⲆⲆ("key", vWindow.location.href);
    var v2456 = ⵠⵠΔ.ⲆᐃᐃΔⲆⲆⲆ("egg", vWindow.location.href);
    if (v2456) {
      v2858.ⵠⲆⲆΔ = parseInt(v2456);
    }
    this.beta = vWindow.location.href.indexOf("http://starve.io/beta") === 0 ? 1 : 0;
    if (this.key && this.beta) {
      ⵠⲆΔⲆ.set("starve_beta", this.key);
    } else if (this.beta) {
      this.key = ⵠⲆΔⲆ.get("starve_beta");
    }
    this.ᐃⵠΔᐃⲆ = ⵠⲆΔⲆ.get("starve_token") ? ⵠⲆΔⲆ.get("starve_token") : ⵠⵠΔ.ⵠᐃΔⵠⲆΔᐃ(14);
    vWindow.baguette();
    var v2457 = vWindow.kot2;
    this.ⵠᐃᐃΔⲆᐃΔⵠᐃ = 126;
    this.ⵠᐃⲆⵠⵠΔΔΔⵠ = 128;
    this.ⵠᐃⲆⵠⵠΔΔΔⵠ;
    this.ⵠᐃᐃΔⲆᐃΔⵠᐃ;
    var v2458 = 161;
    if (v2458 > 3) {
      v2458 = 2;
    }
    this.ᐃⵠΔᐃⲆ = v2457.substring(0, 6) + this.ᐃⵠΔᐃⲆ.substring(6);
    var v2459 = 108;
    if (v2459 === 5) {
      v2459 = 192;
    }
    this.ᐃⵠᐃⲆᐃⵠΔⵠΔ = 239;
    this.ΔᐃᐃⲆⲆᐃⲆ = 148;
    this.ᐃⵠᐃⲆᐃⵠΔⵠΔ;
    this.ΔᐃᐃⲆⲆᐃⲆ;
    this.ⵠΔΔⵠⲆⲆᐃ = ⵠⲆΔⲆ.get("starve_token_id") ? ⵠⲆΔⲆ.get("starve_token_id") : "";
    this.id = 0;
    this.ᐃⵠⲆⲆⵠⲆⲆⲆᐃ = 286;
    this.ⲆⵠⵠᐃΔⲆⵠ = 61;
    this.ΔᐃⲆᐃΔⲆⵠ = 15;
    this.ΔᐃⲆᐃΔⲆⵠ.ⵠᐃⲆᐃⲆⵠⵠ = 12;
    this.ᐃᐃⲆⵠ = 0;
    this.ᐃⵠᐃⵠᐃᐃΔᐃⲆ = false;
    this.ΔⲆΔⲆᐃᐃⲆΔⵠ = -212;
    this.ⵠᐃⵠ = 0;
    this.ⲆᐃΔΔⵠᐃⲆⲆΔ = vVVV1623;
    this.ᐃⲆΔⲆᐃⲆΔ = {
      ΔΔⵠⵠᐃᐃⲆ: 0,
      ⵠⵠΔᐃⵠⲆΔ: 0,
      ⵠΔΔⲆᐃΔⵠ: "",
      ΔⲆΔΔᐃ: 0
    };
    this.ΔΔΔⵠⵠᐃᐃⲆⲆ = {
      connected: 0,
      ΔΔⵠΔⵠⵠⵠ: new Date().getTime()
    };
    this.ΔᐃⲆᐃⲆ = [];
    this.ⵠΔⲆᐃⵠᐃΔᐃⵠ = 103;
    this.ΔⲆΔⵠᐃΔⲆΔⲆ = 172;
    this.ΔⲆΔⵠᐃΔⲆΔⲆ;
    this.ⵠΔⲆᐃⵠᐃΔᐃⵠ;
    this.ᐃⵠⲆⵠⵠⲆᐃΔΔ = 137;
    this.ⲆⲆΔⲆⲆΔᐃΔⵠ = vVVV16;
    this.ᐃᐃΔΔΔⲆΔΔⵠ = 34;
    this.ᐃⵠⲆⵠⵠⲆᐃΔΔ;
    this.ᐃᐃΔΔΔⲆΔΔⵠ;
    this.ᐃⵠᐃᐃⵠⲆⵠ = function (p1565) {
      for (var v2460 = 0; v2460 < this.ΔᐃⲆᐃⲆ.length; v2460++) {
        if (this.ΔᐃⲆᐃⲆ[v2460] == p1565) {
          return vVV12;
        }
      }
      return vV16;
    };
    this.ⲆⵠⵠⵠΔ = {
      ᐃⵠⲆΔⲆ: 0,
      time: 0,
      value: 0,
      open: vVVV16,
      ⲆⵠⲆᐃ: function () {
        if (this.open) {
          var v2461 = new Date().getTime();
          this.time = Math.floor((v2461 - this.ᐃⵠⲆΔⲆ) / 1000);
          if (this.time < 60) {
            v3057.ⲆⵠⵠⵠΔ.button.ⲆⵠⲆᐃ(v407);
          } else {
            document.getElementById("shop_starterkit").style.display = "none";
            this.open = vVVV163;
          }
        }
      }
    };
    var v2462 = 99;
    if (v2462 >= 5) {
      v2462 = 207;
    }
    this.ΔᐃᐃⲆⲆ = {
      id: -1,
      ΔⲆⲆᐃ: -1,
      lock: 0,
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 1, 0, 1 / 30, 1),
      wait: false
    };
    this.ⵠⵠⲆⵠⵠ = {
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(vV163, 0, 1, 0, 1 / 5, 1),
      wait: false
    };
    this.ᐃⲆⵠᐃᐃⲆⵠΔᐃ = vVVVV1223;
    this.ⵠⲆⲆᐃᐃ = {
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV1622, 0, 1, 0, 1, 1),
      wait: vVVV16222
    };
    this.ⵠΔⵠⲆΔ = {
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1622, 0, 1, 0, 0.1, 1),
      wait: vVVV16
    };
    this.ᐃΔⲆⲆΔΔⲆⲆⲆ = 47;
    this.ΔΔⲆᐃᐃⵠⵠΔᐃ = this.ᐃΔⲆⲆΔΔⲆⲆⲆ;
    var v2463 = 74;
    this.ⵠⵠⵠᐃⵠⲆᐃⵠΔ = 1000;
    if (v2463 > 8) {
      v2463 = 113;
    }
    var v2464 = 244;
    if (v2464 >= 1) {
      v2464 = 44;
    }
    this.Δⵠⵠ = new ⵠⵠΔ.ᐃΔⵠΔⵠⵠⵠ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 0.4, 0, 0, v411, v412, v411, v412);
    this.Δⵠⵠ.ᐃⵠⲆΔⲆ = 0;
    this.Δⵠⵠ.ⵠΔⵠⵠⲆᐃᐃ = 0;
    this.ⲆⲆΔᐃᐃⵠᐃ = 174;
    this.Δⵠⵠ.ⵠΔᐃ = function () {
      if (this.ⵠΔⵠⵠⲆᐃᐃ > 0) {
        this.ⵠΔⵠⵠⲆᐃᐃ -= v3091;
      } else {
        var v2465 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
        if (v2465) {
          this.ᐃⵠⲆΔⲆ = 0;
          var v2466 = Math.max(Math.min(v411 - v2465.x, -2), 2 - v2859.w + v408);
          var v2467 = Math.max(Math.min(v412 - v2465.y, -2), 2 - v2859.ᐃⵠⵠ + v410);
          this.ᐃᐃᐃⵠΔⲆΔ({
            x: v2466,
            y: v2467
          });
        } else {
          this.ᐃⵠⲆΔⲆ += v3091;
          if (this.ᐃⵠⲆΔⲆ > 3) {
            this.ᐃⵠⲆΔⲆ = 0;
            if (!v2860.reconnect.enabled) {
              v2862.ᐃΔⲆΔᐃᐃΔⲆⵠ();
            }
          }
        }
      }
    };
    this.Δⵠⵠ.w = screen.width;
    this.Δⵠⵠ.ᐃⵠⵠ = screen.height;
    this.Δⵠⵠ.ⵠⵠΔⵠⲆⵠⵠ = this.Δⵠⵠ.w;
    this.Δⵠⵠ.ⲆⲆⲆᐃⲆⵠΔ = this.Δⵠⵠ.ᐃⵠⵠ;
    this.Δⵠⵠ.rx = 0;
    this.ΔⵠⲆᐃᐃⲆⲆ = 116;
    var v2468 = 111;
    var v2469 = 167;
    if (v2469 === 9) {
      v2469 = 170;
    }
    if (v2468 >= 0) {
      v2468 = 151;
    }
    this.ΔⵠᐃΔΔΔΔ = 202;
    this.ⲆᐃⵠⵠΔⵠΔⵠΔ = 187;
    this.ΔⵠⲆᐃᐃⲆⲆ;
    this.ΔⵠᐃΔΔΔΔ;
    var v2470 = 34;
    if (v2470 === 11) {
      v2470 = 90;
    }
    var v2471 = 185;
    if (v2471 == 9) {
      v2471 = 212;
    }
    this.Δⵠⵠ.ry = 0;
    this.Δⵠⵠ.ⲆⲆⲆᐃΔⵠⵠᐃΔ = 0;
    var v2472 = 35;
    if (v2472 == 5) {
      v2472 = 50;
    }
    this.ⵠᐃⲆᐃΔⲆⲆ = 263;
    this.Δⵠⵠ.ΔⲆΔⲆⵠⵠᐃⵠⵠ = 0;
    this.Δⵠⵠ.ⵠΔⲆΔΔ = function (p1566, p1567) {
      this.x = -Math.min(Math.max(-v2859.ⵠᐃᐃᐃΔΔᐃ * 2, p1566 - v2859.ⵠᐃᐃᐃΔΔᐃ - this.ⵠⵠΔⵠⲆⵠⵠ / 2), v2859.w - this.ⵠⵠΔⵠⲆⵠⵠ);
      this.y = -Math.min(Math.max(-v2859.ⵠΔΔᐃΔΔΔ * 2, p1567 - (v2859.ⵠΔΔᐃΔΔΔ + this.ⲆⲆⲆᐃⲆⵠΔ) / 2), v2859.ᐃⵠⵠ - this.ⲆⲆⲆᐃⲆⵠΔ + v2859.ⵠΔΔᐃΔΔΔ);
      this.ᐃⲆⵠⲆΔ = this.x;
      this.ⲆᐃⲆⲆⵠΔⲆ = this.y;
    };
    this.ᐃⵠⲆⵠⲆΔΔ = 21;
    this.ⲆΔⵠΔⵠΔⲆ = 65;
    this.ᐃⵠⲆⵠⲆΔΔ;
    this.ⲆΔⵠΔⵠΔⲆ;
    this.control = {
      angle: 0,
      timeout: 0,
      ⲆΔⵠⲆⲆΔⲆ: 0,
      ΔⲆⵠᐃ: 0,
      attack: 0,
      ⵠΔᐃ: function () {
        var v2473 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
        if (v2473) {
          var v2474 = {
            x: v2860.Δⵠⵠ.x + v2473.x,
            y: v2860.Δⵠⵠ.y + v2473.y
          };
        } else {
          v2474 = v413;
        }
        var v2475 = ⵠⵠΔ.ⲆᐃⵠⵠΔΔⵠ(v3090.ΔΔⲆΔ, v2474);
        var vVVVV16 = vVVV16;
        this.ΔⲆⵠᐃ += v3091;
        if (!v3090.state) {
          if (v2473 && !(v2473.action & 16) && this.ΔⲆⵠᐃ > 0.2) {
            this.attack = 1;
            vVVVV16 = true;
            this.ΔⲆⵠᐃ = 0;
            v2862.ΔⵠⵠⲆⲆⲆᐃᐃⵠ(v2475);
          }
        }
        if (v2473) {
          v2473.angle = v2475;
          v2473.ⲆᐃⲆΔⲆᐃΔ = v2475;
        }
        if (!vVVVV16) {
          this.timeout += v3091;
          if (this.timeout > 0.2) {
            this.timeout = 0;
            if (Math.abs(this.angle - v2475) > 0.005) {
              v2862.ᐃⵠΔΔΔⵠⵠⵠⲆ(v2475);
              this.angle = v2475;
            }
          }
        }
        if (!v2860.ⵠⲆΔΔⵠ.open && !v2860.ⲆΔⲆⵠΔ.open) {
          var v2476 = 0;
          if (v3086.ⵠΔᐃΔⲆⲆᐃ()) {
            v2476 |= 1;
          }
          if (v3086.ΔⵠⲆΔⲆᐃΔ()) {
            v2476 |= 2;
          }
          if (v3086.ⵠᐃᐃⵠⲆᐃΔ()) {
            v2476 |= 4;
          }
          if (v3086.ⲆⵠᐃᐃΔⵠⲆ()) {
            v2476 |= 8;
          }
          if (this.ⲆΔⵠⲆⲆΔⲆ != v2476) {
            v2862.ⲆⵠᐃΔΔⲆΔⵠΔ(v2476);
          }
          this.ⲆΔⵠⲆⲆΔⲆ = v2476;
        }
      }
    };
    this.ⲆᐃΔⲆ = {
      c: 1,
      Ⲇⵠᐃⵠ: 1,
      ᐃⵠⵠ: 1,
      ⵠⲆΔ: 1,
      ⵠⵠⲆ: 1,
      ΔΔᐃᐃⵠⲆΔ: 1,
      ΔΔΔⲆⲆᐃᐃ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV12, 0, 1, 0, 3, 3),
      ⵠᐃΔⵠΔᐃⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(vV124, 0, 1, 0, 2, 2),
      ⲆⵠᐃⵠᐃΔΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(true, 0, 1, 0, 3, 3),
      ΔⵠⵠΔΔΔⵠ: new ⵠⵠΔ.ΔⲆⵠⲆ(vVV1222, 0, 1, 0, 3, 3),
      ⵠⲆⵠΔᐃⲆΔ: new ⵠⵠΔ.ΔⲆⵠⲆ(true, 0, 1, 0, 3, 3),
      ΔⲆⵠⲆΔΔⲆ: new ⵠⵠΔ.ΔⲆⵠⲆ(true, 0, 1, 0, 3, 3),
      ⲆⲆⲆⵠⵠ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ᐃⵠΔΔΔ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ⵠΔᐃⵠᐃⵠⵠ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ⲆⵠΔⵠⲆⲆᐃ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ΔΔⲆⲆⵠⵠΔ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ᐃⲆⵠᐃⵠΔⲆ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆⲆⲆΔΔⵠ, 0, 1, 0, 0, 1),
      ⵠΔᐃ: function () {
        this.ΔΔΔⲆⲆᐃᐃ.ⵠΔᐃ();
        this.ⵠᐃΔⵠΔᐃⲆ.ⵠΔᐃ();
        this.ⲆⵠᐃⵠᐃΔΔ.ⵠΔᐃ();
        this.ΔⵠⵠΔΔΔⵠ.ⵠΔᐃ();
        this.ⵠⲆⵠΔᐃⲆΔ.ⵠΔᐃ();
        this.ΔⲆⵠⲆΔΔⲆ.ⵠΔᐃ();
        this.ⲆⲆⲆⵠⵠ.ᐃᐃᐃⵠΔⲆΔ(this.c);
        this.ᐃⵠΔΔΔ.ᐃᐃᐃⵠΔⲆΔ(this.Ⲇⵠᐃⵠ);
        this.ⵠΔᐃⵠᐃⵠⵠ.ᐃᐃᐃⵠΔⲆΔ(this.ᐃⵠⵠ);
        this.ⲆⵠΔⵠⲆⲆᐃ.ᐃᐃᐃⵠΔⲆΔ(this.ⵠⲆΔ);
        this.ΔΔⲆⲆⵠⵠΔ.ᐃᐃᐃⵠΔⲆΔ(this.ⵠⵠⲆ);
        this.ᐃⲆⵠᐃⵠΔⲆ.ᐃᐃᐃⵠΔⲆΔ(this.ΔΔᐃᐃⵠⲆΔ);
      }
    };
    var v2477 = 124;
    if (v2477 >= 4) {
      v2477 = 63;
    }
    this.ΔⲆⵠⵠⲆΔⵠ = false;
    this.ΔⲆᐃⵠΔⲆⵠ = false;
    this.ⵠⲆᐃᐃΔ = vVVV1622;
    this.ⲆⵠⵠⲆⵠⵠᐃⵠᐃ = 23575;
    this.ⵠΔⲆΔⲆᐃⵠ = vVVV16;
    var v2478 = 140;
    function f483() {
      this.seed = 1;
      this.ᐃΔΔⲆⵠΔᐃ = 2;
      this.ⲆΔⵠⲆᐃΔⲆ = 3;
      this.ᐃᐃᐃᐃΔᐃⲆⵠⵠ = 1;
      this.ⵠⲆΔⵠᐃᐃⵠΔΔ = 2;
      this.ᐃⵠΔΔΔΔⵠⲆᐃ = 3;
      this.ⵠΔⵠⲆᐃⲆⲆ = function (p1568) {
        this.seed = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠΔⵠΔΔΔᐃ = function (p1569) {
        this.ᐃΔΔⲆⵠΔᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠΔᐃᐃⲆⵠΔ = function (p1570) {
        this.ⲆΔⵠⲆᐃΔⲆ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠᐃΔⵠⵠⲆⵠΔΔ = function (p1571) {
        this.ᐃᐃᐃᐃΔᐃⲆⵠⵠ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⵠⲆⵠᐃⲆⲆⵠᐃᐃ = function (p1572) {
        this.ⵠⲆΔⵠᐃᐃⵠΔΔ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆⵠΔⲆⲆⲆⲆⵠⵠ = function (p1573) {
        this.ᐃⵠΔΔΔΔⵠⲆᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆΔᐃⵠΔⵠᐃ = function (p1574, p1575, p1576, p1577, p1578, p1579, p1580) {
        for (var v2479 = 1; p1580 > v2479;) {
          var v2480 = p1576 * v2479 % ᐃΔΔⵠᐃᐃᐃ;
          var v2481 = ᐃΔΔⵠⵠΔᐃ[v2480];
          if (v2481 < 0.1) {
            v2482 += 50;
            v2479 += 50;
          } else {
            var v2482 = Math.floor(v2481 * p1577 + p1578);
            if (v2479 > p1579 && v2479 < p1580) {
              var v2483 = Math.random() > 0.5 ? v3091 * -10 : v3091 * 10;
              var v2484 = v2482 * p1575;
              this.ΔⵠⲆΔⵠⵠΔ[v2480] = Math.max(-25, Math.min(25, this.ΔⵠⲆΔⵠⵠΔ[v2480] + v2483));
              this.ⵠᐃΔⲆᐃⵠᐃ[v2480] = Math.max(-8, Math.min(8, this.ⵠᐃΔⲆᐃⵠᐃ[v2480] + v2483));
              if (v2484 > 0) {
                v407.beginPath();
                v407.arc(v2479 + v2860.Δⵠⵠ.x + this.ⵠᐃΔⲆᐃⵠᐃ[v2480], p1574 + this.ΔⵠⲆΔⵠⵠΔ[v2480] - 20, v2484, 0, Math.PI * 2);
                if (v2859.transition) {
                  var v2485 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
                  v407.fillStyle = f417(83, 156, 160, 236, 247, 249, v2485);
                } else {
                  v407.fillStyle = v594.ΔΔⵠΔΔᐃᐃ[v2859.time];
                }
                v407.fill();
              }
            }
            v2479 += v2482 * 2;
          }
        }
      };
      this.ⲆᐃⲆⵠᐃΔᐃ = function (p1581, p1582, p1583, p1584, p1585, p1586, p1587) {
        for (var v2486 = 1; v2486 < p1587;) {
          var v2487 = p1583 * v2486 % ᐃΔΔⵠᐃᐃᐃ;
          var v2488 = ᐃΔΔⵠⵠΔᐃ[v2487];
          if (v2488 < 0.1) {
            v2489 += 50;
            v2486 += 50;
          } else {
            var v2489 = Math.floor(p1584 * v2488 + p1585);
            if (p1586 < v2486 && p1587 > v2486) {
              var v2490 = Math.random() > 0.5 ? v3091 * -10 : v3091 * 10;
              var v2491 = p1582 * v2489;
              this.ᐃⵠᐃⵠᐃ[v2487] = Math.max(-25, Math.min(25, this.ᐃⵠᐃⵠᐃ[v2487] + v2490));
              this.ΔⵠΔᐃΔ[v2487] = Math.max(-8, Math.min(8, this.ΔⵠΔᐃΔ[v2487] + v2490));
              if (v2491 > 0) {
                v407.beginPath();
                v407.arc(p1581 + this.ᐃⵠᐃⵠᐃ[v2487] - 20, v2486 + v2860.Δⵠⵠ.y + this.ΔⵠΔᐃΔ[v2487], v2491, 0, Math.PI * 2);
                if (v2859.transition) {
                  var v2492 = v2859.time ? 1 - v2859.ΔⲆᐃᐃ.ΔⲆⵠ : v2859.ΔⲆᐃᐃ.ΔⲆⵠ;
                  v407.fillStyle = f417(83, 156, 160, 236, 247, 249, v2492);
                } else {
                  v407.fillStyle = v594.ΔΔⵠΔΔᐃᐃ[v2859.time];
                }
                v407.fill();
              }
            }
            v2486 += v2489 * 2;
          }
        }
      };
      this.ΔⲆΔΔⵠⲆΔΔᐃ = function (p1588, p1589, p1590, p1591, p1592, p1593) {
        p1592 -= 30;
        p1593 += 30;
        if ((v2493 = -(p1590 - 0 - p1591 - 2) / 200) === 0) {
          this.ⵠΔᐃᐃⲆⵠΔ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2493);
        this.ⲆΔᐃⵠΔⵠᐃ(p1590, v2493, this.ⲆΔⵠⲆᐃΔⲆ, 18, 16, p1592, p1593);
        v407.globalAlpha = 1;
        var v2493 = -(p1588 - 250 - p1591 + 500) / 150;
        if (v2493 === 0) {
          this.ⵠΔⵠⲆᐃⲆⲆ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2493);
        this.ⲆΔᐃⵠΔⵠᐃ(p1588, v2493, this.seed, 12, 10, p1592, p1593);
        v407.globalAlpha = 1;
        if (p1589 !== -1) {
          if ((v2493 = -(p1589 - 350 - p1591 + 698) / 100) <= 0.01) {
            this.ⵠΔⵠΔΔΔᐃ();
          }
          v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2493);
          this.ⲆΔᐃⵠΔⵠᐃ(p1589, v2493, this.ᐃΔΔⲆⵠΔᐃ, 6, 6, p1592, p1593);
          v407.globalAlpha = 1;
        }
      };
      this.ΔᐃⵠⵠⵠᐃⵠⵠⲆ = function (p1594, p1595, p1596, p1597, p1598, p1599) {
        var v2494;
        p1598 -= 30;
        p1599 += 30;
        if ((v2494 = -(-p1596 + 0 + p1597 + 2) / 200) === 0) {
          this.ⵠΔᐃᐃⲆⵠΔ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2494);
        this.ⲆΔᐃⵠΔⵠᐃ(p1596, v2494, this.ⲆΔⵠⲆᐃΔⲆ, 18, 16, p1598, p1599);
        v407.globalAlpha = 1;
        if ((v2494 = -(-p1594 + 250 + p1597) / 150) === 0) {
          this.ⵠΔⵠⲆᐃⲆⲆ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2494);
        this.ⲆΔᐃⵠΔⵠᐃ(p1594, v2494, this.seed, 12, 10, p1598, p1599);
        v407.globalAlpha = 1;
        if (p1595 !== -1) {
          if ((v2494 = -(-p1595 + 350 + p1597) / 100) <= 0.01) {
            this.ⵠΔⵠΔΔΔᐃ();
          }
          v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2494);
          this.ⲆΔᐃⵠΔⵠᐃ(p1595, v2494, this.ᐃΔΔⲆⵠΔᐃ, 6, 6, p1598, p1599);
          v407.globalAlpha = 1;
        }
      };
      this.ᐃⲆΔⲆΔᐃⲆΔⵠ = function (p1600, p1601, p1602, p1603, p1604, p1605) {
        p1604 -= 30;
        p1605 += 30;
        if ((v2495 = -(-p1602 + 0 + p1603 + 2) / 200) === 0) {
          this.ⵠΔᐃᐃⲆⵠΔ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2495);
        this.ⲆᐃⲆⵠᐃΔᐃ(p1602, v2495, this.ⲆΔⵠⲆᐃΔⲆ, 18, 16, p1604, p1605);
        v407.globalAlpha = 1;
        var v2495 = -(-p1600 + 250 + p1603) / 150;
        if (v2495 === 0) {
          this.ⵠΔⵠⲆᐃⲆⲆ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2495);
        this.ⲆᐃⲆⵠᐃΔᐃ(p1600, v2495, this.seed, 12, 10, p1604, p1605);
        v407.globalAlpha = 1;
        if (p1601 !== -1) {
          if ((v2495 = -(-p1601 + 350 + p1603) / 100) <= 0.01) {
            this.ⵠΔⵠΔΔΔᐃ();
          }
          v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2495);
          this.ⲆᐃⲆⵠᐃΔᐃ(p1601, v2495, this.ᐃΔΔⲆⵠΔᐃ, 6, 6, p1604, p1605);
          v407.globalAlpha = 1;
        }
      };
      this.ΔΔΔΔⵠΔᐃⲆᐃ = function (p1606, p1607, p1608, p1609, p1610, p1611) {
        var v2496;
        p1610 -= 30;
        p1611 += 30;
        if ((v2496 = -(p1608 - 0 - p1609 - 2) / 200) === 0) {
          this.ⵠΔᐃᐃⲆⵠΔ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2496);
        this.ⲆᐃⲆⵠᐃΔᐃ(p1608, v2496, this.ⲆΔⵠⲆᐃΔⲆ, 18, 16, p1610, p1611);
        v407.globalAlpha = 1;
        if ((v2496 = -(p1606 - 250 - p1609 + 500) / 150) === 0) {
          this.ⵠΔⵠⲆᐃⲆⲆ();
        }
        v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2496);
        this.ⲆᐃⲆⵠᐃΔᐃ(p1606, v2496, this.seed, 12, 10, p1610, p1611);
        v407.globalAlpha = 1;
        if (p1607 !== -1) {
          if ((v2496 = -(p1607 - 350 - p1609 + 698) / 100) <= 0.01) {
            this.ⵠΔⵠΔΔΔᐃ();
          }
          v407.globalAlpha = ⵠⵠΔ.ⲆΔᐃᐃⵠ(v2496);
          this.ⲆᐃⲆⵠᐃΔᐃ(p1607, v2496, this.ᐃΔΔⲆⵠΔᐃ, 6, 6, p1610, p1611);
          v407.globalAlpha = 1;
        }
      };
      this.w1 = {
        r: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ⲆⵠΔⲆᐃⲆⵠ, 0, 10, 0, 0, 200),
        Ⲇⵠᐃⵠ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⲆΔⵠΔᐃⲆ, 0, 10, 200, 200, 0)
      };
      this.w2 = {
        r: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ᐃⵠⲆⵠⵠΔᐃ, 0, 10, 0, 0, 150),
        Ⲇⵠᐃⵠ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ⲆΔᐃᐃⵠ, 0, 10, 150, 150, 0)
      };
      this.w3 = {
        r: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ⲆⵠⲆⲆᐃᐃⵠ, 0, 10, 0, 0, 100),
        Ⲇⵠᐃⵠ: new ⵠⵠΔ.ΔΔΔᐃΔ(ⵠⵠΔ.ⲆΔᐃᐃⵠ, 0, 10, 100, 100, 0)
      };
      this.ΔⲆᐃΔΔᐃΔΔⵠ = function (p1612) {
        if (p1612.r.ᐃⲆⵠⲆΔ === p1612.r.x) {
          if (p1612.Ⲇⵠᐃⵠ.ᐃⲆⵠⲆΔ === p1612.Ⲇⵠᐃⵠ.x) {
            return p1612.r;
          } else {
            return p1612.Ⲇⵠᐃⵠ;
          }
        } else {
          return p1612.r;
        }
      };
      this.ⵠⲆΔ = function (p1613) {
        var v2497;
        if (p1613.r.ᐃⲆⵠⲆΔ === p1613.r.x) {
          if (p1613.Ⲇⵠᐃⵠ.ᐃⲆⵠⲆΔ === p1613.Ⲇⵠᐃⵠ.x) {
            p1613.r.ΔⵠⲆᐃⲆⲆΔ();
            p1613.Ⲇⵠᐃⵠ.ΔⵠⲆᐃⲆⲆΔ();
            v2497 = p1613.r;
          } else {
            v2497 = p1613.Ⲇⵠᐃⵠ;
          }
        } else {
          v2497 = p1613.r;
        }
        v2497.ᐃᐃᐃⵠΔⲆΔ(v2497.ᐃⲆⵠⲆΔ);
        return v2497;
      };
      this.ᐃⵠᐃⵠᐃ = [];
      this.ΔⵠΔᐃΔ = [];
      this.ΔⵠⲆΔⵠⵠΔ = [];
      this.ⵠᐃΔⲆᐃⵠᐃ = [];
      this.ⵠⵠΔⵠᐃ = function () {
        for (var v2498 = 0; v2498 < ᐃΔΔⵠᐃᐃᐃ; v2498++) {
          this.ᐃⵠᐃⵠᐃ[v2498] = Math.floor(ᐃΔΔⵠⵠΔᐃ[v2498] * 25);
          this.ΔⵠΔᐃΔ[v2498] = Math.floor(ᐃΔΔⵠⵠΔᐃ[v2498] * 8);
          this.ΔⵠⲆΔⵠⵠΔ[v2498] = Math.floor(ᐃΔΔⵠⵠΔᐃ[v2498] * 25);
          this.ⵠᐃΔⲆᐃⵠᐃ[v2498] = Math.floor(ᐃΔΔⵠⵠΔᐃ[v2498] * 8);
        }
        this.w1.r.x = this.w1.r.ᐃⲆⵠⲆΔ;
        this.w2.r.ᐃΔᐃⵠΔ = 3.5;
        this.w3.r.ᐃΔᐃⵠΔ = 2;
      };
      this.ⵠⵠΔⵠᐃ();
    }
    this.ΔⵠΔⲆⵠᐃⵠᐃΔ = 95;
    if (v2478 === 1) {
      v2478 = 133;
    }
    this.ΔⲆⵠⵠ = {
      max: 10,
      ᐃⵠⵠⵠᐃΔⲆ: 0,
      ⵠᐃⲆⵠᐃ: 0,
      ⵠⵠⵠᐃ: [],
      ⲆΔⵠΔᐃ: [],
      ᐃᐃⵠⲆΔΔΔ: function (p1614, p1615) {
        if (p1614 === 1) {
          this.ⵠᐃⲆⵠᐃ = v2289.ⲆⵠⲆᐃΔⵠᐃ;
        }
        this.ᐃⵠⵠⵠᐃΔⲆ += p1615;
        this.max = 10 + this.ᐃⵠⵠⵠᐃΔⲆ + this.ⵠᐃⲆⵠᐃ;
      },
      ᐃⵠⲆᐃⵠᐃⲆ: {
        item: -1,
        ⵠⵠ: null,
        ᐃᐃᐃᐃⵠⵠⲆ: 0,
        ᐃΔΔⲆⵠᐃⵠ: 0,
        ᐃΔⲆᐃᐃ: -1,
        ΔⲆΔᐃΔ: -1,
        ⵠᐃⵠⵠΔ: function (p1616) {
          if (!!this.ᐃᐃᐃᐃⵠⵠⲆ && (p1616.x !== this.ᐃΔⲆᐃᐃ || p1616.y !== this.ΔⲆΔᐃΔ)) {
            this.ᐃΔΔⲆⵠᐃⵠ = 1;
          }
        },
        start: function (p1617, p1618) {
          this.ᐃΔⲆᐃᐃ = p1618.x;
          this.ΔⲆΔᐃΔ = p1618.y;
          this.item = p1617;
          this.ⵠⵠ = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ[p1617].info.ⵠⵠ[2];
          this.ᐃᐃᐃᐃⵠⵠⲆ = 1;
        },
        stop: function () {
          this.ᐃᐃᐃᐃⵠⵠⲆ = 0;
          this.ᐃΔΔⲆⵠᐃⵠ = 0;
          this.ᐃΔⲆᐃᐃ = -1;
          this.ΔⲆΔᐃΔ = -1;
        },
        release: function () {
          var v2499 = -1;
          var v2500 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ;
          var v2501 = 0;
          if (this.ᐃᐃᐃᐃⵠⵠⲆ && this.ᐃΔΔⲆⵠᐃⵠ) {
            for (var v2502 = 0; v2502 < v2500.length; v2502++) {
              if (v2500[v2502].info.state === v2233) {
                v2499 = v2502;
                break;
              }
            }
            if (v2499 !== -1 && v2499 !== this.item && v2500[this.item]) {
              v2501 = 1;
              var v2503 = v2500[v2499];
              v2500[v2499] = v2500[this.item];
              v2500[this.item] = v2503;
              v3057.ⲆⲆᐃⵠⵠΔᐃ();
            }
          }
          this.stop();
          return v2501;
        },
        ⲆⵠⲆᐃ: function (p1619, p1620) {
          if (this.ᐃᐃᐃᐃⵠⵠⲆ && this.ᐃΔΔⲆⵠᐃⵠ) {
            f302(v407, this.ⵠⵠ, Math.floor(p1619 - this.ⵠⵠ.width / 2), Math.floor(p1620 - this.ⵠⵠ.height / 2));
          }
        }
      },
      ⵠⵠⲆΔΔⵠⲆΔᐃ: function (p1621) {
        for (v2550 = 0; v2550 < p1621.length; v2550++) {
          if (this.ⵠⵠⵠᐃ[p1621[v2550][0]] == p1621[v2550][1]) {
            return true;
          }
        }
        return vVVV16;
      },
      ΔΔⵠΔⵠ: function (p1622) {
        for (var v2504 = 0; v2504 < this.ⲆΔⵠΔᐃ.length; v2504++) {
          if (this.ⲆΔⵠΔᐃ[v2504].id == p1622) {
            return v2504;
          }
        }
        return -1;
      },
      ⵠᐃⲆⲆΔᐃᐃ: function (p1623, p1624) {
        this.ⵠⵠⵠᐃ[p1623] = 0;
        this.ⲆΔⵠΔᐃ.splice(p1624, 1);
        v3057.ⲆⲆᐃⵠⵠΔᐃ();
      },
      ⵠᐃᐃᐃᐃⲆΔ: function (p1625, p1626, p1627) {
        ⵠΔᐃ = true;
        this.ⵠⵠⵠᐃ[p1625] = Math.max(0, this.ⵠⵠⵠᐃ[p1625] - p1626);
        if (!this.ⵠⵠⵠᐃ[p1625] && p1627 >= 0) {
          this.ⵠᐃⲆⲆΔᐃᐃ(p1625, p1627);
        }
      }
    };
    this.ⵠⲆⲆᐃⲆΔⵠ = {
      enabled: vVVV16,
      translate: {
        x: 0,
        y: 0
      },
      ᐃⲆⲆΔΔᐃΔ: function () {
        if (v2859.mode == 1 && !v2860.ΔⲆᐃⵠΔⲆⵠ) {
          v2860.ⵠⲆⲆᐃⲆΔⵠ.enabled = !v2860.ⵠⲆⲆᐃⲆΔⵠ.enabled;
          if (v2860.ⵠⲆⲆᐃⲆΔⵠ.enabled) {
            v3057.options.ΔᐃΔⲆⵠΔⵠ.display = "inline-block";
          } else {
            v3057.options.ΔᐃΔⲆⵠΔⵠ.display = "none";
          }
        }
      }
    };
    v3057.options.ΔᐃΔⲆⵠΔⵠ.display = "none";
    this.ⵠᐃΔⵠᐃ = {
      enabled: false,
      translate: {
        y: 0,
        x: 0
      },
      ᐃⵠⲆΔⲆ: 0,
      ᐃⲆⲆΔΔᐃΔ: function () {
        v2860.ⵠᐃΔⵠᐃ.enabled = !v2860.ⵠᐃΔⵠᐃ.enabled;
        if (v2860.ⵠᐃΔⵠᐃ.enabled) {
          v3057.options.ⵠⲆᐃΔⵠⲆⵠ.display = "inline-block";
        } else {
          v3057.options.ⵠⲆᐃΔⵠⲆⵠ.display = "none";
        }
      },
      ⵠΔᐃ: function () {
        if (!!this.enabled && !(v2860.ⵠⲆᐃᐃ.id >= 0) && !v3057.ΔΔᐃᐃ.open) {
          this.ᐃⵠⲆΔⲆ += v3091;
          if (this.ᐃⵠⲆΔⲆ > 2) {
            this.ᐃⵠⲆΔⲆ = 0;
            if (v2860.ⲆᐃΔⲆ.ᐃⵠⵠ < 0.35) {
              if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[201]) {
                v2862.ΔⵠⵠΔᐃ(201, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(201));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[356]) {
                v2862.ΔⵠⵠΔᐃ(356, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(356));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[294]) {
                v2862.ΔⵠⵠΔᐃ(294, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(294));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[298]) {
                v2862.ΔⵠⵠΔᐃ(298, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(298));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[291]) {
                v2862.ΔⵠⵠΔᐃ(291, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(291));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[317]) {
                v2862.ΔⵠⵠΔᐃ(317, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(317));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[315]) {
                v2862.ΔⵠⵠΔᐃ(315, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(315));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[319]) {
                v2862.ΔⵠⵠΔᐃ(319, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(319));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[236]) {
                v2862.ΔⵠⵠΔᐃ(236, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(236));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[208]) {
                v2862.ΔⵠⵠΔᐃ(208, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(208));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[231]) {
                v2862.ΔⵠⵠΔᐃ(231, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(231));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[226]) {
                v2862.ΔⵠⵠΔᐃ(226, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(226));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[238]) {
                v2862.ΔⵠⵠΔᐃ(238, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(238));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[229]) {
                v2862.ΔⵠⵠΔᐃ(229, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(229));
              } else if (v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[299]) {
                v2862.ΔⵠⵠΔᐃ(299, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(299));
              }
            } else if (v2860.ⲆᐃΔⲆ.ⵠⲆΔ < 0.35 && v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[218]) {
              v2862.ΔⵠⵠΔᐃ(218, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(218));
            }
          }
        }
      }
    };
    v3057.options.ⵠⲆᐃΔⵠⲆⵠ.display = "none";
    this.ⵠⲆᐃᐃ = {
      id: -1,
      ⵠⵠⲆΔ: -1,
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 1, 0, 1, 1),
      ΔⵠΔⵠⵠ: false,
      ᐃⵠᐃᐃ: -1,
      mode: 0,
      label: [],
      ⵠᐃⵠΔᐃ: [],
      ᐃᐃⵠⵠᐃⲆΔ: vVV16,
      ⵠⲆⲆΔΔ: false,
      ΔⵠⵠⵠⵠⵠⲆ: vVVV1622,
      ΔⲆⲆᐃⲆ: vVVVV1623,
      ⵠΔΔⵠⲆⵠᐃⲆᐃ: function () {
        this.mode = this.mode === 0 ? 1 : 0;
      },
      ΔᐃᐃΔⵠⲆᐃⲆΔ: function (p1628) {
        this.ᐃᐃⵠⵠᐃⲆΔ = p1628;
        var v2505 = v3057.ΔΔᐃᐃ;
        if (v2505.open) {
          v2505.ⵠΔΔΔⵠᐃΔ(v2505.button);
        }
        this.ⵠΔᐃ();
      },
      ⲆⲆᐃΔⵠᐃⲆΔᐃ: function (p1629) {
        var v2506 = v722[p1629];
        this.id = p1629;
        this.ΔⵠΔⵠⵠ = true;
        v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
        this.timeout.ΔᐃⲆⲆⵠᐃᐃ = v2506.time * 8;
        this.ⵠⵠⲆΔ = v2506.ⵠⵠⲆΔ;
      },
      ⲆΔⲆΔᐃⲆᐃⲆᐃ: function (p1630) {
        var v2507 = v722[p1630];
        this.id = p1630;
        this.ΔⵠΔⵠⵠ = vVV1222;
        var v2508 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
        if (v2508 && v2508.right == 46) {
          this.timeout.ΔᐃⲆⲆⵠᐃᐃ = v2507.time * 3;
        } else {
          this.timeout.ΔᐃⲆⲆⵠᐃᐃ = v2507.time;
        }
        this.ⵠⵠⲆΔ = v2507.ⵠⵠⲆΔ;
        for (var v2509 = 0; v2509 < v2507.r.length; v2509++) {
          var v2510 = v2507.r[v2509];
          v2860.ΔⲆⵠⵠ.ⵠᐃᐃᐃᐃⲆΔ(v2510[0], v2510[1], v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(v2510[0]));
        }
        v3057.ⲆⲆᐃⵠⵠΔᐃ();
      },
      ⵠΔᐃ: function () {
        this.ⵠᐃⵠΔᐃ = [];
        if (v3057.ᐃⵠᐃᐃⵠ.ⵠⲆᐃᐃ === 1) {
          v3057.ᐃⵠᐃᐃⵠ.display = 0;
        }
        for (var v2511 in v722) {
          var v2512 = v722[v2511];
          if (v2512) {
            var vVVVVV12222 = vVVVV12222;
            if (v2512.r) {
              for (var v2513 = 0; v2513 < v2512.r.length; v2513++) {
                if (v2860.ΔⲆⵠⵠ.max >= 16 && v2512.id === 47) {
                  vVVVVV12222 = false;
                  break;
                }
                if (v2512.w > this.ᐃᐃⵠⵠᐃⲆΔ || v2512.f > this.ⵠⲆⲆΔΔ || v2512.ⵠⵠⲆ > this.ΔⵠⵠⵠⵠⵠⲆ || v2512.e > this.ΔⲆⲆᐃⲆ) {
                  vVVVVV12222 = vVVV16222;
                  break;
                }
                var v2514 = v2512.r[v2513];
                if (!v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[v2514[0]] || v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[v2514[0]] < v2514[1]) {
                  vVVVVV12222 = vVVV1622;
                  break;
                }
              }
              if (vVVVVV12222) {
                this.ⵠᐃⵠΔᐃ.push(v3057.ᐃⲆⵠ[v2512.id]);
              }
            }
          }
        }
        v3057.ⵠⵠⵠⲆᐃᐃⵠ();
        v3057.ⲆⵠⲆⵠⵠᐃᐃ();
        v3057.ᐃᐃᐃᐃⵠΔⲆ();
        v3057.ⵠⵠⵠⵠⵠⲆᐃ();
        v3057.ᐃΔᐃⲆⵠⵠΔ();
        v3057.ᐃⲆⵠΔᐃΔⵠ();
        v3057.sign.ᐃⲆΔΔⲆⵠΔ();
      },
      ΔⵠⲆᐃⲆⲆΔ: function () {
        this.id = -1;
        this.ΔⵠΔⵠⵠ = vVV162;
        this.timeout.ΔⲆⵠ = 0;
        this.timeout.ⵠⵠⲆ = false;
        this.ⵠΔᐃ();
      }
    };
    this.ΔᐃΔⵠⵠⲆΔ = {
      message: vVVVUndefined172,
      ⲆⵠⲆᐃ: f406
    };
    this.alert = {
      timeout: new ⵠⵠΔ.ΔⲆⵠⲆ(vV162, 1, 1, 0, 4, 0.3),
      text: "",
      label: null,
      ⲆⵠⲆᐃ: f405,
      list: []
    };
    this.ᐃᐃΔⵠⲆ = {
      ⵠΔΔ: document.createElement("canvas"),
      ⵠⵠΔⵠΔ: [],
      ⵠΔᐃ: true,
      translate: {
        x: 0,
        y: 0
      },
      sort: function () {
        var v2515 = [];
        for (var v2516 = v2859.ⵠⲆⵠⲆ, v2517 = 0; v2517 < v2516.length; v2517++) {
          if (v2516[v2517].ᐃᐃⲆΔⲆ) {
            v2515.push({
              id: v2517,
              ⵠᐃⲆⲆ: v2516[v2517].ΔⲆΔΔᐃ
            });
          }
        }
        v2515.sort(function (p1631, p1632) {
          return p1632.ⵠᐃⲆⲆ - p1631.ⵠᐃⲆⲆ;
        });
        this.ⵠⵠΔⵠΔ = [];
        for (v2517 = 0; v2517 < v2515.length && v2517 < 10; v2517++) {
          this.ⵠⵠΔⵠΔ.push(v2515[v2517].id);
        }
        this.ⵠΔᐃ = vVVVVV12232;
      },
      ⵠⵠΔⵠᐃ: function (p1633) {
        for (var v2518 = v2859.ⵠⲆⵠⲆ, v2519 = 0; v2519 < v2518.length; v2519++) {
          v2518[v2519].ΔⲆΔΔᐃ = 0;
        }
        v2518[v2860.id].ΔⲆΔΔᐃ = ⵠⵠΔ.ΔΔⲆⲆΔⲆΔ(p1633[1]);
        this.ⵠⵠΔⵠΔ = [];
        for (v2519 = 2; v2519 < p1633.length; v2519 += 2) {
          this.ⵠⵠΔⵠΔ.push(p1633[v2519]);
          v2518[p1633[v2519]].ΔⲆΔΔᐃ = ⵠⵠΔ.ΔΔⲆⲆΔⲆΔ(p1633[v2519 + 1]);
        }
        this.ⵠΔᐃ = vVV1222;
      }
    };
    this.ᐃᐃΔⵠⲆ.ⵠΔΔ.width = v414 * 180;
    this.ᐃᐃΔⵠⲆ.ⵠΔΔ.height = v414 * 300;
    this.ᐃᐃΔⵠⲆ.ᐃ = this.ᐃᐃΔⵠⲆ.ⵠΔΔ.getContext("2d");
    this.ⲆΔⲆⵠΔ = {
      open: false,
      input: document.getElementById("commandInput"),
      ΔⲆⲆⵠⵠⵠᐃ: document.getElementById("commandsBox"),
      style: document.getElementById("commandMainBox").style,
      ⲆⵠΔΔⵠⲆⲆᐃΔ: function (p1634) {
        this.ΔⲆⲆⵠⵠⵠᐃ.innerHTML += p1634;
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v408 / 2 - 300) + "px";
        this.style.top = Math.floor(v410 / 2 - 250) + "px";
      },
      ⵠᐃΔᐃΔᐃᐃⲆᐃ: function () {
        this.ΔⲆⲆⵠⵠⵠᐃ.innerHTML = "";
      },
      ⵠᐃⲆᐃⵠ: function () {
        this.open = false;
        this.style.display = "none";
      },
      ΔΔΔᐃⲆᐃᐃ: function (p1635) {
        var v2520 = "<table class=\"tableList\">";
        for (var v2521 = 0; v2521 < p1635.length; v2521++) {
          if (v2521 % 3 === 0) {
            v2520 += "<tr>";
          }
          v2520 += "<td class=\"tableList\">" + p1635[v2521] + "</td>";
          if ((v2521 + 1) % 3 == 0 || v2521 + 1 === p1635.length) {
            v2520 += "</tr>";
          }
        }
        return v2520 += "</table>";
      },
      ᐃⲆΔᐃⵠ: function (p1636, p1637, p1638, p1639) {
        var v2522 = "<div class=commandWritten>" + (p1636 = p1636 || "");
        v2522 += (p1637 = p1637 || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>";
        v2522 += (p1638 = p1638 || "") + "</div>" + (p1639 = p1639 || "") + "</div>";
        this.ⲆⵠΔΔⵠⲆⲆᐃΔ(v2522);
        this.ΔᐃⵠΔᐃⲆΔⲆⵠ();
      },
      ΔᐃⵠΔᐃⲆΔⲆⵠ: function () {
        this.ΔⲆⲆⵠⵠⵠᐃ.scrollTop = this.ΔⲆⲆⵠⵠⵠᐃ.scrollHeight;
      },
      ⵠⵠⵠⲆᐃⲆⲆ: function (p1640) {
        switch (p1640) {
          case "clean":
            this.ⵠᐃΔᐃΔᐃᐃⲆᐃ();
            return true;
          case "list":
            var v2523 = "";
            const v2524 = vWindow.document.createElement("div");
            for (var v2525 = v2859.ⵠⲆⵠⲆ, v2526 = 0; v2526 < v2525.length; v2526++) {
              var v2527 = v2525[v2526];
              if (v2527.ᐃᐃⲆΔⲆ) {
                v2524.innerText = v2527.ᐃΔⵠⵠΔ;
                v2523 += v2524.innerHTML + " <span style=\"color:green\">#" + v2526 + "</span><br />";
              }
            }
            this.ᐃⲆΔᐃⵠ("list", 1, "List all connected players", v2523);
            return vVV12;
          case "weapon-list":
            this.ᐃⲆΔᐃⵠ("Weapons", 1, "List all weapons in the game", this.ΔΔΔᐃⲆᐃᐃ(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "sword_copper", "sword_iron", "sword_topaz", "sword_sapphire", "sword_jade", "sword_ruby", "sword_emerald", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "copper_spear", "iron_spear", "topaz_spear", "sapphire_spear", "jade_spear", "ruby_spear", "emerald_spear", "wood_bow", "wood_arrow", "wood_axe", "stone_axe", "gold_axe", "diamond_axe", "amethyst_axe", "reidite_axe", "emerald_axe", "copper_axe", "iron_axe", "topaz_axe", "sapphire_axe", "jade_axe", "ruby_axe", "coal_axe", "aquamarine_axe"]));
            return true;
          case "tool-list":
            this.ᐃⲆΔᐃⵠ("Tools", 1, "List all tools in the game", this.ΔΔΔᐃⲆᐃᐃ(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "pick_copper", "pick_iron", "pick_topaz", "pick_sapphire", "pick_jade", "pick_ruby", "pick_emerald", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "hammer_copper", "hammer_iron", "hammer_topaz", "hammer_sapphire", "hammer_jade", "hammer_ruby", "hammer_emerald", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "shovel_reidite", "shovel_copper", "shovel_iron", "shovel_topaz", "shovel_sapphire", "shovel_jade", "shovel_ruby", "shovel_emerald", "pitchfork", "pitchfork2", "spanner", "book"]));
            return vV122;
          case "survival-list":
            this.ᐃⲆΔᐃⵠ("Survival Items", 1, "List all survival items in the game", this.ΔΔΔᐃⲆᐃᐃ(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite", "extractor_emerald", "extractor_copper", "extractor_iron", "extractor_topaz", "extractor_sapphire", "extractor_jade", "extractor_ruby", "extractor_coal", "extractor_aquamarine"]));
            return vVVV122;
          case "resource-list":
            this.ᐃⲆΔᐃⵠ("Resources", 1, "List all resources in the game", this.ΔΔΔᐃⲆᐃᐃ(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "copper", "iron", "topaz", "sapphire", "jade", "ruby", "emerald", "coal", "aquamarine", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
            return true;
          case "food-list":
            this.ᐃⲆΔᐃⵠ("Food", 1, "List all food in the game", this.ΔΔΔᐃⲆᐃᐃ(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus", "banana"]));
            return vVVVV1223;
          case "hat-list":
            this.ᐃⲆΔᐃⵠ("Hats", 1, "List all hats in the game", this.ΔΔΔᐃⲆᐃᐃ(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "emerald_helmet", "copper_helmet", "iron_helmet", "topaz_helmet", "sapphire_helmet", "jade_helmet", "ruby_helmet", "coal_helmet", "aquamarine_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
            return vVVVV1222;
          case "building-list":
            this.ᐃⲆΔᐃⵠ("Buildings", 1, "List all buildings in the game", this.ΔΔΔᐃⲆᐃᐃ(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
            return vV12;
          case "biome-list":
            this.ᐃⲆΔᐃⵠ("Biomes list", 1, "List all available biomes in the game", this.ΔΔΔᐃⲆᐃᐃ(["forest", "winter", "lava", "sea", "beach", "island", "dragon", "jungle"]));
            return true;
          case "help-config":
            this.ᐃⲆΔᐃⵠ("Help Configuration", 1, "Learn how to build your customized map", "<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.");
            return vVVV12222;
          case "pos":
            v2525 = v2859.ⲆⵠΔ[0];
            v2526 = 0;
            for (; v2526 < v2525.length; v2526++) {
              var v2528 = v2525[v2526];
              if (v2528.ΔⲆⲆᐃ === v2860.id) {
                this.ᐃⲆΔᐃⵠ("pos", 1, "Your position is " + Math.floor(v2528.x / 100) + ":" + Math.floor(v2528.y / 100));
                return vVV123;
              }
            }
            break;
          case "help-admin":
            this.ᐃⲆΔᐃⵠ("help-admin", 1, "List all available commands for admin only", this.ΔΔΔᐃⲆᐃᐃ(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "dst | disable-steal", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
            return true;
          case "help":
            this.ᐃⲆΔᐃⵠ("help", 1, "List all available commands", this.ΔΔΔᐃⲆᐃᐃ(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
            return vV124;
        }
        return false;
      },
      ᐃᐃᐃΔᐃᐃⲆᐃΔ: function () {
        if (!this.open) {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      },
      ΔⵠΔⲆⵠΔⵠ: function () {
        var v2529 = this.input.value;
        if (v2529 && v2529.length > 0) {
          if (!this.ⵠⵠⵠⲆᐃⲆⲆ(v2529)) {
            v2862.ᐃⵠᐃΔⵠⲆᐃᐃⵠ(this.input.value);
          }
          this.input.value = "";
        }
      }
    };
    this.ⵠⲆΔΔⵠ = {
      open: vVV162,
      input: document.getElementById("chat_input"),
      style: document.getElementById("chat_block").style,
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v408 / 2 - 150) + "px";
        this.style.top = Math.floor(v410 / 2 + 80) + "px";
      },
      ⵠᐃⲆᐃⵠ: function () {
        this.open = false;
        this.style.display = "none";
        this.input.value = "";
      },
      prefix: "!",
      cmd: {
        hud: function (p1641) {
          if (p1641 === "off") {
            var v2530 = "Enter \"!hud\" without the quotes to restore the HUD";
            if (v2860.alert.text) {
              v2860.alert.list.push(v2530);
            } else {
              v2860.alert.text = v2530;
            }
            v3057.ⵠⵠⲆᐃΔᐃⲆ = 0;
          } else {
            v3057.ⵠⵠⲆᐃΔᐃⲆ = 1;
          }
        }
      },
      ⵠⵠⵠⲆᐃⲆⲆ: function (p1642) {
        if (p1642.charAt(0) == this.prefix) {
          var v2531 = "";
          var v2532 = "";
          for (var v2533 = 1; v2533 < p1642.length && p1642.charAt(v2533) != " "; v2533++) {
            v2531 += p1642.charAt(v2533);
          }
          for (v2533++; v2533 < p1642.length; v2533++) {
            v2532 += p1642.charAt(v2533);
          }
          var v2534 = this.cmd[v2531];
          if (v2534) {
            v2534(v2532);
          }
          return vV123;
        }
        return vVVV16;
      },
      ⲆⵠⵠᐃΔ: function () {
        if (this.open) {
          this.open = false;
          this.style.display = "none";
          var v2535 = this.input.value;
          if (v2535) {
            if (!this.ⵠⵠⵠⲆᐃⲆⲆ(v2535)) {
              v2862.ᐃΔⵠᐃⵠⲆⲆᐃⲆ(this.input.value);
            }
            this.input.value = "";
          }
        } else {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      }
    };
    this.ΔⲆⵠⲆᐃⲆⲆ = {
      ⵠΔΔᐃΔ: [],
      ⵠΔᐃ: function (p1643) {
        p1643.y += v3091 * 80 * p1643.ⵠᐃⲆⲆ;
        p1643.x += v3091 * 80 * p1643.c;
        p1643.ᐃⵠΔΔΔ -= v3091 / 6;
        if (p1643.ᐃⵠΔΔΔ > 0.2) {
          p1643.alpha = Math.min(p1643.alpha + v3091 * 3, 1);
        } else {
          p1643.alpha = Math.max(p1643.alpha - v3091 * 1, 0);
        }
      },
      add: function (p1644) {
        var v2536 = Math.floor(Math.min(v594.ᐃⵠᐃᐃⵠⵠΔ * (v408 / 1366), v594.ᐃⵠᐃᐃⵠⵠΔ + 10) * Math.max(Math.min(v2859.ⲆⵠⵠᐃⲆ + 1000, 3000) / 3000, 0));
        if (this.ⵠΔΔᐃΔ.length < v2536) {
          var v2537 = Math.floor(Math.random() * v594.ᐃΔΔⵠᐃⲆⲆ);
          var v2538 = -v2860.Δⵠⵠ.x + Math.floor(Math.random() * v2860.Δⵠⵠ.w);
          var v2539 = -v2860.Δⵠⵠ.y + Math.floor(Math.random() * v2860.Δⵠⵠ.ᐃⵠⵠ);
          var v2540 = Math.random(Math.PI);
          this.ⵠΔΔᐃΔ.push(new f468(v2537, v2538, v2539, v2540));
        }
      }
    };
    this.ⲆⵠᐃΔⵠΔⵠ = 0;
    this.ᐃΔⲆᐃⵠ = 0;
    this.Δᐃᐃᐃᐃ = {
      ⵠΔΔᐃΔ: [],
      ΔΔΔΔΔ: 0,
      ᐃⲆᐃⲆΔ: 0,
      ⵠΔᐃ: function (p1645) {
        p1645.y += v3091 * (200 + this.ᐃⲆᐃⲆΔ * 800) * p1645.ⵠᐃⲆⲆ;
        p1645.x += v3091 * (200 + this.ᐃⲆᐃⲆΔ * 800) * p1645.c;
        p1645.ᐃⵠΔΔΔ -= v3091 / 6;
        if (p1645.ᐃⵠΔΔΔ > 0.2) {
          p1645.alpha = Math.min(p1645.alpha + v3091 * 3, 1);
        } else {
          p1645.alpha = Math.max(p1645.alpha - v3091 * 1, 0);
        }
      },
      add: function (p1646) {
        var v2541 = Math.floor(Math.min((this.ᐃⲆᐃⲆΔ + 0.1) * v594.ΔⵠᐃⲆⵠΔᐃ * (v408 / 1366), (this.ᐃⲆᐃⲆΔ + 0.1) * v594.ΔⵠᐃⲆⵠΔᐃ + 10) * Math.max(Math.min(v2859.ⵠᐃᐃᐃΔ + 1000, 3000) / 3000, 0));
        if (this.ⵠΔΔᐃΔ.length < v2541) {
          var v2542 = Math.floor(Math.random() * v594.ᐃΔΔⵠᐃⲆⲆ);
          var v2543 = -v2860.Δⵠⵠ.x + Math.floor(Math.random() * v2860.Δⵠⵠ.w);
          var v2544 = -v2860.Δⵠⵠ.y + Math.floor(Math.random() * v2860.Δⵠⵠ.ᐃⵠⵠ);
          var v2545 = Math.random(Math.PI);
          if (v2860.Δᐃᐃᐃᐃ.ΔΔΔΔΔ !== 0) {
            v2543 -= v2860.Δⵠⵠ.w / 2;
          }
          this.ⵠΔΔᐃΔ.push(new f468(v2542, v2543, v2544, v2545));
        }
      }
    };
    this.ᐃᐃᐃΔⲆ = {
      ⵠΔΔᐃΔ: [],
      ΔΔΔΔΔ: 0,
      ᐃⲆᐃⲆΔ: 0,
      ⵠΔᐃ: function (p1647) {
        if (v3086.ⵠᐃᐃⵠⲆᐃΔ()) {
          p1647.y += v3091 * p1647.ⲆᐃᐃΔⵠ * (5.5 + this.ᐃⲆᐃⲆΔ * 10);
        } else {
          p1647.y += v3091 * p1647.ⲆᐃᐃΔⵠ * (5 + this.ᐃⲆᐃⲆΔ * 10);
        }
        p1647.ᐃⵠΔΔΔ -= v3091 / 2;
        if (v3086.ⵠΔᐃΔⲆⲆᐃ()) {
          p1647.x += v3091 * (100 + this.ᐃⲆᐃⲆΔ * 400);
        } else if (v3086.ΔⵠⲆΔⲆᐃΔ()) {
          p1647.x -= v3091 * (130 - this.ᐃⲆᐃⲆΔ * 400);
        } else {
          p1647.x -= v3091 * (30 - this.ᐃⲆᐃⲆΔ * 400);
        }
        if (p1647.ᐃⵠΔΔΔ > 0.2) {
          p1647.alpha = Math.min(p1647.alpha + v3091 * 3, 1);
        } else {
          p1647.alpha = Math.max(p1647.alpha - v3091 * 5, 0);
        }
      },
      add: function (p1648) {
        var v2546 = Math.floor(Math.min((this.ᐃⲆᐃⲆΔ * 1.5 + 0.5) * v594.ⵠΔⵠΔⵠΔⲆ * (v408 / 1366), (this.ᐃⲆᐃⲆΔ * 1.5 + 0.5) * v594.ⵠΔⵠΔⵠΔⲆ + 10) * Math.max(Math.min(v2859.ⲆⵠΔⲆΔ + 1000, 3000) / 3000, 0));
        if (this.ⵠΔΔᐃΔ.length < v2546) {
          var v2547 = Math.floor(Math.random() * v594.ΔⵠⵠⵠΔⵠⵠ);
          var v2548 = -v2860.Δⵠⵠ.x + Math.floor(Math.random() * v2860.Δⵠⵠ.w);
          var v2549 = -v2860.Δⵠⵠ.y + Math.floor(Math.random() * 400 * v414 - v414 * 200);
          this.ⵠΔΔᐃΔ.push(new f468(v2547, v2548, v2549, 0));
        }
      }
    };
    this.ⵠⵠⵠΔ = [];
    for (var v2550 = 0; v2550 < 4; v2550++) {
      this.ⵠⵠⵠΔ.push(new f483());
    }
  }
  function f484() {
    Math.random();
    return "e";
  }
  function f485() {
    Math.random();
    return "a";
  }
  function f486() {
    Math.random();
    return "g";
  }
  setTimeout(function f487() {
    var v2551 = f480() + f485() + f477() + f478();
    Math.random();
    var v2552 = "W" + f484() + (Math.random(), "b") + (Math.random(), "S") + f472() + function () {
      Math.random();
      return "c";
    }() + (Math.random(), "k") + f484() + f477();
    if (vWindow[v2552].toString().indexOf(v2551) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    var v2553 = f475() + f484() + f480() + f476();
    var v2554 = f481() + f473() + f472() + f477() + f472() + f477() + (Math.random(), "y") + f481() + f484();
    if (vWindow[v2552][v2554][v2553].toString().indexOf(v2551) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    v2552 = f476() + f473() + f485() + function () {
      Math.random();
      return "w";
    }() + function () {
      Math.random();
      return "I";
    }() + (Math.random(), "m") + f485() + f486() + f484();
    v2553 = f474() + f485() + f480() + function () {
      Math.random();
      return "v";
    }() + f485() + f475() + function () {
      Math.random();
      return "R";
    }() + f484() + f480() + f476() + f484() + f473() + f478() + f480() + f486() + f474() + f472() + f480() + f477() + f484() + (Math.random(), "x") + f477() + function () {
      Math.random();
      return "2";
    }() + (Math.random(), "D");
    if (vWindow[v2553][v2554][v2552].toString().indexOf(v2551) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    setTimeout(f487, 100000);
  }, 100000);
  function f488(p1649, p1650) {
    var v2555 = 190;
    if (v2555 == 0) {
      v2555 = 253;
    }
    this.ᐃⲆⵠⲆⲆⵠΔ = 3112960;
    this.ⵠΔΔ = p1649;
    this.ᐃ = p1650;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ΔΔⲆⵠΔΔⵠ = "default";
      this.ΔⵠΔΔᐃᐃⲆ = "pointer";
    } else {
      this.ΔΔⲆⵠΔΔⵠ = "url('img/cursor0.png'), default";
      this.ΔⵠΔΔᐃᐃⲆ = "url('img/cursor1.png'), pointer";
    }
    var vThis = this;
    this.waiting = false;
    var v2556 = 143;
    if (v2556 === 10) {
      v2556 = 156;
    }
    this.ᐃΔⲆⲆΔⲆⲆ = 0;
    this.ΔⲆⲆⵠΔⵠΔ = vVVV1623;
    this.ⵠΔⲆᐃΔᐃⲆ = -1;
    this.ⵠᐃⲆᐃΔⲆⲆ = {};
    this.ⵠᐃⲆᐃΔⲆⲆ.ΔⲆΔⵠΔᐃⲆ = 3;
    this.ᐃᐃⲆⵠᐃⲆⲆ = 220;
    this.ᐃⵠΔⵠⵠⵠᐃ = 194;
    this.ᐃᐃⲆⵠᐃⲆⲆ;
    this.ᐃⵠΔⵠⵠⵠᐃ;
    this.ΔᐃⲆⵠⲆⲆΔ = 75;
    this.ΔΔΔΔⵠⲆΔ = this.ΔᐃⲆⵠⲆⲆΔ;
    this.ⲆⵠⵠΔⵠⵠⵠⲆⲆ = vVVVV12222;
    this.ᐃᐃⵠᐃΔᐃⲆ = {
      translate: {
        x: 0,
        y: 0
      },
      angle: 0,
      ⵠⵠ: ⵠΔ[412],
      ⲆⵠⲆᐃ: function () {
        this.angle += v3091 * 2;
        p1650.save();
        p1650.translate(this.translate.x + this.ⵠⵠ.width / 2, this.translate.y + this.ⵠⵠ.height / 2);
        p1650.rotate(this.angle);
        f302(p1650, this.ⵠⵠ, -this.ⵠⵠ.width / 2, -this.ⵠⵠ.height / 2);
        p1650.restore();
      }
    };
    this.ᐃⵠΔⲆⲆΔⵠ = {
      id: document.getElementById("langselect"),
      style: document.getElementById("langselect").style,
      translate: {
        x: 0,
        y: 0
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(this.translate.x) + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ᐃᐃᐃᐃᐃ = 0;
    this.ΔⲆⲆᐃⲆᐃᐃ = -1;
    this.ᐃⵠΔⲆᐃⵠⲆ = vVVUndefined152;
    this.ⵠⲆΔⲆⲆΔⵠ = "";
    this.ⲆᐃᐃΔΔΔᐃ = "";
    this.ΔⵠΔᐃΔΔᐃ = undefined;
    this.ⲆⲆⲆⵠΔ = 0;
    this.ⵠⵠⵠΔΔᐃⵠ = -1;
    this.ⲆⲆΔᐃᐃⵠᐃ = 47;
    this.ⵠΔⵠΔΔΔⲆ = vVUndefined;
    this.ᐃⵠⵠᐃᐃⵠΔ = 0;
    this.ΔᐃⵠᐃᐃⲆΔ = 0;
    this.ⵠΔⵠⵠⲆᐃΔ = 0;
    this.ΔΔⵠⵠᐃᐃⲆ = 0;
    this.ΔᐃⵠⲆΔⵠΔ = 454;
    this.ΔⵠⲆᐃᐃⲆⲆ = {};
    this.ᐃⲆⲆΔΔᐃⵠ = 88;
    this.ᐃⲆⲆⲆⵠᐃⵠ = 61;
    this.ᐃⲆⲆΔΔᐃⵠ;
    this.ᐃⲆⲆⲆⵠᐃⵠ;
    this.ΔⵠⲆᐃᐃⲆⲆ.ⵠᐃΔΔΔΔⲆⵠᐃ = 13;
    this.ⲆᐃᐃᐃⲆΔΔ = 0;
    this.time = 0;
    this.ΔⲆΔΔᐃ = 0;
    this.ⲆⲆⲆᐃⲆᐃⵠ = 0;
    this.ⲆⵠΔⲆⵠΔΔ = 0;
    this.ⵠⲆⵠⵠⵠΔΔ = 0;
    var v2557 = 254;
    var v2558 = 164;
    if (v2558 === 5) {
      v2558 = 146;
    }
    if (v2557 == 11) {
      v2557 = 165;
    }
    this.ⵠᐃⵠᐃΔΔⲆ = 0;
    this.ΔⲆⲆⲆⵠⲆᐃ = [];
    this.ᐃⵠⲆᐃⲆⵠⵠΔⵠ = 233;
    this.ⵠᐃⲆᐃⲆⵠⵠ = 280;
    this.ⲆᐃⲆᐃᐃⵠⲆ = -1;
    this.ΔⲆΔⲆⵠⲆΔ = -1;
    this.ⵠᐃⲆᐃⵠⵠⵠ = -1;
    this.ΔⵠΔⵠΔᐃΔ = undefined;
    var v2559 = 75;
    if (v2559 > 2) {
      v2559 = 31;
    }
    this.ΔᐃⲆᐃΔⲆⵠ = 3088;
    this.ⵠⲆⲆᐃⲆΔⲆ = vVVVUndefined1422;
    this.ⲆⲆⵠⵠⵠΔⵠ = -1;
    this.ᐃᐃΔⲆᐃᐃᐃ = -1;
    this.ⲆⵠᐃⲆΔΔΔ = -1;
    var v2560 = 128;
    if (v2560 > 9) {
      v2560 = 119;
    }
    this.ΔⲆᐃⵠⲆⵠᐃ = -1;
    this.ⲆΔᐃΔΔⲆᐃ = false;
    this.ΔⲆⲆΔᐃⵠⵠ = undefined;
    this.ⵠⲆⲆⲆᐃΔⲆ = undefined;
    this.ᐃⵠᐃⲆΔⲆΔ = vVUndefined15;
    this.ΔⵠⲆⵠᐃᐃΔⵠᐃ = false;
    this.ΔⲆᐃⲆᐃΔᐃ = vVVUndefined142;
    this.ⲆᐃΔᐃᐃⵠⵠ = vVUndefined6;
    var v2561 = 64;
    function b(p1651, p1652, p1653, p1654, p1655) {
      var vThis2 = this;
      for (var v2562 = p1652 + 9, v2563 = 0, vP1654 = p1654, vP1652 = p1652; vP1652 < v2562; vP1652++) {
        vThis.buttons[vP1652].info.callback = f491;
        vThis.buttons[vP1652].info.ΔᐃⲆⲆΔΔᐃⲆⵠ = p1651;
      }
      function f490() {
        var v2564 = p1651[vP1654];
        v2858.ΔⲆᐃⲆᐃΔᐃ = f437(v2564.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, undefined, 10, 8);
        if (v2564.level !== undefined) {
          v2858.ⲆᐃΔᐃᐃⵠⵠ = f437("Level " + v2564.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, vUndefined, 10, 8);
        } else {
          v2858.ⲆᐃΔᐃᐃⵠⵠ = f437("by " + v2564.Δᐃⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
        }
      }
      function f491() {
        if (vP1654 !== this.ⲆΔΔⵠⵠⵠⲆ && this.ⲆΔΔⵠⵠⵠⲆ !== -1) {
          if (this.ᐃⲆⲆᐃⵠᐃΔ > 0) {
            if (ⵠⲆⵠΔΔᐃⵠ === p1652) {
              f496(v2605, v2659, "none");
            } else {
              f496(v2606, v2659, "none");
            }
          } else if (ⵠⲆⵠΔΔᐃⵠ === p1652) {
            f496(v2605, v2660, "inline-block");
          } else {
            f496(v2606, v2660, "inline-block");
          }
          vP1654 = this.ⲆΔΔⵠⵠⵠⲆ;
          p1653(this.ⲆΔΔⵠⵠⵠⲆ);
          f490();
        }
      }
      this.ⵠⲆᐃΔΔⲆΔ = function () {
        for (var vP16522 = p1652, v2565 = v2563 * 3; vP16522 < v2562 && v2565 < p1651.length; vP16522++, v2565++) {
          if (p1651[v2565].ᐃⵠᐃ !== ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ || p1655[v2565] !== 0) {
            vThis.buttons[vP16522].info.ⲆΔΔⵠⵠⵠⲆ = v2565;
            for (var v2566 = 0; v2566 < 3; v2566++) {
              vThis.buttons[vP16522].info.ⵠⵠ[v2566] = ᐃⵠⲆᐃΔⵠⲆ[p1651[v2565].ᐃⵠᐃ][v2566];
              vThis.buttons[vP16522].info.active = v2660;
              vThis.buttons[vP16522].info.ᐃⲆⲆᐃⵠᐃΔ = p1655[v2565];
            }
          } else {
            vThis.buttons[vP16522].info.ⲆΔΔⵠⵠⵠⲆ = -1;
            vThis.buttons[vP16522].info.active = v2659;
          }
        }
        for (; vP16522 < v2562; vP16522++) {
          vThis.buttons[vP16522].info.ⲆΔΔⵠⵠⵠⲆ = -1;
          vThis.buttons[vP16522].info.active = v2659;
        }
        f490();
      };
      vThis.buttons[v2562].info.callback = function () {
        if (v2563 > 0) {
          v2563--;
        }
        vThis2.ⵠⲆᐃΔΔⲆΔ();
      };
      vThis.buttons[v2562 + 1].info.callback = function () {
        if (v2563 * 3 + 9 < p1651.length) {
          v2563++;
        }
        vThis2.ⵠⲆᐃΔΔⲆΔ();
      };
    }
    function f492() {
      var vNumber = Number(ⵠⲆΔⲆ.get("starve_crate"));
      var vNumber2 = Number(ⵠⲆΔⲆ.get("starve_dead"));
      var vNumber3 = Number(ⵠⲆΔⲆ.get("starve_book"));
      var vNumber4 = Number(ⵠⲆΔⲆ.get("starve_bag"));
      var vNumber5 = Number(ⵠⲆΔⲆ.get("starve_skin"));
      var vNumber6 = Number(ⵠⲆΔⲆ.get("starve_accessory"));
      vThis.ⵠⲆⲆΔ = vNumber5 || 0;
      vThis.ᐃᐃᐃⵠⲆ = vNumber3 || 0;
      vThis.ⵠᐃᐃⵠᐃ = vNumber || 1;
      vThis.ᐃⲆΔΔⲆ = vNumber6 || 0;
      vThis.ⵠᐃⲆⵠᐃ = vNumber4 || 0;
      vThis.ᐃⲆⵠΔⲆ = vNumber2 || 0;
    }
    function f493() {
      for (var v2567 = ΔⵠΔΔ.ΔΔΔⲆⲆ, v2568 = 0; v2567.length > v2568; v2568++) {
        if (ⲆⲆΔ.ⵠᐃΔΔᐃ === v2567[v2568].ᐃⵠᐃ) {
          vThis.unlock.ⵠⲆⲆΔ[v2568] = 1;
        } else {
          vThis.unlock.ⵠⲆⲆΔ[v2568] = 0;
        }
      }
      v2567 = ΔⵠΔΔ.ⵠΔⲆⲆⵠ;
      v2568 = 0;
      for (; v2568 < v2567.length; v2568++) {
        if (ⲆⲆΔ.ⵠᐃΔΔᐃ === v2567[v2568].ᐃⵠᐃ) {
          vThis.unlock.ᐃⲆΔΔⲆ[v2568] = 1;
        } else {
          vThis.unlock.ᐃⲆΔΔⲆ[v2568] = 0;
        }
      }
      v2567 = ΔⵠΔΔ.ⲆⲆΔⲆ;
      v2568 = 0;
      for (; v2567.length > v2568; v2568++) {
        if (ⲆⲆΔ.ⵠᐃΔΔᐃ === v2567[v2568].ᐃⵠᐃ) {
          vThis.unlock.ⵠᐃⲆⵠᐃ[v2568] = 1;
        } else {
          vThis.unlock.ⵠᐃⲆⵠᐃ[v2568] = 0;
        }
      }
      v2567 = ΔⵠΔΔ.ⲆᐃⲆΔⵠ;
      v2568 = 0;
      for (; v2567.length > v2568; v2568++) {
        if (v2567[v2568].ᐃⵠᐃ === ⲆⲆΔ.ⵠᐃΔΔᐃ) {
          vThis.unlock.ᐃᐃᐃⵠⲆ[v2568] = 1;
        } else {
          vThis.unlock.ᐃᐃᐃⵠⲆ[v2568] = 0;
        }
      }
      v2567 = ΔⵠΔΔ.ΔⲆⵠΔⵠ;
      v2568 = 0;
      for (; v2568 < v2567.length; v2568++) {
        if (v2567[v2568].ᐃⵠᐃ === ⲆⲆΔ.ⵠᐃΔΔᐃ) {
          vThis.unlock.ⵠᐃᐃⵠᐃ[v2568] = 1;
          vThis.unlock.ᐃⲆⵠΔⲆ[v2568] = 1;
        } else {
          vThis.unlock.ⵠᐃᐃⵠᐃ[v2568] = 0;
          vThis.unlock.ᐃⲆⵠΔⲆ[v2568] = 0;
        }
      }
    }
    if (v2561 == 0) {
      v2561 = 125;
    }
    this.ⵠΔⲆⲆᐃⲆᐃ = undefined;
    this.ΔⵠⵠⵠⵠΔⵠ = vVVV162;
    this.ᐃᐃΔⵠⵠΔΔⵠⲆ = {};
    this.ᐃᐃΔⵠⵠΔΔⵠⲆ.ⲆⵠⲆⵠᐃⵠᐃⲆᐃ = 10;
    this.ᐃⲆΔΔΔΔᐃ = undefined;
    this.ᐃⲆΔⵠᐃⵠᐃ = vVVVUndefined172;
    this.ΔᐃᐃᐃⵠⲆⵠ = undefined;
    this.ᐃⵠΔΔⲆΔⲆ = 6;
    this.ⵠⲆⵠΔ = 0;
    this.ΔⵠᐃⵠᐃᐃⲆⵠⲆ = false;
    this.ᐃᐃΔⵠⵠ = ⵠⲆΔⲆ.get("starve_quality") ? ⵠⲆΔⲆ.get("starve_quality") : "high";
    if (this.ᐃᐃΔⵠⵠ === "high") {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      this.ᐃᐃΔⵠⵠ = 1;
    } else {
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      this.ᐃᐃΔⵠⵠ = 0;
    }
    this.ⵠᐃⵠΔⵠΔᐃᐃᐃ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      ⵠⲆΔⲆ.set("starve_quality", "high", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 1;
      v3057.ᐃᐃᐃᐃⵠⵠⵠ();
      v2858.ᐃᐃΔⵠⵠ = 1;
    };
    this.ᐃᐃᐃⵠⵠⵠΔΔⲆ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      ⵠⲆΔⲆ.set("starve_quality", "low", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 0.5 / (v487 / v489);
      v3057.ᐃᐃᐃᐃⵠⵠⵠ();
      v2858.ᐃᐃΔⵠⵠ = 0;
    };
    if (ⵠⲆΔⲆ.get("starve_mapping") === vVVUndefined17 && v559 === "FR") {
      v3086.ᐃⵠΔⲆΔΔΔ();
      this.ⲆⵠⲆΔⲆⵠⵠ = "azerty";
    } else {
      this.ⲆⵠⲆΔⲆⵠⵠ = ⵠⲆΔⲆ.get("starve_mapping") ? ⵠⲆΔⲆ.get("starve_mapping") : "qwerty";
    }
    if (this.ⲆⵠⲆΔⲆⵠⵠ == "azerty") {
      v3086.ᐃⵠΔⲆΔΔΔ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
    } else {
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
    }
    this.ᐃⵠΔⲆΔΔΔ = function () {
      v3086.ᐃⵠΔⲆΔΔΔ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
      ⵠⲆΔⲆ.set("starve_mapping", "azerty", {
        expires: 30
      });
    };
    this.ΔⵠᐃᐃΔΔⲆ = function () {
      v3086.ΔⵠᐃᐃΔΔⲆ();
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      ⵠⲆΔⲆ.set("starve_mapping", "qwerty", {
        expires: 30
      });
    };
    this.ᐃⲆⲆΔⵠⵠΔ = {
      id: document.getElementById("all_rights_reserved"),
      style: document.getElementById("all_rights_reserved").style,
      translate: {
        x: 0,
        y: 0
      },
      ⵠΔᐃ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    f492();
    this.unlock = {};
    this.unlock.ⵠⲆⲆΔ = [];
    this.unlock.ⵠᐃⲆⵠᐃ = [];
    this.unlock.ᐃᐃᐃⵠⲆ = [];
    this.unlock.ⵠᐃᐃⵠᐃ = [];
    this.unlock.ᐃⲆⵠΔⲆ = [];
    this.unlock.ᐃⲆΔΔⲆ = [];
    this.ᐃΔⵠⵠᐃⵠⵠ = 0;
    this.ⲆⵠⵠΔⵠⵠⵠ = f493;
    f493();
    this.ⲆⲆᐃΔᐃⲆⲆ = {
      id: document.getElementById("trevda"),
      style: document.getElementById("trevda").style,
      translate: {
        y: 0,
        x: 0
      },
      ⵠΔᐃ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    var v2569;
    var v2570 = 0;
    function f494() {
      vThis.ⵠΔᐃ();
      if (++v2570 == 30) {
        vThis.ⲆⲆⵠΔᐃⲆΔ();
        vThis.ᐃΔⲆⲆΔⲆⲆ = true;
        vThis.ⵠΔᐃ();
        return;
      }
      vWindow.setTimeout(f494, 33);
    }
    this.ⵠᐃⲆᐃⵠ = function (p1656) {
      v2569 = p1656;
      vThis.ⲆⲆⵠⲆΔᐃⲆ();
      vThis.ᐃΔⲆⲆΔⲆⲆ = 0;
      v2571 = -1;
      f495();
    };
    var v2571 = -1;
    function f495() {
      vThis.ⵠΔᐃ();
      if (++v2571 == 30) {
        ⵠⲆΔⲆ.set("starve_nickname", vThis.ᐃΔⵠⵠΔ.input.value, {
          expires: 30
        });
        vThis.ᐃΔⵠⵠΔ.style.display = "none";
        vThis.ᐃⲆⵠⲆᐃ.style.display = "none";
        vThis.ᐃⵠΔⲆⲆΔⵠ.style.display = "none";
        vThis.ᐃⲆⲆΔⵠⵠΔ.style.display = "none";
        vThis.ⲆⲆᐃΔᐃⲆⲆ.style.display = "none";
        vThis.stop();
        v2569();
        return;
      }
      vWindow.setTimeout(f495, 33);
    }
    this.ΔⲆⲆᐃΔ = vVVV1622;
    this.stop = function () {
      this.ΔⲆⲆᐃΔ = vVV164;
    };
    this.ⲆⵠⵠᐃΔ = function () {
      f534();
      document.getElementById("game_body").style.backgroundColor = v594.ᐃᐃⵠΔⲆ[v2857.time];
      vThis.ᐃΔⵠⵠΔ.style.display = "inline-block";
      vThis.ᐃⲆⵠⲆᐃ.style.display = "inline-block";
      vThis.ᐃⵠΔⲆⲆΔⵠ.style.display = "inline-block";
      vThis.ᐃⲆⲆΔⵠⵠΔ.style.display = "inline-block";
      vThis.ⲆⲆᐃΔᐃⲆⲆ.style.display = "inline-block";
      vThis.waiting = vVV1622;
      vThis.ΔⲆⲆᐃΔ = vVVV12;
      v2571 = -1;
      v2570 = 0;
      f494();
    };
    this.ⲆᐃΔΔᐃⲆⵠ = function (p1657, p1658) {
      p1658 = p1658 < 0 ? -p1658 : p1658;
      if ((p1657.position & v2654) === v2654) {
        if ((p1657.position & v2650) === v2650) {
          p1657.translate.x = v411 + p1657.translate.ᐃΔⲆᐃᐃ - p1658;
        } else if (v2651 === (p1657.position & v2651)) {
          p1657.translate.x = v411 + p1657.translate.ᐃΔⲆᐃᐃ + p1658;
        } else {
          p1657.translate.x = v411 + p1657.translate.ᐃΔⲆᐃᐃ;
        }
      } else if ((p1657.position & v2650) === v2650) {
        p1657.translate.x = p1657.translate.ᐃΔⲆᐃᐃ - p1658;
      } else if ((p1657.position & v2651) === v2651) {
        p1657.translate.x = v408 - p1657.translate.ᐃΔⲆᐃᐃ + p1658;
      } else {
        p1657.translate.x = p1657.translate.ᐃΔⲆᐃᐃ;
      }
      if (v2655 === (p1657.position & v2655)) {
        if ((p1657.position & v2652) === v2652) {
          p1657.translate.y = v412 + p1657.translate.ΔⲆΔᐃΔ - p1658;
        } else if ((p1657.position & v2653) === v2653) {
          p1657.translate.y = v412 + p1657.translate.ΔⲆΔᐃΔ + p1658;
        } else {
          p1657.translate.y = v412 + p1657.translate.ΔⲆΔᐃΔ;
        }
      } else if (v2652 === (p1657.position & v2652)) {
        p1657.translate.y = p1657.translate.ΔⲆΔᐃΔ - p1658;
      } else if ((p1657.position & v2653) === v2653) {
        p1657.translate.y = v410 + p1657.translate.ΔⲆΔᐃΔ + p1658;
      } else {
        p1657.translate.y = p1657.translate.ΔⲆΔᐃΔ;
      }
      if (p1657.style !== undefined) {
        p1657.style.left = Math.floor(p1657.translate.x) + "px";
        p1657.style.top = Math.floor(p1657.translate.y) + "px";
      }
    };
    this.ⵠΔᐃ = function () {
      var v2572 = 0;
      if (v2570 != 30 || v2571 != -1) {
        if (v2570 != 30) {
          v2572 = 1500 / (v2570 + 1) - 50;
        }
        if (v2571 != -1) {
          v2572 = -(1750 / (30 - v2571 + 1) - 48);
        }
      }
      for (var v2573 = 0; v2573 < this.ⵠᐃⵠΔ.length; v2573++) {
        this.ⲆᐃΔΔᐃⲆⵠ(this.ⵠᐃⵠΔ[v2573], v2572);
      }
      for (v2573 = 0; this.buttons.length > v2573; v2573++) {
        this.ⲆᐃΔΔᐃⲆⵠ(this.buttons[v2573].info, v2572);
      }
      for (v2573 = 0; this.ⵠⲆᐃᐃⵠᐃⲆ.length > v2573; v2573++) {
        this.ⲆᐃΔΔᐃⲆⵠ(this.ⵠⲆᐃᐃⵠᐃⲆ[v2573], v2572);
      }
      this.ᐃᐃⵠᐃΔᐃⲆ.translate.x = (v408 - this.ᐃᐃⵠᐃΔᐃⲆ.ⵠⵠ.width) / 2;
      this.ᐃᐃⵠᐃΔᐃⲆ.translate.y = 0;
      this.ᐃⵠΔⲆⲆΔⵠ.translate.x = v408 - 450;
      this.ᐃⵠΔⲆⲆΔⵠ.translate.y = v410 - 40;
      this.ᐃⲆⲆΔⵠⵠΔ.translate.x = v408 - 340;
      this.ᐃⲆⲆΔⵠⵠΔ.translate.y = v410 - 25;
      this.ⲆⲆᐃΔᐃⲆⲆ.translate.x = v408 - 320;
      this.ⲆⲆᐃΔᐃⲆⲆ.translate.y = 80;
      if (v2570 != 30 || v2571 != -1) {
        var v2574 = 0;
        if (v2570 != 30) {
          v2574 = 1500 / (v2570 + 1) - 50;
        }
        if (v2571 != -1) {
          v2574 = -(1750 / (30 - v2571 + 1) - 48);
        }
        this.ᐃᐃⵠᐃΔᐃⲆ.translate.y -= v2574 > 0 ? v2574 : -v2574;
        this.ᐃⵠΔⲆⲆΔⵠ.translate.y -= v2574 < 0 ? v2574 : -v2574;
        this.ᐃⲆⲆΔⵠⵠΔ.translate.y -= v2574 < 0 ? v2574 : -v2574;
      }
      this.ᐃⵠΔⲆⲆΔⵠ.ⵠΔᐃ();
      this.ᐃⲆⲆΔⵠⵠΔ.ⵠΔᐃ();
      this.ⲆⲆᐃΔᐃⲆⲆ.ⵠΔᐃ();
    };
    this.ΔⵠΔΔⵠⵠⵠ = function (p1659) {
      var v2575 = document.createElement("canvas");
      var v2576 = v2575.getContext("2d");
      v2575.width = 342;
      v2575.height = 342;
      var v2577 = -Math.PI / 2;
      for (var v2578 = 0; v2578 < p1659.length; v2578++) {
        var v2579 = p1659[v2578][0];
        var v2580 = p1659[v2578][1] * Math.PI / 180;
        v2576.beginPath();
        v2576.arc(171, 171, 170, v2577, v2577 + v2580, false);
        v2576.lineTo(171, 171);
        v2576.fillStyle = v2579;
        v2576.fill();
        v2577 += v2580;
      }
      return v2575;
    };
    this.ᐃⵠᐃᐃᐃⵠᐃⲆΔ = function () {
      this.ⵠⲆΔⲆⲆΔⵠ = document.getElementById("account_nickname_input").value;
      if (this.ⵠⲆΔⲆⲆΔⵠ !== this.ⲆᐃᐃΔΔΔᐃ) {
        this.ⲆᐃᐃΔΔΔᐃ = this.ⵠⲆΔⲆⲆΔⵠ;
        this.ΔⵠΔᐃΔΔᐃ = f437(this.ⵠⲆΔⲆⲆΔⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550);
      }
    };
    this.ⲆⵠⲆᐃ = function () {
      f277();
      v2858.ᐃⵠⵠᐃᐃⵠΔ = ⵠⵠΔ.ΔᐃⵠⵠⲆ(v2858.ᐃⵠⵠᐃᐃⵠΔ, v2858.ΔᐃⵠᐃᐃⲆΔ, 0.03);
      this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.x = this.ⵠᐃⵠΔ[0].translate.x + -72 + v2858.ᐃⵠⵠᐃᐃⵠΔ * 165;
      this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.ᐃΔⲆᐃᐃ = this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.x;
      this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.y = this.ⵠᐃⵠΔ[0].translate.y + 30;
      this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.ΔⲆΔᐃΔ = this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ].translate.y;
      for (var v2581 = 2; v2581 < this.ⵠᐃⵠΔ.length; v2581++) {
        if (this.ⵠᐃⵠΔ[v2581].active === v2660) {
          this.ⵠᐃⵠΔ[v2581].ⲆⵠⲆᐃ(p1650);
        }
      }
      var v2582 = this.ⲆᐃⲆᐃᐃⵠⲆ - Date.now();
      if (v2582 > 0) {
        var v2583 = Math.floor(v2582 / 60000);
        var v2584 = Math.floor(v2583 / 60);
        if ((v2583 %= 60) !== this.ⵠᐃⲆᐃⵠⵠⵠ) {
          this.ⵠᐃⲆᐃⵠⵠⵠ = v2583;
          v2583 = v2583 < 10 ? "0" + v2583 : "" + v2583;
          vThis.ΔⵠΔⵠΔᐃΔ = f437(v2583, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2584 !== this.ΔⲆΔⲆⵠⲆΔ) {
          this.ΔⲆΔⲆⵠⲆΔ = v2584;
          v2584 = v2584 < 10 ? "0" + v2584 : "" + v2584;
          vThis.ⵠⲆⲆᐃⲆΔⲆ = f437(v2584, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2586 = this.ⵠᐃⵠΔ[ⵠⲆⵠⵠⵠⵠⵠ]).ⲆⵠⲆᐃ(p1650);
        var v2585 = this.ⵠⲆⲆᐃⲆΔⲆ;
        f302(p1650, v2585, v2586.translate.x - v2585.width / 4 + 182, v2586.translate.y - v2585.height / 4 + 40, v2585.width / 2, v2585.height / 2);
        v2585 = this.ΔⵠΔⵠΔᐃΔ;
        f302(p1650, v2585, v2586.translate.x - v2585.width / 4 + 251, v2586.translate.y - v2585.height / 4 + 40, v2585.width / 2, v2585.height / 2);
      }
      if ((v2582 = this.ⲆⲆⵠⵠⵠΔⵠ - Date.now()) > 0) {
        v2583 = Math.floor(v2582 / 60000);
        v2584 = Math.floor(v2583 / 60);
        var v2586;
        var v2587 = Math.floor(v2584 / 24);
        v2583 %= 60;
        v2584 %= 24;
        if (this.ΔⲆᐃⵠⲆⵠᐃ !== v2583) {
          this.ΔⲆᐃⵠⲆⵠᐃ = v2583;
          v2583 = v2583 < 10 ? "0" + v2583 : "" + v2583;
          vThis.ΔⲆⲆΔᐃⵠⵠ = f437(v2583, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (this.ⲆⵠᐃⲆΔΔΔ !== v2584) {
          this.ⲆⵠᐃⲆΔΔΔ = v2584;
          v2584 = v2584 < 10 ? "0" + v2584 : "" + v2584;
          vThis.ⵠⲆⲆⲆᐃΔⲆ = f437(v2584, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2587 !== this.ᐃᐃΔⲆᐃᐃᐃ) {
          this.ᐃᐃΔⲆᐃᐃᐃ = v2587;
          v2587 = v2587 < 10 ? "0" + v2587 : "" + v2587;
          vThis.ᐃⵠᐃⲆΔⲆΔ = f437(v2587, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2586 = this.ⵠᐃⵠΔ[ⲆⵠᐃΔⵠⲆᐃ]).ⲆⵠⲆᐃ(p1650);
        v2585 = this.ᐃⵠᐃⲆΔⲆΔ;
        f302(p1650, v2585, v2586.translate.x - v2585.width / 4 + 113, v2586.translate.y - v2585.height / 4 + 40, v2585.width / 2, v2585.height / 2);
        v2585 = this.ⵠⲆⲆⲆᐃΔⲆ;
        f302(p1650, v2585, v2586.translate.x - v2585.width / 4 + 182, v2586.translate.y - v2585.height / 4 + 40, v2585.width / 2, v2585.height / 2);
        v2585 = this.ΔⲆⲆΔᐃⵠⵠ;
        f302(p1650, v2585, v2586.translate.x - v2585.width / 4 + 251, v2586.translate.y - v2585.height / 4 + 40, v2585.width / 2, v2585.height / 2);
      }
      if ((this.ⲆⲆⲆⲆⲆ & v2597) === v2597) {
        this.buttons[ⲆΔΔⵠⵠⵠΔ].info.state = v2234;
      } else if ((this.ⲆⲆⲆⲆⲆ & v2603) === v2603) {
        this.buttons[ΔᐃⵠⲆⲆⵠⵠ].info.state = v2234;
      } else if (v2600 === (this.ⲆⲆⲆⲆⲆ & v2600)) {
        this.buttons[ⵠᐃᐃⲆⵠⵠᐃ].info.state = v2234;
      } else if (v2598 === (this.ⲆⲆⲆⲆⲆ & v2598)) {
        this.buttons[ⲆΔⵠᐃΔⲆΔ].info.state = v2234;
      } else if ((this.ⲆⲆⲆⲆⲆ & v2602) === v2602) {
        this.buttons[ⵠᐃΔⵠⵠΔΔ].info.state = v2234;
      } else if (v2599 === (this.ⲆⲆⲆⲆⲆ & v2599)) {
        this.buttons[ⵠΔⵠⲆΔⵠᐃ].info.state = v2234;
      } else if ((this.ⲆⲆⲆⲆⲆ & v2601) === v2601 || v2607 === (this.ⲆⲆⲆⲆⲆ & v2607) || v2608 === (this.ⲆⲆⲆⲆⲆ & v2608) || v2609 === (this.ⲆⲆⲆⲆⲆ & v2609) || v2610 === (this.ⲆⲆⲆⲆⲆ & v2610) || (this.ⲆⲆⲆⲆⲆ & v2611) === v2611 || v2612 === (this.ⲆⲆⲆⲆⲆ & v2612)) {
        this.buttons[ΔⵠᐃⲆᐃΔⲆ].info.state = v2234;
      } else if ((this.ⲆⲆⲆⲆⲆ & v2613) === v2613 || (this.ⲆⲆⲆⲆⲆ & v2615) === v2615 || (this.ⲆⲆⲆⲆⲆ & v2614) === v2614 || v2616 === (this.ⲆⲆⲆⲆⲆ & v2616) || (this.ⲆⲆⲆⲆⲆ & v2617) === v2617 || v2618 === (this.ⲆⲆⲆⲆⲆ & v2618)) {
        this.buttons[ⵠᐃᐃⲆⵠⵠᐃ].info.state = v2234;
      } else if (v2621 === (this.ⲆⲆⲆⲆⲆ & v2621) || v2622 === (this.ⲆⲆⲆⲆⲆ & v2622) || (this.ⲆⲆⲆⲆⲆ & v2623) === v2623) {
        this.buttons[ᐃⲆⲆΔΔⵠΔ].info.state = v2234;
      } else if (v2624 === (this.ⲆⲆⲆⲆⲆ & v2624)) {
        this.buttons[ⲆΔⵠᐃΔⲆΔ].info.state = v2234;
      }
      if (v2603 === (this.ⲆⲆⲆⲆⲆ & v2603)) {
        if (this.ⲆⲆⵠᐃⵠΔⵠ === this.ᐃⲆΔΔΔΔᐃ) {
          this.ⵠΔⲆⲆᐃⲆᐃ = this.ⵠⲆᐃᐃⲆⲆΔ;
          this.buttons[this.ⵠⲆᐃᐃⲆⲆΔ].info.active = v2659;
          this.buttons[this.ΔⲆⵠⲆΔᐃΔ].info.active = v2659;
          this.buttons[this.ΔᐃⵠⵠⲆᐃᐃ].info.active = v2659;
        } else {
          this.buttons[this.ⵠⲆᐃᐃⲆⲆΔ].info.active = v2660;
          this.buttons[this.ΔⲆⵠⲆΔᐃΔ].info.active = v2660;
          this.buttons[this.ΔᐃⵠⵠⲆᐃᐃ].info.active = v2660;
        }
        if (this.ⲆⵠⵠᐃΔᐃⵠ === this.ᐃⲆΔΔΔΔᐃ) {
          this.buttons[this.ⲆⵠⵠᐃΔᐃⵠ].info.state = v2234;
        } else if (this.ⲆΔⲆⵠΔⵠᐃ === this.ᐃⲆΔΔΔΔᐃ) {
          this.buttons[this.ⲆΔⲆⵠΔⵠᐃ].info.state = v2234;
        } else if (this.ⲆⲆⵠᐃⵠΔⵠ === this.ᐃⲆΔΔΔΔᐃ) {
          this.buttons[this.ⲆⲆⵠᐃⵠΔⵠ].info.state = v2234;
        } else if (this.ⲆⲆΔⵠᐃΔᐃ === this.ᐃⲆΔΔΔΔᐃ) {
          this.buttons[this.ⲆⲆΔⵠᐃΔᐃ].info.state = v2234;
        } else if (this.ᐃⲆΔΔΔΔᐃ === this.ⵠΔⵠⵠᐃⵠⵠ) {
          this.buttons[this.ⵠΔⵠⵠᐃⵠⵠ].info.state = v2234;
        }
        if (this.ⵠⲆᐃᐃⲆⲆΔ === this.ⵠΔⲆⲆᐃⲆᐃ) {
          this.buttons[this.ⵠⲆᐃᐃⲆⲆΔ].info.state = v2234;
        } else if (this.ΔⲆⵠⲆΔᐃΔ === this.ⵠΔⲆⲆᐃⲆᐃ) {
          this.buttons[this.ΔⲆⵠⲆΔᐃΔ].info.state = v2234;
        } else if (this.ΔᐃⵠⵠⲆᐃᐃ === this.ⵠΔⲆⲆᐃⲆᐃ) {
          this.buttons[this.ΔᐃⵠⵠⲆᐃᐃ].info.state = v2234;
        }
        if (this.ᐃⲆΔⵠᐃⵠᐃ === this.ΔⲆΔⲆΔⵠᐃ) {
          this.buttons[this.ΔⲆΔⲆΔⵠᐃ].info.state = v2234;
        } else if (this.ᐃⲆΔⵠᐃⵠᐃ === this.ⲆΔⲆⵠⲆΔⵠ) {
          this.buttons[this.ⲆΔⲆⵠⲆΔⵠ].info.state = v2234;
        } else if (this.ⲆⲆᐃΔᐃⲆᐃ === this.ᐃⲆΔⵠᐃⵠᐃ) {
          this.buttons[this.ⲆⲆᐃΔᐃⲆᐃ].info.state = v2234;
        }
        if (this.ΔᐃᐃᐃⵠⲆⵠ === this.ⵠⲆⲆⵠⲆⲆᐃ) {
          this.buttons[this.ⵠⲆⲆⵠⲆⲆᐃ].info.state = v2234;
        } else if (this.ΔⵠⵠᐃⲆᐃᐃ === this.ΔᐃᐃᐃⵠⲆⵠ) {
          this.buttons[this.ΔⵠⵠᐃⲆᐃᐃ].info.state = v2234;
        } else if (this.ΔᐃᐃᐃⵠⲆⵠ === this.ⲆᐃⲆⵠᐃⵠΔ) {
          this.buttons[this.ⲆᐃⲆⵠᐃⵠΔ].info.state = v2234;
        } else if (this.ᐃⵠⵠΔΔΔⵠ === this.ΔᐃᐃᐃⵠⲆⵠ) {
          this.buttons[this.ᐃⵠⵠΔΔΔⵠ].info.state = v2234;
        } else if (this.ⵠΔᐃⲆⵠΔΔ === this.ΔᐃᐃᐃⵠⲆⵠ) {
          this.buttons[this.ⵠΔᐃⲆⵠΔΔ].info.state = v2234;
        } else if (this.ⵠᐃᐃΔⵠⲆⵠ === this.ΔᐃᐃᐃⵠⲆⵠ) {
          this.buttons[this.ⵠᐃᐃΔⵠⲆⵠ].info.state = v2234;
        } else if (this.ΔΔᐃᐃⲆᐃᐃ === this.ΔᐃᐃᐃⵠⲆⵠ) {
          this.buttons[this.ΔΔᐃᐃⲆᐃᐃ].info.state = v2234;
        }
      }
      if (v2598 === (this.ⲆⲆⲆⲆⲆ & v2598)) {
        if (this.ⵠΔⲆᐃΔᐃⲆ === -1) {
          this.buttons[vV25968].info.state = v2234;
        } else if (this.ⵠΔⲆᐃΔᐃⲆ === 0) {
          this.buttons[vV25969].info.state = v2234;
        } else if (this.ⵠΔⲆᐃΔᐃⲆ === 2) {
          this.buttons[vV259611].info.state = v2234;
        } else if (this.ⵠΔⲆᐃΔᐃⲆ === 3) {
          this.buttons[vV259612].info.state = v2234;
        } else if (this.ⵠΔⲆᐃΔᐃⲆ === 4) {
          this.buttons[vV259610].info.state = v2234;
        }
        if (this.ᐃⵠΔΔⲆΔⲆ === 0) {
          this.buttons[vV2596].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 1) {
          this.buttons[vV25962].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 2) {
          this.buttons[vV25963].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 3) {
          this.buttons[vV25964].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 4) {
          this.buttons[vV25965].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 5) {
          this.buttons[vV25966].info.state = v2234;
        } else if (this.ᐃⵠΔΔⲆΔⲆ === 6) {
          this.buttons[vV25967].info.state = v2234;
        }
      }
      if ((this.ⲆⲆⲆⲆⲆ & v2597) === v2597 && v2862.ΔΔⵠΔΔⵠΔ === 0) {
        if (this.buttons[v2666].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2666].hint = Math.min(1, this.buttons[v2666].hint + v3091 * 1.5);
        } else {
          this.buttons[v2666].hint = Math.max(0, this.buttons[v2666].hint - v3091 * 1.5);
        }
        if (this.buttons[v2667].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2667].hint = Math.min(1, this.buttons[v2667].hint + v3091 * 1.5);
        } else {
          this.buttons[v2667].hint = Math.max(0, this.buttons[v2667].hint - v3091 * 1.5);
        }
        if (this.buttons[v2668].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2668].hint = Math.min(1, this.buttons[v2668].hint + v3091 * 1.5);
        } else {
          this.buttons[v2668].hint = Math.max(0, this.buttons[v2668].hint - v3091 * 1.5);
        }
        if (this.buttons[v2671].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2671].hint = Math.min(1, this.buttons[v2671].hint + v3091 * 1.5);
        } else {
          this.buttons[v2671].hint = Math.max(0, this.buttons[v2671].hint - v3091 * 1.5);
        }
        if (this.buttons[v2669].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2669].hint = Math.min(1, this.buttons[v2669].hint + v3091 * 1.5);
        } else {
          this.buttons[v2669].hint = Math.max(0, this.buttons[v2669].hint - v3091 * 1.5);
        }
        if (this.buttons[v2670].ⲆⲆⲆⲆΔⲆⵠ(v3090.ΔΔⲆΔ)) {
          this.buttons[v2670].hint = Math.min(1, this.buttons[v2670].hint + v3091 * 1.5);
        } else {
          this.buttons[v2670].hint = Math.max(0, this.buttons[v2670].hint - v3091 * 1.5);
        }
      }
      var v2588 = 1;
      if ((this.ⲆⲆⲆⲆⲆ & (v2607 | v2608 | v2609 | v2610 | v2611 | v2612)) > 1) {
        v2585 = ᐃΔ.ⵠⲆⵠᐃⲆⵠΔ;
        p1650.save();
        p1650.translate(v411, v2665 + v2585.height / 4);
        if (this.ΔᐃⲆᐃⵠ === 1) {
          this.ⵠⵠᐃΔⲆΔᐃ += v3091 / 3;
          v2588 = this.ᐃⵠⵠΔΔᐃⵠ - 100 / Math.pow(1 + this.ⵠⵠᐃΔⲆΔᐃ, 1 + this.ⵠⵠᐃΔⲆΔᐃ);
          p1650.rotate(v2588);
        }
        f302(p1650, v2585, -v2585.width / 4, -v2585.height / 4, v2585.width / 2, v2585.height / 2);
        p1650.restore();
      }
      if (v2862.ΔΔⵠΔΔⵠΔ === 0) {
        if (v2862.ⲆⲆⲆⲆᐃ === 0) {
          this.buttons[v2666].info.state = v2234;
        } else if (v2862.ⲆⲆⲆⲆᐃ === 4) {
          this.buttons[v2667].info.state = v2234;
        } else if (v2862.ⲆⲆⲆⲆᐃ === 2) {
          this.buttons[v2669].info.state = v2234;
        } else if (v2862.ⲆⲆⲆⲆᐃ === 3) {
          this.buttons[v2670].info.state = v2234;
        } else if (v2862.ⲆⲆⲆⲆᐃ === 6) {
          this.buttons[v2668].info.state = v2234;
        } else if (v2862.ⲆⲆⲆⲆᐃ === 7) {
          this.buttons[v2671].info.state = v2234;
        }
      }
      for (v2581 = 1; this.buttons.length > v2581; v2581++) {
        if (v2660 === this.buttons[v2581].info.active) {
          this.buttons[v2581].ⲆⵠⲆᐃ(p1650);
        }
      }
      this.ⵠᐃⵠΔ[0].ⲆⵠⲆᐃ(p1650);
      if ((this.ⲆⲆⲆⲆⲆ & (v2620 | v2619)) > 0) {
        v2585 = this.ΔⵠΔᐃΔΔᐃ;
        f302(p1650, v2585, v411 - v2585.width / 4, 138, v2585.width / 2, v2585.height / 2);
      }
      var v2589 = Math.max(1, Math.min(18, Math.floor((v2858.ⲆⲆⲆⵠΔ + 3) / 2)));
      this.ⵠᐃⵠΔ[v2589].active = v2660;
      this.ⵠᐃⵠΔ[v2589].ⲆⵠⲆᐃ(p1650);
      this.ⵠᐃⵠΔ[v2589].active = v2659;
      this.buttons[0].ⲆⵠⲆᐃ(p1650);
      if ((this.ⲆⲆⲆⲆⲆ & (v2600 | v2615 | v2616 | v2613 | v2617)) > 1) {
        var v2590 = (this.ⲆⲆⲆⲆⲆ & (v2615 | v2616 | v2613 | v2617)) > 1 ? -190 : 0;
        v2585 = ⵠΔ[47][this.ⵠᐃⲆⵠᐃ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 + v2590, 183, v2585.width / 2, v2585.height / 2);
        this.ⵠⲆⵠΔ = (this.ⵠⲆⵠΔ + v3091 * 1000) % 2000;
        var v2591 = (this.ⵠⲆⵠΔ < 1000) * 4.5 ? this.ⵠⲆⵠΔ / 1000 : (2000 - this.ⵠⲆⵠΔ) / 1000;
        v2585 = ⵠΔ[46][this.ᐃᐃᐃⵠⲆ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 - 62 + v2591 + v2590, 240, v2585.width / 2, v2585.height / 2);
        v2585 = ⵠΔ[7][this.ⵠⲆⲆΔ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 - 54 + v2591 + v2590, 272, v2585.width / 2, v2585.height / 2);
        f302(p1650, v2585, v411 - v2585.width / 4 + 54 - v2591 + v2590, 272, v2585.width / 2, v2585.height / 2);
        v2585 = ⵠΔ[365][this.ⵠⲆⲆΔ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 + v2590, 222, v2585.width / 2, v2585.height / 2);
        v2585 = ⵠΔ[1045][this.ᐃⲆΔΔⲆ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 + v2590, 222, v2585.width / 2, v2585.height / 2);
      }
      if ((this.ⲆⲆⲆⲆⲆ & v2600) === v2600) {
        v2585 = ⵠΔ[360][this.ⵠᐃᐃⵠᐃ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 - 61, 406 - v2585.height / 4, v2585.width / 2, v2585.height / 2);
        v2585 = ⵠΔ[360][this.ᐃⲆⵠΔⲆ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 + 53, 406 - v2585.height / 4, v2585.width / 2, v2585.height / 2);
      }
      if (v2614 === (this.ⲆⲆⲆⲆⲆ & v2614)) {
        v2585 = ⵠΔ[360][this.ᐃⲆⵠΔⲆ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 - 200, 268 - v2585.height / 4, v2585.width / 2, v2585.height / 2);
      }
      if (v2618 === (this.ⲆⲆⲆⲆⲆ & v2618)) {
        v2585 = ⵠΔ[360][this.ⵠᐃᐃⵠᐃ][this.ᐃΔⵠⵠᐃⵠⵠ];
        f302(p1650, v2585, v411 - v2585.width / 4 - 200, 268 - v2585.height / 4, v2585.width / 2, v2585.height / 2);
      }
      if ((this.ⲆⲆⲆⲆⲆ & (v2615 | v2616 | v2613 | v2617 | v2614 | v2618)) > 1) {
        for (v2581 = 1; v2581 < this.buttons.length; v2581++) {
          if (this.buttons[v2581].view & this.ⲆⲆⲆⲆⲆ) {
            var v2592 = this.buttons[v2581].info;
            if (v2592.ⲆΔΔⵠⵠⵠⲆ >= 0) {
              v2585 = v2592.ΔᐃⲆⲆΔΔᐃⲆⵠ[v2592.ⲆΔΔⵠⵠⵠⲆ].ⵠᐃⵠ;
              f302(p1650, v2585, v2592.translate.x - v2585.width / 8 + 44.5, v2592.translate.y - v2585.height / 8 + 45.5, v2585.width / 4, v2585.height / 4);
              if (v2592.ᐃⲆⲆᐃⵠᐃΔ !== 1) {
                v2585 = ᐃΔ.ⵠΔᐃⵠΔᐃⵠ;
                f302(p1650, v2585, v2592.translate.x - v2585.width / 4 + 44.5, v2592.translate.y - v2585.height / 4 + 44.5, v2585.width / 2, v2585.height / 2);
              }
            }
          }
        }
        v2585 = this.ΔⲆᐃⲆᐃΔᐃ;
        f302(p1650, v2585, v411 - 312, 375, v2585.width / 2, v2585.height / 2);
        v2585 = this.ⲆᐃΔᐃᐃⵠⵠ;
        f302(p1650, v2585, v411 - 312, 395, v2585.width / 2, v2585.height / 2);
      }
      if (this.ΔⲆⲆᐃⲆᐃᐃ !== this.ᐃᐃᐃᐃᐃ) {
        this.ΔⲆⲆᐃⲆᐃᐃ = this.ᐃᐃᐃᐃᐃ;
        this.ᐃⵠΔⲆᐃⵠⲆ = f437("" + this.ᐃᐃᐃᐃᐃ, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250);
      }
      f302(p1650, this.ᐃⵠΔⲆᐃⵠⲆ, this.ⵠᐃⵠΔ[0].translate.x + 350, 15, this.ᐃⵠΔⲆᐃⵠⲆ.w2, this.ᐃⵠΔⲆᐃⵠⲆ.ⵠⲆᐃᐃⲆ);
      if (this.ⲆⲆⲆⵠΔ !== this.ⵠⵠⵠΔΔᐃⵠ) {
        this.ⵠⵠⵠΔΔᐃⵠ = this.ⲆⲆⲆⵠΔ;
        this.ⵠΔⵠΔΔΔⲆ = f437("LVL " + (this.ⲆⲆⲆⵠΔ + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, vVVVVUndefined172, 30, 24, vVVVUndefined1422, undefined, vVUndefined, undefined, "#3F3019", 20);
      }
      f302(p1650, this.ⵠΔⵠΔΔΔⲆ, this.ⵠᐃⵠΔ[0].translate.x + 94, 0, this.ⵠΔⵠΔΔΔⲆ.w2, this.ⵠΔⵠΔΔΔⲆ.ⵠⲆᐃᐃⲆ);
      if (v2862.ΔΔⵠΔΔⵠΔ === 0) {
        if ((v2593 = this.buttons[v2666].hint) > 0) {
          v2585 = ᐃΔ.ⵠᐃⲆᐃⵠⵠΔ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) * v2585.height / 2, v2585.width / 2, v2585.height / 2);
        }
        if ((v2593 = this.buttons[v2667].hint) > 0) {
          v2585 = ᐃΔ.ΔⵠᐃΔΔᐃᐃ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) * v2585.height / 2, v2585.width / 2, v2585.height / 2);
        }
        if ((v2593 = this.buttons[v2668].hint) > 0) {
          v2585 = ᐃΔ.ⲆⵠΔΔᐃΔΔ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) * v2585.height / 2, v2585.width / 2, v2585.height / 2);
        }
        var v2593 = this.buttons[v2671].hint;
        if (v2593 > 0) {
          v2585 = ᐃΔ.Δᐃⵠᐃⵠⵠᐃ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - v2585.height * ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) / 2, v2585.width / 2, v2585.height / 2);
        }
        if ((v2593 = this.buttons[v2670].hint) > 0) {
          v2585 = ᐃΔ.ⲆᐃΔⲆΔᐃⵠ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) * v2585.height / 2, v2585.width / 2, v2585.height / 2);
        }
        if ((v2593 = this.buttons[v2669].hint) > 0) {
          v2585 = ᐃΔ.ᐃⲆΔⵠᐃΔⵠ;
          f302(p1650, v2585, v411 - v2585.width / 4, -36 - ⵠⵠΔ.ⲆΔᐃᐃⵠ(1 - v2593) * v2585.height / 2, v2585.width / 2, v2585.height / 2);
        }
      }
      if (this.ΔᐃⲆᐃⵠ === 1 && Math.abs(v2588 - this.ᐃⵠⵠΔΔᐃⵠ) < 0.006) {
        p1650.globalAlpha = Math.min(1, this.ⵠⲆⵠΔⵠΔᐃ * 3);
        v2585 = ᐃΔ.ⵠⲆΔᐃⲆⲆᐃ;
        p1650.save();
        p1650.translate(v411, 260);
        this.ⵠⲆⵠΔⵠΔᐃ += v3091;
        p1650.rotate(this.ⵠⲆⵠΔⵠΔᐃ);
        f302(p1650, v2585, -v2585.width / 2, -v2585.height / 2, v2585.width, v2585.height);
        p1650.restore();
        v2591 = 1.05 + Math.cos(this.ⵠⲆⵠΔⵠΔᐃ * 5) * 0.05;
        if (this.ᐃⵠΔⵠΔᐃΔ === 0) {
          var v2594 = v2591 * (v2585 = ΔⵠΔΔ.ΔΔΔⲆⲆ[this.ⲆⵠⲆⲆⲆᐃᐃ].ⵠᐃⵠ).width;
          var v2595 = v2585.height * v2591;
          f302(p1650, v2585, v411 - v2594 / 2, 260 - v2595 / 2, v2594, v2595);
        } else if (this.ᐃⵠΔⵠΔᐃΔ === 1) {
          v2594 = (v2585 = ΔⵠΔΔ.ΔΔΔⲆⲆ[0].ⵠᐃⵠ).width * v2591;
          v2595 = v2591 * v2585.height;
          f302(p1650, v2585, v411 - v2594 / 2, 260 - v2595 / 2, v2594, v2595);
          v2594 = (v2585 = ΔⵠΔΔ.ⵠΔⲆⲆⵠ[this.ⲆⵠⲆⲆⲆᐃᐃ].ⵠᐃⵠ).width * v2591;
          v2595 = v2585.height * v2591;
          f302(p1650, v2585, v411 - v2594 / 2, 260 - v2595 / 2, v2594, v2595);
        } else if (this.ᐃⵠΔⵠΔᐃΔ === 2) {
          v2594 = (v2585 = ΔⵠΔΔ.ⲆⲆΔⲆ[this.ⲆⵠⲆⲆⲆᐃᐃ].ⵠᐃⵠ).width * v2591;
          v2595 = v2591 * v2585.height;
          f302(p1650, v2585, v411 - v2594 / 2, 180 - v2595 / 2, v2594, v2595);
          v2594 = (v2585 = ΔⵠΔΔ.ΔΔΔⲆⲆ[0].ⵠᐃⵠ).width * v2591;
          v2595 = v2591 * v2585.height;
          f302(p1650, v2585, v411 - v2594 / 2, 260 - v2595 / 2, v2594, v2595);
        } else if (this.ᐃⵠΔⵠΔᐃΔ === 3) {
          v2594 = (v2585 = ΔⵠΔΔ.ⲆᐃⲆΔⵠ[this.ⲆⵠⲆⲆⲆᐃᐃ].ⵠᐃⵠ).width * v2591;
          v2595 = v2585.height * v2591;
          p1650.save();
          p1650.translate(v411, 260);
          p1650.rotate(Math.PI);
          f302(p1650, v2585, -v2594 / 2, -v2595 / 2, v2594, v2595);
          p1650.restore();
        } else if (this.ᐃⵠΔⵠΔᐃΔ === 4) {
          v2594 = v2591 * (v2585 = ΔⵠΔΔ.ΔⲆⵠΔⵠ[this.ⲆⵠⲆⲆⲆᐃᐃ].ⵠᐃⵠ).width;
          v2595 = v2591 * v2585.height;
          f302(p1650, v2585, v411 - v2594 / 2, 260 - v2595 / 2, v2594, v2595);
        }
        v2585 = this.ΔΔⲆⲆⵠᐃΔ;
        f302(p1650, v2585, v411 - v2585.width / 4, 340, v2585.width / 2, v2585.height / 2);
        v2585 = this.ⵠⲆΔⵠⲆⵠⵠ;
        f302(p1650, v2585, v411 - v2585.width / 4, 365, v2585.width / 2, v2585.height / 2);
        if (this.ⵠⲆⵠΔⵠΔᐃ > 6) {
          this.ΔᐃⲆᐃⵠ = 0;
          f498(v2601);
        }
        p1650.globalAlpha = 1;
      }
      v2860.alert.ⲆⵠⲆᐃ("#FFF", "#000");
      if (vThis.waiting) {
        this.ᐃᐃⵠᐃΔᐃⲆ.ⲆⵠⲆᐃ();
      }
    };
    var v2596 = 0;
    var v2597 = Math.pow(2, v2596++);
    var v2598 = Math.pow(2, v2596++);
    this.ᐃΔᐃⲆᐃ = v2598;
    var v2599 = Math.pow(2, v2596++);
    var v2600 = Math.pow(2, v2596++);
    var v2601 = Math.pow(2, v2596++);
    var v2602 = Math.pow(2, v2596++);
    var v2603 = Math.pow(2, v2596++);
    var v2604 = Math.pow(2, v2596++);
    this.ᐃⲆᐃⵠⲆ = v2604;
    var v2605 = Math.pow(2, v2596++);
    var v2606 = Math.pow(2, v2596++);
    var v2607 = Math.pow(2, v2596++);
    var v2608 = Math.pow(2, v2596++);
    var v2609 = Math.pow(2, v2596++);
    var v2610 = Math.pow(2, v2596++);
    var v2611 = Math.pow(2, v2596++);
    var v2612 = Math.pow(2, v2596++);
    var v2613 = Math.pow(2, v2596++);
    var v2614 = Math.pow(2, v2596++);
    var v2615 = Math.pow(2, v2596++);
    var v2616 = Math.pow(2, v2596++);
    var v2617 = Math.pow(2, v2596++);
    var v2618 = Math.pow(2, v2596++);
    var v2619 = Math.pow(2, v2596++);
    var v2620 = Math.pow(2, v2596++);
    var v2621 = Math.pow(2, v2596++);
    this.ᐃᐃⵠⲆᐃ = v2621;
    var v2622 = Math.pow(2, v2596++);
    this.ΔΔⲆⲆΔᐃⲆ = v2622;
    var v2623 = Math.pow(2, v2596++);
    this.ΔᐃΔⲆΔ = v2623;
    var v2624 = Math.pow(2, v2596++);
    function f496(p1660, p1661, p1662) {
      for (var v2625 = 0; v2625 < vThis.ⵠᐃⵠΔ.length; v2625++) {
        if (vThis.ⵠᐃⵠΔ[v2625].view & p1660) {
          vThis.ⵠᐃⵠΔ[v2625].active = p1661;
        }
      }
      for (v2625 = 0; v2625 < vThis.buttons.length; v2625++) {
        if (vThis.buttons[v2625].view & p1660) {
          vThis.buttons[v2625].info.active = p1661;
        }
      }
      for (v2625 = 0; v2625 < vThis.ⵠⲆᐃᐃⵠᐃⲆ.length; v2625++) {
        if (vThis.ⵠⲆᐃᐃⵠᐃⲆ[v2625].view & p1660) {
          vThis.ⵠⲆᐃᐃⵠᐃⲆ[v2625].style.display = p1662;
        }
      }
    }
    this.ⲆⲆⲆⲆⲆ = v2597;
    function f497() {
      var vNumber7 = Number(ⵠⲆΔⲆ.get("starve_crate"));
      var vNumber8 = Number(ⵠⲆΔⲆ.get("starve_dead"));
      var vNumber9 = Number(ⵠⲆΔⲆ.get("starve_book"));
      var vNumber10 = Number(ⵠⲆΔⲆ.get("starve_bag"));
      var vNumber11 = Number(ⵠⲆΔⲆ.get("starve_skin"));
      var vNumber12 = Number(ⵠⲆΔⲆ.get("starve_accessory"));
      if (!(v2858.unlock.ⵠⲆⲆΔ[v2858.ⵠⲆⲆΔ] > 0)) {
        v2858.ⵠⲆⲆΔ = v2858.unlock.ⵠⲆⲆΔ[vNumber11] > 0 ? vNumber11 : 0;
      }
      if (!(v2858.unlock.ᐃᐃᐃⵠⲆ[v2858.ᐃᐃᐃⵠⲆ] > 0)) {
        v2858.ᐃᐃᐃⵠⲆ = v2858.unlock.ᐃᐃᐃⵠⲆ[vNumber9] > 0 ? vNumber9 : 0;
      }
      if (!(v2858.unlock.ᐃⲆⵠΔⲆ[v2858.ᐃⲆⵠΔⲆ] > 0)) {
        v2858.ᐃⲆⵠΔⲆ = v2858.unlock.ᐃⲆⵠΔⲆ[vNumber8] > 0 ? vNumber8 : 0;
      }
      if (!(v2858.unlock.ⵠᐃᐃⵠᐃ[v2858.ⵠᐃᐃⵠᐃ] > 0)) {
        v2858.ⵠᐃᐃⵠᐃ = v2858.unlock.ⵠᐃᐃⵠᐃ[vNumber7] > 0 ? vNumber7 : 0;
      }
      if (!(v2858.unlock.ᐃⲆΔΔⲆ[v2858.ᐃⲆΔΔⲆ] > 0)) {
        v2858.ᐃⲆΔΔⲆ = v2858.unlock.ᐃⲆΔΔⲆ[vNumber12] > 0 ? vNumber12 : 0;
      }
      if (!(v2858.unlock.ⵠᐃⲆⵠᐃ[v2858.ⵠᐃⲆⵠᐃ] > 0)) {
        v2858.ⵠᐃⲆⵠᐃ = v2858.unlock.ⵠᐃⲆⵠᐃ[vNumber10] > 0 ? vNumber10 : 0;
      }
    }
    function f498(p1663) {
      if (vThis.ᐃΔⲆⲆΔⲆⲆ !== false) {
        f496(v2605, v2659, "none");
        f496(v2606, v2659, "none");
        f497();
        if (p1663 !== vThis.ⲆⲆⲆⲆⲆ && !(vThis.ΔᐃⲆᐃⵠ >= 1)) {
          vThis.ⲆⲆᐃΔᐃⲆⲆ.style.display = p1663 === v2597 || p1663 === v2601 || v2598 === p1663 || v2603 === p1663 || p1663 === v2600 || p1663 === v2602 ? "inline-block" : "none";
          f496(vThis.ⲆⲆⲆⲆⲆ, v2659, "none");
          vThis.ⲆⲆⲆⲆⲆ = p1663;
          f496(vThis.ⲆⲆⲆⲆⲆ, v2660, "inline-block");
        }
      }
    }
    function f499() {
      f497();
      if (v3105 % 2 || vVVVVVUndefined173 === vWindow.Widget) {
        console.log(undefined);
        v2862.connect();
      } else {
        console.log(vVVVVVUndefined173);
        if (vWindow.Widget.isBlocked === 1) {
          vWindow.Widget.createAdPlayer(v2862.connect.bind(v2862), v2862.connect.bind(v2862));
        } else {
          vWindow.Widget.preroll();
          vWindow.Widget.play = v2862.connect.bind(v2862);
        }
      }
    }
    function f500(p1664, p1665, p1666) {
      const v2626 = new XMLHttpRequest();
      v2626.open("GET", p1664);
      v2626.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v2626.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          if (p1665 !== vVVVVVUndefined173) {
            p1665(v2626.responseText);
          }
        } else if (this.readyState == 4 && p1666 !== vVVUndefined18) {
          p1666();
        }
      };
      v2626.send();
    }
    function f501(p1667) {
      if (v2860.ΔⲆⵠᐃⲆⲆⲆ !== vVVUndefined18 && v2860.ΔⲆⵠΔᐃⲆⵠ !== undefined && v2860.ΔⲆΔⵠⲆⲆΔ !== undefined && vVUndefined6 !== v2860.ᐃᐃⲆⵠⲆᐃⵠ) {
        p1667();
      }
    }
    this.ΔᐃᐃᐃⲆΔΔ = 0;
    this.ᐃⵠⵠᐃ = f498;
    this.ΔⵠΔⵠⵠⲆⲆ = function (p1668, p1669) {
      let v2627 = 0;
      let v2628 = "0";
      if (vUndefined5) {
        v2628 = vUndefined5 + vF27.ⲆΔᐃΔᐃᐃΔ();
      }
      if (v2860.ΔⲆⵠᐃⲆⲆⲆ) {
        f501(p1668);
      } else {
        f500(`${v3120}token?id=${v2628}`, function (p1670) {
          if (v2627 === 1) {
            return;
          }
          const v2629 = p1670.split("_");
          const v2630 = v2629[0] + "_";
          const vNumber13 = Number(v2629[1]);
          const v2631 = Math.abs(f30(vNumber13));
          v2860.ΔⲆⵠᐃⲆⲆⲆ = v2630 + v2631;
          f501(p1668);
        }, function () {
          if (v2627 !== 1) {
            if (p1669 === 1) {
              v2627 = 1;
              p1668();
              return;
            } else {
              vThis.waiting = vVVV16;
              return;
            }
          }
        });
      }
      f500(`${v3121}let`, function (p1671) {
        if (v2627 === 1) {
          return;
        }
        var v2632 = 53;
        if (v2632 > 2) {
          v2632 = 251;
        }
        p1671 = p1671.split(":");
        {
          const v2633 = 187;
          Math.floor(187[v2633.ⲆⵠⲆΔΔΔⲆ]);
          var v2634 = 216;
          if (v2634 >= 14) {
            v2634 = 163;
          }
          const v2635 = p1671[0].split("_");
          204 .ᐃᐃΔⲆᐃᐃⵠⲆⵠ = 5;
          ({}).ⲆᐃⵠⲆⵠΔᐃⵠΔ = 4;
          var v2636 = 237;
          if (v2636 == 13) {
            v2636 = 43;
          }
          const v2637 = v2635[0] + "_";
          if (28 == 188) {
            251;
          }
          const vNumber14 = Number(v2635[1]);
          const v2638 = Math.abs(f86(vNumber14));
          if (52 <= 155) {
            251;
          }
          if (240 === 123) {
            28;
          }
          if (23 >= 167) {
            237;
          }
          v2860.ΔⲆⵠΔᐃⲆⵠ = v2637 + v2638;
          v2860.ⵠΔⵠⵠᐃⵠΔ = v2638;
        }
        {
          const v2639 = p1671[1].split("_");
          var v2640 = 174;
          if (v2640 > 8) {
            v2640 = 199;
          }
          const v2641 = v2639[0] + "_";
          const vNumber15 = Number(v2639[1]);
          var v2642 = 114;
          if (v2642 >= 6) {
            v2642 = 221;
          }
          const v2643 = Math.abs(f60(vNumber15));
          v2860.ΔⲆΔⵠⲆⲆΔ = v2641 + v2643;
          if (56 == 253) {
            252;
          }
          v2860.ΔᐃⵠᐃⲆᐃΔⵠⲆ = v2643;
          if (216 <= 2) {
            194;
          }
          if (235 === 174) {
            235;
          }
        }
        var v2644 = 172;
        if (v2644 === 12) {
          v2644 = 166;
        }
        {
          const v2645 = p1671[2].split("_");
          const v2646 = v2645[0] + "_";
          var v2647 = 50;
          if (v2647 === 0) {
            v2647 = 153;
          }
          const vNumber16 = Number(v2645[1]);
          const v2648 = 135;
          Math.floor(135[v2648.ⲆᐃⲆⵠⲆΔΔ]);
          const v2649 = Math.abs(f60(vNumber16));
          v2860.ᐃᐃⲆⵠⲆᐃⵠ = v2646 + v2649;
          v2860.ᐃΔⲆⵠᐃΔᐃⲆⲆ = v2649;
        }
        f501(p1668);
      }, function () {
        if (v2627 !== 1) {
          if (p1669 === 1) {
            v2627 = 1;
            p1668();
            return;
          } else {
            vThis.waiting = false;
            return;
          }
        }
      });
    };
    this.ⲆⵠⵠᐃⲆⲆⵠ = function () {
      if (vThis.waiting === vVVV1622) {
        v2860.reconnect.enabled = vVVVVV1623;
        vThis.waiting = true;
        vThis.ΔⵠΔⵠⵠⲆⲆ(f499);
      }
    };
    var v2650 = 1;
    var v2651 = 2;
    var v2652 = 4;
    var v2653 = 8;
    var v2654 = 16;
    var v2655 = 32;
    var v2656 = 1;
    var v2657 = 0;
    var v2658 = 1;
    var v2659 = 0;
    var v2660 = 1;
    if (vWindow.innerWidth < 1300) {
      this.ᐃΔⵠⵠΔ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2660,
        position: v2652 | v2650,
        view: v2597,
        translate: {
          x: 0,
          y: 0,
          ᐃΔⲆᐃᐃ: 200,
          ΔⲆΔᐃΔ: 184
        }
      };
    } else {
      this.ᐃΔⵠⵠΔ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2660,
        position: v2652 | v2654,
        view: v2597,
        translate: {
          y: 0,
          ᐃΔⲆᐃᐃ: -180,
          x: 0,
          ΔⲆΔᐃΔ: 184
        }
      };
    }
    this.ᐃΔⵠⵠΔ.id.addEventListener("keyup", function (p1672) {
      p1672.preventDefault();
      if (p1672.keyCode == 13 && !vThis.waiting && !vThis.ΔⵠᐃⵠᐃᐃⲆⵠⲆ) {
        vThis.ⲆⵠⵠᐃⲆⲆⵠ();
      }
    });
    this.ᐃΔⵠⵠΔ.input.value = ⵠⲆΔⲆ.get("starve_nickname") ? ⵠⲆΔⲆ.get("starve_nickname") : "";
    this.ⲆᐃᐃΔΔΔᐃᐃⵠ = {
      id: document.getElementById("account_nickname_block"),
      style: document.getElementById("account_nickname_block").style,
      input: document.getElementById("account_nickname_input"),
      active: v2659,
      position: v2652 | v2654,
      view: v2598,
      translate: {
        y: 0,
        x: 0,
        ΔⲆΔᐃΔ: 110,
        ᐃΔⲆᐃᐃ: -122
      }
    };
    if (vWindow.innerWidth < 1300) {
      this.ᐃⲆⵠⲆᐃ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2660,
        position: v2652 | v2650,
        view: v2597,
        translate: {
          ΔⲆΔᐃΔ: 225,
          x: 0,
          ᐃΔⲆᐃᐃ: 208,
          y: 0
        }
      };
    } else {
      this.ᐃⲆⵠⲆᐃ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2660,
        position: v2652 | v2654,
        view: v2597,
        translate: {
          y: 0,
          ΔⲆΔᐃΔ: 225,
          x: 0,
          ᐃΔⲆᐃᐃ: -180
        }
      };
    }
    this.ⵠᐃⵠⲆⲆ = {
      id: document.getElementById("leaderboard"),
      style: document.getElementById("leaderboard").style,
      active: v2659,
      position: v2652 | v2654,
      view: v2603,
      translate: {
        ᐃΔⲆᐃᐃ: -294.5,
        ΔⲆΔᐃΔ: 190,
        y: 0,
        x: 0
      }
    };
    this.ΔΔⵠⵠⵠⵠΔⵠᐃ = {
      id: document.getElementById("stats_box"),
      style: document.getElementById("stats_box").style,
      active: v2659,
      position: v2652 | v2654,
      view: v2598,
      translate: {
        ᐃΔⲆᐃᐃ: 125,
        ΔⲆΔᐃΔ: 187,
        y: 0,
        x: 0
      }
    };
    this.ᐃⵠⵠⲆΔⲆΔⵠⲆ = {
      id: document.getElementById("serverAddressBlock"),
      style: document.getElementById("serverAddressBlock").style,
      input: document.getElementById("serverAddressInput"),
      active: v2659,
      position: v2652 | v2654,
      view: v2623,
      translate: {
        ΔⲆΔᐃΔ: 350,
        y: 0,
        x: 0,
        ᐃΔⲆᐃᐃ: -260
      }
    };
    v2596 = 0;
    this.ⵠⲆᐃᐃⵠᐃⲆ = [];
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ᐃΔⵠⵠΔ;
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ᐃⲆⵠⲆᐃ;
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ⵠᐃⵠⲆⲆ;
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ⲆᐃᐃΔΔΔᐃᐃⵠ;
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ΔΔⵠⵠⵠⵠΔⵠᐃ;
    this.ⵠⲆᐃᐃⵠᐃⲆ[v2596++] = this.ᐃⵠⵠⲆΔⲆΔⵠⲆ;
    v2596 = 0;
    this.ⵠᐃⵠΔ = [];
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠⲆⲆᐃΔΔΔ, v2660, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔΔⵠⲆᐃΔᐃ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠΔΔᐃΔᐃⵠ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔᐃⲆᐃⲆᐃⵠ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔⲆᐃⵠⲆⲆⵠ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠⲆⵠⵠΔⲆᐃ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔⲆΔΔⵠⵠᐃ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠΔΔⵠⵠΔΔ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ᐃΔΔᐃΔᐃⵠ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠᐃⵠⲆᐃᐃᐃ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠⲆⵠⲆⲆⲆⲆ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⲆⲆⵠΔⲆⵠⲆ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ⵠΔᐃᐃⵠΔⲆ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔΔⵠΔΔᐃΔ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ᐃᐃΔᐃΔⲆⵠ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔΔᐃⲆΔΔΔ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔⲆⵠⵠΔΔΔ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ᐃΔΔΔⲆᐃⲆ, v2659, 0, 0, v2650);
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ᐃⵠΔᐃⲆᐃΔ, v2659, 0, 0, v2650);
    if (vWindow.innerWidth < 1300) {
      this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔⵠΔᐃⲆⲆᐃ, v2660, 200, 100, v2652 | v2650);
    } else {
      this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔⵠΔᐃⲆⲆᐃ, v2660, -753 / 4, 100, v2652 | v2654);
    }
    this.ⵠᐃⵠΔ[v2596++].view = v2597;
    this.ⵠᐃⵠΔ[v2596++] = f436(ᐃΔ.ΔΔⲆᐃⲆΔΔ, v2660, 403, -10, v2651);
    if (vWindow.innerWidth > 1300) {
      this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⵠᐃⲆⲆᐃⵠΔ, v2660, -885 / 4, -319 / 2, v2653 | v2654);
      this.ⵠᐃⵠΔ[v2596++].view = v2597;
    }
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃᐃΔⲆⵠⲆΔ, v2659, -323.25, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2598;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔⲆⲆⵠΔⵠᐃ, v2659, -356.25, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2600;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⵠⵠⲆΔΔⲆΔ, v2659, -905 / 4, 50, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2599;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆᐃΔΔΔⵠⲆ, v2659, -402, 130, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2601;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆᐃᐃⵠΔⵠᐃ, v2659, -279.25, 130, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2621;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃᐃᐃⲆⵠⵠⲆ, v2659, -305.5, 130, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2622;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃᐃΔⲆΔᐃᐃ, v2659, -305.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2623;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆᐃⲆᐃⵠⲆⵠ, v2659, -ᐃΔ.ⲆᐃⲆᐃⵠⲆⵠ.width / 4 - 350, -15, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2624;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆⲆⲆⵠΔΔᐃ, v2659, -374.25, 110, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2602;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃⵠⵠⵠᐃⲆΔ, v2659, -306.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2603;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔⲆᐃᐃᐃⵠΔ, v2659, -345.25, 80, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2604;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃⲆⲆⲆⲆᐃΔ, v2659, -385.5, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2607;
    var v2661 = 3.6;
    var v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2607;
    this.ⵠⵠⵠΔᐃΔᐃⲆⵠ = function (p1673, p1674, p1675) {
      var v2663;
      vThis.ΔᐃⲆᐃⵠ = 1;
      vThis.ⵠⵠᐃΔⲆΔᐃ = 0;
      vThis.ⵠⲆⵠΔⵠΔᐃ = 0;
      vThis.ᐃⵠⵠΔΔᐃⵠ = p1673;
      vThis.ᐃⵠΔⵠΔᐃΔ = p1674;
      var v2664 = 0;
      if (p1674 === 0) {
        for (v2664 = 0; ΔⵠΔΔ.ΔΔΔⲆⲆ.length > v2664 && p1675 !== ΔⵠΔΔ.ΔΔΔⲆⲆ[v2664].id; v2664++);
        v2663 = ΔⵠΔΔ.ΔΔΔⲆⲆ[v2664];
        vThis.unlock.ⵠⲆⲆΔ[v2664] = 1;
      } else if (p1674 === 1) {
        for (v2664 = 0; v2664 < ΔⵠΔΔ.ⵠΔⲆⲆⵠ.length && ΔⵠΔΔ.ⵠΔⲆⲆⵠ[v2664].id !== p1675; v2664++);
        v2663 = ΔⵠΔΔ.ⵠΔⲆⲆⵠ[v2664];
        vThis.unlock.ᐃⲆΔΔⲆ[v2664] = 1;
      } else if (p1674 === 2) {
        for (v2664 = 0; ΔⵠΔΔ.ⲆⲆΔⲆ.length > v2664 && p1675 !== ΔⵠΔΔ.ⲆⲆΔⲆ[v2664].id; v2664++);
        v2663 = ΔⵠΔΔ.ⲆⲆΔⲆ[v2664];
        vThis.unlock.ⵠᐃⲆⵠᐃ[v2664] = 1;
      } else if (p1674 === 3) {
        for (v2664 = 0; v2664 < ΔⵠΔΔ.ⲆᐃⲆΔⵠ.length && ΔⵠΔΔ.ⲆᐃⲆΔⵠ[v2664].id !== p1675; v2664++);
        v2663 = ΔⵠΔΔ.ⲆᐃⲆΔⵠ[v2664];
        vThis.unlock.ᐃᐃᐃⵠⲆ[v2664] = 1;
      } else if (p1674 === 4) {
        for (v2664 = 0; v2664 < ΔⵠΔΔ.ΔⲆⵠΔⵠ.length && ΔⵠΔΔ.ΔⲆⵠΔⵠ[v2664].id !== p1675; v2664++);
        v2663 = ΔⵠΔΔ.ΔⲆⵠΔⵠ[v2664];
        vThis.unlock.ⵠᐃᐃⵠᐃ[v2664] = 1;
        vThis.unlock.ᐃⲆⵠΔⲆ[v2664] = 1;
      }
      vThis.ⲆⵠⲆⲆⲆᐃᐃ = v2664;
      vThis.ⵠⲆΔⵠⲆⵠⵠ = f437("by " + v2663.Δᐃⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, vVVVVUndefined1722, 30, 24, undefined, vUndefined, undefined, vVVVVUndefined173, "#000000", 24);
      vThis.ΔΔⲆⲆⵠᐃΔ = f437(v2663.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, vVVUndefined163, 30, 24, undefined, undefined, vVVVVVUndefined173, undefined, "#000000", 20);
    };
    this.ΔᐃⲆᐃⵠ = 0;
    this.ⵠⵠᐃΔⲆΔᐃ = 0;
    this.ᐃⵠⵠΔΔᐃⵠ = 0;
    this.ᐃⵠΔⵠΔᐃΔ = 0;
    this.ⵠⲆⵠΔⵠΔᐃ = 0;
    this.ⵠⲆΔⵠⲆⵠⵠ = undefined;
    this.ΔΔⲆⲆⵠᐃΔ = undefined;
    var v2665 = 197;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⵠⵠⲆⲆⲆΔⵠ, v2659, -1542 / 4, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2611;
    v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2611;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔΔⵠⵠΔⲆⲆ, v2659, -385.5, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2609;
    v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2609;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔⲆΔⵠᐃΔᐃ, v2659, -1542 / 4, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2610;
    v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2610;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆΔᐃⲆⲆΔⲆ, v2659, -385.5, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2608;
    v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2608;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔᐃᐃⲆⵠⲆⲆ, v2659, -385.5, 150, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2612;
    v2662 = this.ΔⵠΔΔⵠⵠⵠ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2661 * 57]]);
    this.ⵠᐃⵠΔ[v2596] = f436(v2662, v2659, -v2662.width / 4, 178, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2612;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆΔᐃⲆᐃⵠⲆ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2613;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔΔᐃⵠΔΔⲆ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2617;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃⲆⵠⲆⵠⵠⲆ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2615;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃⲆⵠΔⵠⵠΔ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2616;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔᐃᐃⲆᐃⵠᐃ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2614;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆⲆΔΔⲆⵠⵠ, v2659, -341.5, 100, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2618;
    ⵠⲆⵠⵠⵠⵠⵠ = v2596++;
    this.ⵠᐃⵠΔ[ⵠⲆⵠⵠⵠⵠⵠ] = f436(ᐃΔ.ⵠⲆⵠⵠⵠⵠⵠ, v2659, 484, 0, v2652);
    ⲆⵠᐃΔⵠⲆᐃ = v2596++;
    this.ⵠᐃⵠΔ[ⲆⵠᐃΔⵠⲆᐃ] = f436(ᐃΔ.ⲆⵠᐃΔⵠⲆᐃ, v2659, 454 + 597 / 2 + 60, 0, v2652);
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⵠⵠⲆᐃⲆΔᐃ, v2659, -189.5, -5, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2606;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ᐃⲆΔΔⵠⲆⲆ, v2659, -189.5, -5, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2605;
    ΔΔᐃⵠΔᐃⵠ = v2596++;
    this.ⵠᐃⵠΔ[ΔΔᐃⵠΔᐃⵠ] = f436(ᐃΔ.ᐃⵠⵠⵠᐃⲆᐃ, v2660, 93, 30, v2652);
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ΔΔΔΔᐃᐃᐃ, v2659, -173, 110, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2619;
    this.ⵠᐃⵠΔ[v2596] = f436(ᐃΔ.ⲆⲆΔⲆⲆΔⲆ, v2659, -173, 110, v2652 | v2654);
    this.ⵠᐃⵠΔ[v2596++].view = v2620;
    v2596 = 0;
    this.buttons = [];
    this.buttons[v2596] = f438(50, 57, 0, [ᐃΔ.ᐃⲆⲆᐃᐃⲆᐃ, ᐃΔ.ΔⲆᐃⵠⲆⲆⲆ, ᐃΔ.ΔᐃⵠΔⵠΔⲆ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f498(v2604);
      } else {
        f498(v2599);
      }
    }, 320, 0, v2650, v2660);
    v2596++;
    if (vWindow.innerWidth < 1300) {
      this.buttons[v2596] = f438(202, 97, 0, [ᐃΔ.ⲆⵠⵠΔᐃᐃᐃ, ᐃΔ.ⲆΔⵠⵠᐃΔⲆ, ᐃΔ.ΔⵠᐃΔΔΔⲆ], v2656, v2657, this.ⲆⵠⵠᐃⲆⲆⵠ, 462, 235, v2652 | v2650, v2660);
    } else {
      this.buttons[v2596] = f438(202, 97, 0, [ᐃΔ.ⲆⵠⵠΔᐃᐃᐃ, ᐃΔ.ⲆΔⵠⵠᐃΔⲆ, ᐃΔ.ΔⵠᐃΔΔΔⲆ], v2656, v2657, this.ⲆⵠⵠᐃⲆⲆⵠ, 74, 235, v2652 | v2654, v2660);
    }
    this.buttons[v2596].view = v2597;
    v2596++;
    if (vWindow.innerWidth > 1300) {
      this.buttons[v2596] = f438(355, 168, 0, [ᐃΔ.ⵠⲆⵠⵠⵠᐃᐃ, ᐃΔ.ⵠⲆⵠⵠⵠᐃᐃ, ᐃΔ.ⵠⲆⵠⵠⵠᐃᐃ], v2656, v2657, function () {
        vWindow.open("./changelog.html", "_blank");
      }, -195, -115, v2653 | v2654, v2660);
      this.buttons[v2596++].view = v2597;
      this.buttons[v2596] = f438(355, 168, 0, [ᐃΔ.ⲆⵠⲆⲆⲆⵠⲆ, ᐃΔ.ⲆⵠⲆⲆⲆⵠⲆ, ᐃΔ.ⲆⵠⲆⲆⲆⵠⲆ], v2656, v2657, function () {
        vWindow.open("https://taming.io", "_blank");
      }, 20, -115, v2653 | v2654, v2660);
      this.buttons[v2596++].view = v2597;
    }
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ⵠΔⲆΔⲆⵠⲆ, ᐃΔ.ΔⲆⵠⲆᐃⵠΔ, ᐃΔ.ⵠΔⵠⲆΔⲆΔ], v2656, v2657, function () {
      vWindow.open("https://lapamauve.creator-spring.com/", "_blank");
    }, 380, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ⵠⲆⵠᐃⵠⲆⵠ, ᐃΔ.ᐃᐃⲆⲆⲆΔⲆ, ᐃΔ.ⵠΔΔΔⵠⵠᐃ], v2656, v2657, function () {
      vWindow.open("https://discord.gg/starveio", "_blank");
    }, 330, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ⵠᐃⲆⵠⲆᐃΔ, ᐃΔ.ΔⲆᐃⲆΔⵠⵠ, ᐃΔ.ᐃⲆⵠΔⵠⲆᐃ], v2656, v2657, function () {
      vWindow.open("https://reddit.com/r/starveio", "_blank");
    }, 280, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ΔΔⵠᐃᐃΔⲆ, ᐃΔ.ΔΔⵠᐃᐃᐃⵠ, ᐃΔ.ᐃᐃⲆΔⵠΔΔ], v2656, v2657, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, 230, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ΔⵠⵠΔⲆΔᐃ, ᐃΔ.ΔΔᐃᐃΔΔᐃ, ᐃΔ.ⲆΔⵠⵠᐃᐃⲆ], v2656, v2657, function () {
      vWindow.open("https://www.facebook.com/LapaMauve/", "_blank");
    }, 155, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ΔⵠⲆᐃᐃᐃΔ, ᐃΔ.ⲆᐃᐃᐃⵠⲆᐃ, ᐃΔ.ⲆⲆⲆᐃⵠΔᐃ], v2656, v2657, function () {
      vWindow.open("https://twitter.com/lapamauve", "_blank");
    }, 105, 10, v2651, v2660);
    this.buttons[v2596++] = f438(80, 80, 0, [ᐃΔ.ᐃΔᐃⵠⲆᐃⵠ, ᐃΔ.ⵠΔᐃⲆΔᐃΔ, ᐃΔ.ⵠᐃⵠⲆᐃⲆΔ], v2656, v2657, function () {
      vWindow.open("https://www.youtube.com/@lapamauveofficial", "_blank");
    }, 55, 10, v2651, v2660);
    ΔᐃⵠⲆⲆⵠⵠ = v2596++;
    this.buttons[ΔᐃⵠⲆⲆⵠⵠ] = f438(232, 142, 0, [ᐃΔ.ΔᐃᐃᐃΔⵠᐃ, ᐃΔ.ᐃⲆⲆⲆᐃᐃΔ, ᐃΔ.ⲆΔⵠⲆΔᐃΔ], v2656, v2657, function () {
      f498(v2603);
      f543(v2858.ⵠⲆᐃᐃⲆⲆΔ, v2858.ⲆⲆⵠᐃⵠΔⵠ, v2858.ⲆΔⲆⵠⲆΔⵠ, v2858.ΔΔᐃᐃⲆᐃᐃ);
    }, -5, 573, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ᐃΔⲆⲆᐃᐃⲆ, ᐃΔ.ᐃΔⲆⲆᐃᐃⲆ, ᐃΔ.ᐃΔⲆⲆᐃᐃⲆ], v2656, v2658, function () {
      f498(v2603);
    }, -5, 566, v2650, v2660);
    ⵠᐃΔⵠⵠΔΔ = v2596++;
    this.buttons[ⵠᐃΔⵠⵠΔΔ] = f438(236, 165, 0, [ᐃΔ.ΔᐃⵠⵠⲆΔⲆ, ᐃΔ.ΔⵠΔΔⲆⵠⵠ, ᐃΔ.ΔⵠⲆⵠⵠⲆⲆ], v2656, v2657, function () {
      f498(v2602);
    }, -5, 494, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ⲆⵠⲆⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆⵠⵠᐃⵠ, ᐃΔ.ⲆⵠⲆⵠⵠᐃⵠ], v2656, v2658, function () {
      f498(v2602);
    }, -5, 494, v2650, v2660);
    ᐃⲆⲆΔΔⵠΔ = v2596++;
    this.buttons[ᐃⲆⲆΔΔⵠΔ] = f438(236, 165, 0, [ᐃΔ.ΔᐃⵠⵠⲆΔⲆ, ᐃΔ.ΔⵠΔΔⲆⵠⵠ, ᐃΔ.ΔⵠⲆⵠⵠⲆⲆ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        if (v2858.ⲆⲆⵠⵠⵠΔⵠ - Date.now() > 0) {
          f498(v2623);
        } else {
          f498(v2621);
        }
      } else {
        f498(v2599);
      }
    }, -5, 415, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ⵠᐃΔⵠΔΔⵠ, ᐃΔ.ⵠᐃΔⵠΔΔⵠ, ᐃΔ.ⵠᐃΔⵠΔΔⵠ], v2656, v2658, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        if (v2858.ⲆⲆⵠⵠⵠΔⵠ - Date.now() > 0) {
          f498(v2623);
        } else {
          f498(v2621);
        }
      } else {
        f498(v2599);
      }
    }, -5, 415, v2650, v2660);
    ΔⵠᐃⲆᐃΔⲆ = v2596++;
    this.buttons[ΔⵠᐃⲆᐃΔⲆ] = f438(236, 165, 0, [ᐃΔ.ΔᐃⵠⵠⲆΔⲆ, ᐃΔ.ΔⵠΔΔⲆⵠⵠ, ᐃΔ.ΔⵠⲆⵠⵠⲆⲆ], v2656, v2657, function () {
      f498(v2601);
    }, -5, 336, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ᐃᐃⲆΔΔᐃᐃ, ᐃΔ.ᐃᐃⲆΔΔᐃᐃ, ᐃΔ.ᐃᐃⲆΔΔᐃᐃ], v2656, v2658, function () {
      f498(v2601);
    }, -5, 336, v2650, v2660);
    ⵠᐃᐃⲆⵠⵠᐃ = v2596++;
    this.buttons[ⵠᐃᐃⲆⵠⵠᐃ] = f438(236, 165, 0, [ᐃΔ.ΔᐃⵠⵠⲆΔⲆ, ᐃΔ.ΔⵠΔΔⲆⵠⵠ, ᐃΔ.ΔⵠⲆⵠⵠⲆⲆ], v2656, v2657, function () {
      f498(v2600);
    }, -5, 257, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ⵠΔⵠⲆᐃΔΔ, ᐃΔ.ⵠΔⵠⲆᐃΔΔ, ᐃΔ.ⵠΔⵠⲆᐃΔΔ], v2656, v2658, function () {
      f498(v2600);
    }, -5, 257, v2650, v2660);
    ⲆΔΔⵠⵠⵠΔ = v2596++;
    this.buttons[ⲆΔΔⵠⵠⵠΔ] = f438(236, 165, 0, [ᐃΔ.ΔᐃⵠⵠⲆΔⲆ, ᐃΔ.ΔⵠΔΔⲆⵠⵠ, ᐃΔ.ΔⵠⲆⵠⵠⲆⲆ], v2656, v2657, function () {
      f498(v2597);
    }, -5, 178, v2650, v2660);
    this.buttons[v2596++] = f438(236, 165, 0, [ᐃΔ.ⲆⵠⲆⵠΔⵠⵠ, ᐃΔ.ⲆⵠⲆⵠΔⵠⵠ, ᐃΔ.ⲆⵠⲆⵠΔⵠⵠ], v2656, v2658, function () {
      f498(v2597);
    }, -5, 178, v2650, v2660);
    ⵠΔⵠⲆΔⵠᐃ = v2596++;
    this.ⵠΔⵠⲆΔⵠᐃ = ⵠΔⵠⲆΔⵠᐃ;
    this.buttons[ⵠΔⵠⲆΔⵠᐃ] = f438(324, 222, 0, [ᐃΔ.ⲆΔⲆᐃⵠᐃΔ, ᐃΔ.ᐃΔⵠⵠΔⵠᐃ, ᐃΔ.ᐃᐃⲆⲆΔⲆⲆ], v2656, v2657, function () {
      f498(v2599);
    }, 0, 70, v2650, v2660);
    ⲆΔⵠᐃΔⲆΔ = v2596++;
    ΔᐃᐃⲆᐃΔⵠ = v2596++;
    this.ⲆΔⵠᐃΔⲆΔ = ⲆΔⵠᐃΔⲆΔ;
    this.ΔᐃᐃⲆᐃΔⵠ = ΔᐃᐃⲆᐃΔⵠ;
    this.buttons[ⲆΔⵠᐃΔⲆΔ] = f438(324, 222, 0, [ᐃΔ.ⲆᐃⵠⲆᐃⲆΔ, ᐃΔ.ΔⲆⵠⵠᐃⲆⵠ, ᐃΔ.ⲆⲆⵠᐃΔᐃΔ], v2656, v2657, function () {
      f498(v2598);
      f502(-1);
    }, 0, 70, v2650, v2659);
    this.buttons[ΔᐃᐃⲆᐃΔⵠ] = f438(324, 222, 0, [ᐃΔ.ⵠⵠⲆⵠⵠΔᐃ, ᐃΔ.ⵠⵠⲆⵠⵠΔᐃ, ᐃΔ.ⵠⵠⲆⵠⵠΔᐃ], v2656, v2658, function () {
      f498(v2598);
      f502(-1);
    }, 0, 70, v2650, v2659);
    if (v2862.ΔΔⵠΔΔⵠΔ === 0) {
      var v2666 = v2596++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2666] = f438(266, 176, 0, [ᐃΔ.ᐃᐃΔⲆΔᐃΔ, ᐃΔ.ᐃⵠᐃⵠΔⲆⲆ, ᐃΔ.ⵠᐃⲆⵠΔΔΔ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(0);
        }, 150, 300, v2650 | v2652, v2660);
      } else {
        this.buttons[v2666] = f438(266, 176, 0, [ᐃΔ.ᐃᐃΔⲆΔᐃΔ, ᐃΔ.ᐃⵠᐃⵠΔⲆⲆ, ᐃΔ.ⵠᐃⲆⵠΔΔΔ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(0);
        }, -340, 100, v2654 | v2652, v2660);
      }
      this.buttons[v2666].view = v2597;
      this.buttons[v2666].hint = 0;
      var v2667 = v2596++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2667] = f438(266, 176, 0, [ᐃΔ.ΔᐃΔⲆⵠⲆⵠ, ᐃΔ.ⲆΔᐃⲆΔⲆᐃ, ᐃΔ.ᐃⲆⵠΔⵠΔᐃ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(4);
        }, 150, 400, v2650 | v2652, v2660);
      } else {
        this.buttons[v2667] = f438(266, 176, 0, [ᐃΔ.ΔᐃΔⲆⵠⲆⵠ, ᐃΔ.ⲆΔᐃⲆΔⲆᐃ, ᐃΔ.ᐃⲆⵠΔⵠΔᐃ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(4);
        }, -340, 200, v2654 | v2652, v2660);
      }
      this.buttons[v2667].view = v2597;
      this.buttons[v2667].hint = 0;
      var v2668 = v2596++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2668] = f438(266, 176, 0, [ᐃΔ.ΔⵠΔⵠⲆⲆⲆ, ᐃΔ.ⲆᐃᐃΔⲆᐃΔ, ᐃΔ.ⲆⲆᐃⵠⵠⲆⵠ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(6);
        }, 450, 300, v2650 | v2652, v2660);
      } else {
        this.buttons[v2668] = f438(266, 176, 0, [ᐃΔ.ΔⵠΔⵠⲆⲆⲆ, ᐃΔ.ⲆᐃᐃΔⲆᐃΔ, ᐃΔ.ⲆⲆᐃⵠⵠⲆⵠ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(6);
        }, -340, 300, v2654 | v2652, v2660);
      }
      this.buttons[v2668].view = v2597;
      this.buttons[v2668].hint = 0;
      var v2669 = v2596++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2669] = f438(266, 176, 0, [ᐃΔ.ⲆⵠᐃⲆᐃΔΔ, ᐃΔ.ΔⲆᐃⲆⵠΔᐃ, ᐃΔ.ⵠᐃᐃᐃⲆᐃΔ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(2);
        }, 300, 300, v2650 | v2652, v2660);
      } else {
        this.buttons[v2669] = f438(266, 176, 0, [ᐃΔ.ⲆⵠᐃⲆᐃΔΔ, ᐃΔ.ΔⲆᐃⲆⵠΔᐃ, ᐃΔ.ⵠᐃᐃᐃⲆᐃΔ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(2);
        }, 204, 100, v2654 | v2652, v2660);
      }
      this.buttons[v2669].view = v2597;
      this.buttons[v2669].hint = 0;
      var v2670 = v2596++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2670] = f438(266, 176, 0, [ᐃΔ.ⵠⲆΔⲆΔΔΔ, ᐃΔ.ᐃⵠΔⲆΔⲆⲆ, ᐃΔ.ⵠⲆⲆⵠⲆⲆⲆ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(3);
        }, 300, 400, v2650 | v2652, v2660);
      } else {
        this.buttons[v2670] = f438(266, 176, 0, [ᐃΔ.ⵠⲆΔⲆΔΔΔ, ᐃΔ.ᐃⵠΔⲆΔⲆⲆ, ᐃΔ.ⵠⲆⲆⵠⲆⲆⲆ], v2656, v2657, function () {
          v2862.ᐃᐃⲆⲆⲆᐃᐃ(3);
        }, 204, 200, v2654 | v2652, v2660);
      }
      this.buttons[v2670].view = v2597;
      this.buttons[v2670].hint = 0;
      var v2671 = v2596++;
      this.buttons[v2671] = f438(266, 176, 0, [ᐃΔ.ⲆᐃⲆⲆⲆΔⲆ, ᐃΔ.ⵠᐃᐃᐃΔⲆⵠ, ᐃΔ.ⵠΔⲆⵠᐃⵠⲆ], v2656, v2657, function () {
        v2862.ᐃᐃⲆⲆⲆᐃᐃ(7);
      }, vWindow.innerWidth < 1300 ? 450 : 204, vWindow.innerWidth < 1300 ? 400 : 300, (vWindow.innerWidth < 1300 ? v2650 : v2654) | v2652, v2660);
      this.buttons[v2671].view = v2597;
      this.buttons[v2671].hint = 0;
    }
    function f502(p1676, p1677) {
      if (p1677 !== vVVUndefined163) {
        v2858.ᐃⵠΔΔⲆΔⲆ = p1677;
        var v2672 = v2858.ΔⲆⲆⲆⵠⲆᐃ[p1677];
        v2858.ΔⲆΔΔᐃ = v2672.score;
        v2858.ΔΔⵠⵠᐃᐃⲆ = v2672.kill;
        v2858.ⲆᐃᐃᐃⲆΔΔ = v2672.death;
        v2858.time = v2672.time;
        v2858.ⵠᐃⵠᐃΔΔⲆ = v2672.bestScore;
        v2858.ⲆⵠΔⲆⵠΔΔ = v2672.bestKill;
        v2858.ⵠⲆⵠⵠⵠΔΔ = v2672.bestTime;
        v2858.ⲆⲆⲆᐃⲆᐃⵠ = v2672.scoreTotal;
      }
      if (p1676 === vUndefined) {
        p1676 = v2858.ⵠΔⲆᐃΔᐃⲆ;
      }
      v2858.ⵠΔⲆᐃΔᐃⲆ = p1676;
      if (p1676 >= 0) {
        document.getElementById("stats_box_time").innerHTML = v2858.ⵠⲆⵠⵠⵠΔΔ[p1676];
        document.getElementById("stats_box_kill").innerHTML = v2858.ⲆⵠΔⲆⵠΔΔ[p1676];
        document.getElementById("stats_box_score").innerHTML = v2858.ⵠᐃⵠᐃΔΔⲆ[p1676];
      } else {
        var v2673 = 0;
        for (var v2674 = 0; v2674 < v2858.ΔΔⵠⵠᐃᐃⲆ.length; v2674++) {
          v2673 += v2858.ΔΔⵠⵠᐃᐃⲆ[v2674];
        }
        var v2675 = 0;
        for (v2674 = 0; v2858.time.length > v2674; v2674++) {
          v2675 += v2858.time[v2674];
        }
        document.getElementById("stats_box_time").innerHTML = v2675;
        document.getElementById("stats_box_kill").innerHTML = v2673;
        document.getElementById("stats_box_score").innerHTML = v2858.ΔⲆΔΔᐃ;
      }
    }
    this.buttons[v2596] = f438(87, 78, 0, [ᐃΔ.ᐃΔᐃᐃⲆΔⵠ, ᐃΔ.ΔΔᐃΔⵠⲆⲆ, ᐃΔ.ⵠΔΔⵠΔⵠⲆ], v2656, v2657, function () {
      v2858.ᐃⵠᐃᐃᐃⵠᐃⲆΔ();
      if (v2858.ⵠΔⵠⵠⲆᐃΔ === 0) {
        f498(v2620);
      } else {
        f498(v2619);
      }
    }, 127, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    this.buttons[v2596] = f438(87, 78, 0, [ᐃΔ.ΔΔⵠΔⲆΔᐃ, ᐃΔ.ⲆⵠⲆᐃⵠⵠⲆ, ᐃΔ.ⵠΔΔⵠⵠⲆᐃ], v2656, v2657, function () {
      const v2676 = vWindow.document.createElement("textarea");
      v2676.value = vUndefined5;
      vWindow.document.body.appendChild(v2676);
      v2676.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2676);
    }, 182, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    this.buttons[v2596] = f438(87, 78, 0, [ᐃΔ.ΔΔᐃⵠᐃΔⵠ, ᐃΔ.ⵠⲆΔΔΔⲆⵠ, ᐃΔ.ⲆⲆⵠΔⵠΔⲆ], v2656, v2657, function () {
      if (vVVVVUndefined17 === v3123 && vWindow.FB && vWindow.FB.getUserID()) {
        vWindow.FB.logout();
      }
      if (v3122 === vVVVVUndefined17 && vVVUndefined142 !== vVVVUndefined152) {
        vWindow.gapi.auth2.getAuthInstance().signOut();
        vVVVUndefined152 = undefined;
      }
      vUndefined5 = undefined;
      vUndefined4 = vVVVVVUndefined173;
      vVVVVUndefined17 = vVVVUndefined172;
      v2858.ⲆᐃⲆᐃᐃⵠⲆ = 0;
      v2858.ᐃᐃᐃᐃᐃ = 0;
      v2858.ΔⲆΔΔᐃ = 0;
      v2858.ⲆⵠⵠΔⵠⵠⵠ();
      ᐃⵠⵠⵠᐃΔⵠⲆΔ();
    }, 255, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    this.buttons[v2596] = f438(58, 64, 0, [ᐃΔ.ᐃᐃΔⲆⲆΔΔ, ᐃΔ.ᐃⵠⵠⲆᐃᐃⵠ, ᐃΔ.ⲆᐃΔᐃⲆⵠᐃ], v2656, v2657, function () {
      f498(v2597);
    }, 189, 118, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2599;
    this.buttons[v2596] = f438(497, 72, 0, [ᐃΔ.ΔⵠⲆⲆᐃⲆᐃ, ᐃΔ.ΔⲆᐃΔᐃᐃⵠ, ᐃΔ.ⲆΔⲆΔⲆⵠⲆ], v2656, v2657, function () {
      (function () {
        if (v2263) {
          vUndefined4 = ⵠⵠΔ.ⵠᐃΔⵠⲆΔᐃ(40);
          vVVVVUndefined17 = v3124;
          vUndefined5 = v2263.userId;
          vWindow.ⲆⵠΔΔⲆⲆᐃ();
          return;
        }
        vWindow.gapi.auth2.getAuthInstance().signIn();
      })();
    }, -130, 390, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2599;
    this.buttons[v2596] = f438(497, 72, 0, [ᐃΔ.ᐃᐃΔᐃⲆⵠᐃ, ᐃΔ.ᐃⵠᐃΔΔΔⵠ, ᐃΔ.ⲆᐃᐃΔⲆΔⲆ], v2656, v2657, function () {
      vWindow.FB.login(function (p1678) {
        if (p1678.authResponse) {
          vWindow.FB.api("/me", function (p1679) {
            vVVVVUndefined17 = v3123;
            vUndefined4 = vWindow.FB.getAuthResponse().accessToken;
            f545();
            vWindow.ⲆⵠΔΔⲆⲆᐃ();
          });
        }
      });
    }, -130, 430, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2599;
    ᐃᐃⵠΔⲆᐃⲆ = 20000;
    this.ΔⵠⲆΔΔⵠᐃ = function (p1680) {
      var v2677 = v2858.ᐃⵠᐃⲆᐃᐃⵠ(p1680);
      var v2678 = v2677 * v2677 * ᐃᐃⵠΔⲆᐃⲆ;
      return (p1680 -= v2678) / (ᐃᐃⵠΔⲆᐃⲆ * ((v2677 + 1) * (v2677 + 1)) - v2678);
    };
    this.ᐃⵠᐃⲆᐃᐃⵠ = function (p1681) {
      return Math.floor(Math.sqrt(p1681 / ᐃᐃⵠΔⲆᐃⲆ));
    };
    this.ΔᐃΔⵠᐃΔⲆᐃΔ = function (p1682) {
      v2858.ⲆⲆⲆⵠΔ = v2858.ᐃⵠᐃⲆᐃᐃⵠ(p1682);
      v2858.ΔᐃⵠᐃᐃⲆΔ = v2858.ΔⵠⲆΔΔⵠᐃ(p1682);
      v2858.ᐃⵠⵠᐃᐃⵠΔ = 0;
      v2858.ΔⲆΔΔᐃ = p1682;
    };
    this.ΔΔΔⵠⲆᐃᐃⲆⲆ = function (p1683) {
      v2858.buttons[v2858.ⵠΔⵠⲆΔⵠᐃ].info.active = 0;
      v2858.buttons[v2858.ⲆΔⵠᐃΔⲆΔ].info.active = 1;
      v2858.buttons[v2858.ΔᐃᐃⲆᐃΔⵠ].info.active = 1;
      f492();
      if (p1683.name.indexOf("Starver#") === -1) {
        document.getElementById("account_nickname_input").value = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(p1683.name)));
      } else {
        document.getElementById("account_nickname_input").value = p1683.name;
      }
      v2858.ᐃᐃᐃᐃᐃ = p1683.bread;
      var v2679 = p1683.seasons;
      var v2680 = v2679[v2679.length - 1];
      v2858.ΔⲆⲆⲆⵠⲆᐃ = v2679;
      vThis.ΔᐃΔⵠᐃΔⲆᐃΔ(v2680.score);
      v2858.ΔⲆΔΔᐃ = v2680.score;
      v2858.ΔΔⵠⵠᐃᐃⲆ = v2680.kill;
      v2858.ⲆᐃᐃᐃⲆΔΔ = v2680.death;
      v2858.time = v2680.time;
      v2858.ⵠᐃⵠᐃΔΔⲆ = v2680.bestScore;
      v2858.ⲆⵠΔⲆⵠΔΔ = v2680.bestKill;
      v2858.ⵠⲆⵠⵠⵠΔΔ = v2680.bestTime;
      v2858.ⲆⲆⲆᐃⲆᐃⵠ = v2680.scoreTotal;
      v2858.ⵠΔⵠⵠⲆᐃΔ = p1683.firstName;
      document.getElementById("serverAddressInput").value = p1683.privateServerRegion + " : " + p1683.privateServer;
      if (v2858.ⵠΔⵠⵠⲆᐃΔ === undefined) {
        v2858.ⵠΔⵠⵠⲆᐃΔ = 0;
      }
      v2858.ⲆⲆⵠⵠⵠΔⵠ = Date.now() + p1683.privateServerTime;
      if (Number(p1683.privateServerTime) > 0) {
        v2858.ⲆⲆⵠⵠⵠΔⵠ = Date.now() + Number(p1683.privateServerTime);
      }
      v2858.ⲆᐃⲆᐃᐃⵠⲆ = Date.now() + p1683.kit;
      if (Number(p1683.kit) > 0) {
        v2858.ⲆᐃⲆᐃᐃⵠⲆ = Date.now() + Number(p1683.kit);
      }
      var v2681 = ΔⵠΔΔ.ΔΔΔⲆⲆ;
      for (var v2682 = 0; v2682 < p1683.skins.length; v2682++) {
        if (p1683.skins[v2682] > 0) {
          for (var v2683 = 0; v2683 < v2681.length; v2683++) {
            if (v2681[v2683].id === v2682) {
              vThis.unlock.ⵠⲆⲆΔ[v2683] = 1;
            }
          }
        }
      }
      v2681 = ΔⵠΔΔ.ⵠΔⲆⲆⵠ;
      v2682 = 0;
      for (; p1683.accessories.length > v2682; v2682++) {
        if (p1683.accessories[v2682] > 0) {
          for (v2683 = 0; v2683 < v2681.length; v2683++) {
            if (v2682 === v2681[v2683].id) {
              vThis.unlock.ᐃⲆΔΔⲆ[v2683] = 1;
            }
          }
        }
      }
      v2681 = ΔⵠΔΔ.ⲆᐃⲆΔⵠ;
      v2682 = 0;
      for (; p1683.books.length > v2682; v2682++) {
        if (p1683.books[v2682] > 0) {
          for (v2683 = 0; v2683 < v2681.length; v2683++) {
            if (v2682 === v2681[v2683].id) {
              vThis.unlock.ᐃᐃᐃⵠⲆ[v2683] = 1;
            }
          }
        }
      }
      v2681 = ΔⵠΔΔ.ⲆⲆΔⲆ;
      v2682 = 0;
      for (; v2682 < p1683.bags.length; v2682++) {
        if (p1683.bags[v2682] > 0) {
          for (v2683 = 0; v2681.length > v2683; v2683++) {
            if (v2682 === v2681[v2683].id) {
              vThis.unlock.ⵠᐃⲆⵠᐃ[v2683] = 1;
            }
          }
        }
      }
      v2681 = ΔⵠΔΔ.ΔⲆⵠΔⵠ;
      v2682 = 0;
      for (; v2682 < p1683.crates.length; v2682++) {
        if (p1683.crates[v2682] > 0) {
          for (v2683 = 0; v2681.length > v2683; v2683++) {
            if (v2681[v2683].id === v2682) {
              vThis.unlock.ⵠᐃᐃⵠᐃ[v2683] = 1;
              vThis.unlock.ᐃⲆⵠΔⲆ[v2683] = 1;
            }
          }
        }
      }
    };
    this.ᐃⵠⲆᐃⵠΔⵠΔⲆ = function () {
      vWindow.ⲆⵠΔΔⲆⲆᐃ = function () {
        f498(v2597);
        (function (p1684) {
          var v2684 = new XMLHttpRequest();
          v2684.open("GET", v3120 + "login?token=" + vUndefined4 + "&type=" + vVVVVUndefined17 + (v2263 ? "&userId=" + v2263.userId + "&userInfo=" + v2263.userInfo : ""));
          v2684.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2684.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200 && v2684.responseText !== "0") {
              p1684(JSON.parse(v2684.responseText));
            }
          };
          v2684.send();
        })(vThis.ΔΔΔⵠⲆᐃᐃⲆⲆ);
      };
      if (v3125 === 1) {
        vWindow.ⲆⵠΔΔⲆⲆᐃ();
      }
    };
    vWindow.ᐃⵠⵠⵠᐃΔⵠⲆΔ = function () {
      v2858.buttons[v2858.ⵠΔⵠⲆΔⵠᐃ].info.active = 1;
      v2858.buttons[v2858.ⲆΔⵠᐃΔⲆΔ].info.active = 0;
      v2858.buttons[v2858.ΔᐃᐃⲆᐃΔⵠ].info.active = 0;
      f498(v2597);
    };
    this.ⵠⲆΔΔⲆ = function () {
      return v2858.buttons[v2858.ⲆΔⵠᐃΔⲆΔ].info.active;
    };
    this.buttons[v2596] = f438(461, 105, 0, [ᐃΔ.ᐃΔⵠΔΔⲆⵠ, ᐃΔ.ⵠΔⲆᐃⵠⲆΔ, ᐃΔ.ⲆΔⵠⵠⵠΔᐃ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f498(v2604);
      } else {
        f498(v2599);
      }
    }, -100, 80, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(157, 158, 0, [ᐃΔ.ΔΔΔⵠᐃⲆⲆ, ᐃΔ.ᐃⵠΔⵠⲆⲆᐃ, ᐃΔ.ⵠᐃⵠΔⵠⲆⲆ], v2656, v2657, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, -35, 125, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2602;
    this.buttons[v2596] = f438(66, 73, 0, [ᐃΔ.ⵠⵠΔΔᐃΔᐃ, ᐃΔ.ⲆΔΔΔⵠⵠⵠ, ᐃΔ.ⵠⵠᐃᐃⵠᐃᐃ], v2656, v2657, undefined, -68, 340, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2602;
    this.buttons[v2596] = f438(66, 73, 0, [ᐃΔ.ᐃⲆΔⵠⵠⵠⵠ, ᐃΔ.ⲆᐃΔΔⲆΔΔ, ᐃΔ.ⵠⲆⲆΔⲆⲆⵠ], v2656, v2657, vVVVUndefined172, -30, 340, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2602;
    this.ΔⲆⲆΔᐃΔΔΔΔ = v2596;
    this.buttons[v2596] = f438(97, 66, 0, [ᐃΔ.ΔΔΔᐃⵠⲆⲆ, ᐃΔ.ΔΔⵠⵠΔⵠⵠ, ᐃΔ.ⲆᐃⵠⲆⲆΔⲆ], v2656, v2657, function () {
      f543(vVUndefined15, undefined, v2858.ⲆΔⲆⵠⲆΔⵠ);
    }, -14, 151, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ΔⲆΔⲆΔⵠᐃ = v2596;
    this.buttons[v2596] = f438(135, 66, 0, [ᐃΔ.ⵠⲆⵠᐃⲆᐃⵠ, ᐃΔ.ΔΔΔⵠΔᐃⲆ, ᐃΔ.ᐃΔΔⲆⲆᐃᐃ], v2656, v2657, function () {
      f543(undefined, vVVVVVUndefined173, v2858.ΔⲆΔⲆΔⵠᐃ);
    }, 37.5, 151, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆⲆᐃΔᐃⲆᐃ = v2596;
    this.buttons[v2596] = f438(160, 66, 0, [ᐃΔ.ⵠᐃᐃⲆⲆⲆⵠ, ᐃΔ.ⲆᐃΔⵠⵠΔⵠ, ᐃΔ.ᐃΔⵠⲆⵠⲆΔ], v2656, v2657, function () {
      f543(vVVUndefined18, vVVUndefined163, v2858.ⲆⲆᐃΔᐃⲆᐃ);
    }, 107.5, 151, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆΔⲆⵠⲆΔⵠ = v2596;
    this.buttons[v2596] = f438(207, 66, 0, [ᐃΔ.ⲆⲆΔⲆᐃⲆᐃ, ᐃΔ.Ⲇᐃⵠᐃᐃⵠⵠ, ᐃΔ.ᐃⲆᐃⵠⵠᐃΔ], v2656, v2657, function () {
      f543(undefined, undefined, v2858.ⲆΔⲆⵠⲆΔⵠ);
    }, 190.5, 151, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ΔᐃⵠⵠⲆᐃᐃ = v2596;
    this.buttons[v2596] = f438(144, 66, 0, [ᐃΔ.ⵠᐃⵠⵠⵠⲆⲆ, ᐃΔ.ᐃᐃⵠⵠⵠΔⵠ, ᐃΔ.ΔⲆⲆᐃⲆⵠΔ], v2656, v2657, function () {
      f543(v2858.ΔᐃⵠⵠⲆᐃᐃ);
    }, 103.5, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ΔⲆⵠⲆΔᐃΔ = v2596;
    this.buttons[v2596] = f438(124, 66, 0, [ᐃΔ.ᐃᐃᐃᐃᐃΔᐃ, ᐃΔ.ⵠⲆΔⵠⵠᐃⵠ, ᐃΔ.ᐃΔⲆᐃᐃᐃⵠ], v2656, v2657, function () {
      f543(v2858.ΔⲆⵠⲆΔᐃΔ);
    }, 177.5, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⵠⲆᐃᐃⲆⲆΔ = v2596;
    this.buttons[v2596] = f438(104, 66, 0, [ᐃΔ.ᐃΔⲆⵠⲆᐃᐃ, ᐃΔ.ⲆⲆⲆΔᐃΔᐃ, ᐃΔ.ΔΔΔΔᐃᐃⲆ], v2656, v2657, function () {
      f543(v2858.ⵠⲆᐃᐃⲆⲆΔ);
    }, 242, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⵠⲆⲆⵠⲆⲆᐃ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ᐃᐃⲆⲆⲆᐃⲆ, ᐃΔ.ⵠⲆⲆⲆᐃΔⵠ, ᐃΔ.ⵠⲆⲆᐃᐃΔⵠ], v2656, v2657, function () {
      f543(vVVVVUndefined1722, undefined, vVVUndefined18, v2858.ⵠⲆⲆⵠⲆⲆᐃ);
    }, -185, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ΔⵠⵠᐃⲆᐃᐃ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ⲆΔⵠΔⲆⲆⲆ, ᐃΔ.ⲆⵠΔΔΔⵠⵠ, ᐃΔ.ⵠᐃΔⲆⵠᐃᐃ], v2656, v2657, function () {
      f543(undefined, vVVVUndefined17, undefined, v2858.ΔⵠⵠᐃⲆᐃᐃ);
    }, -149, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆᐃⲆⵠᐃⵠΔ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ΔΔᐃᐃⲆΔᐃ, ᐃΔ.ΔΔᐃⲆⵠⲆΔ, ᐃΔ.ⲆᐃⵠᐃᐃᐃΔ], v2656, v2657, function () {
      f543(vVVVUndefined17, undefined, vVVUndefined17, v2858.ⲆᐃⲆⵠᐃⵠΔ);
    }, -113, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ᐃⵠⵠΔΔΔⵠ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ⲆΔΔⲆⲆΔΔ, ᐃΔ.ΔⵠⵠⲆⵠΔᐃ, ᐃΔ.ⲆᐃⲆⵠⲆⵠⲆ], v2656, v2657, function () {
      f543(vVVVVUndefined173, vVVUndefined163, undefined, v2858.ᐃⵠⵠΔΔΔⵠ);
    }, -77, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⵠΔᐃⲆⵠΔΔ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ᐃΔⵠᐃⵠΔⵠ, ᐃΔ.ᐃⲆᐃⲆⵠⲆΔ, ᐃΔ.ⵠⲆⵠⲆᐃⵠΔ], v2656, v2657, function () {
      f543(vVVVUndefined172, vVUndefined14, vVUndefined14, v2858.ⵠΔᐃⲆⵠΔΔ);
    }, -41, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⵠᐃᐃΔⵠⲆⵠ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ⲆⲆⲆⵠΔᐃΔ, ᐃΔ.ΔⵠⵠΔΔⵠⵠ, ᐃΔ.ᐃⲆⵠΔⲆΔⲆ], v2656, v2657, function () {
      f543(vVVUndefined163, vVUndefined16, undefined, v2858.ⵠᐃᐃΔⵠⲆⵠ);
    }, -5, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ΔΔᐃᐃⲆᐃᐃ = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ⵠΔΔⵠᐃⵠΔ, ᐃΔ.ⲆᐃⵠΔΔⵠᐃ, ᐃΔ.ⵠⵠⲆΔΔⵠΔ], v2656, v2657, function () {
      f543(undefined, undefined, vVVVUndefined172, v2858.ΔΔᐃᐃⲆᐃᐃ);
    }, 25, 528, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.buttons[v2596] = f438(232, 352, 0, [ᐃΔ.ΔⵠⵠᐃⵠᐃΔ, ᐃΔ.ⵠᐃΔΔΔⵠᐃ, ᐃΔ.ᐃⵠⲆⵠᐃᐃⵠ], v2656, v2657, function () {
      f542(300);
    }, -330, 135, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(232, 352, 0, [ᐃΔ.ᐃΔⵠⲆⵠᐃⲆ, ᐃΔ.ᐃⵠΔᐃᐃΔᐃ, ᐃΔ.ⵠΔᐃᐃⵠΔᐃ], v2656, v2657, function () {
      f542(600);
    }, -195, 135, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(243, 374, 0, [ᐃΔ.ᐃⲆᐃⵠᐃᐃⲆ, ᐃΔ.ⲆⲆⲆᐃΔⲆᐃ, ᐃΔ.ⲆⲆΔΔΔΔᐃ], v2656, v2657, function () {
      f542(2600);
    }, -60, 130, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(232, 352, 0, [ᐃΔ.ⲆⲆⵠⵠⵠⲆΔ, ᐃΔ.ⵠᐃⵠᐃΔᐃⵠ, ᐃΔ.ΔΔΔⲆᐃⲆᐃ], v2656, v2657, function () {
      f542(7000);
    }, 78, 135, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(243, 374, 0, [ᐃΔ.ⲆⵠⲆⵠⵠΔⲆ, ᐃΔ.ⲆⵠⲆΔⵠΔΔ, ᐃΔ.ⲆΔⲆᐃⲆⵠΔ], v2656, v2657, function () {
      f542(20000);
    }, 213, 130, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(58, 64, 0, [ᐃΔ.ᐃᐃΔⲆⲆΔΔ, ᐃΔ.ᐃⵠⵠⲆᐃᐃⵠ, ᐃΔ.ⲆᐃΔᐃⲆⵠᐃ], v2656, v2657, function () {
      f498(v2601);
    }, 300, 88, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2604;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ⲆⲆⲆⵠΔᐃⲆ, ᐃΔ.ᐃᐃΔⲆⲆΔⲆ, ᐃΔ.ᐃᐃᐃᐃᐃᐃⵠ], v2656, v2657, function () {
      f498(v2613);
      v2691.ⵠⲆᐃΔΔⲆΔ();
    }, -315, 185, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ⵠⵠᐃⲆᐃⲆⵠ, ᐃΔ.ⵠᐃⲆⲆⲆᐃⲆ, ᐃΔ.ⲆΔⲆΔⵠⲆᐃ], v2656, v2657, function () {
      f498(v2617);
      v2696.ⵠⲆᐃΔΔⲆΔ();
    }, -315, 321, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ᐃΔⲆⵠᐃΔᐃ, ᐃΔ.ΔᐃⲆΔᐃᐃⵠ, ᐃΔ.ΔᐃⵠΔⵠⲆⵠ], v2656, v2657, function () {
      f498(v2615);
      v2692.ⵠⲆᐃΔΔⲆΔ();
    }, 153, 185, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ⵠᐃⲆⲆΔⲆⵠ, ᐃΔ.ΔΔⵠΔⲆΔⲆ, ᐃΔ.ⵠⲆΔΔᐃⵠΔ], v2656, v2657, function () {
      f498(v2616);
      v2693.ⵠⲆᐃΔΔⲆΔ();
    }, 153, 321, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ᐃⵠⵠΔⵠᐃΔ, ᐃΔ.ᐃⲆⲆⵠᐃⵠΔ, ᐃΔ.ⵠᐃⲆΔᐃΔᐃ], v2656, v2657, function () {
      f498(v2614);
      v2694.ⵠⲆᐃΔΔⲆΔ();
    }, 153, 463, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(323, 112, 0, [ᐃΔ.ΔᐃΔⲆⵠⲆΔ, ᐃΔ.ⲆⲆΔΔᐃᐃΔ, ᐃΔ.ⲆⲆⲆΔⵠΔⵠ], v2656, v2657, function () {
      f498(v2618);
      v2695.ⵠⲆᐃΔΔⲆΔ();
    }, -315, 463, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2600;
    this.buttons[v2596] = f438(327, 117, 0, [ᐃΔ.ᐃᐃΔᐃⵠⵠⲆ, ᐃΔ.ⲆⲆΔᐃΔⲆⲆ, ᐃΔ.ᐃⵠⵠᐃᐃⲆΔ], v2656, v2657, function () {
      f498(v2624);
    }, 155, 70, v2650, v2660);
    this.buttons[v2596++].view = v2597;
    this.buttons[v2596] = f438(130, 129, 0, [ᐃΔ.ⵠᐃⵠⵠⵠᐃΔ, ᐃΔ.ΔΔᐃⵠᐃΔΔ, ᐃΔ.ⲆΔⵠⵠⵠⵠᐃ], v2656, v2657, function () {
      f496(v2605, v2659, "none");
      f498(v2601);
    }, 10, 40, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2605;
    this.buttons[v2596] = f438(130, 129, 0, [ᐃΔ.ⵠᐃⵠⵠⵠᐃΔ, ᐃΔ.ΔΔᐃⵠᐃΔΔ, ᐃΔ.ⲆΔⵠⵠⵠⵠᐃ], v2656, v2657, function () {
      f496(v2606, v2659, "none");
      f498(v2601);
    }, 10, 40, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2606;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 200, 140, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(524, 110, 0, [ᐃΔ.ⲆⲆⵠᐃΔΔⲆ, ᐃΔ.ⲆⲆΔⲆᐃⵠⵠ, ᐃΔ.ⵠΔᐃⲆⵠᐃΔ], v2656, v2657, function () {
      f547("Atlanta");
    }, -265, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(523, 110, 0, [ᐃΔ.ⲆⲆⵠᐃⲆᐃᐃ, ᐃΔ.ᐃΔⵠⲆΔᐃⵠ, ᐃΔ.ΔᐃⲆⵠᐃΔⲆ], v2656, v2657, function () {
      f547("LosAngeles");
    }, 5, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(344, 110, 0, [ᐃΔ.ⲆᐃⵠᐃΔᐃᐃ, ᐃΔ.ᐃᐃᐃᐃⵠᐃᐃ, ᐃΔ.ΔⵠⲆⲆΔⲆΔ], v2656, v2657, function () {
      f547("Frankfurt");
    }, -265, 365, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(344, 110, 0, [ᐃΔ.ⲆΔΔⵠΔⲆΔ, ᐃΔ.ΔⵠΔΔⲆⵠΔ, ᐃΔ.ⵠⲆⵠⵠⲆΔΔ], v2656, v2657, function () {
      f547("Osaka");
    }, 100, 365, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(344, 110, 0, [ᐃΔ.ⲆⵠⲆΔⲆⲆΔ, ᐃΔ.ᐃᐃⵠⲆᐃⵠⲆ, ᐃΔ.ᐃᐃΔᐃⲆΔᐃ], v2656, v2657, function () {
      f547("Sydney");
    }, -86, 365, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2621;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2621);
    }, 224, 140, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2622;
    this.buttons[v2596] = f438(230, 352, 0, [ᐃΔ.ⲆᐃᐃᐃΔⲆᐃ, ᐃΔ.ⵠΔⲆΔⵠΔᐃ, ᐃΔ.ⲆᐃᐃⲆᐃΔᐃ], v2656, v2657, function () {
      f542(350);
    }, -280, 240, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2622;
    this.buttons[v2596] = f438(230, 352, 0, [ᐃΔ.ⵠⵠⲆⵠⲆⲆⲆ, ᐃΔ.ⲆΔⲆⵠⵠᐃⵠ, ᐃΔ.ⵠⲆᐃΔᐃⵠΔ], v2656, v2657, function () {
      f542(700);
    }, -130, 240, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2622;
    this.buttons[v2596] = f438(230, 352, 0, [ᐃΔ.ⲆᐃΔΔⲆⵠⵠ, ᐃΔ.ⲆᐃⲆᐃⵠⲆΔ, ᐃΔ.ⵠΔⵠΔⵠⲆᐃ], v2656, v2657, function () {
      f542(1400);
    }, 20, 240, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2622;
    this.buttons[v2596] = f438(230, 352, 0, [ᐃΔ.ΔⲆⲆΔⵠΔⵠ, ᐃΔ.ⲆΔᐃΔΔⵠΔ, ᐃΔ.ⵠΔΔΔΔᐃᐃ], v2656, v2657, function () {
      f542(3000);
    }, 170, 240, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2622;
    this.buttons[v2596] = f438(105, 119, 0, [ᐃΔ.ⲆᐃΔⵠΔΔΔ, ᐃΔ.ⲆⵠⲆⲆΔⲆⵠ, ᐃΔ.ᐃⵠᐃᐃΔⵠⲆ], v2656, v2657, function () {
      const v2685 = document.getElementById("serverAddressInput").value.split(" : ");
      const v2686 = vWindow.document.createElement("textarea");
      v2686.value = v2267 + "?server=" + v2685[1] + "&region=" + v2685[0];
      vWindow.document.body.appendChild(v2686);
      v2686.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2686);
    }, 105, 310, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2623;
    this.buttons[v2596] = f438(105, 119, 0, [ᐃΔ.ΔⲆᐃⵠᐃᐃⵠ, ᐃΔ.ⲆⲆⲆⲆΔΔⵠ, ᐃΔ.ⵠΔᐃΔΔⵠⵠ], v2656, v2657, function () {
      (function () {
        var v2687 = new XMLHttpRequest();
        v2687.open("GET", v3120 + "rebootServer?token=" + vUndefined4 + "&userid=" + vUndefined5);
        v2687.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2687.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2687.responseText !== "0") {
            const v2688 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2267 + "?server=" + v2688[1] + "&region=" + v2688[0];
          }
        };
        v2687.send();
      })();
    }, 235, 310, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2623;
    this.buttons[v2596] = f438(105, 119, 0, [ᐃΔ.ᐃΔᐃᐃᐃᐃⲆ, ᐃΔ.ⲆᐃᐃⲆᐃⲆⵠ, ᐃΔ.ⲆⵠᐃⲆⵠΔᐃ], v2656, v2657, function () {
      (function () {
        var v2689 = new XMLHttpRequest();
        v2689.open("GET", v3120 + "restartServer?token=" + vUndefined4 + "&userid=" + vUndefined5);
        v2689.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2689.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2689.responseText !== "0") {
            const v2690 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2267 + "?server=" + v2690[1] + "&region=" + v2690[0];
          }
        };
        v2689.send();
      })();
    }, 170, 310, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2623;
    this.buttons[v2596] = f438(204, 115, 0, [ᐃΔ.ᐃⲆⲆΔᐃⵠⵠ, ᐃΔ.ⵠΔⲆᐃᐃⵠᐃ, ᐃΔ.ⲆΔⵠⲆᐃⲆΔ], v2656, v2657, function () {
      vWindow.open("./commands.html", "_blank");
    }, -265, 490, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2623;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⵠᐃᐃΔⵠᐃΔ, ᐃΔ.ΔⲆⲆΔⲆΔⵠ, ᐃΔ.ⲆΔᐃᐃΔᐃⲆ], v2656, v2657, function () {
      f498(v2607);
    }, -210, 170, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⵠᐃΔⲆᐃⲆⵠ, ᐃΔ.ⲆΔΔⵠⵠⲆᐃ, ᐃΔ.ᐃⵠⵠΔⵠΔⲆ], v2656, v2657, function () {
      f498(v2610);
    }, 70, 170, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ᐃⲆᐃⲆᐃΔΔ, ᐃΔ.ᐃᐃⵠⵠⵠΔⲆ, ᐃΔ.ΔⵠᐃⵠⲆΔⵠ], v2656, v2657, function () {
      f498(v2608);
    }, 70, 204, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⵠΔⵠᐃⲆⵠΔ, ᐃΔ.ⵠΔⵠΔⲆᐃᐃ, ᐃΔ.ᐃΔᐃⵠᐃΔⲆ], v2656, v2657, function () {
      f498(v2611);
    }, -210, 204, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⵠΔⵠᐃⲆⵠΔ, ᐃΔ.ⵠΔⵠΔⲆᐃᐃ, ᐃΔ.ᐃΔᐃⵠᐃΔⲆ], v2656, v2657, function () {
      f498(v2612);
    }, 70, 238, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⵠΔⵠᐃⲆⵠΔ, ᐃΔ.ⵠΔⵠΔⲆᐃᐃ, ᐃΔ.ᐃΔᐃⵠᐃΔⲆ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f548(0, 300);
      } else {
        f498(v2599);
      }
    }, 307, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⲆᐃᐃᐃᐃⲆⲆ, ᐃΔ.ⲆⵠᐃⵠⵠΔⲆ, ᐃΔ.ΔⲆⵠΔΔⵠⵠ], v2656, v2657, function () {
      f498(v2609);
    }, -210, 238, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(145, 69, 0, [ᐃΔ.ⲆᐃᐃᐃᐃⲆⲆ, ᐃΔ.ⲆⵠᐃⵠⵠΔⲆ, ᐃΔ.ΔⲆⵠΔΔⵠⵠ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f548(1, 600);
      } else {
        f498(v2599);
      }
    }, 307, 239, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    this.buttons[v2596] = f438(192, 101, 0, [ᐃΔ.ΔΔⲆⲆΔᐃⵠ, ᐃΔ.ᐃⵠᐃᐃΔᐃⵠ, ᐃΔ.ⵠⵠΔᐃⵠᐃΔ], v2656, v2657, function () {
      f541();
    }, -100, 250, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2620;
    this.buttons[v2596] = f438(192, 104, 0, [ᐃΔ.ᐃᐃⲆⵠⲆⲆⲆ, ᐃΔ.ⵠⵠΔᐃΔᐃΔ, ᐃΔ.ⵠΔⵠᐃᐃⵠΔ], v2656, v2657, function () {
      f541();
    }, -100, 239, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2619;
    this.buttons[v2596] = f438(192, 101, 0, [ᐃΔ.ᐃⵠⵠΔⵠⵠⵠ, ᐃΔ.ⲆᐃⲆⲆⵠᐃᐃ, ᐃΔ.ᐃΔⲆᐃⲆᐃΔ], v2656, v2657, function () {
      f498(v2598);
    }, 10, 250, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2620;
    this.buttons[v2596] = f438(192, 104, 0, [ᐃΔ.ᐃⵠᐃⵠⲆⵠⲆ, ᐃΔ.ⲆⲆΔⲆᐃⲆΔ, ᐃΔ.ᐃⵠⵠᐃⵠᐃⵠ], v2656, v2657, function () {
      f498(v2598);
    }, 10, 239, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2619;
    ᐃⵠⲆᐃΔⵠⲆ = [];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ⵠᐃΔΔᐃ] = [ᐃΔ.ⵠⲆⵠΔⲆᐃⵠ, ᐃΔ.ΔⲆⵠⲆᐃᐃΔ, ᐃΔ.ⵠⲆᐃⵠⵠᐃᐃ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ᐃⲆⵠⵠ] = [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ⵠᐃⵠᐃ] = [ᐃΔ.ΔΔⵠⲆᐃΔΔ, ᐃΔ.ⲆⲆⲆⲆΔⲆᐃ, ᐃΔ.ᐃᐃⲆⵠⲆⲆⵠ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ᐃⵠΔⵠ] = [ᐃΔ.ⵠⲆⲆⵠⵠΔⲆ, ᐃΔ.ᐃΔⲆᐃⲆⲆᐃ, ᐃΔ.ⲆⲆᐃΔᐃⵠΔ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.Ⲇᐃⵠᐃ] = [ᐃΔ.ΔΔⲆΔᐃⵠΔ, ᐃΔ.ⲆⵠᐃⵠⲆᐃΔ, ᐃΔ.ⲆⵠⲆⵠΔⲆⲆ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ᐃⲆⵠⲆ] = [ᐃΔ.ⲆΔⲆⵠⵠⵠᐃ, ᐃΔ.ᐃΔᐃⲆΔⲆⵠ, ᐃΔ.ⲆᐃΔᐃᐃⲆᐃ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ᐃⲆⲆⲆ] = [ᐃΔ.ΔΔⲆⵠΔⲆⵠ, ᐃΔ.ᐃⵠΔⵠⲆⲆⵠ, ᐃΔ.ᐃΔᐃΔⲆⵠⵠ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ⵠΔⲆⵠⵠ] = [ᐃΔ.ⵠⲆⲆⲆᐃⲆᐃ, ᐃΔ.ΔΔⵠⲆⲆΔⵠ, ᐃΔ.ᐃΔⵠΔⲆᐃⵠ];
    ᐃⵠⲆᐃΔⵠⲆ[ⲆⲆΔ.ⲆᐃⲆⵠᐃⲆΔ] = [ᐃΔ.ΔⲆΔⲆΔᐃᐃ, ᐃΔ.ΔΔⲆΔΔΔᐃ, ᐃΔ.ᐃⲆΔΔⲆΔⵠ];
    ⵠⲆⵠΔΔᐃⵠ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVVUndefined1722, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined152, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined15, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined173, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, undefined, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, undefined, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2613;
    ΔᐃⵠⵠΔⲆΔᐃᐃ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vUndefined, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined17, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined163, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined14, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vUndefined, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined6, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined17, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, undefined, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, vVVUndefined163, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2617;
    ⵠⵠⲆΔᐃΔⵠΔⵠ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVVUndefined173, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined6, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined16, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, undefined, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, vVUndefined6, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2618;
    ᐃᐃⵠΔΔΔΔᐃᐃ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVVUndefined1722, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined15, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined142, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vUndefined, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, vVUndefined16, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, vVVVVUndefined173, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2615;
    ᐃΔΔΔⵠᐃⵠⵠΔ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined142, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined142, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined172, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVVUndefined173, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, vVVUndefined163, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, vVVVVVUndefined173, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2616;
    ᐃⵠⲆⲆⵠⲆᐃⲆᐃ = v2596;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined1422, -29, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVUndefined142, -29, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, -29, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined172, 65, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 65, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined15, 65, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, undefined, 159, 205, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVVVUndefined1422, 159, 300, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(178, 182, 0, [ᐃΔ.ⲆΔΔⵠ, ᐃΔ.Ⲇⵠᐃᐃ, ᐃΔ.ⵠΔᐃᐃ], v2656, v2657, vVUndefined16, 159, 395, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ΔⲆⲆΔΔᐃΔ, ᐃΔ.ⵠⲆᐃΔᐃᐃΔ, ᐃΔ.ᐃᐃⵠⲆΔⲆΔ], v2656, v2657, vVVVUndefined17, -61, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(39, 122, 0, [ᐃΔ.ⲆⲆΔΔᐃΔᐃ, ᐃΔ.ⵠΔΔᐃⵠΔⲆ, ᐃΔ.ΔᐃᐃᐃⲆⵠΔ], v2656, v2657, undefined, 260, 315, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2600);
    }, -320, 470, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2614;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⵠⲆⲆⵠᐃⵠΔ, ᐃΔ.ⵠΔⵠΔΔⵠⵠ, ᐃΔ.ᐃΔᐃⲆᐃΔⵠ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(3, 50);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2610;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2610;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⵠⵠᐃⲆⲆᐃⲆ, ᐃΔ.ΔⲆΔⵠΔᐃΔ, ᐃΔ.ⵠΔΔᐃᐃΔⵠ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(0, 100);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2607;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2607;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⵠᐃⲆⲆᐃⵠᐃ, ᐃΔ.ⲆᐃⲆᐃⵠᐃᐃ, ᐃΔ.ⲆⵠⲆⵠⲆᐃᐃ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(4, 150);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2608;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2608;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⵠᐃⵠⲆⲆⵠΔ, ᐃΔ.ⲆΔΔΔΔΔᐃ, ᐃΔ.ᐃⲆⵠⲆⵠΔⲆ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(1, 300);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2611;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2611;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⲆⵠΔⵠⵠⵠᐃ, ᐃΔ.ⵠΔⵠⵠᐃⲆⵠ, ᐃΔ.ⵠⵠⲆᐃⵠᐃΔ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(2, 600);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2609;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2609;
    this.buttons[v2596] = f438(260, 260, 0, [ᐃΔ.ⵠᐃⵠⲆⲆⵠΔ, ᐃΔ.ⲆΔΔΔΔΔᐃ, ᐃΔ.ᐃⲆⵠⲆⵠΔⲆ], v2656, v2657, function () {
      if (vThis.ⵠⲆΔΔⲆ()) {
        f546(5, 300);
      } else {
        f498(v2599);
      }
    }, -65, 197, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2612;
    this.buttons[v2596] = f438(115, 73, 0, [ᐃΔ.ΔᐃⵠⲆⲆ, ᐃΔ.ⲆΔΔⵠᐃ, ᐃΔ.ΔⵠⲆᐃΔ], v2656, v2657, function () {
      f498(v2601);
    }, 309, 180, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2612;
    var vV2596 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ⵠΔΔᐃᐃⲆΔ, ᐃΔ.ΔΔΔⲆΔⵠⵠ, ᐃΔ.ⵠΔΔΔⵠΔⲆ], v2656, v2657, function () {
      f502(undefined, 0);
    }, -305, 132, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25962 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ᐃⵠΔⵠΔⵠᐃ, ᐃΔ.ⵠΔⲆΔΔⵠⲆ, ᐃΔ.ⵠⵠⵠⵠⲆΔⵠ], v2656, v2657, function () {
      f502(vVVUndefined18, 1);
    }, -273, 132, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25963 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ΔⲆⲆΔⲆⲆᐃ, ᐃΔ.ΔΔᐃΔΔᐃᐃ, ᐃΔ.ᐃⲆⲆΔⲆⵠⵠ], v2656, v2657, function () {
      f502(undefined, 2);
    }, -241, 132, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25964 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ᐃⵠⵠᐃⵠⲆΔ, ᐃΔ.ⲆΔⵠΔΔⵠⲆ, ᐃΔ.ⵠᐃⵠⲆⲆᐃⲆ], v2656, v2657, function () {
      f502(vUndefined, 3);
    }, -305, 165, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25965 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ᐃΔΔΔᐃᐃⲆ, ᐃΔ.ΔΔⲆΔⵠⲆⲆ, ᐃΔ.ⲆⲆΔⵠΔᐃᐃ], v2656, v2657, function () {
      f502(undefined, 4);
    }, -273, 165, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25966 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ΔΔᐃΔᐃⵠⵠ, ᐃΔ.ᐃΔΔᐃΔᐃᐃ, ᐃΔ.ΔⵠᐃⵠᐃⲆⵠ], v2656, v2657, function () {
      f502(undefined, 5);
    }, -241, 165, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25967 = v2596;
    this.buttons[v2596] = f438(46, 51, 0, [ᐃΔ.ΔⲆΔⵠᐃⵠᐃ, ᐃΔ.ⵠⵠΔⲆΔᐃᐃ, ᐃΔ.ᐃⲆⲆⲆⲆⲆⲆ], v2656, v2657, function () {
      f502(undefined, 6);
    }, -305, 198, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25968 = v2596;
    this.buttons[v2596] = f438(460, 73, 0, [ᐃΔ.ᐃᐃΔΔⲆⵠⵠ, ᐃΔ.ⲆⲆΔⲆᐃᐃⲆ, ᐃΔ.ΔⵠⲆⲆᐃⵠⲆ], v2656, v2657, function () {
      f502(-1);
    }, -180, 170, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV25969 = v2596;
    this.buttons[v2596] = f438(222, 68, 0, [ᐃΔ.ⵠᐃΔⵠⵠᐃⲆ, ᐃΔ.ⵠⲆⲆᐃⵠᐃⲆ, ᐃΔ.ⵠΔᐃⵠᐃⲆΔ], v2656, v2657, function () {
      f502(0);
    }, -180, 215, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV259610 = v2596;
    this.buttons[v2596] = f438(222, 68, 0, [ᐃΔ.ⲆⵠᐃⲆΔΔᐃ, ᐃΔ.ΔᐃᐃΔⲆⵠᐃ, ᐃΔ.ᐃⲆⲆΔⲆΔΔ], v2656, v2657, function () {
      f502(4);
    }, -180, 260, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV259611 = v2596;
    this.buttons[v2596] = f438(222, 68, 0, [ᐃΔ.ⲆΔⲆΔᐃΔⲆ, ᐃΔ.ⵠᐃⵠᐃᐃᐃⵠ, ᐃΔ.ΔⲆⲆⲆⵠⲆⲆ], v2656, v2657, function () {
      f502(2);
    }, -60, 215, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    var vV259612 = v2596;
    this.buttons[v2596] = f438(222, 68, 0, [ᐃΔ.ΔΔⵠᐃⲆΔⲆ, ᐃΔ.ⲆΔⲆⲆⵠⲆⵠ, ᐃΔ.ⲆⲆΔᐃΔⲆᐃ], v2656, v2657, function () {
      f502(3);
    }, -60, 260, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2598;
    this.ⲆⲆⵠᐃⵠΔⵠ = v2596;
    this.buttons[v2596] = f438(143, 66, 0, [ᐃΔ.ᐃⲆⵠⵠⵠΔⵠ, ᐃΔ.ᐃᐃΔⵠΔΔⲆ, ᐃΔ.ΔⲆⵠΔᐃⵠⵠ], v2656, v2657, function () {
      f543(undefined, v2858.ⲆⲆⵠᐃⵠΔⵠ);
    }, -298, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆⵠⵠᐃΔᐃⵠ = v2596;
    this.buttons[v2596] = f438(104, 66, 0, [ᐃΔ.ΔⵠΔΔᐃΔᐃ, ᐃΔ.ΔⵠⲆⵠᐃᐃⵠ, ᐃΔ.ⲆⲆⵠⵠΔᐃΔ], v2656, v2657, function () {
      f543(vVVVUndefined1422, v2858.ⲆⵠⵠᐃΔᐃⵠ);
    }, -223, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⵠΔⵠⵠᐃⵠⵠ = v2596;
    this.buttons[v2596] = f438(110, 66, 0, [ᐃΔ.ⵠⲆⲆΔΔⲆΔ, ᐃΔ.ⲆᐃⲆΔᐃⲆⵠ, ᐃΔ.ⲆⵠᐃⵠⲆΔⵠ], v2656, v2657, function () {
      f543(vVVVVUndefined1722, v2858.ⵠΔⵠⵠᐃⵠⵠ);
    }, -168, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆⲆΔⵠᐃΔᐃ = v2596;
    this.buttons[v2596] = f438(88, 66, 0, [ᐃΔ.ⲆⲆⲆⲆⲆⵠᐃ, ᐃΔ.ΔⲆⲆᐃⲆᐃΔ, ᐃΔ.ⵠⵠⲆⵠⲆΔΔ], v2656, v2657, function () {
      f543(vVVUndefined17, v2858.ⲆⲆΔⵠᐃΔᐃ);
    }, -110, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.ⲆΔⲆⵠΔⵠᐃ = v2596;
    this.buttons[v2596] = f438(88, 66, 0, [ᐃΔ.ΔΔⵠΔΔΔᐃ, ᐃΔ.ΔⲆᐃΔΔⵠⲆ, ᐃΔ.ΔᐃΔᐃⵠⵠⵠ], v2656, v2657, function () {
      f543(undefined, v2858.ⲆΔⲆⵠΔⵠᐃ);
    }, -63, 110, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2603;
    this.buttons[v2596] = f438(86, 44, 0, [ᐃΔ.ΔΔΔⵠⵠⲆⵠ, ᐃΔ.ⲆⵠⵠΔΔᐃⲆ, ᐃΔ.ⲆᐃⲆΔΔⵠᐃ], v2656, v2657, function () {
      vWindow.open("./terms.html", "_blank");
    }, 349, 290, v2654 | v2652, v2659);
    this.buttons[v2596++].view = v2601;
    var v2691 = new b(ΔⵠΔΔ.ΔΔΔⲆⲆ, ⵠⲆⵠΔΔᐃⵠ, function (p1685) {
      v2858.ⵠⲆⲆΔ = p1685;
      if (v2858.unlock.ⵠⲆⲆΔ[p1685] === 1) {
        ⵠⲆΔⲆ.set("starve_skin", "" + p1685, {
          expires: 30
        });
      }
    }, this.ⵠⲆⲆΔ, this.unlock.ⵠⲆⲆΔ);
    var v2692 = new b(ΔⵠΔΔ.ⲆⲆΔⲆ, ᐃᐃⵠΔΔΔΔᐃᐃ, function (p1686) {
      v2858.ⵠᐃⲆⵠᐃ = p1686;
      if (v2858.unlock.ⵠᐃⲆⵠᐃ[p1686] === 1) {
        ⵠⲆΔⲆ.set("starve_bag", "" + p1686, {
          expires: 30
        });
      }
    }, this.ⵠᐃⲆⵠᐃ, this.unlock.ⵠᐃⲆⵠᐃ);
    var v2693 = new b(ΔⵠΔΔ.ⲆᐃⲆΔⵠ, ᐃΔΔΔⵠᐃⵠⵠΔ, function (p1687) {
      v2858.ᐃᐃᐃⵠⲆ = p1687;
      if (v2858.unlock.ᐃᐃᐃⵠⲆ[p1687] === 1) {
        ⵠⲆΔⲆ.set("starve_book", "" + p1687, {
          expires: 30
        });
      }
    }, this.ᐃᐃᐃⵠⲆ, this.unlock.ᐃᐃᐃⵠⲆ);
    var v2694 = new b(ΔⵠΔΔ.ΔⲆⵠΔⵠ, ᐃⵠⲆⲆⵠⲆᐃⲆᐃ, function (p1688) {
      v2858.ᐃⲆⵠΔⲆ = p1688;
      if (v2858.unlock.ᐃⲆⵠΔⲆ[p1688] === 1) {
        ⵠⲆΔⲆ.set("starve_dead", "" + p1688, {
          expires: 30
        });
      }
    }, this.ᐃⲆⵠΔⲆ, this.unlock.ᐃⲆⵠΔⲆ);
    var v2695 = new b(ΔⵠΔΔ.ΔⲆⵠΔⵠ, ⵠⵠⲆΔᐃΔⵠΔⵠ, function (p1689) {
      v2858.ⵠᐃᐃⵠᐃ = p1689;
      if (v2858.unlock.ⵠᐃᐃⵠᐃ[p1689] === 1) {
        ⵠⲆΔⲆ.set("starve_crate", "" + p1689, {
          expires: 30
        });
      }
    }, this.ⵠᐃᐃⵠᐃ, this.unlock.ⵠᐃᐃⵠᐃ);
    var v2696 = new b(ΔⵠΔΔ.ⵠΔⲆⲆⵠ, ΔᐃⵠⵠΔⲆΔᐃᐃ, function (p1690) {
      v2858.ᐃⲆΔΔⲆ = p1690;
      if (v2858.unlock.ᐃⲆΔΔⲆ[p1690] === 1) {
        ⵠⲆΔⲆ.set("starve_accessory", "" + p1690, {
          expires: 30
        });
      }
    }, this.ᐃⲆΔΔⲆ, this.unlock.ᐃⲆΔΔⲆ);
    this.ⲆⲆⲆⵠⵠⲆΔ = function (p1691) {
      v3090.ΔΔⲆΔ = f435(vThis.ⵠΔΔ, p1691);
      for (var v2697 = 0; v2697 < vThis.buttons.length; v2697++) {
        if (v2660 === vThis.buttons[v2697].info.active) {
          vThis.buttons[v2697].ⵠⲆⵠᐃ(vThis.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        }
      }
    };
    this.ⵠΔⵠᐃⵠⲆⵠ = function (p1692) {
      v3090.ΔΔⲆΔ = f435(vThis.ⵠΔΔ, p1692);
      for (var v2698 = 0; vThis.buttons.length > v2698; v2698++) {
        var v2699 = vThis.buttons[v2698];
        if (v2660 === v2699.info.active && v2699.ⵠⲆⵠᐃ(vThis.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
          v2699.info.callback();
          return;
        }
      }
    };
    this.ᐃⵠⵠⵠΔⲆⵠ = vVVV1622;
    this.ΔⵠⲆⲆΔⵠᐃ = function (p1693) {
      v3090.ΔΔⲆΔ = f435(vThis.ⵠΔΔ, p1693);
      var v2700 = false;
      for (var v2701 = 0; vThis.buttons.length > v2701; v2701++) {
        if (v2660 === vThis.buttons[v2701].info.active) {
          v2700 |= vThis.buttons[v2701].ⵠⲆⵠᐃ(vThis.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        }
      }
      if (v2700 !== vThis.ᐃⵠⵠⵠΔⲆⵠ) {
        vThis.ᐃⵠⵠⵠΔⲆⵠ = v2700;
        p1649.style.cursor = v2700 ? vThis.ΔⵠΔΔᐃᐃⲆ : vThis.ΔΔⲆⵠΔΔⵠ;
      }
    };
    this.ⲆⲆⵠΔᐃⲆΔ = function () {
      vWindow.addEventListener("mousedown", this.ⲆⲆⲆⵠⵠⲆΔ, vVV165);
      vWindow.addEventListener("mouseup", this.ⵠΔⵠᐃⵠⲆⵠ, false);
      vWindow.addEventListener("mousemove", this.ΔⵠⲆⲆΔⵠᐃ, false);
    };
    this.ⲆⲆⵠⲆΔᐃⲆ = function () {
      vWindow.removeEventListener("mousedown", this.ⲆⲆⲆⵠⵠⲆΔ, vVV1623);
      vWindow.removeEventListener("mouseup", this.ⵠΔⵠᐃⵠⲆⵠ, vVV163);
      vWindow.removeEventListener("mousemove", this.ΔⵠⲆⲆΔⵠᐃ, vV162);
    };
  }
  function f503(p1694, p1695) {
    this.ⵠΔΔ = p1694;
    this.ᐃ = p1695;
    var vThis3 = this;
    this.ⲆⵠᐃⵠΔΔᐃ = false;
    this.ⲆⲆⵠⵠᐃᐃΔ = {
      id: document.getElementById("scoreboard"),
      style: document.getElementById("scoreboard").style,
      height: 0,
      translate: {
        y: 0,
        x: 0
      },
      ⵠΔᐃ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = this.translate.y + "px";
      },
      ⵠⵠΔⵠᐃ: function () {
        this.id.innerHTML = "<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">" + v2860.ᐃⲆΔⲆᐃⲆΔ.ⵠΔΔⲆᐃΔⵠ + "</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> " + v756[2035] + " : " + v2860.ⵠᐃⵠ + "</div><div class=\"stats\"> " + v756[2034] + " : " + v2860.ᐃⲆΔⲆᐃⲆΔ.ΔΔⵠⵠᐃᐃⲆ + "</div></div><div id=\"flexDisplay\"><div id=\"score\"> " + v756[2033] + " : " + v2860.ᐃⲆΔⲆᐃⲆΔ.ΔⲆΔΔᐃ + "</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> " + v2860.ᐃⲆΔⲆᐃⲆΔ.ⵠⵠΔᐃⵠⲆΔ + " " + v756[2032] + "</div></div><div id=\"shop_points\">" + v756[2031] + "</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">" + v756[2029] + "</div><div class=\"social\" id=\"fffacebook\">" + v756[2030] + "</div></div><div id=\"bbback\">" + v756[2028] + "</div>";
        this.style.display = "inline-block";
        document.getElementById("tttwitter").addEventListener("mouseup", f511, false);
        document.getElementById("bbback").addEventListener("mouseup", function () {
          v2861.ⵠᐃⲆᐃⵠ(v2858.ⲆⵠⵠᐃΔ);
        }, false);
        document.getElementById("fffacebook").addEventListener("mouseup", f514, false);
        this.height = Math.floor(this.id.clientHeight / 2);
        (function () {
          var v2702 = new XMLHttpRequest();
          v2702.open("GET", v3120 + "getBreadAndScore?userid=" + vUndefined5);
          v2702.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2702.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200 && v2702.responseText !== "0") {
              var v2703 = JSON.parse(v2702.responseText);
              var v2704 = v2703.b - v2858.ᐃᐃᐃᐃᐃ;
              v2858.ᐃᐃᐃᐃᐃ = v2703.b;
              v2858.ΔⲆΔΔᐃ = v2703.s;
              v2858.ⲆⲆⲆⵠΔ = v2858.ᐃⵠᐃⲆᐃᐃⵠ(v2858.ΔⲆΔΔᐃ);
              v2858.ΔᐃⵠᐃᐃⲆΔ = v2858.ΔⵠⲆΔΔⵠᐃ(v2858.ΔⲆΔΔᐃ);
              v2858.ᐃⵠⵠᐃᐃⵠΔ = 0;
              document.getElementById("breadWonInner").innerHTML = "" + v2704;
            }
          };
          v2702.send();
        })();
      }
    };
    var v2705;
    var v2706 = 0;
    function f504() {
      vThis3.ⵠΔᐃ();
      if (++v2706 != 30) {
        vWindow.setTimeout(f504, 33);
      } else {
        vThis3.ⵠΔᐃ();
      }
    }
    this.ⵠᐃⲆᐃⵠ = function (p1696) {
      if (vThis3.ⲆⵠᐃⵠΔΔᐃ === true) {
        vThis3.ⲆⵠᐃⵠΔΔᐃ = false;
        v2705 = p1696;
        v2707 = -1;
        f505();
        f532();
      }
    };
    var v2707 = -1;
    function f505() {
      vThis3.ⵠΔᐃ();
      if (++v2707 == 30) {
        vThis3.stop();
        vThis3.ⲆⲆⵠⵠᐃᐃΔ.style.display = "none";
        v2705();
        return;
      }
      vWindow.setTimeout(f505, 33);
    }
    this.ΔⲆⲆᐃΔ = false;
    this.stop = function () {
      this.ΔⲆⲆᐃΔ = false;
    };
    this.ⲆⵠⵠᐃΔ = function () {
      f534();
      document.getElementById("game_body").style.backgroundColor = v594.ᐃᐃⵠΔⲆ[v2857.time];
      vThis3.ⲆⲆⵠⵠᐃᐃΔ.ⵠⵠΔⵠᐃ();
      v2858.ⲆⲆᐃΔᐃⲆⲆ.style.display = "inline-block";
      vThis3.ΔⲆⲆᐃΔ = vVV122;
      vThis3.ⲆⵠᐃⵠΔΔᐃ = vVVVV1222;
      v2707 = -1;
      v2706 = 0;
      f504();
    };
    this.ⵠΔᐃ = function () {
      this.ⲆⲆⵠⵠᐃᐃΔ.translate.x = Math.floor(v411 - 275);
      this.ⲆⲆⵠⵠᐃᐃΔ.translate.y = Math.floor(v412 - this.ⲆⲆⵠⵠᐃᐃΔ.height - 28);
      v2858.ⲆⲆᐃΔᐃⲆⲆ.translate.x = this.ⲆⲆⵠⵠᐃᐃΔ.translate.x - 350;
      v2858.ⲆⲆᐃΔᐃⲆⲆ.translate.y = this.ⲆⲆⵠⵠᐃᐃΔ.translate.y + 0;
      v2858.ⲆⲆᐃΔᐃⲆⲆ.ⵠΔᐃ();
      if (v2706 != 30 || v2707 != -1) {
        var v2708 = 0;
        if (v2706 != 30) {
          v2708 = 1500 / (v2706 + 1) - 50;
        }
        if (v2707 != -1) {
          v2708 = -(1750 / (30 - v2707 + 1) - 48);
        }
        this.ⲆⲆⵠⵠᐃᐃΔ.translate.y -= v2708;
      }
      this.ⲆⲆⵠⵠᐃᐃΔ.ⵠΔᐃ();
    };
    this.ⲆⵠⲆᐃ = function () {
      f277();
      v2860.alert.ⲆⵠⲆᐃ("#FFF", "#000");
    };
  }
  function f506(p1697, p1698) {
    var vThis4 = this;
    this.ⵠΔΔ = p1697;
    this.ⵠΔΔⵠΔᐃΔ = 1680;
    this.ᐃ = p1698;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ΔΔⲆⵠΔΔⵠ = "default";
      this.ΔⵠΔΔᐃᐃⲆ = "pointer";
    } else {
      this.ΔΔⲆⵠΔΔⵠ = "url('img/cursor0.png'), default";
      this.ΔⵠΔΔᐃᐃⲆ = "url('img/cursor1.png'), pointer";
    }
    this.ⵠⵠⲆᐃΔᐃⲆ = 1;
    this.ΔΔⲆⲆΔΔΔ = 1;
    this.ⲆᐃΔΔⵠⲆⵠ = 145;
    this.ᐃⲆⵠⲆⲆⵠΔ = this.ⲆᐃΔΔⵠⲆⵠ;
    this.ⵠᐃⵠΔᐃⵠᐃ = 1;
    this.ᐃⲆⵠᐃᐃᐃⲆ = 1;
    this.ⵠⲆⲆⵠΔⲆΔΔᐃ = {
      id: document.getElementById("team_box"),
      style: document.getElementById("team_box").style,
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 125) + "px";
        this.style.top = "110px";
      }
    };
    this.ⵠΔⲆⵠ = {
      ᐃΔΔⵠⲆⵠΔ: f438(60, 60, 0, ⵠΔ[1031]),
      ΔⵠⲆⲆΔⲆᐃ: f438(60, 60, 0, ⵠΔ[1032])
    };
    this.sign = {
      open: false,
      ᐃᐃⲆⵠⵠⵠⲆⲆⲆ: 0,
      ⲆᐃⵠΔⵠⲆΔ: document.getElementById("sign_object"),
      ⵠᐃᐃΔⲆΔⵠ: 0,
      id: document.getElementById("sign_window"),
      style: document.getElementById("sign_window").style,
      button: f438(60, 60, 0, ⵠΔ[1052]),
      ᐃⲆΔΔⲆⵠΔ: function () {
        var v2709 = Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + ⵠΔ[427][0].width) + 35);
        this.button.info.translate.x = v2709;
        this.button.info.translate.y = 22;
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 150) + "px";
        this.style.top = Math.floor(v412 - 115) + "px";
      },
      ⵠᐃⲆᐃⵠ: function () {
        v3057.sign.style.display = "none";
        v3057.sign.open = vVVV16222;
      },
      select: function () {
        v3057.sign.open = !v3057.sign.open;
        if (v3057.sign.open) {
          v3057.sign.style.display = "inline-block";
        } else {
          v3057.sign.style.display = "none";
        }
      },
      ok: function () {
        v2862.ΔΔΔᐃΔⲆᐃΔⲆ(v2860.sign.ΔᐃᐃΔⵠ, v3057.sign.ⵠᐃᐃΔⲆΔⵠ);
        v3057.sign.select();
      },
      up: function () {
        v3057.sign.ⵠᐃᐃΔⲆΔⵠ = v3057.sign.ⵠᐃᐃΔⲆΔⵠ === 0 ? 3 : v3057.sign.ⵠᐃᐃΔⲆΔⵠ - 1;
        v3057.sign.ⲆᐃⵠΔⵠⲆΔ.src = "./img/sign" + v3057.sign.ⵠᐃᐃΔⲆΔⵠ + ".png";
      },
      down: function () {
        v3057.sign.ⵠᐃᐃΔⲆΔⵠ = (v3057.sign.ⵠᐃᐃΔⲆΔⵠ + 1) % 4;
        v3057.sign.ⲆᐃⵠΔⵠⲆΔ.src = "./img/sign" + v3057.sign.ⵠᐃᐃΔⲆΔⵠ + ".png";
      }
    };
    document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, vVVV162);
    document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, vVV16);
    document.getElementById("sign_up").addEventListener("mouseup", this.sign.up, vVVV16222);
    document.getElementById("sign_down").addEventListener("mouseup", this.sign.down, false);
    this.ⲆⲆΔᐃⵠ = {
      open: vV162,
      id: document.getElementById("shop_market"),
      style: document.getElementById("shop_market").style,
      items: [{
        id: 0,
        name: "wood",
        ᐃⵠⵠⵠᐃ: 1,
        b: 1,
        a: 3,
        ᐃⵠᐃᐃᐃ: 427
      }, {
        id: 1,
        name: "stone",
        ᐃⵠⵠⵠᐃ: 1,
        b: 1,
        a: 4,
        ᐃⵠᐃᐃᐃ: 426
      }, {
        id: 2,
        name: "gold",
        ᐃⵠⵠⵠᐃ: 1,
        b: 1,
        a: 6,
        ᐃⵠᐃᐃᐃ: 408
      }, {
        id: 3,
        name: "diamond",
        ᐃⵠⵠⵠᐃ: 4,
        b: 4,
        a: 1,
        ᐃⵠᐃᐃᐃ: 409
      }, {
        id: 4,
        name: "amethyst",
        ᐃⵠⵠⵠᐃ: 8,
        b: 8,
        a: 1,
        ᐃⵠᐃᐃᐃ: 529
      }, {
        id: 5,
        name: "reidite",
        ᐃⵠⵠⵠᐃ: 16,
        b: 16,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1214
      }, {
        id: 6,
        name: "pumpkin_seed",
        ᐃⵠⵠⵠᐃ: 10,
        b: 10,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1057
      }, {
        id: 7,
        name: "carrot_seed",
        ᐃⵠⵠⵠᐃ: 16,
        b: 16,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1225
      }, {
        id: 8,
        name: "tomato_seed",
        ᐃⵠⵠⵠᐃ: 20,
        b: 20,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1235
      }, {
        id: 9,
        name: "thornbush_seed",
        ᐃⵠⵠⵠᐃ: 30,
        b: 30,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1094
      }, {
        id: 10,
        name: "garlic_seed",
        ᐃⵠⵠⵠᐃ: 40,
        b: 40,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1083
      }, {
        id: 11,
        name: "watermelon_seed",
        ᐃⵠⵠⵠᐃ: 60,
        b: 60,
        a: 1,
        ᐃⵠᐃᐃᐃ: 1242
      }],
      button: f438(60, 60, 0, ⵠΔ[1044]),
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 450) + "px";
        this.style.top = Math.floor(v412 - 270) + "px";
      },
      select: function () {
        v3057.ⲆⲆΔᐃⵠ.open = !v3057.ⲆⲆΔᐃⵠ.open;
        if (v3057.ⲆⲆΔᐃⵠ.open) {
          v3057.ⲆⲆΔᐃⵠ.style.display = "inline-block";
        } else {
          v3057.ⲆⲆΔᐃⵠ.style.display = "none";
        }
      },
      ⵠᐃⲆᐃⵠ: function () {
        v3057.ⲆⲆΔᐃⵠ.style.display = "none";
        v3057.ⲆⲆΔᐃⵠ.open = vVV163;
      },
      ⵠⵠᐃᐃⵠⲆᐃ: function () {
        v2862.ⲆᐃᐃⵠΔⲆΔΔΔ(this.ᐃᐃⲆⵠᐃΔⵠ);
      },
      ⵠΔⲆΔΔ: function () {
        this.id;
        if (this.ᐃᐃⲆⵠᐃΔⵠ.a === 1) {
          var v2710 = Math.floor(Number(this.value) * this.ᐃᐃⲆⵠᐃΔⵠ.b);
          this.ᐃᐃⲆⵠᐃΔⵠ.ᐃⵠⵠⵠᐃ = v2710;
          document.getElementById(this.ᐃᐃⲆⵠᐃΔⵠ.name + "_trad_number").innerHTML = v2710 + "";
        } else {
          v2710 = Math.floor(Number(this.value) / this.ᐃᐃⲆⵠᐃΔⵠ.a);
          this.ᐃᐃⲆⵠᐃΔⵠ.ᐃⵠⵠⵠᐃ = v2710;
          document.getElementById(this.ᐃᐃⲆⵠᐃΔⵠ.name + "_trad_number").innerHTML = v2710 + "";
        }
      }
    };
    document.getElementById("quit_market").addEventListener("mouseup", this.ⲆⲆΔᐃⵠ.ⵠᐃⲆᐃⵠ, vVV163);
    var v2711 = [["mouseup", this.ⲆⲆΔᐃⵠ.ⵠⵠᐃᐃⵠⲆᐃ, "buy_"], ["click", this.ⲆⲆΔᐃⵠ.ⵠΔⲆΔΔ, ""], ["change", this.ⲆⲆΔᐃⵠ.ⵠΔⲆΔΔ, ""], ["keypress", this.ⲆⲆΔᐃⵠ.keypress, ""]];
    for (var v2712 = 0; v2712 < this.ⲆⲆΔᐃⵠ.items.length; v2712++) {
      var v2713 = this.ⲆⲆΔᐃⵠ.items[v2712];
      document.getElementById(v2713.name + "_market").src = vVUndefined15 === ⵠΔ[v2713.ᐃⵠᐃᐃᐃ][0].ⵠᐃⵠⵠⵠ ? ⵠΔ[v2713.ᐃⵠᐃᐃᐃ][0].src : ⵠΔ[v2713.ᐃⵠᐃᐃᐃ][0].ⵠᐃⵠⵠⵠ;
      if (v2713.a === 1) {
        document.getElementById(v2713.name + "_trad_number").innerHTML = v2713.b;
        document.getElementById(v2713.name + "_number").value = 1;
        document.getElementById(v2713.name + "_number").step = 1;
        document.getElementById(v2713.name + "_number").min = 1;
        document.getElementById(v2713.name + "_number").max = Math.floor(255 / v2713.b);
      } else {
        document.getElementById(v2713.name + "_trad_number").innerHTML = 1;
        document.getElementById(v2713.name + "_number").value = v2713.a;
        document.getElementById(v2713.name + "_number").step = v2713.a;
        document.getElementById(v2713.name + "_number").min = v2713.a;
      }
      document.getElementById("buy_" + v2713.name + "_number").ᐃᐃⲆⵠᐃΔⵠ = v2713;
      document.getElementById(v2713.name + "_number").ᐃᐃⲆⵠᐃΔⵠ = v2713;
      for (var v2714 = 0; v2711.length > v2714; v2714++) {
        document.getElementById(v2711[v2714][2] + v2713.name + "_number").addEventListener(v2711[v2714][0], v2711[v2714][1], false);
      }
    }
    $("[type='number']").keypress(function (p1699) {
      p1699.preventDefault();
    });
    this.options = {
      open: vVV1622,
      id: document.getElementById("option_in_game"),
      style: document.getElementById("option_in_game").style,
      ᐃᐃΔⲆⲆ: document.getElementById("agree_ing").style,
      ⵠⵠⵠᐃⵠᐃΔ: document.getElementById("cancel_agree_ing").style,
      ⲆᐃⵠᐃⲆⲆΔ: document.getElementById("quest_agree_ing").style,
      ΔᐃΔⲆⵠΔⵠ: document.getElementById("spectator_agree_ing").style,
      ⵠⲆᐃΔⵠⲆⵠ: document.getElementById("auto_feed_agree_ing").style,
      ΔⲆⲆⲆΔⵠⲆ: document.getElementById("info_agree_ing").style,
      ᐃⲆᐃᐃΔⵠᐃ: document.getElementById("pixelated_agree_ing").style,
      button: f438(60, 60, 0, ⵠΔ[976]),
      ΔΔⲆⵠΔᐃΔΔⵠ: function () {
        v3057.options.open = !v3057.options.open;
        if (v3057.options.open) {
          v3057.options.style.display = "inline-block";
        } else {
          v3057.options.style.display = "none";
        }
      },
      ⲆᐃⵠᐃⵠΔΔⵠΔ: function () {
        v2858.ᐃⵠΔⲆΔΔΔ();
      },
      ΔⲆⲆⵠⲆⲆⵠᐃᐃ: function () {
        v2858.ΔⵠᐃᐃΔΔⲆ();
      },
      high: function () {
        v2858.ⵠᐃⵠΔⵠΔᐃᐃᐃ();
      },
      low: function () {
        v2858.ᐃᐃᐃⵠⵠⵠΔΔⲆ();
      },
      ⵠᐃᐃⵠΔ: function () {
        v3057.ΔΔᐃᐃ.ⵠᐃᐃⵠΔ();
      },
      ⵠⵠΔᐃΔΔⵠᐃⲆ: function () {
        v3057.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠΔ();
      },
      ⲆⲆⲆΔⵠΔᐃⵠⲆ: function () {
        v3057.ⵠᐃᐃᐃ.ⵠᐃᐃⵠΔ();
      },
      ⲆⲆᐃΔΔᐃⲆⲆⲆ: function () {
        v2860.ⵠⲆⲆᐃⲆΔⵠ.ᐃⲆⲆΔΔᐃΔ();
      },
      ⲆΔⵠᐃΔⵠⵠΔⲆ: function () {
        v2860.ⵠᐃΔⵠᐃ.ᐃⲆⲆΔΔᐃΔ();
      },
      ⵠᐃⲆᐃⵠ: function () {
        v3057.options.style.display = "none";
        v3057.options.open = false;
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 235) + "px";
        this.style.top = Math.floor(v412 - 170) + "px";
      }
    };
    document.getElementById("azerty_ing").addEventListener("mouseup", this.options.ⲆᐃⵠᐃⵠΔΔⵠΔ, vVVV16);
    document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.ΔⲆⲆⵠⲆⲆⵠᐃᐃ, false);
    document.getElementById("low_ing").addEventListener("mouseup", this.options.low, false);
    document.getElementById("high_ing").addEventListener("mouseup", this.options.high, vVVV163);
    document.getElementById("quit_opt").addEventListener("mouseup", this.options.ⵠᐃⲆᐃⵠ, vVV163);
    document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.ⵠᐃᐃⵠΔ, vVVV16223);
    document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.ⲆⲆⲆΔⵠΔᐃⵠⲆ, false);
    document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.ⵠⵠΔᐃΔΔⵠᐃⲆ, false);
    document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.ⲆⲆᐃΔΔᐃⲆⲆⲆ, vVVVV1623);
    document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.ⲆΔⵠᐃΔⵠⵠΔⲆ, false);
    this.ΔΔⲆⲆⲆ = {
      open: vVVV163,
      ⵠᐃᐃⵠⲆ: ⵠⲆΔⲆ.get("starve_cancel") && ⵠⲆΔⲆ.get("starve_cancel") === "0" ? 0 : 1,
      id: document.getElementById("cancel_sure_delete"),
      style: document.getElementById("cancel_sure_delete").style,
      ᐃᐃΔⲆⲆ: document.getElementById("cancel_agree").style,
      button: 0,
      ⲆΔ: 0,
      ⵠᐃⲆᐃⵠ: function () {
        v3057.ΔΔⲆⲆⲆ.style.display = "none";
        v3057.ΔΔⲆⲆⲆ.open = vVV164;
      },
      ⲆⲆⵠᐃᐃⵠⵠ: function () {
        if (v2860.ⵠⲆᐃᐃ.ΔⵠΔⵠⵠ) {
          v2862.ΔᐃΔΔΔᐃΔΔΔ();
        }
        v3057.ΔΔⲆⲆⲆ.ⵠᐃⲆᐃⵠ();
      },
      ⵠᐃᐃⵠΔ: function () {
        if (v3057.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠⲆ) {
          ⵠⲆΔⲆ.set("starve_cancel", "0");
          v3057.ΔΔⲆⲆⲆ.ᐃᐃΔⲆⲆ.display = "inline-block";
          v3057.options.ⵠⵠⵠᐃⵠᐃΔ.display = "none";
        } else {
          ⵠⲆΔⲆ.set("starve_cancel", "1");
          v3057.ΔΔⲆⲆⲆ.ᐃᐃΔⲆⲆ.display = "none";
          v3057.options.ⵠⵠⵠᐃⵠᐃΔ.display = "inline-block";
        }
        v3057.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠⲆ = !v3057.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠⲆ;
      },
      ⵠΔΔΔⵠᐃΔ: function () {
        if (this.ⵠᐃᐃⵠⲆ) {
          this.style.display = "inline-block";
          this.open = vVVV12222;
        } else {
          this.ⲆⲆⵠᐃᐃⵠⵠ();
        }
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 235) + "px";
        this.style.top = Math.floor(v412 - 130) + "px";
      }
    };
    this.ΔΔⲆⲆⲆ.id.oncontextmenu = function () {
      return false;
    };
    this.ΔΔⲆⲆⲆ.ᐃᐃΔⲆⲆ.display = "none";
    if (this.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠⲆ) {
      this.options.ⵠⵠⵠᐃⵠᐃΔ.display = "inline-block";
    } else {
      this.options.ⵠⵠⵠᐃⵠᐃΔ.display = "none";
    }
    document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.ΔΔⲆⲆⲆ.ⲆⲆⵠᐃᐃⵠⵠ, vVV1622);
    document.getElementById("cancel_no_delete").addEventListener("mouseup", this.ΔΔⲆⲆⲆ.ⵠᐃⲆᐃⵠ, vVVV162);
    document.getElementById("cancel_case_agree").addEventListener("mouseup", this.ΔΔⲆⲆⲆ.ⵠᐃᐃⵠΔ, false);
    document.addEventListener("cancel_sure_delete", function (p1700) {
      p1700.preventDefault();
    }, vVVV162);
    this.ᐃΔⲆΔᐃᐃⵠ = {
      ⵠᐃᐃⵠⲆ: ⵠⲆΔⲆ.get("starve_aliasing") ? ⵠⲆΔⲆ.get("starve_aliasing") === "0" ? 0 : 1 : 1,
      ᐃⵠᐃᐃᐃⵠΔ: function (p1701) {
        document.getElementById("game_canvas").style.imageRendering = p1701 ? "pixelated" : "auto";
      },
      ⵠᐃᐃⵠΔ: function () {
        if (v3057.ᐃΔⲆΔᐃᐃⵠ.ⵠᐃᐃⵠⲆ === 0) {
          ⵠⲆΔⲆ.set("starve_aliasing", "1");
          v3057.ᐃΔⲆΔᐃᐃⵠ.ᐃⵠᐃᐃᐃⵠΔ(1);
          v3057.options.ᐃⲆᐃᐃΔⵠᐃ.display = "inline-block";
        } else {
          ⵠⲆΔⲆ.set("starve_aliasing", "0");
          v3057.ᐃΔⲆΔᐃᐃⵠ.ᐃⵠᐃᐃᐃⵠΔ(0);
          v3057.options.ᐃⲆᐃᐃΔⵠᐃ.display = "none";
        }
        v3057.ᐃΔⲆΔᐃᐃⵠ.ⵠᐃᐃⵠⲆ = (v3057.ᐃΔⲆΔᐃᐃⵠ.ⵠᐃᐃⵠⲆ + 1) % 2;
      }
    };
    if (this.ᐃΔⲆΔᐃᐃⵠ.ⵠᐃᐃⵠⲆ === 1) {
      this.options.ᐃⲆᐃᐃΔⵠᐃ.display = "inline-block";
    } else {
      this.ᐃΔⲆΔᐃᐃⵠ.ᐃⵠᐃᐃᐃⵠΔ(0);
      this.options.ᐃⲆᐃᐃΔⵠᐃ.display = "none";
    }
    document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.ᐃΔⲆΔᐃᐃⵠ.ⵠᐃᐃⵠΔ, vVVV16);
    this.ᐃⵠᐃᐃⵠ = {
      ⵠᐃᐃⵠⲆ: ⵠⲆΔⲆ.get("starve_info_box") && ⵠⲆΔⲆ.get("starve_info_box") === "0" ? 0 : 1,
      display: 0,
      x: 0,
      y: 0,
      id: 0,
      ⵠⲆᐃᐃ: 0,
      ⵠᐃᐃⵠΔ: function () {
        if (v3057.ᐃⵠᐃᐃⵠ.ⵠᐃᐃⵠⲆ === 0) {
          ⵠⲆΔⲆ.set("starve_info_box", "1");
          v3057.options.ΔⲆⲆⲆΔⵠⲆ.display = "inline-block";
        } else {
          ⵠⲆΔⲆ.set("starve_info_box", "0");
          v3057.options.ΔⲆⲆⲆΔⵠⲆ.display = "none";
        }
        v3057.ᐃⵠᐃᐃⵠ.ⵠᐃᐃⵠⲆ = (v3057.ᐃⵠᐃᐃⵠ.ⵠᐃᐃⵠⲆ + 1) % 2;
      },
      ⵠⲆⵠᐃ: function (p1702, p1703, p1704) {
        if (p1702 && this.ⵠᐃᐃⵠⲆ) {
          this.display = 1;
          this.id = p1704 === 0 ? p1703.id : v722[p1703.id].ⵠⵠⲆΔ;
          this.x = p1703.info.translate.x + 80;
          this.y = p1703.info.translate.y;
          this.ⵠⲆᐃᐃ = p1704;
        }
        return p1702;
      }
    };
    if (this.ᐃⵠᐃᐃⵠ.ⵠᐃᐃⵠⲆ === 1) {
      this.options.ΔⲆⲆⲆΔⵠⲆ.display = "inline-block";
    } else {
      this.options.ΔⲆⲆⲆΔⵠⲆ.display = "none";
    }
    document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.ᐃⵠᐃᐃⵠ.ⵠᐃᐃⵠΔ, vVV16);
    if (ⵠⲆΔⲆ.get("starve_scale")) {
      v418 = Number(ⵠⲆΔⲆ.get("starve_scale"));
      document.getElementById("input_ratio").value = v418;
      v418 *= v487 / v489;
      f51();
    }
    this.ᐃᐃᐃᐃⵠⵠⵠ = function () {
      ⵠⲆΔⲆ.set("starve_scale", "" + document.getElementById("input_ratio").value);
      v418 = v487 / v489 * document.getElementById("input_ratio").value;
      f51();
    };
    document.getElementById("input_ratio").addEventListener("input", this.ᐃᐃᐃᐃⵠⵠⵠ, vVV1622);
    this.ΔΔᐃᐃ = {
      open: vVVV162,
      ⵠᐃᐃⵠⲆ: ⵠⲆΔⲆ.get("starve_safe") ? ⵠⲆΔⲆ.get("starve_safe") === "0" ? 0 : 1 : 1,
      id: document.getElementById("sure_delete"),
      style: document.getElementById("sure_delete").style,
      ᐃᐃΔⲆⲆ: document.getElementById("agree").style,
      button: 0,
      ⲆΔ: 0,
      ⵠᐃⲆᐃⵠ: function () {
        v3057.ΔΔᐃᐃ.style.display = "none";
        v3057.ΔΔᐃᐃ.open = vVV165;
      },
      all: function () {
        if (!v2860.ⵠⲆⲆᐃᐃ.wait) {
          if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && v2860.ⵠⲆᐃᐃ.id < 0 && !v2860.ᐃΔΔᐃᐃ.enabled) {
            v2862.ΔᐃⲆΔⲆⵠⲆΔᐃ(v3057.ΔΔᐃᐃ.button);
          }
          v3057.ΔΔᐃᐃ.ⵠᐃⲆᐃⵠ();
        }
      },
      ᐃⲆᐃ: function () {
        if (v2860.ⵠⲆᐃᐃ.ᐃᐃⵠⵠᐃⲆΔ && !v2860.ⵠⲆⲆᐃᐃ.wait) {
          if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && v2860.ⵠⲆᐃᐃ.id < 0 && !v2860.ᐃΔΔᐃᐃ.enabled) {
            v2862.ᐃΔᐃⲆᐃⵠⵠⵠᐃ(v3057.ΔΔᐃᐃ.button);
          }
          v3057.ΔΔᐃᐃ.ⵠᐃⲆᐃⵠ();
        }
      },
      ΔᐃΔΔᐃΔᐃⵠΔ: function () {
        if (!v2860.ⵠⲆⲆᐃᐃ.wait) {
          if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && v2860.ⵠⲆᐃᐃ.id < 0 && !v2860.ᐃΔΔᐃᐃ.enabled) {
            v2862.ⵠⲆΔⵠᐃⵠⲆΔⲆ(v3057.ΔΔᐃᐃ.button);
          }
          v3057.ΔΔᐃᐃ.ⵠᐃⲆᐃⵠ();
        }
      },
      ⵠᐃᐃⵠΔ: function () {
        if (v3057.ΔΔᐃᐃ.ⵠᐃᐃⵠⲆ) {
          ⵠⲆΔⲆ.set("starve_safe", "0");
          v3057.ΔΔᐃᐃ.ᐃᐃΔⲆⲆ.display = "inline-block";
          v3057.options.ᐃᐃΔⲆⲆ.display = "none";
        } else {
          ⵠⲆΔⲆ.set("starve_safe", "1");
          v3057.ΔΔᐃᐃ.ᐃᐃΔⲆⲆ.display = "none";
          v3057.options.ᐃᐃΔⲆⲆ.display = "inline-block";
        }
        v3057.ΔΔᐃᐃ.ⵠᐃᐃⵠⲆ = !v3057.ΔΔᐃᐃ.ⵠᐃᐃⵠⲆ;
      },
      ⵠΔΔΔⵠᐃΔ: function (p1705) {
        this.button = p1705;
        document.getElementById("item_to_del").src = ⵠΔ[v602[p1705].ⵠⵠ][0].ⵠᐃⵠⵠⵠ === vVVVUndefined172 ? ⵠΔ[v602[p1705].ⵠⵠ][0].src : ⵠΔ[v602[p1705].ⵠⵠ][0].ⵠᐃⵠⵠⵠ;
        if (v602[p1705].ᐃⲆᐃ && !v2860.ⵠⲆᐃᐃΔ && v2860.ⵠⲆᐃᐃ.ᐃᐃⵠⵠᐃⲆΔ) {
          document.getElementById("recycle_delete").style.display = "inline-block";
        } else {
          document.getElementById("recycle_delete").style.display = "none";
        }
        if (this.ⵠᐃᐃⵠⲆ) {
          this.style.display = "inline-block";
          this.open = true;
        } else {
          this.all();
        }
      },
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 235) + "px";
        this.style.top = Math.floor(v412 - 175) + "px";
      }
    };
    this.ΔΔᐃᐃ.ᐃᐃΔⲆⲆ.display = "none";
    if (this.ΔΔᐃᐃ.ⵠᐃᐃⵠⲆ) {
      this.options.ᐃᐃΔⲆⲆ.display = "inline-block";
    } else {
      this.options.ᐃᐃΔⲆⲆ.display = "none";
    }
    document.getElementById("one_delete").addEventListener("mouseup", this.ΔΔᐃᐃ.ΔᐃΔΔᐃΔᐃⵠΔ, vVVV16222);
    document.getElementById("yes_delete").addEventListener("mouseup", this.ΔΔᐃᐃ.all, vV16);
    document.getElementById("recycle_delete").addEventListener("mouseup", this.ΔΔᐃᐃ.ᐃⲆᐃ, false);
    document.getElementById("no_delete").addEventListener("mouseup", this.ΔΔᐃᐃ.ⵠᐃⲆᐃⵠ, false);
    document.getElementById("case_agree").addEventListener("mouseup", this.ΔΔᐃᐃ.ⵠᐃᐃⵠΔ, false);
    this.ⲆⵠⵠⵠΔ = {
      open: false,
      ⲆᐃⲆᐃᐃⵠⲆ: -1,
      button: f438(60, 60, 0, ⵠΔ[811]),
      id: document.getElementById("shop_starterkit"),
      style: document.getElementById("shop_starterkit").style,
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 300) + "px";
        this.style.top = Math.floor(v412 - 215) + "px";
      },
      ⵠᐃⲆᐃⵠ: function () {
        v3057.ⲆⵠⵠⵠΔ.open = vVVVV1623;
        v3057.ⲆⵠⵠⵠΔ.style.display = "none";
      },
      select: function () {
        v3057.ⲆⵠⵠⵠΔ.open = !v3057.ⲆⵠⵠⵠΔ.open;
        if (v3057.ⲆⵠⵠⵠΔ.open) {
          v3057.ⲆⵠⵠⵠΔ.style.display = "inline-block";
        } else {
          v3057.ⲆⵠⵠⵠΔ.style.display = "none";
        }
      },
      ⵠⵠᐃᐃⵠⲆᐃ: function () {
        if (v3057.ⲆⵠⵠⵠΔ.ⲆᐃⲆᐃᐃⵠⲆ >= 0) {
          v2862.ⵠᐃΔⵠⵠⲆⵠⵠΔ(v3057.ⲆⵠⵠⵠΔ.ⲆᐃⲆᐃᐃⵠⲆ);
          v3057.ⲆⵠⵠⵠΔ.ⵠᐃⲆᐃⵠ();
          if (ga) {
            ga("send", "event", "Game", "kit", "" + v3057.ⲆⵠⵠⵠΔ.ⲆᐃⲆᐃᐃⵠⲆ);
          }
        }
      },
      ⵠⵠΔⵠᐃ: function () {
        var v2715 = v2860.ⲆⵠⵠⵠΔ.value;
        document.getElementById("points_bank").innerHTML = ⵠⵠΔ.ΔⲆᐃⲆΔᐃᐃ(v2715) + " points";
        for (var v2716 = 0; v2716 < v2269.length; v2716++) {
          if (v2269[v2716].ᐃⵠⲆⲆⵠ > v2715) {
            document.getElementById("starter" + (v2716 + 1)).style.opacity = "0.4";
          } else {
            document.getElementById("starter" + (v2716 + 1)).style.opacity = "1";
          }
        }
        for (v2716 = 1; v2716 < 13; v2716++) {
          document.getElementById("inv_shop" + v2716).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2716).innerHTML = "";
        }
        document.getElementById("buy_kit").style.opacity = "0.2";
      },
      ᐃⵠⵠⵠⲆⵠᐃΔᐃ: function () {
        if (this.id.length > 8) {
          var vNumber17 = Number(this.id.charAt(7) + this.id.charAt(8));
        } else {
          vNumber17 = Number(this.id.charAt(7));
        }
        var v2717 = v2269[vNumber17 - 1];
        if (v2860.ⲆⵠⵠⵠΔ.value >= v2717.ᐃⵠⲆⲆⵠ) {
          v3057.ⲆⵠⵠⵠΔ.ⲆᐃⲆᐃᐃⵠⲆ = vNumber17;
          document.getElementById("buy_kit").style.opacity = "1";
        } else {
          v3057.ⲆⵠⵠⵠΔ.ⲆᐃⲆᐃᐃⵠⲆ = -1;
          document.getElementById("buy_kit").style.opacity = "0.2";
        }
        v2717 = v2717.items;
        for (var v2718 = 1, v2719 = 1; v2718 < v2717.length + 1; v2718++) {
          if (v2717[v2718 - 1][1] !== 47) {
            document.getElementById("inv_shop" + v2719).style.display = "inline-block";
            document.getElementById("inv_shop" + v2719).src = ⵠΔ[v602[v2717[v2718 - 1][1]].ⵠⵠ][0].ⵠᐃⵠⵠⵠ === vVVVUndefined17 ? ⵠΔ[v602[v2717[v2718 - 1][1]].ⵠⵠ][0].src : ⵠΔ[v602[v2717[v2718 - 1][1]].ⵠⵠ][0].ⵠᐃⵠⵠⵠ;
            document.getElementById("amount_shop" + v2719).innerHTML = "" + v2717[v2718 - 1][0];
            v2719++;
          }
        }
        for (; v2719 < 13; v2719++) {
          document.getElementById("inv_shop" + v2719).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2719).innerHTML = "";
        }
      }
    };
    document.getElementById("quit3").addEventListener("mouseup", this.ⲆⵠⵠⵠΔ.ⵠᐃⲆᐃⵠ, false);
    document.getElementById("buy_kit").addEventListener("mouseup", this.ⲆⵠⵠⵠΔ.ⵠⵠᐃᐃⵠⲆᐃ, false);
    for (v2714 = 1; v2714 < 11; v2714++) {
      document.getElementById("starter" + v2714).addEventListener("mouseup", this.ⲆⵠⵠⵠΔ.ᐃⵠⵠⵠⲆⵠᐃΔᐃ, false);
    }
    this.ⵠᐃᐃᐃ = {
      open: v16,
      ⵠᐃᐃⵠⲆ: ⵠⲆΔⲆ.get("starve_quests") ? ⵠⲆΔⲆ.get("starve_quests") === "1" ? 1 : 0 : 0,
      button: f438(60, 60, 0, ⵠΔ[1004]),
      id: document.getElementById("chronoquest"),
      style: document.getElementById("chronoquest").style,
      ⵠΔᐃ: function () {
        this.style.left = Math.floor(v411 - 420) + "px";
        this.style.top = Math.floor(v412 - 270) + "px";
      },
      ⵠᐃⲆᐃⵠ: function () {
        v3057.ⵠᐃᐃᐃ.style.display = "none";
        v3057.ⵠᐃᐃᐃ.open = vVVVVV1623;
      },
      select: function () {
        v3057.ⵠᐃᐃᐃ.open = !v3057.ⵠᐃᐃᐃ.open;
        if (v3057.ⵠᐃᐃᐃ.open) {
          v3057.ⵠᐃᐃᐃ.style.display = "inline-block";
        } else {
          v3057.ⵠᐃᐃᐃ.style.display = "none";
        }
      },
      list: [],
      reset: function () {
        for (var v2720 = 0; v2720 < v2295.length; v2720++) {
          this.list[v2720] = 1;
          document.getElementById("timeremain_" + v2720).style.display = "inline-block";
          document.getElementById("time_finished_" + v2720).style.display = "none";
          document.getElementById("claim_reward_" + v2720).style.display = "none";
        }
      },
      ΔⵠΔⵠΔⲆᐃ: 0,
      ⵠᐃⵠΔᐃⵠⵠ: 0,
      ᐃᐃᐃⵠᐃᐃⲆⵠⵠ: function () {
        if (v3057.ⵠᐃᐃᐃ.open) {
          var v2721 = new Date().getTime();
          if (!(v2721 - this.ΔⵠΔⵠΔⲆᐃ < 1000)) {
            this.ΔⵠΔⵠΔⲆᐃ = v2721;
            for (var v2722 = 0; v2722 < v2295.length; v2722++) {
              if (v3057.ⵠᐃᐃᐃ.list[v2722]) {
                var v2723 = v2295[v2722].time - (v2721 - v2859.ⲆⵠΔΔΔ.ⵠⵠΔⵠᐃ + v3057.ⵠᐃᐃᐃ.ⵠᐃⵠΔᐃⵠⵠ);
                document.getElementById("timeremain_" + v2722).innerHTML = v2723 > 960000 ? Math.floor(v2723 / 480000) + " days" : v2723 > 480000 ? Math.floor(v2723 / 480000) + " day" : v2723 > 60000 ? Math.floor(v2723 / 60000) + " min" : Math.floor(v2723 / 1000) + " sec";
              }
            }
          }
        }
      },
      restore: function (p1706) {
        for (var v2724 = 0; v2724 < p1706.length; v2724++) {
          if (p1706[v2724] != 1) {
            v3057.ⵠᐃᐃᐃ.ΔⲆⲆᐃⵠΔΔ(v2724, p1706[v2724]);
          }
        }
      },
      ΔⲆⲆᐃⵠΔΔ: function (p1707, p1708) {
        if (p1708 === 3 && (p1707 === 11 || p1707 === 12)) {
          v2860.ΔⲆⵠⵠ.ᐃᐃⵠⲆΔΔΔ(0, 1);
          v3057.ⲆⲆᐃⵠⵠΔᐃ();
        }
        document.getElementById("timeremain_" + p1707).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        if (p1708 > 1) {
          document.getElementById("time_finished_" + p1707).innerHTML = "SUCCEED";
          document.getElementById("timeremain_" + p1707).style.display = "none";
        } else if (p1708 === 0) {
          document.getElementById("time_finished_" + p1707).innerHTML = "FAILED";
          document.getElementById("timeremain_" + p1707).style.display = "none";
        }
        document.getElementById("claim_reward_" + p1707).style.display = p1708 === 2 ? "inline-block" : "none";
        document.getElementById("time_finished_" + p1707).style.display = "inline";
        v3057.ⵠᐃᐃᐃ.list[p1707] = 0;
      },
      modify: function (p1709, p1710) {
        v3057.ⵠᐃᐃᐃ.ΔⲆⲆᐃⵠΔΔ(p1709, p1710);
        if (v3057.ⵠᐃᐃᐃ.ⵠᐃᐃⵠⲆ) {
          v3057.ⵠᐃᐃᐃ.open = vV12;
          v3057.ⵠᐃᐃᐃ.style.display = "inline-block";
        }
      },
      ⵠᐃᐃⵠΔ: function () {
        if (v3057.ⵠᐃᐃᐃ.ⵠᐃᐃⵠⲆ) {
          ⵠⲆΔⲆ.set("starve_quests", "0");
          v3057.options.ⲆᐃⵠᐃⲆⲆΔ.display = "none";
        } else {
          ⵠⲆΔⲆ.set("starve_quests", "1");
          v3057.options.ⲆᐃⵠᐃⲆⲆΔ.display = "inline-block";
        }
        v3057.ⵠᐃᐃᐃ.ⵠᐃᐃⵠⲆ = !v3057.ⵠᐃᐃᐃ.ⵠᐃᐃⵠⲆ;
      },
      ⵠΔΔⵠⲆⵠΔⲆⵠ: function () {
        var vNumber18 = Number(this.id.charAt(13));
        var vNumber19 = Number(this.id.charAt(14));
        if (this.id.charAt(14) !== "" && vNumber19 >= 0 && vNumber19 <= 9) {
          vNumber18 = vNumber18 * 10 + vNumber19;
        }
        v2862.ⲆᐃᐃⲆΔᐃⲆⲆᐃ(vNumber18);
      }
    };
    if (this.ⵠᐃᐃᐃ.ⵠᐃᐃⵠⲆ) {
      this.options.ⲆᐃⵠᐃⲆⲆΔ.display = "inline-block";
    } else {
      this.options.ⲆᐃⵠᐃⲆⲆΔ.display = "none";
    }
    document.getElementById("quit_chronoquest").addEventListener("mouseup", this.ⵠᐃᐃᐃ.ⵠᐃⲆᐃⵠ, vV162);
    for (v2714 = 0; v2295.length > v2714; v2714++) {
      document.getElementById("claim_reward_" + v2714).addEventListener("mouseup", this.ⵠᐃᐃᐃ.ⵠΔΔⵠⲆⵠΔⲆⵠ, false);
    }
    function f507(p1711) {
      document.getElementById("img_" + p1711).addEventListener("mousedown", function () {
        v3057.ⵠⲆⵠᐃⲆ.list.ⲆⵠᐃⲆⲆΔΔⵠᐃ(p1711 - 1);
      }, vV163);
    }
    this.ⵠⲆⵠᐃⲆ = {
      open: vVV16,
      button: f438(60, 60, 0, ⵠΔ[957]),
      list: {
        id: document.getElementById("recipe_craft"),
        style: document.getElementById("recipe_craft").style,
        ᐃⲆΔⲆᐃ: [],
        ΔⲆⵠᐃᐃⵠⲆ: 0,
        ⵠΔᐃ: function () {
          this.style.left = Math.floor(v411 - 335) + "px";
          this.style.top = Math.floor(v412 - 215) + "px";
        },
        ⵠᐃⲆᐃⵠ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          v3057.ⵠⲆⵠᐃⲆ.open = vVVV162;
        },
        ⲆΔⵠⲆⲆΔⲆ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          document.getElementById("home_craft").style.display = "inline-block";
        },
        ⲆⵠᐃⲆⲆΔΔⵠᐃ: function (p1712) {
          if ((v2725 = this.ᐃⲆΔⲆᐃ[p1712]).ⵠⵠⲆ) {
            document.getElementById("watercraft").style.display = "inline-block";
          } else {
            document.getElementById("watercraft").style.display = "none";
          }
          if (v2725.f) {
            document.getElementById("firecraft").style.display = "inline-block";
          } else {
            document.getElementById("firecraft").style.display = "none";
          }
          if (v2725.w) {
            document.getElementById("workcraft").style.display = "inline-block";
          } else {
            document.getElementById("workcraft").style.display = "none";
          }
          if (v2725.e) {
            document.getElementById("wellcraft").style.display = "inline-block";
          } else {
            document.getElementById("wellcraft").style.display = "none";
          }
          for (var v2725 = v2725.r, v2726 = (p1712 = 0, 1); p1712 < v2725.length; p1712++) {
            document.getElementById("inv" + v2726).style.display = "inline-block";
            document.getElementById("inv" + v2726).src = ⵠΔ[v602[v2725[p1712][0]].ⵠⵠ][0].ⵠᐃⵠⵠⵠ === vVVVVUndefined173 ? ⵠΔ[v602[v2725[p1712][0]].ⵠⵠ][0].src : ⵠΔ[v602[v2725[p1712][0]].ⵠⵠ][0].ⵠᐃⵠⵠⵠ;
            document.getElementById("numb" + v2726).innerHTML = "" + v2725[p1712][1];
            v2726++;
          }
          for (; v2726 < 6; v2726++) {
            document.getElementById("inv" + v2726).style.display = "none";
            document.getElementById("numb" + v2726).innerHTML = "";
          }
        },
        ΔᐃⵠⵠⵠⲆⵠⵠⵠ: function (p1713) {
          const v2727 = {};
          for (let v2728 in p1713) {
            const v2729 = p1713[v2728];
            v2727[v2729.id] = v2729;
          }
          const v2730 = new vWindow.Set(p1713.map(function (p1714) {
            return p1714.id;
          }));
          const v2731 = [];
          const v2732 = [];
          for (const v2733 of p1713) {
            let v2734 = false;
            for (let v2735 = 0; v2735 < v2733.r.length; v2735++) {
              const v2736 = v2733.r[v2735][0];
              if (v2730.has(v2736)) {
                v2734 = vVV122;
                break;
              }
            }
            if (v2734) {
              v2732.push(v2733);
            } else {
              v2731.push(v2733);
            }
          }
          p1713 = v2731.concat(v2732);
          const v2737 = {};
          for (let v2738 in p1713) {
            const v2739 = p1713[v2738];
            v2737[v2739.id] = new vWindow.Set();
            for (let v2740 = 0; v2740 < v2739.r.length; v2740++) {
              const v2741 = v2739.r[v2740][0];
              if (v2727[v2741]) {
                v2737[v2739.id].add(v2741);
              }
            }
          }
          const v2742 = new vWindow.Set();
          const v2743 = new vWindow.Set();
          const v2744 = [];
          function f508(p1715) {
            if (v2743.has(p1715)) {
              return p1713;
            }
            if (!v2742.has(p1715)) {
              v2743.add(p1715);
              for (const v2745 of v2737[p1715]) {
                f508(v2745);
              }
              v2743.delete(p1715);
              v2742.add(p1715);
              v2744.push(v2727[p1715]);
            }
          }
          for (let v2746 in p1713) {
            const v2747 = p1713[v2746];
            if (!v2742.has(v2747.id)) {
              f508(v2747.id);
            }
          }
          return v2744;
        },
        select: function (p1716) {
          this.ΔⲆⵠᐃᐃⵠⲆ = p1716;
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("workcraft").style.display = "none";
          document.getElementById("firecraft").style.display = "none";
          document.getElementById("watercraft").style.display = "none";
          document.getElementById("wellcraft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "inline-block";
          document.getElementById("inv1").style.display = "none";
          document.getElementById("inv2").style.display = "none";
          document.getElementById("inv3").style.display = "none";
          document.getElementById("inv4").style.display = "none";
          document.getElementById("inv5").style.display = "none";
          document.getElementById("numb1").innerHTML = "";
          document.getElementById("numb2").innerHTML = "";
          document.getElementById("numb3").innerHTML = "";
          document.getElementById("numb4").innerHTML = "";
          document.getElementById("numb5").innerHTML = "";
          let v2748 = [];
          for (var v2749 = 0; v2749 < v722.length; v2749++) {
            var v2750 = v722[v2749];
            if (v2750 != null && p1716 === v2750.ⵠⲆΔ) {
              v2748.push(v722[v2749]);
            }
          }
          v2748 = this.ΔᐃⵠⵠⵠⲆⵠⵠⵠ(v2748);
          v2749 = 0;
          var v2751 = 0;
          for (; v2749 < v2748.length; v2749++) {
            const v2752 = v2748[v2749];
            this.ᐃⲆΔⲆᐃ[v2751] = v2748[v2749];
            v2751++;
            document.getElementById("img_" + v2751).style.display = "inline-block";
            document.getElementById("img_" + v2751).src = ⵠΔ[v602[v2752.ⵠⵠⲆΔ].ⵠⵠ][0].ⵠᐃⵠⵠⵠ === undefined ? ⵠΔ[v602[v2752.ⵠⵠⲆΔ].ⵠⵠ][0].src : ⵠΔ[v602[v2752.ⵠⵠⲆΔ].ⵠⵠ][0].ⵠᐃⵠⵠⵠ;
          }
          for (v2751++; v2751 < 91; v2751++) {
            document.getElementById("img_" + v2751).style.display = "none";
          }
        }
      },
      ⵠⲆΔᐃⲆᐃΔ: {
        id: document.getElementById("home_craft"),
        style: document.getElementById("home_craft").style,
        ⵠΔᐃ: function () {
          this.style.left = Math.floor(v411 - 285) + "px";
          this.style.top = Math.floor(v412 - 170) + "px";
        },
        ⵠᐃⲆᐃⵠ: function () {
          document.getElementById("home_craft").style.display = "none";
          v3057.ⵠⲆⵠᐃⲆ.open = vVVVVV1623;
        }
      },
      ᐃⲆⵠⲆᐃⲆⵠⵠᐃ: function () {
        this.open = !this.open;
        if (this.open) {
          document.getElementById("home_craft").style.display = "inline-block";
        } else {
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "none";
        }
      }
    };
    document.getElementById("quit").addEventListener("mouseup", this.ⵠⲆⵠᐃⲆ.ⵠⲆΔᐃⲆᐃΔ.ⵠᐃⲆᐃⵠ, false);
    document.getElementById("quitmenu").addEventListener("mouseup", this.ⵠⲆⵠᐃⲆ.list.ⵠᐃⲆᐃⵠ, vVVV1622);
    document.getElementById("backhome").addEventListener("mouseup", this.ⵠⲆⵠᐃⲆ.list.ⲆΔⵠⲆⲆΔⲆ, vVV1622);
    document.getElementById("hatcategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(2);
    }, vV16);
    document.getElementById("weaponcategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(1);
    }, false);
    document.getElementById("toolcategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(0);
    }, vVVV1622);
    document.getElementById("foodcategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(3);
    }, false);
    document.getElementById("placeablecategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(4);
    }, false);
    document.getElementById("constructioncategory").addEventListener("mouseup", function () {
      v3057.ⵠⲆⵠᐃⲆ.list.select(5);
    }, false);
    for (let v2753 = 1; v2753 <= 90; v2753++) {
      f507(v2753);
    }
    this.ΔᐃⵠΔΔ = {
      translate: {
        x: 0,
        y: 0
      },
      ⲆΔΔⲆΔⲆⲆ: {
        x: -1,
        y: -1
      },
      ⵠⲆⵠⲆ: [],
      focus: function (p1717) {
        var v2754 = this.translate.y + (v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length > 0 ? -120 : -50);
        if (p1717.x > this.translate.x && p1717.x < this.translate.x + 193 && p1717.y > v2754 && p1717.y < v2754 + 193) {
          this.ⲆΔΔⲆΔⲆⲆ.x = p1717.x - this.translate.x;
          this.ⲆΔΔⲆΔⲆⲆ.y = p1717.y - v2754;
        }
      }
    };
    this.ⵠᐃⵠⲆⲆ = {
      translate: {
        y: 0,
        x: 0
      },
      ⵠⵠ: ⵠΔ[388],
      ⵠΔΔ: document.createElement("canvas")
    };
    this.ⵠᐃⵠⲆⲆ.ⵠΔΔ.width = this.ⵠᐃⵠⲆⲆ.ⵠⵠ.width;
    this.ⵠᐃⵠⲆⲆ.ⵠΔΔ.height = this.ⵠᐃⵠⲆⲆ.ⵠⵠ.height;
    this.ⵠᐃⵠⲆⲆ.ᐃ = this.ⵠᐃⵠⲆⲆ.ⵠΔΔ.getContext("2d");
    this.ⲆᐃΔⲆ = {
      translate: {
        y: 0,
        x: 0
      },
      ⵠⵠ: ⵠΔ[377],
      ⲆⵠⲆᐃ: f330,
      y: 0
    };
    var v2755 = vWindow.document.createElement("div");
    this.ΔⲆΔⵠⵠᐃⵠ = function () {
      ΔΔⵠΔᐃ = document.getElementById("team_box");
      ΔΔⵠΔᐃ.innerHTML = "";
      ΔΔⵠΔᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[0]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div";
      for (var v2756 = 1; v2756 < v2860.ΔᐃⲆᐃⲆ.length; v2756++) {
        ΔΔⵠΔᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[v2756]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div></div>";
      }
      ΔΔⵠΔᐃ.innerHTML += "<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>";
      ΔΔⵠΔᐃ.style.display = "inline-block";
      document.getElementById("leave").addEventListener("click", v2862.ΔⲆΔⵠⵠᐃⵠ, false);
    };
    this.ⲆΔΔΔΔᐃΔⲆᐃ = function () {
      ΔΔⵠΔᐃ = document.getElementById("team_box");
      ΔΔⵠΔᐃ.innerHTML = "";
      ΔΔⵠΔᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[0]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div";
      for (var v2757 = 1; v2860.ΔᐃⲆᐃⲆ.length > v2757; v2757++) {
        ΔΔⵠΔᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[v2757]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div></div>";
      }
      ΔΔⵠΔᐃ.innerHTML += "</div>";
      ΔΔⵠΔᐃ.style.display = "inline-block";
    };
    this.ⲆⲆⵠⲆⵠⵠᐃᐃⲆ = function () {
      ΔΔⵠΔᐃ = document.getElementById("team_box");
      ΔΔⵠΔᐃ.innerHTML = "";
      ΔΔⵠΔᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[0]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div";
      for (var v2758 = 1; v2860.ΔᐃⲆᐃⲆ.length > v2758; v2758++) {
        ΔΔⵠΔᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2755.innerText = v2859.ⵠⲆⵠⲆ[v2860.ΔᐃⲆᐃⲆ[v2758]].ᐃΔⵠⵠΔ) && v2755.innerHTML) + "</div><div class=\"eject_member\" id=\"eject_member" + v2758 + "\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>";
      }
      if (v2860.ΔᐃᐃⲆⲆ.lock === 0) {
        ΔΔⵠΔᐃ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>";
      } else {
        ΔΔⵠΔᐃ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>";
      }
      document.getElementById("lock_team").addEventListener("click", v2862.ΔᐃⲆΔⵠⲆⲆᐃΔ, vVV164);
      ΔΔⵠΔᐃ.style.display = "inline-block";
      for (v2758 = 1; v2758 < v2860.ΔᐃⲆᐃⲆ.length; v2758++) {
        switch (v2758) {
          case 1:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(1);
            }, false);
            break;
          case 2:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(2);
            }, vVVV16222);
            break;
          case 3:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(3);
            }, false);
            break;
          case 4:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(4);
            }, vVV164);
            break;
          case 5:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(5);
            }, vVV162);
            break;
          case 6:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(6);
            }, false);
            break;
          case 7:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(7);
            }, false);
            break;
          case 8:
            document.getElementById("eject_member" + v2758).addEventListener("click", function () {
              v2862.ΔⲆⵠΔΔᐃΔ(8);
            }, false);
        }
      }
    };
    this.ΔⲆᐃΔⲆ = [];
    this.ΔⲆᐃΔⲆ[2] = {
      button: f438(60, 60, 0, ⵠΔ[721]),
      action: this.ΔⲆΔⵠⵠᐃⵠ
    };
    this.ΔⲆᐃΔⲆ[3] = {
      button: f438(60, 60, 0, ⵠΔ[721]),
      action: v2862.ᐃΔⲆⵠᐃΔᐃΔΔ
    };
    this.ΔⲆᐃΔⲆ[0] = {
      button: f438(60, 60, 0, ⵠΔ[722]),
      action: this.ⲆⲆⵠⲆⵠⵠᐃᐃⲆ
    };
    this.ΔⲆᐃΔⲆ[1] = {
      button: f438(60, 60, 0, ⵠΔ[726]),
      action: this.ⲆΔΔΔΔᐃΔⲆᐃ
    };
    this.ΔⲆᐃΔⲆ[4] = {
      button: f438(60, 60, 0, ⵠΔ[725]),
      action: function () {}
    };
    this.ⲆⲆΔⲆⲆ = -1;
    this.ᐃᐃⲆᐃΔᐃⲆ = f438(60, 60, 0, ⵠΔ[972]);
    this.ⵠⵠΔⲆᐃᐃⵠ = f438(60, 60, 0, ⵠΔ[973]);
    this.ⲆⵠⲆΔᐃΔΔ = f438(60, 60, 0, ⵠΔ[877]);
    this.ᐃⲆⲆⲆΔᐃⲆ = f438(60, 60, 0, ⵠΔ[876]);
    this.ⵠΔᐃᐃΔΔΔ = f438(60, 60, 0, ⵠΔ[877]);
    this.ΔΔⵠⵠΔᐃⵠ = f438(60, 60, 0, ⵠΔ[427]);
    this.ⲆⲆᐃⵠᐃⵠΔ = f438(60, 60, 0, ⵠΔ[426]);
    this.ⵠⲆⵠⵠΔΔⲆ = f438(60, 60, 0, ⵠΔ[408]);
    this.ⲆᐃⵠΔⲆⲆⵠ = f438(60, 60, 0, ⵠΔ[409]);
    this.ᐃⲆⲆΔᐃⵠⲆ = f438(60, 60, 0, ⵠΔ[529]);
    this.ⲆⲆΔⵠᐃⲆΔ = f438(60, 60, 0, ⵠΔ[1214]);
    this.ᐃⵠΔᐃᐃΔⲆ = f438(60, 60, 0, ⵠΔ[1484]);
    this.ⲆᐃΔᐃᐃΔⵠ = f438(60, 60, 0, ⵠΔ[1722]);
    this.ⵠⵠⵠΔⵠⵠⲆ = f438(60, 60, 0, ⵠΔ[1724]);
    this.ᐃᐃᐃΔΔⵠᐃ = f438(60, 60, 0, ⵠΔ[1726]);
    this.ΔⵠⲆⵠᐃⲆΔ = f438(60, 60, 0, ⵠΔ[1728]);
    this.ΔᐃⵠΔᐃⵠΔ = f438(60, 60, 0, ⵠΔ[1730]);
    this.ΔⲆᐃⵠⵠⲆⵠ = f438(60, 60, 0, ⵠΔ[1732]);
    this.ᐃΔⵠᐃΔⲆᐃ = f438(60, 60, 0, ⵠΔ[1734]);
    this.ⵠⵠᐃΔⵠⵠⲆ = f438(60, 60, 0, ⵠΔ[1736]);
    this.ΔⵠᐃΔⵠⵠΔ = f438(60, 60, 0, ⵠΔ[523]);
    this.ΔΔᐃᐃⵠⲆⲆ = f438(60, 60, 0, ⵠΔ[674]);
    this.ⲆΔⵠᐃⲆΔⵠ = f438(60, 60, 0, ⵠΔ[673]);
    this.ⲆⲆΔᐃⲆΔⵠ = f438(60, 60, 0, ⵠΔ[676]);
    this.ΔΔⲆⲆΔ = f438(120, 120, 0, ⵠΔ[242]);
    this.ΔΔⲆⲆΔ.info.translate.x = 10;
    this.ΔΔⲆⲆΔ.info.translate.y = 10;
    this.ᐃΔⵠ = [];
    this.ᐃΔⵠ[0] = f438(68, 68, 0, ⵠΔ[451], 3);
    this.ᐃΔⵠ[0].id = 0;
    this.ᐃΔⵠ[1] = f438(68, 68, 0, ⵠΔ[452], 3);
    this.ᐃΔⵠ[1].id = 1;
    this.ᐃΔⵠ[199] = f438(68, 68, 0, ⵠΔ[453], 3);
    this.ᐃΔⵠ[199].id = 199;
    this.ᐃΔⵠ[200] = f438(68, 68, 0, ⵠΔ[454], 3);
    this.ᐃΔⵠ[200].id = 200;
    this.ᐃΔⵠ[201] = f438(68, 68, 0, ⵠΔ[379], 3);
    this.ᐃΔⵠ[201].id = 201;
    this.ᐃΔⵠ[343] = f438(68, 68, 0, ⵠΔ[1483], 3);
    this.ᐃΔⵠ[343].id = 343;
    this.ᐃΔⵠ[202] = f438(68, 68, 0, ⵠΔ[380], 3);
    this.ᐃΔⵠ[202].id = 202;
    this.ᐃΔⵠ[203] = f438(68, 68, 0, ⵠΔ[381], 3);
    this.ᐃΔⵠ[203].id = 203;
    this.ᐃΔⵠ[3] = f438(68, 68, 0, ⵠΔ[382], 3);
    this.ᐃΔⵠ[3].id = 3;
    this.ᐃΔⵠ[4] = f438(68, 68, 0, ⵠΔ[455], 3);
    this.ᐃΔⵠ[4].id = 4;
    this.ᐃΔⵠ[5] = f438(68, 68, 0, ⵠΔ[456], 3);
    this.ᐃΔⵠ[5].id = 5;
    this.ᐃΔⵠ[103] = f438(68, 68, 0, ⵠΔ[1080], 3);
    this.ᐃΔⵠ[103].id = 103;
    this.ᐃΔⵠ[6] = f438(68, 68, 0, ⵠΔ[457], 3);
    this.ᐃΔⵠ[6].id = 6;
    this.ᐃΔⵠ[204] = f438(68, 68, 0, ⵠΔ[383], 3);
    this.ᐃΔⵠ[204].id = 204;
    this.ᐃΔⵠ[205] = f438(68, 68, 0, ⵠΔ[469], 3);
    this.ᐃΔⵠ[205].id = 205;
    this.ᐃΔⵠ[206] = f438(68, 68, 0, ⵠΔ[459], 3);
    this.ᐃΔⵠ[206].id = 206;
    this.ᐃΔⵠ[264] = f438(68, 68, 0, ⵠΔ[460], 3);
    this.ᐃΔⵠ[264].id = 264;
    this.ᐃΔⵠ[262] = f438(68, 68, 0, ⵠΔ[461], 3);
    this.ᐃΔⵠ[262].id = 262;
    this.ᐃΔⵠ[8] = f438(68, 68, 0, ⵠΔ[384], 3);
    this.ᐃΔⵠ[8].id = 8;
    this.ᐃΔⵠ[208] = f438(68, 68, 0, ⵠΔ[462], 3);
    this.ᐃΔⵠ[208].id = 208;
    this.ᐃΔⵠ[207] = f438(68, 68, 0, ⵠΔ[385], 3);
    this.ᐃΔⵠ[207].id = 207;
    this.ᐃΔⵠ[209] = f438(68, 68, 0, ⵠΔ[386], 3);
    this.ᐃΔⵠ[209].id = 209;
    this.ᐃΔⵠ[297] = f438(68, 68, 0, ⵠΔ[463], 3);
    this.ᐃΔⵠ[297].id = 297;
    this.ᐃΔⵠ[263] = f438(68, 68, 0, ⵠΔ[464], 3);
    this.ᐃΔⵠ[263].id = 263;
    this.ᐃΔⵠ[265] = f438(68, 68, 0, ⵠΔ[465], 3);
    this.ᐃΔⵠ[265].id = 265;
    this.ᐃΔⵠ[266] = f438(68, 68, 0, ⵠΔ[466], 3);
    this.ᐃΔⵠ[266].id = 266;
    this.ᐃΔⵠ[267] = f438(68, 68, 0, ⵠΔ[467], 3);
    this.ᐃΔⵠ[267].id = 267;
    this.ᐃΔⵠ[268] = f438(68, 68, 0, ⵠΔ[468], 3);
    this.ᐃΔⵠ[268].id = 268;
    this.ᐃΔⵠ[269] = f438(68, 68, 0, ⵠΔ[470], 3);
    this.ᐃΔⵠ[269].id = 269;
    this.ᐃΔⵠ[270] = f438(68, 68, 0, ⵠΔ[493], 3);
    this.ᐃΔⵠ[270].id = 270;
    this.ᐃΔⵠ[271] = f438(68, 68, 0, ⵠΔ[494], 3);
    this.ᐃΔⵠ[271].id = 271;
    this.ᐃΔⵠ[272] = f438(68, 68, 0, ⵠΔ[495], 3);
    this.ᐃΔⵠ[272].id = 272;
    this.ᐃΔⵠ[2] = f438(68, 68, 0, ⵠΔ[497], 3);
    this.ᐃΔⵠ[2].id = 2;
    this.ᐃΔⵠ[347] = f438(68, 68, 0, ⵠΔ[1491], 3);
    this.ᐃΔⵠ[347].id = 347;
    this.ᐃΔⵠ[276] = f438(68, 68, 0, ⵠΔ[505], 3);
    this.ᐃΔⵠ[276].id = 276;
    this.ᐃΔⵠ[353] = f438(68, 68, 0, ⵠΔ[1753], 3);
    this.ᐃΔⵠ[353].id = 353;
    this.ᐃΔⵠ[351] = f438(68, 68, 0, ⵠΔ[1749], 3);
    this.ᐃΔⵠ[351].id = 351;
    this.ᐃΔⵠ[332] = f438(68, 68, 0, ⵠΔ[1344], 3);
    this.ᐃΔⵠ[332].id = 332;
    this.ᐃΔⵠ[341] = f438(68, 68, 0, ⵠΔ[1346], 3);
    this.ᐃΔⵠ[341].id = 341;
    this.ᐃΔⵠ[342] = f438(68, 68, 0, ⵠΔ[1348], 3);
    this.ᐃΔⵠ[342].id = 342;
    this.ᐃΔⵠ[352] = f438(68, 68, 0, ⵠΔ[1464], 3);
    this.ᐃΔⵠ[352].id = 352;
    this.ᐃΔⵠ[344] = f438(68, 68, 0, ⵠΔ[1485], 3);
    this.ᐃΔⵠ[344].id = 344;
    this.ᐃΔⵠ[10] = f438(68, 68, 0, ⵠΔ[498], 3);
    this.ᐃΔⵠ[10].id = 10;
    this.ᐃΔⵠ[273] = f438(68, 68, 0, ⵠΔ[499], 3);
    this.ᐃΔⵠ[273].id = 273;
    this.ᐃΔⵠ[274] = f438(68, 68, 0, ⵠΔ[500], 3);
    this.ᐃΔⵠ[274].id = 274;
    this.ᐃΔⵠ[275] = f438(68, 68, 0, ⵠΔ[501], 3);
    this.ᐃΔⵠ[275].id = 275;
    this.ᐃΔⵠ[11] = f438(68, 68, 0, ⵠΔ[502], 3);
    this.ᐃΔⵠ[11].id = 11;
    this.ᐃΔⵠ[12] = f438(68, 68, 0, ⵠΔ[514], 3);
    this.ᐃΔⵠ[12].id = 12;
    this.ᐃΔⵠ[13] = f438(68, 68, 0, ⵠΔ[508], 3);
    this.ᐃΔⵠ[13].id = 13;
    this.ᐃΔⵠ[14] = f438(68, 68, 0, ⵠΔ[511], 3);
    this.ᐃΔⵠ[14].id = 14;
    this.ᐃΔⵠ[15] = f438(68, 68, 0, ⵠΔ[517], 3);
    this.ᐃΔⵠ[15].id = 15;
    this.ᐃΔⵠ[16] = f438(68, 68, 0, ⵠΔ[1124], 3);
    this.ᐃΔⵠ[16].id = 16;
    this.ᐃΔⵠ[210] = f438(68, 68, 0, ⵠΔ[521], 3);
    this.ᐃΔⵠ[210].id = 210;
    this.ᐃΔⵠ[32] = f438(68, 68, 0, ⵠΔ[533], 3);
    this.ᐃΔⵠ[32].id = 32;
    this.ᐃΔⵠ[33] = f438(68, 68, 0, ⵠΔ[536], 3);
    this.ᐃΔⵠ[33].id = 33;
    this.ᐃΔⵠ[160] = f438(68, 68, 0, ⵠΔ[1620], 3);
    this.ᐃΔⵠ[160].id = 160;
    this.ᐃΔⵠ[161] = f438(68, 68, 0, ⵠΔ[1623], 3);
    this.ᐃΔⵠ[161].id = 161;
    this.ᐃΔⵠ[153] = f438(68, 68, 0, ⵠΔ[1467], 3);
    this.ᐃΔⵠ[153].id = 153;
    this.ᐃΔⵠ[154] = f438(68, 68, 0, ⵠΔ[1470], 3);
    this.ᐃΔⵠ[154].id = 154;
    this.ᐃΔⵠ[183] = f438(68, 68, 0, ⵠΔ[1495], 3);
    this.ᐃΔⵠ[183].id = 183;
    this.ᐃΔⵠ[119] = f438(68, 68, 0, ⵠΔ[763], 3);
    this.ᐃΔⵠ[119].id = 119;
    this.ᐃΔⵠ[135] = f438(68, 68, 0, ⵠΔ[1631], 3);
    this.ᐃΔⵠ[135].id = 135;
    this.ᐃΔⵠ[184] = f438(68, 68, 0, ⵠΔ[1498], 3);
    this.ᐃΔⵠ[184].id = 184;
    this.ᐃΔⵠ[120] = f438(68, 68, 0, ⵠΔ[766], 3);
    this.ᐃΔⵠ[120].id = 120;
    this.ᐃΔⵠ[136] = f438(68, 68, 0, ⵠΔ[1634], 3);
    this.ᐃΔⵠ[136].id = 136;
    this.ᐃΔⵠ[185] = f438(68, 68, 0, ⵠΔ[1501], 3);
    this.ᐃΔⵠ[185].id = 185;
    this.ᐃΔⵠ[121] = f438(68, 68, 0, ⵠΔ[769], 3);
    this.ᐃΔⵠ[121].id = 121;
    this.ᐃΔⵠ[137] = f438(68, 68, 0, ⵠΔ[1637], 3);
    this.ᐃΔⵠ[137].id = 137;
    this.ᐃΔⵠ[186] = f438(68, 68, 0, ⵠΔ[1504], 3);
    this.ᐃΔⵠ[186].id = 186;
    this.ᐃΔⵠ[122] = f438(68, 68, 0, ⵠΔ[772], 3);
    this.ᐃΔⵠ[122].id = 122;
    this.ᐃΔⵠ[138] = f438(68, 68, 0, ⵠΔ[1640], 3);
    this.ᐃΔⵠ[138].id = 138;
    this.ᐃΔⵠ[187] = f438(68, 68, 0, ⵠΔ[1507], 3);
    this.ᐃΔⵠ[187].id = 187;
    this.ᐃΔⵠ[123] = f438(68, 68, 0, ⵠΔ[775], 3);
    this.ᐃΔⵠ[123].id = 123;
    this.ᐃΔⵠ[139] = f438(68, 68, 0, ⵠΔ[1643], 3);
    this.ᐃΔⵠ[139].id = 139;
    this.ᐃΔⵠ[188] = f438(68, 68, 0, ⵠΔ[1510], 3);
    this.ᐃΔⵠ[188].id = 188;
    this.ᐃΔⵠ[124] = f438(68, 68, 0, ⵠΔ[778], 3);
    this.ᐃΔⵠ[124].id = 124;
    this.ᐃΔⵠ[140] = f438(68, 68, 0, ⵠΔ[1646], 3);
    this.ᐃΔⵠ[140].id = 140;
    this.ᐃΔⵠ[189] = f438(68, 68, 0, ⵠΔ[1513], 3);
    this.ᐃΔⵠ[189].id = 189;
    this.ᐃΔⵠ[125] = f438(68, 68, 0, ⵠΔ[781], 3);
    this.ᐃΔⵠ[125].id = 125;
    this.ᐃΔⵠ[167] = f438(68, 68, 0, ⵠΔ[1676], 3);
    this.ᐃΔⵠ[167].id = 167;
    this.ᐃΔⵠ[168] = f438(68, 68, 0, ⵠΔ[1679], 3);
    this.ᐃΔⵠ[168].id = 168;
    this.ᐃΔⵠ[169] = f438(68, 68, 0, ⵠΔ[1682], 3);
    this.ᐃΔⵠ[169].id = 169;
    this.ᐃΔⵠ[170] = f438(68, 68, 0, ⵠΔ[1685], 3);
    this.ᐃΔⵠ[170].id = 170;
    this.ᐃΔⵠ[171] = f438(68, 68, 0, ⵠΔ[1688], 3);
    this.ᐃΔⵠ[171].id = 171;
    this.ᐃΔⵠ[172] = f438(68, 68, 0, ⵠΔ[1691], 3);
    this.ᐃΔⵠ[172].id = 172;
    this.ᐃΔⵠ[104] = f438(68, 68, 0, ⵠΔ[1077], 3);
    this.ᐃΔⵠ[104].id = 104;
    this.ᐃΔⵠ[34] = f438(68, 68, 0, ⵠΔ[542], 3);
    this.ᐃΔⵠ[34].id = 34;
    this.ᐃΔⵠ[35] = f438(68, 68, 0, ⵠΔ[545], 3);
    this.ᐃΔⵠ[35].id = 35;
    this.ᐃΔⵠ[36] = f438(68, 68, 0, ⵠΔ[548], 3);
    this.ᐃΔⵠ[36].id = 36;
    this.ᐃΔⵠ[46] = f438(68, 68, 0, ⵠΔ[578], 3);
    this.ᐃΔⵠ[46].id = 46;
    this.ᐃΔⵠ[211] = f438(68, 68, 0, ⵠΔ[581], 3);
    this.ᐃΔⵠ[211].id = 211;
    this.ᐃΔⵠ[47] = f438(68, 68, 0, ⵠΔ[496], 3);
    this.ᐃΔⵠ[47].id = 47;
    this.ᐃΔⵠ[212] = f438(68, 68, 0, ⵠΔ[584], 3);
    this.ᐃΔⵠ[212].id = 212;
    this.ᐃΔⵠ[48] = f438(68, 68, 0, ⵠΔ[595], 3);
    this.ᐃΔⵠ[48].id = 48;
    this.ᐃΔⵠ[9] = f438(68, 68, 0, ⵠΔ[1111], 3);
    this.ᐃΔⵠ[9].id = 9;
    this.ᐃΔⵠ[49] = f438(68, 68, 0, ⵠΔ[597], 3);
    this.ᐃΔⵠ[49].id = 49;
    this.ᐃΔⵠ[50] = f438(68, 68, 0, ⵠΔ[1294], 3);
    this.ᐃΔⵠ[50].id = 50;
    this.ᐃΔⵠ[60] = f438(68, 68, 0, ⵠΔ[612], 3);
    this.ᐃΔⵠ[60].id = 60;
    this.ᐃΔⵠ[62] = f438(68, 68, 0, ⵠΔ[617], 3);
    this.ᐃΔⵠ[62].id = 62;
    this.ᐃΔⵠ[63] = f438(68, 68, 0, ⵠΔ[620], 3);
    this.ᐃΔⵠ[63].id = 63;
    this.ᐃΔⵠ[64] = f438(68, 68, 0, ⵠΔ[623], 3);
    this.ᐃΔⵠ[64].id = 64;
    this.ᐃΔⵠ[65] = f438(68, 68, 0, ⵠΔ[626], 3);
    this.ᐃΔⵠ[65].id = 65;
    this.ᐃΔⵠ[66] = f438(68, 68, 0, ⵠΔ[629], 3);
    this.ᐃΔⵠ[66].id = 66;
    this.ᐃΔⵠ[213] = f438(68, 68, 0, ⵠΔ[632], 3);
    this.ᐃΔⵠ[213].id = 213;
    this.ᐃΔⵠ[214] = f438(68, 68, 0, ⵠΔ[635], 3);
    this.ᐃΔⵠ[214].id = 214;
    this.ᐃΔⵠ[215] = f438(68, 68, 0, ⵠΔ[639], 3);
    this.ᐃΔⵠ[215].id = 215;
    this.ᐃΔⵠ[67] = f438(68, 68, 0, ⵠΔ[642], 3);
    this.ᐃΔⵠ[67].id = 67;
    this.ᐃΔⵠ[239] = f438(68, 68, 0, ⵠΔ[644], 3);
    this.ᐃΔⵠ[239].id = 239;
    this.ᐃΔⵠ[350] = f438(68, 68, 0, ⵠΔ[1625], 3);
    this.ᐃΔⵠ[350].id = 350;
    this.ᐃΔⵠ[240] = f438(68, 68, 0, ⵠΔ[652], 3);
    this.ᐃΔⵠ[240].id = 240;
    this.ᐃΔⵠ[241] = f438(68, 68, 0, ⵠΔ[658], 3);
    this.ᐃΔⵠ[241].id = 241;
    this.ᐃΔⵠ[242] = f438(68, 68, 0, ⵠΔ[660], 3);
    this.ᐃΔⵠ[242].id = 242;
    this.ᐃΔⵠ[243] = f438(68, 68, 0, ⵠΔ[662], 3);
    this.ᐃΔⵠ[243].id = 243;
    this.ᐃΔⵠ[244] = f438(68, 68, 0, ⵠΔ[669], 3);
    this.ᐃΔⵠ[244].id = 244;
    this.ᐃΔⵠ[260] = f438(68, 68, 0, ⵠΔ[672], 3);
    this.ᐃΔⵠ[260].id = 260;
    this.ᐃΔⵠ[261] = f438(68, 68, 0, ⵠΔ[719], 3);
    this.ᐃΔⵠ[261].id = 261;
    this.ᐃΔⵠ[70] = f438(68, 68, 0, ⵠΔ[681], 3);
    this.ᐃΔⵠ[70].id = 70;
    this.ᐃΔⵠ[72] = f438(68, 68, 0, ⵠΔ[690], 3);
    this.ᐃΔⵠ[72].id = 72;
    this.ᐃΔⵠ[216] = f438(68, 68, 0, ⵠΔ[825], 3);
    this.ᐃΔⵠ[216].id = 216;
    this.ᐃΔⵠ[331] = f438(68, 68, 0, ⵠΔ[1628], 3);
    this.ᐃΔⵠ[331].id = 331;
    this.ᐃΔⵠ[333] = f438(68, 68, 0, ⵠΔ[1337], 3);
    this.ᐃΔⵠ[333].id = 333;
    this.ᐃΔⵠ[334] = f438(68, 68, 0, ⵠΔ[1340], 3);
    this.ᐃΔⵠ[334].id = 334;
    this.ᐃΔⵠ[340] = f438(68, 68, 0, ⵠΔ[1426], 3);
    this.ᐃΔⵠ[340].id = 340;
    this.ᐃΔⵠ[162] = f438(68, 68, 0, ⵠΔ[1355], 3);
    this.ᐃΔⵠ[162].id = 162;
    this.ᐃΔⵠ[335] = f438(68, 68, 0, ⵠΔ[1358], 3);
    this.ᐃΔⵠ[335].id = 335;
    this.ᐃΔⵠ[337] = f438(68, 68, 0, ⵠΔ[1389], 3);
    this.ᐃΔⵠ[337].id = 337;
    this.ᐃΔⵠ[349] = f438(68, 68, 0, ⵠΔ[1616], 3);
    this.ᐃΔⵠ[349].id = 349;
    this.ᐃΔⵠ[338] = f438(68, 68, 0, ⵠΔ[1404], 3);
    this.ᐃΔⵠ[338].id = 338;
    this.ᐃΔⵠ[339] = f438(68, 68, 0, ⵠΔ[1419], 3);
    this.ᐃΔⵠ[339].id = 339;
    this.ᐃΔⵠ[355] = f438(68, 68, 0, ⵠΔ[1440], 3);
    this.ᐃΔⵠ[355].id = 355;
    this.ᐃΔⵠ[354] = f438(68, 68, 0, ⵠΔ[1458], 3);
    this.ᐃΔⵠ[354].id = 354;
    this.ᐃΔⵠ[358] = f438(68, 68, 0, ⵠΔ[1329], 3);
    this.ᐃΔⵠ[358].id = 358;
    this.ᐃΔⵠ[336] = f438(68, 68, 0, ⵠΔ[1545], 3);
    this.ᐃΔⵠ[336].id = 336;
    this.ᐃΔⵠ[217] = f438(68, 68, 0, ⵠΔ[829], 3);
    this.ᐃΔⵠ[217].id = 217;
    this.ᐃΔⵠ[218] = f438(68, 68, 0, ⵠΔ[834], 3);
    this.ᐃΔⵠ[218].id = 218;
    this.ᐃΔⵠ[221] = f438(68, 68, 0, ⵠΔ[833], 3);
    this.ᐃΔⵠ[221].id = 221;
    this.ᐃΔⵠ[82] = f438(68, 68, 0, ⵠΔ[836], 3);
    this.ᐃΔⵠ[82].id = 82;
    this.ᐃΔⵠ[86] = f438(68, 68, 0, ⵠΔ[920], 3);
    this.ᐃΔⵠ[86].id = 86;
    this.ᐃΔⵠ[87] = f438(68, 68, 0, ⵠΔ[922], 3);
    this.ᐃΔⵠ[87].id = 87;
    this.ᐃΔⵠ[88] = f438(68, 68, 0, ⵠΔ[926], 3);
    this.ᐃΔⵠ[88].id = 88;
    this.ᐃΔⵠ[101] = f438(68, 68, 0, ⵠΔ[959], 3);
    this.ᐃΔⵠ[101].id = 101;
    this.ᐃΔⵠ[222] = f438(68, 68, 0, ⵠΔ[844], 3);
    this.ᐃΔⵠ[222].id = 222;
    this.ᐃΔⵠ[223] = f438(68, 68, 0, ⵠΔ[847], 3);
    this.ᐃΔⵠ[223].id = 223;
    this.ᐃΔⵠ[224] = f438(68, 68, 0, ⵠΔ[849], 3);
    this.ᐃΔⵠ[224].id = 224;
    this.ᐃΔⵠ[225] = f438(68, 68, 0, ⵠΔ[852], 3);
    this.ᐃΔⵠ[225].id = 225;
    this.ᐃΔⵠ[226] = f438(68, 68, 0, ⵠΔ[855], 3);
    this.ᐃΔⵠ[226].id = 226;
    this.ᐃΔⵠ[227] = f438(68, 68, 0, ⵠΔ[859], 3);
    this.ᐃΔⵠ[227].id = 227;
    this.ᐃΔⵠ[228] = f438(68, 68, 0, ⵠΔ[864], 3);
    this.ᐃΔⵠ[228].id = 228;
    this.ᐃΔⵠ[83] = f438(68, 68, 0, ⵠΔ[867], 3);
    this.ᐃΔⵠ[83].id = 83;
    this.ᐃΔⵠ[84] = f438(68, 68, 0, ⵠΔ[870], 3);
    this.ᐃΔⵠ[84].id = 84;
    this.ᐃΔⵠ[85] = f438(68, 68, 0, ⵠΔ[872], 3);
    this.ᐃΔⵠ[85].id = 85;
    this.ᐃΔⵠ[229] = f438(68, 68, 0, ⵠΔ[880], 3);
    this.ᐃΔⵠ[229].id = 229;
    this.ᐃΔⵠ[236] = f438(68, 68, 0, ⵠΔ[908], 3);
    this.ᐃΔⵠ[236].id = 236;
    this.ᐃΔⵠ[230] = f438(68, 68, 0, ⵠΔ[882], 3);
    this.ᐃΔⵠ[230].id = 230;
    this.ᐃΔⵠ[231] = f438(68, 68, 0, ⵠΔ[884], 3);
    this.ᐃΔⵠ[231].id = 231;
    this.ᐃΔⵠ[232] = f438(68, 68, 0, ⵠΔ[894], 3);
    this.ᐃΔⵠ[232].id = 232;
    this.ᐃΔⵠ[233] = f438(68, 68, 0, ⵠΔ[901], 3);
    this.ᐃΔⵠ[233].id = 233;
    this.ᐃΔⵠ[234] = f438(68, 68, 0, ⵠΔ[902], 3);
    this.ᐃΔⵠ[234].id = 234;
    this.ᐃΔⵠ[235] = f438(68, 68, 0, ⵠΔ[905], 3);
    this.ᐃΔⵠ[235].id = 235;
    this.ᐃΔⵠ[237] = f438(68, 68, 0, ⵠΔ[968], 3);
    this.ᐃΔⵠ[237].id = 237;
    this.ᐃΔⵠ[238] = f438(68, 68, 0, ⵠΔ[980], 3);
    this.ᐃΔⵠ[238].id = 238;
    this.ᐃΔⵠ[105] = f438(68, 68, 0, ⵠΔ[982], 3);
    this.ᐃΔⵠ[105].id = 105;
    this.ᐃΔⵠ[108] = f438(68, 68, 0, ⵠΔ[730], 3);
    this.ᐃΔⵠ[108].id = 108;
    this.ᐃΔⵠ[287] = f438(68, 68, 0, ⵠΔ[809], 3);
    this.ᐃΔⵠ[287].id = 287;
    this.ᐃΔⵠ[286] = f438(68, 68, 0, ⵠΔ[1001], 3);
    this.ᐃΔⵠ[286].id = 286;
    this.ᐃΔⵠ[289] = f438(68, 68, 0, ⵠΔ[810], 3);
    this.ᐃΔⵠ[289].id = 289;
    this.ᐃΔⵠ[288] = f438(68, 68, 0, ⵠΔ[1003], 3);
    this.ᐃΔⵠ[288].id = 288;
    this.ᐃΔⵠ[150] = f438(68, 68, 0, ⵠΔ[1006], 3);
    this.ᐃΔⵠ[150].id = 150;
    this.ᐃΔⵠ[277] = f438(68, 68, 0, ⵠΔ[1008], 3);
    this.ᐃΔⵠ[277].id = 277;
    this.ᐃΔⵠ[278] = f438(68, 68, 0, ⵠΔ[1012], 3);
    this.ᐃΔⵠ[278].id = 278;
    this.ᐃΔⵠ[151] = f438(68, 68, 0, ⵠΔ[1010], 3);
    this.ᐃΔⵠ[151].id = 151;
    this.ᐃΔⵠ[279] = f438(68, 68, 0, ⵠΔ[1015], 3);
    this.ᐃΔⵠ[279].id = 279;
    this.ᐃΔⵠ[152] = f438(68, 68, 0, ⵠΔ[1014], 3);
    this.ᐃΔⵠ[152].id = 152;
    this.ᐃΔⵠ[156] = f438(68, 68, 0, ⵠΔ[1018], 3);
    this.ᐃΔⵠ[156].id = 156;
    this.ᐃΔⵠ[157] = f438(68, 68, 0, ⵠΔ[1022], 3);
    this.ᐃΔⵠ[157].id = 157;
    this.ᐃΔⵠ[280] = f438(68, 68, 0, ⵠΔ[1023], 3);
    this.ᐃΔⵠ[280].id = 280;
    this.ᐃΔⵠ[281] = f438(68, 68, 0, ⵠΔ[1024], 3);
    this.ᐃΔⵠ[281].id = 281;
    this.ᐃΔⵠ[159] = f438(68, 68, 0, ⵠΔ[1027], 3);
    this.ᐃΔⵠ[159].id = 159;
    this.ᐃΔⵠ[158] = f438(68, 68, 0, ⵠΔ[1030], 3);
    this.ᐃΔⵠ[158].id = 158;
    this.ᐃΔⵠ[282] = f438(68, 68, 0, ⵠΔ[1035], 3);
    this.ᐃΔⵠ[282].id = 282;
    this.ᐃΔⵠ[283] = f438(68, 68, 0, ⵠΔ[1036], 3);
    this.ᐃΔⵠ[283].id = 283;
    this.ᐃΔⵠ[284] = f438(68, 68, 0, ⵠΔ[1039], 3);
    this.ᐃΔⵠ[284].id = 284;
    this.ᐃΔⵠ[285] = f438(68, 68, 0, ⵠΔ[1050], 3);
    this.ᐃΔⵠ[285].id = 285;
    this.ᐃΔⵠ[290] = f438(68, 68, 0, ⵠΔ[1059], 3);
    this.ᐃΔⵠ[290].id = 290;
    this.ᐃΔⵠ[291] = f438(68, 68, 0, ⵠΔ[1064], 3);
    this.ᐃΔⵠ[291].id = 291;
    this.ᐃΔⵠ[292] = f438(68, 68, 0, ⵠΔ[1093], 3);
    this.ᐃΔⵠ[292].id = 292;
    this.ᐃΔⵠ[293] = f438(68, 68, 0, ⵠΔ[1085], 3);
    this.ᐃΔⵠ[293].id = 293;
    this.ᐃΔⵠ[294] = f438(68, 68, 0, ⵠΔ[1090], 3);
    this.ᐃΔⵠ[294].id = 294;
    this.ᐃΔⵠ[295] = f438(68, 68, 0, ⵠΔ[1096], 3);
    this.ᐃΔⵠ[295].id = 295;
    this.ᐃΔⵠ[296] = f438(68, 68, 0, ⵠΔ[1100], 3);
    this.ᐃΔⵠ[296].id = 296;
    this.ᐃΔⵠ[316] = f438(68, 68, 0, ⵠΔ[1237], 3);
    this.ᐃΔⵠ[316].id = 316;
    this.ᐃΔⵠ[317] = f438(68, 68, 0, ⵠΔ[1250], 3);
    this.ᐃΔⵠ[317].id = 317;
    this.ᐃΔⵠ[314] = f438(68, 68, 0, ⵠΔ[1227], 3);
    this.ᐃΔⵠ[314].id = 314;
    this.ᐃΔⵠ[315] = f438(68, 68, 0, ⵠΔ[1232], 3);
    this.ᐃΔⵠ[315].id = 315;
    this.ᐃΔⵠ[318] = f438(68, 68, 0, ⵠΔ[1244], 3);
    this.ᐃΔⵠ[318].id = 318;
    this.ᐃΔⵠ[319] = f438(68, 68, 0, ⵠΔ[1249], 3);
    this.ᐃΔⵠ[319].id = 319;
    this.ᐃΔⵠ[320] = f438(68, 68, 0, ⵠΔ[1259], 3);
    this.ᐃΔⵠ[320].id = 320;
    this.ᐃΔⵠ[321] = f438(68, 68, 0, ⵠΔ[1264], 3);
    this.ᐃΔⵠ[321].id = 321;
    this.ᐃΔⵠ[68] = f438(68, 68, 0, ⵠΔ[1157], 3);
    this.ᐃΔⵠ[68].id = 68;
    this.ᐃΔⵠ[69] = f438(68, 68, 0, ⵠΔ[1159], 3);
    this.ᐃΔⵠ[69].id = 69;
    this.ᐃΔⵠ[12] = f438(68, 68, 0, ⵠΔ[514], 3);
    this.ᐃΔⵠ[12].id = 12;
    this.ᐃΔⵠ[16] = f438(68, 68, 0, ⵠΔ[1124], 3);
    this.ᐃΔⵠ[16].id = 16;
    this.ᐃΔⵠ[298] = f438(68, 68, 0, ⵠΔ[1174], 3);
    this.ᐃΔⵠ[298].id = 298;
    this.ᐃΔⵠ[18] = f438(68, 68, 0, ⵠΔ[1175], 3);
    this.ᐃΔⵠ[18].id = 18;
    this.ᐃΔⵠ[299] = f438(68, 68, 0, ⵠΔ[1182], 3);
    this.ᐃΔⵠ[299].id = 299;
    this.ᐃΔⵠ[300] = f438(68, 68, 0, ⵠΔ[1184], 3);
    this.ᐃΔⵠ[300].id = 300;
    this.ᐃΔⵠ[107] = f438(68, 68, 0, ⵠΔ[1187], 3);
    this.ᐃΔⵠ[107].id = 107;
    this.ᐃΔⵠ[303] = f438(68, 68, 0, ⵠΔ[1120], 3);
    this.ᐃΔⵠ[303].id = 303;
    this.ᐃΔⵠ[301] = f438(68, 68, 0, ⵠΔ[1112], 3);
    this.ᐃΔⵠ[301].id = 301;
    this.ᐃΔⵠ[302] = f438(68, 68, 0, ⵠΔ[1117], 3);
    this.ᐃΔⵠ[302].id = 302;
    this.ⲆΔᐃᐃΔ = [];
    for (v2714 = 0; v2714 < 1000; v2714++) {
      this.ⲆΔᐃᐃΔ[v2714] = f438(0, 0, 0, ⵠΔ[477]);
    }
    this.Ⲇⵠⵠ = [];
    this.Ⲇⵠⵠ[0] = f438(60, 60, 0, ⵠΔ[371], 3);
    this.Ⲇⵠⵠ[0].id = 0;
    this.Ⲇⵠⵠ[1] = f438(60, 60, 0, ⵠΔ[423], 3);
    this.Ⲇⵠⵠ[1].id = 1;
    this.Ⲇⵠⵠ[199] = f438(60, 60, 0, ⵠΔ[426], 3);
    this.Ⲇⵠⵠ[199].id = 199;
    this.Ⲇⵠⵠ[199].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[199].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[200] = f438(60, 60, 0, ⵠΔ[427], 3);
    this.Ⲇⵠⵠ[200].id = 200;
    this.Ⲇⵠⵠ[200].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[200].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[201] = f438(60, 60, 0, ⵠΔ[387], 3);
    this.Ⲇⵠⵠ[201].id = 201;
    this.Ⲇⵠⵠ[343] = f438(60, 60, 0, ⵠΔ[1482], 3);
    this.Ⲇⵠⵠ[343].id = 343;
    this.Ⲇⵠⵠ[202] = f438(60, 60, 0, ⵠΔ[408], 3);
    this.Ⲇⵠⵠ[202].id = 202;
    this.Ⲇⵠⵠ[202].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[202].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[203] = f438(60, 60, 0, ⵠΔ[409], 3);
    this.Ⲇⵠⵠ[203].id = 203;
    this.Ⲇⵠⵠ[203].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[203].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[3] = f438(60, 60, 0, ⵠΔ[368], 3);
    this.Ⲇⵠⵠ[3].id = 3;
    this.Ⲇⵠⵠ[4] = f438(60, 60, 0, ⵠΔ[407], 3);
    this.Ⲇⵠⵠ[4].id = 4;
    this.Ⲇⵠⵠ[5] = f438(60, 60, 0, ⵠΔ[402], 3);
    this.Ⲇⵠⵠ[5].id = 5;
    this.Ⲇⵠⵠ[103] = f438(60, 60, 0, ⵠΔ[1078], 3);
    this.Ⲇⵠⵠ[103].id = 103;
    this.Ⲇⵠⵠ[6] = f438(60, 60, 0, ⵠΔ[403], 3);
    this.Ⲇⵠⵠ[6].id = 6;
    this.Ⲇⵠⵠ[204] = f438(60, 60, 0, ⵠΔ[420], 3);
    this.Ⲇⵠⵠ[204].id = 204;
    this.Ⲇⵠⵠ[205] = f438(60, 60, 0, ⵠΔ[421], 3);
    this.Ⲇⵠⵠ[205].id = 205;
    this.Ⲇⵠⵠ[206] = f438(60, 60, 0, ⵠΔ[422], 3);
    this.Ⲇⵠⵠ[206].id = 206;
    this.Ⲇⵠⵠ[264] = f438(60, 60, 0, ⵠΔ[428], 3);
    this.Ⲇⵠⵠ[264].id = 264;
    this.Ⲇⵠⵠ[262] = f438(60, 60, 0, ⵠΔ[430], 3);
    this.Ⲇⵠⵠ[262].id = 262;
    this.Ⲇⵠⵠ[8] = f438(60, 60, 0, ⵠΔ[424], 3);
    this.Ⲇⵠⵠ[8].id = 8;
    this.Ⲇⵠⵠ[208] = f438(60, 60, 0, ⵠΔ[434], 3);
    this.Ⲇⵠⵠ[208].id = 208;
    this.Ⲇⵠⵠ[207] = f438(60, 60, 0, ⵠΔ[411], 3);
    this.Ⲇⵠⵠ[207].id = 207;
    this.Ⲇⵠⵠ[209] = f438(60, 60, 0, ⵠΔ[439], 3);
    this.Ⲇⵠⵠ[209].id = 209;
    this.Ⲇⵠⵠ[297] = f438(60, 60, 0, ⵠΔ[414], 3);
    this.Ⲇⵠⵠ[297].id = 297;
    this.Ⲇⵠⵠ[263] = f438(60, 60, 0, ⵠΔ[416], 3);
    this.Ⲇⵠⵠ[263].id = 263;
    this.Ⲇⵠⵠ[263].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[263].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[265] = f438(60, 60, 0, ⵠΔ[440], 3);
    this.Ⲇⵠⵠ[265].id = 265;
    this.Ⲇⵠⵠ[266] = f438(60, 60, 0, ⵠΔ[441], 3);
    this.Ⲇⵠⵠ[266].id = 266;
    this.Ⲇⵠⵠ[267] = f438(60, 60, 0, ⵠΔ[442], 3);
    this.Ⲇⵠⵠ[267].id = 267;
    this.Ⲇⵠⵠ[268] = f438(60, 60, 0, ⵠΔ[446], 3);
    this.Ⲇⵠⵠ[268].id = 268;
    this.Ⲇⵠⵠ[269] = f438(60, 60, 0, ⵠΔ[448], 3);
    this.Ⲇⵠⵠ[269].id = 269;
    this.Ⲇⵠⵠ[270] = f438(60, 60, 0, ⵠΔ[472], 3);
    this.Ⲇⵠⵠ[270].id = 270;
    this.Ⲇⵠⵠ[271] = f438(60, 60, 0, ⵠΔ[473], 3);
    this.Ⲇⵠⵠ[271].id = 271;
    this.Ⲇⵠⵠ[272] = f438(60, 60, 0, ⵠΔ[475], 3);
    this.Ⲇⵠⵠ[272].id = 272;
    this.Ⲇⵠⵠ[47] = f438(60, 60, 0, ⵠΔ[503], 3);
    this.Ⲇⵠⵠ[47].id = 47;
    this.Ⲇⵠⵠ[10] = f438(60, 60, 0, ⵠΔ[480], 3);
    this.Ⲇⵠⵠ[10].id = 10;
    this.Ⲇⵠⵠ[273] = f438(60, 60, 0, ⵠΔ[483], 3);
    this.Ⲇⵠⵠ[273].id = 273;
    this.Ⲇⵠⵠ[274] = f438(60, 60, 0, ⵠΔ[486], 3);
    this.Ⲇⵠⵠ[274].id = 274;
    this.Ⲇⵠⵠ[275] = f438(60, 60, 0, ⵠΔ[489], 3);
    this.Ⲇⵠⵠ[275].id = 275;
    this.Ⲇⵠⵠ[2] = f438(60, 60, 0, ⵠΔ[479], 3);
    this.Ⲇⵠⵠ[2].id = 2;
    this.Ⲇⵠⵠ[2].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[2].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[347] = f438(60, 60, 0, ⵠΔ[1490], 3);
    this.Ⲇⵠⵠ[347].id = 347;
    this.Ⲇⵠⵠ[347].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[347].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[276] = f438(60, 60, 0, ⵠΔ[504], 3);
    this.Ⲇⵠⵠ[276].id = 276;
    this.Ⲇⵠⵠ[276].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[276].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[353] = f438(60, 60, 0, ⵠΔ[1754], 3);
    this.Ⲇⵠⵠ[353].id = 353;
    this.Ⲇⵠⵠ[353].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[353].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[351] = f438(60, 60, 0, ⵠΔ[1750], 3);
    this.Ⲇⵠⵠ[351].id = 351;
    this.Ⲇⵠⵠ[351].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[351].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[332] = f438(60, 60, 0, ⵠΔ[1343], 3);
    this.Ⲇⵠⵠ[332].id = 332;
    this.Ⲇⵠⵠ[341] = f438(60, 60, 0, ⵠΔ[1345], 3);
    this.Ⲇⵠⵠ[341].id = 341;
    this.Ⲇⵠⵠ[342] = f438(60, 60, 0, ⵠΔ[1347], 3);
    this.Ⲇⵠⵠ[342].id = 342;
    this.Ⲇⵠⵠ[352] = f438(60, 60, 0, ⵠΔ[1463], 3);
    this.Ⲇⵠⵠ[352].id = 352;
    this.Ⲇⵠⵠ[344] = f438(60, 60, 0, ⵠΔ[1484], 3);
    this.Ⲇⵠⵠ[344].id = 344;
    this.Ⲇⵠⵠ[10] = f438(60, 60, 0, ⵠΔ[480], 3);
    this.Ⲇⵠⵠ[10].id = 10;
    this.Ⲇⵠⵠ[11] = f438(60, 60, 0, ⵠΔ[492], 3);
    this.Ⲇⵠⵠ[11].id = 11;
    this.Ⲇⵠⵠ[12] = f438(60, 60, 0, ⵠΔ[512], 3);
    this.Ⲇⵠⵠ[12].id = 12;
    this.Ⲇⵠⵠ[13] = f438(60, 60, 0, ⵠΔ[506], 3);
    this.Ⲇⵠⵠ[13].id = 13;
    this.Ⲇⵠⵠ[14] = f438(60, 60, 0, ⵠΔ[509], 3);
    this.Ⲇⵠⵠ[14].id = 14;
    this.Ⲇⵠⵠ[15] = f438(60, 60, 0, ⵠΔ[515], 3);
    this.Ⲇⵠⵠ[15].id = 15;
    this.Ⲇⵠⵠ[16] = f438(60, 60, 0, ⵠΔ[1123], 3);
    this.Ⲇⵠⵠ[16].id = 16;
    this.Ⲇⵠⵠ[210] = f438(60, 60, 0, ⵠΔ[519], 3);
    this.Ⲇⵠⵠ[210].id = 210;
    this.Ⲇⵠⵠ[32] = f438(60, 60, 0, ⵠΔ[531], 3);
    this.Ⲇⵠⵠ[32].id = 32;
    this.Ⲇⵠⵠ[33] = f438(60, 60, 0, ⵠΔ[534], 3);
    this.Ⲇⵠⵠ[33].id = 33;
    this.Ⲇⵠⵠ[160] = f438(60, 60, 0, ⵠΔ[1618], 3);
    this.Ⲇⵠⵠ[160].id = 160;
    this.Ⲇⵠⵠ[161] = f438(60, 60, 0, ⵠΔ[1621], 3);
    this.Ⲇⵠⵠ[161].id = 161;
    this.Ⲇⵠⵠ[153] = f438(60, 60, 0, ⵠΔ[1465], 3);
    this.Ⲇⵠⵠ[153].id = 153;
    this.Ⲇⵠⵠ[154] = f438(60, 60, 0, ⵠΔ[1468], 3);
    this.Ⲇⵠⵠ[154].id = 154;
    this.Ⲇⵠⵠ[119] = f438(60, 60, 0, ⵠΔ[761], 3);
    this.Ⲇⵠⵠ[119].id = 119;
    this.Ⲇⵠⵠ[183] = f438(60, 60, 0, ⵠΔ[1494], 3);
    this.Ⲇⵠⵠ[183].id = 183;
    this.Ⲇⵠⵠ[135] = f438(60, 60, 0, ⵠΔ[1630], 3);
    this.Ⲇⵠⵠ[135].id = 135;
    this.Ⲇⵠⵠ[120] = f438(60, 60, 0, ⵠΔ[764], 3);
    this.Ⲇⵠⵠ[120].id = 120;
    this.Ⲇⵠⵠ[184] = f438(60, 60, 0, ⵠΔ[1497], 3);
    this.Ⲇⵠⵠ[184].id = 184;
    this.Ⲇⵠⵠ[136] = f438(60, 60, 0, ⵠΔ[1633], 3);
    this.Ⲇⵠⵠ[136].id = 136;
    this.Ⲇⵠⵠ[121] = f438(60, 60, 0, ⵠΔ[767], 3);
    this.Ⲇⵠⵠ[121].id = 121;
    this.Ⲇⵠⵠ[185] = f438(60, 60, 0, ⵠΔ[1500], 3);
    this.Ⲇⵠⵠ[185].id = 185;
    this.Ⲇⵠⵠ[137] = f438(60, 60, 0, ⵠΔ[1636], 3);
    this.Ⲇⵠⵠ[137].id = 137;
    this.Ⲇⵠⵠ[122] = f438(60, 60, 0, ⵠΔ[770], 3);
    this.Ⲇⵠⵠ[122].id = 122;
    this.Ⲇⵠⵠ[186] = f438(60, 60, 0, ⵠΔ[1503], 3);
    this.Ⲇⵠⵠ[186].id = 186;
    this.Ⲇⵠⵠ[138] = f438(60, 60, 0, ⵠΔ[1639], 3);
    this.Ⲇⵠⵠ[138].id = 138;
    this.Ⲇⵠⵠ[123] = f438(60, 60, 0, ⵠΔ[773], 3);
    this.Ⲇⵠⵠ[123].id = 123;
    this.Ⲇⵠⵠ[187] = f438(60, 60, 0, ⵠΔ[1506], 3);
    this.Ⲇⵠⵠ[187].id = 187;
    this.Ⲇⵠⵠ[139] = f438(60, 60, 0, ⵠΔ[1642], 3);
    this.Ⲇⵠⵠ[139].id = 139;
    this.Ⲇⵠⵠ[124] = f438(60, 60, 0, ⵠΔ[776], 3);
    this.Ⲇⵠⵠ[124].id = 124;
    this.Ⲇⵠⵠ[188] = f438(60, 60, 0, ⵠΔ[1509], 3);
    this.Ⲇⵠⵠ[188].id = 188;
    this.Ⲇⵠⵠ[140] = f438(60, 60, 0, ⵠΔ[1645], 3);
    this.Ⲇⵠⵠ[140].id = 140;
    this.Ⲇⵠⵠ[125] = f438(60, 60, 0, ⵠΔ[779], 3);
    this.Ⲇⵠⵠ[125].id = 125;
    this.Ⲇⵠⵠ[189] = f438(60, 60, 0, ⵠΔ[1512], 3);
    this.Ⲇⵠⵠ[189].id = 189;
    this.Ⲇⵠⵠ[167] = f438(60, 60, 0, ⵠΔ[1675], 3);
    this.Ⲇⵠⵠ[167].id = 167;
    this.Ⲇⵠⵠ[168] = f438(60, 60, 0, ⵠΔ[1678], 3);
    this.Ⲇⵠⵠ[168].id = 168;
    this.Ⲇⵠⵠ[169] = f438(60, 60, 0, ⵠΔ[1681], 3);
    this.Ⲇⵠⵠ[169].id = 169;
    this.Ⲇⵠⵠ[170] = f438(60, 60, 0, ⵠΔ[1684], 3);
    this.Ⲇⵠⵠ[170].id = 170;
    this.Ⲇⵠⵠ[171] = f438(60, 60, 0, ⵠΔ[1687], 3);
    this.Ⲇⵠⵠ[171].id = 171;
    this.Ⲇⵠⵠ[172] = f438(60, 60, 0, ⵠΔ[1690], 3);
    this.Ⲇⵠⵠ[172].id = 172;
    this.Ⲇⵠⵠ[104] = f438(60, 60, 0, ⵠΔ[1075], 3);
    this.Ⲇⵠⵠ[104].id = 104;
    this.Ⲇⵠⵠ[34] = f438(60, 60, 0, ⵠΔ[540], 3);
    this.Ⲇⵠⵠ[34].id = 34;
    this.Ⲇⵠⵠ[35] = f438(60, 60, 0, ⵠΔ[543], 3);
    this.Ⲇⵠⵠ[35].id = 35;
    this.Ⲇⵠⵠ[36] = f438(60, 60, 0, ⵠΔ[546], 3);
    this.Ⲇⵠⵠ[36].id = 36;
    this.Ⲇⵠⵠ[46] = f438(60, 60, 0, ⵠΔ[576], 3);
    this.Ⲇⵠⵠ[46].id = 46;
    this.Ⲇⵠⵠ[211] = f438(60, 60, 0, ⵠΔ[579], 3);
    this.Ⲇⵠⵠ[211].id = 211;
    this.Ⲇⵠⵠ[211].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[211].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[47] = f438(60, 60, 0, ⵠΔ[503], 3);
    this.Ⲇⵠⵠ[47].id = 47;
    this.Ⲇⵠⵠ[212] = f438(60, 60, 0, ⵠΔ[529], 3);
    this.Ⲇⵠⵠ[212].id = 212;
    this.Ⲇⵠⵠ[212].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[212].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[48] = f438(60, 60, 0, ⵠΔ[593], 3);
    this.Ⲇⵠⵠ[48].id = 48;
    this.Ⲇⵠⵠ[9] = f438(60, 60, 0, ⵠΔ[1109], 3);
    this.Ⲇⵠⵠ[9].id = 9;
    this.Ⲇⵠⵠ[49] = f438(60, 60, 0, ⵠΔ[596], 3);
    this.Ⲇⵠⵠ[49].id = 49;
    this.Ⲇⵠⵠ[50] = f438(60, 60, 0, ⵠΔ[1293], 3);
    this.Ⲇⵠⵠ[50].id = 50;
    this.Ⲇⵠⵠ[60] = f438(60, 60, 0, ⵠΔ[610], 3);
    this.Ⲇⵠⵠ[60].id = 60;
    this.Ⲇⵠⵠ[62] = f438(60, 60, 0, ⵠΔ[615], 3);
    this.Ⲇⵠⵠ[62].id = 62;
    this.Ⲇⵠⵠ[63] = f438(60, 60, 0, ⵠΔ[618], 3);
    this.Ⲇⵠⵠ[63].id = 63;
    this.Ⲇⵠⵠ[64] = f438(60, 60, 0, ⵠΔ[621], 3);
    this.Ⲇⵠⵠ[64].id = 64;
    this.Ⲇⵠⵠ[65] = f438(60, 60, 0, ⵠΔ[624], 3);
    this.Ⲇⵠⵠ[65].id = 65;
    this.Ⲇⵠⵠ[66] = f438(60, 60, 0, ⵠΔ[627], 3);
    this.Ⲇⵠⵠ[66].id = 66;
    this.Ⲇⵠⵠ[213] = f438(60, 60, 0, ⵠΔ[630], 3);
    this.Ⲇⵠⵠ[213].id = 213;
    this.Ⲇⵠⵠ[214] = f438(60, 60, 0, ⵠΔ[633], 3);
    this.Ⲇⵠⵠ[214].id = 214;
    this.Ⲇⵠⵠ[215] = f438(60, 60, 0, ⵠΔ[637], 3);
    this.Ⲇⵠⵠ[215].id = 215;
    this.Ⲇⵠⵠ[67] = f438(60, 60, 0, ⵠΔ[640], 3);
    this.Ⲇⵠⵠ[67].id = 67;
    this.Ⲇⵠⵠ[239] = f438(60, 60, 0, ⵠΔ[643], 3);
    this.Ⲇⵠⵠ[239].id = 239;
    this.Ⲇⵠⵠ[239].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[239].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[350] = f438(60, 60, 0, ⵠΔ[1624], 3);
    this.Ⲇⵠⵠ[350].id = 350;
    this.Ⲇⵠⵠ[350].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[350].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[240] = f438(60, 60, 0, ⵠΔ[651], 3);
    this.Ⲇⵠⵠ[240].id = 240;
    this.Ⲇⵠⵠ[240].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[240].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[241] = f438(60, 60, 0, ⵠΔ[656], 3);
    this.Ⲇⵠⵠ[241].id = 241;
    this.Ⲇⵠⵠ[241].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[241].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[242] = f438(60, 60, 0, ⵠΔ[659], 3);
    this.Ⲇⵠⵠ[242].id = 242;
    this.Ⲇⵠⵠ[243] = f438(60, 60, 0, ⵠΔ[661], 3);
    this.Ⲇⵠⵠ[243].id = 243;
    this.Ⲇⵠⵠ[244] = f438(60, 60, 0, ⵠΔ[667], 3);
    this.Ⲇⵠⵠ[244].id = 244;
    this.Ⲇⵠⵠ[260] = f438(60, 60, 0, ⵠΔ[670], 3);
    this.Ⲇⵠⵠ[260].id = 260;
    this.Ⲇⵠⵠ[261] = f438(60, 60, 0, ⵠΔ[718], 3);
    this.Ⲇⵠⵠ[261].id = 261;
    this.Ⲇⵠⵠ[70] = f438(60, 60, 0, ⵠΔ[679], 3);
    this.Ⲇⵠⵠ[70].id = 70;
    this.Ⲇⵠⵠ[72] = f438(60, 60, 0, ⵠΔ[688], 3);
    this.Ⲇⵠⵠ[72].id = 72;
    this.Ⲇⵠⵠ[216] = f438(60, 60, 0, ⵠΔ[824], 3);
    this.Ⲇⵠⵠ[216].id = 216;
    this.Ⲇⵠⵠ[331] = f438(60, 60, 0, ⵠΔ[1627], 3);
    this.Ⲇⵠⵠ[331].id = 331;
    this.Ⲇⵠⵠ[333] = f438(60, 60, 0, ⵠΔ[1336], 3);
    this.Ⲇⵠⵠ[333].id = 333;
    this.Ⲇⵠⵠ[334] = f438(60, 60, 0, ⵠΔ[1339], 3);
    this.Ⲇⵠⵠ[334].id = 334;
    this.Ⲇⵠⵠ[340] = f438(60, 60, 0, ⵠΔ[1425], 3);
    this.Ⲇⵠⵠ[340].id = 340;
    this.Ⲇⵠⵠ[162] = f438(60, 60, 0, ⵠΔ[1354], 3);
    this.Ⲇⵠⵠ[162].id = 162;
    this.Ⲇⵠⵠ[335] = f438(60, 60, 0, ⵠΔ[1357], 3);
    this.Ⲇⵠⵠ[335].id = 335;
    this.Ⲇⵠⵠ[336] = f438(60, 60, 0, ⵠΔ[1544], 3);
    this.Ⲇⵠⵠ[336].id = 336;
    this.Ⲇⵠⵠ[337] = f438(60, 60, 0, ⵠΔ[1388], 3);
    this.Ⲇⵠⵠ[337].id = 337;
    this.Ⲇⵠⵠ[349] = f438(60, 60, 0, ⵠΔ[1615], 3);
    this.Ⲇⵠⵠ[349].id = 349;
    this.Ⲇⵠⵠ[338] = f438(60, 60, 0, ⵠΔ[1403], 3);
    this.Ⲇⵠⵠ[338].id = 338;
    this.Ⲇⵠⵠ[339] = f438(60, 60, 0, ⵠΔ[1418], 3);
    this.Ⲇⵠⵠ[339].id = 339;
    this.Ⲇⵠⵠ[355] = f438(60, 60, 0, ⵠΔ[1439], 3);
    this.Ⲇⵠⵠ[355].id = 355;
    this.Ⲇⵠⵠ[354] = f438(60, 60, 0, ⵠΔ[1457], 3);
    this.Ⲇⵠⵠ[354].id = 354;
    this.Ⲇⵠⵠ[358] = f438(60, 60, 0, ⵠΔ[1328], 3);
    this.Ⲇⵠⵠ[358].id = 358;
    this.Ⲇⵠⵠ[217] = f438(60, 60, 0, ⵠΔ[828], 3);
    this.Ⲇⵠⵠ[217].id = 217;
    this.Ⲇⵠⵠ[217].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[217].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[218] = f438(60, 60, 0, ⵠΔ[832], 3);
    this.Ⲇⵠⵠ[218].id = 218;
    this.Ⲇⵠⵠ[221] = f438(60, 60, 0, ⵠΔ[831], 3);
    this.Ⲇⵠⵠ[221].id = 221;
    this.Ⲇⵠⵠ[82] = f438(60, 60, 0, ⵠΔ[835], 3);
    this.Ⲇⵠⵠ[82].id = 82;
    this.Ⲇⵠⵠ[86] = f438(60, 60, 0, ⵠΔ[918], 3);
    this.Ⲇⵠⵠ[86].id = 86;
    this.Ⲇⵠⵠ[87] = f438(60, 60, 0, ⵠΔ[921], 3);
    this.Ⲇⵠⵠ[87].id = 87;
    this.Ⲇⵠⵠ[88] = f438(60, 60, 0, ⵠΔ[924], 3);
    this.Ⲇⵠⵠ[88].id = 88;
    this.Ⲇⵠⵠ[101] = f438(60, 60, 0, ⵠΔ[958], 3);
    this.Ⲇⵠⵠ[101].id = 101;
    this.Ⲇⵠⵠ[222] = f438(60, 60, 0, ⵠΔ[843], 3);
    this.Ⲇⵠⵠ[222].id = 222;
    this.Ⲇⵠⵠ[222].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[222].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[223] = f438(60, 60, 0, ⵠΔ[845], 3);
    this.Ⲇⵠⵠ[223].id = 223;
    this.Ⲇⵠⵠ[224] = f438(60, 60, 0, ⵠΔ[848], 3);
    this.Ⲇⵠⵠ[224].id = 224;
    this.Ⲇⵠⵠ[224].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[224].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[225] = f438(60, 60, 0, ⵠΔ[850], 3);
    this.Ⲇⵠⵠ[225].id = 225;
    this.Ⲇⵠⵠ[226] = f438(60, 60, 0, ⵠΔ[853], 3);
    this.Ⲇⵠⵠ[226].id = 226;
    this.Ⲇⵠⵠ[227] = f438(60, 60, 0, ⵠΔ[858], 3);
    this.Ⲇⵠⵠ[227].id = 227;
    this.Ⲇⵠⵠ[227].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[227].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[228] = f438(60, 60, 0, ⵠΔ[863], 3);
    this.Ⲇⵠⵠ[228].id = 228;
    this.Ⲇⵠⵠ[83] = f438(60, 60, 0, ⵠΔ[865], 3);
    this.Ⲇⵠⵠ[83].id = 83;
    this.Ⲇⵠⵠ[84] = f438(60, 60, 0, ⵠΔ[868], 3);
    this.Ⲇⵠⵠ[84].id = 84;
    this.Ⲇⵠⵠ[85] = f438(60, 60, 0, ⵠΔ[871], 3);
    this.Ⲇⵠⵠ[85].id = 85;
    this.Ⲇⵠⵠ[229] = f438(60, 60, 0, ⵠΔ[878], 3);
    this.Ⲇⵠⵠ[229].id = 229;
    this.Ⲇⵠⵠ[236] = f438(60, 60, 0, ⵠΔ[236], 3);
    this.Ⲇⵠⵠ[236].id = 236;
    this.Ⲇⵠⵠ[230] = f438(60, 60, 0, ⵠΔ[881], 3);
    this.Ⲇⵠⵠ[230].id = 230;
    this.Ⲇⵠⵠ[231] = f438(60, 60, 0, ⵠΔ[883], 3);
    this.Ⲇⵠⵠ[231].id = 231;
    this.Ⲇⵠⵠ[232] = f438(60, 60, 0, ⵠΔ[893], 3);
    this.Ⲇⵠⵠ[232].id = 232;
    this.Ⲇⵠⵠ[232].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[232].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[233] = f438(60, 60, 0, ⵠΔ[233], 3);
    this.Ⲇⵠⵠ[233].id = 233;
    this.Ⲇⵠⵠ[233].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[233].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[234] = f438(60, 60, 0, ⵠΔ[904], 3);
    this.Ⲇⵠⵠ[234].id = 234;
    this.Ⲇⵠⵠ[235] = f438(60, 60, 0, ⵠΔ[235], 3);
    this.Ⲇⵠⵠ[235].id = 235;
    this.Ⲇⵠⵠ[235].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[235].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[237] = f438(60, 60, 0, ⵠΔ[966], 3);
    this.Ⲇⵠⵠ[237].id = 237;
    this.Ⲇⵠⵠ[238] = f438(60, 60, 0, ⵠΔ[238], 3);
    this.Ⲇⵠⵠ[238].id = 238;
    this.Ⲇⵠⵠ[105] = f438(60, 60, 0, ⵠΔ[981], 3);
    this.Ⲇⵠⵠ[105].id = 105;
    this.Ⲇⵠⵠ[108] = f438(60, 60, 0, ⵠΔ[728], 3);
    this.Ⲇⵠⵠ[108].id = 108;
    this.Ⲇⵠⵠ[287] = f438(60, 60, 0, ⵠΔ[362], 3);
    this.Ⲇⵠⵠ[287].id = 287;
    this.Ⲇⵠⵠ[287].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[287].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[286] = f438(60, 60, 0, ⵠΔ[1000], 3);
    this.Ⲇⵠⵠ[286].id = 286;
    this.Ⲇⵠⵠ[286].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[286].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[17] = f438(60, 60, 0, ⵠΔ[1126], 3);
    this.Ⲇⵠⵠ[17].id = 17;
    this.Ⲇⵠⵠ[109] = f438(60, 60, 0, ⵠΔ[731], 3);
    this.Ⲇⵠⵠ[109].id = 109;
    this.Ⲇⵠⵠ[289] = f438(60, 60, 0, ⵠΔ[363], 3);
    this.Ⲇⵠⵠ[289].id = 289;
    this.Ⲇⵠⵠ[289].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[289].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[288] = f438(60, 60, 0, ⵠΔ[1002], 3);
    this.Ⲇⵠⵠ[288].id = 288;
    this.Ⲇⵠⵠ[288].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[288].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[150] = f438(60, 60, 0, ⵠΔ[1005], 3);
    this.Ⲇⵠⵠ[150].id = 150;
    this.Ⲇⵠⵠ[277] = f438(60, 60, 0, ⵠΔ[278], 3);
    this.Ⲇⵠⵠ[277].id = 277;
    this.Ⲇⵠⵠ[277].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[277].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[278] = f438(60, 60, 0, ⵠΔ[279], 3);
    this.Ⲇⵠⵠ[278].id = 278;
    this.Ⲇⵠⵠ[278].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[278].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[151] = f438(60, 60, 0, ⵠΔ[1009], 3);
    this.Ⲇⵠⵠ[151].id = 151;
    this.Ⲇⵠⵠ[279] = f438(60, 60, 0, ⵠΔ[277], 3);
    this.Ⲇⵠⵠ[279].id = 279;
    this.Ⲇⵠⵠ[279].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[279].info.ⵠⵠ[0];
    this.Ⲇⵠⵠ[152] = f438(60, 60, 0, ⵠΔ[1013], 3);
    this.Ⲇⵠⵠ[152].id = 152;
    this.Ⲇⵠⵠ[156] = f438(60, 60, 0, ⵠΔ[1016], 3);
    this.Ⲇⵠⵠ[156].id = 156;
    this.Ⲇⵠⵠ[157] = f438(60, 60, 0, ⵠΔ[1020], 3);
    this.Ⲇⵠⵠ[157].id = 157;
    this.Ⲇⵠⵠ[280] = f438(60, 60, 0, ⵠΔ[280], 3);
    this.Ⲇⵠⵠ[280].id = 280;
    this.Ⲇⵠⵠ[281] = f438(60, 60, 0, ⵠΔ[281], 3);
    this.Ⲇⵠⵠ[281].id = 281;
    this.Ⲇⵠⵠ[159] = f438(60, 60, 0, ⵠΔ[1025], 3);
    this.Ⲇⵠⵠ[159].id = 159;
    this.Ⲇⵠⵠ[158] = f438(60, 60, 0, ⵠΔ[1028], 3);
    this.Ⲇⵠⵠ[158].id = 158;
    this.Ⲇⵠⵠ[282] = f438(60, 60, 0, ⵠΔ[282], 3);
    this.Ⲇⵠⵠ[282].id = 282;
    this.Ⲇⵠⵠ[283] = f438(60, 60, 0, ⵠΔ[283], 3);
    this.Ⲇⵠⵠ[283].id = 283;
    this.Ⲇⵠⵠ[284] = f438(60, 60, 0, ⵠΔ[1038], 3);
    this.Ⲇⵠⵠ[284].id = 284;
    this.Ⲇⵠⵠ[285] = f438(60, 60, 0, ⵠΔ[1049], 3);
    this.Ⲇⵠⵠ[285].id = 285;
    this.Ⲇⵠⵠ[290] = f438(60, 60, 0, ⵠΔ[1057], 3);
    this.Ⲇⵠⵠ[290].id = 290;
    this.Ⲇⵠⵠ[291] = f438(60, 60, 0, ⵠΔ[1063], 3);
    this.Ⲇⵠⵠ[291].id = 291;
    this.Ⲇⵠⵠ[293] = f438(60, 60, 0, ⵠΔ[1083], 3);
    this.Ⲇⵠⵠ[293].id = 293;
    this.Ⲇⵠⵠ[294] = f438(60, 60, 0, ⵠΔ[1089], 3);
    this.Ⲇⵠⵠ[294].id = 294;
    this.Ⲇⵠⵠ[292] = f438(60, 60, 0, ⵠΔ[1091], 3);
    this.Ⲇⵠⵠ[292].id = 292;
    this.Ⲇⵠⵠ[295] = f438(60, 60, 0, ⵠΔ[1094], 3);
    this.Ⲇⵠⵠ[295].id = 295;
    this.Ⲇⵠⵠ[296] = f438(60, 60, 0, ⵠΔ[1099], 3);
    this.Ⲇⵠⵠ[296].id = 296;
    this.Ⲇⵠⵠ[314] = f438(60, 60, 0, ⵠΔ[1225], 3);
    this.Ⲇⵠⵠ[314].id = 314;
    this.Ⲇⵠⵠ[315] = f438(60, 60, 0, ⵠΔ[1231], 3);
    this.Ⲇⵠⵠ[315].id = 315;
    this.Ⲇⵠⵠ[316] = f438(60, 60, 0, ⵠΔ[1235], 3);
    this.Ⲇⵠⵠ[316].id = 316;
    this.Ⲇⵠⵠ[317] = f438(60, 60, 0, ⵠΔ[1241], 3);
    this.Ⲇⵠⵠ[317].id = 317;
    this.Ⲇⵠⵠ[318] = f438(60, 60, 0, ⵠΔ[1242], 3);
    this.Ⲇⵠⵠ[318].id = 318;
    this.Ⲇⵠⵠ[319] = f438(60, 60, 0, ⵠΔ[1248], 3);
    this.Ⲇⵠⵠ[319].id = 319;
    this.Ⲇⵠⵠ[320] = f438(60, 60, 0, ⵠΔ[1257], 3);
    this.Ⲇⵠⵠ[320].id = 320;
    this.Ⲇⵠⵠ[321] = f438(60, 60, 0, ⵠΔ[1263], 3);
    this.Ⲇⵠⵠ[321].id = 321;
    this.Ⲇⵠⵠ[68] = f438(60, 60, 0, ⵠΔ[1156], 3);
    this.Ⲇⵠⵠ[68].id = 68;
    this.Ⲇⵠⵠ[69] = f438(60, 60, 0, ⵠΔ[1158], 3);
    this.Ⲇⵠⵠ[69].id = 69;
    this.Ⲇⵠⵠ[12] = f438(60, 60, 0, ⵠΔ[512], 3);
    this.Ⲇⵠⵠ[12].id = 12;
    this.Ⲇⵠⵠ[16] = f438(60, 60, 0, ⵠΔ[1123], 3);
    this.Ⲇⵠⵠ[16].id = 16;
    this.Ⲇⵠⵠ[298] = f438(60, 60, 0, ⵠΔ[298], 3);
    this.Ⲇⵠⵠ[298].id = 298;
    this.Ⲇⵠⵠ[18] = f438(60, 60, 0, ⵠΔ[1177], 3);
    this.Ⲇⵠⵠ[18].id = 18;
    this.Ⲇⵠⵠ[299] = f438(60, 60, 0, ⵠΔ[299], 3);
    this.Ⲇⵠⵠ[299].id = 299;
    this.Ⲇⵠⵠ[300] = f438(60, 60, 0, ⵠΔ[1183], 3);
    this.Ⲇⵠⵠ[300].id = 300;
    this.Ⲇⵠⵠ[107] = f438(60, 60, 0, ⵠΔ[1186], 3);
    this.Ⲇⵠⵠ[107].id = 107;
    this.Ⲇⵠⵠ[303] = f438(60, 60, 0, ⵠΔ[1119], 3);
    this.Ⲇⵠⵠ[303].id = 303;
    this.Ⲇⵠⵠ[302] = f438(60, 60, 0, ⵠΔ[302], 3);
    this.Ⲇⵠⵠ[302].id = 302;
    this.Ⲇⵠⵠ[301] = f438(60, 60, 0, ⵠΔ[1114], 3);
    this.Ⲇⵠⵠ[301].id = 301;
    this.ᐃⲆⵠ = [];
    this.ᐃⲆⵠ[0] = f438(60, 60, 0, ⵠΔ[364], 3);
    this.ᐃⲆⵠ[0].id = 0;
    this.ᐃⲆⵠ[1] = f438(60, 60, 0, ⵠΔ[366], 3);
    this.ᐃⲆⵠ[1].id = 1;
    this.ᐃⲆⵠ[204] = f438(60, 60, 0, ⵠΔ[413], 3);
    this.ᐃⲆⵠ[204].id = 204;
    this.ᐃⲆⵠ[205] = f438(60, 60, 0, ⵠΔ[372], 3);
    this.ᐃⲆⵠ[205].id = 205;
    this.ᐃⲆⵠ[264] = f438(60, 60, 0, ⵠΔ[429], 3);
    this.ᐃⲆⵠ[264].id = 264;
    this.ᐃⲆⵠ[262] = f438(60, 60, 0, ⵠΔ[431], 3);
    this.ᐃⲆⵠ[262].id = 262;
    this.ᐃⲆⵠ[206] = f438(60, 60, 0, ⵠΔ[394], 3);
    this.ᐃⲆⵠ[206].id = 206;
    this.ᐃⲆⵠ[3] = f438(60, 60, 0, ⵠΔ[406], 3);
    this.ᐃⲆⵠ[3].id = 3;
    this.ᐃⲆⵠ[4] = f438(60, 60, 0, ⵠΔ[367], 3);
    this.ᐃⲆⵠ[4].id = 4;
    this.ᐃⲆⵠ[5] = f438(60, 60, 0, ⵠΔ[400], 3);
    this.ᐃⲆⵠ[5].id = 5;
    this.ᐃⲆⵠ[103] = f438(60, 60, 0, ⵠΔ[1079], 3);
    this.ᐃⲆⵠ[103].id = 103;
    this.ᐃⲆⵠ[6] = f438(60, 60, 0, ⵠΔ[401], 3);
    this.ᐃⲆⵠ[6].id = 6;
    this.ᐃⲆⵠ[8] = f438(60, 60, 0, ⵠΔ[425], 3);
    this.ᐃⲆⵠ[8].id = 8;
    this.ᐃⲆⵠ[208] = f438(60, 60, 0, ⵠΔ[436], 3);
    this.ᐃⲆⵠ[208].id = 208;
    this.ᐃⲆⵠ[209] = f438(60, 60, 0, ⵠΔ[438], 3);
    this.ᐃⲆⵠ[209].id = 209;
    this.ᐃⲆⵠ[297] = f438(60, 60, 0, ⵠΔ[415], 3);
    this.ᐃⲆⵠ[297].id = 297;
    this.ᐃⲆⵠ[265] = f438(60, 60, 0, ⵠΔ[373], 3);
    this.ᐃⲆⵠ[265].id = 265;
    this.ᐃⲆⵠ[266] = f438(60, 60, 0, ⵠΔ[375], 3);
    this.ᐃⲆⵠ[266].id = 266;
    this.ᐃⲆⵠ[267] = f438(60, 60, 0, ⵠΔ[443], 3);
    this.ᐃⲆⵠ[267].id = 267;
    this.ᐃⲆⵠ[268] = f438(60, 60, 0, ⵠΔ[378], 3);
    this.ᐃⲆⵠ[268].id = 268;
    this.ᐃⲆⵠ[269] = f438(60, 60, 0, ⵠΔ[449], 3);
    this.ᐃⲆⵠ[269].id = 269;
    this.ᐃⲆⵠ[270] = f438(60, 60, 0, ⵠΔ[471], 3);
    this.ᐃⲆⵠ[270].id = 270;
    this.ᐃⲆⵠ[271] = f438(60, 60, 0, ⵠΔ[474], 3);
    this.ᐃⲆⵠ[271].id = 271;
    this.ᐃⲆⵠ[272] = f438(60, 60, 0, ⵠΔ[476], 3);
    this.ᐃⲆⵠ[272].id = 272;
    this.ᐃⲆⵠ[47] = f438(60, 60, 0, ⵠΔ[478], 3);
    this.ᐃⲆⵠ[47].id = 47;
    this.ᐃⲆⵠ[10] = f438(60, 60, 0, ⵠΔ[481], 3);
    this.ᐃⲆⵠ[10].id = 10;
    this.ᐃⲆⵠ[273] = f438(60, 60, 0, ⵠΔ[482], 3);
    this.ᐃⲆⵠ[273].id = 273;
    this.ᐃⲆⵠ[274] = f438(60, 60, 0, ⵠΔ[485], 3);
    this.ᐃⲆⵠ[274].id = 274;
    this.ᐃⲆⵠ[275] = f438(60, 60, 0, ⵠΔ[488], 3);
    this.ᐃⲆⵠ[275].id = 275;
    this.ᐃⲆⵠ[10] = f438(60, 60, 0, ⵠΔ[481], 3);
    this.ᐃⲆⵠ[10].id = 10;
    this.ᐃⲆⵠ[11] = f438(60, 60, 0, ⵠΔ[491], 3);
    this.ᐃⲆⵠ[11].id = 11;
    this.ᐃⲆⵠ[12] = f438(60, 60, 0, ⵠΔ[513], 3);
    this.ᐃⲆⵠ[12].id = 12;
    this.ᐃⲆⵠ[13] = f438(60, 60, 0, ⵠΔ[507], 3);
    this.ᐃⲆⵠ[13].id = 13;
    this.ᐃⲆⵠ[14] = f438(60, 60, 0, ⵠΔ[510], 3);
    this.ᐃⲆⵠ[14].id = 14;
    this.ᐃⲆⵠ[15] = f438(60, 60, 0, ⵠΔ[516], 3);
    this.ᐃⲆⵠ[15].id = 15;
    this.ᐃⲆⵠ[16] = f438(60, 60, 0, ⵠΔ[1125], 3);
    this.ᐃⲆⵠ[16].id = 16;
    this.ᐃⲆⵠ[210] = f438(60, 60, 0, ⵠΔ[520], 3);
    this.ᐃⲆⵠ[210].id = 210;
    this.ᐃⲆⵠ[32] = f438(60, 60, 0, ⵠΔ[532], 3);
    this.ᐃⲆⵠ[32].id = 32;
    this.ᐃⲆⵠ[33] = f438(60, 60, 0, ⵠΔ[535], 3);
    this.ᐃⲆⵠ[33].id = 33;
    this.ᐃⲆⵠ[160] = f438(60, 60, 0, ⵠΔ[1619], 3);
    this.ᐃⲆⵠ[160].id = 160;
    this.ᐃⲆⵠ[161] = f438(60, 60, 0, ⵠΔ[1622], 3);
    this.ᐃⲆⵠ[161].id = 161;
    this.ᐃⲆⵠ[153] = f438(60, 60, 0, ⵠΔ[1466], 3);
    this.ᐃⲆⵠ[153].id = 153;
    this.ᐃⲆⵠ[154] = f438(60, 60, 0, ⵠΔ[1469], 3);
    this.ᐃⲆⵠ[154].id = 154;
    this.ᐃⲆⵠ[119] = f438(60, 60, 0, ⵠΔ[762], 3);
    this.ᐃⲆⵠ[119].id = 119;
    this.ᐃⲆⵠ[183] = f438(60, 60, 0, ⵠΔ[1496], 3);
    this.ᐃⲆⵠ[183].id = 183;
    this.ᐃⲆⵠ[135] = f438(60, 60, 0, ⵠΔ[1629], 3);
    this.ᐃⲆⵠ[135].id = 135;
    this.ᐃⲆⵠ[120] = f438(60, 60, 0, ⵠΔ[765], 3);
    this.ᐃⲆⵠ[120].id = 120;
    this.ᐃⲆⵠ[184] = f438(60, 60, 0, ⵠΔ[1499], 3);
    this.ᐃⲆⵠ[184].id = 184;
    this.ᐃⲆⵠ[136] = f438(60, 60, 0, ⵠΔ[1632], 3);
    this.ᐃⲆⵠ[136].id = 136;
    this.ᐃⲆⵠ[121] = f438(60, 60, 0, ⵠΔ[768], 3);
    this.ᐃⲆⵠ[121].id = 121;
    this.ᐃⲆⵠ[185] = f438(60, 60, 0, ⵠΔ[1502], 3);
    this.ᐃⲆⵠ[185].id = 185;
    this.ᐃⲆⵠ[137] = f438(60, 60, 0, ⵠΔ[1635], 3);
    this.ᐃⲆⵠ[137].id = 137;
    this.ᐃⲆⵠ[122] = f438(60, 60, 0, ⵠΔ[771], 3);
    this.ᐃⲆⵠ[122].id = 122;
    this.ᐃⲆⵠ[186] = f438(60, 60, 0, ⵠΔ[1505], 3);
    this.ᐃⲆⵠ[186].id = 186;
    this.ᐃⲆⵠ[167] = f438(60, 60, 0, ⵠΔ[1674], 3);
    this.ᐃⲆⵠ[167].id = 167;
    this.ᐃⲆⵠ[168] = f438(60, 60, 0, ⵠΔ[1677], 3);
    this.ᐃⲆⵠ[168].id = 168;
    this.ᐃⲆⵠ[169] = f438(60, 60, 0, ⵠΔ[1680], 3);
    this.ᐃⲆⵠ[169].id = 169;
    this.ᐃⲆⵠ[170] = f438(60, 60, 0, ⵠΔ[1683], 3);
    this.ᐃⲆⵠ[170].id = 170;
    this.ᐃⲆⵠ[171] = f438(60, 60, 0, ⵠΔ[1686], 3);
    this.ᐃⲆⵠ[171].id = 171;
    this.ᐃⲆⵠ[172] = f438(60, 60, 0, ⵠΔ[1689], 3);
    this.ᐃⲆⵠ[172].id = 172;
    this.ᐃⲆⵠ[138] = f438(60, 60, 0, ⵠΔ[1638], 3);
    this.ᐃⲆⵠ[138].id = 138;
    this.ᐃⲆⵠ[123] = f438(60, 60, 0, ⵠΔ[774], 3);
    this.ᐃⲆⵠ[123].id = 123;
    this.ᐃⲆⵠ[187] = f438(60, 60, 0, ⵠΔ[1508], 3);
    this.ᐃⲆⵠ[187].id = 187;
    this.ᐃⲆⵠ[139] = f438(60, 60, 0, ⵠΔ[1641], 3);
    this.ᐃⲆⵠ[139].id = 139;
    this.ᐃⲆⵠ[124] = f438(60, 60, 0, ⵠΔ[777], 3);
    this.ᐃⲆⵠ[124].id = 124;
    this.ᐃⲆⵠ[188] = f438(60, 60, 0, ⵠΔ[1511], 3);
    this.ᐃⲆⵠ[188].id = 188;
    this.ᐃⲆⵠ[140] = f438(60, 60, 0, ⵠΔ[1644], 3);
    this.ᐃⲆⵠ[140].id = 140;
    this.ᐃⲆⵠ[125] = f438(60, 60, 0, ⵠΔ[780], 3);
    this.ᐃⲆⵠ[125].id = 125;
    this.ᐃⲆⵠ[189] = f438(60, 60, 0, ⵠΔ[1514], 3);
    this.ᐃⲆⵠ[189].id = 189;
    this.ᐃⲆⵠ[104] = f438(60, 60, 0, ⵠΔ[1076], 3);
    this.ᐃⲆⵠ[104].id = 104;
    this.ᐃⲆⵠ[34] = f438(60, 60, 0, ⵠΔ[541], 3);
    this.ᐃⲆⵠ[34].id = 34;
    this.ᐃⲆⵠ[35] = f438(60, 60, 0, ⵠΔ[544], 3);
    this.ᐃⲆⵠ[35].id = 35;
    this.ᐃⲆⵠ[36] = f438(60, 60, 0, ⵠΔ[547], 3);
    this.ᐃⲆⵠ[36].id = 36;
    this.ᐃⲆⵠ[46] = f438(60, 60, 0, ⵠΔ[577], 3);
    this.ᐃⲆⵠ[46].id = 46;
    this.ᐃⲆⵠ[211] = f438(60, 60, 0, ⵠΔ[580], 3);
    this.ᐃⲆⵠ[211].id = 211;
    this.ᐃⲆⵠ[47] = f438(60, 60, 0, ⵠΔ[478], 3);
    this.ᐃⲆⵠ[47].id = 47;
    this.ᐃⲆⵠ[48] = f438(60, 60, 0, ⵠΔ[594], 3);
    this.ᐃⲆⵠ[48].id = 48;
    this.ᐃⲆⵠ[9] = f438(60, 60, 0, ⵠΔ[1110], 3);
    this.ᐃⲆⵠ[9].id = 9;
    this.ᐃⲆⵠ[49] = f438(60, 60, 0, ⵠΔ[598], 3);
    this.ᐃⲆⵠ[49].id = 49;
    this.ᐃⲆⵠ[50] = f438(60, 60, 0, ⵠΔ[1295], 3);
    this.ᐃⲆⵠ[50].id = 50;
    this.ᐃⲆⵠ[60] = f438(60, 60, 0, ⵠΔ[611], 3);
    this.ᐃⲆⵠ[60].id = 60;
    this.ᐃⲆⵠ[62] = f438(60, 60, 0, ⵠΔ[616], 3);
    this.ᐃⲆⵠ[62].id = 62;
    this.ᐃⲆⵠ[63] = f438(60, 60, 0, ⵠΔ[619], 3);
    this.ᐃⲆⵠ[63].id = 63;
    this.ᐃⲆⵠ[64] = f438(60, 60, 0, ⵠΔ[622], 3);
    this.ᐃⲆⵠ[64].id = 64;
    this.ᐃⲆⵠ[65] = f438(60, 60, 0, ⵠΔ[625], 3);
    this.ᐃⲆⵠ[65].id = 65;
    this.ᐃⲆⵠ[66] = f438(60, 60, 0, ⵠΔ[628], 3);
    this.ᐃⲆⵠ[66].id = 66;
    this.ᐃⲆⵠ[213] = f438(60, 60, 0, ⵠΔ[631], 3);
    this.ᐃⲆⵠ[213].id = 213;
    this.ᐃⲆⵠ[214] = f438(60, 60, 0, ⵠΔ[634], 3);
    this.ᐃⲆⵠ[214].id = 214;
    this.ᐃⲆⵠ[215] = f438(60, 60, 0, ⵠΔ[636], 3);
    this.ᐃⲆⵠ[215].id = 215;
    this.ᐃⲆⵠ[67] = f438(60, 60, 0, ⵠΔ[641], 3);
    this.ᐃⲆⵠ[67].id = 67;
    this.ᐃⲆⵠ[240] = f438(60, 60, 0, ⵠΔ[653], 3);
    this.ᐃⲆⵠ[240].id = 240;
    this.ᐃⲆⵠ[241] = f438(60, 60, 0, ⵠΔ[657], 3);
    this.ᐃⲆⵠ[241].id = 241;
    this.ᐃⲆⵠ[244] = f438(60, 60, 0, ⵠΔ[668], 3);
    this.ᐃⲆⵠ[244].id = 244;
    this.ᐃⲆⵠ[260] = f438(60, 60, 0, ⵠΔ[671], 3);
    this.ᐃⲆⵠ[260].id = 260;
    this.ᐃⲆⵠ[261] = f438(60, 60, 0, ⵠΔ[720], 3);
    this.ᐃⲆⵠ[261].id = 261;
    this.ᐃⲆⵠ[70] = f438(60, 60, 0, ⵠΔ[680], 3);
    this.ᐃⲆⵠ[70].id = 70;
    this.ᐃⲆⵠ[72] = f438(60, 60, 0, ⵠΔ[689], 3);
    this.ᐃⲆⵠ[72].id = 72;
    this.ᐃⲆⵠ[216] = f438(60, 60, 0, ⵠΔ[823], 3);
    this.ᐃⲆⵠ[216].id = 216;
    this.ᐃⲆⵠ[331] = f438(60, 60, 0, ⵠΔ[1626], 3);
    this.ᐃⲆⵠ[331].id = 331;
    this.ᐃⲆⵠ[333] = f438(60, 60, 0, ⵠΔ[1335], 3);
    this.ᐃⲆⵠ[333].id = 333;
    this.ᐃⲆⵠ[334] = f438(60, 60, 0, ⵠΔ[1338], 3);
    this.ᐃⲆⵠ[334].id = 334;
    this.ᐃⲆⵠ[340] = f438(60, 60, 0, ⵠΔ[1424], 3);
    this.ᐃⲆⵠ[340].id = 340;
    this.ᐃⲆⵠ[162] = f438(60, 60, 0, ⵠΔ[1356], 3);
    this.ᐃⲆⵠ[162].id = 162;
    this.ᐃⲆⵠ[335] = f438(60, 60, 0, ⵠΔ[1359], 3);
    this.ᐃⲆⵠ[335].id = 335;
    this.ᐃⲆⵠ[337] = f438(60, 60, 0, ⵠΔ[1390], 3);
    this.ᐃⲆⵠ[337].id = 337;
    this.ᐃⲆⵠ[349] = f438(60, 60, 0, ⵠΔ[1617], 3);
    this.ᐃⲆⵠ[349].id = 349;
    this.ᐃⲆⵠ[336] = f438(60, 60, 0, ⵠΔ[1546], 3);
    this.ᐃⲆⵠ[336].id = 336;
    this.ᐃⲆⵠ[221] = f438(60, 60, 0, ⵠΔ[830], 3);
    this.ᐃⲆⵠ[221].id = 221;
    this.ᐃⲆⵠ[218] = f438(60, 60, 0, ⵠΔ[964], 3);
    this.ᐃⲆⵠ[218].id = 218;
    this.ᐃⲆⵠ[219] = f438(60, 60, 0, ⵠΔ[964], 3);
    this.ᐃⲆⵠ[219].id = 219;
    this.ᐃⲆⵠ[220] = f438(60, 60, 0, ⵠΔ[964], 3);
    this.ᐃⲆⵠ[220].id = 220;
    this.ᐃⲆⵠ[82] = f438(60, 60, 0, ⵠΔ[837], 3);
    this.ᐃⲆⵠ[82].id = 82;
    this.ᐃⲆⵠ[86] = f438(60, 60, 0, ⵠΔ[919], 3);
    this.ᐃⲆⵠ[86].id = 86;
    this.ᐃⲆⵠ[87] = f438(60, 60, 0, ⵠΔ[923], 3);
    this.ᐃⲆⵠ[87].id = 87;
    this.ᐃⲆⵠ[88] = f438(60, 60, 0, ⵠΔ[925], 3);
    this.ᐃⲆⵠ[88].id = 88;
    this.ᐃⲆⵠ[101] = f438(60, 60, 0, ⵠΔ[960], 3);
    this.ᐃⲆⵠ[101].id = 101;
    this.ᐃⲆⵠ[223] = f438(60, 60, 0, ⵠΔ[846], 3);
    this.ᐃⲆⵠ[223].id = 223;
    this.ᐃⲆⵠ[225] = f438(60, 60, 0, ⵠΔ[851], 3);
    this.ᐃⲆⵠ[225].id = 225;
    this.ᐃⲆⵠ[226] = f438(60, 60, 0, ⵠΔ[854], 3);
    this.ᐃⲆⵠ[226].id = 226;
    this.ᐃⲆⵠ[228] = f438(60, 60, 0, ⵠΔ[862], 3);
    this.ᐃⲆⵠ[228].id = 228;
    this.ᐃⲆⵠ[83] = f438(60, 60, 0, ⵠΔ[866], 3);
    this.ᐃⲆⵠ[83].id = 83;
    this.ᐃⲆⵠ[84] = f438(60, 60, 0, ⵠΔ[869], 3);
    this.ᐃⲆⵠ[84].id = 84;
    this.ᐃⲆⵠ[85] = f438(60, 60, 0, ⵠΔ[873], 3);
    this.ᐃⲆⵠ[85].id = 85;
    this.ᐃⲆⵠ[229] = f438(60, 60, 0, ⵠΔ[879], 3);
    this.ᐃⲆⵠ[229].id = 229;
    this.ᐃⲆⵠ[236] = f438(60, 60, 0, ⵠΔ[909], 3);
    this.ᐃⲆⵠ[236].id = 236;
    this.ᐃⲆⵠ[231] = f438(60, 60, 0, ⵠΔ[885], 3);
    this.ᐃⲆⵠ[231].id = 231;
    this.ᐃⲆⵠ[234] = f438(60, 60, 0, ⵠΔ[903], 3);
    this.ᐃⲆⵠ[234].id = 234;
    this.ᐃⲆⵠ[237] = f438(60, 60, 0, ⵠΔ[967], 3);
    this.ᐃⲆⵠ[237].id = 237;
    this.ᐃⲆⵠ[238] = f438(60, 60, 0, ⵠΔ[979], 3);
    this.ᐃⲆⵠ[238].id = 238;
    this.ᐃⲆⵠ[105] = f438(60, 60, 0, ⵠΔ[983], 3);
    this.ᐃⲆⵠ[105].id = 105;
    this.ᐃⲆⵠ[108] = f438(60, 60, 0, ⵠΔ[728], 3);
    this.ᐃⲆⵠ[108].id = 108;
    this.ᐃⲆⵠ[150] = f438(60, 60, 0, ⵠΔ[1007], 3);
    this.ᐃⲆⵠ[150].id = 150;
    this.ᐃⲆⵠ[151] = f438(60, 60, 0, ⵠΔ[1011], 3);
    this.ᐃⲆⵠ[151].id = 151;
    this.ᐃⲆⵠ[152] = f438(60, 60, 0, ⵠΔ[1019], 3);
    this.ᐃⲆⵠ[152].id = 152;
    this.ᐃⲆⵠ[156] = f438(60, 60, 0, ⵠΔ[1017], 3);
    this.ᐃⲆⵠ[156].id = 156;
    this.ᐃⲆⵠ[157] = f438(60, 60, 0, ⵠΔ[1021], 3);
    this.ᐃⲆⵠ[157].id = 157;
    this.ᐃⲆⵠ[159] = f438(60, 60, 0, ⵠΔ[1026], 3);
    this.ᐃⲆⵠ[159].id = 159;
    this.ᐃⲆⵠ[158] = f438(60, 60, 0, ⵠΔ[1029], 3);
    this.ᐃⲆⵠ[158].id = 158;
    this.ᐃⲆⵠ[282] = f438(60, 60, 0, ⵠΔ[1033], 3);
    this.ᐃⲆⵠ[282].id = 282;
    this.ᐃⲆⵠ[283] = f438(60, 60, 0, ⵠΔ[1034], 3);
    this.ᐃⲆⵠ[283].id = 283;
    this.ᐃⲆⵠ[284] = f438(60, 60, 0, ⵠΔ[1040], 3);
    this.ᐃⲆⵠ[284].id = 284;
    this.ᐃⲆⵠ[285] = f438(60, 60, 0, ⵠΔ[1048], 3);
    this.ᐃⲆⵠ[285].id = 285;
    this.ᐃⲆⵠ[290] = f438(60, 60, 0, ⵠΔ[1058], 3);
    this.ᐃⲆⵠ[290].id = 290;
    this.ᐃⲆⵠ[293] = f438(60, 60, 0, ⵠΔ[1084], 3);
    this.ᐃⲆⵠ[293].id = 293;
    this.ᐃⲆⵠ[292] = f438(60, 60, 0, ⵠΔ[1092], 3);
    this.ᐃⲆⵠ[292].id = 292;
    this.ᐃⲆⵠ[295] = f438(60, 60, 0, ⵠΔ[1095], 3);
    this.ᐃⲆⵠ[295].id = 295;
    this.ᐃⲆⵠ[316] = f438(60, 60, 0, ⵠΔ[1236], 3);
    this.ᐃⲆⵠ[316].id = 316;
    this.ᐃⲆⵠ[314] = f438(60, 60, 0, ⵠΔ[1226], 3);
    this.ᐃⲆⵠ[314].id = 314;
    this.ᐃⲆⵠ[318] = f438(60, 60, 0, ⵠΔ[1243], 3);
    this.ᐃⲆⵠ[318].id = 318;
    this.ᐃⲆⵠ[320] = f438(60, 60, 0, ⵠΔ[1258], 3);
    this.ᐃⲆⵠ[320].id = 320;
    this.ᐃⲆⵠ[12] = f438(60, 60, 0, ⵠΔ[513], 3);
    this.ᐃⲆⵠ[12].id = 12;
    this.ᐃⲆⵠ[16] = f438(60, 60, 0, ⵠΔ[1125], 3);
    this.ᐃⲆⵠ[16].id = 16;
    this.ᐃⲆⵠ[18] = f438(60, 60, 0, ⵠΔ[1176], 3);
    this.ᐃⲆⵠ[18].id = 18;
    this.ᐃⲆⵠ[300] = f438(60, 60, 0, ⵠΔ[1185], 3);
    this.ᐃⲆⵠ[300].id = 300;
    this.ᐃⲆⵠ[107] = f438(60, 60, 0, ⵠΔ[1188], 3);
    this.ᐃⲆⵠ[107].id = 107;
    this.ᐃΔⵠ[99] = f438(68, 68, 0, ⵠΔ[1252], 3);
    this.ᐃΔⵠ[99].id = 99;
    this.Ⲇⵠⵠ[99] = f438(60, 60, 0, ⵠΔ[1251], 3);
    this.Ⲇⵠⵠ[99].id = 99;
    this.ᐃⲆⵠ[99] = f438(60, 60, 0, ⵠΔ[1253], 3);
    this.ᐃⲆⵠ[99].id = 99;
    this.ᐃΔⵠ[100] = f438(68, 68, 0, ⵠΔ[1255], 3);
    this.ᐃΔⵠ[100].id = 100;
    this.Ⲇⵠⵠ[100] = f438(60, 60, 0, ⵠΔ[1254], 3);
    this.Ⲇⵠⵠ[100].id = 100;
    this.ᐃⲆⵠ[100] = f438(60, 60, 0, ⵠΔ[1256], 3);
    this.ᐃⲆⵠ[100].id = 100;
    this.ᐃΔⵠ[102] = f438(68, 68, 0, ⵠΔ[962], 3);
    this.ᐃΔⵠ[102].id = 102;
    this.Ⲇⵠⵠ[102] = f438(60, 60, 0, ⵠΔ[961], 3);
    this.Ⲇⵠⵠ[102].id = 102;
    this.ᐃⲆⵠ[102] = f438(60, 60, 0, ⵠΔ[963], 3);
    this.ᐃⲆⵠ[102].id = 102;
    this.ᐃΔⵠ[155] = f438(68, 68, 0, ⵠΔ[539], 3);
    this.ᐃΔⵠ[155].id = 155;
    this.Ⲇⵠⵠ[155] = f438(60, 60, 0, ⵠΔ[537], 3);
    this.Ⲇⵠⵠ[155].id = 155;
    this.ᐃⲆⵠ[155] = f438(60, 60, 0, ⵠΔ[538], 3);
    this.ᐃⲆⵠ[155].id = 155;
    this.ᐃΔⵠ[345] = f438(68, 68, 0, ⵠΔ[1487], 3);
    this.ᐃΔⵠ[345].id = 345;
    this.Ⲇⵠⵠ[345] = f438(60, 60, 0, ⵠΔ[1486], 3);
    this.Ⲇⵠⵠ[345].id = 345;
    this.ᐃΔⵠ[348] = f438(68, 68, 0, ⵠΔ[1543], 3);
    this.ᐃΔⵠ[348].id = 348;
    this.Ⲇⵠⵠ[348] = f438(60, 60, 0, ⵠΔ[1542], 3);
    this.Ⲇⵠⵠ[348].id = 348;
    this.ᐃΔⵠ[346] = f438(68, 68, 0, ⵠΔ[1489], 3);
    this.ᐃΔⵠ[346].id = 346;
    this.Ⲇⵠⵠ[346] = f438(60, 60, 0, ⵠΔ[1488], 3);
    this.Ⲇⵠⵠ[346].id = 346;
    this.ᐃΔⵠ[245] = f438(68, 68, 0, ⵠΔ[1552], 3);
    this.ᐃΔⵠ[245].id = 245;
    this.Ⲇⵠⵠ[245] = f438(60, 60, 0, ⵠΔ[1550], 3);
    this.Ⲇⵠⵠ[245].id = 245;
    this.ᐃⲆⵠ[245] = f438(60, 60, 0, ⵠΔ[1551], 3);
    this.ᐃⲆⵠ[245].id = 245;
    this.ᐃΔⵠ[322] = f438(68, 68, 0, ⵠΔ[1268], 3);
    this.ᐃΔⵠ[322].id = 322;
    this.Ⲇⵠⵠ[322] = f438(60, 60, 0, ⵠΔ[1267], 3);
    this.Ⲇⵠⵠ[322].id = 322;
    this.ᐃⲆⵠ[322] = f438(60, 60, 0, ⵠΔ[1266], 3);
    this.ᐃⲆⵠ[322].id = 322;
    this.ᐃΔⵠ[323] = f438(68, 68, 0, ⵠΔ[1271], 3);
    this.ᐃΔⵠ[323].id = 323;
    this.Ⲇⵠⵠ[323] = f438(60, 60, 0, ⵠΔ[1270], 3);
    this.Ⲇⵠⵠ[323].id = 323;
    this.ᐃⲆⵠ[323] = f438(60, 60, 0, ⵠΔ[1269], 3);
    this.ᐃⲆⵠ[323].id = 323;
    this.ᐃΔⵠ[324] = f438(68, 68, 0, ⵠΔ[1274], 3);
    this.ᐃΔⵠ[324].id = 324;
    this.Ⲇⵠⵠ[324] = f438(60, 60, 0, ⵠΔ[1273], 3);
    this.Ⲇⵠⵠ[324].id = 324;
    this.ᐃⲆⵠ[324] = f438(60, 60, 0, ⵠΔ[1272], 3);
    this.ᐃⲆⵠ[324].id = 324;
    this.ᐃΔⵠ[325] = f438(68, 68, 0, ⵠΔ[1277], 3);
    this.ᐃΔⵠ[325].id = 325;
    this.Ⲇⵠⵠ[325] = f438(60, 60, 0, ⵠΔ[1276], 3);
    this.Ⲇⵠⵠ[325].id = 325;
    this.ᐃⲆⵠ[325] = f438(60, 60, 0, ⵠΔ[1275], 3);
    this.ᐃⲆⵠ[325].id = 325;
    this.ᐃΔⵠ[326] = f438(68, 68, 0, ⵠΔ[1280], 3);
    this.ᐃΔⵠ[326].id = 326;
    this.Ⲇⵠⵠ[326] = f438(60, 60, 0, ⵠΔ[1279], 3);
    this.Ⲇⵠⵠ[326].id = 326;
    this.ᐃⲆⵠ[326] = f438(60, 60, 0, ⵠΔ[1278], 3);
    this.ᐃⲆⵠ[326].id = 326;
    this.ᐃΔⵠ[330] = f438(68, 68, 0, ⵠΔ[1283], 3);
    this.ᐃΔⵠ[330].id = 330;
    this.Ⲇⵠⵠ[330] = f438(60, 60, 0, ⵠΔ[1282], 3);
    this.Ⲇⵠⵠ[330].id = 330;
    this.ᐃⲆⵠ[330] = f438(60, 60, 0, ⵠΔ[1281], 3);
    this.ᐃⲆⵠ[330].id = 330;
    this.ᐃΔⵠ[327] = f438(68, 68, 0, ⵠΔ[1292], 3);
    this.ᐃΔⵠ[327].id = 327;
    this.Ⲇⵠⵠ[327] = f438(60, 60, 0, ⵠΔ[1291], 3);
    this.Ⲇⵠⵠ[327].id = 327;
    this.ᐃⲆⵠ[327] = f438(60, 60, 0, ⵠΔ[1290], 3);
    this.ᐃⲆⵠ[327].id = 327;
    this.ᐃΔⵠ[329] = f438(68, 68, 0, ⵠΔ[1289], 3);
    this.ᐃΔⵠ[329].id = 329;
    this.Ⲇⵠⵠ[329] = f438(60, 60, 0, ⵠΔ[1288], 3);
    this.Ⲇⵠⵠ[329].id = 329;
    this.ᐃⲆⵠ[329] = f438(60, 60, 0, ⵠΔ[1287], 3);
    this.ᐃⲆⵠ[329].id = 329;
    this.ᐃΔⵠ[328] = f438(68, 68, 0, ⵠΔ[1286], 3);
    this.ᐃΔⵠ[328].id = 328;
    this.Ⲇⵠⵠ[328] = f438(60, 60, 0, ⵠΔ[1285], 3);
    this.Ⲇⵠⵠ[328].id = 328;
    this.ᐃⲆⵠ[328] = f438(60, 60, 0, ⵠΔ[1284], 3);
    this.ᐃⲆⵠ[328].id = 328;
    this.ᐃΔⵠ[246] = f438(68, 68, 0, ⵠΔ[1556], 3);
    this.ᐃΔⵠ[246].id = 246;
    this.Ⲇⵠⵠ[246] = f438(60, 60, 0, ⵠΔ[1554], 3);
    this.Ⲇⵠⵠ[246].id = 246;
    this.ᐃⲆⵠ[246] = f438(60, 60, 0, ⵠΔ[1555], 3);
    this.ᐃⲆⵠ[246].id = 246;
    this.ᐃΔⵠ[247] = f438(68, 68, 0, ⵠΔ[1560], 3);
    this.ᐃΔⵠ[247].id = 247;
    this.Ⲇⵠⵠ[247] = f438(60, 60, 0, ⵠΔ[1558], 3);
    this.Ⲇⵠⵠ[247].id = 247;
    this.ᐃⲆⵠ[247] = f438(60, 60, 0, ⵠΔ[1559], 3);
    this.ᐃⲆⵠ[247].id = 247;
    this.ᐃΔⵠ[248] = f438(68, 68, 0, ⵠΔ[1564], 3);
    this.ᐃΔⵠ[248].id = 248;
    this.Ⲇⵠⵠ[248] = f438(60, 60, 0, ⵠΔ[1562], 3);
    this.Ⲇⵠⵠ[248].id = 248;
    this.ᐃⲆⵠ[248] = f438(60, 60, 0, ⵠΔ[1563], 3);
    this.ᐃⲆⵠ[248].id = 248;
    this.ᐃΔⵠ[249] = f438(68, 68, 0, ⵠΔ[1568], 3);
    this.ᐃΔⵠ[249].id = 249;
    this.Ⲇⵠⵠ[249] = f438(60, 60, 0, ⵠΔ[1566], 3);
    this.Ⲇⵠⵠ[249].id = 249;
    this.ᐃⲆⵠ[249] = f438(60, 60, 0, ⵠΔ[1567], 3);
    this.ᐃⲆⵠ[249].id = 249;
    this.ᐃΔⵠ[250] = f438(68, 68, 0, ⵠΔ[1572], 3);
    this.ᐃΔⵠ[250].id = 250;
    this.Ⲇⵠⵠ[250] = f438(60, 60, 0, ⵠΔ[1570], 3);
    this.Ⲇⵠⵠ[250].id = 250;
    this.ᐃⲆⵠ[250] = f438(60, 60, 0, ⵠΔ[1571], 3);
    this.ᐃⲆⵠ[250].id = 250;
    this.ᐃΔⵠ[251] = f438(68, 68, 0, ⵠΔ[1576], 3);
    this.ᐃΔⵠ[251].id = 251;
    this.Ⲇⵠⵠ[251] = f438(60, 60, 0, ⵠΔ[1574], 3);
    this.Ⲇⵠⵠ[251].id = 251;
    this.ᐃⲆⵠ[251] = f438(60, 60, 0, ⵠΔ[1575], 3);
    this.ᐃⲆⵠ[251].id = 251;
    this.ᐃΔⵠ[252] = f438(68, 68, 0, ⵠΔ[1580], 3);
    this.ᐃΔⵠ[252].id = 252;
    this.Ⲇⵠⵠ[252] = f438(60, 60, 0, ⵠΔ[1578], 3);
    this.Ⲇⵠⵠ[252].id = 252;
    this.ᐃⲆⵠ[252] = f438(60, 60, 0, ⵠΔ[1579], 3);
    this.ᐃⲆⵠ[252].id = 252;
    this.ᐃΔⵠ[253] = f438(68, 68, 0, ⵠΔ[1584], 3);
    this.ᐃΔⵠ[253].id = 253;
    this.Ⲇⵠⵠ[253] = f438(60, 60, 0, ⵠΔ[1582], 3);
    this.Ⲇⵠⵠ[253].id = 253;
    this.ᐃⲆⵠ[253] = f438(60, 60, 0, ⵠΔ[1583], 3);
    this.ᐃⲆⵠ[253].id = 253;
    this.ᐃΔⵠ[254] = f438(68, 68, 0, ⵠΔ[1588], 3);
    this.ᐃΔⵠ[254].id = 254;
    this.Ⲇⵠⵠ[254] = f438(60, 60, 0, ⵠΔ[1586], 3);
    this.Ⲇⵠⵠ[254].id = 254;
    this.ᐃⲆⵠ[254] = f438(60, 60, 0, ⵠΔ[1587], 3);
    this.ᐃⲆⵠ[254].id = 254;
    this.ᐃΔⵠ[255] = f438(68, 68, 0, ⵠΔ[1592], 3);
    this.ᐃΔⵠ[255].id = 255;
    this.Ⲇⵠⵠ[255] = f438(60, 60, 0, ⵠΔ[1590], 3);
    this.Ⲇⵠⵠ[255].id = 255;
    this.ᐃⲆⵠ[255] = f438(60, 60, 0, ⵠΔ[1591], 3);
    this.ᐃⲆⵠ[255].id = 255;
    this.ᐃΔⵠ[256] = f438(68, 68, 0, ⵠΔ[1596], 3);
    this.ᐃΔⵠ[256].id = 256;
    this.Ⲇⵠⵠ[256] = f438(60, 60, 0, ⵠΔ[1594], 3);
    this.Ⲇⵠⵠ[256].id = 256;
    this.ᐃⲆⵠ[256] = f438(60, 60, 0, ⵠΔ[1595], 3);
    this.ᐃⲆⵠ[256].id = 256;
    this.ᐃΔⵠ[257] = f438(68, 68, 0, ⵠΔ[1600], 3);
    this.ᐃΔⵠ[257].id = 257;
    this.Ⲇⵠⵠ[257] = f438(60, 60, 0, ⵠΔ[1598], 3);
    this.Ⲇⵠⵠ[257].id = 257;
    this.ᐃⲆⵠ[257] = f438(60, 60, 0, ⵠΔ[1599], 3);
    this.ᐃⲆⵠ[257].id = 257;
    this.ᐃΔⵠ[258] = f438(68, 68, 0, ⵠΔ[1604], 3);
    this.ᐃΔⵠ[258].id = 258;
    this.Ⲇⵠⵠ[258] = f438(60, 60, 0, ⵠΔ[1602], 3);
    this.Ⲇⵠⵠ[258].id = 258;
    this.ᐃⲆⵠ[258] = f438(60, 60, 0, ⵠΔ[1603], 3);
    this.ᐃⲆⵠ[258].id = 258;
    this.ᐃΔⵠ[259] = f438(68, 68, 0, ⵠΔ[1608], 3);
    this.ᐃΔⵠ[259].id = 259;
    this.Ⲇⵠⵠ[259] = f438(60, 60, 0, ⵠΔ[1606], 3);
    this.Ⲇⵠⵠ[259].id = 259;
    this.ᐃⲆⵠ[259] = f438(60, 60, 0, ⵠΔ[1607], 3);
    this.ᐃⲆⵠ[259].id = 259;
    this.ᐃΔⵠ[305] = f438(68, 68, 0, ⵠΔ[1213], 3);
    this.ᐃΔⵠ[305].id = 305;
    this.Ⲇⵠⵠ[305] = f438(60, 60, 0, ⵠΔ[1212], 3);
    this.Ⲇⵠⵠ[305].id = 305;
    this.Ⲇⵠⵠ[305].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[305].info.ⵠⵠ[0];
    this.ᐃΔⵠ[243] = f438(68, 68, 0, ⵠΔ[662], 3);
    this.ᐃΔⵠ[243].id = 243;
    this.Ⲇⵠⵠ[243] = f438(60, 60, 0, ⵠΔ[661], 3);
    this.Ⲇⵠⵠ[243].id = 243;
    this.Ⲇⵠⵠ[243].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[243].info.ⵠⵠ[0];
    this.ᐃΔⵠ[304] = f438(68, 68, 0, ⵠΔ[1215], 3);
    this.ᐃΔⵠ[304].id = 304;
    this.Ⲇⵠⵠ[304] = f438(60, 60, 0, ⵠΔ[1214], 3);
    this.Ⲇⵠⵠ[304].id = 304;
    this.Ⲇⵠⵠ[304].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[304].info.ⵠⵠ[0];
    this.ᐃΔⵠ[28] = f438(68, 68, 0, ⵠΔ[1210], 3);
    this.ᐃΔⵠ[28].id = 28;
    this.Ⲇⵠⵠ[28] = f438(60, 60, 0, ⵠΔ[1208], 3);
    this.Ⲇⵠⵠ[28].id = 28;
    this.ᐃⲆⵠ[28] = f438(60, 60, 0, ⵠΔ[1209], 3);
    this.ᐃⲆⵠ[28].id = 28;
    this.ᐃΔⵠ[29] = f438(68, 68, 0, ⵠΔ[1199], 3);
    this.ᐃΔⵠ[29].id = 29;
    this.Ⲇⵠⵠ[29] = f438(60, 60, 0, ⵠΔ[1197], 3);
    this.Ⲇⵠⵠ[29].id = 29;
    this.ᐃⲆⵠ[29] = f438(60, 60, 0, ⵠΔ[1198], 3);
    this.ᐃⲆⵠ[29].id = 29;
    this.ᐃΔⵠ[30] = f438(68, 68, 0, ⵠΔ[1203], 3);
    this.ᐃΔⵠ[30].id = 30;
    this.Ⲇⵠⵠ[30] = f438(60, 60, 0, ⵠΔ[1201], 3);
    this.Ⲇⵠⵠ[30].id = 30;
    this.ᐃⲆⵠ[30] = f438(60, 60, 0, ⵠΔ[1202], 3);
    this.ᐃⲆⵠ[30].id = 30;
    this.ᐃΔⵠ[31] = f438(68, 68, 0, ⵠΔ[1207], 3);
    this.ᐃΔⵠ[31].id = 31;
    this.Ⲇⵠⵠ[31] = f438(60, 60, 0, ⵠΔ[1205], 3);
    this.Ⲇⵠⵠ[31].id = 31;
    this.ᐃⲆⵠ[31] = f438(60, 60, 0, ⵠΔ[1206], 3);
    this.ᐃⲆⵠ[31].id = 31;
    this.ᐃΔⵠ[106] = f438(68, 68, 0, ⵠΔ[985], 3);
    this.ᐃΔⵠ[106].id = 106;
    this.Ⲇⵠⵠ[106] = f438(60, 60, 0, ⵠΔ[984], 3);
    this.Ⲇⵠⵠ[106].id = 106;
    this.ᐃⲆⵠ[106] = f438(60, 60, 0, ⵠΔ[986], 3);
    this.ᐃⲆⵠ[106].id = 106;
    this.ᐃΔⵠ[163] = f438(68, 68, 0, ⵠΔ[988], 3);
    this.ᐃΔⵠ[163].id = 163;
    this.Ⲇⵠⵠ[163] = f438(60, 60, 0, ⵠΔ[987], 3);
    this.Ⲇⵠⵠ[163].id = 163;
    this.ᐃⲆⵠ[163] = f438(60, 60, 0, ⵠΔ[989], 3);
    this.ᐃⲆⵠ[163].id = 163;
    this.ᐃΔⵠ[165] = f438(68, 68, 0, ⵠΔ[994], 3);
    this.ᐃΔⵠ[165].id = 165;
    this.Ⲇⵠⵠ[165] = f438(60, 60, 0, ⵠΔ[993], 3);
    this.Ⲇⵠⵠ[165].id = 165;
    this.ᐃⲆⵠ[165] = f438(60, 60, 0, ⵠΔ[995], 3);
    this.ᐃⲆⵠ[165].id = 165;
    this.ᐃΔⵠ[166] = f438(68, 68, 0, ⵠΔ[997], 3);
    this.ᐃΔⵠ[166].id = 166;
    this.Ⲇⵠⵠ[166] = f438(60, 60, 0, ⵠΔ[996], 3);
    this.Ⲇⵠⵠ[166].id = 166;
    this.ᐃⲆⵠ[166] = f438(60, 60, 0, ⵠΔ[998], 3);
    this.ᐃⲆⵠ[166].id = 166;
    this.ᐃΔⵠ[164] = f438(68, 68, 0, ⵠΔ[991], 3);
    this.ᐃΔⵠ[164].id = 164;
    this.Ⲇⵠⵠ[164] = f438(60, 60, 0, ⵠΔ[990], 3);
    this.Ⲇⵠⵠ[164].id = 164;
    this.ᐃⲆⵠ[164] = f438(60, 60, 0, ⵠΔ[992], 3);
    this.ᐃⲆⵠ[164].id = 164;
    this.ᐃΔⵠ[182] = f438(68, 68, 0, ⵠΔ[1493], 3);
    this.ᐃΔⵠ[182].id = 182;
    this.Ⲇⵠⵠ[182] = f438(60, 60, 0, ⵠΔ[1492], 3);
    this.Ⲇⵠⵠ[182].id = 182;
    this.ᐃⲆⵠ[182] = f438(60, 60, 0, ⵠΔ[v594.ᐃⵠᐃΔᐃΔⵠⲆΔ], 3);
    this.ᐃⲆⵠ[182].id = 182;
    this.ᐃΔⵠ[61] = f438(68, 68, 0, ⵠΔ[1221], 3);
    this.ᐃΔⵠ[61].id = 61;
    this.Ⲇⵠⵠ[61] = f438(60, 60, 0, ⵠΔ[1219], 3);
    this.Ⲇⵠⵠ[61].id = 61;
    this.ᐃⲆⵠ[61] = f438(60, 60, 0, ⵠΔ[1220], 3);
    this.ᐃⲆⵠ[61].id = 61;
    this.ᐃΔⵠ[71] = f438(68, 68, 0, ⵠΔ[1224], 3);
    this.ᐃΔⵠ[71].id = 71;
    this.Ⲇⵠⵠ[71] = f438(60, 60, 0, ⵠΔ[1222], 3);
    this.Ⲇⵠⵠ[71].id = 71;
    this.ᐃⲆⵠ[71] = f438(60, 60, 0, ⵠΔ[1223], 3);
    this.ᐃⲆⵠ[71].id = 71;
    this.ᐃΔⵠ[17] = f438(68, 68, 0, ⵠΔ[1127], 3);
    this.ᐃΔⵠ[17].id = 17;
    this.Ⲇⵠⵠ[17] = f438(60, 60, 0, ⵠΔ[1126], 3);
    this.Ⲇⵠⵠ[17].id = 17;
    this.ᐃⲆⵠ[17] = f438(60, 60, 0, ⵠΔ[1128], 3);
    this.ᐃⲆⵠ[17].id = 17;
    this.ᐃΔⵠ[109] = f438(68, 68, 0, ⵠΔ[733], 3);
    this.ᐃΔⵠ[109].id = 109;
    this.Ⲇⵠⵠ[109] = f438(60, 60, 0, ⵠΔ[731], 3);
    this.Ⲇⵠⵠ[109].id = 109;
    this.ᐃⲆⵠ[109] = f438(60, 60, 0, ⵠΔ[732], 3);
    this.ᐃⲆⵠ[109].id = 109;
    this.ᐃΔⵠ[289] = f438(68, 68, 0, ⵠΔ[810], 3);
    this.ᐃΔⵠ[289].id = 289;
    this.Ⲇⵠⵠ[289] = f438(60, 60, 0, ⵠΔ[363], 3);
    this.Ⲇⵠⵠ[289].id = 289;
    this.ᐃΔⵠ[v595.ⲆᐃᐃⲆⵠᐃⵠ] = f438(68, 68, 0, ⵠΔ[v594.ᐃⵠⲆⵠⵠᐃⲆᐃΔ], 3);
    this.ᐃΔⵠ[v595.ⲆᐃᐃⲆⵠᐃⵠ].id = v595.ⲆᐃᐃⲆⵠᐃⵠ;
    this.Ⲇⵠⵠ[v595.ⲆᐃᐃⲆⵠᐃⵠ] = f438(60, 60, 0, ⵠΔ[v594.ᐃᐃΔⵠᐃΔⵠⲆᐃ], 3);
    this.Ⲇⵠⵠ[v595.ⲆᐃᐃⲆⵠᐃⵠ].id = v595.ⲆᐃᐃⲆⵠᐃⵠ;
    this.ᐃΔⵠ[v595.ᐃΔⲆᐃᐃᐃΔ] = f438(68, 68, 0, ⵠΔ[v594.ΔⵠᐃᐃⵠΔⵠᐃⲆ], 3);
    this.ᐃΔⵠ[v595.ᐃΔⲆᐃᐃᐃΔ].id = v595.ᐃΔⲆᐃᐃᐃΔ;
    this.Ⲇⵠⵠ[v595.ᐃΔⲆᐃᐃᐃΔ] = f438(60, 60, 0, ⵠΔ[v594.ⲆΔⲆᐃΔⵠΔΔⲆ], 3);
    this.Ⲇⵠⵠ[v595.ᐃΔⲆᐃᐃᐃΔ].id = v595.ᐃΔⲆᐃᐃᐃΔ;
    this.ᐃΔⵠ[v595.ΔᐃⵠᐃᐃⵠΔ] = f438(68, 68, 0, ⵠΔ[v594.ⲆⵠⵠΔᐃⵠΔᐃΔ], 3);
    this.ᐃΔⵠ[v595.ΔᐃⵠᐃᐃⵠΔ].id = v595.ΔᐃⵠᐃᐃⵠΔ;
    this.Ⲇⵠⵠ[v595.ΔᐃⵠᐃᐃⵠΔ] = f438(60, 60, 0, ⵠΔ[v594.ΔⲆⵠΔⲆΔΔᐃⲆ], 3);
    this.Ⲇⵠⵠ[v595.ΔᐃⵠᐃᐃⵠΔ].id = v595.ΔᐃⵠᐃᐃⵠΔ;
    this.ᐃΔⵠ[v595.ⵠⵠⲆⲆⲆⲆⵠ] = f438(68, 68, 0, ⵠΔ[v594.ⲆⲆᐃⲆⵠᐃΔⲆᐃ], 3);
    this.ᐃΔⵠ[v595.ⵠⵠⲆⲆⲆⲆⵠ].id = v595.ⵠⵠⲆⲆⲆⲆⵠ;
    this.Ⲇⵠⵠ[v595.ⵠⵠⲆⲆⲆⲆⵠ] = f438(60, 60, 0, ⵠΔ[v594.ΔᐃΔΔⲆⵠᐃΔⵠ], 3);
    this.Ⲇⵠⵠ[v595.ⵠⵠⲆⲆⲆⲆⵠ].id = v595.ⵠⵠⲆⲆⲆⲆⵠ;
    this.ᐃΔⵠ[v595.ⵠᐃⲆᐃΔⵠᐃ] = f438(68, 68, 0, ⵠΔ[v594.ⵠΔⵠΔⲆΔΔⲆΔ], 3);
    this.ᐃΔⵠ[v595.ⵠᐃⲆᐃΔⵠᐃ].id = v595.ⵠᐃⲆᐃΔⵠᐃ;
    this.Ⲇⵠⵠ[v595.ⵠᐃⲆᐃΔⵠᐃ] = f438(60, 60, 0, ⵠΔ[v594.ΔⵠᐃΔⲆⲆᐃⲆⲆ], 3);
    this.Ⲇⵠⵠ[v595.ⵠᐃⲆᐃΔⵠᐃ].id = v595.ⵠᐃⲆᐃΔⵠᐃ;
    this.ᐃΔⵠ[306] = f438(68, 68, 0, ⵠΔ[1721], 3);
    this.ᐃΔⵠ[306].id = 306;
    this.Ⲇⵠⵠ[306] = f438(60, 60, 0, ⵠΔ[1722], 3);
    this.Ⲇⵠⵠ[306].id = 306;
    this.Ⲇⵠⵠ[306].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[306].info.ⵠⵠ[0];
    this.ᐃΔⵠ[307] = f438(68, 68, 0, ⵠΔ[1723], 3);
    this.ᐃΔⵠ[307].id = 307;
    this.Ⲇⵠⵠ[307] = f438(60, 60, 0, ⵠΔ[1724], 3);
    this.Ⲇⵠⵠ[307].id = 307;
    this.Ⲇⵠⵠ[307].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[307].info.ⵠⵠ[0];
    this.ᐃΔⵠ[308] = f438(68, 68, 0, ⵠΔ[1725], 3);
    this.ᐃΔⵠ[308].id = 308;
    this.Ⲇⵠⵠ[308] = f438(60, 60, 0, ⵠΔ[1726], 3);
    this.Ⲇⵠⵠ[308].id = 308;
    this.Ⲇⵠⵠ[308].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[308].info.ⵠⵠ[0];
    this.ᐃΔⵠ[309] = f438(68, 68, 0, ⵠΔ[1727], 3);
    this.ᐃΔⵠ[309].id = 309;
    this.Ⲇⵠⵠ[309] = f438(60, 60, 0, ⵠΔ[1728], 3);
    this.Ⲇⵠⵠ[309].id = 309;
    this.Ⲇⵠⵠ[309].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[309].info.ⵠⵠ[0];
    this.ᐃΔⵠ[310] = f438(68, 68, 0, ⵠΔ[1729], 3);
    this.ᐃΔⵠ[310].id = 310;
    this.Ⲇⵠⵠ[310] = f438(60, 60, 0, ⵠΔ[1730], 3);
    this.Ⲇⵠⵠ[310].id = 310;
    this.Ⲇⵠⵠ[310].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[310].info.ⵠⵠ[0];
    this.ᐃΔⵠ[311] = f438(68, 68, 0, ⵠΔ[1731], 3);
    this.ᐃΔⵠ[311].id = 311;
    this.Ⲇⵠⵠ[311] = f438(60, 60, 0, ⵠΔ[1732], 3);
    this.Ⲇⵠⵠ[311].id = 311;
    this.Ⲇⵠⵠ[311].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[311].info.ⵠⵠ[0];
    this.ᐃΔⵠ[313] = f438(68, 68, 0, ⵠΔ[1735], 3);
    this.ᐃΔⵠ[313].id = 313;
    this.Ⲇⵠⵠ[313] = f438(60, 60, 0, ⵠΔ[1736], 3);
    this.Ⲇⵠⵠ[313].id = 313;
    this.Ⲇⵠⵠ[313].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[313].info.ⵠⵠ[0];
    this.ᐃΔⵠ[312] = f438(68, 68, 0, ⵠΔ[1733], 3);
    this.ᐃΔⵠ[312].id = 312;
    this.Ⲇⵠⵠ[312] = f438(60, 60, 0, ⵠΔ[1734], 3);
    this.Ⲇⵠⵠ[312].id = 312;
    this.Ⲇⵠⵠ[312].info.ⵠⵠ[2] = this.Ⲇⵠⵠ[312].info.ⵠⵠ[0];
    this.ᐃΔⵠ[357] = f438(68, 68, 0, ⵠΔ[1742], 3);
    this.ᐃΔⵠ[357].id = 357;
    this.Ⲇⵠⵠ[357] = f438(60, 60, 0, ⵠΔ[1740], 3);
    this.Ⲇⵠⵠ[357].id = 357;
    this.ᐃⲆⵠ[357] = f438(60, 60, 0, ⵠΔ[1741], 3);
    this.ᐃⲆⵠ[357].id = 357;
    this.ᐃΔⵠ[356] = f438(68, 68, 0, ⵠΔ[1737], 3);
    this.ᐃΔⵠ[356].id = 356;
    this.Ⲇⵠⵠ[356] = f438(60, 60, 0, ⵠΔ[1738], 3);
    this.Ⲇⵠⵠ[356].id = 356;
    this.ᐃΔⵠ[357] = f438(68, 68, 0, ⵠΔ[1742], 3);
    this.ᐃΔⵠ[357].id = 357;
    this.Ⲇⵠⵠ[357] = f438(60, 60, 0, ⵠΔ[1740], 3);
    this.Ⲇⵠⵠ[357].id = 357;
    this.ᐃⲆⵠ[357] = f438(60, 60, 0, ⵠΔ[1741], 3);
    this.ᐃⲆⵠ[357].id = 357;
    this.ᐃΔⵠ[37] = f438(68, 68, 0, ⵠΔ[551], 3);
    this.ᐃΔⵠ[37].id = 37;
    this.Ⲇⵠⵠ[37] = f438(60, 60, 0, ⵠΔ[549], 3);
    this.Ⲇⵠⵠ[37].id = 37;
    this.ᐃⲆⵠ[37] = f438(60, 60, 0, ⵠΔ[550], 3);
    this.ᐃⲆⵠ[37].id = 37;
    this.ᐃΔⵠ[38] = f438(68, 68, 0, ⵠΔ[554], 3);
    this.ᐃΔⵠ[38].id = 38;
    this.Ⲇⵠⵠ[38] = f438(60, 60, 0, ⵠΔ[552], 3);
    this.Ⲇⵠⵠ[38].id = 38;
    this.ᐃⲆⵠ[38] = f438(60, 60, 0, ⵠΔ[553], 3);
    this.ᐃⲆⵠ[38].id = 38;
    this.ᐃΔⵠ[39] = f438(68, 68, 0, ⵠΔ[557], 3);
    this.ᐃΔⵠ[39].id = 39;
    this.Ⲇⵠⵠ[39] = f438(60, 60, 0, ⵠΔ[555], 3);
    this.Ⲇⵠⵠ[39].id = 39;
    this.ᐃⲆⵠ[39] = f438(60, 60, 0, ⵠΔ[556], 3);
    this.ᐃⲆⵠ[39].id = 39;
    this.ᐃΔⵠ[40] = f438(68, 68, 0, ⵠΔ[560], 3);
    this.ᐃΔⵠ[40].id = 40;
    this.Ⲇⵠⵠ[40] = f438(60, 60, 0, ⵠΔ[558], 3);
    this.Ⲇⵠⵠ[40].id = 40;
    this.ᐃⲆⵠ[40] = f438(60, 60, 0, ⵠΔ[559], 3);
    this.ᐃⲆⵠ[40].id = 40;
    this.ᐃΔⵠ[41] = f438(68, 68, 0, ⵠΔ[563], 3);
    this.ᐃΔⵠ[41].id = 41;
    this.Ⲇⵠⵠ[41] = f438(60, 60, 0, ⵠΔ[561], 3);
    this.Ⲇⵠⵠ[41].id = 41;
    this.ᐃⲆⵠ[41] = f438(60, 60, 0, ⵠΔ[562], 3);
    this.ᐃⲆⵠ[41].id = 41;
    this.ᐃΔⵠ[42] = f438(68, 68, 0, ⵠΔ[566], 3);
    this.ᐃΔⵠ[42].id = 42;
    this.Ⲇⵠⵠ[42] = f438(60, 60, 0, ⵠΔ[564], 3);
    this.Ⲇⵠⵠ[42].id = 42;
    this.ᐃⲆⵠ[42] = f438(60, 60, 0, ⵠΔ[565], 3);
    this.ᐃⲆⵠ[42].id = 42;
    this.ᐃΔⵠ[43] = f438(68, 68, 0, ⵠΔ[569], 3);
    this.ᐃΔⵠ[43].id = 43;
    this.Ⲇⵠⵠ[43] = f438(60, 60, 0, ⵠΔ[567], 3);
    this.Ⲇⵠⵠ[43].id = 43;
    this.ᐃⲆⵠ[43] = f438(60, 60, 0, ⵠΔ[568], 3);
    this.ᐃⲆⵠ[43].id = 43;
    this.ᐃΔⵠ[44] = f438(68, 68, 0, ⵠΔ[572], 3);
    this.ᐃΔⵠ[44].id = 44;
    this.Ⲇⵠⵠ[44] = f438(60, 60, 0, ⵠΔ[570], 3);
    this.Ⲇⵠⵠ[44].id = 44;
    this.ᐃⲆⵠ[44] = f438(60, 60, 0, ⵠΔ[571], 3);
    this.ᐃⲆⵠ[44].id = 44;
    this.ᐃΔⵠ[45] = f438(68, 68, 0, ⵠΔ[575], 3);
    this.ᐃΔⵠ[45].id = 45;
    this.Ⲇⵠⵠ[45] = f438(60, 60, 0, ⵠΔ[573], 3);
    this.Ⲇⵠⵠ[45].id = 45;
    this.ᐃⲆⵠ[45] = f438(60, 60, 0, ⵠΔ[574], 3);
    this.ᐃⲆⵠ[45].id = 45;
    this.ᐃΔⵠ[51] = f438(68, 68, 0, ⵠΔ[1297], 3);
    this.ᐃΔⵠ[51].id = 51;
    this.Ⲇⵠⵠ[51] = f438(60, 60, 0, ⵠΔ[1296], 3);
    this.Ⲇⵠⵠ[51].id = 51;
    this.ᐃⲆⵠ[51] = f438(60, 60, 0, ⵠΔ[1298], 3);
    this.ᐃⲆⵠ[51].id = 51;
    this.ᐃΔⵠ[52] = f438(68, 68, 0, ⵠΔ[1300], 3);
    this.ᐃΔⵠ[52].id = 52;
    this.Ⲇⵠⵠ[52] = f438(60, 60, 0, ⵠΔ[1299], 3);
    this.Ⲇⵠⵠ[52].id = 52;
    this.ᐃⲆⵠ[52] = f438(60, 60, 0, ⵠΔ[1301], 3);
    this.ᐃⲆⵠ[52].id = 52;
    this.ᐃΔⵠ[53] = f438(68, 68, 0, ⵠΔ[1303], 3);
    this.ᐃΔⵠ[53].id = 53;
    this.Ⲇⵠⵠ[53] = f438(60, 60, 0, ⵠΔ[1302], 3);
    this.Ⲇⵠⵠ[53].id = 53;
    this.ᐃⲆⵠ[53] = f438(60, 60, 0, ⵠΔ[1304], 3);
    this.ᐃⲆⵠ[53].id = 53;
    this.ᐃΔⵠ[54] = f438(68, 68, 0, ⵠΔ[1306], 3);
    this.ᐃΔⵠ[54].id = 54;
    this.Ⲇⵠⵠ[54] = f438(60, 60, 0, ⵠΔ[1305], 3);
    this.Ⲇⵠⵠ[54].id = 54;
    this.ᐃⲆⵠ[54] = f438(60, 60, 0, ⵠΔ[1307], 3);
    this.ᐃⲆⵠ[54].id = 54;
    this.ᐃΔⵠ[55] = f438(68, 68, 0, ⵠΔ[1309], 3);
    this.ᐃΔⵠ[55].id = 55;
    this.Ⲇⵠⵠ[55] = f438(60, 60, 0, ⵠΔ[1308], 3);
    this.Ⲇⵠⵠ[55].id = 55;
    this.ᐃⲆⵠ[55] = f438(60, 60, 0, ⵠΔ[1310], 3);
    this.ᐃⲆⵠ[55].id = 55;
    this.ᐃΔⵠ[56] = f438(68, 68, 0, ⵠΔ[1312], 3);
    this.ᐃΔⵠ[56].id = 56;
    this.Ⲇⵠⵠ[56] = f438(60, 60, 0, ⵠΔ[1311], 3);
    this.Ⲇⵠⵠ[56].id = 56;
    this.ᐃⲆⵠ[56] = f438(60, 60, 0, ⵠΔ[1313], 3);
    this.ᐃⲆⵠ[56].id = 56;
    this.ᐃΔⵠ[57] = f438(68, 68, 0, ⵠΔ[1315], 3);
    this.ᐃΔⵠ[57].id = 57;
    this.Ⲇⵠⵠ[57] = f438(60, 60, 0, ⵠΔ[1314], 3);
    this.Ⲇⵠⵠ[57].id = 57;
    this.ᐃⲆⵠ[57] = f438(60, 60, 0, ⵠΔ[1316], 3);
    this.ᐃⲆⵠ[57].id = 57;
    this.ᐃΔⵠ[59] = f438(68, 68, 0, ⵠΔ[1321], 3);
    this.ᐃΔⵠ[59].id = 59;
    this.Ⲇⵠⵠ[59] = f438(60, 60, 0, ⵠΔ[1320], 3);
    this.Ⲇⵠⵠ[59].id = 59;
    this.ᐃⲆⵠ[59] = f438(60, 60, 0, ⵠΔ[1322], 3);
    this.ᐃⲆⵠ[59].id = 59;
    this.ᐃΔⵠ[58] = f438(68, 68, 0, ⵠΔ[1318], 3);
    this.ᐃΔⵠ[58].id = 58;
    this.Ⲇⵠⵠ[58] = f438(60, 60, 0, ⵠΔ[1317], 3);
    this.Ⲇⵠⵠ[58].id = 58;
    this.ᐃⲆⵠ[58] = f438(60, 60, 0, ⵠΔ[1319], 3);
    this.ᐃⲆⵠ[58].id = 58;
    this.ᐃΔⵠ[73] = f438(68, 68, 0, ⵠΔ[693], 3);
    this.ᐃΔⵠ[73].id = 73;
    this.Ⲇⵠⵠ[73] = f438(60, 60, 0, ⵠΔ[691], 3);
    this.Ⲇⵠⵠ[73].id = 73;
    this.ᐃⲆⵠ[73] = f438(60, 60, 0, ⵠΔ[692], 3);
    this.ᐃⲆⵠ[73].id = 73;
    this.ᐃΔⵠ[74] = f438(68, 68, 0, ⵠΔ[696], 3);
    this.ᐃΔⵠ[74].id = 74;
    this.Ⲇⵠⵠ[74] = f438(60, 60, 0, ⵠΔ[694], 3);
    this.Ⲇⵠⵠ[74].id = 74;
    this.ᐃⲆⵠ[74] = f438(60, 60, 0, ⵠΔ[695], 3);
    this.ᐃⲆⵠ[74].id = 74;
    this.ᐃΔⵠ[75] = f438(68, 68, 0, ⵠΔ[699], 3);
    this.ᐃΔⵠ[75].id = 75;
    this.Ⲇⵠⵠ[75] = f438(60, 60, 0, ⵠΔ[697], 3);
    this.Ⲇⵠⵠ[75].id = 75;
    this.ᐃⲆⵠ[75] = f438(60, 60, 0, ⵠΔ[698], 3);
    this.ᐃⲆⵠ[75].id = 75;
    this.ᐃΔⵠ[76] = f438(68, 68, 0, ⵠΔ[702], 3);
    this.ᐃΔⵠ[76].id = 76;
    this.Ⲇⵠⵠ[76] = f438(60, 60, 0, ⵠΔ[700], 3);
    this.Ⲇⵠⵠ[76].id = 76;
    this.ᐃⲆⵠ[76] = f438(60, 60, 0, ⵠΔ[701], 3);
    this.ᐃⲆⵠ[76].id = 76;
    this.ᐃΔⵠ[77] = f438(68, 68, 0, ⵠΔ[705], 3);
    this.ᐃΔⵠ[77].id = 77;
    this.Ⲇⵠⵠ[77] = f438(60, 60, 0, ⵠΔ[703], 3);
    this.Ⲇⵠⵠ[77].id = 77;
    this.ᐃⲆⵠ[77] = f438(60, 60, 0, ⵠΔ[704], 3);
    this.ᐃⲆⵠ[77].id = 77;
    this.ᐃΔⵠ[78] = f438(68, 68, 0, ⵠΔ[708], 3);
    this.ᐃΔⵠ[78].id = 78;
    this.Ⲇⵠⵠ[78] = f438(60, 60, 0, ⵠΔ[706], 3);
    this.Ⲇⵠⵠ[78].id = 78;
    this.ᐃⲆⵠ[78] = f438(60, 60, 0, ⵠΔ[707], 3);
    this.ᐃⲆⵠ[78].id = 78;
    this.ᐃΔⵠ[79] = f438(68, 68, 0, ⵠΔ[711], 3);
    this.ᐃΔⵠ[79].id = 79;
    this.Ⲇⵠⵠ[79] = f438(60, 60, 0, ⵠΔ[709], 3);
    this.Ⲇⵠⵠ[79].id = 79;
    this.ᐃⲆⵠ[79] = f438(60, 60, 0, ⵠΔ[710], 3);
    this.ᐃⲆⵠ[79].id = 79;
    this.ᐃΔⵠ[81] = f438(68, 68, 0, ⵠΔ[717], 3);
    this.ᐃΔⵠ[81].id = 81;
    this.Ⲇⵠⵠ[81] = f438(60, 60, 0, ⵠΔ[715], 3);
    this.Ⲇⵠⵠ[81].id = 81;
    this.ᐃⲆⵠ[81] = f438(60, 60, 0, ⵠΔ[716], 3);
    this.ᐃⲆⵠ[81].id = 81;
    this.ᐃΔⵠ[80] = f438(68, 68, 0, ⵠΔ[714], 3);
    this.ᐃΔⵠ[80].id = 80;
    this.Ⲇⵠⵠ[80] = f438(60, 60, 0, ⵠΔ[712], 3);
    this.Ⲇⵠⵠ[80].id = 80;
    this.ᐃⲆⵠ[80] = f438(60, 60, 0, ⵠΔ[713], 3);
    this.ᐃⲆⵠ[80].id = 80;
    this.ᐃΔⵠ[90] = f438(68, 68, 0, ⵠΔ[929], 3);
    this.ᐃΔⵠ[90].id = 90;
    this.Ⲇⵠⵠ[90] = f438(60, 60, 0, ⵠΔ[927], 3);
    this.Ⲇⵠⵠ[90].id = 90;
    this.ᐃⲆⵠ[90] = f438(60, 60, 0, ⵠΔ[928], 3);
    this.ᐃⲆⵠ[90].id = 90;
    this.ᐃΔⵠ[91] = f438(68, 68, 0, ⵠΔ[932], 3);
    this.ᐃΔⵠ[91].id = 91;
    this.Ⲇⵠⵠ[91] = f438(60, 60, 0, ⵠΔ[930], 3);
    this.Ⲇⵠⵠ[91].id = 91;
    this.ᐃⲆⵠ[91] = f438(60, 60, 0, ⵠΔ[931], 3);
    this.ᐃⲆⵠ[91].id = 91;
    this.ᐃΔⵠ[92] = f438(68, 68, 0, ⵠΔ[935], 3);
    this.ᐃΔⵠ[92].id = 92;
    this.Ⲇⵠⵠ[92] = f438(60, 60, 0, ⵠΔ[933], 3);
    this.Ⲇⵠⵠ[92].id = 92;
    this.ᐃⲆⵠ[92] = f438(60, 60, 0, ⵠΔ[934], 3);
    this.ᐃⲆⵠ[92].id = 92;
    this.ᐃΔⵠ[93] = f438(68, 68, 0, ⵠΔ[938], 3);
    this.ᐃΔⵠ[93].id = 93;
    this.Ⲇⵠⵠ[93] = f438(60, 60, 0, ⵠΔ[936], 3);
    this.Ⲇⵠⵠ[93].id = 93;
    this.ᐃⲆⵠ[93] = f438(60, 60, 0, ⵠΔ[937], 3);
    this.ᐃⲆⵠ[93].id = 93;
    this.ᐃΔⵠ[94] = f438(68, 68, 0, ⵠΔ[941], 3);
    this.ᐃΔⵠ[94].id = 94;
    this.Ⲇⵠⵠ[94] = f438(60, 60, 0, ⵠΔ[939], 3);
    this.Ⲇⵠⵠ[94].id = 94;
    this.ᐃⲆⵠ[94] = f438(60, 60, 0, ⵠΔ[940], 3);
    this.ᐃⲆⵠ[94].id = 94;
    this.ᐃΔⵠ[95] = f438(68, 68, 0, ⵠΔ[944], 3);
    this.ᐃΔⵠ[95].id = 95;
    this.Ⲇⵠⵠ[95] = f438(60, 60, 0, ⵠΔ[942], 3);
    this.Ⲇⵠⵠ[95].id = 95;
    this.ᐃⲆⵠ[95] = f438(60, 60, 0, ⵠΔ[943], 3);
    this.ᐃⲆⵠ[95].id = 95;
    this.ᐃΔⵠ[96] = f438(68, 68, 0, ⵠΔ[947], 3);
    this.ᐃΔⵠ[96].id = 96;
    this.Ⲇⵠⵠ[96] = f438(60, 60, 0, ⵠΔ[945], 3);
    this.Ⲇⵠⵠ[96].id = 96;
    this.ᐃⲆⵠ[96] = f438(60, 60, 0, ⵠΔ[946], 3);
    this.ᐃⲆⵠ[96].id = 96;
    this.ᐃΔⵠ[98] = f438(68, 68, 0, ⵠΔ[953], 3);
    this.ᐃΔⵠ[98].id = 98;
    this.Ⲇⵠⵠ[98] = f438(60, 60, 0, ⵠΔ[951], 3);
    this.Ⲇⵠⵠ[98].id = 98;
    this.ᐃⲆⵠ[98] = f438(60, 60, 0, ⵠΔ[952], 3);
    this.ᐃⲆⵠ[98].id = 98;
    this.ᐃΔⵠ[97] = f438(68, 68, 0, ⵠΔ[950], 3);
    this.ᐃΔⵠ[97].id = 97;
    this.Ⲇⵠⵠ[97] = f438(60, 60, 0, ⵠΔ[948], 3);
    this.Ⲇⵠⵠ[97].id = 97;
    this.ᐃⲆⵠ[97] = f438(60, 60, 0, ⵠΔ[949], 3);
    this.ᐃⲆⵠ[97].id = 97;
    this.ᐃΔⵠ[89] = f438(68, 68, 0, ⵠΔ[956], 3);
    this.ᐃΔⵠ[89].id = 89;
    this.Ⲇⵠⵠ[89] = f438(60, 60, 0, ⵠΔ[954], 3);
    this.Ⲇⵠⵠ[89].id = 89;
    this.ᐃⲆⵠ[89] = f438(60, 60, 0, ⵠΔ[955], 3);
    this.ᐃⲆⵠ[89].id = 89;
    this.ᐃΔⵠ[110] = f438(68, 68, 0, ⵠΔ[736], 3);
    this.ᐃΔⵠ[110].id = 110;
    this.Ⲇⵠⵠ[110] = f438(60, 60, 0, ⵠΔ[734], 3);
    this.Ⲇⵠⵠ[110].id = 110;
    this.ᐃⲆⵠ[110] = f438(60, 60, 0, ⵠΔ[735], 3);
    this.ᐃⲆⵠ[110].id = 110;
    this.ᐃΔⵠ[111] = f438(68, 68, 0, ⵠΔ[739], 3);
    this.ᐃΔⵠ[111].id = 111;
    this.Ⲇⵠⵠ[111] = f438(60, 60, 0, ⵠΔ[737], 3);
    this.Ⲇⵠⵠ[111].id = 111;
    this.ᐃⲆⵠ[111] = f438(60, 60, 0, ⵠΔ[738], 3);
    this.ᐃⲆⵠ[111].id = 111;
    this.ᐃΔⵠ[112] = f438(68, 68, 0, ⵠΔ[742], 3);
    this.ᐃΔⵠ[112].id = 112;
    this.Ⲇⵠⵠ[112] = f438(60, 60, 0, ⵠΔ[740], 3);
    this.Ⲇⵠⵠ[112].id = 112;
    this.ᐃⲆⵠ[112] = f438(60, 60, 0, ⵠΔ[741], 3);
    this.ᐃⲆⵠ[112].id = 112;
    this.ᐃΔⵠ[113] = f438(68, 68, 0, ⵠΔ[745], 3);
    this.ᐃΔⵠ[113].id = 113;
    this.Ⲇⵠⵠ[113] = f438(60, 60, 0, ⵠΔ[743], 3);
    this.Ⲇⵠⵠ[113].id = 113;
    this.ᐃⲆⵠ[113] = f438(60, 60, 0, ⵠΔ[744], 3);
    this.ᐃⲆⵠ[113].id = 113;
    this.ᐃΔⵠ[114] = f438(68, 68, 0, ⵠΔ[748], 3);
    this.ᐃΔⵠ[114].id = 114;
    this.Ⲇⵠⵠ[114] = f438(60, 60, 0, ⵠΔ[746], 3);
    this.Ⲇⵠⵠ[114].id = 114;
    this.ᐃⲆⵠ[114] = f438(60, 60, 0, ⵠΔ[747], 3);
    this.ᐃⲆⵠ[114].id = 114;
    this.ᐃΔⵠ[115] = f438(68, 68, 0, ⵠΔ[751], 3);
    this.ᐃΔⵠ[115].id = 115;
    this.Ⲇⵠⵠ[115] = f438(60, 60, 0, ⵠΔ[749], 3);
    this.Ⲇⵠⵠ[115].id = 115;
    this.ᐃⲆⵠ[115] = f438(60, 60, 0, ⵠΔ[750], 3);
    this.ᐃⲆⵠ[115].id = 115;
    this.ᐃΔⵠ[116] = f438(68, 68, 0, ⵠΔ[754], 3);
    this.ᐃΔⵠ[116].id = 116;
    this.Ⲇⵠⵠ[116] = f438(60, 60, 0, ⵠΔ[752], 3);
    this.Ⲇⵠⵠ[116].id = 116;
    this.ᐃⲆⵠ[116] = f438(60, 60, 0, ⵠΔ[753], 3);
    this.ᐃⲆⵠ[116].id = 116;
    this.ᐃΔⵠ[118] = f438(68, 68, 0, ⵠΔ[760], 3);
    this.ᐃΔⵠ[118].id = 118;
    this.Ⲇⵠⵠ[118] = f438(60, 60, 0, ⵠΔ[758], 3);
    this.Ⲇⵠⵠ[118].id = 118;
    this.ᐃⲆⵠ[118] = f438(60, 60, 0, ⵠΔ[759], 3);
    this.ᐃⲆⵠ[118].id = 118;
    this.ᐃΔⵠ[117] = f438(68, 68, 0, ⵠΔ[757], 3);
    this.ᐃΔⵠ[117].id = 117;
    this.Ⲇⵠⵠ[117] = f438(60, 60, 0, ⵠΔ[755], 3);
    this.Ⲇⵠⵠ[117].id = 117;
    this.ᐃⲆⵠ[117] = f438(60, 60, 0, ⵠΔ[756], 3);
    this.ᐃⲆⵠ[117].id = 117;
    this.ᐃΔⵠ[19] = f438(68, 68, 0, ⵠΔ[1130], 3);
    this.ᐃΔⵠ[19].id = 19;
    this.Ⲇⵠⵠ[19] = f438(60, 60, 0, ⵠΔ[1129], 3);
    this.Ⲇⵠⵠ[19].id = 19;
    this.ᐃⲆⵠ[19] = f438(60, 60, 0, ⵠΔ[1131], 3);
    this.ᐃⲆⵠ[19].id = 19;
    this.ᐃΔⵠ[20] = f438(68, 68, 0, ⵠΔ[1133], 3);
    this.ᐃΔⵠ[20].id = 20;
    this.Ⲇⵠⵠ[20] = f438(60, 60, 0, ⵠΔ[1132], 3);
    this.Ⲇⵠⵠ[20].id = 20;
    this.ᐃⲆⵠ[20] = f438(60, 60, 0, ⵠΔ[1134], 3);
    this.ᐃⲆⵠ[20].id = 20;
    this.ᐃΔⵠ[21] = f438(68, 68, 0, ⵠΔ[1136], 3);
    this.ᐃΔⵠ[21].id = 21;
    this.Ⲇⵠⵠ[21] = f438(60, 60, 0, ⵠΔ[1135], 3);
    this.Ⲇⵠⵠ[21].id = 21;
    this.ᐃⲆⵠ[21] = f438(60, 60, 0, ⵠΔ[1137], 3);
    this.ᐃⲆⵠ[21].id = 21;
    this.ᐃΔⵠ[22] = f438(68, 68, 0, ⵠΔ[1139], 3);
    this.ᐃΔⵠ[22].id = 22;
    this.Ⲇⵠⵠ[22] = f438(60, 60, 0, ⵠΔ[1138], 3);
    this.Ⲇⵠⵠ[22].id = 22;
    this.ᐃⲆⵠ[22] = f438(60, 60, 0, ⵠΔ[1140], 3);
    this.ᐃⲆⵠ[22].id = 22;
    this.ᐃΔⵠ[23] = f438(68, 68, 0, ⵠΔ[1142], 3);
    this.ᐃΔⵠ[23].id = 23;
    this.Ⲇⵠⵠ[23] = f438(60, 60, 0, ⵠΔ[1141], 3);
    this.Ⲇⵠⵠ[23].id = 23;
    this.ᐃⲆⵠ[23] = f438(60, 60, 0, ⵠΔ[1143], 3);
    this.ᐃⲆⵠ[23].id = 23;
    this.ᐃΔⵠ[24] = f438(68, 68, 0, ⵠΔ[1145], 3);
    this.ᐃΔⵠ[24].id = 24;
    this.Ⲇⵠⵠ[24] = f438(60, 60, 0, ⵠΔ[1144], 3);
    this.Ⲇⵠⵠ[24].id = 24;
    this.ᐃⲆⵠ[24] = f438(60, 60, 0, ⵠΔ[1146], 3);
    this.ᐃⲆⵠ[24].id = 24;
    this.ᐃΔⵠ[25] = f438(68, 68, 0, ⵠΔ[1148], 3);
    this.ᐃΔⵠ[25].id = 25;
    this.Ⲇⵠⵠ[25] = f438(60, 60, 0, ⵠΔ[1147], 3);
    this.Ⲇⵠⵠ[25].id = 25;
    this.ᐃⲆⵠ[25] = f438(60, 60, 0, ⵠΔ[1149], 3);
    this.ᐃⲆⵠ[25].id = 25;
    this.ᐃΔⵠ[27] = f438(68, 68, 0, ⵠΔ[1154], 3);
    this.ᐃΔⵠ[27].id = 27;
    this.Ⲇⵠⵠ[27] = f438(60, 60, 0, ⵠΔ[1153], 3);
    this.Ⲇⵠⵠ[27].id = 27;
    this.ᐃⲆⵠ[27] = f438(60, 60, 0, ⵠΔ[1155], 3);
    this.ᐃⲆⵠ[27].id = 27;
    this.ᐃΔⵠ[26] = f438(68, 68, 0, ⵠΔ[1151], 3);
    this.ᐃΔⵠ[26].id = 26;
    this.Ⲇⵠⵠ[26] = f438(60, 60, 0, ⵠΔ[1150], 3);
    this.Ⲇⵠⵠ[26].id = 26;
    this.ᐃⲆⵠ[26] = f438(60, 60, 0, ⵠΔ[1152], 3);
    this.ᐃⲆⵠ[26].id = 26;
    this.ᐃΔⵠ[126] = f438(68, 68, 0, ⵠΔ[784], 3);
    this.ᐃΔⵠ[126].id = 126;
    this.Ⲇⵠⵠ[126] = f438(60, 60, 0, ⵠΔ[782], 3);
    this.Ⲇⵠⵠ[126].id = 126;
    this.ᐃⲆⵠ[126] = f438(60, 60, 0, ⵠΔ[783], 3);
    this.ᐃⲆⵠ[126].id = 126;
    this.ᐃΔⵠ[127] = f438(68, 68, 0, ⵠΔ[787], 3);
    this.ᐃΔⵠ[127].id = 127;
    this.Ⲇⵠⵠ[127] = f438(60, 60, 0, ⵠΔ[785], 3);
    this.Ⲇⵠⵠ[127].id = 127;
    this.ᐃⲆⵠ[127] = f438(60, 60, 0, ⵠΔ[786], 3);
    this.ᐃⲆⵠ[127].id = 127;
    this.ᐃΔⵠ[128] = f438(68, 68, 0, ⵠΔ[790], 3);
    this.ᐃΔⵠ[128].id = 128;
    this.Ⲇⵠⵠ[128] = f438(60, 60, 0, ⵠΔ[788], 3);
    this.Ⲇⵠⵠ[128].id = 128;
    this.ᐃⲆⵠ[128] = f438(60, 60, 0, ⵠΔ[789], 3);
    this.ᐃⲆⵠ[128].id = 128;
    this.ᐃΔⵠ[129] = f438(68, 68, 0, ⵠΔ[793], 3);
    this.ᐃΔⵠ[129].id = 129;
    this.Ⲇⵠⵠ[129] = f438(60, 60, 0, ⵠΔ[791], 3);
    this.Ⲇⵠⵠ[129].id = 129;
    this.ᐃⲆⵠ[129] = f438(60, 60, 0, ⵠΔ[792], 3);
    this.ᐃⲆⵠ[129].id = 129;
    this.ᐃΔⵠ[130] = f438(68, 68, 0, ⵠΔ[796], 3);
    this.ᐃΔⵠ[130].id = 130;
    this.Ⲇⵠⵠ[130] = f438(60, 60, 0, ⵠΔ[794], 3);
    this.Ⲇⵠⵠ[130].id = 130;
    this.ᐃⲆⵠ[130] = f438(60, 60, 0, ⵠΔ[795], 3);
    this.ᐃⲆⵠ[130].id = 130;
    this.ᐃΔⵠ[131] = f438(68, 68, 0, ⵠΔ[799], 3);
    this.ᐃΔⵠ[131].id = 131;
    this.Ⲇⵠⵠ[131] = f438(60, 60, 0, ⵠΔ[797], 3);
    this.Ⲇⵠⵠ[131].id = 131;
    this.ᐃⲆⵠ[131] = f438(60, 60, 0, ⵠΔ[798], 3);
    this.ᐃⲆⵠ[131].id = 131;
    this.ᐃΔⵠ[132] = f438(68, 68, 0, ⵠΔ[802], 3);
    this.ᐃΔⵠ[132].id = 132;
    this.Ⲇⵠⵠ[132] = f438(60, 60, 0, ⵠΔ[800], 3);
    this.Ⲇⵠⵠ[132].id = 132;
    this.ᐃⲆⵠ[132] = f438(60, 60, 0, ⵠΔ[801], 3);
    this.ᐃⲆⵠ[132].id = 132;
    this.ᐃΔⵠ[134] = f438(68, 68, 0, ⵠΔ[808], 3);
    this.ᐃΔⵠ[134].id = 134;
    this.Ⲇⵠⵠ[134] = f438(60, 60, 0, ⵠΔ[806], 3);
    this.Ⲇⵠⵠ[134].id = 134;
    this.ᐃⲆⵠ[134] = f438(60, 60, 0, ⵠΔ[807], 3);
    this.ᐃⲆⵠ[134].id = 134;
    this.ᐃΔⵠ[133] = f438(68, 68, 0, ⵠΔ[805], 3);
    this.ᐃΔⵠ[133].id = 133;
    this.Ⲇⵠⵠ[133] = f438(60, 60, 0, ⵠΔ[803], 3);
    this.Ⲇⵠⵠ[133].id = 133;
    this.ᐃⲆⵠ[133] = f438(60, 60, 0, ⵠΔ[804], 3);
    this.ᐃⲆⵠ[133].id = 133;
    this.ᐃΔⵠ[190] = f438(68, 68, 0, ⵠΔ[1516], 3);
    this.ᐃΔⵠ[190].id = 190;
    this.Ⲇⵠⵠ[190] = f438(60, 60, 0, ⵠΔ[1515], 3);
    this.Ⲇⵠⵠ[190].id = 190;
    this.ᐃⲆⵠ[190] = f438(60, 60, 0, ⵠΔ[1517], 3);
    this.ᐃⲆⵠ[190].id = 190;
    this.ᐃΔⵠ[191] = f438(68, 68, 0, ⵠΔ[1519], 3);
    this.ᐃΔⵠ[191].id = 191;
    this.Ⲇⵠⵠ[191] = f438(60, 60, 0, ⵠΔ[1518], 3);
    this.Ⲇⵠⵠ[191].id = 191;
    this.ᐃⲆⵠ[191] = f438(60, 60, 0, ⵠΔ[1520], 3);
    this.ᐃⲆⵠ[191].id = 191;
    this.ᐃΔⵠ[192] = f438(68, 68, 0, ⵠΔ[1522], 3);
    this.ᐃΔⵠ[192].id = 192;
    this.Ⲇⵠⵠ[192] = f438(60, 60, 0, ⵠΔ[1521], 3);
    this.Ⲇⵠⵠ[192].id = 192;
    this.ᐃⲆⵠ[192] = f438(60, 60, 0, ⵠΔ[1523], 3);
    this.ᐃⲆⵠ[192].id = 192;
    this.ᐃΔⵠ[193] = f438(68, 68, 0, ⵠΔ[1525], 3);
    this.ᐃΔⵠ[193].id = 193;
    this.Ⲇⵠⵠ[193] = f438(60, 60, 0, ⵠΔ[1524], 3);
    this.Ⲇⵠⵠ[193].id = 193;
    this.ᐃⲆⵠ[193] = f438(60, 60, 0, ⵠΔ[1526], 3);
    this.ᐃⲆⵠ[193].id = 193;
    this.ᐃΔⵠ[194] = f438(68, 68, 0, ⵠΔ[1528], 3);
    this.ᐃΔⵠ[194].id = 194;
    this.Ⲇⵠⵠ[194] = f438(60, 60, 0, ⵠΔ[1527], 3);
    this.Ⲇⵠⵠ[194].id = 194;
    this.ᐃⲆⵠ[194] = f438(60, 60, 0, ⵠΔ[1529], 3);
    this.ᐃⲆⵠ[194].id = 194;
    this.ᐃΔⵠ[195] = f438(68, 68, 0, ⵠΔ[1531], 3);
    this.ᐃΔⵠ[195].id = 195;
    this.Ⲇⵠⵠ[195] = f438(60, 60, 0, ⵠΔ[1530], 3);
    this.Ⲇⵠⵠ[195].id = 195;
    this.ᐃⲆⵠ[195] = f438(60, 60, 0, ⵠΔ[1532], 3);
    this.ᐃⲆⵠ[195].id = 195;
    this.ᐃΔⵠ[196] = f438(68, 68, 0, ⵠΔ[1534], 3);
    this.ᐃΔⵠ[196].id = 196;
    this.Ⲇⵠⵠ[196] = f438(60, 60, 0, ⵠΔ[1533], 3);
    this.Ⲇⵠⵠ[196].id = 196;
    this.ᐃⲆⵠ[196] = f438(60, 60, 0, ⵠΔ[1535], 3);
    this.ᐃⲆⵠ[196].id = 196;
    this.ᐃΔⵠ[198] = f438(68, 68, 0, ⵠΔ[1540], 3);
    this.ᐃΔⵠ[198].id = 198;
    this.Ⲇⵠⵠ[198] = f438(60, 60, 0, ⵠΔ[1539], 3);
    this.Ⲇⵠⵠ[198].id = 198;
    this.ᐃⲆⵠ[198] = f438(60, 60, 0, ⵠΔ[1541], 3);
    this.ᐃⲆⵠ[198].id = 198;
    this.ᐃΔⵠ[197] = f438(68, 68, 0, ⵠΔ[1537], 3);
    this.ᐃΔⵠ[197].id = 197;
    this.Ⲇⵠⵠ[197] = f438(60, 60, 0, ⵠΔ[1536], 3);
    this.Ⲇⵠⵠ[197].id = 197;
    this.ᐃⲆⵠ[197] = f438(60, 60, 0, ⵠΔ[1538], 3);
    this.ᐃⲆⵠ[197].id = 197;
    this.ᐃΔⵠ[141] = f438(68, 68, 0, ⵠΔ[1649], 3);
    this.ᐃΔⵠ[141].id = 141;
    this.Ⲇⵠⵠ[141] = f438(60, 60, 0, ⵠΔ[1648], 3);
    this.Ⲇⵠⵠ[141].id = 141;
    this.ᐃⲆⵠ[141] = f438(60, 60, 0, ⵠΔ[1647], 3);
    this.ᐃⲆⵠ[141].id = 141;
    this.ᐃΔⵠ[142] = f438(68, 68, 0, ⵠΔ[1652], 3);
    this.ᐃΔⵠ[142].id = 142;
    this.Ⲇⵠⵠ[142] = f438(60, 60, 0, ⵠΔ[1651], 3);
    this.Ⲇⵠⵠ[142].id = 142;
    this.ᐃⲆⵠ[142] = f438(60, 60, 0, ⵠΔ[1650], 3);
    this.ᐃⲆⵠ[142].id = 142;
    this.ᐃΔⵠ[143] = f438(68, 68, 0, ⵠΔ[1655], 3);
    this.ᐃΔⵠ[143].id = 143;
    this.Ⲇⵠⵠ[143] = f438(60, 60, 0, ⵠΔ[1654], 3);
    this.Ⲇⵠⵠ[143].id = 143;
    this.ᐃⲆⵠ[143] = f438(60, 60, 0, ⵠΔ[1653], 3);
    this.ᐃⲆⵠ[143].id = 143;
    this.ᐃΔⵠ[144] = f438(68, 68, 0, ⵠΔ[1658], 3);
    this.ᐃΔⵠ[144].id = 144;
    this.Ⲇⵠⵠ[144] = f438(60, 60, 0, ⵠΔ[1657], 3);
    this.Ⲇⵠⵠ[144].id = 144;
    this.ᐃⲆⵠ[144] = f438(60, 60, 0, ⵠΔ[1656], 3);
    this.ᐃⲆⵠ[144].id = 144;
    this.ᐃΔⵠ[145] = f438(68, 68, 0, ⵠΔ[1661], 3);
    this.ᐃΔⵠ[145].id = 145;
    this.Ⲇⵠⵠ[145] = f438(60, 60, 0, ⵠΔ[1660], 3);
    this.Ⲇⵠⵠ[145].id = 145;
    this.ᐃⲆⵠ[145] = f438(60, 60, 0, ⵠΔ[1659], 3);
    this.ᐃⲆⵠ[145].id = 145;
    this.ᐃΔⵠ[146] = f438(68, 68, 0, ⵠΔ[1664], 3);
    this.ᐃΔⵠ[146].id = 146;
    this.Ⲇⵠⵠ[146] = f438(60, 60, 0, ⵠΔ[1663], 3);
    this.Ⲇⵠⵠ[146].id = 146;
    this.ᐃⲆⵠ[146] = f438(60, 60, 0, ⵠΔ[1662], 3);
    this.ᐃⲆⵠ[146].id = 146;
    this.ᐃΔⵠ[147] = f438(68, 68, 0, ⵠΔ[1667], 3);
    this.ᐃΔⵠ[147].id = 147;
    this.Ⲇⵠⵠ[147] = f438(60, 60, 0, ⵠΔ[1666], 3);
    this.Ⲇⵠⵠ[147].id = 147;
    this.ᐃⲆⵠ[147] = f438(60, 60, 0, ⵠΔ[1665], 3);
    this.ᐃⲆⵠ[147].id = 147;
    this.ᐃΔⵠ[148] = f438(68, 68, 0, ⵠΔ[1670], 3);
    this.ᐃΔⵠ[148].id = 148;
    this.Ⲇⵠⵠ[148] = f438(60, 60, 0, ⵠΔ[1669], 3);
    this.Ⲇⵠⵠ[148].id = 148;
    this.ᐃⲆⵠ[148] = f438(60, 60, 0, ⵠΔ[1668], 3);
    this.ᐃⲆⵠ[148].id = 148;
    this.ᐃΔⵠ[149] = f438(68, 68, 0, ⵠΔ[1673], 3);
    this.ᐃΔⵠ[149].id = 149;
    this.Ⲇⵠⵠ[149] = f438(60, 60, 0, ⵠΔ[1672], 3);
    this.Ⲇⵠⵠ[149].id = 149;
    this.ᐃⲆⵠ[149] = f438(60, 60, 0, ⵠΔ[1671], 3);
    this.ᐃⲆⵠ[149].id = 149;
    this.ᐃΔⵠ[173] = f438(68, 68, 0, ⵠΔ[1694], 3);
    this.ᐃΔⵠ[173].id = 173;
    this.Ⲇⵠⵠ[173] = f438(60, 60, 0, ⵠΔ[1693], 3);
    this.Ⲇⵠⵠ[173].id = 173;
    this.ᐃⲆⵠ[173] = f438(60, 60, 0, ⵠΔ[1692], 3);
    this.ᐃⲆⵠ[173].id = 173;
    this.ᐃΔⵠ[174] = f438(68, 68, 0, ⵠΔ[1697], 3);
    this.ᐃΔⵠ[174].id = 174;
    this.Ⲇⵠⵠ[174] = f438(60, 60, 0, ⵠΔ[1696], 3);
    this.Ⲇⵠⵠ[174].id = 174;
    this.ᐃⲆⵠ[174] = f438(60, 60, 0, ⵠΔ[1695], 3);
    this.ᐃⲆⵠ[174].id = 174;
    this.ᐃΔⵠ[175] = f438(68, 68, 0, ⵠΔ[1700], 3);
    this.ᐃΔⵠ[175].id = 175;
    this.Ⲇⵠⵠ[175] = f438(60, 60, 0, ⵠΔ[1699], 3);
    this.Ⲇⵠⵠ[175].id = 175;
    this.ᐃⲆⵠ[175] = f438(60, 60, 0, ⵠΔ[1698], 3);
    this.ᐃⲆⵠ[175].id = 175;
    this.ᐃΔⵠ[176] = f438(68, 68, 0, ⵠΔ[1703], 3);
    this.ᐃΔⵠ[176].id = 176;
    this.Ⲇⵠⵠ[176] = f438(60, 60, 0, ⵠΔ[1702], 3);
    this.Ⲇⵠⵠ[176].id = 176;
    this.ᐃⲆⵠ[176] = f438(60, 60, 0, ⵠΔ[1701], 3);
    this.ᐃⲆⵠ[176].id = 176;
    this.ᐃΔⵠ[177] = f438(68, 68, 0, ⵠΔ[1706], 3);
    this.ᐃΔⵠ[177].id = 177;
    this.Ⲇⵠⵠ[177] = f438(60, 60, 0, ⵠΔ[1705], 3);
    this.Ⲇⵠⵠ[177].id = 177;
    this.ᐃⲆⵠ[177] = f438(60, 60, 0, ⵠΔ[1704], 3);
    this.ᐃⲆⵠ[177].id = 177;
    this.ᐃΔⵠ[178] = f438(68, 68, 0, ⵠΔ[1709], 3);
    this.ᐃΔⵠ[178].id = 178;
    this.Ⲇⵠⵠ[178] = f438(60, 60, 0, ⵠΔ[1708], 3);
    this.Ⲇⵠⵠ[178].id = 178;
    this.ᐃⲆⵠ[178] = f438(60, 60, 0, ⵠΔ[1707], 3);
    this.ᐃⲆⵠ[178].id = 178;
    this.ᐃΔⵠ[179] = f438(68, 68, 0, ⵠΔ[1712], 3);
    this.ᐃΔⵠ[179].id = 179;
    this.Ⲇⵠⵠ[179] = f438(60, 60, 0, ⵠΔ[1711], 3);
    this.Ⲇⵠⵠ[179].id = 179;
    this.ᐃⲆⵠ[179] = f438(60, 60, 0, ⵠΔ[1710], 3);
    this.ᐃⲆⵠ[179].id = 179;
    this.ᐃΔⵠ[180] = f438(68, 68, 0, ⵠΔ[1715], 3);
    this.ᐃΔⵠ[180].id = 180;
    this.Ⲇⵠⵠ[180] = f438(60, 60, 0, ⵠΔ[1714], 3);
    this.Ⲇⵠⵠ[180].id = 180;
    this.ᐃⲆⵠ[180] = f438(60, 60, 0, ⵠΔ[1713], 3);
    this.ᐃⲆⵠ[180].id = 180;
    this.ᐃΔⵠ[181] = f438(68, 68, 0, ⵠΔ[1718], 3);
    this.ᐃΔⵠ[181].id = 181;
    this.Ⲇⵠⵠ[181] = f438(60, 60, 0, ⵠΔ[1717], 3);
    this.Ⲇⵠⵠ[181].id = 181;
    this.ᐃⲆⵠ[181] = f438(60, 60, 0, ⵠΔ[1716], 3);
    this.ᐃⲆⵠ[181].id = 181;
    this.ⵠⵠⵠⲆᐃᐃⵠ = function () {
      for (var v2759 = v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ, v2760 = 10, v2761 = 10, v2762 = 0; v2762 < v2759.length; v2762++) {
        if (v2762 > 0 && !(v2762 % 4)) {
          v2760 += v2759[0].info.width + 10;
          v2761 = 10;
        }
        v2759[v2762].info.translate.x = v2760;
        v2759[v2762].info.translate.y = v2761;
        v2761 += 10 + v2759[v2762].info.height;
      }
    };
    this.ⲆⵠⲆⵠⵠᐃᐃ = function () {
      var v2763 = Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + this.ᐃΔⵠ[0].info.ⵠⵠ[0].width) + 35);
      for (var v2764 = 0; v2764 < this.ᐃΔⵠ.length; v2764++) {
        if (this.ᐃΔⵠ[v2764]) {
          this.ᐃΔⵠ[v2764].info.translate.x = v2763;
          this.ᐃΔⵠ[v2764].info.translate.y = 22;
        }
      }
      this.ⲆΔⵠᐃⲆΔⵠ.info.translate.x = v2763 + 17;
      this.ⲆΔⵠᐃⲆΔⵠ.info.translate.y = 22 + ⵠΔ[450].height;
      this.ⲆⲆΔᐃⲆΔⵠ.info.translate.x = v2763 + 17;
      this.ⲆⲆΔᐃⲆΔⵠ.info.translate.y = 30;
      this.ΔΔᐃᐃⵠⲆⲆ.info.translate.x = v2763 + 17;
      this.ΔΔᐃᐃⵠⲆⲆ.info.translate.y = 22 + ⵠΔ[450].height;
    };
    this.ⵠⲆᐃⵠⲆᐃΔⲆΔ = function () {
      var v2765 = Math.floor((v408 - ⵠΔ[721][0].width) / 2);
      for (var v2766 = 0; v2766 < this.ΔⲆᐃΔⲆ.length; v2766++) {
        this.ΔⲆᐃΔⲆ[v2766].button.info.translate.x = v2765;
        this.ΔⲆᐃΔⲆ[v2766].button.info.translate.y = -13;
      }
    };
    this.ᐃⲆⵠΔᐃΔⵠ = function () {
      var v2767 = 12 + Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + this.ᐃᐃⲆᐃΔᐃⲆ.info.ⵠⵠ[0].width) + 35);
      this.ᐃᐃⲆᐃΔᐃⲆ.info.translate.x = v2767;
      this.ᐃᐃⲆᐃΔᐃⲆ.info.translate.y = 33;
      this.ⲆⵠⲆΔᐃΔΔ.info.translate.x = this.ᐃᐃⲆᐃΔᐃⲆ.info.translate.x;
      this.ⲆⵠⲆΔᐃΔΔ.info.translate.y = 137;
      this.ⵠⵠΔⲆᐃᐃⵠ.info.translate.x = this.ᐃᐃⲆᐃΔᐃⲆ.info.translate.x;
      this.ⵠⵠΔⲆᐃᐃⵠ.info.translate.y = 240;
    };
    this.ᐃΔᐃⲆⵠⵠΔ = function () {
      var v2768 = 12 + Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + this.ΔΔⵠⵠΔᐃⵠ.info.ⵠⵠ[0].width) + 35);
      this.ΔΔⵠⵠΔᐃⵠ.info.translate.x = v2768;
      this.ΔΔⵠⵠΔᐃⵠ.info.translate.y = 36;
      v2768 += 83;
      this.ⲆⲆᐃⵠᐃⵠΔ.info.translate.x = v2768;
      this.ⲆⲆᐃⵠᐃⵠΔ.info.translate.y = 36;
      this.ⵠⲆⵠⵠΔΔⲆ.info.translate.x = v2768;
      this.ⵠⲆⵠⵠΔΔⲆ.info.translate.y = 36;
      this.ⲆᐃⵠΔⲆⲆⵠ.info.translate.x = v2768;
      this.ⲆᐃⵠΔⲆⲆⵠ.info.translate.y = 36;
      this.ᐃⲆⲆΔᐃⵠⲆ.info.translate.x = v2768;
      this.ᐃⲆⲆΔᐃⵠⲆ.info.translate.y = 36;
      this.ⲆⲆΔⵠᐃⲆΔ.info.translate.x = v2768;
      this.ⲆⲆΔⵠᐃⲆΔ.info.translate.y = 36;
      this.ᐃⵠΔᐃᐃΔⲆ.info.translate.x = v2768;
      this.ᐃⵠΔᐃᐃΔⲆ.info.translate.y = 36;
      this.ⲆᐃΔᐃᐃΔⵠ.info.translate.x = v2768;
      this.ⲆᐃΔᐃᐃΔⵠ.info.translate.y = 36;
      this.ⵠⵠⵠΔⵠⵠⲆ.info.translate.x = v2768;
      this.ⵠⵠⵠΔⵠⵠⲆ.info.translate.y = 36;
      this.ᐃᐃᐃΔΔⵠᐃ.info.translate.x = v2768;
      this.ᐃᐃᐃΔΔⵠᐃ.info.translate.y = 36;
      this.ΔⵠⲆⵠᐃⲆΔ.info.translate.x = v2768;
      this.ΔⵠⲆⵠᐃⲆΔ.info.translate.y = 36;
      this.ΔᐃⵠΔᐃⵠΔ.info.translate.x = v2768;
      this.ΔᐃⵠΔᐃⵠΔ.info.translate.y = 36;
      this.ΔⲆᐃⵠⵠⲆⵠ.info.translate.x = v2768;
      this.ΔⲆᐃⵠⵠⲆⵠ.info.translate.y = 36;
      this.ᐃΔⵠᐃΔⲆᐃ.info.translate.x = v2768;
      this.ᐃΔⵠᐃΔⲆᐃ.info.translate.y = 36;
      this.ⵠⵠᐃΔⵠⵠⲆ.info.translate.x = v2768;
      this.ⵠⵠᐃΔⵠⵠⲆ.info.translate.y = 36;
    };
    this.ⵠⵠⵠⵠⵠⲆᐃ = function () {
      var v2769 = 12 + Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + this.ᐃⲆⲆⲆΔᐃⲆ.info.ⵠⵠ[0].width) + 35);
      this.ᐃⲆⲆⲆΔᐃⲆ.info.translate.x = v2769;
      this.ᐃⲆⲆⲆΔᐃⲆ.info.translate.y = 36;
      v2769 += 83;
      this.ⵠΔᐃᐃΔΔΔ.info.translate.x = v2769;
      this.ⵠΔᐃᐃΔΔΔ.info.translate.y = 36;
    };
    this.ᐃᐃᐃᐃⵠΔⲆ = function () {
      var v2770 = Math.floor(Math.floor((3 + v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ.length) / 4) * (10 + this.ΔⵠᐃΔⵠⵠΔ.info.ⵠⵠ[0].width) + 35);
      this.ΔⵠᐃΔⵠⵠΔ.info.translate.x = v2770;
      this.ΔⵠᐃΔⵠⵠΔ.info.translate.y = 22;
    };
    this.ⲆⲆᐃⵠⵠΔᐃ = function () {
      var v2771 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ;
      if (v2771.length > 0) {
        var v2772 = Math.floor((v408 - (v2771[0].info.width + 5) * v2860.ΔⲆⵠⵠ.max) / 2);
      }
      for (var v2773 = 0; v2773 < v2771.length; v2773++) {
        v2771[v2773].info.translate.x = v2772 + v2773 * (v2771[v2773].info.width + 5);
        v2771[v2773].info.translate.y = v410 - v2771[v2773].info.width - 10;
        this.ⲆΔᐃᐃΔ[v2771[v2773].id].info.translate.x = v2771[v2773].info.translate.x + 13;
        this.ⲆΔᐃᐃΔ[v2771[v2773].id].info.translate.y = v2771[v2773].info.translate.y - this.ⲆΔᐃᐃΔ[v2771[v2773].id].info.ⵠⵠ[0].height - 6;
      }
    };
    var v2774;
    var v2775 = 0;
    function f509() {
      vThis4.ⵠΔᐃ();
      if (++v2775 == 30) {
        vThis4.ⲆⲆⵠΔᐃⲆΔ();
        vThis4.ⵠΔᐃ();
        return;
      }
      vWindow.setTimeout(f509, 33);
    }
    this.ⵠᐃⲆᐃⵠ = function (p1718) {
      if (v2860.ⵠⲆΔΔⵠ.open) {
        v2860.ⵠⲆΔΔⵠ.ⵠᐃⲆᐃⵠ();
      }
      if (v2860.ⲆΔⲆⵠΔ.open) {
        v2860.ⲆΔⲆⵠΔ.ⵠᐃⲆᐃⵠ();
      }
      document.getElementById("team_box").style.display = "none";
      vThis4.ⲆⲆΔᐃⵠ.style.display = "none";
      vThis4.ⲆⲆΔᐃⵠ.open = vVV1622;
      vThis4.sign.style.display = "none";
      vThis4.sign.open = false;
      document.getElementById("shop_starterkit").style.display = "none";
      document.getElementById("home_craft").style.display = "none";
      document.getElementById("recipe_craft").style.display = "none";
      vThis4.ⵠⲆⵠᐃⲆ.open = false;
      document.getElementById("option_in_game").style.display = "none";
      vThis4.options.open = false;
      document.getElementById("sure_delete").style.display = "none";
      vThis4.ΔΔᐃᐃ.open = vVV165;
      document.getElementById("cancel_sure_delete").style.display = "none";
      vThis4.ΔΔⲆⲆⲆ.open = vVVV1623;
      document.getElementById("chronoquest").style.display = "none";
      vThis4.ⵠᐃᐃᐃ.open = false;
      v2774 = p1718;
      vThis4.ⲆⲆⵠⲆΔᐃⲆ();
      vThis4.ⵠΔΔ.style.cursor = vThis4.ΔΔⲆⵠΔΔⵠ;
      v3058.ⵠᐃⲆᐃⵠ();
      v2776 = -1;
      f510();
      f532();
    };
    var v2776 = -1;
    function f510() {
      vThis4.ⵠΔᐃ();
      if (++v2776 == 30) {
        vThis4.stop();
        v2774();
        return;
      }
      vWindow.setTimeout(f510, 33);
    }
    this.ΔⲆⲆᐃΔ = vV163;
    this.stop = function () {
      this.ΔⲆⲆᐃΔ = false;
    };
    this.ⲆⵠⵠᐃΔ = function () {
      v2862.ᐃᐃⲆⲆΔⵠⲆΔΔ();
      vThis4.ΔⲆⲆᐃΔ = true;
      v2776 = -1;
      v2775 = 0;
      f509();
    };
    this.ⵠΔᐃ = function () {
      this.ⵠᐃⵠⲆⲆ.translate.x = v408 - this.ⵠᐃⵠⲆⲆ.ⵠⵠ.width - 10;
      this.ⵠᐃⵠⲆⲆ.translate.y = 5;
      v2859.ⲆⵠΔΔΔ.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[974][0].width - 85;
      v2859.ⲆⵠΔΔΔ.translate.y = 10;
      this.ⵠⲆⵠᐃⲆ.button.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[957][0].width - 10;
      this.ⵠⲆⵠᐃⲆ.button.info.translate.y = 10;
      this.ⵠᐃᐃᐃ.button.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[1004][0].width - 20;
      this.ⵠᐃᐃᐃ.button.info.translate.y = this.ⵠⲆⵠᐃⲆ.button.info.translate.y + ⵠΔ[957][0].height + 5;
      this.options.button.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[976][0].width - 20;
      this.options.button.info.translate.y = this.ⵠᐃᐃᐃ.button.info.translate.y + ⵠΔ[976][0].height + 18;
      this.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[976][0].width - 20;
      this.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.info.translate.y = this.options.button.info.translate.y + ⵠΔ[1032][0].height;
      this.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[976][0].width - 20;
      this.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.info.translate.y = this.options.button.info.translate.y + ⵠΔ[1032][0].height;
      this.ⲆⲆΔᐃⵠ.button.info.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[1044][0].width - 20;
      this.ⲆⲆΔᐃⵠ.button.info.translate.y = this.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.info.translate.y + ⵠΔ[1044][0].height;
      v2860.ⵠᐃΔⵠᐃ.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - 63 - 85;
      v2860.ⵠᐃΔⵠᐃ.translate.y = 100;
      v2860.ⵠⲆⲆᐃⲆΔⵠ.translate.x = this.ⵠᐃⵠⲆⲆ.translate.x - ⵠΔ[655].width - 85;
      v2860.ⵠⲆⲆᐃⲆΔⵠ.translate.y = v2860.ⵠᐃΔⵠᐃ.translate.y + 10 + ⵠΔ[684].height;
      this.ΔᐃⵠΔΔ.translate.y = v410 - 3 - 193;
      this.ΔᐃⵠΔΔ.translate.x = v408 - 3 - 193;
      this.ⲆᐃΔⲆ.translate.x = 5;
      this.ⲆᐃΔⲆ.translate.y = v410 - this.ⲆᐃΔⲆ.ⵠⵠ.height - 5;
      this.ⲆⵠⵠⵠΔ.button.info.translate.x = v411 - 45.5;
      this.ⲆⵠⵠⵠΔ.button.info.translate.y = 50;
      this.ⵠⵠⵠⲆᐃᐃⵠ();
      this.ⲆⲆᐃⵠⵠΔᐃ();
      this.ⲆⵠⲆⵠⵠᐃᐃ();
      this.ᐃᐃᐃᐃⵠΔⲆ();
      this.ⵠⵠⵠⵠⵠⲆᐃ();
      this.ᐃΔᐃⲆⵠⵠΔ();
      this.ᐃⲆⵠΔᐃΔⵠ();
      this.ⵠⲆᐃⵠⲆᐃΔⲆΔ();
      this.sign.ᐃⲆΔΔⲆⵠΔ();
      f310();
      v2860.ⵠⲆΔΔⵠ.ⵠΔᐃ();
      v2860.ⲆΔⲆⵠΔ.ⵠΔᐃ();
      this.ⵠⲆⲆⵠΔⲆΔΔᐃ.ⵠΔᐃ();
      this.ⵠⲆⵠᐃⲆ.ⵠⲆΔᐃⲆᐃΔ.ⵠΔᐃ();
      this.ⵠⲆⵠᐃⲆ.list.ⵠΔᐃ();
      this.ΔΔᐃᐃ.ⵠΔᐃ();
      this.ΔΔⲆⲆⲆ.ⵠΔᐃ();
      this.ⵠᐃᐃᐃ.ⵠΔᐃ();
      this.ⲆⵠⵠⵠΔ.ⵠΔᐃ();
      this.options.ⵠΔᐃ();
      this.ⲆⲆΔᐃⵠ.ⵠΔᐃ();
      this.sign.ⵠΔᐃ();
      var v2777 = 0;
      if (v2775 != 30) {
        v2777 = 1500 / (v2775 + 1) - 50;
      }
      if (v2776 != -1) {
        v2777 = -(1500 / (30 - v2776 + 1) - 48);
      }
      this.ⲆⵠⵠⵠΔ.button.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⵠᐃⵠⲆⲆ.translate.y -= v2777 > 0 ? v2777 : -v2777;
      v2860.ⵠᐃΔⵠᐃ.translate.y -= v2777 > 0 ? v2777 : -v2777;
      v2860.ⵠⲆⲆᐃⲆΔⵠ.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⵠⲆⵠᐃⲆ.button.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⵠᐃᐃᐃ.button.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.options.button.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⲆⲆΔᐃⵠ.button.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.info.translate.y -= v2777 > 0 ? v2777 : -v2777;
      v2859.ⲆⵠΔΔΔ.translate.y -= v2777 > 0 ? v2777 : -v2777;
      this.ⲆᐃΔⲆ.translate.y -= v2777 < 0 ? v2777 : -v2777;
      this.ΔᐃⵠΔΔ.translate.y -= v2777 < 0 ? v2777 : -v2777;
    };
    this.ⵠⵠⵠΔᐃΔΔ = function () {
      if (!v2860.ᐃΔΔᐃᐃ.enabled && this.ⵠⵠⲆᐃΔᐃⲆ && !v2860.ⵠⲆᐃᐃΔ) {
        f328();
      }
      f319();
      (function () {
        var v2778 = v2859.ⲆⵠΔ[0];
        if (v2859.mode === 0 || v2859.mode === 7 || v2859.mode === 2 || v2859.mode === 4 || v2859.mode === 5 || v2859.mode === 6 || v2859.mode === 3) {
          for (var v2779 = 0; v2778.length > v2779; v2779++) {
            v2778[v2779].ⲆⵠᐃⵠⵠⲆⲆ();
          }
        } else if (v2859.mode === 1) {
          for (v2779 = 0; v2778.length > v2779; v2779++) {
            if (v2860.ΔⲆᐃⵠΔⲆⵠ || v2860.ⵠⲆⲆᐃⲆΔⵠ.enabled || v2778[v2779].ⲆⵠⲆΔ.ᐃΔⵠⵠΔ !== "spectator") {
              v2778[v2779].ⲆⵠᐃⵠⵠⲆⲆ();
            }
          }
        }
      })();
      vF27.ⵠᐃΔᐃⲆᐃⲆ();
      if (this.ⵠⵠⲆᐃΔᐃⲆ) {
        f311();
        if (this.ⵠᐃⵠΔᐃⵠᐃ === 1) {
          this.ⵠⲆⵠᐃⲆ.button.ⲆⵠⲆᐃ(p1698);
        }
        if (v2859.mode !== 2 && v2859.mode !== 5 && this.ᐃⲆⵠᐃᐃᐃⲆ === 1) {
          this.ⵠᐃᐃᐃ.button.ⲆⵠⲆᐃ(p1698);
        }
        this.options.button.ⲆⵠⲆᐃ(p1698);
        if (this.ᐃⲆⵠΔΔⵠᐃ === 1) {
          this.ⲆⲆΔᐃⵠ.button.ⲆⵠⲆᐃ(p1698);
        }
        if (v3058.ⲆⵠⵠᐃΔ) {
          this.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.ⲆⵠⲆᐃ(p1698);
        } else {
          this.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.ⲆⵠⲆᐃ(p1698);
        }
        f332();
        f323();
        this.ⲆᐃΔⲆ.ⲆⵠⲆᐃ();
        f313();
        f318();
        f314();
        f321();
        f324();
        f301();
        f300();
        (function () {
          if (!v2860.ᐃᐃᐃᐃ.open && !v2860.ᐃΔⵠᐃᐃ.open && !v2860.Ⲇᐃⵠⵠ.open && !v2860.ⵠᐃⲆΔ.open && !v2860.ⵠΔᐃⵠ.open) {
            v2860.ΔⲆⲆᐃⲆ.open = false;
            var v2780 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
            var v2781 = 100;
            if (v2780) {
              for (var v2782 = 0; v2859.ⲆⵠΔ[44].length > v2782; v2782++) {
                var v2783 = v2859.ⲆⵠΔ[44][v2782];
                var v2784 = ⵠⵠΔ.ᐃᐃⵠⲆ(v2783, v2780);
                if (v2781 > v2784) {
                  v2781 = v2784;
                  v2860.ΔⲆⲆᐃⲆ.open = vVVVV12222;
                  v2860.ΔⲆⲆᐃⲆ.ΔⲆⲆᐃ = v2783.ΔⲆⲆᐃ;
                  v2860.ΔⲆⲆᐃⲆ.ΔᐃᐃΔⵠ = v2783.id;
                }
              }
            }
          }
        })();
        f303();
        f308();
        f298();
        f307();
        f310();
        f306();
      }
      if (v2860.ᐃΔΔᐃᐃ.enabled) {
        f304();
      }
      f299();
      if (this.ⵠⵠⲆᐃΔᐃⲆ && this.ΔΔⲆⲆΔΔΔ === 1) {
        f317();
      }
      v2860.ΔᐃΔⵠⵠⲆΔ.ⲆⵠⲆᐃ();
      v2860.alert.ⲆⵠⲆᐃ("#FFF", "#000");
      if (this.ⵠⵠⲆᐃΔᐃⲆ) {
        v2860.ᐃΔΔᐃᐃ.ⲆⵠⲆᐃ();
        v2860.ⲆⵠⵠⵠΔ.ⲆⵠⲆᐃ();
        v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.ⲆⵠⲆᐃ(v3090.ΔΔⲆΔ.x, v3090.ΔΔⲆΔ.y);
      }
      f309();
    };
    this.ᐃⵠΔᐃⲆⲆΔᐃΔ = function () {
      v2860.Δⵠⵠ.ⵠΔᐃ();
      v2860.ⲆᐃΔⲆ.ⵠΔᐃ();
      if (!v2860.reconnect.enabled && v2860.ᐃᐃⲆΔⲆ) {
        v2860.control.ⵠΔᐃ();
        v2860.ⵠᐃΔⵠᐃ.ⵠΔᐃ();
      }
      v2859.ⵠΔᐃ();
      this.ⵠᐃᐃᐃ.ᐃᐃᐃⵠᐃᐃⲆⵠⵠ();
    };
    this.ⲆΔΔᐃᐃΔᐃⲆⵠ = function () {
      f419();
    };
    this.ⵠΔᐃᐃⵠᐃⲆᐃΔ = function () {
      v2862.ΔΔᐃⲆⲆΔᐃⲆᐃ();
      v2862.ⵠⲆΔᐃΔⲆΔᐃⵠ();
      v2862.ᐃⵠⵠΔⲆⲆΔⲆⲆ();
      v2862.ⵠᐃΔⲆⲆΔᐃΔΔ();
    };
    this.ⲆⵠⲆᐃ = function () {
      if (!v2860.reconnect.enabled && v2860.ᐃᐃⲆΔⲆ) {
        this.ⵠΔᐃᐃⵠᐃⲆᐃΔ();
      }
      v3058.ᐃΔᐃⲆᐃᐃᐃΔΔ();
      this.ᐃⵠΔᐃⲆⲆΔᐃΔ();
      if (v2858.ΔᐃᐃᐃⲆΔΔ !== 1) {
        this.ⲆΔΔᐃᐃΔᐃⲆⵠ();
        this.ⵠⵠⵠΔᐃΔΔ();
      } else {
        var v2785 = ᐃΔ.ⵠⵠⲆⵠΔⲆᐃ;
        f302(p1698, v2785, v411 - v2785.width / 4, v412 - v2785.height / 4, v2785.width / 2, v2785.height / 2);
      }
    };
    this.ΔΔᐃᐃⲆΔⵠ = function (p1719) {
      if (v2860.ⵠⲆΔΔⵠ.open && p1719.keyCode === 27) {
        v2860.ⵠⲆΔΔⵠ.ⵠᐃⲆᐃⵠ();
      } else if (v2860.ⲆΔⲆⵠΔ.open && p1719.keyCode === 27) {
        v2860.ⲆΔⲆⵠΔ.ⵠᐃⲆᐃⵠ();
      } else if (v2860.ⵠⲆΔΔⵠ.open || v2860.ⲆΔⲆⵠΔ.open || p1719.keyCode != 79 || v2776 != -1) {
        if (p1719.keyCode == 13 && v2776 == -1) {
          if (v2860.ⲆΔⲆⵠΔ.open) {
            v2860.ⲆΔⲆⵠΔ.ΔⵠΔⲆⵠΔⵠ();
          } else {
            v2860.ⵠⲆΔΔⵠ.ⲆⵠⵠᐃΔ();
          }
        } else if (!v2860.ⵠⲆΔΔⵠ.open && !v2860.ⲆΔⲆⵠΔ.open) {
          if (p1719.keyCode === 82) {
            v2860.ⵠᐃΔⵠᐃ.ᐃⲆⲆΔΔᐃΔ();
          } else if (p1719.keyCode !== 80 || v2859.mode !== 1 || v2860.ΔⲆᐃⵠΔⲆⵠ) {
            if (p1719.keyCode >= 49 && p1719.keyCode <= 57) {
              if (v2860.ⵠⲆᐃᐃ.id < 0) {
                var v2786 = p1719.keyCode - 49;
                var v2787 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ[v2786];
                if (v2787) {
                  v2862.ΔⵠⵠΔᐃ(v2787.id, v2786);
                }
              }
            } else if (p1719.keyCode == 89) {
              v2860.ΔⲆⵠⵠⲆΔⵠ = !v2860.ΔⲆⵠⵠⲆΔⵠ;
            } else if (p1719.keyCode == 71) {
              v2860.ⵠⲆᐃᐃ.ⵠΔΔⵠⲆⵠᐃⲆᐃ();
            }
          } else {
            v2860.ⵠⲆⲆᐃⲆΔⵠ.ᐃⲆⲆΔΔᐃΔ();
          }
        }
      } else {
        v2860.ⲆΔⲆⵠΔ.ᐃᐃᐃΔᐃᐃⲆᐃΔ();
      }
      v3086.up(p1719);
    };
    this.ⵠⲆΔᐃᐃⵠΔ = function (p1720) {
      v3086.down(p1720);
      if (p1720.keyCode == 8 && !v2860.ⵠⲆΔΔⵠ.open && !v2860.ⲆΔⲆⵠΔ.open) {
        p1720.preventDefault();
      }
    };
    this.ⲆⲆⲆⵠⵠⲆΔ = function (p1721) {
      v3090.ΔΔⲆΔ = f435(vThis4.ⵠΔΔ, p1721);
      var v2788 = false;
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
        vThis4.ΔᐃⵠΔΔ.focus(v3090.ΔΔⲆΔ);
      }
      var v2789 = v2860.ᐃᐃᐃᐃ;
      if (v2860.ⵠⲆᐃᐃ.id < 0 && v2789.id >= 0) {
        if (!v2860.ᐃᐃᐃᐃ.lock || v2860.ᐃᐃᐃᐃ.ΔⲆⲆᐃ === v2860.id) {
          v2788 |= vThis4.ᐃΔⵠ[v2860.ᐃᐃᐃᐃ.id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        }
      }
      var v2790 = v2860.Ⲇᐃⵠⵠ;
      if (v2790.open && v2790.ΔᐃⲆᐃΔⲆⲆ > 0) {
        v2788 |= vThis4.ⵠΔᐃᐃΔΔΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      var v2791 = v2860.ⵠΔᐃⵠ;
      if (v2791.open && v2791.ⵠᐃⵠᐃⲆΔⲆ > 0) {
        v2788 |= vThis4.ⲆⲆᐃⵠᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⵠⲆⵠⵠΔΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⲆᐃⵠΔⲆⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ᐃⲆⲆΔᐃⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⲆⲆΔⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ᐃⵠΔᐃᐃΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⲆᐃΔᐃᐃΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⵠⵠⵠΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ᐃᐃᐃΔΔⵠᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ΔⵠⲆⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ΔᐃⵠΔᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ΔⲆᐃⵠⵠⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ᐃΔⵠᐃΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        v2788 |= vThis4.ⵠⵠᐃΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      var v2792 = v2860.ⵠᐃⲆΔ;
      if (v2792.open && v2792.ᐃᐃⲆᐃᐃᐃᐃ > 0) {
        v2788 |= vThis4.ⵠⵠΔⲆᐃᐃⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (v2860.sign.open) {
        v2788 |= vThis4.sign.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (!v2860.ᐃᐃᐃᐃ.lock) {
        if (v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ) {
          v2788 |= vThis4.ΔΔᐃᐃⵠⲆⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        }
      }
      if (v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ) {
        v2788 |= vThis4.ⲆΔⵠᐃⲆΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (v2860.ⵠⲆᐃᐃ.id < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        for (var v2793 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ, v2794 = 0; v2793.length > v2794; v2794++) {
          var v2795 = v2793[v2794].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
          v2788 |= v2795;
          if (v2795) {
            v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.start(v2794, v3090.ΔΔⲆΔ);
          }
          if (v2789.open && (v2789.id < 0 || v2793[v2794].id == v2789.id) || v2860.ᐃΔⵠᐃᐃ.open && v2793[v2794].id === 200 || v2860.ΔⲆⲆᐃⲆ.open && v2793[v2794].id === 282 || v2860.ⵠᐃⲆΔ.open && (v2793[v2794].id === 200 || v2793[v2794].id === 224) || v2860.Ⲇᐃⵠⵠ.open && v2793[v2794].id === 227 || v2860.ⵠΔᐃⵠ.open && v2793[v2794].id === 200) {
            v2788 |= vThis4.ⲆΔᐃᐃΔ[v2793[v2794].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
          }
        }
      }
      if (v2860.ΔΔⲆⲆΔ.open) {
        v2788 |= vThis4.ΔΔⲆⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (vThis4.ⲆⲆΔⲆⲆ != -1) {
        if (v2788 |= vThis4.ΔⲆᐃΔⲆ[vThis4.ⲆⲆΔⲆⲆ].button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1)) {
          var v2796 = true;
        }
      } else {
        v2796 = false;
      }
      if (!!(v2860.ⵠⲆᐃᐃ.id < 0) && !!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !v2796 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !v2860.ⵠⲆᐃᐃΔ) {
        v2793 = v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ;
        v2794 = 0;
        for (; v2794 < v2793.length; v2794++) {
          v2788 |= v2793[v2794].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        }
      }
      if (!!(v2860.ⵠⲆᐃᐃ.id < 0) && !!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !!v2860.ⲆⵠⵠⵠΔ.open && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        v2788 |= vThis4.ⲆⵠⵠⵠΔ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        v2788 |= vThis4.ⵠⲆⵠᐃⲆ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        v2788 |= vThis4.options.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open) {
        v2788 |= vThis4.ⲆⲆΔᐃⵠ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (!!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        if (v3058.ⲆⵠⵠᐃΔ) {
          v2788 |= vThis4.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        } else {
          v2788 |= vThis4.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
        }
      }
      if (!!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && v2859.mode !== 2 && v2859.mode !== 5) {
        v2788 |= vThis4.ⵠᐃᐃᐃ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 1);
      }
      if (!v2788 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !vThis4.sign.open) {
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ >= 0) {
          v2862.ᐃᐃᐃⲆⲆⵠᐃⲆᐃ();
        } else if (!v2796) {
          v3090.down();
        }
      }
    };
    this.ⵠΔⵠᐃⵠⲆⵠ = function (p1722) {
      v3090.ΔΔⲆΔ = f435(vThis4.ⵠΔΔ, p1722);
      v3090.up();
      if (!v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.release()) {
        var v2797 = v2860.ᐃᐃᐃᐃ;
        var v2798 = v2860.ᐃΔⵠᐃᐃ;
        var v2799 = v2860.ΔⲆⲆᐃⲆ;
        var v2800 = v2860.Ⲇᐃⵠⵠ;
        var v2801 = v2860.ⵠΔᐃⵠ;
        var v2802 = v2860.ⵠᐃⲆΔ;
        if (v2860.control.attack) {
          v2860.control.attack = 0;
          v2862.ⲆΔᐃⲆᐃⲆⲆΔⵠ();
        }
        if (vThis4.ⲆⲆΔⲆⲆ != -1) {
          var v2803 = vThis4.ΔⲆᐃΔⲆ[vThis4.ⲆⲆΔⲆⲆ].button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2);
          var v2804 = document.getElementById("team_box").style;
          if (v2803 && v2804.display == "inline-block") {
            v2804.display = "none";
            return;
          }
          if (v2803) {
            vThis4.ΔⲆᐃΔⲆ[vThis4.ⲆⲆΔⲆⲆ].action();
          }
        }
        if (v2860.ⵠⲆᐃᐃ.id < 0 && v2797.id >= 0 && !vThis4.ΔΔᐃᐃ.open) {
          if (!v2860.ᐃᐃᐃᐃ.lock || v2860.ᐃᐃᐃᐃ.ΔⲆⲆᐃ === v2860.id) {
            if (v2803 = vThis4.ᐃΔⵠ[v2860.ᐃᐃᐃᐃ.id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
              v2862.ᐃᐃⲆΔᐃⵠⵠᐃᐃ(v2797);
            }
          }
        }
        if ((v2800 = v2860.Ⲇᐃⵠⵠ).open && v2800.ΔᐃⲆᐃΔⲆⲆ > 0 && !vThis4.ΔΔᐃᐃ.open) {
          if (v2803 = vThis4.ⵠΔᐃᐃΔΔΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            v2862.ⲆⵠⵠᐃΔΔᐃΔⵠ(v2800);
          }
        }
        if ((v2801 = v2860.ⵠΔᐃⵠ).open && v2801.ⵠᐃⵠᐃⲆΔⲆ > 0 && !vThis4.ΔΔᐃᐃ.open) {
          switch (v2801.type) {
            case 24:
              if (v2803 = vThis4.ⲆⲆᐃⵠᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 25:
              if (v2803 = vThis4.ⵠⲆⵠⵠΔΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 26:
              if (v2803 = vThis4.ⲆᐃⵠΔⲆⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 27:
              if (v2803 = vThis4.ᐃⲆⲆΔᐃⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 28:
              if (v2803 = vThis4.ⲆⲆΔⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 29:
              if (v2803 = vThis4.ᐃⵠΔᐃᐃΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 30:
              if (v2803 = vThis4.ⲆᐃΔᐃᐃΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 31:
              if (v2803 = vThis4.ⵠⵠⵠΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 32:
              if (v2803 = vThis4.ᐃᐃᐃΔΔⵠᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 33:
              if (v2803 = vThis4.ΔⵠⲆⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 34:
              if (v2803 = vThis4.ΔᐃⵠΔᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 35:
              if (v2803 = vThis4.ΔⲆᐃⵠⵠⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 36:
              if (v2803 = vThis4.ᐃΔⵠᐃΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
              break;
            case 37:
              if (v2803 = vThis4.ⵠⵠᐃΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
                v2862.ⲆⲆΔᐃⲆ(v2801);
              }
          }
        }
        if ((v2802 = v2860.ⵠᐃⲆΔ).open && v2802.ᐃᐃⲆᐃᐃᐃᐃ > 0 && !vThis4.ΔΔᐃᐃ.open) {
          if (v2803 = vThis4.ⵠⵠΔⲆᐃᐃⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            v2862.ΔᐃⲆⵠᐃΔᐃⲆΔ(v2802);
          }
        }
        if (v2860.sign.open && !vThis4.ΔΔᐃᐃ.open) {
          if (v2803 = vThis4.sign.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            vThis4.sign.select();
          }
        }
        if (!v2860.ᐃᐃᐃᐃ.lock && !vThis4.ΔΔᐃᐃ.open) {
          if (v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ && (v2803 = vThis4.ΔΔᐃᐃⵠⲆⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2))) {
            v2862.ⲆⲆΔΔⲆᐃΔⵠⲆ(v2797);
          }
        }
        if (v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ && !vThis4.ΔΔᐃᐃ.open && (v2803 = vThis4.ⲆΔⵠᐃⲆΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2))) {
          v2862.ⵠⲆⵠⲆⲆⲆᐃᐃⲆ(v2797);
          if (ga) {
            ga("send", "event", "Game", "lockpick");
          }
        }
        if (v2860.ΔΔⲆⲆΔ.open) {
          if (v2803 = vThis4.ΔΔⲆⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            v2862.ΔΔⲆⲆΔ();
            if (ga) {
              ga("send", "event", "Game", "resurrection");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.id < 0 && !v2860.ᐃΔΔᐃᐃ.enabled && !vThis4.ΔΔᐃᐃ.open) {
          for (var v2805 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ, v2806 = 0; v2805.length > v2806; v2806++) {
            if (v2803 = v2805[v2806].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
              if (p1722.which != 1 || p1722.shiftKey) {
                if ((p1722.which == 1 && p1722.shiftKey || p1722.which == 3) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                  vThis4.ΔΔᐃᐃ.ⵠΔΔΔⵠᐃΔ(v2805[v2806].id);
                }
              } else {
                v2862.ΔⵠⵠΔᐃ(v2805[v2806].id, v2806);
              }
            } else if (v2797.open && (v2797.id < 0 || v2797.id === v2805[v2806].id)) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                v2862.ᐃᐃᐃᐃⲆⲆᐃⵠΔ(v2797, v2805[v2806].id, p1722.shiftKey ? 10 : 1);
              }
            } else if (v2799.open && v2805[v2806].id === 282) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                v2862.ᐃᐃⵠⲆᐃⵠΔⲆΔ(v2799);
              }
            } else if (v2798.open && v2805[v2806].id === 200) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                v2862.ΔᐃΔⵠΔⵠⲆᐃⲆ(v2798, p1722.shiftKey ? 10 : 1);
              }
            } else if (v2800.open && v2805[v2806].id === 227) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                v2862.ⲆᐃᐃᐃᐃⲆΔⵠᐃ(v2800, p1722.shiftKey ? 10 : 1);
              }
            } else if (v2801.open && v2805[v2806].id === 200) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                v2862.ⵠⵠⲆΔⵠᐃΔⲆᐃ(v2801, p1722.shiftKey ? 10 : 1);
              }
            } else if (v2802.open && (v2805[v2806].id === 200 || v2805[v2806].id === 224)) {
              if ((v2803 = vThis4.ⲆΔᐃᐃΔ[v2805[v2806].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) {
                if (v2805[v2806].id === 200) {
                  v2862.ⵠⲆⲆᐃᐃᐃΔ(v2802, p1722.shiftKey ? 10 : 1, 0);
                } else {
                  v2862.ⵠⲆⲆᐃᐃᐃΔ(v2802, 0, p1722.shiftKey ? 10 : 1);
                }
              }
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.id < 0 && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !v2860.ᐃΔΔᐃᐃ.enabled && !vThis4.ΔΔᐃᐃ.open && !v2860.ⵠⲆᐃᐃΔ) {
          v2805 = v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ;
          v2806 = 0;
          for (; v2806 < v2805.length; v2806++) {
            if (v2803 = v2805[v2806].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
              ΔᐃⲆᐃᐃ = v2862.ⲆΔᐃⵠΔⵠΔΔⵠ(v2805[v2806].id);
              if (ΔᐃⲆᐃᐃ && ga) {
                ga("send", "event", "Game", "craft", v602[v722[v2805[v2806].id].ⵠⵠⲆΔ].name);
              }
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.id < 0 && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && v2860.ⲆⵠⵠⵠΔ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open) {
          if (v2803 = vThis4.ⲆⵠⵠⵠΔ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0)) {
            v3057.ⲆⵠⵠⵠΔ.select();
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open) {
          if (v3058.ⲆⵠⵠᐃΔ) {
            if (v2803 = vThis4.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
              v3058.select();
              if (ga) {
                ga("send", "event", "Game", "sound on");
              }
            }
          } else if (v2803 = vThis4.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            v3058.select();
            if (ga) {
              ga("send", "event", "Game", "sound off");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
          if (v2803 = vThis4.options.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            vThis4.options.ΔΔⲆⵠΔᐃΔΔⵠ();
            if (ga) {
              ga("send", "event", "Game", "options");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open && vThis4.ᐃⲆⵠΔΔⵠᐃ === 1) {
          if (v2803 = vThis4.ⲆⲆΔᐃⵠ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            vThis4.ⲆⲆΔᐃⵠ.select();
            if (ga) {
              ga("send", "event", "Game", "market");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ΔΔᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && vThis4.ⵠᐃⵠΔᐃⵠᐃ === 1) {
          if (v2803 = vThis4.ⵠⲆⵠᐃⲆ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            vThis4.ⵠⲆⵠᐃⲆ.ᐃⲆⵠⲆᐃⲆⵠⵠᐃ();
            if (ga) {
              ga("send", "event", "Game", "recipe");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⲆⲆΔᐃⵠ.open && v2859.mode !== 2 && v2859.mode !== 5 && vThis4.ᐃⲆⵠᐃᐃᐃⲆ === 1) {
          if (v2803 = vThis4.ⵠᐃᐃᐃ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 2)) {
            vThis4.ⵠᐃᐃᐃ.select();
            if (ga) {
              ga("send", "event", "Game", "quests");
            }
          }
        }
        if (v2860.ⵠⲆᐃᐃ.ΔⵠΔⵠⵠ && p1722.which == 3) {
          vThis4.ΔΔⲆⲆⲆ.ⵠΔΔΔⵠᐃΔ();
        }
      }
    };
    this.ᐃⵠⵠⵠΔⲆⵠ = false;
    this.ΔⵠⲆⲆΔⵠᐃ = function (p1723) {
      v3090.ΔΔⲆΔ = f435(vThis4.ⵠΔΔ, p1723);
      var vVVVVV16232 = vVVVV1623;
      v3057.ᐃⵠᐃᐃⵠ.display = 0;
      v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.ⵠᐃⵠⵠΔ(v3090.ΔΔⲆΔ);
      if (vThis4.ⲆⲆΔⲆⲆ != -1) {
        vVVVVV16232 |= vThis4.ΔⲆᐃΔⲆ[vThis4.ⲆⲆΔⲆⲆ].button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      var v2807 = v2860.Ⲇᐃⵠⵠ;
      if (v2807.open && v2807.ΔᐃⲆᐃΔⲆⲆ > 0) {
        vVVVVV16232 |= vThis4.ⵠΔᐃᐃΔΔΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      var v2808 = v2860.ⵠΔᐃⵠ;
      if (v2808.open && v2808.ⵠᐃⵠᐃⲆΔⲆ > 0) {
        vVVVVV16232 |= vThis4.ⲆⲆᐃⵠᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⵠⲆⵠⵠΔΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⲆᐃⵠΔⲆⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ᐃⲆⲆΔᐃⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⲆⲆΔⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ᐃⵠΔᐃᐃΔⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⲆᐃΔᐃᐃΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⵠⵠⵠΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ᐃᐃᐃΔΔⵠᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ΔⵠⲆⵠᐃⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ΔᐃⵠΔᐃⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ΔⲆᐃⵠⵠⲆⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ᐃΔⵠᐃΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        vVVVVV16232 |= vThis4.ⵠⵠᐃΔⵠⵠⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      var v2809 = v2860.ⵠᐃⲆΔ;
      if (v2809.open && v2809.ᐃᐃⲆᐃᐃᐃᐃ > 0) {
        vVVVVV16232 |= vThis4.ⵠⵠΔⲆᐃᐃⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (v2860.sign.open) {
        vVVVVV16232 |= vThis4.sign.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      var v2810 = v2860.ᐃᐃᐃᐃ;
      if (v2860.ⵠⲆᐃᐃ.id < 0 && v2810.id >= 0 && !v2860.ᐃΔΔᐃᐃ.enabled && (!v2860.ᐃᐃᐃᐃ.lock || v2860.ᐃᐃᐃᐃ.ΔⲆⲆᐃ === v2860.id)) {
        vVVVVV16232 |= vThis4.ᐃΔⵠ[v2810.id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (v2860.ΔΔⲆⲆΔ.open) {
        vVVVVV16232 |= vThis4.ΔΔⲆⲆΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (!v2860.ᐃᐃᐃᐃ.lock && !v2860.ᐃΔΔᐃᐃ.enabled) {
        if (v2860.ᐃᐃᐃᐃ.ΔⵠΔΔⵠⲆᐃ) {
          vVVVVV16232 |= vThis4.ΔΔᐃᐃⵠⲆⲆ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        }
      }
      if (v2860.ᐃᐃᐃᐃ.ⲆⵠⲆⲆᐃⵠᐃ && !v2860.ᐃΔΔᐃᐃ.enabled) {
        vVVVVV16232 |= vThis4.ⲆΔⵠᐃⲆΔⵠ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (v2860.ⵠⲆᐃᐃ.id < 0 && !v2860.ᐃΔΔᐃᐃ.enabled) {
        for (var v2811 = v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ, v2812 = 0; v2811.length > v2812; v2812++) {
          var v2813 = v2811[v2812].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
          vVVVVV16232 |= v3057.ᐃⵠᐃᐃⵠ.ⵠⲆⵠᐃ(v2813, v2811[v2812], 0);
          if (v2810.open && (v2810.id < 0 || v2810.id == v2811[v2812].id) || v2860.ᐃΔⵠᐃᐃ.open && v2811[v2812].id == 200 || v2860.ΔⲆⲆᐃⲆ.open && v2811[v2812].id === 282 || v2860.ⵠᐃⲆΔ.open && (v2811[v2812].id == 200 || v2811[v2812].id == 224) || v2860.Ⲇᐃⵠⵠ.open && v2811[v2812].id == 227 || v2860.ⵠΔᐃⵠ.open && v2811[v2812].id == 200) {
            vVVVVV16232 |= vThis4.ⲆΔᐃᐃΔ[v2811[v2812].id].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
          }
        }
      }
      if (v2860.ⵠⲆᐃᐃ.id < 0 && v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !v2860.ᐃΔΔᐃᐃ.enabled && !v2860.ⵠⲆᐃᐃΔ) {
        v2811 = v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ;
        v2812 = 0;
        for (; v2812 < v2811.length; v2812++) {
          v2813 = vV16;
          v2813 = v2811[v2812].ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
          vVVVVV16232 |= v3057.ᐃⵠᐃᐃⵠ.ⵠⲆⵠᐃ(v2813, v2811[v2812], 1);
        }
      }
      if (!!(v2860.ⵠⲆᐃᐃ.id < 0) && !!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !!v2860.ⲆⵠⵠⵠΔ.open && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        vVVVVV16232 |= vThis4.ⲆⵠⵠⵠΔ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open && vThis4.ⵠᐃⵠΔᐃⵠᐃ === 1) {
        vVVVVV16232 |= vThis4.ⵠⲆⵠᐃⲆ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (!!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        vVVVVV16232 |= vThis4.options.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0 && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open && vThis4.ᐃⲆⵠΔΔⵠᐃ === 1) {
        vVVVVV16232 |= vThis4.ⲆⲆΔᐃⵠ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (!!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⵠᐃᐃᐃ.open && !vThis4.options.open && !vThis4.ⲆⲆΔᐃⵠ.open) {
        if (v3058.ⲆⵠⵠᐃΔ) {
          vVVVVV16232 |= vThis4.ⵠΔⲆⵠ.ᐃΔΔⵠⲆⵠΔ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        } else {
          vVVVVV16232 |= vThis4.ⵠΔⲆⵠ.ΔⵠⲆⲆΔⲆᐃ.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
        }
      }
      if (!!(v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ < 0) && !vThis4.ⵠⲆⵠᐃⲆ.open && !vThis4.ΔΔᐃᐃ.open && !vThis4.options.open && !vThis4.ΔΔⲆⲆⲆ.open && !vThis4.ⲆⲆΔᐃⵠ.open && v2859.mode !== 2 && v2289.ⵠΔⲆⲆⵠⵠⵠᐃΔ !== v2859.mode && vThis4.ᐃⲆⵠᐃᐃᐃⲆ === 1) {
        vVVVVV16232 |= vThis4.ⵠᐃᐃᐃ.button.ⵠⲆⵠᐃ(vThis4.ⵠΔΔ, v3090.ΔΔⲆΔ, 0);
      }
      if (vThis4.ᐃⵠⵠⵠΔⲆⵠ !== vVVVVV16232) {
        vThis4.ᐃⵠⵠⵠΔⲆⵠ = vVVVVV16232;
        p1697.style.cursor = vVVVVV16232 ? vThis4.ΔⵠΔΔᐃᐃⲆ : vThis4.ΔΔⲆⵠΔΔⵠ;
      }
    };
    this.ⲆⲆⵠΔᐃⲆΔ = function () {
      vWindow.addEventListener("mousedown", this.ⲆⲆⲆⵠⵠⲆΔ, vVV163);
      vWindow.addEventListener("mouseup", this.ⵠΔⵠᐃⵠⲆⵠ, vVVVVV1623);
      vWindow.addEventListener("mousemove", this.ΔⵠⲆⲆΔⵠᐃ, false);
      vWindow.addEventListener("keyup", this.ΔΔᐃᐃⲆΔⵠ, false);
      vWindow.addEventListener("keydown", this.ⵠⲆΔᐃᐃⵠΔ, false);
    };
    this.ⲆⲆⵠⲆΔᐃⲆ = function () {
      vWindow.removeEventListener("mousedown", this.ⲆⲆⲆⵠⵠⲆΔ, vV16);
      vWindow.removeEventListener("mouseup", this.ⵠΔⵠᐃⵠⲆⵠ, false);
      vWindow.removeEventListener("mousemove", this.ΔⵠⲆⲆΔⵠᐃ, vVVV16222);
      vWindow.removeEventListener("keyup", this.ΔΔᐃᐃⲆΔⵠ, false);
      vWindow.removeEventListener("keydown", this.ⵠⲆΔᐃᐃⵠΔ, vVVV1623);
    };
  }
  function f511() {
    ⵠⵠΔ.ⲆⵠᐃⲆΔⵠⲆ("https://twitter.com/intent/tweet?text=I%20survived%20" + v2860.ⵠᐃⵠ + "%20days%20with%20" + v2860.ᐃⲆΔⲆᐃⲆΔ.ΔⲆΔΔᐃ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
  }
  function f512(p1724, p1725, p1726) {
    const v2814 = (0 << (p1724 >> 24 & 255)) + (16 << (p1724 & 255)) + (8 << (p1724 >> 8 & 255)) + (24 << (p1724 >> 16 & 255));
    const v2815 = ~(p1726 & 761) & (p1726 | 761);
    return (2147483587 + (48045 + (f9(v2814, (24 << (p1725 >> 8 & 255)) + (8 << (p1725 & 255)) + (16 << (p1725 >> 24 & 255)) + (0 << (p1725 >> 16 & 255))) ^ f513(v2815, v2814))) * 2147483629) % 2147483647;
  }
  function f513(p1727, p1728) {
    const v2816 = p1727 ^ 26051;
    const v2817 = (24 << (p1728 >> 24 & 255)) + (0 << (p1728 & 255)) + (16 << (p1728 >> 8 & 255)) + (8 << (p1728 >> 16 & 255));
    const vF83 = f8(v2816, v2817, 0, v2817, v2816);
    f444(v2816, v2817, v2816, v2817, v2816);
    return ~(vF83 & 26853) & 26853 | ~(vF83 & 26853) & vF83;
  }
  function f514() {
    ⵠⵠΔ.ⲆⵠᐃⲆΔⵠⲆ("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
  }
  var v2818 = 1;
  var v2819 = 1;
  var v2820 = {
    ᐃᐃⵠΔⲆⵠᐃ: 12,
    ⲆΔΔⲆⵠⲆⵠⵠᐃ: 12,
    ΔᐃⲆΔᐃⵠΔΔΔ: 5000,
    ⵠⲆΔⲆΔΔᐃ: 3000,
    Δᐃᐃ: 6,
    ⵠΔΔⲆᐃ: 3,
    ΔⲆⵠΔᐃ: 1,
    ⲆᐃⵠⲆⲆⵠⵠ: 460000,
    ⲆᐃⲆⲆΔ: 8,
    ⵠⵠⵠⲆⵠᐃⲆⵠⵠ: 12,
    ΔᐃⵠⵠⵠⲆΔᐃⵠ: 5000,
    ⲆᐃᐃⲆΔΔⵠΔⲆ: 5000,
    ΔΔⵠᐃᐃ: 2
  };
  var v2821 = [];
  v2821[-1] = 1;
  v2821[46] = 1;
  v2821[85] = 1;
  v2821[v595.ⵠᐃΔⲆⲆᐃΔⲆΔ] = 2;
  v2821[8] = 2;
  v2821[1] = 2;
  v2821[3] = 2;
  v2821[4] = 2;
  v2821[49] = 2;
  v2821[50] = 2;
  v2821[9] = 2;
  v2821[103] = 2;
  v2821[0] = 2;
  v2821[109] = 2;
  v2821[17] = 2;
  v2821[5] = 2;
  v2821[6] = 2;
  v2821[48] = 2;
  v2821[v595.ⲆᐃΔᐃⲆⲆⵠᐃⲆ] = 2;
  v2821[18] = 2;
  v2821[12] = 2;
  v2821[13] = 2;
  v2821[14] = 2;
  v2821[15] = 2;
  v2821[16] = 2;
  v2821[60] = 2;
  v2821[v595.ΔⲆΔᐃᐃᐃⲆΔⵠ] = 2;
  v2821[62] = 2;
  v2821[63] = 2;
  v2821[64] = 2;
  v2821[65] = 2;
  v2821[66] = 2;
  v2821[72] = 2;
  v2821[108] = 2;
  v2821[100] = 2;
  v2821[99] = 2;
  v2821[82] = 3;
  v2821[86] = 3;
  v2821[87] = 3;
  v2821[88] = 3;
  ΔⵠΔⵠ = [];
  ΔⵠΔⵠ[0] = 0;
  ΔⵠΔⵠ[1] = 1;
  ΔⵠΔⵠ[2] = 1;
  ΔⵠΔⵠ[3] = 1;
  ΔⵠΔⵠ[4] = 0;
  ΔⵠΔⵠ[5] = 0;
  ΔⵠΔⵠ[6] = 0;
  const v2822 = String.fromCharCode;
  const vV2822 = v2822(101);
  const vV28222 = v2822(118);
  const vV28223 = v2822(97);
  const vV28224 = v2822(108);
  ΔⵠΔⵠ[7] = 0;
  ΔⵠΔⵠ[8] = 0;
  ΔⵠΔⵠ[9] = 0;
  ΔⵠΔⵠ[10] = 1;
  ΔⵠΔⵠ[11] = 1;
  ΔⵠΔⵠ[12] = 1;
  ΔⵠΔⵠ[13] = 1;
  ΔⵠΔⵠ[14] = 1;
  ΔⵠΔⵠ[15] = 1;
  ΔⵠΔⵠ[16] = 0;
  ΔⵠΔⵠ[17] = 0;
  ΔⵠΔⵠ[18] = 0;
  ΔⵠΔⵠ[19] = 0;
  ΔⵠΔⵠ[20] = 0;
  ΔⵠΔⵠ[21] = 0;
  ΔⵠΔⵠ[22] = 0;
  ΔⵠΔⵠ[23] = 1;
  ΔⵠΔⵠ[24] = 1;
  ΔⵠΔⵠ[25] = 1;
  ΔⵠΔⵠ[26] = 1;
  ΔⵠΔⵠ[27] = 1;
  ΔⵠΔⵠ[28] = 1;
  ΔⵠΔⵠ[29] = 1;
  ΔⵠΔⵠ[30] = 1;
  ΔⵠΔⵠ[31] = 1;
  ΔⵠΔⵠ[32] = 1;
  ΔⵠΔⵠ[33] = 1;
  ΔⵠΔⵠ[34] = 1;
  ΔⵠΔⵠ[35] = 1;
  ΔⵠΔⵠ[36] = 1;
  ΔⵠΔⵠ[37] = 1;
  ΔⵠΔⵠ[38] = 1;
  ΔⵠΔⵠ[40] = 0;
  ΔⵠΔⵠ[41] = 0;
  ΔⵠΔⵠ[42] = 0;
  ΔⵠΔⵠ[50] = 1;
  ΔⵠΔⵠ[51] = 1;
  ΔⵠΔⵠ[52] = 1;
  ΔⵠΔⵠ[55] = 0;
  ΔⵠΔⵠ[56] = 0;
  ΔⵠΔⵠ[57] = 0;
  ΔⵠΔⵠ[58] = 0;
  ⲆⵠΔⵠᐃ = [];
  ⲆⵠΔⵠᐃ[v2296.ΔⵠᐃⲆⵠ] = 0;
  ⲆⵠΔⵠᐃ[1] = 0;
  ⲆⵠΔⵠᐃ[38] = 0;
  ⲆⵠΔⵠᐃ[6] = 0;
  ⲆⵠΔⵠᐃ[3] = -1;
  ⲆⵠΔⵠᐃ[40] = -1;
  ⲆⵠΔⵠᐃ[2] = 0;
  ⲆⵠΔⵠᐃ[4] = 0;
  ⲆⵠΔⵠᐃ[39] = 0;
  ⲆⵠΔⵠᐃ[42] = 0;
  ⲆⵠΔⵠᐃ[41] = 1;
  ⲆⵠΔⵠᐃ[44] = 1;
  ⲆⵠΔⵠᐃ[7] = 1;
  ⲆⵠΔⵠᐃ[8] = 1;
  ⲆⵠΔⵠᐃ[9] = 1;
  ⲆⵠΔⵠᐃ[19] = 1;
  ⲆⵠΔⵠᐃ[59] = 1;
  ⲆⵠΔⵠᐃ[5] = 0;
  ⲆⵠΔⵠᐃ[12] = 1;
  ⲆⵠΔⵠᐃ[13] = 1;
  ⲆⵠΔⵠᐃ[14] = 1;
  ⲆⵠΔⵠᐃ[20] = 1;
  ⲆⵠΔⵠᐃ[61] = 1;
  ⲆⵠΔⵠᐃ[10] = 0;
  ⲆⵠΔⵠᐃ[15] = 1;
  ⲆⵠΔⵠᐃ[16] = 1;
  ⲆⵠΔⵠᐃ[17] = 1;
  ⲆⵠΔⵠᐃ[21] = 1;
  ⲆⵠΔⵠᐃ[60] = 1;
  ⲆⵠΔⵠᐃ[54] = 0;
  ⲆⵠΔⵠᐃ[55] = 1;
  ⲆⵠΔⵠᐃ[56] = 1;
  ⲆⵠΔⵠᐃ[57] = 1;
  ⲆⵠΔⵠᐃ[58] = 1;
  ⲆⵠΔⵠᐃ[62] = 1;
  ⲆⵠΔⵠᐃ[18] = 1;
  ⲆⵠΔⵠᐃ[22] = 1;
  ⲆⵠΔⵠᐃ[23] = 1;
  ⲆⵠΔⵠᐃ[11] = 0;
  ⲆⵠΔⵠᐃ[43] = 1;
  var v2823 = {
    ⲆΔΔᐃⲆⵠΔ: {
      ΔⲆⵠⲆⵠ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        d2: [90684, 300, vVVV1622],
        d0: [90086, 300, vV16],
        d1: [90391, 300, false]
      },
      sample: {
        d0: 8,
        d1: 8,
        d2: 8
      }
    },
    ⲆⵠᐃΔⲆⵠⲆ: {
      ΔⲆⵠⲆⵠ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        p1: [89549, 300, false],
        p0: [89303, 300, false],
        p2: [89815, 300, false]
      },
      sample: {
        p0: 8,
        p1: 8,
        p2: 8
      }
    },
    ᐃΔⲆⵠΔΔⲆ: {
      ΔⲆⵠⲆⵠ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        w0: [88195, 300, vVV1623],
        w1: [88473, 300, vVV164],
        w3: [89025, 300, vVV1623],
        w2: [88751, 300, false]
      },
      sample: {
        w0: 8,
        w1: 8,
        w2: 8,
        w3: 8
      }
    },
    ᐃᐃⵠᐃᐃᐃΔ: {
      ΔⲆⵠⲆⵠ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        ΔΔⵠΔⵠΔⵠ: [30562, 655, vV124],
        Ⲇᐃᐃᐃᐃᐃⵠ: [31658, 813, true],
        ⲆⲆⵠᐃⵠᐃᐃ: [3100, 8800, true],
        ⵠⵠⵠⲆⵠⲆⵠ: [92249, 500, false],
        ΔᐃⲆⲆⲆᐃⵠ: [66961, 21223, vVV123],
        ⵠⲆⵠⲆⵠΔⲆ: [91022, 400, false],
        ΔᐃⲆⲆΔⲆᐃ: [66014, 925, true],
        ᐃΔᐃᐃⵠ: [91431, 400, vVVV163],
        ⵠⲆᐃⲆᐃⵠᐃ: [66961, 21223, true],
        ᐃΔⵠᐃⵠᐃΔⲆⵠ: [100, 2800, true],
        ⵠⲆⲆΔΔ: [12356, 6965, true],
        ⵠⵠⲆⵠᐃΔᐃ: [54524, 11393, vVVVVV1222],
        ΔⵠⵠΔⵠ: [28380, 1797, vV12],
        ⵠΔΔⵠⲆΔΔ: [32604, 21890, vVVVVV12232],
        ΔΔⲆΔⵠᐃΔ: [19882, 8301, vVVV122]
      },
      sample: {
        ᐃΔⵠᐃⵠᐃΔⲆⵠ: 1,
        ⲆⲆⵠᐃⵠᐃᐃ: 1,
        ΔΔⲆΔⵠᐃΔ: 1,
        ⵠΔΔⵠⲆΔΔ: 1,
        ⵠⵠⲆⵠᐃΔᐃ: 1,
        ΔᐃⲆⲆⲆᐃⵠ: 1,
        ⵠⲆᐃⲆᐃⵠᐃ: 1,
        ⵠⲆⲆΔΔ: 8,
        ΔⵠⵠΔⵠ: 8,
        ΔΔⵠΔⵠΔⵠ: 8,
        Ⲇᐃᐃᐃᐃᐃⵠ: 8,
        ΔᐃⲆⲆΔⲆᐃ: 8,
        ⵠⲆⵠⲆⵠΔⲆ: 6,
        ᐃΔᐃᐃⵠ: 6,
        ⵠⵠⵠⲆⵠⲆⵠ: 6
      }
    }
  };
  function f515(p1729, p1730, p1731, p1732, p1733, p1734, p1735, p1736, p1737, p1738, p1739) {
    this.r = 1;
    this.ᐃⵠⲆΔⲆ = p1729;
    this.ⲆⵠⵠⲆⵠΔⲆ = p1729;
    this.ΔᐃⲆ = p1730;
    this.ⵠᐃⵠ = p1731;
    this.fade = p1732;
    this.ⵠΔⲆⵠΔⵠΔ = p1733;
    this.ⲆᐃᐃⲆⲆⵠⲆ = p1734;
    this.ⲆⵠⲆΔ = p1735;
    this.ᐃᐃⲆᐃⲆⵠΔ = p1736;
    this.source = p1737;
    this.source.ᐃΔΔⵠⲆⲆᐃ = p1737.x + p1737.w;
    this.source.ΔⵠΔᐃΔ = p1737.y + p1737.ᐃⵠⵠ;
    this.ⵠΔⲆΔᐃⵠⵠᐃᐃ = p1738;
    this.ᐃᐃΔⵠΔⲆⵠ = p1739;
    this.ΔᐃᐃΔᐃΔΔ = 0;
    this.ΔⲆᐃⵠΔⵠᐃ = {
      d: 5,
      ⲆΔⵠⵠⲆ: 5
    };
    this.ᐃΔᐃᐃⲆ = function () {
      this.ᐃⵠⲆΔⲆ -= v3091;
      if (this.ᐃⵠⲆΔⲆ < 0) {
        this.ᐃⵠⲆΔⲆ = this.ⲆⵠⵠⲆⵠΔⲆ;
        var v2824 = v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ.playing(this.ΔᐃⲆ);
        var v2825 = v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ.playing(this.ⵠᐃⵠ);
        if (v2824 && !v2825) {
          var v2826 = this.ⲆⵠⲆΔ.volume(this.ΔᐃⲆ) * v2818;
          var v2827 = v2818 * (Math.random() * this.ⲆᐃᐃⲆⲆⵠⲆ + this.ⵠΔⲆⵠΔⵠΔ);
          this.ⲆⵠⲆΔ.fade(v2826, v2827, this.fade, this.ΔᐃⲆ);
        } else if (!v2824 && v2825) {
          v2826 = this.ⲆⵠⲆΔ.volume(this.ⵠᐃⵠ) * v2818;
          v2827 = v2818 * (this.ⲆᐃᐃⲆⲆⵠⲆ * Math.random() + this.ⵠΔⲆⵠΔⵠΔ);
          this.ⲆⵠⲆΔ.fade(v2826, v2827, this.fade, this.ⵠᐃⵠ);
        }
      }
    };
    this.transition = function () {
      this.ᐃⵠⲆΔⲆ = this.ⲆⵠⵠⲆⵠΔⲆ;
      this.ΔⲆᐃⵠΔⵠᐃ.d = this.ΔⲆᐃⵠΔⵠᐃ.ⲆΔⵠⵠⲆ;
      if (v2859.time) {
        this.ⲆⵠⲆΔ.fade(0, this.ⵠΔⲆⵠΔⵠΔ * v2818, this.ᐃᐃⲆᐃⲆⵠΔ, this.ΔᐃⲆ);
        this.ⲆⵠⲆΔ.play(this.ΔᐃⲆ);
        if (this.ⲆⵠⲆΔ.playing(this.ⵠᐃⵠ)) {
          var v2828 = this.ⲆⵠⲆΔ.volume(this.ⵠᐃⵠ) * v2818;
          this.ⲆⵠⲆΔ.fade(v2828, 0, this.ᐃᐃⲆᐃⲆⵠΔ, this.ⵠᐃⵠ);
        }
      } else {
        this.ⲆⵠⲆΔ.fade(0, v2818 * this.ⵠΔⲆⵠΔⵠΔ, this.ᐃᐃⲆᐃⲆⵠΔ, this.ⵠᐃⵠ);
        this.ⲆⵠⲆΔ.play(this.ⵠᐃⵠ);
        if (this.ⲆⵠⲆΔ.playing(this.ΔᐃⲆ)) {
          v2828 = this.ⲆⵠⲆΔ.volume(this.ΔᐃⲆ) * v2818;
          this.ⲆⵠⲆΔ.fade(v2828, 0, this.ᐃᐃⲆᐃⲆⵠΔ, this.ΔᐃⲆ);
        }
      }
    };
    this.check = function (p1740) {
      if (this.ΔᐃᐃΔᐃΔΔ) {
        if (ⵠⵠΔ.ᐃᐃΔⵠΔⲆⵠ(p1740, this.ⵠΔⲆΔᐃⵠⵠᐃᐃ)) {
          if (!v3058.transition && v2859.ⲆⵠΔΔΔ.now < 460000) {
            if (v2859.time) {
              if (!this.ⲆⵠⲆΔ.playing(this.ΔᐃⲆ)) {
                this.ΔⲆᐃⵠΔⵠᐃ.d -= v3091;
                if (this.ΔⲆᐃⵠΔⵠᐃ.d < 0) {
                  this.transition();
                }
              }
            } else if (!this.ⲆⵠⲆΔ.playing(this.ⵠᐃⵠ)) {
              this.ΔⲆᐃⵠΔⵠᐃ.d -= v3091;
              if (this.ΔⲆᐃⵠΔⵠᐃ.d < 0) {
                this.transition();
              }
            }
          }
        } else {
          this.ΔᐃᐃΔᐃΔΔ = 0;
          if (this.ⲆⵠⲆΔ.playing(this.ΔᐃⲆ)) {
            var v2829 = v2818 * this.ⲆⵠⲆΔ.volume(this.ΔᐃⲆ);
            this.ⲆⵠⲆΔ.fade(v2829, 0, this.ᐃᐃⲆᐃⲆⵠΔ, this.ΔᐃⲆ);
          }
          if (this.ⲆⵠⲆΔ.playing(this.ⵠᐃⵠ)) {
            v2829 = v2818 * this.ⲆⵠⲆΔ.volume(this.ⵠᐃⵠ);
            this.ⲆⵠⲆΔ.fade(v2829, 0, this.ᐃᐃⲆᐃⲆⵠΔ, this.ⵠᐃⵠ);
          }
        }
      } else if (ⵠⵠΔ.ᐃᐃΔⵠΔⲆⵠ(p1740, this.ᐃᐃΔⵠΔⲆⵠ)) {
        this.ΔᐃᐃΔᐃΔΔ = 1;
        if (!v3058.transition && v2859.ⲆⵠΔΔΔ.now < 460000) {
          this.transition();
        }
      }
    };
    this.ⵠΔᐃ = function (p1741, p1742) {
      var v2830;
      var v2831;
      v2830 = this.source.x > p1741.x ? v3058.ⵠᐃᐃⵠᐃⲆΔ(this.source.x) : this.source.ᐃΔΔⵠⲆⲆᐃ < p1741.x ? v3058.ⵠᐃᐃⵠᐃⲆΔ(this.source.ᐃΔΔⵠⲆⲆᐃ) : p1742.x;
      v2831 = p1741.y < this.source.y ? v3058.ⵠⵠⲆⵠΔᐃⵠ(this.source.y) : this.source.ΔⵠΔᐃΔ < p1741.y ? v3058.ⵠⵠⲆⵠΔᐃⵠ(this.source.ΔⵠΔᐃΔ) : p1742.y;
      this.ⲆⵠⲆΔ.pos(v2830, v2831, -0.5, this.ΔᐃⲆ);
      this.ⲆⵠⲆΔ.pos(v2830, v2831, -0.5, this.ⵠᐃⵠ);
    };
  }
  function f516(p1743, p1744, p1745, p1746, p1747, p1748) {
    const v2832 = p1743 ^ 60862;
    const v2833 = (0 << (p1744 & 255)) + (8 << (p1744 >> 24 & 255)) + (24 << (p1744 >> 8 & 255)) + (16 << (p1744 >> 16 & 255));
    const v2834 = p1745 ^ 38362;
    const v2835 = (24 << (p1746 & 255)) + (16 << (p1746 >> 16 & 255)) + (0 << (p1746 >> 24 & 255)) + (8 << (p1746 >> 8 & 255));
    const v2836 = ((14216 + p1747) * 214013 + 2531011) % 4294967296;
    const v2837 = (2147483587 + (p1748 + 39243) * 2147483629) % 2147483647;
    const vF583 = f58(v2832, v2833, v2834, v2835, v2836);
    const vF64 = f64(v2837, v2832, v2833, v2834);
    return (24 << ((vF583 ^ vF64) >> 8 & 255)) + (8 << ((vF583 ^ vF64) >> 24 & 255)) + (16 << ((vF583 ^ vF64) & 255)) + (0 << ((vF583 ^ vF64) >> 16 & 255));
  }
  function f517(p1749, p1750, p1751, p1752, p1753) {
    vVVUndefined63(v555, p1749, p1750, p1751, p1752, p1753);
    const v2838 = ((244 + (((94 + (v557[0] ^ v557[1])) * 48271 + 0) % 2147483647 ^ v557[2])) * 48271 + 0) % 2147483647 ^ 44622;
    return (v2838 | 40748) & ~(v2838 & 40748);
  }
  function f518(p1754, p1755) {
    v64(v555, p1754, p1755);
    v2840 = v557[0];
    v2841 = v557[1];
    v2842 = v557[0];
    v2843 = v557[1];
    v2844 = v557[0];
    v61(v555, v2840, v2841, v2842, v2843, v2844);
    const v2839 = ((240 + (f11(v557[0], v557[1], v557[2], v557[3], v557[4], v557[0]) ^ f59(v557[1], v557[2]))) * 75 + 74) % 65537;
    var v2840;
    var v2841;
    var v2842;
    var v2843;
    var v2844;
    f76(v557[1], v557[0], v557[1], v557[0]);
    return ~(v2839 & 11800) & (v2839 | 11800);
  }
  ΔⵠΔⵠᐃ = {
    ΔΔᐃⵠΔⵠᐃ: 300,
    ΔⵠⵠⵠⵠᐃⵠΔᐃ: 0.4,
    ᐃⲆⵠᐃⲆⵠⲆⵠⵠ: 0.2,
    ⲆⵠΔᐃᐃⵠⲆ: 2,
    ⵠⵠΔⵠⵠⲆⵠ: 3,
    ⵠⵠⲆᐃⵠᐃⲆ: 100,
    ⲆⲆᐃᐃⲆᐃᐃ: 0,
    ΔⲆᐃⵠΔᐃⵠ: 100,
    ⵠΔⵠⲆᐃⲆᐃᐃΔ: 0.2,
    ⲆΔᐃⲆⵠⵠⲆ: 100,
    ᐃⵠᐃⲆⲆ: 2,
    ΔΔᐃⲆⵠΔⵠ: 1,
    ΔΔⲆⲆᐃᐃⵠⲆΔ: 0.2,
    ⲆⵠᐃⵠⲆⲆⲆ: 4
  };
  function f519(p1756, p1757, p1758) {
    this.ⵠⵠⵠᐃᐃⲆⲆ = p1756;
    this.c = 0;
    this.ⲆⵠⲆΔ = p1757;
    this.ⵠⵠΔⵠΔ = p1758;
    this.max = p1758.length;
    this.play = function () {
      this.c = (this.c + 1) % this.max;
      var v2845 = this.ⵠⵠΔⵠΔ[this.c];
      this.ⵠⵠⵠᐃᐃⲆⲆ.ⵠⲆⲆᐃⲆⲆΔ(this.ⲆⵠⲆΔ, v2845);
      this.ⲆⵠⲆΔ.play(v2845);
    };
  }
  function f520(p1759) {
    this.ᐃΔᐃΔᐃΔⲆ = 1;
    this.ᐃᐃⲆⵠ = 0;
    this.mode = -1;
    this.ΔⵠⵠΔⵠ = v3058.sample.ΔⵠⵠΔⵠ[p1759];
    this.ΔΔⵠΔⵠΔⵠ = v3058.sample.ΔΔⵠΔⵠΔⵠ[p1759];
    this.Ⲇᐃᐃᐃᐃᐃⵠ = v3058.sample.Ⲇᐃᐃᐃᐃᐃⵠ[p1759];
    this.ΔᐃⲆⲆΔⲆᐃ = v3058.sample.ΔᐃⲆⲆΔⲆᐃ[p1759];
    this.ᐃΔⲆΔΔΔᐃ = new f519(this, v2823.ⲆⵠᐃΔⲆⵠⲆ.ΔⲆⵠⲆⵠ, v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃΔⲆΔΔΔᐃ[p1759]);
    this.ⵠΔⵠⲆΔ = new f519(this, v2823.ᐃΔⲆⵠΔΔⲆ.ΔⲆⵠⲆⵠ, v3058.ⵠΔΔⵠᐃⲆⵠ.ⵠΔⵠⲆΔ[p1759]);
    this.ᐃⲆΔⲆΔ = new f519(this, v2823.ⲆΔΔᐃⲆⵠΔ.ΔⲆⵠⲆⵠ, v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃⲆΔⲆΔ[p1759]);
    this.ΔΔΔΔⲆ = p1759;
    this.x = 0;
    this.y = 0;
    this.ⵠᐃⵠⵠΔ = 0;
    this.ᐃⵠⲆΔⲆ = ΔⵠΔⵠᐃ.ⲆⵠΔⵠΔᐃⲆⵠⵠ;
    this.ΔΔⲆΔ = {
      y: 0,
      x: 0
    };
    this.ᐃΔⲆⵠΔ = v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ;
    this.ⲆᐃΔᐃⲆΔⲆⲆΔ = function (p1760) {
      if (p1760 === 1) {
        this.ᐃΔⲆΔΔΔᐃ.play();
      } else if (p1760 === 2) {
        this.ⵠΔⵠⲆΔ.play();
      } else if (p1760 === 3) {
        this.ᐃⲆΔⲆΔ.play();
      }
    };
    this.ΔᐃⵠⵠᐃΔᐃ = function (p1761) {
      if (p1761.ⲆⲆⲆⵠΔⲆⵠ > 0) {
        return ΔⵠΔⵠᐃ.ᐃⵠᐃⲆⲆ;
      } else if (p1761.ⵠᐃⵠΔᐃᐃᐃ > 0) {
        return ΔⵠΔⵠᐃ.ΔΔᐃⲆⵠΔⵠ;
      } else if (p1761.ⲆⵠΔⲆΔ > 0 || p1761.ⲆⵠⵠᐃⲆ > 0) {
        return ΔⵠΔⵠᐃ.ⵠⵠΔⵠⵠⲆⵠ;
      } else {
        return ΔⵠΔⵠᐃ.ⲆⲆᐃᐃⲆᐃᐃ;
      }
    };
    this.ⵠⵠΔⵠᐃ = function (p1762) {
      this.ᐃΔᐃΔᐃΔⲆ = 0;
      this.ᐃᐃⲆⵠ = p1762;
      var v2846 = v2859.ᐃΔⵠⲆⵠ[p1762];
      v2846.ΔΔΔΔⲆ = this.ΔΔΔΔⲆ;
      this.mode = this.ΔᐃⵠⵠᐃΔᐃ(v2846);
      this.ΔΔⲆΔ.x = v2846.x;
      this.ΔΔⲆΔ.y = v2846.y;
    };
    this.ⵠΔⵠᐃⲆⲆⵠ = function () {
      this.ᐃΔᐃΔᐃΔⲆ = 1;
      this.mode = -1;
      this.ᐃΔⲆⵠΔ.stop(this.ΔⵠⵠΔⵠ);
      this.ᐃΔⲆⵠΔ.stop(this.ΔΔⵠΔⵠΔⵠ);
      this.ᐃΔⲆⵠΔ.stop(this.Ⲇᐃᐃᐃᐃᐃⵠ);
      this.ᐃΔⲆⵠΔ.stop(this.ΔᐃⲆⲆΔⲆᐃ);
    };
    this.fade = function (p1763, p1764) {
      var v2847 = v2819 * this.ᐃΔⲆⵠΔ.volume(p1763);
      this.ᐃΔⲆⵠΔ.fade(v2847, 0, p1764, p1763);
    };
    this.ⵠⲆⲆᐃⲆⲆΔ = function (p1765, p1766) {
      if (this.ⵠᐃⵠⵠΔ && this.ΔΔΔΔⲆ) {
        p1765.pos(this.x, this.y, -0.5, p1766);
      }
    };
    this.ᐃΔᐃᐃⲆ = function (p1767, p1768, p1769, p1770, p1771, p1772, p1773) {
      this.ᐃⵠⲆΔⲆ = p1772;
      if (p1770 && this.mode === p1771) {
        var v2848 = this.ᐃΔⲆⵠΔ.volume(p1767) * v2819;
        if (this.ⵠᐃⵠⵠΔ) {
          var v2849 = v2819 * (p1769 * Math.random() + p1768);
          this.ᐃΔⲆⵠΔ.fade(v2848, v2849, p1773, p1767);
        } else {
          this.ᐃΔⲆⵠΔ.fade(v2848, 0, p1773, p1767);
        }
      } else if (p1771 != this.mode && this.ⵠᐃⵠⵠΔ) {
        this.ᐃΔⲆⵠΔ.fade(0, v2819 * (p1768 + p1769), p1773, p1767);
      } else if (this.ⵠᐃⵠⵠΔ) {
        v2848 = v2819 * this.ᐃΔⲆⵠΔ.volume(p1767);
        v2849 = (p1769 * Math.random() + p1768) * v2819;
        this.ᐃΔⲆⵠΔ.fade(v2848, v2849, p1773, p1767);
      }
      this.ⵠⲆⲆᐃⲆⲆΔ(this.ᐃΔⲆⵠΔ, p1767);
      this.ᐃΔⲆⵠΔ.play(p1767);
    };
    this.ⵠΔᐃ = function () {
      var v2850 = v2859.ᐃΔⵠⲆⵠ[this.ᐃᐃⲆⵠ];
      this.ᐃⵠⲆΔⲆ -= v3091;
      if (!(this.ᐃⵠⲆΔⲆ > 0)) {
        var v2851 = 0;
        if (this.ΔΔⲆΔ.x != v2850.x || v2850.y != this.ΔΔⲆΔ.y) {
          if (!this.ⵠᐃⵠⵠΔ) {
            v2851 = 1;
            this.ⵠᐃⵠⵠΔ = 1;
          }
          this.x = v3058.ΔⲆⲆᐃΔΔⵠ(v2850.x, ΔⵠΔⵠᐃ.ⲆⵠΔᐃᐃⵠⲆ);
          this.y = v3058.ΔΔᐃᐃⲆⵠⵠ(v2850.y, ΔⵠΔⵠᐃ.ⲆⵠΔᐃᐃⵠⲆ);
        } else if (this.ⵠᐃⵠⵠΔ) {
          v2851 = 1;
          this.ⵠᐃⵠⵠΔ = 0;
        }
        this.ΔΔⲆΔ.x = v2850.x;
        this.ΔΔⲆΔ.y = v2850.y;
        ΔᐃⲆΔ = this.ΔᐃⵠⵠᐃΔᐃ(v2850);
        if (this.mode != ΔᐃⲆΔ) {
          if (ΔⵠΔⵠᐃ.ΔΔᐃⲆⵠΔⵠ === this.mode) {
            this.fade(this.ΔⵠⵠΔⵠ, ΔⵠΔⵠᐃ.ΔΔᐃⵠΔⵠᐃ);
          } else if (this.mode === ΔⵠΔⵠᐃ.ᐃⵠᐃⲆⲆ) {
            this.fade(this.ΔΔⵠΔⵠΔⵠ, ΔⵠΔⵠᐃ.ΔⲆᐃⵠΔᐃⵠ);
          } else if (ΔⵠΔⵠᐃ.ⲆⲆᐃᐃⲆᐃᐃ === this.mode) {
            this.fade(this.Ⲇᐃᐃᐃᐃᐃⵠ, ΔⵠΔⵠᐃ.ⵠⵠⲆᐃⵠᐃⲆ);
          } else if (this.mode === ΔⵠΔⵠᐃ.ⵠⵠΔⵠⵠⲆⵠ) {
            this.fade(this.ΔᐃⲆⲆΔⲆᐃ, ΔⵠΔⵠᐃ.ⲆΔᐃⲆⵠⵠⲆ);
          }
        }
        if (ΔⵠΔⵠᐃ.ΔΔᐃⲆⵠΔⵠ === ΔᐃⲆΔ) {
          this.ᐃΔᐃᐃⲆ(this.ΔⵠⵠΔⵠ, 0.08, 0.3, v2851, ΔᐃⲆΔ, ΔⵠΔⵠᐃ.ΔⵠⵠⵠⵠᐃⵠΔᐃ, ΔⵠΔⵠᐃ.ΔΔᐃⵠΔⵠᐃ);
        } else if (ΔᐃⲆΔ === ΔⵠΔⵠᐃ.ᐃⵠᐃⲆⲆ) {
          this.ᐃΔᐃᐃⲆ(this.ΔΔⵠΔⵠΔⵠ, 0.2, 0.3, v2851, ΔᐃⲆΔ, ΔⵠΔⵠᐃ.ⵠΔⵠⲆᐃⲆᐃᐃΔ, ΔⵠΔⵠᐃ.ΔⲆᐃⵠΔᐃⵠ);
        } else if (ΔᐃⲆΔ === ΔⵠΔⵠᐃ.ⲆⲆᐃᐃⲆᐃᐃ) {
          this.ᐃΔᐃᐃⲆ(this.Ⲇᐃᐃᐃᐃᐃⵠ, 0.3, 0.6, v2851, ΔᐃⲆΔ, ΔⵠΔⵠᐃ.ᐃⲆⵠᐃⲆⵠⲆⵠⵠ, ΔⵠΔⵠᐃ.ⵠⵠⲆᐃⵠᐃⲆ);
        } else if (ΔⵠΔⵠᐃ.ⵠⵠΔⵠⵠⲆⵠ === ΔᐃⲆΔ) {
          this.ᐃΔᐃᐃⲆ(this.ΔᐃⲆⲆΔⲆᐃ, 0.1, 0.25, v2851, ΔᐃⲆΔ, ΔⵠΔⵠᐃ.ΔΔⲆⲆᐃᐃⵠⲆΔ, ΔⵠΔⵠᐃ.ⲆΔᐃⲆⵠⵠⲆ);
        }
        this.mode = ΔᐃⲆΔ;
      }
    };
    this.check = function () {
      var v2852 = v2859.ᐃΔⵠⲆⵠ[this.ᐃᐃⲆⵠ];
      if (v2852) {
        return vVVV1222;
      } else {
        this.ⵠΔⵠᐃⲆⲆⵠ(v2852);
        return false;
      }
    };
  }
  ᐃⵠΔⲆⲆΔⲆ = 0;
  document.getElementById("version").innerHTML = "52.3";
  if (vWindow.ⲆΔⲆᐃⲆⵠⲆ) {
    var v2853 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v2853;
    var v2854 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v2854;
  }
  var v2855 = 1 + Math.random();
  var v2856 = [];
  var v2857 = {
    time: Math.floor(Math.random() * 2),
    items: []
  };
  document.getElementById("game_body").style.backgroundColor = v594.ᐃᐃⵠΔⲆ[v2857.time];
  v2857.items.push(new f443(1, 0, 0, 0, 0, Math.random() * Math.PI * 2, 2, 1));
  v2857.items.push(new f443(105, 0, 0, 0, 0, 0, 0, 5));
  v2857.items.push(new f443(2, 0, 0, 0, 0, Math.PI / 4, 0, 0));
  v2857.items.push(new f443(105, 0, 0, 0, 0, 0, 0, 5));
  var v2858;
  var v2859;
  var v2860;
  var v2861;
  var v2862 = new function () {
    var vThis5 = this;
    this.ⵠⵠⵠⲆ = null;
    this.ᐃᐃⵠΔᐃ = 0;
    this.ᐃⲆⵠⲆᐃ = [];
    this.ΔⵠⵠᐃᐃᐃΔ = {};
    var v2863 = 207;
    if (v2863 === 12) {
      v2863 = 63;
    }
    this.ⲆⲆⲆᐃᐃᐃⲆ = 86;
    this.ᐃⲆᐃΔΔΔΔ = {};
    this.ⲆΔⵠΔⵠΔⲆ = vVVV162;
    this.ⵠᐃⲆᐃⲆⵠⵠ = 128;
    this.ⲆⲆⲆᐃᐃ = [[], [], [], [], [], [], [], [], []];
    this.ᐃⵠⵠⵠΔΔⵠ = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
    this.ⲆᐃΔΔⵠⲆⵠ = vVV122;
    this.ᐃⵠΔⵠⵠⵠᐃ = false;
    this.ᐃⲆⵠⲆⲆⵠΔ = 250;
    this.ΔᐃⲆⵠⵠᐃⵠ = 4;
    this.ΔᐃⵠⲆΔⵠΔ = 41;
    this.ΔᐃⲆⵠⵠᐃⵠ;
    this.ΔᐃⵠⲆΔⵠΔ;
    this.ⲆⲆⲆⲆᐃ = 0;
    var v2864 = 101;
    if (v2864 >= 1) {
      v2864 = 225;
    }
    this.ⲆⵠⵠᐃΔⲆⵠ = 82;
    this.ΔᐃⲆᐃΔⲆⵠ = this.ⲆⵠⵠᐃΔⲆⵠ;
    this.ΔΔⵠΔΔⵠΔ = 0;
    this.ΔᐃⲆⵠⲆⲆΔ = 33972;
    this.ⲆⵠⵠⵠⲆⵠΔᐃⵠ = 237;
    this.ΔΔΔΔⵠⲆΔ = 40906;
    this.ᐃᐃⲆⵠᐃⲆⲆ = 63;
    var v2865 = 224;
    var v2866 = 228;
    function f521(p1774) {
      let v2867 = p1774.name || p1774.a;
      if (p1774.auto) {
        return v2867;
      } else {
        return v2867 + " [" + p1774.nu + " " + v756[2024] + "]";
      }
    }
    if (v2866 >= 3) {
      v2866 = 147;
    }
    if (v2865 > 4) {
      v2865 = 241;
    }
    this.ΔⲆΔⵠΔᐃⲆ = 122368;
    this.ⵠΔΔⵠⲆᐃΔ = function (p1775) {
      if (vVVVVUndefined173 !== v2263) {
        vThis5.ᐃⲆⵠⲆᐃ.push({
          a: v2263.name,
          gm: v2263.mode,
          idx: 0,
          m: 100,
          nu: 0,
          id: 0
        });
        p1775();
        return;
      }
      fetch(v2267 + "/list", {
        method: "GET"
      }).then(function (p1776) {
        if (p1776.ok) {
          p1776.json().then(function (p1777) {
            vThis5.ᐃⲆⵠⲆᐃ = [];
            vThis5.ᐃⲆᐃΔΔΔΔ = {};
            for (let v2868 in v2289.ⵠΔⵠⵠΔⵠⵠ) {
              const v2869 = v2289.ⵠΔⵠⵠΔⵠⵠ[v2868];
              vThis5.ᐃⲆⵠⲆᐃ.push({
                a: "Auto Select",
                gm: v2869,
                m: 100,
                nu: 0,
                auto: true
              });
            }
            var v2870 = 1;
            var v2871 = 2;
            for (let v2872 = 0; v2872 < p1777.length; v2872++) {
              const v2873 = p1777[v2872];
              const v2874 = v2873.n;
              const v2875 = v2873.l;
              const v2876 = v2873.p;
              const v2877 = [];
              vThis5.ΔⵠⵠᐃᐃᐃΔ[v2874] = v2877;
              const v2878 = [];
              for (let v2879 = 0; v2876.length > v2879; v2879++) {
                const v2880 = v2874 + v2876[v2879][0];
                v2878.push(v2880);
                v2877.push(v2880);
              }
              for (let v2881 = 0; v2875.length > v2881; v2881++) {
                const v2882 = v2875[v2881];
                let v2883;
                let v2884 = v2289.ⵠΔⵠⵠΔⵠⵠ[v2882[v2871]];
                let v2885 = v2884 + v2882[v2870];
                v2883 = v2884 in vThis5.ᐃⲆᐃΔΔΔΔ ? ++vThis5.ᐃⲆᐃΔΔΔΔ[v2884] : vThis5.ᐃⲆᐃΔΔΔΔ[v2884] = 1;
                if (v2885 in vThis5.ᐃⲆᐃΔΔΔΔ) {
                  ⲆᐃᐃⵠΔⵠⵠ = ++vThis5.ᐃⲆᐃΔΔΔΔ[v2885];
                } else {
                  ⲆᐃᐃⵠΔⵠⵠ = vThis5.ᐃⲆᐃΔΔΔΔ[v2885] = 1;
                }
                vThis5.ᐃⲆⵠⲆᐃ.push({
                  name: v2882[4],
                  a: v2289.ᐃᐃᐃⵠΔⵠⵠΔΔ[v2882[v2870]] + " " + ⲆᐃᐃⵠΔⵠⵠ,
                  r: v2882[v2870],
                  gm: v2289.ⵠΔⵠⵠΔⵠⵠ[v2882[v2871]],
                  idx: v2883,
                  m: 100,
                  nu: v2882[3],
                  id: v2882[v2870] + v2882[0],
                  p: v2878
                });
              }
            }
            const v2886 = [];
            const v2887 = [];
            const v2888 = [];
            for (let v2889 = 0; v2889 < vThis5.ᐃⲆⵠⲆᐃ.length; v2889++) {
              const v2890 = vThis5.ᐃⲆⵠⲆᐃ[v2889];
              if (!v2890.auto) {
                if (v2890.gm === v2289.ⵠΔⵠⵠΔⵠⵠ[6]) {
                  if (typeof v2890.name === "string" && (v2890.name.indexOf("Private Server") !== -1 || v2890.nu > 95)) {
                    v2886.push(v2890);
                  } else {
                    v2888.push(v2890);
                  }
                  v2887.push(v2889);
                }
              }
            }
            const v2891 = [];
            v2891.push(...v2888.sort(function (p1778, p1779) {
              return p1779.nu - p1778.nu;
            }));
            v2891.push(...v2886.sort(function (p1780, p1781) {
              return (p1781.nu < 95 ? p1781.nu : 0) - (p1780.nu < 95 ? p1780.nu : 0);
            }));
            for (let v2892 = 0; v2892 < v2887.length; v2892++) {
              const v2893 = v2887[v2892];
              const v2894 = v2891[v2892];
              v2894.idx = v2892 + 1;
              vThis5.ᐃⲆⵠⲆᐃ[v2893] = v2894;
            }
            p1775();
          });
        } else {
          vWindow.setTimeout(function () {
            vThis5.ⵠΔΔⵠⲆᐃΔ(p1775);
          }, 3000);
        }
      });
    };
    this.ᐃᐃΔⲆⵠⲆⲆᐃᐃ = function (p1782) {
      var v2895 = [];
      for (var v2896 = 0; v2896 < p1782.length; v2896++) {
        if (p1782[v2896].a.indexOf(vV562) !== -1) {
          v2895.push(v2896);
        }
      }
      if (v2895.length === 0) {
        return 0;
      } else {
        return v2895[Math.floor(Math.random() * v2895.length)];
      }
    };
    this.ΔᐃᐃⵠΔⵠⵠ = function (p1783) {
      var v2897 = 0;
      for (var v2898 = 0; v2898 < p1783.length; v2898++) {
        v2897 += p1783[v2898].nu;
      }
      var v2899 = document.getElementById("servselect");
      if (v2862.ᐃⵠⵠⵠΔΔⵠ[v2862.ⲆⲆⲆⲆᐃ] === -1) {
        v2862.ᐃⵠⵠⵠΔΔⵠ[v2862.ⲆⲆⲆⲆᐃ] = v2899.selectedIndex = v2862.ᐃᐃΔⲆⵠⲆⲆᐃᐃ(p1783);
      } else {
        v2899.selectedIndex = v2862.ᐃⵠⵠⵠΔΔⵠ[v2862.ⲆⲆⲆⲆᐃ];
      }
      var v2900 = "<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">" + p1783[v2899.selectedIndex].a + (p1783[v2899.selectedIndex].nu > 0 ? " [" + p1783[v2899.selectedIndex].nu + " " + v756[2024] + "]" : "") + "</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">" + v756[2023] + " (" + this.ⲆΔᐃⵠⵠⲆⲆ + ") " + v756[2025] + "</li>";
      for (v2898 = 0; p1783.length > v2898; v2898++) {
        v2900 += "<li role=\"option\">" + f521(p1783[v2898]) + "</li>\n";
      }
      v2900 += "<li role=\"option\" id=\"selectDisabled\">(" + v2897 + ") " + v756[2026] + "</li>";
      v2900 += "</div>";
      v2899.innerHTML = v2900;
      $(".md-select").on("click", function () {
        $(this).toggleClass("active");
      });
      $(".md-select ul li").on("click", function () {
        var v2901 = $(this).text();
        var v2902 = -1;
        for (var v2903 = v2862.ⲆⲆⲆᐃᐃ[v2862.ⲆⲆⲆⲆᐃ], v2904 = 0; v2904 < v2903.length; v2904++) {
          if (v2901 === f521(v2903[v2904])) {
            v2902 = v2904;
            break;
          }
        }
        if (v2902 !== -1) {
          document.getElementById("servselect").selectedIndex = v2902;
          v2862.ᐃⵠⵠⵠΔΔⵠ[v2862.ⲆⲆⲆⲆᐃ] = v2902;
          $(".md-select ul li").removeClass("active");
          $(this).addClass("active");
          $(".md-select label button").text(v2901);
        }
      });
    };
    this.ⲆΔᐃⵠⵠⲆⲆ = 0;
    this.ΔⲆᐃΔᐃⵠⲆΔᐃ = function () {
      this.ⲆΔᐃⵠⵠⲆⲆ = 0;
      for (var v2905 = 0; v2862.ᐃⲆⵠⲆᐃ.length > v2905; v2905++) {
        if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "experimental") {
          this.ⲆⲆⲆᐃᐃ[7].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "zombies") {
          this.ⲆⲆⲆᐃᐃ[2].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "community") {
          this.ⲆⲆⲆᐃᐃ[6].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "forest") {
          this.ⲆⲆⲆᐃᐃ[4].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "battle-royale") {
          this.ⲆⲆⲆᐃᐃ[5].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else if (this.ᐃⲆⵠⲆᐃ[v2905].gm == "vampires") {
          this.ⲆⲆⲆᐃᐃ[3].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        } else {
          this.ⲆⲆⲆᐃᐃ[0].push(this.ᐃⲆⵠⲆᐃ[v2905]);
        }
        this.ⲆΔᐃⵠⵠⲆⲆ += this.ᐃⲆⵠⲆᐃ[v2905].nu;
      }
      for (v2905 = 0; this.ⲆⲆⲆᐃᐃ.length > v2905; v2905++) {
        if (this.ⲆⲆⲆᐃᐃ[v2905].length === 0) {
          this.ⲆⲆⲆᐃᐃ[v2905].push({
            a: v756[2027],
            ⵠⲆΔᐃΔᐃⲆⲆⵠ: 0,
            ⲆΔ: "127.0.0.1",
            ΔΔΔ: 80
          });
        }
      }
      this.ΔᐃᐃⵠΔⵠⵠ(this.ⲆⲆⲆᐃᐃ[0]);
      this.ᐃᐃⲆⲆⲆᐃᐃ = function (p1784) {
        v2862.ⲆⲆⲆⲆᐃ = p1784;
        v2862.ΔᐃᐃⵠΔⵠⵠ(v2862.ⲆⲆⲆᐃᐃ[v2862.ⲆⲆⲆⲆᐃ]);
        v2862.ΔᐃᐃⵠΔⵠⵠ(v2862.ⲆⲆⲆᐃᐃ[v2862.ⲆⲆⲆⲆᐃ]);
        document.getElementById("servselect").selectedIndex = v2862.ⲆⲆⲆⲆᐃ;
      };
    };
    this.ⵠⵠᐃᐃᐃⲆΔ = 0;
    this.ⲆᐃΔⵠⵠΔᐃ = 0;
    this.ᐃⲆΔⲆⵠⵠᐃ = null;
    this.timeout = function () {
      vThis5.ⲆᐃΔⵠⵠΔᐃ++;
      vThis5.ⵠⵠⵠⲆ.close();
      if (vThis5.ⲆᐃΔⵠⵠΔᐃ > 3) {
        v3105 = 1;
        v2858.ⵠⲆⵠⲆᐃⵠⲆⵠⲆ = v2275.Ⲇⵠⵠⵠⵠᐃⵠᐃⵠ;
        vThis5.ⲆᐃⲆⵠΔ(v756[2000]);
        v2858.waiting = false;
        if (v2860.reconnect.enabled) {
          v3057.ⵠᐃⲆᐃⵠ(v2858.ⲆⵠⵠᐃΔ);
        }
      } else if (v2860.ΔⲆⵠᐃⲆⲆⲆ === undefined || v2860.ΔⲆⵠΔᐃⲆⵠ === vVVVVUndefined173 || v2860.ΔⲆΔⵠⲆⲆΔ === undefined || v2860.ᐃᐃⲆⵠⲆᐃⵠ === undefined) {
        v2858.ΔⵠΔⵠⵠⲆⲆ(function () {
          vThis5.ⲆⵠᐃΔΔΔᐃ();
        }, 1);
      } else {
        vThis5.ⲆⵠᐃΔΔΔᐃ();
      }
    };
    this.ⲆⵠⵠΔᐃⲆΔ = function (p1785) {
      if (this.ⵠⵠⵠⲆ.ᐃᐃⵠΔᐃ == this.ᐃᐃⵠΔᐃ) {
        this.ᐃᐃⵠΔᐃ++;
        this.ⲆᐃⲆⵠΔ(v756[2001] + p1785);
        v3057.ⵠᐃⲆᐃⵠ(v2858.ⲆⵠⵠᐃΔ);
      }
    };
    this.ΔⲆⲆⵠΔⵠⲆᐃΔ = function () {
      this.ⲆᐃⲆⵠΔ("You speak too much");
    };
    this.ᐃⵠᐃⲆⵠⵠⵠⵠΔ = function () {
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2002]);
      v2858.waiting = false;
    };
    this.ᐃⵠΔΔΔᐃᐃⲆΔ = function () {
      v2860.ⲆⵠⵠⵠΔ.open = vV162;
    };
    this.ⵠΔⲆⵠⵠᐃΔⵠᐃ = function () {
      v3057.ⵠᐃⵠΔᐃⵠᐃ = 0;
    };
    this.ᐃⲆᐃᐃΔⵠⵠᐃⲆ = function () {
      v3057.ΔΔⲆⲆΔΔΔ = 0;
    };
    this.ΔᐃΔⲆᐃΔᐃⵠⲆ = function (p1786) {
      v2860.Δᐃᐃᐃᐃ.ΔΔΔΔΔ = p1786;
      if (v2859.ⵠᐃᐃᐃΔ > -300) {
        if (p1786 === 0) {
          this.ⲆᐃⲆⵠΔ(v756[2040]);
        } else {
          this.ⲆᐃⲆⵠΔ(v756[2041]);
        }
      }
    };
    this.ᐃΔⲆᐃⵠ = function (p1787) {
      v2860.ᐃΔⲆᐃⵠ = p1787;
    };
    this.ⵠⵠⵠΔᐃⵠⵠⵠᐃ = function (p1788) {
      v2860.ⲆⵠᐃΔⵠΔⵠ = p1788;
    };
    this.ⲆⵠᐃΔⵠΔⵠ = function (p1789) {
      v2860.ᐃᐃᐃΔⲆ.ΔΔΔΔΔ = p1789;
      if (v2859.ⲆⵠΔⲆΔ > -300) {
        if (p1789 === 0) {
          this.ⲆᐃⲆⵠΔ(v756[2042]);
        } else {
          this.ⲆᐃⲆⵠΔ(v756[2043]);
        }
      }
    };
    this.ᐃⲆΔⵠΔⲆΔΔⲆ = function (p1790) {
      if (p1790 === 0) {
        document.getElementById("exploreForest").src = "img/forest-leaf-ok.png";
      } else if (p1790 === 1) {
        document.getElementById("exploreWinter").src = "img/winter-flake-ok.png";
      } else if (p1790 === 2) {
        document.getElementById("exploreLava").src = "img/lava-volcano-ok.png";
      } else if (p1790 === 3) {
        document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png";
      }
    };
    this.ΔᐃᐃᐃⲆⲆΔΔᐃ = function () {
      v3057.ᐃⲆⵠΔΔⵠᐃ = 0;
    };
    this.ⵠΔⲆⲆΔΔΔⵠⲆ = function () {
      v3057.ᐃⲆⵠᐃᐃᐃⲆ = 0;
    };
    this.ⲆⵠⵠΔᐃⲆⵠᐃⲆ = function () {
      v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ = [];
      v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ = [];
      v2860.ΔⲆⵠⵠ.id = -1;
      v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.stop();
      v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ = [];
      v2860.ⵠⲆᐃᐃ.ΔⵠΔⵠⵠ = vV16;
      v2860.ⵠⲆᐃᐃ.ᐃᐃΔⵠΔᐃⵠⵠⲆ = vVV164;
      v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
      v2860.ⵠⲆᐃᐃ.id = -1;
      v2860.ⵠⲆᐃᐃ.ᐃᐃⵠⵠᐃⲆΔ = false;
      v2860.ⵠⲆᐃᐃ.ΔⲆⲆᐃⲆ = false;
      v2860.ⵠⲆᐃᐃ.ⵠⲆⲆΔΔ = vVV16;
      v2860.ⵠⲆᐃᐃ.ΔⵠⵠⵠⵠⵠⲆ = false;
      v2860.ⵠⲆᐃᐃ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVV1623, 0, 1, 0, 1, 1);
    };
    this.ⵠⲆⲆⵠⵠΔⵠⲆΔ = function () {
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ();
      v2858.waiting = vV162;
    };
    this.ⵠⵠⵠⲆᐃⲆⲆ = function (p1791) {
      for (var v2906 = 0; p1791.length > v2906; v2906++) {
        if (typeof p1791[v2906] === "string") {
          p1791[v2906] = ⵠⵠΔ.ⵠΔᐃΔⲆⲆΔ(p1791[v2906]);
        }
      }
      v2860.ⲆΔⲆⵠΔ.ᐃⲆΔᐃⵠ(p1791[1], p1791[2], p1791[3], p1791[4]);
    };
    this.message = function (p1792) {
      this.ⲆᐃⲆⵠΔ(p1792);
    };
    this.ⵠⲆⲆΔⵠΔᐃΔⲆ = function () {
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2039]);
      v2858.waiting = false;
    };
    this.ΔΔΔᐃⵠⲆⵠⵠΔ = function () {
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2038]);
      v2858.waiting = vVV162;
    };
    this.ⲆⲆΔⵠⵠⵠΔᐃᐃ = function () {
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2004]);
      v2858.waiting = vVVV1623;
    };
    this.ⵠⲆⲆⲆⲆⲆΔⵠⲆ = function () {
      v2860.ΔⲆⵠⵠ.ᐃᐃⵠⲆΔΔΔ(1, 0);
      v3057.ⲆⲆᐃⵠⵠΔᐃ();
    };
    this.ᐃΔⲆⲆᐃΔΔⲆᐃ = function (p1793) {
      var v2907 = p1793[1];
      var v2908 = v2859.ⵠⲆⵠⲆ[v2907];
      v2908.ⵠⲆⲆΔ = p1793[2];
      v2908.ᐃⲆΔΔⲆ = p1793[3];
      v2908.ⵠⲆΔΔᐃᐃᐃ = p1793[4];
      v2908.ᐃᐃᐃⵠⲆ = p1793[5];
      v2908.ⵠᐃᐃⵠᐃ = p1793[6];
      v2908.ᐃⲆⵠΔⲆ = p1793[7];
      v2908.level = p1793[8];
      var v2909 = v2859.ᐃΔⵠⲆⵠ[v2907 * v2859.ΔⵠⲆᐃⵠⲆⵠ];
      if (v2909) {
        v2909.ⵠⲆⲆΔ = p1793[2];
        v2909.ᐃⲆΔΔⲆ = p1793[3];
        v2909.ⵠⲆΔΔᐃᐃᐃ = p1793[4];
        v2909.ᐃᐃᐃⵠⲆ = p1793[5];
      }
    };
    this.ⵠΔⵠⵠΔⵠΔᐃΔ = function (p1794) {
      if (p1794 === 47) {
        v2860.ΔⲆⵠⵠ.ᐃᐃⵠⲆΔΔΔ(1, 0);
        v3057.ⲆⲆᐃⵠⵠΔᐃ();
      } else {
        this.ⵠᐃⵠΔⲆⲆΔ([0, p1794, 1]);
      }
      v2860.ⵠⲆᐃᐃ.ΔⵠⲆᐃⲆⲆΔ();
    };
    this.ΔⵠΔᐃΔⵠⵠᐃΔ = function (p1795) {
      v2860.ⵠᐃΔⵠᐃ.ᐃⵠⲆΔⲆ = 0;
      v2860.ⵠⲆᐃᐃ.ⲆⲆᐃΔⵠᐃⲆΔᐃ(p1795);
    };
    this.ᐃᐃΔⵠⵠᐃⲆⲆΔ = function (p1796) {
      for (var v2910 = v722[p1796].r, v2911 = 0; v2911 < v2910.length; v2911++) {
        if (v2860.ΔⲆⵠⵠ.max > v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length || v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[v2910[v2911][0]] > 0) {
          var v2912 = Math.floor(v2910[v2911][1] * 0.8);
          if (!v2912) {
            continue;
          }
          this.ⵠᐃⵠΔⲆⲆΔ([0, v2910[v2911][0], v2912]);
        }
      }
      v2860.ⵠⲆᐃᐃ.ΔⵠⲆᐃⲆⲆΔ();
    };
    this.ᐃⲆⲆᐃᐃⲆⲆⲆⲆ = function (p1797) {
      v2860.ⵠᐃΔⵠᐃ.ᐃⵠⲆΔⲆ = 0;
      v2860.ⵠⲆᐃᐃ.ⲆΔⲆΔᐃⲆᐃⲆᐃ(p1797);
    };
    this.ⲆᐃⲆⵠΔ = function (p1798) {
      if (v2860.alert.text) {
        if (v2860.alert.text !== p1798 && v2860.alert.list[v2860.alert.list.length - 1] !== p1798) {
          v2860.alert.list.push(p1798);
        }
      } else {
        v2860.alert.text = p1798;
      }
    };
    this.ᐃⲆⲆⲆᐃΔᐃⲆⵠ = function () {
      this.ⲆᐃⲆⵠΔ(v756[2005]);
    };
    this.ΔⲆⲆⵠᐃⲆⵠᐃΔ = function () {
      var v2913;
      v2913 = v2860.ⵠᐃⵠ == 0 ? v756[2006] : v756[2007] + (v2860.ⵠᐃⵠ + 1) + v756[2008];
      this.ⲆᐃⲆⵠΔ(v2913);
      v2860.ⵠᐃⵠ++;
    };
    this.ᐃᐃⵠⲆⵠⵠⵠⲆⲆ = function () {
      clearTimeout(vThis5.ᐃⲆΔⲆⵠⵠᐃ);
      v2860.reconnect.enabled = vVV1623;
      v2860.ᐃᐃⲆΔⲆ = false;
      this.ⲆᐃⲆⵠΔ(v756[2009]);
      v3057.ⵠᐃⲆᐃⵠ(v2858.ⲆⵠⵠᐃΔ);
      this.ⵠⵠⵠⲆ.close();
    };
    this.ᐃᐃⵠⲆᐃⲆⲆΔⲆ = function () {
      v3105 = 1;
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2010]);
      v2858.waiting = vVVV16223;
    };
    this.ⵠΔⵠΔⵠⵠΔⵠⵠ = function () {
      v3105 = 1;
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      this.ⲆᐃⲆⵠΔ(v756[2011]);
      v2858.waiting = vVV1622;
    };
    this.ⲆΔⲆⲆᐃⵠΔᐃΔ = function (p1799) {
      var v2914 = p1799[1];
      var v2915 = v2859.ⵠⲆⵠⲆ;
      v2915[v2914].ᐃΔⵠⵠΔ = p1799[2];
      v2915[v2914].ⵠⲆⲆΔ = p1799[3];
      v2915[v2914].ᐃⲆΔΔⲆ = p1799[4];
      v2915[v2914].ⵠⲆΔΔᐃᐃᐃ = p1799[5];
      v2915[v2914].ᐃᐃᐃⵠⲆ = p1799[6];
      v2915[v2914].ⵠᐃᐃⵠᐃ = p1799[7];
      v2915[v2914].ᐃⲆⵠΔⲆ = p1799[8];
      v2915[v2914].level = p1799[9];
      v2915[v2914].ΔⲆΔΔᐃ = 0;
      v2915[v2914].ᐃΔⵠᐃⲆⵠᐃ = null;
      v2915[v2914].label = null;
      v2915[v2914].ᐃⲆΔⲆⲆᐃΔ = null;
      v2915[v2914].ᐃᐃⲆΔⲆ = true;
      if (v2261 === 1) {
        v2915[v2914].ᐃΔⵠⵠΔ += "|" + v2914;
      }
    };
    this.ᐃΔⲆΔᐃᐃΔⲆⵠ = function () {
      this.ⵠⵠⵠⲆ[v2260](vVWindow[v432].stringify([29]));
    };
    this.ᐃⲆⲆⵠΔⲆΔⲆΔ = function () {
      this.ⲆᐃⲆⵠΔ(v756[2012]);
    };
    this.ΔΔᐃᐃⲆⲆᐃ = function () {
      this.ⲆᐃⲆⵠΔ(v756[2013]);
    };
    this.ⵠᐃΔⵠⵠⲆⵠⵠΔ = function (p1800) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v449].stringify([4, p1800]));
      v2860.ⲆⵠⵠⵠΔ.open = false;
    };
    this.ⵠⵠⲆⵠⲆⵠⲆΔⵠ = function (p1801) {
      for (var v2916 = v2269[p1801 - 1].items, v2917 = 0; v2917 < v2916.length && v2860.ΔⲆⵠⵠ.max > v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length; v2917++) {
        var v2918 = v2916[v2917][1];
        var v2919 = v2916[v2917][0];
        if (v2916[v2917][1] === 47) {
          v2860.ΔⲆⵠⵠ.ᐃᐃⵠⲆΔΔΔ(1, 0);
        } else {
          this.ⵠᐃⵠΔⲆⲆΔ([0, v2918, v2919]);
        }
      }
    };
    this.ⵠᐃⵠΔⲆⲆΔ = function (p1802) {
      for (var v2920 = p1802.length, v2921 = v2860.ΔⲆⵠⵠ, v2922 = 1; v2920 > v2922; v2922 += 2) {
        var v2923 = p1802[v2922];
        var v2924 = p1802[v2922 + 1];
        for (var v2925 = 0; v2925 < v2921.ⲆΔⵠΔᐃ.length; v2925++) {
          if (v2923 == v2921.ⲆΔⵠΔᐃ[v2925].id) {
            v2921.ⵠⵠⵠᐃ[v2923] += v2924;
            break;
          }
        }
        if (v2925 == v2921.ⲆΔⵠΔᐃ.length) {
          v2921.ⵠⵠⵠᐃ[v2923] = v2924;
          v2921.ⲆΔⵠΔᐃ.push(v3057.Ⲇⵠⵠ[v2923]);
          v3057.ⲆⲆᐃⵠⵠΔᐃ();
        }
      }
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ⲆᐃΔⲆ = function (p1803, p1804, p1805, p1806, p1807, p1808, p1809) {
      v2860.ⲆᐃΔⲆ.Ⲇⵠᐃⵠ = p1803 / 100;
      v2860.ⲆᐃΔⲆ.ᐃⵠⵠ = p1804 / 100;
      v2860.ⲆᐃΔⲆ.c = p1805 / 100;
      v2860.ⲆᐃΔⲆ.ⵠⲆΔ = p1806 / 100;
      v2860.ⲆᐃΔⲆ.ⵠⵠⲆ = p1807 / 100;
      v2860.ⲆᐃΔⲆ.ΔΔᐃᐃⵠⲆΔ = p1808 / 100;
      v2860.ᐃΔⲆᐃⵠ = p1809;
    };
    this.ⵠⲆᐃⵠⲆⲆΔⵠⲆ = function (p1810) {
      v3057.ⵠᐃᐃᐃ.modify(p1810, 2);
    };
    this.ᐃⲆᐃⵠⵠΔᐃΔⲆ = function (p1811) {
      v3057.ⵠᐃᐃᐃ.modify(p1811, 0);
    };
    this.ⵠⲆⲆⲆⲆΔᐃΔⵠ = function (p1812) {
      v3057.ⵠᐃᐃᐃ.modify(p1812, 3);
    };
    this.ⲆΔᐃᐃᐃⲆⵠⵠⵠ = function (p1813, p1814) {
      v2860.ⲆᐃΔⲆ.Ⲇⵠᐃⵠ = p1813 / 100;
      v2860.ᐃΔⲆᐃⵠ = p1814;
    };
    this.ΔᐃⵠⵠⵠⵠᐃΔᐃ = function (p1815) {
      v2860.ⲆᐃΔⲆ.ⵠⲆΔ = p1815 / 100;
    };
    this.ⲆᐃⲆᐃΔⵠᐃᐃᐃ = function (p1816) {
      v2860.ⲆᐃΔⲆ.ᐃⵠⵠ = p1816 / 100;
    };
    this.ⲆᐃⲆᐃΔᐃⵠΔᐃ = function (p1817) {
      v2860.ⲆᐃΔⲆ.ΔΔᐃᐃⵠⲆΔ = p1817 / 100;
    };
    this.ⵠⵠⵠΔᐃⲆΔᐃΔ = function (p1818) {
      v2860.ⲆᐃΔⲆ.c = p1818 / 100;
    };
    this.ΔⵠΔᐃᐃⵠⵠᐃⵠ = function (p1819) {
      v2859.time = p1819;
      v2859.transition = true;
      v3058.transition = 1;
    };
    this.ᐃᐃⲆⲆΔⵠⲆΔΔ = function () {
      document.getElementById("game_body").style.backgroundColor = v594.ᐃᐃⵠΔⲆ[v2859.time];
    };
    this.ΔΔᐃⲆⲆⵠᐃⲆⵠ = function (p1820) {
      if (v2859.mode == 1 && v2859.ⵠⲆⵠⲆ[p1820].ᐃΔⵠⵠΔ !== "spectator") {
        this.ⲆᐃⲆⵠΔ(v2859.ⵠⲆⵠⲆ[p1820].ᐃΔⵠⵠΔ + v756[2014]);
      }
      v2859.ⵠⲆⵠⲆ[p1820].ᐃᐃⲆΔⲆ = false;
    };
    this.ⲆⲆⵠΔᐃⲆΔⵠⲆ = function (p1821) {
      var v2926 = new Uint16Array(p1821);
      ⲆⵠⲆΔ.Δⵠⵠ.ⵠΔⲆΔΔ(v2926[1], v2926[2]);
    };
    this.ⲆᐃᐃⲆⲆⵠᐃᐃΔ = function (p1822) {
      var v2927 = new Uint16Array(p1822);
      v2860.Δⵠⵠ.ⵠΔⲆΔΔ(v2927[1], v2927[2]);
    };
    this.ⲆᐃΔⲆⵠⵠⵠⵠΔ = function (p1823, p1824) {
      var v2928 = new Uint16Array(p1824);
      for (var v2929 = (p1823.length - 2) / 4, v2930 = 0; v2930 < v2929; v2930++) {
        var v2931 = v2928[1 + v2930 * 2];
        var v2932 = p1823[4 + v2930 * 4];
        var v2933 = (p1823[5 + v2930 * 4] >> 1) / 127 * Math.PI * 2;
        var v2934 = v2859.ᐃΔⵠⲆⵠ[v2932 * v2859.ΔⵠⲆᐃⵠⲆⵠ + v2931];
        if (v2934 && v2934.ᐃᐃΔ) {
          if (v3058.loaded && v3058.ⲆⵠⵠᐃΔ) {
            v3058.ᐃᐃΔ(p1823[5 + v2930 * 4] & 1, ⲆⵠΔⵠᐃ[v2934.type], v2934.x, v2934.y);
          }
          v2934.ᐃᐃΔ.angle = v2933;
          v2934.ᐃᐃΔ.ⵠΔᐃ = v2933;
        }
      }
    };
    this.ⵠⲆΔⲆⵠⵠⲆΔⲆ = function (p1825) {
      var v2935 = new Uint16Array(p1825);
      for (var v2936 = (v2935.length - 1) / 4, v2937 = 0; v2937 < v2936; v2937++) {
        var v2938;
        var v2939 = v2937 * 4;
        var v2940 = v2935[1 + v2939];
        var v2941 = v2935[2 + v2939];
        var v2942 = Math.PI * ((v2935[3 + v2939] >> 1) / 127) * 2;
        var v2943 = v2935[4 + v2939];
        var v2944 = v2856.ⵠΔⲆΔ[v2941][v2940];
        switch (v2943) {
          case 0:
            (v2938 = v2944.p[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV1222;
            break;
          case 1:
            (v2938 = v2944.s[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV122;
            break;
          case 2:
            (v2938 = v2944.s[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 3:
            (v2938 = v2944.s[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 4:
            (v2938 = v2944.t[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV122;
            break;
          case 5:
            (v2938 = v2944.t[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 6:
            (v2938 = v2944.t[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV12;
            break;
          case 7:
            (v2938 = v2944.t[3][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 8:
            (v2938 = v2944.t[4][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 9:
            (v2938 = v2944.t[5][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 10:
            (v2938 = v2944.g[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV1223;
            break;
          case 11:
            (v2938 = v2944.g[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV1222;
            break;
          case 12:
            (v2938 = v2944.g[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 13:
            (v2938 = v2944.d[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 14:
            (v2938 = v2944.d[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = v12;
            break;
          case 15:
            (v2938 = v2944.d[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 16:
            (v2938 = v2944.b[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 17:
            (v2938 = v2944.b[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 18:
            (v2938 = v2944.b[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 19:
            (v2938 = v2944.b[3][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV1222;
            break;
          case 20:
            (v2938 = v2944.f[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 21:
            (v2938 = v2944.f[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12232;
            break;
          case 22:
            (v2938 = v2944.f[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 23:
            (v2938 = v2944.sw[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV1222;
            break;
          case 24:
            (v2938 = v2944.sw[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 25:
            (v2938 = v2944.sw[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV12;
            break;
          case 26:
            (v2938 = v2944.gw[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12222;
            break;
          case 27:
            (v2938 = v2944.gw[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV12;
            break;
          case 28:
            (v2938 = v2944.gw[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 29:
            (v2938 = v2944.dw[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV1222;
            break;
          case 30:
            (v2938 = v2944.dw[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV123;
            break;
          case 31:
            (v2938 = v2944.dw[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 32:
            (v2938 = v2944.a[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV12;
            break;
          case 33:
            (v2938 = v2944.a[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV1223;
            break;
          case 34:
            (v2938 = v2944.a[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = v12;
            break;
          case 35:
            (v2938 = v2944.cs[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 36:
            (v2938 = v2944.cs[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 37:
            (v2938 = v2944.cs[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV122;
            break;
          case 38:
            (v2938 = v2944.cs[3][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 40:
            (v2938 = v2944.plm[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV122;
            break;
          case 41:
            (v2938 = v2944.plm[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV12;
            break;
          case 42:
            (v2938 = v2944.plm[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 50:
            (v2938 = v2944.re[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 51:
            (v2938 = v2944.re[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVVV1222;
            break;
          case 52:
            (v2938 = v2944.re[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV123;
            break;
          case 55:
            (v2938 = v2944.c[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 56:
            (v2938 = v2944.m[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 57:
            (v2938 = v2944.m[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV122;
            break;
          case 58:
            (v2938 = v2944.m[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 59:
            (v2938 = v2944.cop[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV123;
            break;
          case 60:
            (v2938 = v2944.cop[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 61:
            (v2938 = v2944.cop[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 62:
            (v2938 = v2944.iro[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 63:
            (v2938 = v2944.iro[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 64:
            (v2938 = v2944.iro[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 65:
            (v2938 = v2944.top[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 66:
            (v2938 = v2944.top[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 67:
            (v2938 = v2944.top[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 68:
            (v2938 = v2944.sap[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12222;
            break;
          case 69:
            (v2938 = v2944.sap[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12222;
            break;
          case 70:
            (v2938 = v2944.sap[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV1223;
            break;
          case 71:
            (v2938 = v2944.jad[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 72:
            (v2938 = v2944.jad[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 73:
            (v2938 = v2944.jad[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 74:
            (v2938 = v2944.rub[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV12;
            break;
          case 75:
            (v2938 = v2944.rub[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 76:
            (v2938 = v2944.rub[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV12;
            break;
          case 77:
            (v2938 = v2944.coa[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV12;
            break;
          case 78:
            (v2938 = v2944.coa[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV122;
            break;
          case 79:
            (v2938 = v2944.coa[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 80:
            (v2938 = v2944.aqu[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12232;
            break;
          case 81:
            (v2938 = v2944.aqu[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 82:
            (v2938 = v2944.aqu[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVVV12232;
            break;
          case 83:
            (v2938 = v2944.jut[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 84:
            (v2938 = v2944.jut[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 85:
            (v2938 = v2944.jut[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 86:
            (v2938 = v2944.jut[3][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVVV12;
            break;
          case 87:
            (v2938 = v2944.jut[4][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 88:
            (v2938 = v2944.jub[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = vV122;
            break;
          case 89:
            (v2938 = v2944.jub[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV12;
            break;
          case 90:
            (v2938 = v2944.jus[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 91:
            (v2938 = v2944.jus[1][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
            break;
          case 92:
            (v2938 = v2944.jus[2][0]).angle = v2942;
            v2938.ⵠΔᐃ = vVV122;
            break;
          case 93:
            (v2938 = v2944.bap[0][0]).angle = v2942;
            v2938.ⵠΔᐃ = true;
        }
        if (v3058.loaded && v3058.ⲆⵠⵠᐃΔ && v2938) {
          v3058.ᐃᐃΔ(v2935[3 + v2939] & 1, ΔⵠΔⵠ[v2943], v2938.x, v2938.y);
        }
      }
    };
    this.ΔΔⲆⲆΔ = function () {
      this.ⵠⵠⵠⲆ[v2260](vVVWindow[v428].stringify([30, v2860.ΔΔⲆⲆΔ.ΔⲆⲆᐃ, v2860.ΔΔⲆⲆΔ.ΔᐃᐃΔⵠ]));
    };
    this.ⲆᐃᐃᐃᐃⲆΔⵠᐃ = function (p1826, p1827) {
      this.ⵠⵠⵠⲆ[v2260](vVVWindow[v440].stringify([37, p1827, p1826.ΔⲆⲆᐃ, p1826.ΔᐃᐃΔⵠ]));
    };
    this.ⵠⲆⲆᐃᐃᐃΔ = function (p1828, p1829, p1830) {
      if (p1829) {
        this.ⵠⵠⵠⲆ[v2260](vVVWindow[v440].stringify([36, p1829, p1828.ΔⲆⲆᐃ, p1828.ΔᐃᐃΔⵠ]));
      } else {
        this.ⵠⵠⵠⲆ[v2260](vVVWindow[v435].stringify([1, p1830, p1828.ΔⲆⲆᐃ, p1828.ΔᐃᐃΔⵠ]));
      }
    };
    this.ΔᐃⲆⵠᐃΔᐃⲆΔ = function (p1831) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([25, p1831.ΔⲆⲆᐃ, p1831.ΔᐃᐃΔⵠ]));
    };
    this.ⲆᐃᐃⲆΔᐃⲆⲆᐃ = function (p1832) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v452].stringify([2, p1832]));
    };
    this.ᐃᐃⵠⲆᐃⵠΔⲆΔ = function (p1833) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVWindow[v428].stringify([16, p1833.ΔⲆⲆᐃ, p1833.ΔᐃᐃΔⵠ]));
    };
    this.ⵠⵠⲆΔⵠᐃΔⲆᐃ = function (p1834, p1835) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v444].stringify([11, p1835, p1834.ΔⲆⲆᐃ, p1834.ΔᐃᐃΔⵠ, p1834.type]));
    };
    this.ΔᐃΔⵠΔⵠⲆᐃⲆ = function (p1836, p1837) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v444].stringify([18, p1837, p1836.ΔⲆⲆᐃ, p1836.ΔᐃᐃΔⵠ]));
    };
    this.ᐃᐃᐃᐃⲆⲆᐃⵠΔ = function (p1838, p1839, p1840) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVWindow[v440].stringify([24, p1839, p1840, p1838.ΔⲆⲆᐃ, p1838.ΔᐃᐃΔⵠ]));
    };
    this.ⲆⲆΔᐃⲆ = function (p1841) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([21, p1841.ΔⲆⲆᐃ, p1841.ΔᐃᐃΔⵠ, p1841.type]));
    };
    this.ⲆⵠⵠᐃΔΔᐃΔⵠ = function (p1842) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([20, p1842.ΔⲆⲆᐃ, p1842.ΔᐃᐃΔⵠ]));
    };
    this.ᐃᐃⲆΔᐃⵠⵠᐃᐃ = function (p1843) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([9, p1843.ΔⲆⲆᐃ, p1843.ΔᐃᐃΔⵠ]));
    };
    this.ⵠⲆⵠⲆⲆⲆᐃᐃⲆ = function (p1844) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVVWindow[v448].stringify([7, p1844.ΔⲆⲆᐃ, p1844.ΔᐃᐃΔⵠ]));
    };
    this.ⲆⲆΔΔⲆᐃΔⵠⲆ = function (p1845) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVVVWindow[v449].stringify([8, p1845.ΔᐃᐃΔⵠ]));
    };
    this.ΔⲆⵠΔΔᐃΔ = function (p1846) {
      vThis5.ⵠⵠⵠⲆ[v2260](vVVVVVVVVWindow[v452].stringify([26, v2860.ΔᐃᐃⲆⲆ.id, v2860.ΔᐃⲆᐃⲆ[p1846]]));
    };
    this.ᐃΔⲆⵠᐃΔᐃΔΔ = function () {
      vThis5.ⵠⵠⵠⲆ[v2260](v466[v465].stringify([12, v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ, v2860.ΔᐃᐃⲆⲆ.id]));
    };
    this.ΔⲆΔⵠⵠᐃⵠ = function () {
      vThis5.ⵠⵠⵠⲆ[v2260](vV466[v467].stringify([23]));
    };
    this.ΔᐃⲆΔⵠⲆⲆᐃΔ = function () {
      vThis5.ⵠⵠⵠⲆ[v2260](vV466[v452].stringify([6, v2860.ΔᐃᐃⲆⲆ.id]));
      if (document.getElementById("lock_team").innerHTML == "LOCK") {
        v2860.ΔᐃᐃⲆⲆ.lock = 1;
        document.getElementById("lock_team").innerHTML = "UNLOCK";
      } else {
        v2860.ΔᐃᐃⲆⲆ.lock = 0;
        document.getElementById("lock_team").innerHTML = "LOCK";
      }
    };
    this.ⲆⵠΔ = function (p1847, p1848, p1849) {
      var v2945 = new Uint16Array(p1847);
      if (p1849) {
        v2859.ⲆⵠⵠᐃⲆᐃᐃⵠⲆ();
      }
      for (var v2946 = (p1848.length - 2) / 20, v2947 = 0; v2947 < v2946; v2947++) {
        var v2948 = 2 + v2947 * 20;
        var v2949 = 1 + v2947 * 10;
        var v2950 = p1848[v2948];
        var v2951 = v2945[v2949 + 1];
        var v2952 = v2945[v2949 + 5];
        var v2953 = v2859.ΔⵠⲆᐃⵠⲆⵠ * v2950 + v2952;
        if (v2951 & 1) {
          v2859.ⵠⲆⲆⵠΔᐃᐃᐃᐃ(v2953);
        } else {
          var v2954 = v2945[v2949 + 2];
          var v2955 = v2945[v2949 + 3];
          var v2956 = v2945[v2949 + 4];
          var v2957 = v2945[v2949 + 6];
          var v2958 = v2945[v2949 + 7];
          var v2959 = v2945[v2949 + 8];
          var v2960 = v2945[v2949 + 9];
          var v2961 = p1848[v2948 + 1] / 255 * Math.PI * 2;
          if (v2859.ᐃΔⵠⲆⵠ[v2953]) {
            var v2962 = v2859.ᐃΔⵠⲆⵠ[v2953];
            v2962.r.x = v2955;
            v2962.r.y = v2956;
            if (v2950 != 0 && ⵠⵠΔ.ᐃᐃⵠⲆ(v2962, v2962.r) > 200) {
              v2962.x = v2955;
              v2962.y = v2956;
            }
            if (v2860.id !== v2962.id || v2950 === 0) {
              v2962.ⲆᐃⲆΔⲆᐃΔ = v2961;
            }
            v2962.action |= v2951;
            v2962.info = v2957;
            v2962.ᐃᐃⲆⲆᐃΔⲆ = v2960;
            v2962.ⲆᐃᐃΔⵠ = v2958;
            v2962.ⵠⵠΔᐃᐃ = v2959;
            if (v2962.ⵠΔᐃ) {
              v2962.ⵠΔᐃ(v2951);
            }
          } else {
            var v2963 = new f443(v2954, v2950, v2952, v2955, v2956, v2961, v2951, v2957, v2958, v2959, v2960);
            v2859.ᐃΔⵠⲆⵠ[v2953] = v2963;
            v2859.ⲆⵠΔ[v2954].push(v2963);
          }
        }
      }
    };
    this.ⵠᐃⵠⲆⲆ = function (p1850) {
      this.ⵠⵠᐃᐃᐃⲆΔ = v3092;
      var v2964 = new Uint16Array(p1850);
      v2860.ᐃᐃΔⵠⲆ.ⵠⵠΔⵠᐃ(v2964);
    };
    this.ⵠΔⲆⲆᐃᐃⵠΔⵠ = function (p1851) {
      vVVUndefined162 = vVVVVUndefined172;
      if (p1851 && p1851.length > 0) {
        vVVUndefined162 = p1851;
      }
    };
    this.ΔΔΔⲆΔᐃⵠⲆΔ = function (p1852) {
      if (p1852 !== undefined) {
        for (let v2965 = 0; p1852.length > v2965; v2965++) {
          const v2966 = p1852[v2965];
          if (!v2966) {
            continue;
          }
          const v2967 = v2966.id;
          const v2968 = v2966.text;
          const v2969 = v756[v2967];
          if (v2969 !== undefined && vUndefined !== v2968) {
            for (let v2970 = 0; v2970 < v2968.length; v2970++) {
              v2969[v2970 + 2] = v2968[v2970];
            }
          }
        }
      }
    };
    this.ᐃᐃⵠⵠⲆΔⲆⵠΔ = function (p1853) {
      if (p1853 !== undefined) {
        for (let v2971 = 0; v2971 < p1853.length; v2971++) {
          const v2972 = p1853[v2971];
          if (v2972) {
            v2295[v2971].time = v2972.time;
          }
        }
      }
    };
    this.ᐃΔᐃΔⲆΔⲆᐃᐃ = function (p1854) {
      if (vUndefined2 !== undefined) {
        v722 = vUndefined2;
      }
      if (p1854.length > 0) {
        vUndefined2 = JSON.parse(JSON.stringify(v722));
        for (var v2973 = 0; v2973 < p1854.length; v2973++) {
          var v2974 = p1854[v2973];
          var v2975 = v2974.item;
          var v2976 = v722[v2975];
          if (v2976 === vVUndefined || v2976 === null) {
            if (v2974.category === undefined) {
              continue;
            }
            (v2976 = {}).id = v2975;
            v2976.ⵠⵠⲆΔ = v2975;
            v2976.ⵠⲆΔ = v2974.category;
            v722[v2974.item] = v2976;
          }
          v2976.r = v2974.recipe;
          v2976.w = v2974.workbench;
          v2976.f = v2974.fire;
          v2976.ⵠⵠⲆ = v2974.water;
          v2976.e = v2974.well;
          v2976.time = 1 / v2974.time;
        }
      }
    };
    this.ΔᐃΔⵠⵠⲆΔ = function (p1855) {
      if (p1855 && p1855.length !== 0) {
        v2860.ΔᐃΔⵠⵠⲆΔ.message = function (p1856) {
          var v2977 = document.createElement("canvas");
          var v2978 = v2977.getContext("2d");
          for (v2978.lineJoin = "round"; p1856.indexOf("\\n") !== -1;) {
            p1856 = p1856.replace("\\n", "\n");
          }
          p1856 = p1856.split("\n");
          ΔⲆ = [];
          var v2979 = p1856.length * 18 + 10;
          var v2980 = 0;
          v2978.font = "14px Baloo Paaji";
          for (var v2981 = 0; p1856.length > v2981; v2981++) {
            if (p1856[v2981].charAt(0) === "#") {
              ΔⲆ[v2981] = p1856[v2981].substring(0, 7);
              p1856[v2981] = p1856[v2981].substring(8);
            } else {
              ΔⲆ[v2981] = "#FFFFFF";
            }
            v2980 = Math.max(v2978.measureText(p1856[v2981]).width + 16, v2980);
          }
          v2977.height = v2979;
          v2977.width = v2980;
          v2981 = 0;
          for (; p1856.length > v2981; v2981++) {
            var vF1563 = f156(1, p1856[v2981], 14, ΔⲆ[v2981], null, null, null, null, null, "#000", 6);
            v2978.drawImage(vF1563, 8, v2981 * 18 + 5);
          }
          return v2977;
        }(p1855);
      } else {
        v2860.ΔᐃΔⵠⵠⲆΔ.message = undefined;
      }
    };
    this.ⵠⲆΔΔⵠ = function (p1857) {
      var v2982 = v2859.ᐃΔⵠⲆⵠ[p1857[1] * v2859.ΔⵠⲆᐃⵠⲆⵠ];
      if (v2982) {
        if (v2859.mode === 2 && v2982.ⵠⲆⲆΔ === 0) {
          if (v2860.ⵠⲆᐃᐃΔ) {
            if (Math.random() > 0.5) {
              v2982.text.push(p1857[2] + " ..." + ΔᐃⲆΔΔΔⲆ);
            } else {
              v2982.text.push(ΔᐃⲆΔΔΔⲆ + "... " + p1857[2]);
            }
          } else {
            v2982.text.push(ⲆΔⵠⲆⵠᐃΔ[Math.floor(Math.random() * ⲆΔⵠⲆⵠᐃΔ.length)]);
          }
        } else {
          v2982.text.push(p1857[2]);
        }
      }
    };
    this.ⲆΔᐃⵠΔⵠΔΔⵠ = function (p1858) {
      if (v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ.length !== v2860.ΔⲆⵠⵠ.max || v722[p1858].ⵠⵠⲆΔ === 47 || v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(v722[p1858].ⵠⵠⲆΔ) != -1 || v2860.ΔⲆⵠⵠ.ⵠⵠⲆΔΔⵠⲆΔᐃ(v722[p1858].r)) {
        this.ⵠⵠⵠⲆ[v2260](vVWindow[v432].stringify([13, p1858]));
        return 1;
      } else {
        this.ΔΔᐃᐃⲆⲆᐃ();
        return 0;
      }
    };
    this.ᐃᐃⵠⵠᐃⲆΔ = function (p1859) {
      v2860.ⵠⲆᐃᐃ.ΔᐃᐃΔⵠⲆᐃⲆΔ(p1859);
    };
    this.ΔⲆⲆᐃⲆ = function (p1860) {
      v2860.ⵠⲆᐃᐃ.ΔⲆⲆᐃⲆ = p1860;
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ⵠⲆⲆΔΔ = function (p1861) {
      v2860.ⵠⲆᐃᐃ.ⵠⲆⲆΔΔ = p1861;
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ΔⵠⵠⵠⵠⵠⲆ = function (p1862) {
      v2860.ⵠⲆᐃᐃ.ΔⵠⵠⵠⵠⵠⲆ = p1862;
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ᐃΔⲆΔᐃⵠᐃΔⵠ = function (p1863) {
      this.ⲆᐃⲆⵠΔ(v756[2015]);
    };
    this.ⵠᐃᐃⲆᐃⵠⵠᐃΔ = function () {
      v2860.ⵠⲆᐃᐃ.ΔⵠⲆᐃⲆⲆΔ();
    };
    this.ΔᐃⵠΔΔ = function (p1864) {
      v3057.ΔᐃⵠΔΔ.ⵠⲆⵠⲆ = [];
      var v2983 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      var v2984 = 0;
      for (var v2985 = 1; p1864.length > v2985; v2985 += 2) {
        var v2986 = {
          x: Math.floor(p1864[v2985] * v2859.w / 250),
          y: Math.floor(p1864[v2985 + 1] * v2859.ᐃⵠⵠ / 250)
        };
        if (v2983 && !v2984 && !v2860.ΔⲆᐃⵠΔⲆⵠ && ⵠⵠΔ.ᐃᐃⵠⲆ(v2986, v2983) < 250) {
          v2984 += 1;
        } else {
          v3057.ΔᐃⵠΔΔ.ⵠⲆⵠⲆ.push(v2986);
        }
      }
    };
    this.ⲆᐃⵠΔᐃⵠⵠⵠⵠ = function () {
      v2860.ΔΔⲆⲆΔ.open = vV163;
      v2860.ᐃΔΔᐃᐃ.enabled = false;
      v2860.ᐃΔΔᐃᐃ.ᐃⵠⲆΔⲆ = -1;
      v2860.ᐃΔΔᐃᐃ.label = null;
      v2860.ᐃΔΔᐃᐃ.ᐃᐃᐃΔᐃᐃΔ = null;
      v2860.ᐃΔΔᐃᐃ.now = -1;
    };
    this.ᐃΔΔᐃᐃ = function (p1865) {
      v2289.ᐃⵠⵠᐃᐃᐃΔ = p1865;
      v2860.ᐃΔΔᐃᐃ.enabled = vVVVV1223;
      v2860.ᐃΔΔᐃᐃ.ᐃⵠⲆΔⲆ = new Date().getTime();
      v2860.ᐃΔΔᐃᐃ.label = null;
      v2860.ᐃΔΔᐃᐃ.now = -1;
      for (var v2987 = vVVUndefined162 || v601, v2988 = 0; v2987.length > v2988; v2988++) {
        var v2989 = v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(v2987[v2988]);
        if (v2989 != -1) {
          v2860.ΔⲆⵠⵠ.ⵠᐃⲆⲆΔᐃᐃ(v2987.length[v2988], v2989);
        }
      }
      v2860.ⵠⲆᐃᐃ.ΔⵠⲆᐃⲆⲆΔ();
    };
    this.ᐃΔⲆⵠⵠⲆᐃᐃᐃ = function (p1866, p1867, p1868) {
      this.ΔᐃⵠΔΔᐃⵠ(p1866, p1867 * 256 + p1868);
    };
    this.ΔᐃⵠΔΔᐃⵠ = function (p1869, p1870) {
      v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
      v2860.ΔⲆⵠⵠ.ⵠᐃᐃᐃᐃⲆΔ(p1869, p1870, v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(p1869));
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ΔΔΔⲆⲆⵠΔᐃΔ = function (p1871) {
      v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
      v2860.ⵠⲆⲆᐃᐃ.wait = true;
      var v2990 = v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(p1871);
      v2860.ΔⲆⵠⵠ.ⵠᐃᐃᐃᐃⲆΔ(p1871, 1, v2990);
      if (v2990 >= 0 && !v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ[p1871]) {
        v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
      }
      if (p1871 == 261) {
        v2860.ΔᐃⲆᐃⲆ = [v2860.id];
      }
    };
    this.ΔᐃΔΔΔᐃΔΔΔ = function () {
      this.ⵠⵠⵠⲆ[v2260](vVVWindow[v428].stringify([32]));
    };
    this.ⲆᐃᐃⵠΔⲆΔΔΔ = function (p1872) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v435].stringify([22, p1872.ᐃⵠⵠⵠᐃ, p1872.id]));
    };
    this.ΔΔΔᐃΔⲆᐃΔⲆ = function (p1873, p1874) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v444].stringify([28, p1873, p1874]));
    };
    this.ᐃᐃᐃⲆⲆⵠᐃⲆᐃ = function () {
      var v2991 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      if (v2991) {
        var v2992 = Math.PI * 2;
        this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v435].stringify([17, v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ, Math.floor((v2991.angle + v2992) % v2992 * 255 / v2992), v2860.ⵠⲆᐃᐃ.mode]));
      }
    };
    this.ΔⵠⵠΔᐃ = function (p1875, p1876) {
      switch (p1875) {
        case 297:
        case 201:
        case 207:
        case 208:
        case 238:
        case 218:
        case 226:
        case 229:
        case 235:
        case 236:
        case 291:
        case 317:
        case 343:
        case 315:
        case 319:
        case 356:
        case 321:
        case 294:
        case 230:
        case 231:
        case 298:
        case 299:
        case 302:
        case 301:
          v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
          this.ⵠⵠⵠⲆ[v2260](vVVVVWindow[v440].stringify([33, p1875]));
          break;
        case 205:
        case 262:
        case 206:
        case 225:
        case 290:
        case 316:
        case 314:
        case 293:
        case 295:
        case 318:
        case 357:
        case 320:
        case 204:
        case 264:
        case 265:
        case 266:
        case 267:
        case 209:
        case 269:
        case 244:
        case 245:
        case 268:
        case 273:
        case 274:
        case 275:
        case 215:
        case 328:
        case 322:
        case 323:
        case 324:
        case 325:
        case 326:
        case 330:
        case 270:
        case 271:
        case 272:
        case 210:
        case 213:
        case 214:
        case 327:
        case 329:
        case 216:
        case 292:
        case 234:
        case 228:
        case 246:
        case 247:
        case 248:
        case 249:
        case 250:
        case 251:
        case 252:
        case 253:
        case 254:
        case 255:
        case 256:
        case 257:
        case 258:
        case 259:
        case 300:
        case 303:
        case 284:
        case 285:
        case 237:
        case 261:
        case 331:
          if (!v2860.ⵠⲆᐃᐃΔ) {
            if (p1875 === v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ) {
              v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
            } else {
              v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = p1875;
            }
          }
          break;
        case 0:
        case 103:
        case 5:
        case 6:
        case 48:
        case 28:
        case 9:
        case 108:
        case 109:
        case 119:
        case 120:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 165:
        case 166:
        case 12:
        case 13:
        case 14:
        case 15:
        case 60:
        case v595.ΔⲆΔᐃᐃᐃⲆΔⵠ:
        case 16:
        case 17:
        case 61:
        case 18:
        case 167:
        case 168:
        case 169:
        case 170:
        case 171:
        case 172:
        case 110:
        case 126:
        case 19:
        case 173:
        case 111:
        case 127:
        case 20:
        case 174:
        case 112:
        case 128:
        case 21:
        case 175:
        case 113:
        case 129:
        case 22:
        case 176:
        case 114:
        case 130:
        case 23:
        case 177:
        case 115:
        case 131:
        case 24:
        case 178:
        case 116:
        case 132:
        case 25:
        case 179:
        case 117:
        case 133:
        case 26:
        case 180:
        case 118:
        case 134:
        case 27:
        case 181:
          if (!v2860.ⵠⲆᐃᐃΔ) {
            v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
            if ((v2993 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ]) && p1875 === v2993.right) {
              this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([33, 7]));
            } else {
              v2860.ⵠΔⵠⲆΔ.wait = true;
              this.ⵠⵠⵠⲆ[v2260](vVVVVVVWindow[v448].stringify([33, p1875]));
            }
          }
          break;
        case 1:
        case 8:
        case 3:
        case 4:
        case 62:
        case 63:
        case 64:
        case 46:
        case 65:
        case 66:
        case 49:
        case 50:
        case 72:
        case 82:
        case 86:
        case 87:
        case 88:
        case 101:
        case 102:
        case 99:
        case 100:
        case 162:
        case 85:
        case 135:
        case 136:
        case 137:
        case 138:
        case 139:
        case 140:
        case 51:
        case 73:
        case 90:
        case 141:
        case 52:
        case 74:
        case 91:
        case 142:
        case 53:
        case 75:
        case 92:
        case 143:
        case 54:
        case 76:
        case 93:
        case 144:
        case 55:
        case 77:
        case 94:
        case 145:
        case 56:
        case 78:
        case 95:
        case 146:
        case 57:
        case 79:
        case 96:
        case 147:
        case 58:
        case 80:
        case 97:
        case 148:
        case 59:
        case 81:
        case 98:
        case 89:
        case 149:
          if (!v2860.ⵠⲆᐃᐃΔ) {
            v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
            if ((v2993 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ]) && v2993.right === p1875) {
              this.ⵠⵠⵠⲆ[v2260](vVVVVVVVWindow[v449].stringify([33, 7]));
            } else {
              this.ⵠⵠⵠⲆ[v2260](vVVVVVVVVWindow[v452].stringify([33, p1875]));
            }
          }
          break;
        case 333:
        case 334:
        case 335:
        case 349:
        case 336:
        case 337:
        case 338:
        case 339:
        case 355:
        case 354:
        case 358:
        case 340:
        case 164:
          if (!v2860.ⵠⲆᐃᐃΔ) {
            v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
            var v2993 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
            this.ⵠⵠⵠⲆ[v2260](vVVVVVVVVWindow[v452].stringify([33, p1875]));
          }
          break;
        case 150:
        case 151:
        case 152:
        case 104:
        case 34:
        case 35:
        case 36:
        case 70:
        case 71:
        case 29:
        case 30:
        case 31:
        case 105:
        case 106:
        case 163:
        case 107:
        case 83:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
          if ((v2993 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ]) && v2993.ΔΔⵠⲆΔ !== p1875) {
            v2860.ⵠⵠⲆⵠⵠ.wait = vV122;
          }
          this.ⵠⵠⵠⲆ[v2260](vVVVVWindow[v444].stringify([33, p1875]));
          break;
        case 10:
        case 156:
        case 157:
        case 159:
        case 11:
        case 67:
        case 161:
        case 155:
        case 153:
        case 154:
        case 68:
        case 69:
        case 158:
        case 32:
        case 33:
        case 84:
          this.ⵠⵠⵠⲆ[v2260](v466[v465].stringify([33, p1875]));
      }
    };
    this.ΔᐃⲆΔⲆⵠⲆΔᐃ = function (p1877) {
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v432].stringify([27, p1877]));
    };
    this.ⵠⲆᐃⲆΔΔᐃᐃⵠ = function (p1878) {
      v2860.ⵠⲆⲆᐃᐃ.wait = true;
      var v2994 = v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(p1878);
      v2860.ΔⲆⵠⵠ.ⵠᐃⲆⲆΔᐃᐃ(p1878, v2994);
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ᐃΔᐃⲆᐃⵠⵠⵠᐃ = function (p1879, p1880) {
      this.ⵠⵠⵠⲆ[v2260](vVWindow[v449].stringify([31, p1879]));
    };
    this.ⵠⲆΔⵠᐃⵠⲆΔⲆ = function (p1881, p1882) {
      this.ⵠⵠⵠⲆ[v2260](vVVWindow[v428].stringify([35, p1881]));
    };
    this.ⵠΔⵠᐃΔⲆⲆⲆᐃ = function (p1883) {
      v2860.ⵠⲆⲆᐃᐃ.wait = vVV1222;
      var v2995 = v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(p1883);
      v2860.ΔⲆⵠⵠ.ⵠᐃᐃᐃᐃⲆΔ(p1883, 1, v2995);
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ΔⵠᐃⵠⵠΔⵠⵠⲆ = function (p1884) {
      var v2996 = p1884[1];
      var v2997 = p1884[2];
      v2860.ⵠⲆⲆᐃᐃ.wait = true;
      var v2998 = v2860.ΔⲆⵠⵠ.ΔΔⵠΔⵠ(v2996);
      v2860.ΔⲆⵠⵠ.ⵠᐃᐃᐃᐃⲆΔ(v2996, v2997, v2998);
      v2860.ⵠⲆᐃᐃ.ⵠΔᐃ();
    };
    this.ⲆΔᐃⲆᐃⲆⲆΔⵠ = function () {
      this.ⵠⵠⵠⲆ[v2260](vVVWindow[v428].stringify([38]));
    };
    this.ΔⵠⵠⲆⲆⲆᐃᐃⵠ = function (p1885) {
      var v2999 = Math.PI * 2;
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v435].stringify([19, Math.floor((p1885 + v2999) % v2999 * 255 / v2999)]));
    };
    this.ᐃⵠΔΔΔⵠⵠⵠⲆ = function (p1886) {
      var v3000 = Math.PI * 2;
      this.ⵠⵠⵠⲆ[v2260](vVVVWindow[v435].stringify([10, Math.floor((p1886 + v3000) % v3000 * 255 / v3000)]));
    };
    this.ⲆⵠᐃΔΔⲆΔⵠΔ = function (p1887) {
      this.ⵠⵠⵠⲆ[v2260](ᐃⲆΔΔⵠᐃΔ[0].stringify([14, p1887]));
    };
    this.ᐃⵠᐃΔⵠⲆᐃᐃⵠ = function (p1888) {
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([34, p1888]));
    };
    this.ᐃΔⵠᐃⵠⲆⲆᐃⲆ = function (p1889) {
      var v3001 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
      if (v2860.ⵠⲆᐃᐃΔ) {
        if (Math.random() > 0.5) {
          v3001.text.push(p1889.substring(0, 25) + " ..." + ΔᐃⲆΔΔΔⲆ);
        } else {
          v3001.text.push(ΔᐃⲆΔΔΔⲆ + "... " + p1889.substring(0, 25));
        }
      } else {
        v3001.text.push(p1889);
      }
      this.ⵠⵠⵠⲆ[v2260](vVVVVVWindow[v444].stringify([5, p1889]));
    };
    this.ᐃᐃⲆⲆⲆ = function (p1890) {
      var v3002 = ⲆⵠⲆΔ.select.ⲆⵠΔ;
      if (v3002.length != 0) {
        var v3003 = [14];
        var v3004 = [];
        ⵠⵠΔ.ᐃᐃⵠⲆⵠΔᐃ(p1890, {
          x: ⲆⵠⲆΔ.Δⵠⵠ.rx,
          y: ⲆⵠⲆΔ.Δⵠⵠ.ry
        });
        v3003.push(p1890.x);
        v3003.push(p1890.y);
        for (var v3005 = 0; v3002.length > v3005; v3005++) {
          v3004.push(v3002[v3005].ⵠᐃᐃΔᐃΔᐃΔΔ);
        }
        v3003.push(v3004);
        this.ⵠⵠⵠⲆ[v2260](vVVVVVVWindow[v448].stringify(v3003));
      }
    };
    this.ΔⲆΔⲆⵠⵠⵠ = 0;
    this.ᐃᐃΔⵠᐃΔΔ = {
      ᐃᐃΔⲆ: 0,
      ⲆΔ: 0
    };
    this.ⵠᐃΔⲆⲆΔᐃΔΔ = function () {
      if (v3092 - this.ΔⲆΔⲆⵠⵠⵠ > 50) {
        this.ΔⲆΔⲆⵠⵠⵠ = v3092;
        var v3006 = v2860.Δⵠⵠ;
        var v3007 = Math.floor(v3006.x / 100);
        var v3008 = Math.floor(v3006.y / 100);
        if (v3007 != this.ᐃᐃΔⵠᐃΔΔ.ⲆΔ || this.ᐃᐃΔⵠᐃΔΔ.ᐃᐃΔⲆ != v3008) {
          this.ⵠⵠⵠⲆ[v2260](vVVVVVVVVWindow[v449].stringify([0, Math.floor(-v3006.x), Math.floor(-v3006.y)]));
          this.ᐃᐃΔⵠᐃΔΔ.ⲆΔ = v3007;
          this.ᐃᐃΔⵠᐃΔΔ.ᐃᐃΔⲆ = v3008;
        }
      }
    };
    this.ΔⲆᐃᐃᐃΔᐃ = 0;
    this.ᐃⵠⵠΔⲆⲆΔⲆⲆ = function () {
      if (v3092 - this.ΔⲆᐃᐃᐃΔᐃ > 60000) {
        this.ΔⲆᐃᐃᐃΔᐃ = v3092;
        this.ping();
      }
    };
    this.ⵠⵠΔΔⲆΔᐃⵠⵠ = function () {
      v2860.reconnect.enabled = vVVV1223;
      if (vThis5.ⵠⵠⵠⲆ.ᐃᐃⵠΔᐃ == vThis5.ᐃᐃⵠΔᐃ) {
        vThis5.ᐃᐃⵠΔᐃ++;
        vThis5.ⵠⵠⵠⲆ.close();
        v2862.connect();
      }
    };
    this.ΔᐃⲆᐃⵠΔΔᐃⲆ = function (p1891) {
      this.ⲆᐃⲆⵠΔ(v756[2016]);
      for (var v3009 = 1; p1891.length > v3009; v3009++) {
        v2860.ΔᐃⲆᐃⲆ.push(p1891[v3009]);
      }
    };
    this.ⲆⵠᐃⲆⲆⲆⲆᐃΔ = function (p1892) {
      this.ⲆᐃⲆⵠΔ(v2859.ⵠⲆⵠⲆ[p1892].ᐃΔⵠⵠΔ + v756[2018]);
      v2860.ΔᐃⲆᐃⲆ.push(p1892);
      var v3010 = document.getElementById("team_box");
      if (v3057.ⲆⲆΔⲆⲆ != -1 && v3010.style.display == "inline-block") {
        v3057.ΔⲆᐃΔⲆ[v3057.ⲆⲆΔⲆⲆ].action();
      }
    };
    this.ᐃᐃⵠΔⲆΔⵠⲆᐃ = function () {
      this.ⲆᐃⲆⵠΔ(v756[2019]);
      v2860.ΔᐃᐃⲆⲆ.wait = true;
      v2860.ΔᐃⲆᐃⲆ = [];
      document.getElementById("team_box").style.display = "none";
    };
    this.ⲆΔᐃⲆⵠΔᐃΔⲆ = function (p1893) {
      if (v2860.id == p1893) {
        this.ⲆᐃⲆⵠΔ(v756[2020]);
        v2860.ΔᐃᐃⲆⲆ.wait = vVVVV1223;
        v2860.ΔᐃⲆᐃⲆ = [];
        document.getElementById("team_box").style.display = "none";
      } else {
        this.ⲆᐃⲆⵠΔ(v2859.ⵠⲆⵠⲆ[p1893].ᐃΔⵠⵠΔ + v756[2021]);
        for (var v3011 = 0; v2860.ΔᐃⲆᐃⲆ.length > v3011; v3011++) {
          if (p1893 == v2860.ΔᐃⲆᐃⲆ[v3011]) {
            v2860.ΔᐃⲆᐃⲆ.splice(v3011, 1);
            break;
          }
        }
        var v3012 = document.getElementById("team_box");
        if (v3057.ⲆⲆΔⲆⲆ != -1 && v3012.style.display == "inline-block") {
          v3057.ΔⲆᐃΔⲆ[v3057.ⲆⲆΔⲆⲆ].action();
        }
      }
    };
    this.ΔΔΔΔᐃⵠⵠⵠᐃ = function (p1894) {
      v2860.ᐃᐃⲆΔⲆ = false;
      this.ⲆᐃⲆⵠΔ(v756[2022]);
      if (this.ⵠⵠⵠⲆ.ᐃᐃⵠΔᐃ == this.ᐃᐃⵠΔᐃ) {
        this.ᐃᐃⵠΔᐃ++;
        v3057.ⵠᐃⲆᐃⵠ(v2858.ⲆⵠⵠᐃΔ);
        this.ⵠⵠⵠⲆ.close();
      }
    };
    this.ᐃᐃΔᐃⲆᐃᐃΔⵠ = function (p1895, p1896) {
      v2860.ᐃᐃⲆΔⲆ = v16;
      var v3013 = new Uint16Array(p1896);
      var v3014 = new Uint32Array(p1896);
      v2860.ᐃⲆΔⲆᐃⲆΔ.ⵠΔΔⲆᐃΔⵠ = v758[p1895][Math.floor(Math.random() * v758[p1895].length)];
      v2860.ᐃⲆΔⲆᐃⲆΔ.ΔⲆΔΔᐃ = ⵠⵠΔ.ΔⲆᐃⲆΔᐃᐃ(v2859.ⵠⲆⵠⲆ[v2860.id].ΔⲆΔΔᐃ);
      v2860.ᐃⲆΔⲆᐃⲆΔ.ⵠⵠΔᐃⵠⲆΔ = ⵠⵠΔ.ΔⲆᐃⲆΔᐃᐃ(v3014[1]);
      v2860.ᐃⲆΔⲆᐃⲆΔ.ΔΔⵠⵠᐃᐃⲆ = v3013[1];
      this.ⲆᐃⲆⵠΔ(v756[2017]);
      if (this.ⵠⵠⵠⲆ.ᐃᐃⵠΔᐃ == this.ᐃᐃⵠΔᐃ) {
        this.ᐃᐃⵠΔᐃ++;
        v3057.ⵠᐃⲆᐃⵠ(v2861.ⲆⵠⵠᐃΔ);
        this.ⵠⵠⵠⲆ.close();
        try {
          vWindow.Widget.adsRefresh();
        } catch (e) {}
      }
    };
    this.ping = function () {
      this.ⵠⵠⵠⲆ[v2260]("[15]");
    };
    this.ΔΔᐃⲆⲆΔᐃⲆᐃ = function () {
      if (this.ⵠⵠⵠⲆ.readyState == 3) {
        this.ⵠⵠᐃᐃᐃⲆΔ -= 600000;
      }
    };
    this.ⵠⲆΔᐃΔⲆΔᐃⵠ = function () {
      if (v3091 > 5) {
        this.ⵠⵠᐃᐃᐃⲆΔ = v3092;
      }
      if (v3092 - this.ⵠⵠᐃᐃᐃⲆΔ > 600000) {
        this.ⵠⵠᐃᐃᐃⲆΔ = v3092;
        this.ⵠⵠΔΔⲆΔᐃⵠⵠ();
      }
    };
    this.ΔᐃⵠⵠⲆⲆᐃⵠⲆ = function (p1897) {
      v3105++;
      clearTimeout(this.ᐃⲆΔⲆⵠⵠᐃ);
      document.getElementById("commandMainBoxName").innerHTML = this.ⲆⲆⲆᐃᐃ[this.ⲆⲆⲆⲆᐃ][this.ᐃⵠⵠⵠΔΔⵠ[this.ⲆⲆⲆⲆᐃ]].a;
      document.getElementById("exploreForest").src = "img/forest-leaf.png";
      document.getElementById("exploreWinter").src = "img/winter-flake.png";
      document.getElementById("exploreDesert").src = "img/desert-cactus.png";
      document.getElementById("exploreLava").src = "img/lava-volcano.png";
      this.ⵠⵠᐃᐃᐃⲆΔ = v3092;
      v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.ᐃΔᐃⵠΔ = v2860.ⲆᐃΔⲆ.ⲆⲆⲆⵠⵠ.ⲆΔΔⵠΔ;
      v2860.ⲆᐃΔⲆ.ⵠΔᐃⵠᐃⵠⵠ.ᐃΔᐃⵠΔ = v2860.ⲆᐃΔⲆ.ⵠΔᐃⵠᐃⵠⵠ.ⲆΔΔⵠΔ;
      v2860.ⲆᐃΔⲆ.ⲆⵠΔⵠⲆⲆᐃ.ᐃΔᐃⵠΔ = v2860.ⲆᐃΔⲆ.ⲆⵠΔⵠⲆⲆᐃ.ⲆΔΔⵠΔ;
      v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.ᐃΔᐃⵠΔ = v2860.ⲆᐃΔⲆ.ΔΔⲆⲆⵠⵠΔ.ⲆΔΔⵠΔ;
      v2860.ⲆᐃΔⲆ.ᐃⲆⵠᐃⵠΔⲆ.ᐃΔᐃⵠΔ = v2860.ⲆᐃΔⲆ.ᐃⲆⵠᐃⵠΔⲆ.ⲆΔΔⵠΔ;
      v2860.ⲆᐃΔⲆ.Ⲇⵠᐃⵠ = 1;
      v2860.ⲆᐃΔⲆ.c = 1;
      v2860.ⲆᐃΔⲆ.ᐃⵠⵠ = 1;
      v2860.ⲆᐃΔⲆ.ⵠⲆΔ = 1;
      v2860.ⲆᐃΔⲆ.ⵠⵠⲆ = 1;
      v2860.ⲆᐃΔⲆ.ΔΔᐃᐃⵠⲆΔ = 1;
      v2860.ΔⲆⵠⵠⲆΔⵠ = false;
      v3057.ᐃⵠᐃᐃⵠ.display = 0;
      v2289.ⲆⲆⲆⵠⲆⲆⵠ = p1897[29];
      v2289.ⲆⵠⲆᐃΔⵠᐃ = p1897[30];
      v2289.ⲆΔⵠΔⵠⵠⵠ = 10 + v2289.ⲆⵠⲆᐃΔⵠᐃ;
      v2860.ΔⲆⵠⵠ.ⲆΔⵠΔᐃ = [];
      v2860.ΔⲆⵠⵠ.ⵠⵠⵠᐃ = [];
      v2860.ΔⲆⵠⵠ.max = 10;
      v2860.ΔⲆⵠⵠ.ᐃⵠⵠⵠᐃΔⲆ = 0;
      v2860.ΔⲆⵠⵠ.ⵠᐃⲆⵠᐃ = 0;
      v2860.ΔⲆⵠⵠ.id = -1;
      v3057.ⵠᐃⵠΔᐃⵠᐃ = 1;
      v3057.ΔΔⲆⲆΔΔΔ = 1;
      v3057.ᐃⲆⵠᐃᐃᐃⲆ = 1;
      v3057.ᐃⲆⵠΔΔⵠᐃ = 1;
      v2860.ᐃᐃⲆΔⲆ = true;
      v2860.ΔⲆⵠⵠ.ᐃⵠⲆᐃⵠᐃⲆ.stop();
      v2860.ⵠⲆᐃᐃ.ⵠᐃⵠΔᐃ = [];
      v2860.ⵠⲆᐃᐃ.ΔⵠΔⵠⵠ = vVV164;
      v2860.ⵠⲆᐃᐃ.ᐃᐃΔⵠΔᐃⵠⵠⲆ = vVV164;
      v2860.ⵠⲆᐃᐃ.ᐃⵠᐃᐃ = -1;
      v2860.ⵠⲆᐃᐃ.id = -1;
      v2860.ⵠⲆᐃᐃ.ᐃᐃⵠⵠᐃⲆΔ = false;
      v2860.ⵠⲆᐃᐃ.ΔⲆⲆᐃⲆ = vVV16;
      v2860.ⵠⲆᐃᐃ.ⵠⲆⲆΔΔ = false;
      v2860.ⵠⲆᐃᐃ.ΔⵠⵠⵠⵠⵠⲆ = false;
      v2860.ⵠⲆᐃᐃ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVVV1623, 0, 1, 0, 1, 1);
      const v3015 = (p1897[33] || 10000) / 1000;
      v2860.ⵠΔⵠⲆΔ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(false, 0, 1, 0, 1 / v3015, 1);
      v2860.ⵠΔⵠⲆΔ.wait = false;
      const v3016 = (p1897[34] || 5000) / 1000;
      v2860.ⵠⵠⲆⵠⵠ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(vV16, 0, 1, 0, 1 / v3016, 1);
      v2860.ⵠⵠⲆⵠⵠ.wait = false;
      const v3017 = (p1897[35] || 1000) / 1000;
      v2860.ⵠⲆⲆᐃᐃ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(v16, 0, 1, 0, 1 / v3017, 1);
      v2860.ⵠⲆⲆᐃᐃ.wait = v16;
      v2860.ΔᐃᐃⲆⲆ.id = -1;
      v2860.ΔᐃᐃⲆⲆ.ΔⲆⲆᐃ = -1;
      v2860.ΔᐃᐃⲆⲆ.wait = vVVV1622;
      v2860.ΔᐃᐃⲆⲆ.timeout = new ⵠⵠΔ.ΔⲆⵠⲆ(vVVV16223, 0, 1, 0, 1 / 30, 1);
      v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.x = -1;
      v3057.ΔᐃⵠΔΔ.ⲆΔΔⲆΔⲆⲆ.y = -1;
      v3057.ⵠⲆⵠᐃⲆ.open = false;
      v3057.ΔᐃⵠΔΔ.ⵠⲆⵠⲆ = [];
      v2860.ⵠⲆⲆᐃⲆΔⵠ.enabled = vVVV16;
      v2859.mode = p1897[1];
      if (p1897[20] !== vVVVVUndefined173 && vVUndefined15 !== p1897[21]) {
        v2859.ⲆᐃᐃⲆΔ = p1897[20];
        v2859.ⵠΔᐃΔⲆ = p1897[21];
        v2859.w = v2859.ⲆᐃᐃⲆΔ * v2859.ⵠᐃᐃᐃΔΔᐃ;
        v2859.ᐃⵠⵠ = v2859.ⵠΔᐃΔⲆ * v2859.ⵠΔΔᐃΔΔΔ;
      }
      v2859.ⲆⲆᐃΔΔΔⵠ = p1897[22];
      v2859.ᐃⲆⲆΔᐃ = p1897[23];
      vThis5.ΔᐃΔⵠⵠⲆΔ(p1897[24]);
      vThis5.ᐃΔᐃΔⲆΔⲆᐃᐃ(p1897[25]);
      vThis5.ᐃᐃⵠⵠⲆΔⲆⵠΔ(p1897[28]);
      vThis5.ΔΔΔⲆΔᐃⵠⲆΔ(p1897[31]);
      vThis5.ⵠΔⲆⲆᐃᐃⵠΔⵠ(p1897[32]);
      v2860.Δᐃᐃᐃᐃ.ΔΔΔΔΔ = p1897[26];
      v2860.ⲆⵠᐃΔⵠΔⵠ = 0;
      v2860.ᐃᐃᐃΔⲆ.ΔΔΔΔΔ = p1897[27];
      v2859.ⵠᐃⵠΔⵠᐃᐃᐃᐃ(p1897[19]);
      v2859.time = p1897[5];
      v2859.ⲆⵠΔΔΔ.ᐃΔΔⵠᐃ = p1897[15];
      v2859.ⲆⵠΔΔΔ.ⵠⵠΔⵠᐃ = new Date().getTime();
      v3057.ⵠᐃᐃᐃ.ⵠᐃⵠΔᐃⵠⵠ = p1897[16];
      v2859.transition = vV162;
      v2860.ⵠᐃⵠ = p1897[2];
      v3057.ⵠᐃᐃᐃ.reset();
      v2860.ΔᐃⲆᐃⲆ = p1897[8];
      v2859.ⲆⵠΔ[0] = [];
      v2859.ⲆⵠΔ[105] = [];
      v2859.ⲆⵠΔ[106] = [];
      v2859.ⲆⵠΔ[104] = [];
      v2859.ⲆⵠΔ[2] = [];
      v2859.ⲆⵠΔ[1] = [];
      v2859.ⲆⵠΔ[6] = [];
      v2859.ⲆⵠΔ[3] = [];
      v2859.ⲆⵠΔ[40] = [];
      v2859.ⲆⵠΔ[46] = [];
      v2859.ⲆⵠΔ[52] = [];
      v2859.ⲆⵠΔ[53] = [];
      v2859.ⲆⵠΔ[48] = [];
      v2859.ⲆⵠΔ[49] = [];
      v2859.ⲆⵠΔ[63] = [];
      v2859.ⲆⵠΔ[66] = [];
      v2859.ⲆⵠΔ[64] = [];
      v2859.ⲆⵠΔ[4] = [];
      v2859.ⲆⵠΔ[7] = [];
      v2859.ⲆⵠΔ[8] = [];
      v2859.ⲆⵠΔ[9] = [];
      v2859.ⲆⵠΔ[10] = [];
      v2859.ⲆⵠΔ[15] = [];
      v2859.ⲆⵠΔ[16] = [];
      v2859.ⲆⵠΔ[17] = [];
      v2859.ⲆⵠΔ[54] = [];
      v2859.ⲆⵠΔ[55] = [];
      v2859.ⲆⵠΔ[56] = [];
      v2859.ⲆⵠΔ[57] = [];
      v2859.ⲆⵠΔ[58] = [];
      v2859.ⲆⵠΔ[62] = [];
      v2859.ⲆⵠΔ[11] = [];
      v2859.ⲆⵠΔ[22] = [];
      v2859.ⲆⵠΔ[23] = [];
      v2859.ⲆⵠΔ[5] = [];
      v2859.ⲆⵠΔ[12] = [];
      v2859.ⲆⵠΔ[13] = [];
      v2859.ⲆⵠΔ[14] = [];
      v2859.ⲆⵠΔ[67] = [];
      v2859.ⲆⵠΔ[77] = [];
      v2859.ⲆⵠΔ[78] = [];
      v2859.ⲆⵠΔ[79] = [];
      v2859.ⲆⵠΔ[80] = [];
      v2859.ⲆⵠΔ[81] = [];
      v2859.ⲆⵠΔ[86] = [];
      v2859.ⲆⵠΔ[89] = [];
      v2859.ⲆⵠΔ[90] = [];
      v2859.ⲆⵠΔ[87] = [];
      v2859.ⲆⵠΔ[88] = [];
      v2859.ⲆⵠΔ[93] = [];
      v2859.ⲆⵠΔ[94] = [];
      v2859.ⲆⵠΔ[99] = [];
      v2859.ⲆⵠΔ[98] = [];
      v2859.ⲆⵠΔ[43] = [];
      v2859.ⲆⵠΔ[72] = [];
      v2859.ⲆⵠΔ[73] = [];
      v2859.ⲆⵠΔ[74] = [];
      v2859.ⲆⵠΔ[69] = [];
      v2859.ⲆⵠΔ[70] = [];
      v2859.ⲆⵠΔ[85] = [];
      v2859.ⲆⵠΔ[84] = [];
      v2859.ⲆⵠΔ[82] = [];
      v2859.ⲆⵠΔ[83] = [];
      v2859.ⲆⵠΔ[71] = [];
      v2859.ⲆⵠΔ[76] = [];
      v2859.ⲆⵠΔ[75] = [];
      v2859.ⲆⵠΔ[91] = [];
      v2859.ⲆⵠΔ[101] = [];
      v2859.ⲆⵠΔ[95] = [];
      v2859.ⲆⵠΔ[96] = [];
      v2859.ⲆⵠΔ[97] = [];
      v2859.ⲆⵠΔ[92] = [];
      v2859.ⲆⵠΔ[100] = [];
      v2859.ⲆⵠΔ[103] = [];
      v2859.ⲆⵠΔ[102] = [];
      v2859.ⲆⵠΔ[68] = [];
      v2859.ⲆⵠΔ[18] = [];
      v2859.ⲆⵠΔ[19] = [];
      v2859.ⲆⵠΔ[20] = [];
      v2859.ⲆⵠΔ[21] = [];
      v2859.ⲆⵠΔ[59] = [];
      v2859.ⲆⵠΔ[61] = [];
      v2859.ⲆⵠΔ[60] = [];
      v2859.ⲆⵠΔ[38] = [];
      v2859.ⲆⵠΔ[65] = [];
      v2859.ⲆⵠΔ[39] = [];
      v2859.ⲆⵠΔ[47] = [];
      v2859.ⲆⵠΔ[42] = [];
      v2859.ⲆⵠΔ[41] = [];
      v2859.ⲆⵠΔ[24] = [];
      v2859.ⲆⵠΔ[25] = [];
      v2859.ⲆⵠΔ[26] = [];
      v2859.ⲆⵠΔ[27] = [];
      v2859.ⲆⵠΔ[28] = [];
      v2859.ⲆⵠΔ[29] = [];
      v2859.ⲆⵠΔ[30] = [];
      v2859.ⲆⵠΔ[31] = [];
      v2859.ⲆⵠΔ[32] = [];
      v2859.ⲆⵠΔ[33] = [];
      v2859.ⲆⵠΔ[34] = [];
      v2859.ⲆⵠΔ[35] = [];
      v2859.ⲆⵠΔ[36] = [];
      v2859.ⲆⵠΔ[37] = [];
      v2859.ⲆⵠΔ[51] = [];
      v2859.ⲆⵠΔ[50] = [];
      v2859.ⲆⵠΔ[44] = [];
      v2859.ⲆⵠΔ[45] = [];
      v2859.ᐃΔⵠⲆⵠ = [];
      v2859.ΔⵠⲆᐃⵠⲆⵠ = p1897[7];
      v2860.id = p1897[9];
      v2860.ᐃᐃⲆⵠ = v2860.id * v2859.ΔⵠⲆᐃⵠⲆⵠ;
      if (v3058.loaded) {
        v3058.ⵠⲆⵠⲆ[0].ᐃᐃⲆⵠ = v2860.ᐃᐃⲆⵠ;
        v3058.ⵠⲆⵠⲆ[0].ᐃΔᐃΔᐃΔⲆ = 0;
      }
      v3086.ᐃᐃⲆⵠᐃᐃⲆ();
      v2860.Δⵠⵠ.ⵠΔⲆΔΔ(p1897[3], p1897[10]);
      v2859.ⵠⲆⵠⲆ = [];
      var v3018 = v2859.ⵠⲆⵠⲆ;
      for (var v3019 = 0; v3019 < p1897[11]; v3019++) {
        v3018.push(new f467());
      }
      v3019 = 0;
      for (var v3020 = p1897[4]; v3020.length > v3019; v3019++) {
        var v3021 = v3018[v3020[v3019].i];
        v3021.ᐃΔⵠⵠΔ = v3020[v3019].n;
        v3021.ⵠⲆⲆΔ = v3020[v3019].s;
        v3021.ᐃⲆΔΔⲆ = v3020[v3019].a;
        v3021.ⵠᐃᐃⵠᐃ = v3020[v3019].c;
        v3021.ᐃᐃᐃⵠⲆ = v3020[v3019].b;
        v3021.ᐃⲆⵠΔⲆ = v3020[v3019].d;
        v3021.ⵠⲆΔΔᐃᐃᐃ = v3020[v3019].g;
        v3021.level = v3020[v3019].l;
        v3021.ΔⲆΔΔᐃ = ⵠⵠΔ.ΔΔⲆⲆΔⲆΔ(v3020[v3019].p);
        v3021.ᐃᐃⲆΔⲆ = true;
        if (v2261 === 1) {
          v3021.ᐃΔⵠⵠΔ += "|" + v3020[v3019].i;
        }
      }
      v2860.ᐃᐃΔⵠⲆ.sort();
      if (v2859.mode === 1 && v2859.ⵠⲆⵠⲆ[v2860.id].ᐃΔⵠⵠΔ === "spectator") {
        v2860.ΔⲆᐃⵠΔⲆⵠ = vVVVVV12232;
      } else {
        v2860.ΔⲆᐃⵠΔⲆⵠ = vVVV1623;
      }
      if (v2859.mode === 2 && v2859.ⵠⲆⵠⲆ[v2860.id].ⵠⲆⲆΔ === 0) {
        v2860.ⵠⲆᐃᐃΔ = true;
      } else {
        v2860.ⵠⲆᐃᐃΔ = false;
      }
      if (v2859.mode === 3 && v2859.ⵠⲆⵠⲆ[v2860.id].ⵠⲆⲆΔ === 0) {
        v2860.ⵠΔⲆΔⲆᐃⵠ = true;
      } else {
        v2860.ⵠΔⲆΔⲆᐃⵠ = false;
      }
      ⵠⲆΔⲆ.set("starve_token", v2860.ᐃⵠΔᐃⲆ);
      if (p1897[12] === 0) {
        v2860.ⲆⵠⵠⵠΔ.ᐃⵠⲆΔⲆ = 0;
        v3057.ⵠᐃᐃᐃ.restore(p1897[17]);
        var v3022 = p1897[14];
        if (v3022[47]) {
          v2860.ΔⲆⵠⵠ.ᐃᐃⵠⲆΔΔΔ(1, 0);
        }
        for (v3019 = 0; v3019 < v3022.length; v3019++) {
          if (v3022[v3019]) {
            if (v3019 == 47) {
              continue;
            }
            if (v3019 == 7) {
              continue;
            }
            this.ⵠᐃⵠΔⲆⲆΔ([0, v3019, v3022[v3019]]);
          }
        }
        v2860.ⲆⵠⵠⵠΔ.open = false;
      } else {
        if (v2859.mode === 3) {
          if (v2860.ⵠΔⲆΔⲆᐃⵠ) {
            this.ⵠᐃⵠΔⲆⲆΔ([0, 292, 4]);
          } else {
            this.ⵠᐃⵠΔⲆⲆΔ([0, 293, 3]);
          }
        }
        if (v2859.mode === 0 || v2859.mode === 3 || v2859.mode === 7 || v2859.mode === 4) {
          v2860.ⲆⵠⵠⵠΔ.ᐃⵠⲆΔⲆ = new Date().getTime();
          v2860.ⲆⵠⵠⵠΔ.open = vVVVV12222;
          v2860.ⲆⵠⵠⵠΔ.value = p1897[13];
          v3057.ⲆⵠⵠⵠΔ.ⵠⵠΔⵠᐃ();
        } else {
          v2860.ⲆⵠⵠⵠΔ.ᐃⵠⲆΔⲆ = 0;
          v2860.ⲆⵠⵠⵠΔ.open = vVVVV1623;
          v2860.ⲆⵠⵠⵠΔ.value = 0;
        }
        v2860.ⵠΔΔⵠⲆⲆᐃ = p1897[12].toString();
      }
      v2860.ᐃΔΔᐃᐃ.enabled = p1897[6];
      v2860.ᐃΔΔᐃᐃ.ᐃⵠⲆΔⲆ = -1;
      v2860.ᐃΔΔᐃᐃ.label = null;
      v2860.ᐃΔΔᐃᐃ.now = -1;
      ⵠⲆΔⲆ.set("starve_token_id", v2860.ⵠΔΔⵠⲆⲆᐃ);
      if (v2860.reconnect.enabled) {
        v2860.reconnect.rotate = 0;
        v2860.reconnect.enabled = false;
      } else {
        v2858.ⵠᐃⲆᐃⵠ(v3057.ⲆⵠⵠᐃΔ);
        if (ga) {
          ga("send", "event", "Game", "play", "S" + v2858.ⵠⲆⲆΔ + "A" + v2858.ᐃⲆΔΔⲆ);
        }
      }
    };
    this.connect = function () {
      vThis5.ⲆᐃΔⵠⵠΔᐃ = 0;
      vThis5.ⲆⵠᐃΔΔΔᐃ();
    };
    this.ⲆᐃᐃⵠᐃⲆⵠ = [];
    this.ⵠᐃᐃⵠⲆⲆⲆᐃⵠ = function (p1898) {
      const v3023 = vThis5.ᐃⲆⵠⲆᐃ.filter(p1899 => p1899.gm === p1898);
      const v3024 = {};
      for (let v3025 = 0; v3025 < v3023.length; v3025++) {
        const v3026 = v3023[v3025];
        const v3027 = v3026.r;
        if (v3027 !== undefined) {
          if (v3024[v3027] === vVVVVUndefined1722) {
            v3024[v3027] = [];
          }
          v3024[v3027].push(v3026);
        }
      }
      function o(p1900) {
        vThis5.ⲆᐃᐃⵠᐃⲆⵠ[p1898] = p1900;
        const v3028 = v3024[p1900];
        const v3029 = v3028[Math.floor(Math.random() * v3028.length)];
        vThis5.ΔΔⵠⲆⲆⲆᐃ({
          domain: v2266,
          is_tls: 1,
          id: v3029.id,
          p: v3029.p
        });
      }
      if (vThis5.ⲆᐃᐃⵠᐃⲆⵠ[p1898] !== undefined) {
        o(vThis5.ⲆᐃᐃⵠᐃⲆⵠ[p1898]);
        return;
      }
      let v3030 = 1;
      function s(p1901) {
        const v3031 = new vWindow.XMLHttpRequest();
        const v3032 = p1901[0];
        const v3033 = v3032.p;
        const v3034 = v3032.r;
        const v3035 = v3033[Math.floor(Math.random() * v3033.length)];
        v3031.open("GET", "https://" + v3035 + "." + v2266 + "/", true);
        v3031.onreadystatechange = function () {
          if (v3031.readyState === 4) {
            if (v3030 === 0) {
              return;
            }
            v3030 = 0;
            o(v3034);
          }
        };
        v3031.send();
      }
      for (let v3036 in v3024) {
        s(v3024[v3036]);
      }
      vWindow.setTimeout(function () {
        if (v3030 === 0) {
          return;
        }
        v3030 = 0;
        const v3037 = vWindow.Object.keys(v3024);
        o(v3037[Math.floor(v3037.length * Math.random())]);
      }, 5000);
    };
    this.ⵠΔᐃⵠΔᐃⵠΔᐃ = function () {
      let v3038 = v2289.ⵠΔⵠⵠΔⵠⵠ[vThis5.ⲆⲆⲆⲆᐃ];
      console.log(undefined, vVUndefined6, vVVVVUndefined172);
      let v3039 = vThis5.ᐃⵠⵠⵠΔΔⵠ[vThis5.ⲆⲆⲆⲆᐃ];
      let v3040 = vThis5.ᐃⲆⵠⲆᐃ.find(p1902 => p1902.gm == v3038 && p1902.idx == v3039);
      if (v3040 === vVVVUndefined17) {
        vThis5.ⵠᐃᐃⵠⲆⲆⲆᐃⵠ(v3038);
      } else {
        vThis5.ΔΔⵠⲆⲆⲆᐃ({
          domain: v2266,
          is_tls: 1,
          id: v3040.id,
          p: v3040.p
        });
      }
    };
    this.ⲆⵠᐃΔΔΔᐃ = function () {
      console.log(vVVUndefined163);
      if (v2264 === undefined || v2265 === vVUndefined14) {
        if (vVVVVUndefined172 === v2263) {
          vThis5.ⵠΔᐃⵠΔᐃⵠΔᐃ();
        } else {
          vThis5.ΔΔⵠⲆⲆⲆᐃ({
            domain: v2263.domain,
            is_tls: v2263.ssl,
            id: v2263.id,
            p: [v2263.p]
          });
        }
      } else {
        vThis5.ΔΔⵠⲆⲆⲆᐃ({
          domain: v2266,
          is_tls: 1,
          id: v2265 + v2264,
          p: vThis5.ΔⵠⵠᐃᐃᐃΔ[v2265]
        });
      }
    };
    this.ΔΔⵠⲆⲆⲆᐃ = function (p1903) {
      let v3041 = p1903.domain;
      let v3042 = p1903.is_tls;
      let v3043 = p1903.id;
      let v3044 = p1903.p;
      let v3045 = v3044[Math.floor(Math.random() * v3044.length)];
      let v3046 = v3042 ? "wss://" + v3045 + "." + v3041 + "/" + v3043 + "?" + v2860.ᐃᐃⲆⵠⲆᐃⵠ : "ws://" + v3041;
      console.log(undefined, vVVVUndefined172);
      vThis5.ⵠⵠⵠⲆ = new vWindow.WebSocket(v3046);
      vThis5.ⵠⵠⵠⲆ.binaryType = "arraybuffer";
      vThis5.ⵠⵠⵠⲆ.ᐃᐃⵠΔᐃ = vThis5.ᐃᐃⵠΔᐃ;
      vThis5.ⵠⵠⵠⲆ.onmessage = function (p1904) {
        if (vThis5.ᐃᐃⵠΔᐃ == vThis5.ᐃᐃⵠΔᐃ) {
          if (typeof p1904.data == "string") {
            var v3047 = JSON.parse(p1904.data);
            switch (v3047[0]) {
              case 0:
                vThis5.ⵠⲆΔΔⵠ(v3047);
                break;
              case 1:
                vThis5.ⲆⵠⵠΔᐃⲆΔ(v3047[1]);
                break;
              case 2:
                vThis5.ⲆΔⲆⲆᐃⵠΔᐃΔ(v3047);
                break;
              case 3:
                vThis5.ΔᐃⵠⵠⲆⲆᐃⵠⲆ(v3047);
                break;
              case 4:
                vThis5.message(v3047[1]);
                break;
              case 5:
                vThis5.ⵠⵠⵠⲆᐃⲆⲆ(v3047);
                break;
              case 6:
                vThis5.ΔᐃΔⵠⵠⲆΔ(v3047[1]);
            }
          } else {
            var vF46 = function (p1905, p1906, p1907) {
              const v3048 = new Uint8Array(p1905);
              const v3049 = v3048.length;
              let v3050;
              let v3051 = v2270[v3049];
              let vVVVVVUndefined1722 = vVVVVUndefined1722;
              if (v3051 === vVVUndefined163) {
                v2271 += v3049 * 2;
                if (v2271 < 65535) {
                  v3050 = vVUndefined3(v58(v3049));
                } else {
                  v2271 = v3049;
                  for (let v3052 = 0; v3052 < v2270.length; v3052++) {
                    if (v2270[v3052] !== undefined) {
                      const v3053 = v2270[v3052][0];
                      v2270[v3052] = undefined;
                      vVUndefined4(v3053);
                    }
                  }
                  v3050 = vVUndefined3(v58(v3049));
                  vVVUndefined3();
                }
                vVVVVVUndefined1722 = f6(v3050);
                v2270[v3049] = [v3050, vVVVVVUndefined1722];
              } else {
                v3050 = v3051[0];
                vVVVVVUndefined1722 = v3051[1];
              }
              for (let v3054 = 0; v3054 < v3048.length; v3054++) {
                vVVVVVUndefined1722[v3054] = v3048[v3054];
              }
              vVVUndefined62(v3050, p1906, p1907);
              for (let v3055 = 0; v3055 < v3048.length; v3055++) {
                v3048[v3055] = vVVVVVUndefined1722[v3055];
              }
              return v3048;
            }(p1904.data, v2860.ⵠΔⵠⵠᐃⵠΔ, v2860.ΔᐃⵠᐃⲆᐃΔⵠⲆ);
            var v3056 = vF46.buffer;
            switch (vF46[0]) {
              case 0:
                vThis5.ⲆⵠΔ(v3056, vF46, vVVV16);
                break;
              case 1:
                vThis5.ⲆⵠΔ(v3056, vF46, true);
                break;
              case 2:
                vThis5.ⵠᐃᐃⲆᐃⵠⵠᐃΔ();
                break;
              case 3:
                vThis5.ⵠᐃⵠΔⲆⲆΔ(new Uint16Array(v3056));
                break;
              case 4:
                vThis5.ⲆⲆΔⵠⵠⵠΔᐃᐃ();
                break;
              case 5:
                vThis5.ⵠΔⵠΔⵠⵠΔⵠⵠ();
                break;
              case 6:
                vThis5.ᐃΔⲆΔᐃⵠᐃΔⵠ();
                break;
              case 7:
                vThis5.ⵠⲆΔⲆⵠⵠⲆΔⲆ(v3056);
                break;
              case 8:
                vThis5.ⵠΔⵠⵠΔⵠΔᐃΔ(vF46[1] + (vF46[2] << 8));
                break;
              case 9:
                vThis5.ᐃⲆⲆᐃᐃⲆⲆⲆⲆ(vF46[1] + (vF46[2] << 8));
                break;
              case 10:
                vThis5.ΔΔᐃᐃⲆⲆᐃ();
                break;
              case 11:
                vThis5.ΔᐃⵠΔΔᐃⵠ(vF46[1] + (vF46[2] << 8), vF46[3]);
                break;
              case 12:
                vThis5.ᐃᐃⵠⵠᐃⲆΔ(vF46[1]);
                break;
              case 13:
                vThis5.ⲆᐃΔⲆⵠⵠⵠⵠΔ(vF46, v3056);
                break;
              case 14:
                vThis5.ΔⲆⲆⵠΔⵠⲆᐃΔ();
                break;
              case 15:
                vThis5.ΔΔᐃⲆⲆⵠᐃⲆⵠ(vF46[1]);
                break;
              case 16:
                vThis5.ⲆᐃΔⲆ(vF46[1], vF46[2], vF46[3], vF46[4], vF46[5], vF46[6], vF46[7]);
                break;
              case 17:
                vThis5.ⲆᐃᐃⲆⲆⵠᐃᐃΔ(v3056);
                break;
              case 18:
                vThis5.ᐃⲆⲆⵠΔⲆΔⲆΔ();
                break;
              case 19:
                vThis5.ⵠⲆⲆΔΔ(vF46[1]);
                break;
              case 20:
                vThis5.ΔⲆⲆⵠᐃⲆⵠᐃΔ();
                break;
              case 21:
                vThis5.ⵠᐃⵠⲆⲆ(v3056);
                break;
              case 22:
                vThis5.ΔⵠΔᐃᐃⵠⵠᐃⵠ(vF46[1]);
                break;
              case 23:
                vThis5.ⲆⲆⵠΔᐃⲆΔⵠⲆ(v3056);
                break;
              case 24:
                vThis5.ΔΔΔⲆⲆⵠΔᐃΔ(vF46[1] + (vF46[2] << 8));
                break;
              case 25:
                vThis5.ᐃᐃΔᐃⲆᐃᐃΔⵠ(vF46[1], v3056);
                break;
              case 26:
                vThis5.ΔᐃⵠΔΔ(vF46);
                break;
              case 27:
                vThis5.ᐃᐃⵠⲆⵠⵠⵠⲆⲆ();
                break;
              case 28:
                vThis5.ᐃΔΔᐃᐃ(vF46[1]);
                break;
              case 29:
                vThis5.ⲆᐃⵠΔᐃⵠⵠⵠⵠ();
                break;
              case 30:
                vThis5.ΔΔΔΔᐃⵠⵠⵠᐃ();
                break;
              case 31:
                vThis5.ΔᐃⲆᐃⵠΔΔᐃⲆ(vF46);
                break;
              case 32:
                vThis5.ⲆΔᐃⲆⵠΔᐃΔⲆ(vF46[1]);
                break;
              case 33:
                vThis5.ⲆⵠᐃⲆⲆⲆⲆᐃΔ(vF46[1]);
                break;
              case 34:
                vThis5.ᐃᐃⵠΔⲆΔⵠⲆᐃ();
                break;
              case 35:
                vThis5.ⵠⵠⲆⵠⲆⵠⲆΔⵠ(vF46[1] + (vF46[2] << 8));
                break;
              case 36:
                vThis5.ΔⵠⵠⵠⵠⵠⲆ(vF46[1]);
                break;
              case 37:
                vThis5.ⲆΔᐃᐃᐃⲆⵠⵠⵠ(vF46[1], vF46[2]);
                break;
              case 38:
                vThis5.ⲆᐃⲆᐃΔⵠᐃᐃᐃ(vF46[1]);
                break;
              case 39:
                vThis5.ΔᐃⵠⵠⵠⵠᐃΔᐃ(vF46[1]);
                break;
              case 40:
                vThis5.ⵠⲆⲆⲆⲆⲆΔⵠⲆ();
                break;
              case 41:
                vThis5.ᐃΔⲆⲆᐃΔΔⲆᐃ(new Uint16Array(v3056));
                break;
              case 42:
                vThis5.ⵠⲆᐃⵠⲆⲆΔⵠⲆ(vF46[1] + (vF46[2] << 8));
                break;
              case 43:
                vThis5.ᐃⲆᐃⵠⵠΔᐃΔⲆ(vF46[1] + vF46[2] * 256);
                break;
              case 44:
                vThis5.ⵠⲆⲆⲆⲆΔᐃΔⵠ(vF46[1] + (vF46[2] << 8));
                break;
              case 45:
                vThis5.ΔⵠΔᐃΔⵠⵠᐃΔ(vF46[1] + (vF46[2] << 8));
                break;
              case 46:
                vThis5.ᐃᐃΔⵠⵠᐃⲆⲆΔ(vF46[1] + (vF46[2] << 8));
                break;
              case 47:
                vThis5.ΔⲆⲆᐃⲆ(vF46[1]);
                break;
              case 48:
                vThis5.ᐃⲆⲆⲆᐃΔᐃⲆⵠ();
                break;
              case 50:
                vThis5.ᐃΔⲆⵠⵠⲆᐃᐃᐃ(vF46[1] + (vF46[2] << 8), vF46[3], vF46[4]);
                break;
              case 51:
                vThis5.ᐃᐃⵠⲆᐃⲆⲆΔⲆ();
                break;
              case 52:
                vThis5.ⵠⲆᐃⲆΔΔᐃᐃⵠ(vF46[1] + (vF46[2] << 8));
                break;
              case 53:
                vThis5.ⵠΔⵠᐃΔⲆⲆⲆᐃ(vF46[1] + (vF46[2] << 8));
                break;
              case 54:
                vThis5.ⵠΔⲆᐃⵠᐃΔᐃⲆ();
                break;
              case 55:
                vThis5.ⲆᐃⲆᐃΔᐃⵠΔᐃ(vF46[1]);
                break;
              case 56:
                vThis5.ⵠⵠⵠΔᐃⲆΔᐃΔ(vF46[1]);
                break;
              case 57:
                vThis5.ΔΔΔᐃⵠⲆⵠⵠΔ();
                break;
              case 58:
                vThis5.ⵠⲆⲆΔⵠΔᐃΔⲆ();
                break;
              case 59:
                vThis5.ⲆⵠⵠΔᐃⲆⵠᐃⲆ();
                break;
              case 60:
                vThis5.ᐃⵠΔΔΔᐃᐃⲆΔ();
                break;
              case 61:
                v2860.Δⵠⵠ.ⵠΔⵠⵠⲆᐃᐃ = 0.2;
                v2860.Δⵠⵠ.ᐃⵠⲆΔⲆ = 3;
                break;
              case 62:
                vThis5.ΔⵠᐃⵠⵠΔⵠⵠⲆ(new Uint16Array(v3056));
                break;
              case 63:
                vThis5.ᐃⲆᐃᐃΔⵠⵠᐃⲆ();
                break;
              case 64:
                vThis5.ⵠΔⲆⵠⵠᐃΔⵠᐃ();
                break;
              case 65:
                vThis5.ⵠΔⲆⲆΔΔΔⵠⲆ();
                break;
              case 66:
                vThis5.ΔᐃᐃᐃⲆⲆΔΔᐃ();
                break;
              case 67:
                vThis5.ᐃⲆΔⵠΔⲆΔΔⲆ(vF46[1]);
                break;
              case 68:
                vThis5.ΔᐃΔⲆᐃΔᐃⵠⲆ(vF46[1]);
                break;
              case 69:
                vThis5.ⲆⵠᐃΔⵠΔⵠ(vF46[1]);
                break;
              case 70:
                vThis5.ⵠⵠⵠΔᐃⵠⵠⵠᐃ(vF46[1]);
                break;
              case 71:
                vThis5.ᐃΔⲆᐃⵠ(vF46[1]);
            }
          }
        }
      };
      vThis5.ⵠⵠⵠⲆ.onerror = function () {
        if (v2860.reconnect.enabled) {
          vWindow.setTimeout(vThis5.timeout, 2500);
        }
      };
      this.ⵠⵠⵠⲆ.onopen = function () {
        clearTimeout(vThis5.ᐃⲆΔⲆⵠⵠᐃ);
        v2860.ΔⲆⵠᐃⲆⲆⲆ = v2860.ΔⲆⵠᐃⲆⲆⲆ || ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("token");
        ⵠⵠΔ.ⵠⲆᐃᐃⲆΔᐃ().then(p1908 => {
          vThis5.ⵠⵠⵠⲆ[v2260](vV466[v465].stringify([v2858.ᐃΔⵠⵠΔ.input.value, screen.width + 200, screen.height + 200, 52, v2860.ᐃⵠΔᐃⲆ, v2860.ⵠΔΔⵠⲆⲆᐃ, v2860.reconnect.enabled ? 1 : 0, v2858.ⵠⲆⲆΔ, v2858.ᐃⲆΔΔⲆ, v2858.ⵠᐃⲆⵠᐃ, v2858.ᐃᐃᐃⵠⲆ, v2858.ⵠᐃᐃⵠᐃ, v2858.ᐃⲆⵠΔⲆ, vUndefined5 === undefined ? 0 : vUndefined5, vUndefined4 === undefined ? 0 : vUndefined4.substring(vUndefined4.length - 50), v2262, v2860.ΔⲆⵠᐃⲆⲆⲆ, p1908, v2860.ΔⲆⵠΔᐃⲆⵠ, v2860.ΔⲆΔⵠⲆⲆΔ]));
          v2860.ΔⲆⵠᐃⲆⲆⲆ = vVVUndefined152;
          v2860.ΔⲆⵠΔᐃⲆⵠ = undefined;
          v2860.ΔⲆΔⵠⲆⲆΔ = undefined;
          v2860.ᐃᐃⲆⵠⲆᐃⵠ = vVVUndefined163;
          vThis5.ᐃⲆΔⲆⵠⵠᐃ = setTimeout(vThis5.timeout, 2000);
        });
      };
    };
  }();
  var v3057 = {
    ΔⲆⲆᐃΔ: false
  };
  var v3058 = new function () {
    this.ⲆⵠⵠᐃΔ = 0;
    this.loaded = 0;
    this.transition = 0;
    this.ⵠᐃᐃⵠᐃⲆΔ = function (p1909) {
      return p1909 / v2859.w * 100;
    };
    this.ⵠⵠⲆⵠΔᐃⵠ = function (p1910) {
      return p1910 / v2859.ᐃⵠⵠ * 100;
    };
    this.ΔⲆⲆᐃΔΔⵠ = function (p1911, p1912) {
      p1911 = this.ⵠᐃᐃⵠᐃⲆΔ(p1911) - this.ⵠΔΔⲆⲆ.x;
      return this.ⵠΔΔⲆⲆ.x + p1912 * p1911;
    };
    this.ΔΔᐃᐃⲆⵠⵠ = function (p1913, p1914) {
      p1913 = Math.abs(this.ⵠⵠⲆⵠΔᐃⵠ(p1913) - this.ⵠΔΔⲆⲆ.y);
      return this.ⵠΔΔⲆⲆ.y + p1914 * p1913;
    };
    this.sample = {};
    this.ⵠΔΔⵠᐃⲆⵠ = {};
    this.ⲆⵠⲆΔ = {};
    this.ᐃⲆⲆⵠⲆⵠⵠ = function (p1915, p1916, p1917, p1918) {
      for (var v3059 = 0; p1916.length > v3059; v3059++) {
        var v3060 = p1916[v3059];
        if (!p1915.playing(v3060)) {
          p1915.pos(p1917, p1918, -0.5, v3060);
          p1915.play(v3060);
          return vVV123;
        }
      }
      return false;
    };
    this.ᐃᐃΔ = function (p1919, p1920, p1921, p1922) {
      p1921 = this.ΔⲆⲆᐃΔΔⵠ(p1921, ΔⵠΔⵠᐃ.ⲆⵠᐃⵠⲆⲆⲆ);
      p1922 = this.ΔΔᐃᐃⲆⵠⵠ(p1922, ΔⵠΔⵠᐃ.ⲆⵠᐃⵠⲆⲆⲆ);
      console.log("HIT", p1919, p1920, p1921, p1922, ΔⵠΔⵠᐃ.ⲆⵠᐃⵠⲆⲆⲆ);
      if (p1919) {
        if (p1920 === 1) {
          this.ᐃⲆⲆⵠⲆⵠⵠ(this.ⲆⵠⲆΔ.ⵠⵠⵠⲆⵠⲆⵠ, this.sample.ⵠⵠⵠⲆⵠⲆⵠ, p1921, p1922);
        } else if (p1920 === 0) {
          this.ᐃⲆⲆⵠⲆⵠⵠ(this.ⲆⵠⲆΔ.ⵠⲆⵠⲆⵠΔⲆ, this.sample.ⵠⲆⵠⲆⵠΔⲆ, p1921, p1922);
        }
      } else {
        this.ᐃⲆⲆⵠⲆⵠⵠ(this.ⲆⵠⲆΔ.ᐃΔᐃᐃⵠ, this.sample.ᐃΔᐃᐃⵠ, p1921, p1922);
      }
    };
    this.ⵠΔΔⲆⲆ = {
      x: 0,
      y: 0
    };
    this.ΔⵠⲆΔΔᐃⲆ = {
      x: 0,
      y: 0
    };
    this.ⲆⵠⲆΔΔⵠⵠ = {};
    this.ⵠⲆⵠⲆ = [];
    this.ᐃΔⲆⵠΔ = function (p1923, p1924) {
      for (var v3061 in this.ⲆⵠⲆΔΔⵠⵠ) {
        var v3062 = this.ⲆⵠⲆΔΔⵠⵠ[v3061];
        v3062.check(p1923);
        if (v3062.ΔᐃᐃΔᐃΔΔ) {
          if (v2859.ⲆⵠΔΔΔ.now < 460000) {
            v3062.ᐃΔᐃᐃⲆ();
          }
          if (p1924) {
            v3062.ⵠΔᐃ(p1923, this.ⵠΔΔⲆⲆ);
          }
          if (this.transition) {
            v3062.transition();
          }
        }
      }
      this.transition &&= 0;
    };
    this.ΔΔΔⵠⵠⲆΔΔⲆ = function () {
      var v3063 = [];
      for (var v3064 = 0; this.ⵠⲆⵠⲆ.length > v3064; v3064++) {
        if ((v3067 = this.ⵠⲆⵠⲆ[v3064]).ᐃΔᐃΔᐃΔⲆ) {
          v3063.push(v3064);
        } else if (!v3067.ᐃΔᐃΔᐃΔⲆ && !v2859.ᐃΔⵠⲆⵠ[v3067.ᐃᐃⲆⵠ]) {
          v3067.ⵠΔⵠᐃⲆⲆⵠ();
          v3063.push(v3064);
        }
      }
      var v3065 = v2859.ⲆⵠΔ[0];
      var v3066 = 0;
      for (v3064 = 0; v3065.length > v3064 && v3066 < v3063.length; v3064++) {
        var v3067 = v3065[v3064];
        if ((v2859.mode != 1 || v2859.ⵠⲆⵠⲆ[v3067.id].ᐃΔⵠⵠΔ !== "spectator") && v3067.ΔΔΔΔⲆ === -1 && v2860.ᐃᐃⲆⵠ !== v3067.ᐃᐃⲆⵠ) {
          this.ⵠⲆⵠⲆ[v3063[v3066]].ⵠⵠΔⵠᐃ(v3067.ᐃᐃⲆⵠ);
          v3066++;
        }
      }
    };
    this.ᐃΔⵠⵠΔⲆⲆⵠᐃ = function () {
      this.ΔΔΔⵠⵠⲆΔΔⲆ();
      for (var v3068 = 0; this.ⵠⲆⵠⲆ.length > v3068; v3068++) {
        var v3069 = this.ⵠⲆⵠⲆ[v3068];
        if (!v3069.ᐃΔᐃΔᐃΔⲆ && v3069.check()) {
          v3069.ⵠΔᐃ();
        }
      }
    };
    this.ᐃΔⲆΔⲆΔⲆⵠⲆ = function (p1925) {
      if (this.ΔⵠⲆΔΔᐃⲆ.x === p1925.x && this.ΔⵠⲆΔΔᐃⲆ.y === p1925.y) {
        return 0;
      } else {
        this.ΔⵠⲆΔΔᐃⲆ.x = p1925.x;
        this.ΔⵠⲆΔΔᐃⲆ.y = p1925.y;
        this.ⵠΔΔⲆⲆ.x = this.ⵠᐃᐃⵠᐃⲆΔ(p1925.x);
        this.ⵠΔΔⲆⲆ.y = this.ⵠⵠⲆⵠΔᐃⵠ(p1925.y);
        Howler.pos(this.ⵠΔΔⲆⲆ.x, this.ⵠΔΔⲆⲆ.y, 0);
        return 1;
      }
    };
    this.ᐃΔᐃⲆᐃᐃᐃΔΔ = function () {
      if (this.ⲆⵠⵠᐃΔ && this.loaded) {
        var v3070 = v2859.ᐃΔⵠⲆⵠ[v2860.ᐃᐃⲆⵠ];
        if (v3070) {
          v3070.ΔΔΔΔⲆ = 0;
          var v3071 = this.ᐃΔⲆΔⲆΔⲆⵠⲆ(v3070);
          if (v2859.mode !== 2 && v2859.mode !== 5) {
            this.ᐃΔⲆⵠΔ(v3070, v3071);
          }
          this.ᐃΔⵠⵠΔⲆⲆⵠᐃ();
        }
      }
    };
    this.ⲆⵠⲆΔᐃᐃᐃⵠⲆ = function () {
      for (var v3072 in v2823) {
        var v3073 = v2823[v3072];
        if (typeof v3073 === "object" && v3073.path) {
          v3073.ΔⲆⵠⲆⵠ = new Howl({
            src: v3073.path,
            volume: 0,
            sprite: v3073.ⵠΔ
          });
        }
        for (var v3074 in v3073.sample) {
          var v3075 = v3073.sample[v3074];
          var v3076 = [];
          console.log(vVVVUndefined172);
          for (var v3077 = 0; v3077 < v3075; v3077++) {
            var v3078 = v3073.ΔⲆⵠⲆⵠ.play(v3074);
            v3073.ΔⲆⵠⲆⵠ.stop(v3078);
            v3073.ΔⲆⵠⲆⵠ.on("fade", function (p1926) {
              if (!this.volume(p1926)) {
                console.log(vVVVVUndefined173, vVVVVUndefined1722);
                this.stop(p1926);
              }
            }, v3078);
            v3076.push(v3078);
          }
          if (v3076.length > 1) {
            v3058.sample[v3074] = v3076;
          } else {
            v3058.sample[v3074] = v3076[0];
          }
          v3058.ⲆⵠⲆΔ[v3074] = v3073.ΔⲆⵠⲆⵠ;
        }
      }
    };
    this.ᐃΔⲆⲆᐃᐃᐃ = function (p1927, p1928, p1929) {
      for (var v3079 = 0; p1927.length > v3079; v3079++) {
        p1928.volume(p1929, p1927[v3079]);
      }
    };
    this.ⲆΔᐃⲆᐃⲆᐃ = function (p1930, p1931, p1932, p1933, p1934, p1935) {
      var vP1930 = p1930;
      for (var v3080 = 0; v3080 < p1932; v3080++) {
        var v3081 = vP1930[v3080] = [];
        for (ᐃᐃΔⲆ = 0; ᐃᐃΔⲆ < p1933; ᐃᐃΔⲆ++) {
          v3081[ᐃᐃΔⲆ] = v3058.sample[p1934 + ᐃᐃΔⲆ][v3080];
          p1931.ΔⲆⵠⲆⵠ.volume(p1935, v3081[ᐃᐃΔⲆ]);
        }
      }
    };
    this.ⵠⵠΔⵠᐃ = function () {
      v3058.ⲆⵠⲆΔᐃᐃᐃⵠⲆ();
      v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃΔⲆΔΔΔᐃ = [];
      v3058.ⵠΔΔⵠᐃⲆⵠ.ⵠΔⵠⲆΔ = [];
      v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃⲆΔⲆΔ = [];
      v3058.ⲆΔᐃⲆᐃⲆᐃ(v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃΔⲆΔΔΔᐃ, v2823.ⲆⵠᐃΔⲆⵠⲆ, 8, 3, "p", 0.15);
      v3058.ⲆΔᐃⲆᐃⲆᐃ(v3058.ⵠΔΔⵠᐃⲆⵠ.ⵠΔⵠⲆΔ, v2823.ᐃΔⲆⵠΔΔⲆ, 8, 4, "w", 0.15);
      v3058.ⲆΔᐃⲆᐃⲆᐃ(v3058.ⵠΔΔⵠᐃⲆⵠ.ᐃⲆΔⲆΔ, v2823.ⲆΔΔᐃⲆⵠΔ, 8, 3, "d", 0.09);
      v3058.ᐃΔⲆⲆᐃᐃᐃ(v3058.sample.ᐃΔᐃᐃⵠ, v3058.ⲆⵠⲆΔ.ᐃΔᐃᐃⵠ, 0.15);
      v3058.ᐃΔⲆⲆᐃᐃᐃ(v3058.sample.ⵠⲆⵠⲆⵠΔⲆ, v3058.ⲆⵠⲆΔ.ⵠⲆⵠⲆⵠΔⲆ, 0.2);
      v3058.ᐃΔⲆⲆᐃᐃᐃ(v3058.sample.ⵠⵠⵠⲆⵠⲆⵠ, v3058.ⲆⵠⲆΔ.ⵠⵠⵠⲆⵠⲆⵠ, 1);
      v3058.ⲆⵠⲆΔΔⵠⵠ.ᐃⲆⵠⲆΔᐃΔᐃΔ = new f515(12, this.sample.ΔΔⲆΔⵠᐃΔ, this.sample.ⲆⲆⵠᐃⵠᐃᐃ, 5000, 0.05, 0.4, v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ, 3000, {
        x: v594.ΔⲆᐃⵠⲆᐃⵠ,
        y: v594.ᐃⵠᐃⵠΔᐃΔ,
        w: v2859.w,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      }, {
        x: v594.ΔⲆᐃⵠⲆᐃⵠ - 2300,
        y: v594.ᐃⵠᐃⵠΔᐃΔ - 4000,
        w: v2859.w,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      }, {
        x: v594.ΔⲆᐃⵠⲆᐃⵠ - 1500,
        y: v594.ᐃⵠᐃⵠΔᐃΔ - 2000,
        w: v2859.w,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      });
      v3058.ⲆⵠⲆΔΔⵠⵠ.ⲆⵠⲆΔⲆⵠⵠⵠΔ = new f515(12, this.sample.ⵠⵠⲆⵠᐃΔᐃ, this.sample.ⵠΔΔⵠⲆΔΔ, 5000, 0.03, 0.25, v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ, 3000, {
        x: 0,
        y: v594.ᐃⵠᐃⵠΔᐃΔ + 800,
        w: v594.ΔⲆᐃⵠⲆᐃⵠ - 2300,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      }, {
        x: -100,
        y: v594.ᐃⵠᐃⵠΔᐃΔ - 300,
        w: v594.ΔⲆᐃⵠⲆᐃⵠ - 100,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      }, {
        x: -100,
        y: v594.ᐃⵠᐃⵠΔᐃΔ + 400,
        w: v594.ΔⲆᐃⵠⲆᐃⵠ - 1400,
        ᐃⵠⵠ: v2859.ᐃⵠⵠ
      });
      v3058.ⲆⵠⲆΔΔⵠⵠ.ΔᐃⲆⲆΔⲆᐃ = new f515(12, this.sample.ⵠⲆᐃⲆᐃⵠᐃ, this.sample.ΔᐃⲆⲆⲆᐃⵠ, 5000, 0.01, 0.22, v2823.ᐃᐃⵠᐃᐃᐃΔ.ΔⲆⵠⲆⵠ, 3000, {
        x: -100,
        y: -100,
        w: v2859.w + 200,
        ᐃⵠⵠ: v594.ᐃⵠᐃⵠΔᐃΔ - 1000
      }, {
        x: -100,
        y: -100,
        w: v2859.w + 200,
        ᐃⵠⵠ: v594.ᐃⵠᐃⵠΔᐃΔ + 600
      }, {
        x: -100,
        y: -100,
        w: v2859.w + 200,
        ᐃⵠⵠ: v594.ᐃⵠᐃⵠΔᐃΔ + 100
      });
      for (var v3082 = 0; v3082 < 8; v3082++) {
        v3058.ⵠⲆⵠⲆ[v3082] = new f520(v3082);
      }
      v3058.ⵠⲆⵠⲆ[0].ⵠⵠΔⵠᐃ(v2860.ᐃᐃⲆⵠ);
      v3058.loaded = 1;
    };
    this.ⲆⲆⵠⵠⵠΔⵠⲆΔ = function () {
      if (!this.transition && v2859.ⲆⵠΔΔΔ.now < 460000) {
        this.transition = 1;
      }
    };
    this.ⵠᐃⲆᐃⵠ = function () {
      if (this.ⲆⵠⵠᐃΔ && this.loaded) {
        for (var v3083 in v3058.sample) {
          var v3084 = v3058.sample[v3083];
          if (typeof v3084 === "object") {
            for (var v3085 = 0; v3085 < v3084.length; v3085++) {
              v3058.ⲆⵠⲆΔ[v3083].stop(v3084[v3085]);
            }
          } else {
            v3058.ⲆⵠⲆΔ[v3083].stop(v3084);
          }
        }
        for (v3085 = 0; v3058.ⵠⲆⵠⲆ.length > v3085; v3085++) {
          v3058.ⵠⲆⵠⲆ[v3085].ⵠΔⵠᐃⲆⲆⵠ();
        }
      }
    };
    this.select = function () {
      if (v3058.ⲆⵠⵠᐃΔ) {
        v3058.ⵠᐃⲆᐃⵠ();
      } else {
        if (!v3058.loaded) {
          v3058.ⵠⵠΔⵠᐃ();
        }
        v3058.ⵠⲆⵠⲆ[0].ᐃᐃⲆⵠ = v2860.ᐃᐃⲆⵠ;
        v3058.ⵠⲆⵠⲆ[0].ᐃΔᐃΔᐃΔⲆ = 0;
        v3058.ⲆⲆⵠⵠⵠΔⵠⲆΔ();
      }
      v3058.ⲆⵠⵠᐃΔ = !v3058.ⲆⵠⵠᐃΔ;
    };
  }();
  var v3086 = new function () {
    this.ᐃⵠΔⲆΔΔΔ = function () {
      this.ᐃⵠⲆΔᐃ = 81;
      this.ΔⵠⵠΔΔ = 68;
      this.ᐃᐃΔΔⲆ = 90;
      this.ΔⵠᐃⲆΔⵠΔ = 83;
    };
    this.ΔⵠᐃᐃΔΔⲆ = function () {
      this.ᐃⵠⲆΔᐃ = 65;
      this.ΔⵠⵠΔΔ = 68;
      this.ᐃᐃΔΔⲆ = 87;
      this.ⵠⵠⲆΔⲆ = 83;
    };
    this.ⲆᐃⵠⲆΔ = 0;
    this.ΔⵠᐃⲆΔⵠΔ = 1;
    this.ᐃⵠⵠⲆΔⵠᐃ = 49;
    this.ΔⲆⵠΔⲆⵠᐃ = 50;
    this.ⲆⵠⵠⵠⲆᐃⲆ = 51;
    this.ᐃᐃΔᐃΔⲆᐃ = 52;
    this.ᐃⵠΔᐃⵠᐃΔᐃΔ = 53;
    this.ⲆⲆⲆᐃᐃⵠⵠ = 17;
    this.ⵠΔⲆⵠⲆⲆΔ = 37;
    this.ᐃΔᐃⲆⵠᐃΔ = 39;
    this.ΔⲆⵠΔΔⲆⲆ = 38;
    this.ᐃᐃⲆⵠᐃⵠᐃ = 40;
    this.ⲆΔⵠᐃⲆΔᐃ = 32;
    this.ⵠⲆⲆⲆⵠᐃΔ = 82;
    this.ᐃΔᐃᐃⵠᐃⵠ = 71;
    this.ⵠⲆᐃⵠⲆΔᐃ = 86;
    this.ᐃⲆΔᐃΔΔᐃ = 66;
    this.ΔⵠᐃᐃΔΔⲆ();
    this.keys = new Array(255);
    for (var v3087 = 0; v3087 < 255; v3087++) {
      this.keys[v3087] = this.ⲆᐃⵠⲆΔ;
    }
    this.up = function (p1936) {
      var v3088 = Math.min(p1936.charCode || p1936.keyCode, 255);
      this.keys[v3088] = this.ⲆᐃⵠⲆΔ;
    };
    this.down = function (p1937) {
      var v3089 = Math.min(p1937.charCode || p1937.keyCode, 255);
      if (this.ᐃⵠⲆΔᐃ == v3089 || this.ⵠΔⲆⵠⲆⲆΔ == v3089) {
        this.Δⵠᐃⵠⵠⵠⵠ();
      } else if (v3089 == this.ᐃᐃΔΔⲆ || this.ΔⲆⵠΔΔⲆⲆ == v3089) {
        this.ⲆⲆⲆⲆΔⲆⲆ();
      } else if (this.ΔⵠᐃⲆΔⵠΔ == v3089 || this.ⲆⲆᐃⵠⲆⵠΔⵠᐃ == v3089) {
        this.ⲆΔⵠᐃΔⲆᐃ();
      } else if (this.ΔⵠⵠΔΔ == v3089 || v3089 == this.ᐃΔᐃⲆⵠᐃΔ) {
        this.ΔⲆⲆⵠⲆⵠⵠ();
      }
      this.keys[v3089] = this.ΔⵠᐃⲆΔⵠΔ;
      return v3089;
    };
    this.Δⵠᐃⵠⵠⵠⵠ = function () {
      this.keys[this.ΔⵠⵠΔΔ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃΔᐃⲆⵠᐃΔ] = this.ⲆᐃⵠⲆΔ;
    };
    this.ΔⲆⲆⵠⲆⵠⵠ = function () {
      this.keys[this.ᐃⵠⲆΔᐃ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ⵠΔⲆⵠⲆⲆΔ] = this.ⲆᐃⵠⲆΔ;
    };
    this.ⲆΔⵠᐃΔⲆᐃ = function () {
      this.keys[this.ᐃᐃΔΔⲆ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ΔⲆⵠΔΔⲆⲆ] = this.ⲆᐃⵠⲆΔ;
    };
    this.ⲆⲆⲆⲆΔⲆⲆ = function () {
      this.keys[this.ⵠⵠⲆΔⲆ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃᐃⲆⵠᐃⵠᐃ] = this.ⲆᐃⵠⲆΔ;
    };
    this.ᐃᐃⲆⵠᐃᐃⲆ = function () {
      this.keys[this.ΔⵠⵠΔΔ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃΔᐃⲆⵠᐃΔ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃⵠⲆΔᐃ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ⵠΔⲆⵠⲆⲆΔ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃᐃΔΔⲆ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ΔⲆⵠΔΔⲆⲆ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ⵠⵠⲆΔⲆ] = this.ⲆᐃⵠⲆΔ;
      this.keys[this.ᐃᐃⲆⵠᐃⵠᐃ] = this.ⲆᐃⵠⲆΔ;
    };
    this.ⵠΔᐃΔⲆⲆᐃ = function () {
      return this.keys[this.ᐃⵠⲆΔᐃ] || this.keys[this.ⵠΔⲆⵠⲆⲆΔ];
    };
    this.ΔⵠⲆΔⲆᐃΔ = function () {
      return this.keys[this.ΔⵠⵠΔΔ] || this.keys[this.ᐃΔᐃⲆⵠᐃΔ];
    };
    this.ⲆⵠᐃᐃΔⵠⲆ = function () {
      return this.keys[this.ᐃᐃΔΔⲆ] || this.keys[this.ΔⲆⵠΔΔⲆⲆ];
    };
    this.ⵠᐃᐃⵠⲆᐃΔ = function () {
      return this.keys[this.ⵠⵠⲆΔⲆ] || this.keys[this.ᐃᐃⲆⵠᐃⵠᐃ];
    };
    this.ᐃⵠⵠΔⲆΔⵠⲆΔ = function () {
      return this.keys[this.ⲆⲆⲆᐃᐃⵠⵠ];
    };
    this.ⲆΔΔᐃᐃⲆⵠⲆΔ = function () {
      return this.keys[this.ᐃⵠⵠⲆΔⵠᐃ];
    };
    this.ⵠⵠΔⲆΔᐃⵠⵠΔ = function () {
      return this.keys[this.ΔⲆⵠΔⲆⵠᐃ];
    };
    this.ᐃⲆᐃΔΔⲆΔⵠᐃ = function () {
      return this.keys[this.ⲆⵠⵠⵠⲆᐃⲆ];
    };
    this.ΔⵠΔΔΔᐃⵠⲆⵠ = function () {
      return this.keys[this.ᐃᐃΔᐃΔⲆᐃ];
    };
    this.ΔⲆⵠⲆᐃᐃΔⵠⵠ = function () {
      return this.keys[this.ⲆΔⵠᐃⲆΔᐃ];
    };
    this.ⲆᐃⵠⲆⲆᐃⵠⲆᐃ = function () {
      return this.keys[this.ⵠⲆⲆⲆⵠᐃΔ];
    };
    this.ⵠΔⲆᐃΔⵠⲆⵠⵠ = function () {
      return this.keys[this.ᐃΔᐃᐃⵠᐃⵠ];
    };
    this.ᐃΔⵠᐃΔⲆⲆᐃⲆ = function () {
      return this.keys[this.ⵠⲆᐃⵠⲆΔᐃ];
    };
    this.ⲆᐃⵠᐃⵠⵠⵠᐃΔ = function () {
      return this.keys[this.ᐃⲆΔᐃΔΔᐃ];
    };
  }();
  var v3090 = new function () {
    this.ΔⵠᐃⲆΔⵠΔ = 0;
    this.ⲆᐃⵠⲆΔ = 1;
    this.IDLE = 2;
    this.ΔⵠⵠⲆΔᐃⲆ = 0;
    this.ΔⲆΔᐃⲆⵠΔⵠⲆ = 1;
    this.ΔΔⲆΔ = {
      x: 0,
      y: 0
    };
    this.ΔΔΔᐃΔⲆᐃ = 0;
    this.ΔⵠΔⵠᐃⲆᐃ = 0;
    this.angle = 0;
    this.state = this.IDLE;
    this.ᐃᐃⵠⲆ = this.ΔⵠⵠⲆΔᐃⲆ;
    this.down = function () {
      this.state = this.ΔⵠᐃⲆΔⵠΔ;
    };
    this.up = function () {
      this.state = this.ⲆᐃⵠⲆΔ;
    };
    this.ⵠΔᐃ = function () {
      return (this.ΔΔΔᐃΔⲆᐃ != this.ΔΔⲆΔ.x || this.ΔⵠΔⵠᐃⲆᐃ != this.ΔΔⲆΔ.y) && (this.ΔΔΔᐃΔⲆᐃ = this.ΔΔⲆΔ.x, this.ΔⵠΔⵠᐃⲆᐃ = this.ΔΔⲆΔ.y, vV12);
    };
  }();
  var v3091 = 0;
  var v3092 = 0;
  var v3093 = new function (p1938, p1939, p1940) {
    this.ⵠΔΔ = p1938;
    this.ᐃ = p1939;
    this.ⲆⲆᐃⲆΔⲆⵠ = {
      translate: {
        y: 0,
        x: 0
      },
      style: document.getElementById("loading").style,
      ⵠΔᐃ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ⲆⲆᐃⲆΔⲆⵠ.style.position = "absolute";
    this.ⲆⲆᐃⲆΔⲆⵠ.style.display = "inline-block";
    this.ⲆⲆᐃⲆΔⲆⵠ.ⵠΔᐃ();
    this.ΔⲆⲆᐃΔ = true;
    this.stop = function () {
      this.ΔⲆⲆᐃΔ = vVV164;
    };
    this.ᐃᐃⵠᐃΔᐃⲆ = {
      total: 1
    };
    var vThis6 = this;
    function f524() {}
    var v3094 = 0;
    function f525(p1941) {
      if (p1941.indexOf("normal-mode") !== -1 || p1941.indexOf("player0") !== -1) {
        return 1;
      } else if (p1941.indexOf("day-bag") !== -1 || p1941.indexOf("night-bag") !== -1 || p1941.indexOf("day-book") !== -1 || p1941.indexOf("night-book") !== -1 || p1941.indexOf("day-player") !== -1 || p1941.indexOf("night-player") !== -1 || p1941.indexOf("day-accessory") !== -1 || p1941.indexOf("night-accessory") !== -1 || p1941.indexOf("day-crate") !== -1 || p1941.indexOf("night-crate") !== -1 || p1941.indexOf("day-skin") !== -1 || p1941.indexOf("night-skin") !== -1 || p1941.indexOf("day-river") !== -1 || p1941.indexOf("night-river") !== -1 || p1941.indexOf("day-river") !== -1 || p1941.indexOf("night-river") !== -1 || p1941.indexOf("day-rock") !== -1 || p1941.indexOf("night-rock") !== -1 || p1941.indexOf("day-flower") !== -1 || p1941.indexOf("night-flower") !== -1 || p1941.indexOf("day-leaf") !== -1 || p1941.indexOf("night-leaf") !== -1 || p1941.indexOf("day-herb") !== -1 || p1941.indexOf("night-herb") !== -1 || p1941.indexOf("day-shell") !== -1 || p1941.indexOf("night-shell") !== -1 || p1941.indexOf("day-hand-skin") !== -1 || p1941.indexOf("night-hand-skin") !== -1 || p1941.indexOf("bignight") !== -1 || p1941.indexOf("bigday") !== -1 || p1941.indexOf("bigzday") !== -1 || p1941.indexOf("bigznight") !== -1 || p1941.indexOf("tutorial-box") !== -1 || p1941.indexOf("tuto-") !== -1 || p1941.indexOf("-leaderboard-") !== -1 || p1941.indexOf("-lead-") !== -1 || p1941.indexOf("day-lava-") !== -1 || p1941.indexOf("night-lava-") !== -1 || p1941.indexOf("-click.png") !== -1 || p1941.indexOf("-in.png") !== -1 || p1941.indexOf("-fog") !== -1 || p1941.indexOf("-lava") !== -1 || p1941.indexOf("pebblecompo") !== -1 || p1941.indexOf("avatar-player") !== -1) {
        return 0;
      } else {
        return 1;
      }
    }
    this.ⲆⲆⵠⲆⵠⲆᐃ = function () {
      vThis6.ⵠΔᐃ();
      if (++v3094 == 40) {
        vThis6.stop();
        f524();
        return;
      }
      vWindow.setTimeout(vThis6.ⲆⲆⵠⲆⵠⲆᐃ, 33);
    };
    this.ⵠᐃⲆᐃⵠ = function (p1942) {
      f524 = p1942;
      vThis6.ⲆⲆⵠⲆⵠⲆᐃ();
    };
    new Date().getTime();
    Object.keys(ᐃΔ).length;
    console.log(undefined, vVVVUndefined1422);
    for (var v3095 in ᐃΔ) {
      if (f525(ᐃΔ[v3095]) === 0) {
        0;
      }
    }
    console.log(undefined, vVUndefined);
    function f526() {
      if (this.ᐃᐃⲆⲆⲆᐃⵠ !== 0) {
        return this.ᐃᐃⲆⲆⲆᐃⵠ;
      } else {
        this.ᐃᐃⲆⲆⲆᐃⵠ = 2;
        this.src = this.ⵠᐃⵠⵠⵠ;
        return 0;
      }
    }
    function f527(p1943) {
      this.ᐃᐃⲆⲆⲆᐃⵠ = 1;
    }
    var v3096 = 0;
    function f528() {
      console.log(undefined);
      if (v3096 !== 1) {
        v3096 = 1;
        console.log(undefined);
        if (v761 !== f74) {
          f74();
        }
        v761();
        var v3097 = ⵠⵠΔ.ΔᐃΔⲆΔⵠΔ("server");
        if (v3097 !== null) {
          v2862.ΔΔⵠΔΔⵠΔ = 1;
          v2862.ᐃⲆⵠⲆᐃ = [{
            nu: 0,
            m: 100,
            i: "server" + v3097 + ".starve.io",
            p: 443,
            a: v3097,
            ssl: 1
          }];
        }
        v2862.ΔⲆᐃΔᐃⵠⲆΔᐃ();
        setTimeout(p1940, 100);
      }
    }
    function f529() {
      let vF47 = function () {
        v2862.ⵠΔΔⵠⲆᐃΔ(f528);
      };
      if (document.fonts && document.fonts.check) {
        if (document.fonts.check("1em Baloo Paaji")) {
          setTimeout(vF47, 100);
        } else {
          setTimeout(f529, 100);
        }
      } else {
        setTimeout(vF47, 1000);
      }
    }
    function f530() {
      this.ⵠⲆⵠⲆᐃⲆⲆ++;
      console.warn(`Image (${this.src}) failed to load, attempt ${this.ⵠⲆⵠⲆᐃⲆⲆ}`, this);
      if (this.ⵠⲆⵠⲆᐃⲆⲆ > 3) {
        console.warn("Failed to load image too many times");
      }
      var v3098 = this.ⵠⲆⵠⲆᐃⲆⲆ;
      var v3099 = this.src;
      var v3100 = f525(v3099) === 0 ? 10000 : 2000;
      setTimeout(function () {
        for (var v3101 in ⲆⵠⲆᐃⲆⲆⵠ) {
          if (v3099.indexOf(ⲆⵠⲆᐃⲆⲆⵠ[v3101]) !== -1) {
            ᐃΔ[v3101] = new Image();
            ᐃΔ[v3101].onload = f527;
            ᐃΔ[v3101].onerror = f530;
            ᐃΔ[v3101].ⵠⲆⵠⲆᐃⲆⲆ = v3098;
            ᐃΔ[v3101].src = v3099;
            break;
          }
        }
      }, v3100);
    }
    function f531(p1944) {
      for (var v3102 in ᐃΔ) {
        var v3103 = ᐃΔ[v3102];
        if (typeof v3103 === "string" && f525(v3103) === p1944) {
          ᐃΔ[v3102] = new Image();
          ᐃΔ[v3102].ᐃᐃⲆⲆⲆᐃⵠ = 0;
          ᐃΔ[v3102].ⵠⲆⵠⲆᐃⲆⲆ = 0;
          ᐃΔ[v3102].onload = f527;
          ᐃΔ[v3102].onerror = f530;
          ᐃΔ[v3102].ⵠΔⲆᐃΔᐃΔ = f526;
          ᐃΔ[v3102].ⵠᐃⵠⵠⵠ = v3103;
        }
      }
    }
    f531(1);
    f531(0);
    f156(1, "l", 20, "#000");
    f529();
    f233();
    this.ⵠΔᐃ = function () {
      this.ⲆⲆᐃⲆΔⲆⵠ.translate.x = (v408 - 500) / 2;
      this.ⲆⲆᐃⲆΔⲆⵠ.translate.y = (v410 - 150) / 2;
      var v3104 = 2500 / (40 - v3094 + 1) - 48;
      this.ⲆⲆᐃⲆΔⲆⵠ.translate.y -= v3104;
      this.ⲆⲆᐃⲆΔⲆⵠ.ⵠΔᐃ();
    };
    this.ⲆⲆᐃⲆΔⲆⵠ.ⵠΔᐃ();
    this.ⲆⵠⲆᐃ = function () {
      try {
        f277();
      } catch (e) {}
      this.ⵠΔᐃ();
    };
  }(v405, v407, function () {
    f238();
    v3057 = new f506(v405, v407);
    (v2858 = new f488(v405, v407)).ᐃⵠⲆᐃⵠΔⵠΔⲆ();
    v2861 = new f503(v405, v407);
    v2859 = new f447();
    v2860 = new f482();
    v3093.ⵠᐃⲆᐃⵠ(function () {
      v3093.ⲆⲆᐃⲆΔⲆⵠ.style.display = "none";
      v2858.ⲆⵠⵠᐃΔ();
    });
  });
  function f532() {
    try {
      vWindow.Widget.adsRefresh();
    } catch (e) {}
  }
  vWindow.onbeforeunload = function () {
    if (v3057.ΔⲆⲆᐃΔ) {
      return "Are you sure you want quit starve.io ;-; ?";
    }
  };
  f51();
  (function f533(p1945) {
    vWindow.requestAnimationFrame(f533);
    v3091 = (p1945 - v3092) / 1000;
    v3092 = p1945;
    v3091 = v3091 > 1 ? 1 : v3091;
    if (v3057.ΔⲆⲆᐃΔ) {
      v3057.ⲆⵠⲆᐃ();
    } else {
      v407.clearRect(0, 0, v408, v410);
      if (v3093.ΔⲆⲆᐃΔ) {
        v3093.ⲆⵠⲆᐃ();
      } else if (v2858.ΔⲆⲆᐃΔ) {
        v2858.ⲆⵠⲆᐃ();
      } else if (v2861.ΔⲆⲆᐃΔ) {
        v2861.ⲆⵠⲆᐃ();
      }
    }
  })(0);
  var v3105 = 0;
  function f534() {
    v3106.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", vVVVV12232);
    v3106.send();
  }
  var v3106 = new XMLHttpRequest();
  function f535(p1946, p1947, p1948, p1949) {
    const v3107 = (0 << (p1946 >> 16 & 255)) + (8 << (p1946 >> 24 & 255)) + (16 << (p1946 >> 8 & 255)) + (24 << (p1946 & 255));
    const v3108 = (63728 + p1947) % 65361;
    const v3109 = (0 << (p1948 >> 8 & 255)) + (24 << (p1948 >> 24 & 255)) + (8 << (p1948 >> 16 & 255)) + (16 << (p1948 & 255));
    const v3110 = ~(p1949 & 47670) & 47670 | ~(p1949 & 47670) & p1949;
    return (1013904223 + (40768 + (f64(v3107, v3108, v3109, v3110) ^ f434(v3109, v3110, v3107, v3108))) * 1664525) % 4294967296;
  }
  v3106.onreadystatechange = function () {
    if (this.readyState === 4) {
      this.status;
    }
  };
  (function f536() {
    const v3111 = {
      ᐃⵠΔᐃᐃⵠᐃΔⲆΔⵠ: 0
    };
    let v3112 = 0;
    for (let v3113 in v3111) {
      v3112 = v3113;
    }
    const v3114 = [];
    for (let v3115 = 0; v3115 < 12; v3115++) {
      v3114.push(vWindow.Math.floor(1 + vWindow.Math.random() * 10));
    }
    let v3116 = "for (let " + v3112 + " = 0 ; " + v3112 + " < " + v3114[0] + " ; " + v3112 + "++) {";
    for (let v3117 = 0; v3117 < v3114[1]; v3117++) {
      v3116 += v3114[v3117] + ";debugger;";
    }
    for (let v3118 = 0; v3118 < v3114[2]; v3118++) {
      v3116 += "debugger;";
    }
    v3116 += "}";
    const v3119 = new vWindow.Function(v3116);
    vWindow.setTimeout(f536, 10000);
    v3119();
  })();
  var v3120 = "https://token.starve.io/";
  var v3121 = "https://token2.starve.io/";
  var v3122 = 0;
  var v3123 = 1;
  var v3124 = 4;
  var vVVVVUndefined17 = vVVVUndefined17;
  var vUndefined4 = undefined;
  var vUndefined5 = undefined;
  var v3125 = 0;
  vWindow.ⲆⵠΔΔⲆⲆᐃ = function () {
    v3125 = 1;
  };
  var v3126 = {
    ⵠⵠΔⵠΔᐃᐃᐃᐃΔⲆ: "ACCESS_TOKEN"
  };
  var v3127 = document.createElement("script");
  v3127.type = "text/javascript";
  v3127.async = true;
  v3127.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  v3127.addEventListener("load", function (p1950) {
    vWindow.XPayStationWidget.init(v3126);
    vWindow.XPayStationWidget.on("status-done", f544);
  }, false);
  document.getElementsByTagName("head")[0].appendChild(v3127);
  vWindow.fbAsyncInit = function () {
    f545();
    console.log(undefined);
  };
  (function (p1951, p1952, p1953) {
    var v3128;
    var v3129 = p1951.getElementsByTagName(p1952)[0];
    if (!p1951.getElementById(p1953)) {
      (v3128 = p1951.createElement(p1952)).id = p1953;
      v3128.src = "https://connect.facebook.net/en_US/sdk.js";
      v3129.parentNode.insertBefore(v3128, v3129);
    }
  })(document, "script", "facebook-jssdk");
  var vVUndefined17 = vUndefined;
  var vVVVUndefined152 = vVVUndefined152;
  function f537() {
    vWindow.gapi.auth2.init({
      client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
      scope: "https://www.googleapis.com/auth/userinfo.profile"
    }).then(p1954 => {
      (vVUndefined17 = p1954).isSignedIn.listen(f538);
      vVUndefined17.currentUser.listen(f539);
      if (vVUndefined17.isSignedIn.get()) {
        vVUndefined17.signIn();
      }
      f540();
    });
  }
  function f538(p1955) {}
  function f539(p1956) {
    if (vUndefined4 === undefined && vVVVUndefined152 !== vVVUndefined142 && (vUndefined4 = vVVVUndefined152.getAuthResponse().id_token) !== vVVVVUndefined1722) {
      vVVVVUndefined17 = v3122;
      vUndefined5 = vVVVUndefined152.getBasicProfile().getId();
      vWindow.ⲆⵠΔΔⲆⲆᐃ();
      return;
    }
    if (vVVVUndefined172 !== p1956 && vVVVV12222 === p1956.isSignedIn()) {
      vUndefined5 = (vVVVUndefined152 = p1956).id;
      vUndefined5 = vVVVUndefined152.getBasicProfile().getId();
      vUndefined4 = vVVVUndefined152.getAuthResponse().id_token;
      vVVVVUndefined17 = v3122;
      vWindow.ⲆⵠΔΔⲆⲆᐃ();
    }
  }
  function f540() {
    if (vVUndefined17) {
      vVVVUndefined152 = vVUndefined17.currentUser.get();
    }
  }
  function f541() {
    if (!(v2858.ᐃᐃᐃᐃᐃ < 300) || !(v2858.ⵠΔⵠⵠⲆᐃΔ > 0)) {
      var v3130 = document.getElementById("account_nickname_input").value.trim();
      document.getElementById("account_nickname_input").value = v3130;
      if (!(v3130.length < 1) && !(v3130.length > 20)) {
        var v3131 = new XMLHttpRequest();
        v3131.open("GET", v3120 + "changeNickname?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&nickname=" + encodeURIComponent(v3130));
        v3131.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3131.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200 && v3131.responseText !== "0") {
            var vNumber20 = Number(v3131.responseText);
            if (vNumber20 > 0) {
              v2858.ᐃᐃᐃᐃᐃ -= vNumber20;
            }
            v2858.ⵠΔⵠⵠⲆᐃΔ = 1;
            v2858.ᐃⵠⵠᐃ(v2858.ᐃΔᐃⲆᐃ);
          }
        };
        v3131.send();
      }
    }
  }
  function f542(p1957) {
    if (vUndefined5) {
      var v3132 = new XMLHttpRequest();
      v3132.open("GET", v3120 + "xsolla?userid=" + vUndefined5 + "&item=" + p1957);
      v3132.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3132.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3132.responseText !== "0") {
          v3126.access_token = v3132.responseText;
          vWindow.XPayStationWidget.init(v3126);
          vWindow.XPayStationWidget.open();
        }
      };
      v3132.send();
    }
  }
  function f543(p1958, p1959, p1960, p1961) {
    p1958 = p1958 === vVUndefined6 ? v2858.ⵠΔⲆⲆᐃⲆᐃ : p1958;
    p1959 = p1959 === undefined ? v2858.ᐃⲆΔΔΔΔᐃ : p1959;
    p1960 = p1960 === undefined ? v2858.ᐃⲆΔⵠᐃⵠᐃ : p1960;
    p1961 = vVVUndefined163 === p1961 ? v2858.ΔᐃᐃᐃⵠⲆⵠ : p1961;
    if (p1958 !== v2858.ⵠΔⲆⲆᐃⲆᐃ || p1959 !== v2858.ᐃⲆΔΔΔΔᐃ || p1960 !== v2858.ᐃⲆΔⵠᐃⵠᐃ || v2858.ΔᐃᐃᐃⵠⲆⵠ !== p1961) {
      v2858.ⵠΔⲆⲆᐃⲆᐃ = p1958;
      v2858.ᐃⲆΔΔΔΔᐃ = p1959;
      v2858.ᐃⲆΔⵠᐃⵠᐃ = p1960;
      v2858.ΔᐃᐃᐃⵠⲆⵠ = p1961;
      if (p1961 === v2858.ⵠⲆⲆⵠⲆⲆᐃ) {
        p1961 = "0";
      } else if (v2858.ΔⵠⵠᐃⲆᐃᐃ === p1961) {
        p1961 = "1";
      } else if (v2858.ⲆᐃⲆⵠᐃⵠΔ === p1961) {
        p1961 = "2";
      } else if (p1961 === v2858.ᐃⵠⵠΔΔΔⵠ) {
        p1961 = "3";
      } else if (v2858.ⵠΔᐃⲆⵠΔΔ === p1961) {
        p1961 = "4";
      } else if (v2858.ⵠᐃᐃΔⵠⲆⵠ === p1961) {
        p1961 = "5";
      } else if (v2858.ΔΔᐃᐃⲆᐃᐃ === p1961) {
        p1961 = "6";
      }
      if (v2858.ⲆⲆⵠᐃⵠΔⵠ === p1959) {
        p1959 = "total";
      } else if (p1959 === v2858.ⲆⵠⵠᐃΔᐃⵠ) {
        p1959 = "normal";
      } else if (p1959 === v2858.ⲆⲆΔⵠᐃΔᐃ) {
        p1959 = "zombie";
      } else if (p1959 === v2858.ⲆΔⲆⵠΔⵠᐃ) {
        p1959 = "vampire";
      } else if (v2858.ⵠΔⵠⵠᐃⵠⵠ === p1959) {
        p1959 = "forest";
      }
      if (p1958 === v2858.ⵠⲆᐃᐃⲆⲆΔ) {
        p1958 = "all";
      }
      if (p1958 === v2858.ΔⲆⵠⲆΔᐃΔ) {
        p1958 = "week";
      }
      if (v2858.ΔᐃⵠⵠⲆᐃᐃ === p1958) {
        p1958 = "today";
      }
      if (p1960 === v2858.ΔⲆΔⲆΔⵠᐃ) {
        p1960 = "kill";
      } else if (v2858.ⲆΔⲆⵠⲆΔⵠ === p1960) {
        p1960 = "score";
      } else if (v2858.ⲆⲆᐃΔᐃⲆᐃ === p1960) {
        p1960 = "time";
      }
      var v3133 = new XMLHttpRequest();
      v3133.open("GET", v3120 + "leaderboard?range=" + p1958 + "&mode=" + p1959 + "&sort=" + p1960 + "&season=" + p1961);
      v3133.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3133.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3133.responseText !== "0") {
          for (var v3134 = JSON.parse(v3133.responseText), v3135 = "", v3136 = 0; v3134.length > v3136; v3136++) {
            ᐃΔⲆΔⲆ = v3134[v3136];
            var v3137 = ᐃΔⲆΔⲆ[1];
            try {
              if (v3137.indexOf("Starver#") === -1) {
                v3137 = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(v3137)));
              }
            } catch (e) {}
            v3135 += "<div class=\"lineLeaderboard\">";
            v3135 += "<div class=\"rank\">";
            v3135 += v3136 + 1 + "";
            v3135 += "</div>";
            v3135 += "<div class=\"name\">";
            v3135 += v3137;
            v3135 += "</div>";
            v3135 += "<div class=\"lvl\">";
            v3135 += v2858.ᐃⵠᐃⲆᐃᐃⵠ(ᐃΔⲆΔⲆ[6]) + 1 + "";
            v3135 += "</div>";
            v3135 += "<div class=\"kills\">";
            v3135 += ᐃΔⲆΔⲆ[5] + "";
            v3135 += "</div>";
            v3135 += "<div class=\"time\">";
            v3135 += ᐃΔⲆΔⲆ[4] + "";
            v3135 += "</div>";
            v3135 += "<div class=\"score\">";
            v3135 += ᐃΔⲆΔⲆ[3] + "";
            v3135 += "</div>";
            v3135 += "</div>";
          }
          document.getElementById("leaderboard").innerHTML = v3135;
        }
      };
      v3133.send();
    }
  }
  function f544() {
    var v3138 = new XMLHttpRequest();
    v3138.open("GET", v3120 + "claimBread?userid=" + vUndefined5);
    v3138.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3138.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && v3138.responseText !== "0") {
        var vNumber21 = Number(v3138.responseText);
        if (!isNaN(vNumber21)) {
          v2858.ᐃᐃᐃᐃᐃ = vNumber21;
        }
      }
    };
    v3138.send();
  }
  function f545() {
    if (vWindow.FB) {
      vWindow.FB.init({
        appId: "642017356260407",
        xfbml: true,
        cookie: true,
        version: "v15.0"
      });
    }
    if (vUndefined5 === vVVVVUndefined173) {
      (function () {
        try {
          if (vWindow.FB && vWindow.FB.getUserID()) {
            vUndefined5 = vWindow.FB.getUserID();
            if (vVUndefined14 === vUndefined4) {
              vWindow.FB.getLoginStatus(function () {
                vVVVVUndefined17 = v3123;
                vUndefined4 = vWindow.FB.getAuthResponse().accessToken;
                vWindow.ⲆⵠΔΔⲆⲆᐃ(vUndefined5);
              });
            }
          }
        } catch (e) {}
        try {
          vUndefined5 = vVVVUndefined152.getBasicProfile().getId();
        } catch (e) {}
      })();
    }
  }
  function f546(p1962, p1963) {
    if (!(v2858.ΔᐃⲆᐃⵠ > 0)) {
      if (p1963 > v2858.ᐃᐃᐃᐃᐃ) {
        v2858.ᐃⵠⵠᐃ(v2858.ᐃⲆᐃⵠⲆ);
      } else {
        v2858.ΔᐃⲆᐃⵠ = 2;
        v2858.ⵠⵠᐃΔⲆΔᐃ = 0;
        v2858.ᐃⵠⵠΔΔᐃⵠ = 100;
        var v3139 = new XMLHttpRequest();
        v3139.open("GET", v3120 + "buySpin?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&spin=" + p1962);
        v3139.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3139.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            if (v3139.responseText !== "0") {
              var v3140 = JSON.parse(v3139.responseText);
              v2858.ⵠⵠⵠΔᐃΔᐃⲆⵠ(v3140.rand * Math.PI * 2, v3140.type, v3140.id);
              v2858.ᐃᐃᐃᐃᐃ -= p1963;
            } else {
              v2858.ΔᐃⲆᐃⵠ = 0;
            }
          }
        };
        v3139.send();
      }
    }
  }
  function f547(p1964) {
    var v3141 = new XMLHttpRequest();
    v3141.open("GET", v3120 + "setRegion?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&region=" + p1964);
    v3141.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3141.onreadystatechange = function () {
      if (this.readyState === 4 && this.status === 200) {
        if (v3141.responseText !== "0") {
          v2858.ᐃⵠⵠᐃ(v2858.ΔΔⲆⲆΔᐃⲆ);
        } else {
          v2858.ᐃⵠⵠᐃ(v2858.ⲆⵠⲆⵠⵠ);
        }
      }
    };
    v3141.send();
  }
  function f548(p1965, p1966) {
    if (v2858.ᐃᐃᐃᐃᐃ < p1966) {
      v2858.ᐃⵠⵠᐃ(v2858.ᐃⲆᐃⵠⲆ);
    } else {
      var v3142 = new XMLHttpRequest();
      v3142.open("GET", v3120 + "buyKit?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&kit=" + p1965);
      v3142.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3142.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3142.responseText !== "0") {
          var v3143 = JSON.parse(v3142.responseText);
          v2858.ᐃᐃᐃᐃᐃ -= p1966;
          v2858.ⲆᐃⲆᐃᐃⵠⲆ = Date.now() + Number(v3143);
        }
      };
      v3142.send();
    }
  }
  vWindow.onload = function () {
    vWindow.gapi.load("auth2", f537);
  };
})();